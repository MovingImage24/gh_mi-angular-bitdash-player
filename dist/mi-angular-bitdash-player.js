/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 26);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(1);
var dom_1 = __webpack_require__(2);
var utils_1 = __webpack_require__(3);
/**
 * A container component that can contain a collection of child components.
 * Components can be added at construction time through the {@link ContainerConfig#components} setting, or later
 * through the {@link Container#addComponent} method. The UIManager automatically takes care of all components, i.e. it
 * initializes and configures them automatically.
 *
 * In the DOM, the container consists of an outer <div> (that can be configured by the config) and an inner wrapper
 * <div> that contains the components. This double-<div>-structure is often required to achieve many advanced effects
 * in CSS and/or JS, e.g. animations and certain formatting with absolute positioning.
 *
 * DOM example:
 * <code>
 *     <div class='ui-container'>
 *         <div class='container-wrapper'>
 *             ... child components ...
 *         </div>
 *     </div>
 * </code>
 */
var Container = (function (_super) {
    __extends(Container, _super);
    function Container(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-container',
            components: []
        }, _this.config);
        return _this;
    }
    /**
     * Adds a child component to the container.
     * @param component the component to add
     */
    Container.prototype.addComponent = function (component) {
        this.config.components.push(component);
    };
    /**
     * Removes a child component from the container.
     * @param component the component to remove
     * @returns {boolean} true if the component has been removed, false if it is not contained in this container
     */
    Container.prototype.removeComponent = function (component) {
        return utils_1.ArrayUtils.remove(this.config.components, component) != null;
    };
    /**
     * Gets an array of all child components in this container.
     * @returns {Component<ComponentConfig>[]}
     */
    Container.prototype.getComponents = function () {
        return this.config.components;
    };
    /**
     * Removes all child components from the container.
     */
    Container.prototype.removeComponents = function () {
        for (var _i = 0, _a = this.getComponents(); _i < _a.length; _i++) {
            var component = _a[_i];
            this.removeComponent(component);
        }
    };
    /**
     * Updates the DOM of the container with the current components.
     */
    Container.prototype.updateComponents = function () {
        this.innerContainerElement.empty();
        for (var _i = 0, _a = this.config.components; _i < _a.length; _i++) {
            var component = _a[_i];
            this.innerContainerElement.append(component.getDomElement());
        }
    };
    Container.prototype.toDomElement = function () {
        // Create the container element (the outer <div>)
        var containerElement = new dom_1.DOM(this.config.tag, {
            'id': this.config.id,
            'class': this.getCssClasses()
        });
        // Create the inner container element (the inner <div>) that will contain the components
        var innerContainer = new dom_1.DOM(this.config.tag, {
            'class': this.prefixCss('container-wrapper')
        });
        this.innerContainerElement = innerContainer;
        this.updateComponents();
        containerElement.append(innerContainer);
        return containerElement;
    };
    return Container;
}(component_1.Component));
exports.Container = Container;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var guid_1 = __webpack_require__(32);
var dom_1 = __webpack_require__(2);
var eventdispatcher_1 = __webpack_require__(4);
/**
 * The base class of the UI framework.
 * Each component must extend this class and optionally the config interface.
 */
var Component = (function () {
    /**
     * Constructs a component with an optionally supplied config. All subclasses must call the constructor of their
     * superclass and then merge their configuration into the component's configuration.
     * @param config the configuration for the component
     */
    function Component(config) {
        if (config === void 0) { config = {}; }
        /**
         * The list of events that this component offers. These events should always be private and only directly
         * accessed from within the implementing component.
         *
         * Because TypeScript does not support private properties with the same name on different class hierarchy levels
         * (i.e. superclass and subclass cannot contain a private property with the same name), the default naming
         * convention for the event list of a component that should be followed by subclasses is the concatenation of the
         * camel-cased class name + 'Events' (e.g. SubClass extends Component => subClassEvents).
         * See {@link #componentEvents} for an example.
         *
         * Event properties should be named in camel case with an 'on' prefix and in the present tense. Async events may
         * have a start event (when the operation starts) in the present tense, and must have an end event (when the
         * operation ends) in the past tense (or present tense in special cases (e.g. onStart/onStarted or onPlay/onPlaying).
         * See {@link #componentEvents#onShow} for an example.
         *
         * Each event should be accompanied with a protected method named by the convention eventName + 'Event'
         * (e.g. onStartEvent), that actually triggers the event by calling {@link EventDispatcher#dispatch dispatch} and
         * passing a reference to the component as first parameter. Components should always trigger their events with these
         * methods. Implementing this pattern gives subclasses means to directly listen to the events by overriding the
         * method (and saving the overhead of passing a handler to the event dispatcher) and more importantly to trigger
         * these events without having access to the private event list.
         * See {@link #onShow} for an example.
         *
         * To provide external code the possibility to listen to this component's events (subscribe, unsubscribe, etc.),
         * each event should also be accompanied by a public getter function with the same name as the event's property,
         * that returns the {@link Event} obtained from the event dispatcher by calling {@link EventDispatcher#getEvent}.
         * See {@link #onShow} for an example.
         *
         * Full example for an event representing an example action in a example component:
         *
         * <code>
         * // Define an example component class with an example event
         * class ExampleComponent extends Component<ComponentConfig> {
           *
           *     private exampleComponentEvents = {
           *         onExampleAction: new EventDispatcher<ExampleComponent, NoArgs>()
           *     }
           *
           *     // constructor and other stuff...
           *
           *     protected onExampleActionEvent() {
           *        this.exampleComponentEvents.onExampleAction.dispatch(this);
           *    }
           *
           *    get onExampleAction(): Event<ExampleComponent, NoArgs> {
           *        return this.exampleComponentEvents.onExampleAction.getEvent();
           *    }
           * }
         *
         * // Create an instance of the component somewhere
         * var exampleComponentInstance = new ExampleComponent();
         *
         * // Subscribe to the example event on the component
         * exampleComponentInstance.onExampleAction.subscribe(function (sender: ExampleComponent) {
           *     console.log('onExampleAction of ' + sender + ' has fired!');
           * });
         * </code>
         */
        this.componentEvents = {
            onShow: new eventdispatcher_1.EventDispatcher(),
            onHide: new eventdispatcher_1.EventDispatcher(),
            onHoverChanged: new eventdispatcher_1.EventDispatcher(),
        };
        // Create the configuration for this component
        this.config = this.mergeConfig(config, {
            tag: 'div',
            id: 'mi-wbc-id-' + guid_1.Guid.next(),
            cssPrefix: 'mi-wbc',
            cssClass: 'ui-component',
            cssClasses: [],
            hidden: false
        }, {});
    }
    /**
     * Initializes the component, e.g. by applying config settings.
     * This method must not be called from outside the UI framework.
     *
     * This method is automatically called by the {@link UIInstanceManager}. If the component is an inner component of
     * some component, and thus encapsulated abd managed internally and never directly exposed to the UIManager,
     * this method must be called from the managing component's {@link #initialize} method.
     */
    Component.prototype.initialize = function () {
        this.hidden = this.config.hidden;
        // Hide the component at initialization if it is configured to be hidden
        if (this.isHidden()) {
            this.hidden = false; // Set flag to false for the following hide() call to work (hide() checks the flag)
            this.hide();
        }
    };
    /**
     * Configures the component for the supplied Player and UIInstanceManager. This is the place where all the magic
     * happens, where components typically subscribe and react to events (on their DOM element, the Player, or the
     * UIInstanceManager), and basically everything that makes them interactive.
     * This method is called only once, when the UIManager initializes the UI.
     *
     * Subclasses usually overwrite this method to add their own functionality.
     *
     * @param player the player which this component controls
     * @param uimanager the UIInstanceManager that manages this component
     */
    Component.prototype.configure = function (player, uimanager) {
        var _this = this;
        this.onShow.subscribe(function () {
            uimanager.onComponentShow.dispatch(_this);
        });
        this.onHide.subscribe(function () {
            uimanager.onComponentHide.dispatch(_this);
        });
        // Track the hovered state of the element
        this.getDomElement().on('mouseenter', function () {
            _this.onHoverChangedEvent(true);
        });
        this.getDomElement().on('mouseleave', function () {
            _this.onHoverChangedEvent(false);
        });
    };
    /**
     * Releases all resources and dependencies that the component holds. Player, DOM, and UIManager events are
     * automatically removed during release and do not explicitly need to be removed here.
     * This method is called by the UIManager when it releases the UI.
     *
     * Subclasses that need to release resources should override this method and call super.release().
     */
    Component.prototype.release = function () {
        // Nothing to do here, override where necessary
    };
    /**
     * Generate the DOM element for this component.
     *
     * Subclasses usually overwrite this method to extend or replace the DOM element with their own design.
     */
    Component.prototype.toDomElement = function () {
        var element = new dom_1.DOM(this.config.tag, {
            'id': this.config.id,
            'class': this.getCssClasses()
        });
        return element;
    };
    /**
     * Returns the DOM element of this component. Creates the DOM element if it does not yet exist.
     *
     * Should not be overwritten by subclasses.
     *
     * @returns {DOM}
     */
    Component.prototype.getDomElement = function () {
        if (!this.element) {
            this.element = this.toDomElement();
        }
        return this.element;
    };
    /**
     * Merges a configuration with a default configuration and a base configuration from the superclass.
     *
     * @param config the configuration settings for the components, as usually passed to the constructor
     * @param defaults a default configuration for settings that are not passed with the configuration
     * @param base configuration inherited from a superclass
     * @returns {Config}
     */
    Component.prototype.mergeConfig = function (config, defaults, base) {
        // Extend default config with supplied config
        var merged = Object.assign({}, base, defaults, config);
        // Return the extended config
        return merged;
    };
    /**
     * Helper method that returns a string of all CSS classes of the component.
     *
     * @returns {string}
     */
    Component.prototype.getCssClasses = function () {
        var _this = this;
        // Merge all CSS classes into single array
        var flattenedArray = [this.config.cssClass].concat(this.config.cssClasses);
        // Prefix classes
        flattenedArray = flattenedArray.map(function (css) {
            return _this.prefixCss(css);
        });
        // Join array values into a string
        var flattenedString = flattenedArray.join(' ');
        // Return trimmed string to prevent whitespace at the end from the join operation
        return flattenedString.trim();
    };
    Component.prototype.prefixCss = function (cssClassOrId) {
        return this.config.cssPrefix + '-' + cssClassOrId;
    };
    /**
     * Returns the configuration object of the component.
     * @returns {Config}
     */
    Component.prototype.getConfig = function () {
        return this.config;
    };
    /**
     * Hides the component if shown.
     * This method basically transfers the component into the hidden state. Actual hiding is done via CSS.
     */
    Component.prototype.hide = function () {
        if (!this.hidden) {
            this.hidden = true;
            this.getDomElement().addClass(this.prefixCss(Component.CLASS_HIDDEN));
            this.onHideEvent();
        }
    };
    /**
     * Shows the component if hidden.
     */
    Component.prototype.show = function () {
        if (this.hidden) {
            this.getDomElement().removeClass(this.prefixCss(Component.CLASS_HIDDEN));
            this.hidden = false;
            this.onShowEvent();
        }
    };
    /**
     * Determines if the component is hidden.
     * @returns {boolean} true if the component is hidden, else false
     */
    Component.prototype.isHidden = function () {
        return this.hidden;
    };
    /**
     * Determines if the component is shown.
     * @returns {boolean} true if the component is visible, else false
     */
    Component.prototype.isShown = function () {
        return !this.isHidden();
    };
    /**
     * Toggles the hidden state by hiding the component if it is shown, or showing it if hidden.
     */
    Component.prototype.toggleHidden = function () {
        if (this.isHidden()) {
            this.show();
        }
        else {
            this.hide();
        }
    };
    /**
     * Determines if the component is currently hovered.
     * @returns {boolean} true if the component is hovered, else false
     */
    Component.prototype.isHovered = function () {
        return this.hovered;
    };
    /**
     * Fires the onShow event.
     * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
     */
    Component.prototype.onShowEvent = function () {
        this.componentEvents.onShow.dispatch(this);
    };
    /**
     * Fires the onHide event.
     * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
     */
    Component.prototype.onHideEvent = function () {
        this.componentEvents.onHide.dispatch(this);
    };
    /**
     * Fires the onHoverChanged event.
     * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
     */
    Component.prototype.onHoverChangedEvent = function (hovered) {
        this.hovered = hovered;
        this.componentEvents.onHoverChanged.dispatch(this, { hovered: hovered });
    };
    Object.defineProperty(Component.prototype, "onShow", {
        /**
         * Gets the event that is fired when the component is showing.
         * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
         * @returns {Event<Component<Config>, NoArgs>}
         */
        get: function () {
            return this.componentEvents.onShow.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "onHide", {
        /**
         * Gets the event that is fired when the component is hiding.
         * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
         * @returns {Event<Component<Config>, NoArgs>}
         */
        get: function () {
            return this.componentEvents.onHide.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "onHoverChanged", {
        /**
         * Gets the event that is fired when the component's hover-state is changing.
         * @returns {Event<Component<Config>, ComponentHoverChangedEventArgs>}
         */
        get: function () {
            return this.componentEvents.onHoverChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return Component;
}());
/**
 * The classname that is attached to the element when it is in the hidden state.
 * @type {string}
 */
Component.CLASS_HIDDEN = 'hidden';
exports.Component = Component;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Simple DOM manipulation and DOM element event handling modeled after jQuery (as replacement for jQuery).
 *
 * Like jQuery, DOM operates on single elements and lists of elements. For example: creating an element returns a DOM
 * instance with a single element, selecting elements returns a DOM instance with zero, one, or many elements. Similar
 * to jQuery, setters usually affect all elements, while getters operate on only the first element.
 * Also similar to jQuery, most methods (except getters) return the DOM instance facilitating easy chaining of method
 * calls.
 *
 * Built with the help of: http://youmightnotneedjquery.com/
 */
var DOM = (function () {
    function DOM(something, attributes) {
        this.document = document; // Set the global document to the local document field
        if (something instanceof Array) {
            if (something.length > 0 && something[0] instanceof HTMLElement) {
                var elements = something;
                this.elements = elements;
            }
        }
        else if (something instanceof HTMLElement) {
            var element = something;
            this.elements = [element];
        }
        else if (something instanceof Document) {
            // When a document is passed in, we do not do anything with it, but by setting this.elements to null
            // we give the event handling method a means to detect if the events should be registered on the document
            // instead of elements.
            this.elements = null;
        }
        else if (attributes) {
            var tagName = something;
            var element = document.createElement(tagName);
            for (var attributeName in attributes) {
                var attributeValue = attributes[attributeName];
                element.setAttribute(attributeName, attributeValue);
            }
            this.elements = [element];
        }
        else {
            var selector = something;
            this.elements = this.findChildElements(selector);
        }
    }
    Object.defineProperty(DOM.prototype, "length", {
        /**
         * Gets the number of elements that this DOM instance currently holds.
         * @returns {number} the number of elements
         */
        get: function () {
            return this.elements ? this.elements.length : 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the HTML elements that this DOM instance currently holds.
     * @returns {HTMLElement[]} the raw HTML elements
     */
    DOM.prototype.getElements = function () {
        return this.elements;
    };
    /**
     * A shortcut method for iterating all elements. Shorts this.elements.forEach(...) to this.forEach(...).
     * @param handler the handler to execute an operation on an element
     */
    DOM.prototype.forEach = function (handler) {
        this.elements.forEach(function (element) {
            handler(element);
        });
    };
    DOM.prototype.findChildElementsOfElement = function (element, selector) {
        var childElements = element.querySelectorAll(selector);
        // Convert NodeList to Array
        // https://toddmotto.com/a-comprehensive-dive-into-nodelists-arrays-converting-nodelists-and-understanding-the-dom/
        return [].slice.call(childElements);
    };
    DOM.prototype.findChildElements = function (selector) {
        var _this = this;
        var allChildElements = [];
        if (this.elements) {
            this.forEach(function (element) {
                allChildElements = allChildElements.concat(_this.findChildElementsOfElement(element, selector));
            });
        }
        else {
            return this.findChildElementsOfElement(document, selector);
        }
        return allChildElements;
    };
    /**
     * Finds all child elements of all elements matching the supplied selector.
     * @param selector the selector to match with child elements
     * @returns {DOM} a new DOM instance representing all matched children
     */
    DOM.prototype.find = function (selector) {
        var allChildElements = this.findChildElements(selector);
        return new DOM(allChildElements);
    };
    DOM.prototype.html = function (content) {
        if (arguments.length > 0) {
            return this.setHtml(content);
        }
        else {
            return this.getHtml();
        }
    };
    DOM.prototype.getHtml = function () {
        return this.elements[0].innerHTML;
    };
    DOM.prototype.setHtml = function (content) {
        if (content === undefined || content == null) {
            // Set to empty string to avoid innerHTML getting set to 'undefined' (all browsers) or 'null' (IE9)
            content = '';
        }
        this.forEach(function (element) {
            element.innerHTML = content;
        });
        return this;
    };
    /**
     * Clears the inner HTML of all elements (deletes all children).
     * @returns {DOM}
     */
    DOM.prototype.empty = function () {
        this.forEach(function (element) {
            element.innerHTML = '';
        });
        return this;
    };
    /**
     * Returns the current value of the first form element, e.g. the selected value of a select box or the text if an
     * input field.
     * @returns {string} the value of a form element
     */
    DOM.prototype.val = function () {
        var element = this.elements[0];
        if (element instanceof HTMLSelectElement || element instanceof HTMLInputElement) {
            return element.value;
        }
        else {
            // TODO add support for missing form elements
            throw new Error("val() not supported for " + typeof element);
        }
    };
    DOM.prototype.attr = function (attribute, value) {
        if (arguments.length > 1) {
            return this.setAttr(attribute, value);
        }
        else {
            return this.getAttr(attribute);
        }
    };
    DOM.prototype.getAttr = function (attribute) {
        return this.elements[0].getAttribute(attribute);
    };
    DOM.prototype.setAttr = function (attribute, value) {
        this.forEach(function (element) {
            element.setAttribute(attribute, value);
        });
        return this;
    };
    DOM.prototype.data = function (dataAttribute, value) {
        if (arguments.length > 1) {
            return this.setData(dataAttribute, value);
        }
        else {
            return this.getData(dataAttribute);
        }
    };
    DOM.prototype.getData = function (dataAttribute) {
        return this.elements[0].getAttribute('data-' + dataAttribute);
    };
    DOM.prototype.setData = function (dataAttribute, value) {
        this.forEach(function (element) {
            element.setAttribute('data-' + dataAttribute, value);
        });
        return this;
    };
    /**
     * Appends one or more DOM elements as children to all elements.
     * @param childElements the chrild elements to append
     * @returns {DOM}
     */
    DOM.prototype.append = function () {
        var childElements = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            childElements[_i] = arguments[_i];
        }
        this.forEach(function (element) {
            childElements.forEach(function (childElement) {
                childElement.elements.forEach(function (_, index) {
                    element.appendChild(childElement.elements[index]);
                });
            });
        });
        return this;
    };
    /**
     * Removes all elements from the DOM.
     */
    DOM.prototype.remove = function () {
        this.forEach(function (element) {
            var parent = element.parentNode;
            if (parent) {
                parent.removeChild(element);
            }
        });
    };
    /**
     * Returns the offset of the first element from the document's top left corner.
     * @returns {Offset}
     */
    DOM.prototype.offset = function () {
        var element = this.elements[0];
        var elementRect = element.getBoundingClientRect();
        var htmlRect = document.body.parentElement.getBoundingClientRect();
        // Virtual viewport scroll handling (e.g. pinch zoomed viewports in mobile browsers or desktop Chrome/Edge)
        // 'normal' zooms and virtual viewport zooms (aka layout viewport) result in different
        // element.getBoundingClientRect() results:
        //  - with normal scrolls, the clientRect decreases with an increase in scroll(Top|Left)/page(X|Y)Offset
        //  - with pinch zoom scrolls, the clientRect stays the same while scroll/pageOffset changes
        // This means, that the combination of clientRect + scroll/pageOffset does not work to calculate the offset
        // from the document's upper left origin when pinch zoom is used.
        // To work around this issue, we do not use scroll/pageOffset but get the clientRect of the html element and
        // subtract it from the element's rect, which always results in the offset from the document origin.
        // NOTE: the current way of offset calculation was implemented specifically to track event positions on the
        // seek bar, and it might break compatibility with jQuery's offset() method. If this ever turns out to be a
        // problem, this method should be reverted to the old version and the offset calculation moved to the seek bar.
        return {
            top: elementRect.top - htmlRect.top,
            left: elementRect.left - htmlRect.left
        };
    };
    /**
     * Returns the width of the first element.
     * @returns {number} the width of the first element
     */
    DOM.prototype.width = function () {
        // TODO check if this is the same as jQuery's width() (probably not)
        return this.elements[0].offsetWidth;
    };
    /**
     * Returns the height of the first element.
     * @returns {number} the height of the first element
     */
    DOM.prototype.height = function () {
        // TODO check if this is the same as jQuery's height() (probably not)
        return this.elements[0].offsetHeight;
    };
    /**
     * Attaches an event handler to one or more events on all elements.
     * @param eventName the event name (or multiple names separated by space) to listen to
     * @param eventHandler the event handler to call when the event fires
     * @returns {DOM}
     */
    DOM.prototype.on = function (eventName, eventHandler) {
        var _this = this;
        var events = eventName.split(' ');
        events.forEach(function (event) {
            if (_this.elements == null) {
                _this.document.addEventListener(event, eventHandler);
            }
            else {
                _this.forEach(function (element) {
                    element.addEventListener(event, eventHandler);
                });
            }
        });
        return this;
    };
    /**
     * Removes an event handler from one or more events on all elements.
     * @param eventName the event name (or multiple names separated by space) to remove the handler from
     * @param eventHandler the event handler to remove
     * @returns {DOM}
     */
    DOM.prototype.off = function (eventName, eventHandler) {
        var _this = this;
        var events = eventName.split(' ');
        events.forEach(function (event) {
            if (_this.elements == null) {
                _this.document.removeEventListener(event, eventHandler);
            }
            else {
                _this.forEach(function (element) {
                    element.removeEventListener(event, eventHandler);
                });
            }
        });
        return this;
    };
    /**
     * Adds the specified class(es) to all elements.
     * @param className the class(es) to add, multiple classes separated by space
     * @returns {DOM}
     */
    DOM.prototype.addClass = function (className) {
        this.forEach(function (element) {
            if (element.classList) {
                element.classList.add(className);
            }
            else {
                element.className += ' ' + className;
            }
        });
        return this;
    };
    /**
     * Removed the specified class(es) from all elements.
     * @param className the class(es) to remove, multiple classes separated by space
     * @returns {DOM}
     */
    DOM.prototype.removeClass = function (className) {
        this.forEach(function (element) {
            if (element.classList) {
                element.classList.remove(className);
            }
            else {
                element.className = element.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
            }
        });
        return this;
    };
    /**
     * Checks if any of the elements has the specified class.
     * @param className the class name to check
     * @returns {boolean} true if one of the elements has the class attached, else if no element has it attached
     */
    DOM.prototype.hasClass = function (className) {
        var hasClass = false;
        this.forEach(function (element) {
            if (element.classList) {
                if (element.classList.contains(className)) {
                    // Since we are inside a handler, we can't just 'return true'. Instead, we save it to a variable
                    // and return it at the end of the function body.
                    hasClass = true;
                }
            }
            else {
                if (new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className)) {
                    // See comment above
                    hasClass = true;
                }
            }
        });
        return hasClass;
    };
    DOM.prototype.css = function (propertyNameOrCollection, value) {
        if (typeof propertyNameOrCollection === 'string') {
            var propertyName = propertyNameOrCollection;
            if (arguments.length === 2) {
                return this.setCss(propertyName, value);
            }
            else {
                return this.getCss(propertyName);
            }
        }
        else {
            var propertyValueCollection = propertyNameOrCollection;
            return this.setCssCollection(propertyValueCollection);
        }
    };
    DOM.prototype.getCss = function (propertyName) {
        return getComputedStyle(this.elements[0])[propertyName];
    };
    DOM.prototype.setCss = function (propertyName, value) {
        this.forEach(function (element) {
            // <any> cast to resolve TS7015: http://stackoverflow.com/a/36627114/370252
            element.style[propertyName] = value;
        });
        return this;
    };
    DOM.prototype.setCssCollection = function (ruleValueCollection) {
        this.forEach(function (element) {
            // http://stackoverflow.com/a/34490573/370252
            Object.assign(element.style, ruleValueCollection);
        });
        return this;
    };
    return DOM;
}());
exports.DOM = DOM;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var eventdispatcher_1 = __webpack_require__(4);
var container_1 = __webpack_require__(0);
var ArrayUtils;
(function (ArrayUtils) {
    /**
     * Removes an item from an array.
     * @param array the array that may contain the item to remove
     * @param item the item to remove from the array
     * @returns {any} the removed item or null if it wasn't part of the array
     */
    function remove(array, item) {
        var index = array.indexOf(item);
        if (index > -1) {
            return array.splice(index, 1)[0];
        }
        else {
            return null;
        }
    }
    ArrayUtils.remove = remove;
})(ArrayUtils = exports.ArrayUtils || (exports.ArrayUtils = {}));
var StringUtils;
(function (StringUtils) {
    StringUtils.FORMAT_HHMMSS = 'hh:mm:ss';
    StringUtils.FORMAT_MMSS = 'mm:ss';
    /**
     * Formats a number of seconds into a time string with the pattern hh:mm:ss.
     *
     * @param totalSeconds the total number of seconds to format to string
     * @param format the time format to output (default: hh:mm:ss)
     * @returns {string} the formatted time string
     */
    function secondsToTime(totalSeconds, format) {
        if (format === void 0) { format = StringUtils.FORMAT_HHMMSS; }
        var isNegative = totalSeconds < 0;
        if (isNegative) {
            // If the time is negative, we make it positive for the calculation below
            // (else we'd get all negative numbers) and reattach the negative sign later.
            totalSeconds = -totalSeconds;
        }
        // Split into separate time parts
        var hours = Math.floor(totalSeconds / 3600);
        var minutes = Math.floor(totalSeconds / 60) - hours * 60;
        var seconds = Math.floor(totalSeconds) % 60;
        return (isNegative ? '-' : '') + format
            .replace('hh', leftPadWithZeros(hours, 2))
            .replace('mm', leftPadWithZeros(minutes, 2))
            .replace('ss', leftPadWithZeros(seconds, 2));
    }
    StringUtils.secondsToTime = secondsToTime;
    /**
     * Converts a number to a string and left-pads it with zeros to the specified length.
     * Example: leftPadWithZeros(123, 5) => '00123'
     *
     * @param num the number to convert to string and pad with zeros
     * @param length the desired length of the padded string
     * @returns {string} the padded number as string
     */
    function leftPadWithZeros(num, length) {
        var text = num + '';
        var padding = '0000000000'.substr(0, length - text.length);
        return padding + text;
    }
    /**
     * Fills out placeholders in an ad message.
     *
     * Has the placeholders '{remainingTime[formatString]}', '{playedTime[formatString]}' and
     * '{adDuration[formatString]}', which are replaced by the remaining time until the ad can be skipped, the current
     * time or the ad duration. The format string is optional. If not specified, the placeholder is replaced by the time
     * in seconds. If specified, it must be of the following format:
     * - %d - Inserts the time as an integer.
     * - %0Nd - Inserts the time as an integer with leading zeroes, if the length of the time string is smaller than N.
     * - %f - Inserts the time as a float.
     * - %0Nf - Inserts the time as a float with leading zeroes.
     * - %.Mf - Inserts the time as a float with M decimal places. Can be combined with %0Nf, e.g. %04.2f (the time
     * 10.123
     * would be printed as 0010.12).
     * - %hh:mm:ss
     * - %mm:ss
     *
     * @param adMessage an ad message with optional placeholders to fill
     * @param skipOffset if specified, {remainingTime} will be filled with the remaining time until the ad can be skipped
     * @param player the player to get the time data from
     * @returns {string} the ad message with filled placeholders
     */
    function replaceAdMessagePlaceholders(adMessage, skipOffset, player) {
        var adMessagePlaceholderRegex = new RegExp('\\{(remainingTime|playedTime|adDuration)(}|%((0[1-9]\\d*(\\.\\d+(d|f)|d|f)|\\.\\d+f|d|f)|hh:mm:ss|mm:ss)})', 'g');
        return adMessage.replace(adMessagePlaceholderRegex, function (formatString) {
            var time = 0;
            if (formatString.indexOf('remainingTime') > -1) {
                if (skipOffset) {
                    time = Math.ceil(skipOffset - player.getCurrentTime());
                }
                else {
                    time = player.getDuration() - player.getCurrentTime();
                }
            }
            else if (formatString.indexOf('playedTime') > -1) {
                time = player.getCurrentTime();
            }
            else if (formatString.indexOf('adDuration') > -1) {
                time = player.getDuration();
            }
            return formatNumber(time, formatString);
        });
    }
    StringUtils.replaceAdMessagePlaceholders = replaceAdMessagePlaceholders;
    function formatNumber(time, format) {
        var formatStringValidationRegex = /%((0[1-9]\d*(\.\d+(d|f)|d|f)|\.\d+f|d|f)|hh:mm:ss|mm:ss)/;
        var leadingZeroesRegex = /(%0[1-9]\d*)(?=(\.\d+f|f|d))/;
        var decimalPlacesRegex = /\.\d*(?=f)/;
        if (!formatStringValidationRegex.test(format)) {
            // If the format is invalid, we set a default fallback format
            format = '%d';
        }
        // Determine the number of leading zeros
        var leadingZeroes = 0;
        var leadingZeroesMatches = format.match(leadingZeroesRegex);
        if (leadingZeroesMatches) {
            leadingZeroes = parseInt(leadingZeroesMatches[0].substring(2));
        }
        // Determine the number of decimal places
        var numDecimalPlaces = null;
        var decimalPlacesMatches = format.match(decimalPlacesRegex);
        if (decimalPlacesMatches && !isNaN(parseInt(decimalPlacesMatches[0].substring(1)))) {
            numDecimalPlaces = parseInt(decimalPlacesMatches[0].substring(1));
            if (numDecimalPlaces > 20) {
                numDecimalPlaces = 20;
            }
        }
        // Float format
        if (format.indexOf('f') > -1) {
            var timeString = '';
            if (numDecimalPlaces !== null) {
                // Apply fixed number of decimal places
                timeString = time.toFixed(numDecimalPlaces);
            }
            else {
                timeString = '' + time;
            }
            // Apply leading zeros
            if (timeString.indexOf('.') > -1) {
                return leftPadWithZeros(timeString, timeString.length + (leadingZeroes - timeString.indexOf('.')));
            }
            else {
                return leftPadWithZeros(timeString, leadingZeroes);
            }
        }
        else if (format.indexOf(':') > -1) {
            var totalSeconds = Math.ceil(time);
            // hh:mm:ss format
            if (format.indexOf('hh') > -1) {
                return secondsToTime(totalSeconds);
            }
            else {
                var minutes = Math.floor(totalSeconds / 60);
                var seconds = totalSeconds % 60;
                return leftPadWithZeros(minutes, 2) + ':' + leftPadWithZeros(seconds, 2);
            }
        }
        else {
            return leftPadWithZeros(Math.ceil(time), leadingZeroes);
        }
    }
})(StringUtils = exports.StringUtils || (exports.StringUtils = {}));
var PlayerUtils;
(function (PlayerUtils) {
    var PlayerState;
    (function (PlayerState) {
        PlayerState[PlayerState["IDLE"] = 0] = "IDLE";
        PlayerState[PlayerState["PREPARED"] = 1] = "PREPARED";
        PlayerState[PlayerState["PLAYING"] = 2] = "PLAYING";
        PlayerState[PlayerState["PAUSED"] = 3] = "PAUSED";
        PlayerState[PlayerState["FINISHED"] = 4] = "FINISHED";
    })(PlayerState = PlayerUtils.PlayerState || (PlayerUtils.PlayerState = {}));
    function isSourceLoaded(player) {
        return player.getConfig().source !== undefined;
    }
    PlayerUtils.isSourceLoaded = isSourceLoaded;
    function isTimeShiftAvailable(player) {
        return player.isLive() && player.getMaxTimeShift() !== 0;
    }
    PlayerUtils.isTimeShiftAvailable = isTimeShiftAvailable;
    function getState(player) {
        if (player.hasEnded()) {
            return PlayerState.FINISHED;
        }
        else if (player.isPlaying()) {
            return PlayerState.PLAYING;
        }
        else if (player.isPaused()) {
            return PlayerState.PAUSED;
        }
        else if (isSourceLoaded(player)) {
            return PlayerState.PREPARED;
        }
        else {
            return PlayerState.IDLE;
        }
    }
    PlayerUtils.getState = getState;
    var TimeShiftAvailabilityDetector = (function () {
        function TimeShiftAvailabilityDetector(player) {
            var _this = this;
            this.timeShiftAvailabilityChangedEvent = new eventdispatcher_1.EventDispatcher();
            this.player = player;
            this.timeShiftAvailable = undefined;
            var timeShiftDetector = function () {
                _this.detect();
            };
            // Try to detect timeshift availability in ON_READY, which works for DASH streams
            player.addEventHandler(player.EVENT.ON_READY, timeShiftDetector);
            // With HLS/NativePlayer streams, getMaxTimeShift can be 0 before the buffer fills, so we need to additionally
            // check timeshift availability in ON_TIME_CHANGED
            player.addEventHandler(player.EVENT.ON_TIME_CHANGED, timeShiftDetector);
        }
        TimeShiftAvailabilityDetector.prototype.detect = function () {
            if (this.player.isLive()) {
                var timeShiftAvailableNow = PlayerUtils.isTimeShiftAvailable(this.player);
                // When the availability changes, we fire the event
                if (timeShiftAvailableNow !== this.timeShiftAvailable) {
                    this.timeShiftAvailabilityChangedEvent.dispatch(this.player, { timeShiftAvailable: timeShiftAvailableNow });
                    this.timeShiftAvailable = timeShiftAvailableNow;
                }
            }
        };
        Object.defineProperty(TimeShiftAvailabilityDetector.prototype, "onTimeShiftAvailabilityChanged", {
            get: function () {
                return this.timeShiftAvailabilityChangedEvent.getEvent();
            },
            enumerable: true,
            configurable: true
        });
        return TimeShiftAvailabilityDetector;
    }());
    PlayerUtils.TimeShiftAvailabilityDetector = TimeShiftAvailabilityDetector;
    /**
     * Detects changes of the stream type, i.e. changes of the return value of the player#isLive method.
     * Normally, a stream cannot change its type during playback, it's either VOD or live. Due to bugs on some
     * platforms or browsers, it can still change. It is therefore unreliable to just check #isLive and this detector
     * should be used as a workaround instead.
     *
     * Known cases:
     *
     * - HLS VOD on Android 4.3
     * Video duration is initially 'Infinity' and only gets available after playback starts, so streams are wrongly
     * reported as 'live' before playback (the live-check in the player checks for infinite duration).
     */
    var LiveStreamDetector = (function () {
        function LiveStreamDetector(player) {
            var _this = this;
            this.liveChangedEvent = new eventdispatcher_1.EventDispatcher();
            this.player = player;
            this.live = undefined;
            var liveDetector = function () {
                _this.detect();
            };
            // Initialize when player is ready
            player.addEventHandler(player.EVENT.ON_READY, liveDetector);
            // Re-evaluate when playback starts
            player.addEventHandler(player.EVENT.ON_PLAY, liveDetector);
            // HLS live detection workaround for Android:
            // Also re-evaluate during playback, because that is when the live flag might change.
            // (Doing it only in Android Chrome saves unnecessary overhead on other plattforms)
            if (BrowserUtils.isAndroid && BrowserUtils.isChrome) {
                player.addEventHandler(player.EVENT.ON_TIME_CHANGED, liveDetector);
            }
        }
        LiveStreamDetector.prototype.detect = function () {
            var liveNow = this.player.isLive();
            // Compare current to previous live state flag and fire event when it changes. Since we initialize the flag
            // with undefined, there is always at least an initial event fired that tells listeners the live state.
            if (liveNow !== this.live) {
                this.liveChangedEvent.dispatch(this.player, { live: liveNow });
                this.live = liveNow;
            }
        };
        Object.defineProperty(LiveStreamDetector.prototype, "onLiveChanged", {
            get: function () {
                return this.liveChangedEvent.getEvent();
            },
            enumerable: true,
            configurable: true
        });
        return LiveStreamDetector;
    }());
    PlayerUtils.LiveStreamDetector = LiveStreamDetector;
})(PlayerUtils = exports.PlayerUtils || (exports.PlayerUtils = {}));
var UIUtils;
(function (UIUtils) {
    function traverseTree(component, visit) {
        var recursiveTreeWalker = function (component, parent) {
            visit(component, parent);
            // If the current component is a container, visit it's children
            if (component instanceof container_1.Container) {
                for (var _i = 0, _a = component.getComponents(); _i < _a.length; _i++) {
                    var childComponent = _a[_i];
                    recursiveTreeWalker(childComponent, component);
                }
            }
        };
        // Walk and configure the component tree
        recursiveTreeWalker(component);
    }
    UIUtils.traverseTree = traverseTree;
})(UIUtils = exports.UIUtils || (exports.UIUtils = {}));
var BrowserUtils;
(function (BrowserUtils) {
    // isMobile only needs to be evaluated once (it cannot change during a browser session)
    // Mobile detection according to Mozilla recommendation: "In summary, we recommend looking for the string “Mobi”
    // anywhere in the User Agent to detect a mobile device."
    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent
    BrowserUtils.isMobile = navigator && navigator.userAgent && /Mobi/.test(navigator.userAgent);
    BrowserUtils.isChrome = navigator && navigator.userAgent && /Chrome/.test(navigator.userAgent);
    BrowserUtils.isAndroid = navigator && navigator.userAgent && /Android/.test(navigator.userAgent);
})(BrowserUtils = exports.BrowserUtils || (exports.BrowserUtils = {}));


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __webpack_require__(3);
/**
 * Event dispatcher to subscribe and trigger events. Each event should have its own dispatcher.
 */
var EventDispatcher = (function () {
    function EventDispatcher() {
        this.listeners = [];
    }
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.subscribe = function (listener) {
        this.listeners.push(new EventListenerWrapper(listener));
    };
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.subscribeOnce = function (listener) {
        this.listeners.push(new EventListenerWrapper(listener, true));
    };
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.subscribeRateLimited = function (listener, rateMs) {
        this.listeners.push(new RateLimitedEventListenerWrapper(listener, rateMs));
    };
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.unsubscribe = function (listener) {
        // Iterate through listeners, compare with parameter, and remove if found
        for (var i = 0; i < this.listeners.length; i++) {
            var subscribedListener = this.listeners[i];
            if (subscribedListener.listener === listener) {
                utils_1.ArrayUtils.remove(this.listeners, subscribedListener);
                return true;
            }
        }
        return false;
    };
    /**
     * Removes all listeners from this dispatcher.
     */
    EventDispatcher.prototype.unsubscribeAll = function () {
        this.listeners = [];
    };
    /**
     * Dispatches an event to all subscribed listeners.
     * @param sender the source of the event
     * @param args the arguments for the event
     */
    EventDispatcher.prototype.dispatch = function (sender, args) {
        if (args === void 0) { args = null; }
        var listenersToRemove = [];
        // Call every listener
        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {
            var listener = _a[_i];
            listener.fire(sender, args);
            if (listener.isOnce()) {
                listenersToRemove.push(listener);
            }
        }
        // Remove one-time listener
        for (var _b = 0, listenersToRemove_1 = listenersToRemove; _b < listenersToRemove_1.length; _b++) {
            var listenerToRemove = listenersToRemove_1[_b];
            utils_1.ArrayUtils.remove(this.listeners, listenerToRemove);
        }
    };
    /**
     * Returns the event that this dispatcher manages and on which listeners can subscribe and unsubscribe event handlers.
     * @returns {Event}
     */
    EventDispatcher.prototype.getEvent = function () {
        // For now, just cast the event dispatcher to the event interface. At some point in the future when the
        // codebase grows, it might make sense to split the dispatcher into separate dispatcher and event classes.
        return this;
    };
    return EventDispatcher;
}());
exports.EventDispatcher = EventDispatcher;
/**
 * A basic event listener wrapper to manage listeners within the {@link EventDispatcher}. This is a 'private' class
 * for internal dispatcher use and it is therefore not exported.
 */
var EventListenerWrapper = (function () {
    function EventListenerWrapper(listener, once) {
        if (once === void 0) { once = false; }
        this.eventListener = listener;
        this.once = once;
    }
    Object.defineProperty(EventListenerWrapper.prototype, "listener", {
        /**
         * Returns the wrapped event listener.
         * @returns {EventListener<Sender, Args>}
         */
        get: function () {
            return this.eventListener;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Fires the wrapped event listener with the given arguments.
     * @param sender
     * @param args
     */
    EventListenerWrapper.prototype.fire = function (sender, args) {
        this.eventListener(sender, args);
    };
    /**
     * Checks if this listener is scheduled to be called only once.
     * @returns {boolean} once if true
     */
    EventListenerWrapper.prototype.isOnce = function () {
        return this.once;
    };
    return EventListenerWrapper;
}());
/**
 * Extends the basic {@link EventListenerWrapper} with rate-limiting functionality.
 */
var RateLimitedEventListenerWrapper = (function (_super) {
    __extends(RateLimitedEventListenerWrapper, _super);
    function RateLimitedEventListenerWrapper(listener, rateMs) {
        var _this = _super.call(this, listener) || this;
        _this.rateMs = rateMs;
        _this.lastFireTime = 0;
        // Wrap the event listener with an event listener that does the rate-limiting
        _this.rateLimitingEventListener = function (sender, args) {
            if (Date.now() - _this.lastFireTime > _this.rateMs) {
                // Only if enough time since the previous call has passed, call the
                // actual event listener and record the current time
                _this.fireSuper(sender, args);
                _this.lastFireTime = Date.now();
            }
        };
        return _this;
    }
    RateLimitedEventListenerWrapper.prototype.fireSuper = function (sender, args) {
        // Fire the actual external event listener
        _super.prototype.fire.call(this, sender, args);
    };
    RateLimitedEventListenerWrapper.prototype.fire = function (sender, args) {
        // Fire the internal rate-limiting listener instead of the external event listener
        this.rateLimitingEventListener(sender, args);
    };
    return RateLimitedEventListenerWrapper;
}(EventListenerWrapper));


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(1);
var dom_1 = __webpack_require__(2);
var eventdispatcher_1 = __webpack_require__(4);
/**
 * A simple clickable button.
 */
var Button = (function (_super) {
    __extends(Button, _super);
    function Button(config) {
        var _this = _super.call(this, config) || this;
        _this.buttonEvents = {
            onClick: new eventdispatcher_1.EventDispatcher()
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-button'
        }, _this.config);
        return _this;
    }
    Button.prototype.toDomElement = function () {
        var _this = this;
        // Create the button element with the text label
        var buttonElement = new dom_1.DOM('button', {
            'type': 'button',
            'id': this.config.id,
            'class': this.getCssClasses()
        }).append(new dom_1.DOM('span', {
            'class': this.prefixCss('label')
        }).html(this.config.text));
        // Listen for the click event on the button element and trigger the corresponding event on the button component
        buttonElement.on('click', function () {
            _this.onClickEvent();
        });
        return buttonElement;
    };
    /**
     * Sets text on the label of the button.
     * @param text the text to put into the label of the button
     */
    Button.prototype.setText = function (text) {
        this.getDomElement().find('.' + this.prefixCss('label')).html(text);
    };
    Button.prototype.onClickEvent = function () {
        this.buttonEvents.onClick.dispatch(this);
    };
    Object.defineProperty(Button.prototype, "onClick", {
        /**
         * Gets the event that is fired when the button is clicked.
         * @returns {Event<Button<Config>, NoArgs>}
         */
        get: function () {
            return this.buttonEvents.onClick.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return Button;
}(component_1.Component));
exports.Button = Button;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(1);
var dom_1 = __webpack_require__(2);
var eventdispatcher_1 = __webpack_require__(4);
/**
 * A simple text label.
 *
 * DOM example:
 * <code>
 *     <span class='ui-label'>...some text...</span>
 * </code>
 */
var Label = (function (_super) {
    __extends(Label, _super);
    function Label(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.labelEvents = {
            onClick: new eventdispatcher_1.EventDispatcher(),
            onTextChanged: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-label'
        }, _this.config);
        _this.text = _this.config.text;
        return _this;
    }
    Label.prototype.toDomElement = function () {
        var _this = this;
        var labelElement = new dom_1.DOM('span', {
            'id': this.config.id,
            'class': this.getCssClasses()
        }).html(this.text);
        labelElement.on('click', function () {
            _this.onClickEvent();
        });
        return labelElement;
    };
    /**
     * Set the text on this label.
     * @param text
     */
    Label.prototype.setText = function (text) {
        this.text = text;
        this.getDomElement().html(text);
        this.onTextChangedEvent(text);
    };
    /**
     * Gets the text on this label.
     * @return {string} The text on the label
     */
    Label.prototype.getText = function () {
        return this.text;
    };
    /**
     * Clears the text on this label.
     */
    Label.prototype.clearText = function () {
        this.getDomElement().html('');
        this.onTextChangedEvent(null);
    };
    /**
     * Tests if the label is empty and does not contain any text.
     * @return {boolean} True if the label is empty, else false
     */
    Label.prototype.isEmpty = function () {
        return !this.text;
    };
    /**
     * Fires the {@link #onClick} event.
     * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method
     * and calling the super method.
     */
    Label.prototype.onClickEvent = function () {
        this.labelEvents.onClick.dispatch(this);
    };
    /**
     * Fires the {@link #onClick} event.
     * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method
     * and calling the super method.
     */
    Label.prototype.onTextChangedEvent = function (text) {
        this.labelEvents.onTextChanged.dispatch(this, text);
    };
    Object.defineProperty(Label.prototype, "onClick", {
        /**
         * Gets the event that is fired when the label is clicked.
         * @returns {Event<Label<LabelConfig>, NoArgs>}
         */
        get: function () {
            return this.labelEvents.onClick.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "onTextChanged", {
        /**
         * Gets the event that is fired when the text on the label is changed.
         * @returns {Event<Label<LabelConfig>, string>}
         */
        get: function () {
            return this.labelEvents.onTextChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return Label;
}(component_1.Component));
exports.Label = Label;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// TODO change to internal (not exported) class, how to use in other files?
/**
 * Executes a callback after a specified amount of time, optionally repeatedly until stopped.
 */
var Timeout = (function () {
    /**
     * Creates a new timeout callback handler.
     * @param delay the delay in milliseconds after which the callback should be executed
     * @param callback the callback to execute after the delay time
     * @param repeat if true, call the callback repeatedly in delay intervals
     */
    function Timeout(delay, callback, repeat) {
        if (repeat === void 0) { repeat = false; }
        this.delay = delay;
        this.callback = callback;
        this.repeat = repeat;
        this.timeoutHandle = 0;
    }
    /**
     * Starts the timeout and calls the callback when the timeout delay has passed.
     * @returns {Timeout} the current timeout (so the start call can be chained to the constructor)
     */
    Timeout.prototype.start = function () {
        this.reset();
        return this;
    };
    /**
     * Clears the timeout. The callback will not be called if clear is called during the timeout.
     */
    Timeout.prototype.clear = function () {
        clearTimeout(this.timeoutHandle);
    };
    /**
     * Resets the passed timeout delay to zero. Can be used to defer the calling of the callback.
     */
    Timeout.prototype.reset = function () {
        var _this = this;
        var lastScheduleTime = 0;
        var delayAdjust = 0;
        this.clear();
        var internalCallback = function () {
            _this.callback();
            if (_this.repeat) {
                var now = Date.now();
                // The time of one iteration from scheduling to executing the callback (usually a bit longer than the delay
                // time)
                var delta = now - lastScheduleTime;
                // Calculate the delay adjustment for the next schedule to keep a steady delay interval over time
                delayAdjust = _this.delay - delta + delayAdjust;
                lastScheduleTime = now;
                // Schedule next execution by the adjusted delay
                _this.timeoutHandle = setTimeout(internalCallback, _this.delay + delayAdjust);
            }
        };
        lastScheduleTime = Date.now();
        this.timeoutHandle = setTimeout(internalCallback, this.delay);
    };
    return Timeout;
}());
exports.Timeout = Timeout;


/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = angular;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(10);
var utils_1 = __webpack_require__(3);
/**
 * A button that toggles between playback and pause.
 */
var PlaybackToggleButton = (function (_super) {
    __extends(PlaybackToggleButton, _super);
    function PlaybackToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-playbacktogglebutton',
            text: 'Play/Pause'
        }, _this.config);
        return _this;
    }
    PlaybackToggleButton.prototype.configure = function (player, uimanager, handleClickEvent) {
        var _this = this;
        if (handleClickEvent === void 0) { handleClickEvent = true; }
        _super.prototype.configure.call(this, player, uimanager);
        var isSeeking = false;
        // Handler to update button state based on player state
        var playbackStateHandler = function (event) {
            // If the UI is currently seeking, playback is temporarily stopped but the buttons should
            // not reflect that and stay as-is (e.g indicate playback while seeking).
            if (isSeeking) {
                return;
            }
            if (player.isPlaying()) {
                _this.on();
            }
            else {
                _this.off();
            }
        };
        // Call handler upon these events
        player.addEventHandler(player.EVENT.ON_PLAY, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_PAUSED, playbackStateHandler);
        // when playback finishes, player turns to paused mode
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_PLAYING, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_PAUSED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_PLAYBACK_FINISHED, playbackStateHandler);
        // Detect absence of timeshifting on live streams and add tagging class to convert button icons to play/stop
        var timeShiftDetector = new utils_1.PlayerUtils.TimeShiftAvailabilityDetector(player);
        timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(function (sender, args) {
            if (!args.timeShiftAvailable) {
                _this.getDomElement().addClass(_this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));
            }
            else {
                _this.getDomElement().removeClass(_this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));
            }
        });
        timeShiftDetector.detect(); // Initial detection
        if (handleClickEvent) {
            // Control player by button events
            // When a button event triggers a player API call, events are fired which in turn call the event handler
            // above that updated the button state.
            this.onClick.subscribe(function () {
                if (player.isPlaying()) {
                    player.pause('ui-button');
                }
                else {
                    player.play('ui-button');
                }
            });
        }
        // Track UI seeking status
        uimanager.onSeek.subscribe(function () {
            isSeeking = true;
        });
        uimanager.onSeeked.subscribe(function () {
            isSeeking = false;
        });
        // Startup init
        playbackStateHandler(null);
    };
    return PlaybackToggleButton;
}(togglebutton_1.ToggleButton));
PlaybackToggleButton.CLASS_STOPTOGGLE = 'stoptoggle';
exports.PlaybackToggleButton = PlaybackToggleButton;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(5);
var eventdispatcher_1 = __webpack_require__(4);
/**
 * A button that can be toggled between 'on' and 'off' states.
 */
var ToggleButton = (function (_super) {
    __extends(ToggleButton, _super);
    function ToggleButton(config) {
        var _this = _super.call(this, config) || this;
        _this.toggleButtonEvents = {
            onToggle: new eventdispatcher_1.EventDispatcher(),
            onToggleOn: new eventdispatcher_1.EventDispatcher(),
            onToggleOff: new eventdispatcher_1.EventDispatcher()
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-togglebutton'
        }, _this.config);
        return _this;
    }
    /**
     * Toggles the button to the 'on' state.
     */
    ToggleButton.prototype.on = function () {
        if (this.isOff()) {
            this.onState = true;
            this.getDomElement().removeClass(this.prefixCss(ToggleButton.CLASS_OFF));
            this.getDomElement().addClass(this.prefixCss(ToggleButton.CLASS_ON));
            this.onToggleEvent();
            this.onToggleOnEvent();
        }
    };
    /**
     * Toggles the button to the 'off' state.
     */
    ToggleButton.prototype.off = function () {
        if (this.isOn()) {
            this.onState = false;
            this.getDomElement().removeClass(this.prefixCss(ToggleButton.CLASS_ON));
            this.getDomElement().addClass(this.prefixCss(ToggleButton.CLASS_OFF));
            this.onToggleEvent();
            this.onToggleOffEvent();
        }
    };
    /**
     * Toggle the button 'on' if it is 'off', or 'off' if it is 'on'.
     */
    ToggleButton.prototype.toggle = function () {
        if (this.isOn()) {
            this.off();
        }
        else {
            this.on();
        }
    };
    /**
     * Checks if the toggle button is in the 'on' state.
     * @returns {boolean} true if button is 'on', false if 'off'
     */
    ToggleButton.prototype.isOn = function () {
        return this.onState;
    };
    /**
     * Checks if the toggle button is in the 'off' state.
     * @returns {boolean} true if button is 'off', false if 'on'
     */
    ToggleButton.prototype.isOff = function () {
        return !this.isOn();
    };
    ToggleButton.prototype.onClickEvent = function () {
        _super.prototype.onClickEvent.call(this);
        // Fire the toggle event together with the click event
        // (they are technically the same, only the semantics are different)
        this.onToggleEvent();
    };
    ToggleButton.prototype.onToggleEvent = function () {
        this.toggleButtonEvents.onToggle.dispatch(this);
    };
    ToggleButton.prototype.onToggleOnEvent = function () {
        this.toggleButtonEvents.onToggleOn.dispatch(this);
    };
    ToggleButton.prototype.onToggleOffEvent = function () {
        this.toggleButtonEvents.onToggleOff.dispatch(this);
    };
    Object.defineProperty(ToggleButton.prototype, "onToggle", {
        /**
         * Gets the event that is fired when the button is toggled.
         * @returns {Event<ToggleButton<Config>, NoArgs>}
         */
        get: function () {
            return this.toggleButtonEvents.onToggle.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToggleButton.prototype, "onToggleOn", {
        /**
         * Gets the event that is fired when the button is toggled 'on'.
         * @returns {Event<ToggleButton<Config>, NoArgs>}
         */
        get: function () {
            return this.toggleButtonEvents.onToggleOn.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToggleButton.prototype, "onToggleOff", {
        /**
         * Gets the event that is fired when the button is toggled 'off'.
         * @returns {Event<ToggleButton<Config>, NoArgs>}
         */
        get: function () {
            return this.toggleButtonEvents.onToggleOff.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return ToggleButton;
}(button_1.Button));
ToggleButton.CLASS_ON = 'on';
ToggleButton.CLASS_OFF = 'off';
exports.ToggleButton = ToggleButton;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(1);
var dom_1 = __webpack_require__(2);
var eventdispatcher_1 = __webpack_require__(4);
var timeout_1 = __webpack_require__(7);
var utils_1 = __webpack_require__(3);
/**
 * A seek bar to seek within the player's media. It displays the current playback position, amount of buffed data, seek
 * target, and keeps status about an ongoing seek.
 *
 * The seek bar displays different 'bars':
 *  - the playback position, i.e. the position in the media at which the player current playback pointer is positioned
 *  - the buffer position, which usually is the playback position plus the time span that is already buffered ahead
 *  - the seek position, used to preview to where in the timeline a seek will jump to
 */
var SeekBar = (function (_super) {
    __extends(SeekBar, _super);
    function SeekBar(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        /**
         * Buffer of the the current playback position. The position must be buffered in case the element
         * needs to be refreshed with {@link #refreshPlaybackPosition}.
         * @type {number}
         */
        _this.playbackPositionPercentage = 0;
        // https://hacks.mozilla.org/2013/04/detecting-touch-its-the-why-not-the-how/
        _this.touchSupported = ('ontouchstart' in window);
        _this.seekBarEvents = {
            /**
             * Fired when a scrubbing seek operation is started.
             */
            onSeek: new eventdispatcher_1.EventDispatcher(),
            /**
             * Fired during a scrubbing seek to indicate that the seek preview (i.e. the video frame) should be updated.
             */
            onSeekPreview: new eventdispatcher_1.EventDispatcher(),
            /**
             * Fired when a scrubbing seek has finished or when a direct seek is issued.
             */
            onSeeked: new eventdispatcher_1.EventDispatcher()
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-seekbar',
            vertical: false,
            smoothPlaybackPositionUpdateIntervalMs: 50,
            hideInLivePlayback: true,
        }, _this.config);
        _this.label = _this.config.label;
        _this.timelineMarkers = [];
        return _this;
    }
    SeekBar.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        if (this.hasLabel()) {
            this.getLabel().initialize();
        }
    };
    SeekBar.prototype.configure = function (player, uimanager, configureSeek) {
        var _this = this;
        if (configureSeek === void 0) { configureSeek = true; }
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        if (!configureSeek) {
            // The configureSeek flag can be used by subclasses to disable configuration as seek bar. E.g. the volume
            // slider is reusing this component but adds its own functionality, and does not need the seek functionality.
            // This is actually a hack, the proper solution would be for both seek bar and volume sliders to extend
            // a common base slider component and implement their functionality there.
            return;
        }
        var playbackNotInitialized = true;
        var isPlaying = false;
        var isSeeking = false;
        // Update playback and buffer positions
        var playbackPositionHandler = function (event, forceUpdate) {
            if (event === void 0) { event = null; }
            if (forceUpdate === void 0) { forceUpdate = false; }
            // Once this handler os called, playback has been started and we set the flag to false
            playbackNotInitialized = false;
            if (isSeeking) {
                // We caught a seek preview seek, do not update the seekbar
                return;
            }
            if (player.isLive()) {
                if (player.getMaxTimeShift() === 0) {
                    // This case must be explicitly handled to avoid division by zero
                    _this.setPlaybackPosition(100);
                }
                else {
                    var playbackPositionPercentage = 100 - (100 / player.getMaxTimeShift() * player.getTimeShift());
                    _this.setPlaybackPosition(playbackPositionPercentage);
                }
                // Always show full buffer for live streams
                _this.setBufferPosition(100);
                // Hide SeekBar if required.
                // if (config.hideInLivePlayback) {
                _this.hide();
                // }
            }
            else {
                var playbackPositionPercentage = 100 / player.getDuration() * player.getCurrentTime();
                var videoBufferLength = player.getVideoBufferLength();
                var audioBufferLength = player.getAudioBufferLength();
                // Calculate the buffer length which is the smaller length of the audio and video buffers. If one of these
                // buffers is not available, we set it's value to MAX_VALUE to make sure that the other real value is taken
                // as the buffer length.
                var bufferLength = Math.min(videoBufferLength != null ? videoBufferLength : Number.MAX_VALUE, audioBufferLength != null ? audioBufferLength : Number.MAX_VALUE);
                // If both buffer lengths are missing, we set the buffer length to zero
                if (bufferLength === Number.MAX_VALUE) {
                    bufferLength = 0;
                }
                var bufferPercentage = 100 / player.getDuration() * bufferLength;
                // Update playback position only in paused state or in the initial startup state where player is neither
                // paused nor playing. Playback updates are handled in the Timeout below.
                if (_this.config.smoothPlaybackPositionUpdateIntervalMs === SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED
                    || forceUpdate || player.isPaused() || (player.isPaused() === player.isPlaying())) {
                    _this.setPlaybackPosition(playbackPositionPercentage);
                }
                _this.setBufferPosition(playbackPositionPercentage + bufferPercentage);
            }
        };
        // Update seekbar upon these events
        // init playback position when the player is ready
        player.addEventHandler(player.EVENT.ON_READY, playbackPositionHandler);
        // update playback position when it changes
        player.addEventHandler(player.EVENT.ON_TIME_CHANGED, playbackPositionHandler);
        // update bufferlevel when buffering is complete
        player.addEventHandler(player.EVENT.ON_STALL_ENDED, playbackPositionHandler);
        // update playback position when a seek has finished
        player.addEventHandler(player.EVENT.ON_SEEKED, playbackPositionHandler);
        // update playback position when a timeshift has finished
        player.addEventHandler(player.EVENT.ON_TIME_SHIFTED, playbackPositionHandler);
        // update bufferlevel when a segment has been downloaded
        player.addEventHandler(player.EVENT.ON_SEGMENT_REQUEST_FINISHED, playbackPositionHandler);
        // update playback position of Cast playback
        player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, playbackPositionHandler);
        // Seek handling
        player.addEventHandler(player.EVENT.ON_SEEK, function () {
            _this.setSeeking(true);
        });
        player.addEventHandler(player.EVENT.ON_SEEKED, function () {
            _this.setSeeking(false);
        });
        player.addEventHandler(player.EVENT.ON_TIME_SHIFT, function () {
            _this.setSeeking(true);
        });
        player.addEventHandler(player.EVENT.ON_TIME_SHIFTED, function () {
            _this.setSeeking(false);
        });
        var seek = function (percentage) {
            if (player.isLive()) {
                player.timeShift(player.getMaxTimeShift() - (player.getMaxTimeShift() * (percentage / 100)));
            }
            else {
                player.seek(player.getDuration() * (percentage / 100));
            }
        };
        this.onSeek.subscribe(function (sender) {
            isSeeking = true; // track seeking status so we can catch events from seek preview seeks
            // Notify UI manager of started seek
            uimanager.onSeek.dispatch(sender);
            // Save current playback state
            isPlaying = player.isPlaying();
            // Pause playback while seeking
            if (isPlaying) {
                player.pause('ui-seek');
            }
        });
        this.onSeekPreview.subscribe(function (sender, args) {
            // Notify UI manager of seek preview
            uimanager.onSeekPreview.dispatch(sender, args);
        });
        this.onSeekPreview.subscribeRateLimited(function (sender, args) {
            // Rate-limited scrubbing seek
            if (args.scrubbing) {
                seek(args.position);
            }
        }, 200);
        this.onSeeked.subscribe(function (sender, percentage) {
            isSeeking = false;
            // Do the seek
            seek(percentage);
            // Continue playback after seek if player was playing when seek started
            if (isPlaying) {
                player.play('ui-seek');
            }
            // Notify UI manager of finished seek
            uimanager.onSeeked.dispatch(sender);
        });
        if (this.hasLabel()) {
            // Configure a seekbar label that is internal to the seekbar)
            this.getLabel().configure(player, uimanager);
        }
        // Hide seekbar for live sources without timeshift
        var isLive = false;
        var hasTimeShift = false;
        var switchVisibility = function (isLive, hasTimeShift) {
            if (isLive && !hasTimeShift) {
                _this.hide();
            }
            else {
                _this.show();
            }
            playbackPositionHandler(null, true);
            _this.refreshPlaybackPosition();
        };
        var liveStreamDetector = new utils_1.PlayerUtils.LiveStreamDetector(player);
        liveStreamDetector.onLiveChanged.subscribe(function (sender, args) {
            isLive = args.live;
            switchVisibility(isLive, hasTimeShift);
        });
        var timeShiftDetector = new utils_1.PlayerUtils.TimeShiftAvailabilityDetector(player);
        timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(function (sender, args) {
            hasTimeShift = args.timeShiftAvailable;
            switchVisibility(isLive, hasTimeShift);
        });
        // Initial detection
        liveStreamDetector.detect();
        timeShiftDetector.detect();
        // Refresh the playback position when the player resized or the UI is configured. The playback position marker
        // is positioned absolutely and must therefore be updated when the size of the seekbar changes.
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () {
            _this.refreshPlaybackPosition();
        });
        // Additionally, when this code is called, the seekbar is not part of the UI yet and therefore does not have a size,
        // resulting in a wrong initial position of the marker. Refreshing it once the UI is configured solved this issue.
        uimanager.onConfigured.subscribe(function () {
            _this.refreshPlaybackPosition();
        });
        // It can also happen that the value changes once the player is ready, or when a new source is loaded, so we need
        // to update on ON_READY too
        player.addEventHandler(player.EVENT.ON_READY, function () {
            _this.refreshPlaybackPosition();
        });
        // Initialize seekbar
        playbackPositionHandler(); // Set the playback position
        this.setBufferPosition(0);
        this.setSeekPosition(0);
        if (this.config.smoothPlaybackPositionUpdateIntervalMs !== SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED) {
            this.configureSmoothPlaybackPositionUpdater(player, uimanager);
        }
        this.configureMarkers(player, uimanager);
    };
    SeekBar.prototype.configureSmoothPlaybackPositionUpdater = function (player, uimanager) {
        var _this = this;
        /*
         * Playback position update
         *
         * We do not update the position directly from the ON_TIME_CHANGED event, because it arrives very jittery and
         * results in a jittery position indicator since the CSS transition time is statically set.
         * To work around this issue, we maintain a local playback position that is updated in a stable regular interval
         * and kept in sync with the player.
         */
        var currentTimeSeekBar = 0;
        var currentTimePlayer = 0;
        var updateIntervalMs = 50;
        var currentTimeUpdateDeltaSecs = updateIntervalMs / 1000;
        this.smoothPlaybackPositionUpdater = new timeout_1.Timeout(updateIntervalMs, function () {
            currentTimeSeekBar += currentTimeUpdateDeltaSecs;
            currentTimePlayer = player.getCurrentTime();
            // Sync currentTime of seekbar to player
            var currentTimeDelta = currentTimeSeekBar - currentTimePlayer;
            // If the delta is larger that 2 secs, directly jump the seekbar to the
            // player time instead of smoothly fast forwarding/rewinding.
            if (Math.abs(currentTimeDelta) > 2) {
                currentTimeSeekBar = currentTimePlayer;
            }
            else if (currentTimeDelta <= -currentTimeUpdateDeltaSecs) {
                currentTimeSeekBar += currentTimeUpdateDeltaSecs;
            }
            else if (currentTimeDelta >= currentTimeUpdateDeltaSecs) {
                currentTimeSeekBar -= currentTimeUpdateDeltaSecs;
            }
            var playbackPositionPercentage = 100 / player.getDuration() * currentTimeSeekBar;
            _this.setPlaybackPosition(playbackPositionPercentage);
        }, true);
        var startSmoothPlaybackPositionUpdater = function () {
            if (!player.isLive()) {
                currentTimeSeekBar = player.getCurrentTime();
                _this.smoothPlaybackPositionUpdater.start();
            }
        };
        var stopSmoothPlaybackPositionUpdater = function () {
            _this.smoothPlaybackPositionUpdater.clear();
        };
        player.addEventHandler(player.EVENT.ON_PLAY, startSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_CAST_PLAYING, startSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_PAUSED, stopSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_CAST_PAUSED, stopSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_SEEKED, function () {
            currentTimeSeekBar = player.getCurrentTime();
        });
        if (player.isPlaying()) {
            startSmoothPlaybackPositionUpdater();
        }
    };
    SeekBar.prototype.configureMarkers = function (player, uimanager) {
        var _this = this;
        var clearMarkers = function () {
            _this.timelineMarkers = [];
            _this.updateMarkers();
        };
        var setupMarkers = function () {
            clearMarkers();
            var hasMarkersInUiConfig = uimanager.getConfig().metadata && uimanager.getConfig().metadata.markers
                && uimanager.getConfig().metadata.markers.length > 0;
            var hasMarkersInPlayerConfig = player.getConfig().source && player.getConfig().source.markers
                && player.getConfig().source.markers.length > 0;
            // Take markers from the UI config. If no markers defined, try to take them from the player's source config.
            var markers = hasMarkersInUiConfig ? uimanager.getConfig().metadata.markers :
                hasMarkersInPlayerConfig ? player.getConfig().source.markers : null;
            // Generate timeline markers from the config if we have markers and if we have a duration
            // The duration check is for buggy platforms where the duration is not available instantly (Chrome on Android 4.3)
            if (markers && player.getDuration() !== Infinity) {
                for (var _i = 0, markers_1 = markers; _i < markers_1.length; _i++) {
                    var marker = markers_1[_i];
                    _this.timelineMarkers.push({
                        time: 100 / player.getDuration() * marker.time,
                        title: marker.title,
                    });
                }
            }
            // Populate the timeline with the markers
            _this.updateMarkers();
        };
        // Add markers when a source is loaded
        player.addEventHandler(player.EVENT.ON_READY, setupMarkers);
        // Remove markers when unloaded
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, clearMarkers);
        // Init markers at startup
        setupMarkers();
    };
    SeekBar.prototype.release = function () {
        _super.prototype.release.call(this);
        if (this.smoothPlaybackPositionUpdater) {
            this.smoothPlaybackPositionUpdater.clear();
        }
    };
    SeekBar.prototype.toDomElement = function () {
        var _this = this;
        if (this.config.vertical) {
            this.config.cssClasses.push('vertical');
        }
        var seekBarContainer = new dom_1.DOM('div', {
            'id': this.config.id,
            'class': this.getCssClasses()
        });
        var seekBar = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar')
        });
        this.seekBar = seekBar;
        // Indicator that shows the buffer fill level
        var seekBarBufferLevel = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-bufferlevel')
        });
        this.seekBarBufferPosition = seekBarBufferLevel;
        // Indicator that shows the current playback position
        var seekBarPlaybackPosition = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-playbackposition')
        });
        this.seekBarPlaybackPosition = seekBarPlaybackPosition;
        // A marker of the current playback position, e.g. a dot or line
        var seekBarPlaybackPositionMarker = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-playbackposition-marker')
        });
        this.seekBarPlaybackPositionMarker = seekBarPlaybackPositionMarker;
        // Indicator that show where a seek will go to
        var seekBarSeekPosition = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-seekposition')
        });
        this.seekBarSeekPosition = seekBarSeekPosition;
        // Indicator that shows the full seekbar
        var seekBarBackdrop = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-backdrop')
        });
        this.seekBarBackdrop = seekBarBackdrop;
        var seekBarChapterMarkersContainer = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-markers')
        });
        this.seekBarMarkersContainer = seekBarChapterMarkersContainer;
        seekBar.append(seekBarBackdrop, seekBarBufferLevel, seekBarSeekPosition, seekBarPlaybackPosition, seekBarChapterMarkersContainer, seekBarPlaybackPositionMarker);
        var seeking = false;
        // Define handler functions so we can attach/remove them later
        var mouseTouchMoveHandler = function (e) {
            e.preventDefault();
            // Avoid propagation to VR handler
            e.stopPropagation();
            var targetPercentage = 100 * _this.getOffset(e);
            _this.setSeekPosition(targetPercentage);
            _this.setPlaybackPosition(targetPercentage);
            _this.onSeekPreviewEvent(targetPercentage, true);
        };
        var mouseTouchUpHandler = function (e) {
            e.preventDefault();
            // Remove handlers, seek operation is finished
            new dom_1.DOM(document).off('touchmove mousemove', mouseTouchMoveHandler);
            new dom_1.DOM(document).off('touchend mouseup', mouseTouchUpHandler);
            var targetPercentage = 100 * _this.getOffset(e);
            var snappedChapter = _this.getMarkerAtPosition(targetPercentage);
            _this.setSeeking(false);
            seeking = false;
            // Fire seeked event
            _this.onSeekedEvent(snappedChapter ? snappedChapter.time : targetPercentage);
        };
        // A seek always start with a touchstart or mousedown directly on the seekbar.
        // To track a mouse seek also outside the seekbar (for touch events this works automatically),
        // so the user does not need to take care that the mouse always stays on the seekbar, we attach the mousemove
        // and mouseup handlers to the whole document. A seek is triggered when the user lifts the mouse key.
        // A seek mouse gesture is thus basically a click with a long time frame between down and up events.
        seekBar.on('touchstart mousedown', function (e) {
            var isTouchEvent = _this.touchSupported && e instanceof TouchEvent;
            // Prevent selection of DOM elements (also prevents mousedown if current event is touchstart)
            e.preventDefault();
            // Avoid propagation to VR handler
            e.stopPropagation();
            _this.setSeeking(true); // Set seeking class on DOM element
            seeking = true; // Set seek tracking flag
            // Fire seeked event
            _this.onSeekEvent();
            // Add handler to track the seek operation over the whole document
            new dom_1.DOM(document).on(isTouchEvent ? 'touchmove' : 'mousemove', mouseTouchMoveHandler);
            new dom_1.DOM(document).on(isTouchEvent ? 'touchend' : 'mouseup', mouseTouchUpHandler);
        });
        // Display seek target indicator when mouse hovers or finger slides over seekbar
        seekBar.on('touchmove mousemove', function (e) {
            e.preventDefault();
            if (seeking) {
                // During a seek (when mouse is down or touch move active), we need to stop propagation to avoid
                // the VR viewport reacting to the moves.
                e.stopPropagation();
                // Because the stopped propagation inhibits the event on the document, we need to call it from here
                mouseTouchMoveHandler(e);
            }
            var position = 100 * _this.getOffset(e);
            _this.setSeekPosition(position);
            _this.onSeekPreviewEvent(position, false);
            if (_this.hasLabel() && _this.getLabel().isHidden()) {
                _this.getLabel().show();
            }
        });
        // Hide seek target indicator when mouse or finger leaves seekbar
        seekBar.on('touchend mouseleave', function (e) {
            e.preventDefault();
            _this.setSeekPosition(0);
            if (_this.hasLabel()) {
                _this.getLabel().hide();
            }
        });
        seekBarContainer.append(seekBar);
        if (this.label) {
            seekBarContainer.append(this.label.getDomElement());
        }
        return seekBarContainer;
    };
    SeekBar.prototype.updateMarkers = function () {
        this.seekBarMarkersContainer.empty();
        for (var _i = 0, _a = this.timelineMarkers; _i < _a.length; _i++) {
            var marker = _a[_i];
            this.seekBarMarkersContainer.append(new dom_1.DOM('div', {
                'class': this.prefixCss('seekbar-marker'),
                'data-marker-time': String(marker.time),
                'data-marker-title': String(marker.title),
            }).css({
                'width': marker.time + '%',
            }));
        }
    };
    SeekBar.prototype.getMarkerAtPosition = function (percentage) {
        var snappedMarker = null;
        var snappingRange = 1;
        if (this.timelineMarkers.length > 0) {
            for (var _i = 0, _a = this.timelineMarkers; _i < _a.length; _i++) {
                var marker = _a[_i];
                if (percentage >= marker.time - snappingRange && percentage <= marker.time + snappingRange) {
                    snappedMarker = marker;
                    break;
                }
            }
        }
        return snappedMarker;
    };
    /**
     * Gets the horizontal offset of a mouse/touch event point from the left edge of the seek bar.
     * @param eventPageX the pageX coordinate of an event to calculate the offset from
     * @returns {number} a number in the range of [0, 1], where 0 is the left edge and 1 is the right edge
     */
    SeekBar.prototype.getHorizontalOffset = function (eventPageX) {
        var elementOffsetPx = this.seekBar.offset().left;
        var widthPx = this.seekBar.width();
        var offsetPx = eventPageX - elementOffsetPx;
        var offset = 1 / widthPx * offsetPx;
        return this.sanitizeOffset(offset);
    };
    /**
     * Gets the vertical offset of a mouse/touch event point from the bottom edge of the seek bar.
     * @param eventPageY the pageX coordinate of an event to calculate the offset from
     * @returns {number} a number in the range of [0, 1], where 0 is the bottom edge and 1 is the top edge
     */
    SeekBar.prototype.getVerticalOffset = function (eventPageY) {
        var elementOffsetPx = this.seekBar.offset().top;
        var widthPx = this.seekBar.height();
        var offsetPx = eventPageY - elementOffsetPx;
        var offset = 1 / widthPx * offsetPx;
        return 1 - this.sanitizeOffset(offset);
    };
    /**
     * Gets the mouse or touch event offset for the current configuration (horizontal or vertical).
     * @param e the event to calculate the offset from
     * @returns {number} a number in the range of [0, 1]
     * @see #getHorizontalOffset
     * @see #getVerticalOffset
     */
    SeekBar.prototype.getOffset = function (e) {
        if (this.touchSupported && e instanceof TouchEvent) {
            if (this.config.vertical) {
                return this.getVerticalOffset(e.type === 'touchend' ? e.changedTouches[0].pageY : e.touches[0].pageY);
            }
            else {
                return this.getHorizontalOffset(e.type === 'touchend' ? e.changedTouches[0].pageX : e.touches[0].pageX);
            }
        }
        else if (e instanceof MouseEvent) {
            if (this.config.vertical) {
                return this.getVerticalOffset(e.pageY);
            }
            else {
                return this.getHorizontalOffset(e.pageX);
            }
        }
        else {
            if (console) {
                console.warn('invalid event');
            }
            return 0;
        }
    };
    /**
     * Sanitizes the mouse offset to the range of [0, 1].
     *
     * When tracking the mouse outside the seek bar, the offset can be outside the desired range and this method
     * limits it to the desired range. E.g. a mouse event left of the left edge of a seek bar yields an offset below
     * zero, but to display the seek target on the seek bar, we need to limit it to zero.
     *
     * @param offset the offset to sanitize
     * @returns {number} the sanitized offset.
     */
    SeekBar.prototype.sanitizeOffset = function (offset) {
        // Since we track mouse moves over the whole document, the target can be outside the seek range,
        // and we need to limit it to the [0, 1] range.
        if (offset < 0) {
            offset = 0;
        }
        else if (offset > 1) {
            offset = 1;
        }
        return offset;
    };
    /**
     * Sets the position of the playback position indicator.
     * @param percent a number between 0 and 100 as returned by the player
     */
    SeekBar.prototype.setPlaybackPosition = function (percent) {
        this.playbackPositionPercentage = percent;
        // Set position of the bar
        this.setPosition(this.seekBarPlaybackPosition, percent);
        // Set position of the marker
        var px = (this.config.vertical ? this.seekBar.height() : this.seekBar.width()) / 100 * percent;
        if (this.config.vertical) {
            px = this.seekBar.height() - px;
        }
        var style = this.config.vertical ?
            // -ms-transform required for IE9
            { 'transform': 'translateY(' + px + 'px)', '-ms-transform': 'translateY(' + px + 'px)' } :
            { 'transform': 'translateX(' + px + 'px)', '-ms-transform': 'translateX(' + px + 'px)' };
        this.seekBarPlaybackPositionMarker.css(style);
    };
    /**
     * Refreshes the playback position. Can be used by subclasses to refresh the position when
     * the size of the component changes.
     */
    SeekBar.prototype.refreshPlaybackPosition = function () {
        this.setPlaybackPosition(this.playbackPositionPercentage);
    };
    /**
     * Sets the position until which media is buffered.
     * @param percent a number between 0 and 100
     */
    SeekBar.prototype.setBufferPosition = function (percent) {
        this.setPosition(this.seekBarBufferPosition, percent);
    };
    /**
     * Sets the position where a seek, if executed, would jump to.
     * @param percent a number between 0 and 100
     */
    SeekBar.prototype.setSeekPosition = function (percent) {
        this.setPosition(this.seekBarSeekPosition, percent);
    };
    /**
     * Set the actual position (width or height) of a DOM element that represent a bar in the seek bar.
     * @param element the element to set the position for
     * @param percent a number between 0 and 100
     */
    SeekBar.prototype.setPosition = function (element, percent) {
        var scale = percent / 100;
        var style = this.config.vertical ?
            // -ms-transform required for IE9
            { 'transform': 'scaleY(' + scale + ')', '-ms-transform': 'scaleY(' + scale + ')' } :
            { 'transform': 'scaleX(' + scale + ')', '-ms-transform': 'scaleX(' + scale + ')' };
        element.css(style);
    };
    /**
     * Puts the seek bar into or out of seeking state by adding/removing a class to the DOM element. This can be used
     * to adjust the styling while seeking.
     *
     * @param seeking should be true when entering seek state, false when exiting the seek state
     */
    SeekBar.prototype.setSeeking = function (seeking) {
        if (seeking) {
            this.getDomElement().addClass(this.prefixCss(SeekBar.CLASS_SEEKING));
        }
        else {
            this.getDomElement().removeClass(this.prefixCss(SeekBar.CLASS_SEEKING));
        }
    };
    /**
     * Checks if the seek bar is currently in the seek state.
     * @returns {boolean} true if in seek state, else false
     */
    SeekBar.prototype.isSeeking = function () {
        return this.getDomElement().hasClass(this.prefixCss(SeekBar.CLASS_SEEKING));
    };
    /**
     * Checks if the seek bar has a {@link SeekBarLabel}.
     * @returns {boolean} true if the seek bar has a label, else false
     */
    SeekBar.prototype.hasLabel = function () {
        return this.label != null;
    };
    /**
     * Gets the label of this seek bar.
     * @returns {SeekBarLabel} the label if this seek bar has a label, else null
     */
    SeekBar.prototype.getLabel = function () {
        return this.label;
    };
    SeekBar.prototype.onSeekEvent = function () {
        this.seekBarEvents.onSeek.dispatch(this);
    };
    SeekBar.prototype.onSeekPreviewEvent = function (percentage, scrubbing) {
        var snappedMarker = this.getMarkerAtPosition(percentage);
        if (this.label) {
            this.label.getDomElement().css({
                'left': (snappedMarker ? snappedMarker.time : percentage) + '%'
            });
        }
        this.seekBarEvents.onSeekPreview.dispatch(this, {
            scrubbing: scrubbing,
            position: percentage,
            marker: snappedMarker,
        });
    };
    SeekBar.prototype.onSeekedEvent = function (percentage) {
        this.seekBarEvents.onSeeked.dispatch(this, percentage);
    };
    Object.defineProperty(SeekBar.prototype, "onSeek", {
        /**
         * Gets the event that is fired when a scrubbing seek operation is started.
         * @returns {Event<SeekBar, NoArgs>}
         */
        get: function () {
            return this.seekBarEvents.onSeek.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeekBar.prototype, "onSeekPreview", {
        /**
         * Gets the event that is fired during a scrubbing seek (to indicate that the seek preview, i.e. the video frame,
         * should be updated), or during a normal seek preview when the seek bar is hovered (and the seek target,
         * i.e. the seek bar label, should be updated).
         * @returns {Event<SeekBar, SeekPreviewEventArgs>}
         */
        get: function () {
            return this.seekBarEvents.onSeekPreview.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeekBar.prototype, "onSeeked", {
        /**
         * Gets the event that is fired when a scrubbing seek has finished or when a direct seek is issued.
         * @returns {Event<SeekBar, number>}
         */
        get: function () {
            return this.seekBarEvents.onSeeked.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    SeekBar.prototype.onShowEvent = function () {
        _super.prototype.onShowEvent.call(this);
        // Refresh the position of the playback position when the seek bar becomes visible. To correctly set the position,
        // the DOM element must be fully initialized an have its size calculated, because the position is set as an absolute
        // value calculated from the size. This required size is not known when it is hidden.
        // For such cases, we refresh the position here in onShow because here it is guaranteed that the component knows
        // its size and can set the position correctly.
        this.refreshPlaybackPosition();
    };
    return SeekBar;
}(component_1.Component));
SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED = -1;
/**
 * The CSS class that is added to the DOM element while the seek bar is in 'seeking' state.
 */
SeekBar.CLASS_SEEKING = 'seeking';
exports.SeekBar = SeekBar;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var dom_1 = __webpack_require__(2);
var timeout_1 = __webpack_require__(7);
var utils_1 = __webpack_require__(3);
/**
 * The base container that contains all of the UI. The UIContainer is passed to the {@link UIManager} to build and
 * setup the UI.
 */
var UIContainer = (function (_super) {
    __extends(UIContainer, _super);
    function UIContainer(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-uicontainer',
            hideDelay: 2500,
        }, _this.config);
        return _this;
    }
    UIContainer.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        this.configureUIShowHide(player, uimanager);
        this.configurePlayerStates(player, uimanager);
    };
    UIContainer.prototype.configureUIShowHide = function (player, uimanager) {
        var _this = this;
        var container = this.getDomElement();
        var config = this.getConfig();
        var isUiShown = false;
        var isSeeking = false;
        var isFirstTouch = true;
        var showUi = function () {
            if (!isUiShown) {
                // Let subscribers know that they should reveal themselves
                uimanager.onControlsShow.dispatch(_this);
                isUiShown = true;
            }
            // Don't trigger timeout while seeking (it will be triggered once the seek is finished) or casting
            if (!isSeeking && !player.isCasting()) {
                _this.uiHideTimeout.start();
            }
        };
        var hideUi = function () {
            // Hide the UI only if it is shown, and if not casting
            if (isUiShown && !player.isCasting()) {
                // Issue a preview event to check if we are good to hide the controls
                var previewHideEventArgs = {};
                uimanager.onPreviewControlsHide.dispatch(_this, previewHideEventArgs);
                if (!previewHideEventArgs.cancel) {
                    // If the preview wasn't canceled, let subscribers know that they should now hide themselves
                    uimanager.onControlsHide.dispatch(_this);
                    isUiShown = false;
                }
                else {
                    // If the hide preview was canceled, continue to show UI
                    showUi();
                }
            }
        };
        // Timeout to defer UI hiding by the configured delay time
        this.uiHideTimeout = new timeout_1.Timeout(config.hideDelay, hideUi);
        // On touch displays, the first touch reveals the UI
        container.on('touchend', function (e) {
            if (!isUiShown) {
                // Only if the UI is hidden, we prevent other actions (except for the first touch) and reveal the UI instead.
                // The first touch is not prevented to let other listeners receive the event and trigger an initial action, e.g.
                // the huge playback button can directly start playback instead of requiring a double tap which 1. reveals
                // the UI and 2. starts playback.
                if (isFirstTouch) {
                    isFirstTouch = false;
                }
                else {
                    // e.preventDefault();
                }
                showUi();
            }
        });
        // When the mouse enters, we show the UI
        container.on('mouseenter', function () {
            showUi();
        });
        // When the mouse moves within, we show the UI
        container.on('mousemove', function () {
            showUi();
        });
        // When the mouse leaves, we can prepare to hide the UI, except a seek is going on
        container.on('mouseleave', function () {
            // When a seek is going on, the seek scrub pointer may exit the UI area while still seeking, and we do not hide
            // the UI in such cases
            if (!isSeeking) {
                _this.uiHideTimeout.start();
            }
        });
        uimanager.onSeek.subscribe(function () {
            _this.uiHideTimeout.clear(); // Don't hide UI while a seek is in progress
            isSeeking = true;
        });
        uimanager.onSeeked.subscribe(function () {
            isSeeking = false;
            _this.uiHideTimeout.start(); // Re-enable UI hide timeout after a seek
        });
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function () {
            showUi(); // Show UI when a Cast session has started (UI will then stay permanently on during the session)
        });
    };
    UIContainer.prototype.configurePlayerStates = function (player, uimanager) {
        var _this = this;
        var container = this.getDomElement();
        // Convert player states into CSS class names
        var stateClassNames = [];
        for (var state in utils_1.PlayerUtils.PlayerState) {
            if (isNaN(Number(state))) {
                var enumName = utils_1.PlayerUtils.PlayerState[utils_1.PlayerUtils.PlayerState[state]];
                stateClassNames[utils_1.PlayerUtils.PlayerState[state]] =
                    this.prefixCss(UIContainer.STATE_PREFIX + enumName.toLowerCase());
            }
        }
        var removeStates = function () {
            container.removeClass(stateClassNames[utils_1.PlayerUtils.PlayerState.IDLE]);
            container.removeClass(stateClassNames[utils_1.PlayerUtils.PlayerState.PREPARED]);
            container.removeClass(stateClassNames[utils_1.PlayerUtils.PlayerState.PLAYING]);
            container.removeClass(stateClassNames[utils_1.PlayerUtils.PlayerState.PAUSED]);
            container.removeClass(stateClassNames[utils_1.PlayerUtils.PlayerState.FINISHED]);
        };
        player.addEventHandler(player.EVENT.ON_READY, function () {
            removeStates();
            container.addClass(stateClassNames[utils_1.PlayerUtils.PlayerState.PREPARED]);
        });
        player.addEventHandler(player.EVENT.ON_PLAY, function () {
            removeStates();
            container.addClass(stateClassNames[utils_1.PlayerUtils.PlayerState.PLAYING]);
        });
        player.addEventHandler(player.EVENT.ON_PAUSED, function () {
            removeStates();
            container.addClass(stateClassNames[utils_1.PlayerUtils.PlayerState.PAUSED]);
        });
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, function () {
            removeStates();
            container.addClass(stateClassNames[utils_1.PlayerUtils.PlayerState.FINISHED]);
        });
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, function () {
            removeStates();
            container.addClass(stateClassNames[utils_1.PlayerUtils.PlayerState.IDLE]);
        });
        // Init in current player state
        container.addClass(stateClassNames[utils_1.PlayerUtils.getState(player)]);
        // Fullscreen marker class
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_ENTER, function () {
            container.addClass(_this.prefixCss(UIContainer.FULLSCREEN));
        });
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_EXIT, function () {
            container.removeClass(_this.prefixCss(UIContainer.FULLSCREEN));
        });
        // Init fullscreen state
        if (player.isFullscreen()) {
            container.addClass(this.prefixCss(UIContainer.FULLSCREEN));
        }
        // Buffering marker class
        player.addEventHandler(player.EVENT.ON_STALL_STARTED, function () {
            container.addClass(_this.prefixCss(UIContainer.BUFFERING));
        });
        player.addEventHandler(player.EVENT.ON_STALL_ENDED, function () {
            container.removeClass(_this.prefixCss(UIContainer.BUFFERING));
        });
        // Init buffering state
        if (player.isStalled()) {
            container.addClass(this.prefixCss(UIContainer.BUFFERING));
        }
        // RemoteControl marker class
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function () {
            container.addClass(_this.prefixCss(UIContainer.REMOTE_CONTROL));
        });
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, function () {
            container.removeClass(_this.prefixCss(UIContainer.REMOTE_CONTROL));
        });
        // Init RemoteControl state
        if (player.isCasting()) {
            container.addClass(this.prefixCss(UIContainer.REMOTE_CONTROL));
        }
        // Controls visibility marker class
        uimanager.onControlsShow.subscribe(function () {
            container.removeClass(_this.prefixCss(UIContainer.CONTROLS_HIDDEN));
            container.addClass(_this.prefixCss(UIContainer.CONTROLS_SHOWN));
        });
        uimanager.onControlsHide.subscribe(function () {
            container.removeClass(_this.prefixCss(UIContainer.CONTROLS_SHOWN));
            container.addClass(_this.prefixCss(UIContainer.CONTROLS_HIDDEN));
        });
        // Layout size classes
        var updateLayoutSizeClasses = function (width, height) {
            container.removeClass(_this.prefixCss('layout-max-width-400'));
            container.removeClass(_this.prefixCss('layout-max-width-600'));
            container.removeClass(_this.prefixCss('layout-max-width-800'));
            container.removeClass(_this.prefixCss('layout-max-width-1200'));
            if (width <= 400) {
                container.addClass(_this.prefixCss('layout-max-width-400'));
            }
            else if (width <= 600) {
                container.addClass(_this.prefixCss('layout-max-width-600'));
            }
            else if (width <= 800) {
                container.addClass(_this.prefixCss('layout-max-width-800'));
            }
            else if (width <= 1200) {
                container.addClass(_this.prefixCss('layout-max-width-1200'));
            }
        };
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function (e) {
            // Convert strings (with "px" suffix) to ints
            var width = Math.round(Number(e.width.substring(0, e.width.length - 2)));
            var height = Math.round(Number(e.height.substring(0, e.height.length - 2)));
            updateLayoutSizeClasses(width, height);
        });
        // Init layout state
        updateLayoutSizeClasses(new dom_1.DOM(player.getFigure()).width(), new dom_1.DOM(player.getFigure()).height());
    };
    UIContainer.prototype.release = function () {
        _super.prototype.release.call(this);
        this.uiHideTimeout.clear();
    };
    UIContainer.prototype.toDomElement = function () {
        var container = _super.prototype.toDomElement.call(this);
        // Detect flexbox support (not supported in IE9)
        if (document && typeof document.createElement('p').style.flex !== 'undefined') {
            container.addClass(this.prefixCss('flexbox'));
        }
        else {
            container.addClass(this.prefixCss('no-flexbox'));
        }
        return container;
    };
    return UIContainer;
}(container_1.Container));
UIContainer.STATE_PREFIX = 'player-state-';
UIContainer.FULLSCREEN = 'fullscreen';
UIContainer.BUFFERING = 'buffering';
UIContainer.REMOTE_CONTROL = 'remote-control';
UIContainer.CONTROLS_SHOWN = 'controls-shown';
UIContainer.CONTROLS_HIDDEN = 'controls-hidden';
exports.UIContainer = UIContainer;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var label_1 = __webpack_require__(6);
var utils_1 = __webpack_require__(3);
var PlaybackTimeLabelMode;
(function (PlaybackTimeLabelMode) {
    PlaybackTimeLabelMode[PlaybackTimeLabelMode["CurrentTime"] = 0] = "CurrentTime";
    PlaybackTimeLabelMode[PlaybackTimeLabelMode["TotalTime"] = 1] = "TotalTime";
    PlaybackTimeLabelMode[PlaybackTimeLabelMode["CurrentAndTotalTime"] = 2] = "CurrentAndTotalTime";
})(PlaybackTimeLabelMode = exports.PlaybackTimeLabelMode || (exports.PlaybackTimeLabelMode = {}));
/**
 * A label that display the current playback time and the total time through {@link PlaybackTimeLabel#setTime setTime}
 * or any string through {@link PlaybackTimeLabel#setText setText}.
 */
var PlaybackTimeLabel = (function (_super) {
    __extends(PlaybackTimeLabel, _super);
    function PlaybackTimeLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-playbacktimelabel',
            timeLabelMode: PlaybackTimeLabelMode.CurrentAndTotalTime,
            hideInLivePlayback: false,
        }, _this.config);
        return _this;
    }
    PlaybackTimeLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var live = false;
        var liveCssClass = this.prefixCss('ui-playbacktimelabel-live');
        var liveEdgeCssClass = this.prefixCss('ui-playbacktimelabel-live-edge');
        var minWidth = 0;
        var liveClickHandler = function () {
            player.timeShift(0);
        };
        var updateLiveState = function () {
            // Player is playing a live stream when the duration is infinite
            live = player.isLive();
            // Attach/detach live marker class
            if (live) {
                _this.getDomElement().addClass(liveCssClass);
                _this.setText('Live');
                if (config.hideInLivePlayback) {
                    _this.hide();
                }
                _this.onClick.subscribe(liveClickHandler);
                updateLiveTimeshiftState();
            }
            else {
                _this.getDomElement().removeClass(liveCssClass);
                _this.getDomElement().removeClass(liveEdgeCssClass);
                _this.show();
                _this.onClick.unsubscribe(liveClickHandler);
            }
        };
        var updateLiveTimeshiftState = function () {
            if (player.getTimeShift() === 0) {
                _this.getDomElement().addClass(liveEdgeCssClass);
            }
            else {
                _this.getDomElement().removeClass(liveEdgeCssClass);
            }
        };
        var liveStreamDetector = new utils_1.PlayerUtils.LiveStreamDetector(player);
        liveStreamDetector.onLiveChanged.subscribe(function (sender, args) {
            live = args.live;
            updateLiveState();
        });
        liveStreamDetector.detect(); // Initial detection
        var playbackTimeHandler = function () {
            if (!live && player.getDuration() !== Infinity) {
                _this.setTime(player.getCurrentTime(), player.getDuration());
            }
            // To avoid 'jumping' in the UI by varying label sizes due to non-monospaced fonts,
            // we gradually increase the min-width with the content to reach a stable size.
            var width = _this.getDomElement().width();
            if (width > minWidth) {
                minWidth = width;
                _this.getDomElement().css({
                    'min-width': minWidth + 'px'
                });
            }
        };
        player.addEventHandler(player.EVENT.ON_TIME_CHANGED, playbackTimeHandler);
        player.addEventHandler(player.EVENT.ON_SEEKED, playbackTimeHandler);
        player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, playbackTimeHandler);
        player.addEventHandler(player.EVENT.ON_TIME_SHIFT, updateLiveTimeshiftState);
        player.addEventHandler(player.EVENT.ON_TIME_SHIFTED, updateLiveTimeshiftState);
        var init = function () {
            // Reset min-width when a new source is ready (especially for switching VOD/Live modes where the label content
            // changes)
            minWidth = 0;
            _this.getDomElement().css({
                'min-width': null
            });
            // Set time format depending on source duration
            _this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?
                utils_1.StringUtils.FORMAT_HHMMSS : utils_1.StringUtils.FORMAT_MMSS;
            // Update time after the format has been set
            playbackTimeHandler();
        };
        player.addEventHandler(player.EVENT.ON_READY, init);
        init();
    };
    /**
     * Sets the current playback time and total duration.
     * @param playbackSeconds the current playback time in seconds
     * @param durationSeconds the total duration in seconds
     */
    PlaybackTimeLabel.prototype.setTime = function (playbackSeconds, durationSeconds) {
        var currentTime = utils_1.StringUtils.secondsToTime(playbackSeconds, this.timeFormat);
        var totalTime = utils_1.StringUtils.secondsToTime(durationSeconds, this.timeFormat);
        switch (this.config.timeLabelMode) {
            case PlaybackTimeLabelMode.CurrentTime:
                this.setText("" + currentTime);
                break;
            case PlaybackTimeLabelMode.TotalTime:
                this.setText("" + totalTime);
                break;
            case PlaybackTimeLabelMode.CurrentAndTotalTime:
                this.setText(currentTime + " / " + totalTime);
                break;
        }
    };
    return PlaybackTimeLabel;
}(label_1.Label));
exports.PlaybackTimeLabel = PlaybackTimeLabel;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var utils_1 = __webpack_require__(3);
var spacer_1 = __webpack_require__(15);
/**
 * A container for main player control components, e.g. play toggle button, seek bar, volume control, fullscreen toggle
 * button.
 */
var ControlBar = (function (_super) {
    __extends(ControlBar, _super);
    function ControlBar(config, autoHide) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-controlbar',
            hidden: autoHide
        }, _this.config);
        return _this;
    }
    ControlBar.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        var self = this;
        // Counts how many components are hovered and block hiding of the control bar
        var hoverStackCount = 0;
        // Track hover status of child components
        utils_1.UIUtils.traverseTree(this, function (component) {
            // Do not track hover status of child containers or spacers, only of 'real' controls
            if (component instanceof container_1.Container || component instanceof spacer_1.Spacer) {
                return;
            }
            // Subscribe hover event and keep a count of the number of hovered children
            component.onHoverChanged.subscribe(function (sender, args) {
                if (args.hovered) {
                    hoverStackCount++;
                }
                else {
                    hoverStackCount--;
                }
            });
        });
        uimanager.onControlsShow.subscribe(function () {
            if (self.config.hidden) {
                self.show();
            }
        });
        uimanager.onPreviewControlsHide.subscribe(function (sender, args) {
            // Cancel the hide event if hovered child components block hiding
            args.cancel = (hoverStackCount > 0);
        });
        uimanager.onControlsHide.subscribe(function () {
            if (self.config.hidden) {
                self.hide();
            }
        });
    };
    return ControlBar;
}(container_1.Container));
exports.ControlBar = ControlBar;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(1);
/**
 * A dummy component that just reserves some space and does nothing else.
 */
var Spacer = (function (_super) {
    __extends(Spacer, _super);
    function Spacer(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-spacer',
        }, _this.config);
        return _this;
    }
    Spacer.prototype.onShowEvent = function () {
        // disable event firing by overwriting and not calling super
    };
    Spacer.prototype.onHideEvent = function () {
        // disable event firing by overwriting and not calling super
    };
    Spacer.prototype.onHoverChangedEvent = function (hovered) {
        // disable event firing by overwriting and not calling super
    };
    return Spacer;
}(component_1.Component));
exports.Spacer = Spacer;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var component_1 = __webpack_require__(1);
var utils_1 = __webpack_require__(3);
/**
 * A label for a {@link SeekBar} that can display the seek target time, a thumbnail, and title (e.g. chapter title).
 */
var SeekBarLabel = (function (_super) {
    __extends(SeekBarLabel, _super);
    function SeekBarLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.timeLabel = new label_1.Label({ cssClasses: ['seekbar-label-time'] });
        _this.titleLabel = new label_1.Label({ cssClasses: ['seekbar-label-title'] });
        _this.thumbnail = new component_1.Component({ cssClasses: ['seekbar-thumbnail'] });
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-seekbar-label',
            components: [new container_1.Container({
                    components: [
                        // this.thumbnail,
                        new container_1.Container({
                            components: [_this.titleLabel, _this.timeLabel],
                            cssClass: 'seekbar-label-metadata',
                        })
                    ],
                    cssClass: 'seekbar-label-inner',
                })],
            hidden: true
        }, _this.config);
        return _this;
    }
    SeekBarLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        uimanager.onSeekPreview.subscribe(function (sender, args) {
            if (player.isLive()) {
                var time = player.getMaxTimeShift() - player.getMaxTimeShift() * (args.position / 100);
                _this.setTime(time);
            }
            else {
                var percentage = 0;
                if (args.marker) {
                    percentage = args.marker.time;
                    _this.setTitleText(args.marker.title);
                }
                else {
                    percentage = args.position;
                    _this.setTitleText(null);
                }
                var time = player.getDuration() * (percentage / 100);
                _this.setTime(time);
                _this.setThumbnail(player.getThumb(time));
            }
        });
        var init = function () {
            // Set time format depending on source duration
            _this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?
                utils_1.StringUtils.FORMAT_HHMMSS : utils_1.StringUtils.FORMAT_MMSS;
        };
        player.addEventHandler(player.EVENT.ON_READY, init);
        init();
    };
    /**
     * Sets arbitrary text on the label.
     * @param text the text to show on the label
     */
    SeekBarLabel.prototype.setText = function (text) {
        this.timeLabel.setText(text);
    };
    /**
     * Sets a time to be displayed on the label.
     * @param seconds the time in seconds to display on the label
     */
    SeekBarLabel.prototype.setTime = function (seconds) {
        this.setText(utils_1.StringUtils.secondsToTime(seconds, this.timeFormat));
    };
    /**
     * Sets the text on the title label.
     * @param text the text to show on the label
     */
    SeekBarLabel.prototype.setTitleText = function (text) {
        this.titleLabel.setText(text);
    };
    /**
     * Sets or removes a thumbnail on the label.
     * @param thumbnail the thumbnail to display on the label or null to remove a displayed thumbnail
     */
    SeekBarLabel.prototype.setThumbnail = function (thumbnail) {
        if (thumbnail === void 0) { thumbnail = null; }
        var thumbnailElement = this.thumbnail.getDomElement();
        if (thumbnail == null) {
            thumbnailElement.css({
                'background-image': null,
                'display': null,
                'width': null,
                'height': null
            });
        }
        else {
            thumbnailElement.css({
                'display': 'inherit',
                'background-image': "url(" + thumbnail.url + ")",
                'width': thumbnail.w + 'px',
                'height': thumbnail.h + 'px',
                'background-position': "-" + thumbnail.x + "px -" + thumbnail.y + "px"
            });
        }
    };
    return SeekBarLabel;
}(container_1.Container));
exports.SeekBarLabel = SeekBarLabel;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var volumeslider_1 = __webpack_require__(18);
var volumetogglebutton_1 = __webpack_require__(19);
var timeout_1 = __webpack_require__(7);
/**
 * A composite volume control that consists of and internally manages a volume control button that can be used
 * for muting, and a (depending on the CSS style, e.g. slide-out) volume control bar.
 */
var VolumeControlButton = (function (_super) {
    __extends(VolumeControlButton, _super);
    function VolumeControlButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.volumeToggleButton = new volumetogglebutton_1.VolumeToggleButton();
        _this.volumeSlider = new volumeslider_1.VolumeSlider({
            vertical: config.vertical != null ? config.vertical : true,
            hidden: true
        });
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-volumecontrolbutton',
            components: [_this.volumeToggleButton, _this.volumeSlider],
            hideDelay: 500
        }, _this.config);
        return _this;
    }
    VolumeControlButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var volumeToggleButton = this.getVolumeToggleButton();
        var volumeSlider = this.getVolumeSlider();
        this.volumeSliderHideTimeout = new timeout_1.Timeout(this.getConfig().hideDelay, function () {
            volumeSlider.hide();
        });
        /*
         * Volume Slider visibility handling
         *
         * The volume slider shall be visible while the user hovers the mute toggle button, while the user hovers the
         * volume slider, and while the user slides the volume slider. If none of these situations are true, the slider
         * shall disappear.
         */
        var volumeSliderHovered = false;
        volumeToggleButton.getDomElement().on('mouseenter', function () {
            // Show volume slider when mouse enters the button area
            if (volumeSlider.isHidden()) {
                volumeSlider.show();
            }
            // Avoid hiding of the slider when button is hovered
            _this.volumeSliderHideTimeout.clear();
        });
        volumeToggleButton.getDomElement().on('mouseleave', function () {
            // Hide slider delayed when button is left
            _this.volumeSliderHideTimeout.reset();
        });
        volumeSlider.getDomElement().on('mouseenter', function () {
            // When the slider is entered, cancel the hide timeout activated by leaving the button
            _this.volumeSliderHideTimeout.clear();
            volumeSliderHovered = true;
        });
        volumeSlider.getDomElement().on('mouseleave', function () {
            // When mouse leaves the slider, only hide it if there is no slide operation in progress
            if (volumeSlider.isSeeking()) {
                _this.volumeSliderHideTimeout.clear();
            }
            else {
                _this.volumeSliderHideTimeout.reset();
            }
            volumeSliderHovered = false;
        });
        volumeSlider.onSeeked.subscribe(function () {
            // When a slide operation is done and the slider not hovered (mouse outside slider), hide slider delayed
            if (!volumeSliderHovered) {
                _this.volumeSliderHideTimeout.reset();
            }
        });
    };
    VolumeControlButton.prototype.release = function () {
        _super.prototype.release.call(this);
        this.volumeSliderHideTimeout.clear();
    };
    /**
     * Provides access to the internally managed volume toggle button.
     * @returns {VolumeToggleButton}
     */
    VolumeControlButton.prototype.getVolumeToggleButton = function () {
        return this.volumeToggleButton;
    };
    /**
     * Provides access to the internally managed volume silder.
     * @returns {VolumeSlider}
     */
    VolumeControlButton.prototype.getVolumeSlider = function () {
        return this.volumeSlider;
    };
    return VolumeControlButton;
}(container_1.Container));
exports.VolumeControlButton = VolumeControlButton;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var seekbar_1 = __webpack_require__(11);
/**
 * A simple volume slider component to adjust the player's volume setting.
 */
var VolumeSlider = (function (_super) {
    __extends(VolumeSlider, _super);
    function VolumeSlider(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-volumeslider',
            hideIfVolumeControlProhibited: true,
        }, _this.config);
        return _this;
    }
    VolumeSlider.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager, false);
        var config = this.getConfig();
        if (config.hideIfVolumeControlProhibited && !this.detectVolumeControlAvailability(player)) {
            this.hide();
            // We can just return from here, because the user will never interact with the control and any configured
            // functionality would only eat resources for no reason.
            return;
        }
        var volumeChangeHandler = function () {
            if (player.isMuted()) {
                _this.setPlaybackPosition(0);
                _this.setBufferPosition(0);
            }
            else {
                _this.setPlaybackPosition(player.getVolume());
                _this.setBufferPosition(player.getVolume());
            }
        };
        player.addEventHandler(player.EVENT.ON_READY, volumeChangeHandler);
        player.addEventHandler(player.EVENT.ON_VOLUME_CHANGED, volumeChangeHandler);
        player.addEventHandler(player.EVENT.ON_MUTED, volumeChangeHandler);
        player.addEventHandler(player.EVENT.ON_UNMUTED, volumeChangeHandler);
        this.onSeekPreview.subscribe(function (sender, args) {
            if (args.scrubbing) {
                player.setVolume(args.position);
            }
        });
        this.onSeeked.subscribe(function (sender, percentage) {
            player.setVolume(percentage);
        });
        // Update the volume slider marker when the player resized, a source is loaded and player is ready,
        // or the UI is configured. Check the seekbar for a detailed description.
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () {
            _this.refreshPlaybackPosition();
        });
        player.addEventHandler(player.EVENT.ON_READY, function () {
            _this.refreshPlaybackPosition();
        });
        uimanager.onConfigured.subscribe(function () {
            _this.refreshPlaybackPosition();
        });
        // Init volume bar
        volumeChangeHandler();
    };
    VolumeSlider.prototype.detectVolumeControlAvailability = function (player) {
        // Store current player state so we can restore it later
        var volume = player.getVolume();
        var muted = player.isMuted();
        var playing = player.isPlaying();
        /*
         * "On iOS devices, the audio level is always under the user’s physical control. The volume property is not
         * settable in JavaScript. Reading the volume property always returns 1."
         * https://developer.apple.com/library/content/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html
         *
         * Our player API returns a volume range of [0, 100] so we need to check for 100 instead of 1.
         */
        // Only if the volume is 100, there's the possibility we are on a volume-control-restricted iOS device
        if (volume === 100) {
            // We set the volume to zero (that's the only value that does not unmute a muted player!)
            player.setVolume(0);
            // Then we check if the value is still 100
            if (player.getVolume() === 100) {
                // If the volume stayed at 100, we're on a volume-control-restricted device
                return false;
            }
            else {
                // We can control volume, so we must restore the previous player state
                player.setVolume(volume);
                if (muted) {
                    player.mute();
                }
                if (playing) {
                    // The volume restore above pauses autoplay on mobile devices (e.g. Android) so we need to resume playback
                    // (We cannot check isPaused() here because it is not set when playback is prohibited by the mobile platform)
                    player.play();
                }
                return true;
            }
        }
        else {
            // Volume is not 100, so we're definitely not on a volume-control-restricted iOS device
            return true;
        }
    };
    return VolumeSlider;
}(seekbar_1.SeekBar));
exports.VolumeSlider = VolumeSlider;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(10);
/**
 * A button that toggles audio muting.
 */
var VolumeToggleButton = (function (_super) {
    __extends(VolumeToggleButton, _super);
    function VolumeToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-volumetogglebutton',
            text: 'Volume/Mute'
        }, _this.config);
        return _this;
    }
    VolumeToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var muteStateHandler = function () {
            if (player.isMuted()) {
                _this.on();
            }
            else {
                _this.off();
            }
        };
        var volumeLevelHandler = function () {
            // Toggle low class to display low volume icon below 50% volume
            if (player.getVolume() < 50) {
                _this.getDomElement().addClass(_this.prefixCss('low'));
            }
            else {
                _this.getDomElement().removeClass(_this.prefixCss('low'));
            }
        };
        player.addEventHandler(player.EVENT.ON_MUTED, muteStateHandler);
        player.addEventHandler(player.EVENT.ON_UNMUTED, muteStateHandler);
        player.addEventHandler(player.EVENT.ON_VOLUME_CHANGED, volumeLevelHandler);
        this.onClick.subscribe(function () {
            if (player.isMuted()) {
                player.unmute();
            }
            else {
                player.mute();
            }
        });
        // Startup init
        muteStateHandler();
        volumeLevelHandler();
    };
    return VolumeToggleButton;
}(togglebutton_1.ToggleButton));
exports.VolumeToggleButton = VolumeToggleButton;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var tvnoisecanvas_1 = __webpack_require__(33);
/**
 * Overlays the player and displays error messages.
 */
var ErrorMessageOverlay = (function (_super) {
    __extends(ErrorMessageOverlay, _super);
    function ErrorMessageOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.errorLabel = new label_1.Label({ cssClass: 'ui-errormessage-label' });
        _this.tvNoiseBackground = new tvnoisecanvas_1.TvNoiseCanvas();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-errormessage-overlay',
            components: [_this.tvNoiseBackground, _this.errorLabel],
            hidden: true
        }, _this.config);
        return _this;
    }
    ErrorMessageOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        player.addEventHandler(player.EVENT.ON_ERROR, function (event) {
            var message = event.message;
            // Process message translations
            if (config.messages) {
                if (typeof config.messages === 'function') {
                    // Translation function for all errors
                    message = config.messages(event);
                }
                else if (config.messages[event.code]) {
                    // It's not a translation function, so it must be a map of strings or translation functions
                    var customMessage = config.messages[event.code];
                    if (typeof customMessage === 'string') {
                        message = customMessage;
                    }
                    else {
                        // The message is a translation function, so we call it
                        message = customMessage(event);
                    }
                }
            }
            _this.errorLabel.setText(message);
            _this.tvNoiseBackground.start();
            _this.show();
        });
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, function (event) {
            if (_this.isShown()) {
                _this.tvNoiseBackground.stop();
                _this.hide();
            }
        });
    };
    return ErrorMessageOverlay;
}(container_1.Container));
exports.ErrorMessageOverlay = ErrorMessageOverlay;


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var hugeplaybacktogglebutton_1 = __webpack_require__(22);
/**
 * Overlays the player and displays error messages.
 */
var PlaybackToggleOverlay = (function (_super) {
    __extends(PlaybackToggleOverlay, _super);
    function PlaybackToggleOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.playbackToggleButton = new hugeplaybacktogglebutton_1.HugePlaybackToggleButton();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-playbacktoggle-overlay',
            components: [_this.playbackToggleButton]
        }, _this.config);
        return _this;
    }
    return PlaybackToggleOverlay;
}(container_1.Container));
exports.PlaybackToggleOverlay = PlaybackToggleOverlay;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var playbacktogglebutton_1 = __webpack_require__(9);
var dom_1 = __webpack_require__(2);
/**
 * A button that overlays the video and toggles between playback and pause.
 */
var HugePlaybackToggleButton = (function (_super) {
    __extends(HugePlaybackToggleButton, _super);
    function HugePlaybackToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-hugeplaybacktogglebutton',
            text: 'Play/Pause'
        }, _this.config);
        return _this;
    }
    HugePlaybackToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        // Update button state through API events
        _super.prototype.configure.call(this, player, uimanager, false);
        var togglePlayback = function () {
            if (player.isPlaying()) {
                player.pause('ui-overlay');
            }
            else {
                player.play('ui-overlay');
            }
        };
        var toggleFullscreen = function () {
            if (player.isFullscreen()) {
                player.exitFullscreen();
            }
            else {
                // player.enterFullscreen();
            }
        };
        var firstPlay = true;
        var clickTime = 0;
        var doubleClickTime = 0;
        /*
         * YouTube-style toggle button handling
         *
         * The goal is to prevent a short pause or playback interval between a click, that toggles playback, and a
         * double click, that toggles fullscreen. In this naive approach, the first click would e.g. start playback,
         * the second click would be detected as double click and toggle to fullscreen, and as second normal click stop
         * playback, which results is a short playback interval with max length of the double click detection
         * period (usually 500ms).
         *
         * To solve this issue, we defer handling of the first click for 200ms, which is almost unnoticeable to the user,
         * and just toggle playback if no second click (double click) has been registered during this period. If a double
         * click is registered, we just toggle the fullscreen. In the first 200ms, undesired playback changes thus cannot
         * happen. If a double click is registered within 500ms, we undo the playback change and switch fullscreen mode.
         * In the end, this method basically introduces a 200ms observing interval in which playback changes are prevented
         * if a double click happens.
         */
        this.onClick.subscribe(function () {
            // Directly start playback on first click of the button.
            // This is a required workaround for mobile browsers where video playback needs to be triggered directly
            // by the user. A deferred playback start through the timeout below is not considered as user action and
            // therefore ignored by mobile browsers.
            if (firstPlay) {
                // Try to start playback. Then we wait for ON_PLAY and only when it arrives, we disable the firstPlay flag.
                // If we disable the flag here, onClick was triggered programmatically instead of by a user interaction, and
                // playback is blocked (e.g. on mobile devices due to the programmatic play() call), we loose the chance to
                // ever start playback through a user interaction again with this button.
                togglePlayback();
                return;
            }
            var now = Date.now();
            if (now - clickTime < 200) {
                // We have a double click inside the 200ms interval, just toggle fullscreen mode
                toggleFullscreen();
                doubleClickTime = now;
                return;
            }
            else if (now - clickTime < 500) {
                // We have a double click inside the 500ms interval, undo playback toggle and toggle fullscreen mode
                toggleFullscreen();
                togglePlayback();
                doubleClickTime = now;
                return;
            }
            clickTime = now;
            setTimeout(function () {
                if (Date.now() - doubleClickTime > 200) {
                    // No double click detected, so we toggle playback and wait what happens next
                    togglePlayback();
                }
            }, 200);
        });
        player.addEventHandler(player.EVENT.ON_PLAY, function () {
            // Playback has really started, we can disable the flag to switch to normal toggle button handling
            firstPlay = false;
        });
        // Hide button while initializing a Cast session
        var castInitializationHandler = function (event) {
            if (event.type === player.EVENT.ON_CAST_START) {
                // Hide button when session is being initialized
                _this.hide();
            }
            else {
                // Show button when session is established or initialization was aborted
                _this.show();
            }
        };
        player.addEventHandler(player.EVENT.ON_CAST_START, castInitializationHandler);
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, castInitializationHandler);
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, castInitializationHandler);
    };
    HugePlaybackToggleButton.prototype.toDomElement = function () {
        var buttonElement = _super.prototype.toDomElement.call(this);
        // Add child that contains the play button image
        // Setting the image directly on the button does not work together with scaling animations, because the button
        // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined
        // to the size if the image, it can scale inside the player without overshooting.
        buttonElement.append(new dom_1.DOM('div', {
            'class': this.prefixCss('image')
        }));
        return buttonElement;
    };
    return HugePlaybackToggleButton;
}(playbacktogglebutton_1.PlaybackToggleButton));
exports.HugePlaybackToggleButton = HugePlaybackToggleButton;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var listselector_1 = __webpack_require__(35);
var dom_1 = __webpack_require__(2);
/**
 * A simple select box providing the possibility to select a single item out of a list of available items.
 *
 * DOM example:
 * <code>
 *     <select class='ui-selectbox'>
 *         <option value='key'>label</option>
 *         ...
 *     </select>
 * </code>
 */
var SelectBox = (function (_super) {
    __extends(SelectBox, _super);
    function SelectBox(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-selectbox'
        }, _this.config);
        return _this;
    }
    SelectBox.prototype.toDomElement = function () {
        var _this = this;
        var selectElement = new dom_1.DOM('select', {
            'id': this.config.id,
            'class': this.getCssClasses()
        });
        this.selectElement = selectElement;
        this.updateDomItems();
        selectElement.on('change', function () {
            var value = selectElement.val();
            _this.onItemSelectedEvent(value, false);
        });
        return selectElement;
    };
    SelectBox.prototype.updateDomItems = function (selectedValue) {
        if (selectedValue === void 0) { selectedValue = null; }
        // Delete all children
        this.selectElement.empty();
        // Add updated children
        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
            var item = _a[_i];
            var optionElement = new dom_1.DOM('option', {
                'value': item.key
            }).html(item.label);
            if (item.key === selectedValue + '') {
                optionElement.attr('selected', 'selected');
            }
            this.selectElement.append(optionElement);
        }
    };
    SelectBox.prototype.onItemAddedEvent = function (value) {
        _super.prototype.onItemAddedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    SelectBox.prototype.onItemRemovedEvent = function (value) {
        _super.prototype.onItemRemovedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    SelectBox.prototype.onItemSelectedEvent = function (value, updateDomItems) {
        if (updateDomItems === void 0) { updateDomItems = true; }
        _super.prototype.onItemSelectedEvent.call(this, value);
        if (updateDomItems) {
            this.updateDomItems(value);
        }
    };
    return SelectBox;
}(listselector_1.ListSelector));
exports.SelectBox = SelectBox;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(5);
/**
 * A click overlay that opens an url in a new tab if clicked.
 */
var ClickOverlay = (function (_super) {
    __extends(ClickOverlay, _super);
    function ClickOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-clickoverlay'
        }, _this.config);
        return _this;
    }
    ClickOverlay.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.setUrl(this.config.url);
        var element = this.getDomElement();
        element.on('click', function () {
            if (element.data('url')) {
                window.open(element.data('url'), '_blank');
            }
        });
    };
    /**
     * Gets the URL that should be followed when the watermark is clicked.
     * @returns {string} the watermark URL
     */
    ClickOverlay.prototype.getUrl = function () {
        return this.getDomElement().data('url');
    };
    ClickOverlay.prototype.setUrl = function (url) {
        if (url === undefined || url == null) {
            url = '';
        }
        this.getDomElement().data('url', url);
    };
    return ClickOverlay;
}(button_1.Button));
exports.ClickOverlay = ClickOverlay;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var label_1 = __webpack_require__(6);
/**
 * Enumerates the types of content that the {@link MetadataLabel} can display.
 */
var MetadataLabelContent;
(function (MetadataLabelContent) {
    /**
     * Title of the data source.
     */
    MetadataLabelContent[MetadataLabelContent["Title"] = 0] = "Title";
    /**
     * Description fo the data source.
     */
    MetadataLabelContent[MetadataLabelContent["Description"] = 1] = "Description";
})(MetadataLabelContent = exports.MetadataLabelContent || (exports.MetadataLabelContent = {}));
/**
 * A label that can be configured to display certain metadata.
 */
var MetadataLabel = (function (_super) {
    __extends(MetadataLabel, _super);
    function MetadataLabel(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClasses: ['label-metadata', 'label-metadata-' + MetadataLabelContent[config.content].toLowerCase()]
        }, _this.config);
        return _this;
    }
    MetadataLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var uiconfig = uimanager.getConfig();
        var init = function () {
            switch (config.content) {
                case MetadataLabelContent.Title:
                    if (uiconfig && uiconfig.metadata && uiconfig.metadata.title) {
                        _this.setText(uiconfig.metadata.title);
                    }
                    else if (player.getConfig().source && player.getConfig().source.title) {
                        _this.setText(player.getConfig().source.title);
                    }
                    break;
                case MetadataLabelContent.Description:
                    if (uiconfig && uiconfig.metadata && uiconfig.metadata.description) {
                        _this.setText(uiconfig.metadata.description);
                    }
                    else if (player.getConfig().source && player.getConfig().source.description) {
                        _this.setText(player.getConfig().source.description);
                    }
                    break;
            }
        };
        var unload = function () {
            _this.setText(null);
        };
        // Init label
        init();
        // Reinit label when a new source is loaded
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, init);
        // Clear labels when source is unloaded
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, unload);
    };
    return MetadataLabel;
}(label_1.Label));
exports.MetadataLabel = MetadataLabel;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(27);
__webpack_require__(30);
module.exports = __webpack_require__(42);


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var angular = __webpack_require__(8);
var bitdash_controller_1 = __webpack_require__(28);
var bitdash_directive_1 = __webpack_require__(29);
exports.default = angular.module('mi.BitdashPlayer', [])
    .controller('MiBitdashController', bitdash_controller_1.default)
    .directive('miBitdashPlayer', bitdash_directive_1.default);


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var angular = __webpack_require__(8);
var BitmovinController = (function () {
    function BitmovinController($scope, $log) {
        this.$scope = $scope;
        this.$log = $log;
        this.config = {};
        this.options = {};
        this.$scope = $scope;
        this.$log = $log;
    }
    BitmovinController.prototype.$onInit = function () {
        if (angular.isDefined(this.$scope.config) && angular.isDefined(this.$scope.config.key)) {
            this.config = this.$scope.config;
        }
        else {
            this.$log.error("basic config for bitdash player is missing!");
        }
        if (angular.isDefined(this.$scope.options)) {
            this.options = this.$scope.options;
        }
        if (angular.isDefined(this.$scope.webcast)) {
            this.processWebcast(this.$scope.webcast);
        }
    };
    BitmovinController.prototype.processWebcast = function (webcast) {
        var stateProperty = webcast.state + "StateData";
        if (angular.isDefined(this.options.forcedState)) {
            stateProperty = this.options.forcedState + "StateData";
        }
        this.config.source = this.getPlayerConfigSource(webcast, stateProperty);
        this.config.style = { ux: false };
    };
    BitmovinController.prototype.getPlayerConfigSource = function (webcast, state) {
        if ((webcast.useDVRPlaybackInPostlive === true) && (state === 'postliveStateData')) {
            return this.getDVRPlaybackToPostlive(webcast);
        }
        return this.getPlayerConfigSourceByState(webcast, state);
    };
    BitmovinController.prototype.getDVRPlaybackToPostlive = function (webcast) {
        var hls = webcast['liveStateData'].playout.hlsDvrUrl;
        var dash = webcast['liveStateData'].playout.dashDvrUrl;
        var title = webcast.name;
        if (angular.isDefined(webcast['postliveStateData'].playout.offset)) {
            var offset = parseInt(webcast['postliveStateData'].playout.offset, 10);
            if (offset > 0) {
                var offsetPrefix = void 0;
                var parser = document.createElement('a');
                parser.href = webcast['liveStateData'].playout.hlsDvrUrl;
                offsetPrefix = (parser.search) ? '&' : '?';
                hls += offsetPrefix + "wowzadvrplayliststart=" + offset + "000";
                if (angular.isDefined(dash) && dash) {
                    parser.href = dash;
                    offsetPrefix = (parser.search) ? '&' : '?';
                    dash += offsetPrefix + "wowzadvrplayliststart=" + offset + "000";
                }
            }
        }
        return { dash: dash, hls: hls, title: title };
    };
    BitmovinController.prototype.getPlayerConfigSourceByState = function (webcast, state) {
        var hls = webcast[state].playout.hlsUrl;
        var dash = webcast[state].playout.dashUrl;
        var title = webcast.name;
        var hiveServiceUrl = this.getHiveServiceUrlByLang(webcast);
        if (angular.isDefined(webcast[state].playout.videoManagerHlsUrl) && webcast[state].playout.videoManagerHlsUrl) {
            hls = webcast[state].playout.videoManagerHlsUrl;
        }
        if (angular.isDefined(webcast[state].playout.offset)) {
            var offset = parseInt(webcast[state].playout.offset, 10);
            if (offset > 0) {
                var offsetPrefix = void 0;
                var parser = document.createElement('a');
                parser.href = hls;
                offsetPrefix = (parser.search) ? '&' : '?';
                hls += offsetPrefix + "start=" + offset;
                if (angular.isDefined(dash) && dash) {
                    parser.href = dash;
                    offsetPrefix = (parser.search) ? '&' : '?';
                    dash += offsetPrefix + "start=" + offset;
                }
            }
        }
        return { dash: dash, hls: hls, title: title, hiveServiceUrl: hiveServiceUrl };
    };
    BitmovinController.prototype.getHiveServiceUrlByLang = function (webcast) {
        var hiveServiceUrl = null;
        if (webcast.languages && webcast.language) {
            webcast.languages.forEach(function (item) {
                if (item.language === webcast.language) {
                    hiveServiceUrl = angular.copy(item.hiveServiceUrl);
                }
            });
        }
        return hiveServiceUrl;
    };
    return BitmovinController;
}());
BitmovinController.$inject = ['$scope', '$log'];
exports.default = BitmovinController;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var angular = __webpack_require__(8);
var BitdashDirective = function ($window, $log) { return ({
    controller: 'MiBitdashController',
    controllerAs: 'bitdashVm',
    replace: true,
    restrict: 'EA',
    scope: {
        config: '=',
        options: '=?',
        webcast: '=',
    },
    template: "<div id=\"mi-bitdash-player\" width=\"100%\" height=\"auto\"></div>",
    link: function (scope) {
        var bitmovinPlayer;
        var bitmovinUIManager;
        var bitmovinControlbar;
        var config = scope.config;
        var webcast = scope.webcast;
        var state = scope.webcast.state + "StateData";
        buildPlayer();
        function buildPlayer() {
            bitmovinPlayer = $window.window.bitmovin.player('mi-bitdash-player');
            if (angular.isDefined(bitmovinPlayer) && bitmovinPlayer.isReady() === true) {
                bitmovinPlayer.destroy();
                bitmovinPlayer = $window.window.bitmovin.player('mi-bitdash-player');
            }
            if ((state === 'liveStateData') && config.source.hiveServiceUrl) {
                // Get a hive-enabled player through bitdash.initHiveSDN
                $window.window.bitmovin.initHiveSDN(bitmovinPlayer, { debugLevel: 'off' });
                // Configure and Setup bitmovin in initSession callback
                bitmovinPlayer.initSession(config.source.hiveServiceUrl).then(function (session) {
                    var hiveConfig = angular.copy(config);
                    hiveConfig.source.hls = session.manifest;
                    loadPlayer(hiveConfig);
                }, function (reason) {
                    // Handle the case if Hive init fails
                    $log.warn("Hive init fails: " + reason.code + " - " + reason.message);
                    loadPlayer(config);
                });
            }
            else {
                loadPlayer(config);
            }
        }
        function loadPlayer(conf) {
            bitmovinPlayer
                .setup(conf)
                .then(function () {
                bitmovinUIManager = $window.window.bitmovin.playerui.UIManager.Factory;
                if (isAudioOnly()) {
                    bitmovinUIManager.buildAudioOnlyUI(bitmovinPlayer);
                    setAudioOnlyStillImage();
                }
                else {
                    bitmovinUIManager.buildAudioVideoUI(bitmovinPlayer);
                }
                if (state === 'liveStateData') {
                    angular.element(getElementsByClassName('bmpui-seekbar')).css('display', 'none');
                }
                bitmovinControlbar = getElementsByClassName('bitmovinplayer-container');
                if (angular.isDefined(bitmovinControlbar)) {
                    bitmovinControlbar.style.minWidth = '175px';
                    bitmovinControlbar.style.minHeight = '101px';
                    document.getElementById('bitmovinplayer-video-mi-bitdash-player').setAttribute('title', webcast.name);
                }
            }, function (reason) {
                $log.log("Error: " + reason.code + " - " + reason.message);
            });
        }
        function isAudioOnly() {
            return angular.isDefined(scope.webcast[state].playout.audioOnly) &&
                scope.webcast[state].playout.audioOnly;
        }
        function setAudioOnlyStillImage() {
            if (angular.isDefined(scope.webcast[state].playout.audioOnlyStillUrl) &&
                scope.webcast[state].playout.audioOnlyStillUrl !== '') {
                var element = getElementsByClassName('bmpui-ui-audioonly-overlay');
                element.style.backgroundImage = "url(" + scope.webcast[state].playout.audioOnlyStillUrl + ")";
                element.style.backgroundSize = 'contain';
                element.style.backgroundPosition = 'center';
            }
        }
        function getElementsByClassName(className) {
            return document.getElementsByClassName(className)[0];
        }
    }
}); };
exports.default = BitdashDirective;
BitdashDirective.$inject = ['$window', '$log'];


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='player.d.ts' />
var uimanager_1 = __webpack_require__(31);
var button_1 = __webpack_require__(5);
var controlbar_1 = __webpack_require__(14);
var hugeplaybacktogglebutton_1 = __webpack_require__(22);
var playbacktimelabel_1 = __webpack_require__(13);
var playbacktogglebutton_1 = __webpack_require__(9);
var seekbar_1 = __webpack_require__(11);
var selectbox_1 = __webpack_require__(23);
var togglebutton_1 = __webpack_require__(10);
var videoqualityselectbox_1 = __webpack_require__(36);
var volumetogglebutton_1 = __webpack_require__(19);
var watermark_1 = __webpack_require__(37);
var uicontainer_1 = __webpack_require__(12);
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var component_1 = __webpack_require__(1);
var errormessageoverlay_1 = __webpack_require__(20);
var seekbarlabel_1 = __webpack_require__(16);
var titlebar_1 = __webpack_require__(38);
var volumecontrolbutton_1 = __webpack_require__(17);
var clickoverlay_1 = __webpack_require__(24);
var hugereplaybutton_1 = __webpack_require__(39);
var bufferingoverlay_1 = __webpack_require__(40);
var playbacktoggleoverlay_1 = __webpack_require__(21);
var closebutton_1 = __webpack_require__(41);
var metadatalabel_1 = __webpack_require__(25);
var volumeslider_1 = __webpack_require__(18);
var spacer_1 = __webpack_require__(15);
var utils_1 = __webpack_require__(3);
// Object.assign polyfill for ES5/IE9
// https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
if (typeof Object.assign !== 'function') {
    Object.assign = function (target) {
        'use strict';
        if (target == null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }
        target = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source != null) {
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
        }
        return target;
    };
}
// Expose classes to window
window.bitmovin.playerui = {
    // Management
    UIManager: uimanager_1.UIManager,
    UIInstanceManager: uimanager_1.UIInstanceManager,
    // Utils
    ArrayUtils: utils_1.ArrayUtils,
    StringUtils: utils_1.StringUtils,
    PlayerUtils: utils_1.PlayerUtils,
    UIUtils: utils_1.UIUtils,
    BrowserUtils: utils_1.BrowserUtils,
    // Components
    BufferingOverlay: bufferingoverlay_1.BufferingOverlay,
    Button: button_1.Button,
    ClickOverlay: clickoverlay_1.ClickOverlay,
    CloseButton: closebutton_1.CloseButton,
    Component: component_1.Component,
    Container: container_1.Container,
    ControlBar: controlbar_1.ControlBar,
    ErrorMessageOverlay: errormessageoverlay_1.ErrorMessageOverlay,
    HugePlaybackToggleButton: hugeplaybacktogglebutton_1.HugePlaybackToggleButton,
    HugeReplayButton: hugereplaybutton_1.HugeReplayButton,
    Label: label_1.Label,
    MetadataLabel: metadatalabel_1.MetadataLabel,
    MetadataLabelContent: metadatalabel_1.MetadataLabelContent,
    PlaybackTimeLabel: playbacktimelabel_1.PlaybackTimeLabel,
    PlaybackTimeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode,
    PlaybackToggleButton: playbacktogglebutton_1.PlaybackToggleButton,
    PlaybackToggleOverlay: playbacktoggleoverlay_1.PlaybackToggleOverlay,
    SeekBar: seekbar_1.SeekBar,
    SeekBarLabel: seekbarlabel_1.SeekBarLabel,
    SelectBox: selectbox_1.SelectBox,
    Spacer: spacer_1.Spacer,
    TitleBar: titlebar_1.TitleBar,
    ToggleButton: togglebutton_1.ToggleButton,
    UIContainer: uicontainer_1.UIContainer,
    VideoQualitySelectBox: videoqualityselectbox_1.VideoQualitySelectBox,
    VolumeControlButton: volumecontrolbutton_1.VolumeControlButton,
    VolumeSlider: volumeslider_1.VolumeSlider,
    VolumeToggleButton: volumetogglebutton_1.VolumeToggleButton,
    Watermark: watermark_1.Watermark,
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var uicontainer_1 = __webpack_require__(12);
var dom_1 = __webpack_require__(2);
var component_1 = __webpack_require__(1);
var container_1 = __webpack_require__(0);
var playbacktogglebutton_1 = __webpack_require__(9);
var seekbar_1 = __webpack_require__(11);
var playbacktimelabel_1 = __webpack_require__(13);
var controlbar_1 = __webpack_require__(14);
var eventdispatcher_1 = __webpack_require__(4);
var seekbarlabel_1 = __webpack_require__(16);
var volumecontrolbutton_1 = __webpack_require__(17);
var errormessageoverlay_1 = __webpack_require__(20);
var utils_1 = __webpack_require__(3);
var audioonlyoverlay_1 = __webpack_require__(34);
var playbacktoggleoverlay_1 = __webpack_require__(21);
var UIManager = (function () {
    function UIManager(player, playerUiOrUiVariants, config) {
        if (config === void 0) { config = {}; }
        var _this = this;
        if (playerUiOrUiVariants instanceof uicontainer_1.UIContainer) {
            // Single-UI constructor has been called, transform arguments to UIVariant[] signature
            var playerUi = playerUiOrUiVariants;
            var adsUi = null;
            var uiVariants = [];
            // Add the ads UI if defined
            if (adsUi) {
                uiVariants.push({
                    ui: adsUi,
                    condition: function (context) {
                        return context.isAdWithUI;
                    },
                });
            }
            // Add the default player UI
            uiVariants.push({ ui: playerUi });
            this.uiVariants = uiVariants;
        }
        else {
            // Default constructor (UIVariant[]) has been called
            this.uiVariants = playerUiOrUiVariants;
        }
        this.player = player;
        this.config = config;
        this.managerPlayerWrapper = new PlayerWrapper(player);
        this.playerElement = new dom_1.DOM(player.getFigure());
        // Create UI instance managers for the UI variants
        // The instance managers map to the corresponding UI variants by their array index
        this.uiInstanceManagers = [];
        var uiVariantsWithoutCondition = [];
        for (var _i = 0, _a = this.uiVariants; _i < _a.length; _i++) {
            var uiVariant = _a[_i];
            if (uiVariant.condition == null) {
                // Collect variants without conditions for error checking
                uiVariantsWithoutCondition.push(uiVariant);
            }
            // Create the instance manager for a UI variant
            this.uiInstanceManagers.push(new InternalUIInstanceManager(player, uiVariant.ui, this.config));
        }
        // Make sure that there is only one UI variant without a condition
        // It does not make sense to have multiple variants without condition, because only the first one in the list
        // (the one with the lowest index) will ever be selected.
        if (uiVariantsWithoutCondition.length > 1) {
            throw Error('Too many UIs without a condition: You cannot have more than one default UI');
        }
        // Make sure that the default UI variant, if defined, is at the end of the list (last index)
        // If it comes earlier, the variants with conditions that come afterwards will never be selected because the
        // default variant without a condition always evaluates to 'true'
        if (uiVariantsWithoutCondition.length > 0
            && uiVariantsWithoutCondition[0] !== this.uiVariants[this.uiVariants.length - 1]) {
            throw Error('Invalid UI variant order: the default UI (without condition) must be at the end of the list');
        }
        var adStartedEvent = null; // keep the event stored here during ad playback
        var isMobile = utils_1.BrowserUtils.isMobile;
        // Dynamically select a UI variant that matches the current UI condition.
        var resolveUiVariant = function (event) {
            // Make sure that the ON_AD_STARTED event data is persisted through ad playback in case other events happen
            // in the meantime, e.g. player resize. We need to store this data because there is no other way to find out
            // ad details (e.g. the ad client) while an ad is playing.
            // Existing event data signals that an ad is currently active. We cannot use player.isAd() because it returns
            // true on ad start and also on ad end events, which is problematic.
            if (event != null) {
                switch (event.type) {
                    // When the ad starts, we store the event data
                    case player.EVENT.ON_AD_STARTED:
                        adStartedEvent = event;
                        break;
                    // When the ad ends, we delete the event data
                    case player.EVENT.ON_AD_FINISHED:
                    case player.EVENT.ON_AD_SKIPPED:
                    case player.EVENT.ON_AD_ERROR:
                        adStartedEvent = null;
                }
            }
            // Detect if an ad has started
            var ad = adStartedEvent != null;
            var adWithUI = ad && adStartedEvent.clientType === 'vast';
            // Determine the current context for which the UI variant will be resolved
            var context = {
                isAd: ad,
                isAdWithUI: adWithUI,
                isFullscreen: _this.player.isFullscreen(),
                isMobile: isMobile,
                width: _this.playerElement.width(),
                documentWidth: document.body.clientWidth,
            };
            var nextUi = null;
            var uiVariantChanged = false;
            // Select new UI variant
            // If no variant condition is fulfilled, we switch to *no* UI
            for (var _i = 0, _a = _this.uiVariants; _i < _a.length; _i++) {
                var uiVariant = _a[_i];
                if (uiVariant.condition == null || uiVariant.condition(context) === true) {
                    nextUi = _this.uiInstanceManagers[_this.uiVariants.indexOf(uiVariant)];
                    break;
                }
            }
            // Determine if the UI variant is changing
            if (nextUi !== _this.currentUi) {
                uiVariantChanged = true;
                // console.log('switched from ', this.currentUi ? this.currentUi.getUI() : 'none',
                //   ' to ', nextUi ? nextUi.getUI() : 'none');
            }
            // Only if the UI variant is changing, we need to do some stuff. Else we just leave everything as-is.
            if (uiVariantChanged) {
                // Hide the currently active UI variant
                if (_this.currentUi) {
                    _this.currentUi.getUI().hide();
                }
                // Assign the new UI variant as current UI
                _this.currentUi = nextUi;
                // When we switch to a different UI instance, there's some additional stuff to manage. If we do not switch
                // to an instance, we're done here.
                if (_this.currentUi != null) {
                    // Add the UI to the DOM (and configure it) the first time it is selected
                    if (!_this.currentUi.isConfigured()) {
                        _this.addUi(_this.currentUi);
                    }
                    // If this is an ad UI, we need to relay the saved ON_AD_STARTED event data so ad components can configure
                    // themselves for the current ad.
                    if (context.isAd) {
                        /* Relay the ON_AD_STARTED event to the ads UI
                         *
                         * Because the ads UI is initialized in the ON_AD_STARTED handler, i.e. when the ON_AD_STARTED event has
                         * already been fired, components in the ads UI that listen for the ON_AD_STARTED event never receive it.
                         * Since this can break functionality of components that rely on this event, we relay the event to the
                         * ads UI components with the following call.
                         */
                        _this.currentUi.getWrappedPlayer().fireEventInUI(_this.player.EVENT.ON_AD_STARTED, adStartedEvent);
                    }
                    _this.currentUi.getUI().show();
                }
            }
        };
        // Listen to the following events to trigger UI variant resolution
        this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_STARTED, resolveUiVariant);
        this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_FINISHED, resolveUiVariant);
        this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_SKIPPED, resolveUiVariant);
        this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_ERROR, resolveUiVariant);
        this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_PLAYER_RESIZE, resolveUiVariant);
        this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_FULLSCREEN_ENTER, resolveUiVariant);
        this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_FULLSCREEN_EXIT, resolveUiVariant);
        // Initialize the UI
        resolveUiVariant(null);
    }
    UIManager.prototype.getConfig = function () {
        return this.config;
    };
    UIManager.prototype.addUi = function (ui) {
        var dom = ui.getUI().getDomElement();
        ui.configureControls();
        /* Append the UI DOM after configuration to avoid CSS transitions at initialization
         * Example: Components are hidden during configuration and these hides may trigger CSS transitions that are
         * undesirable at this time. */
        this.playerElement.append(dom);
        // Fire onConfigured after UI DOM elements are successfully added. When fired immediately, the DOM elements
        // might not be fully configured and e.g. do not have a size.
        // https://swizec.com/blog/how-to-properly-wait-for-dom-elements-to-show-up-in-modern-browsers/swizec/6663
        if (window.requestAnimationFrame) {
            requestAnimationFrame(function () { ui.onConfigured.dispatch(ui.getUI()); });
        }
        else {
            // IE9 fallback
            setTimeout(function () { ui.onConfigured.dispatch(ui.getUI()); }, 0);
        }
    };
    UIManager.prototype.releaseUi = function (ui) {
        ui.releaseControls();
        ui.getUI().getDomElement().remove();
        ui.clearEventHandlers();
    };
    UIManager.prototype.release = function () {
        for (var _i = 0, _a = this.uiInstanceManagers; _i < _a.length; _i++) {
            var uiInstanceManager = _a[_i];
            this.releaseUi(uiInstanceManager);
        }
        this.managerPlayerWrapper.clearEventHandlers();
    };
    return UIManager;
}());
exports.UIManager = UIManager;
(function (UIManager) {
    var Factory;
    (function (Factory) {
        function buildAudioVideoUI(player, config) {
            if (config === void 0) { config = {}; }
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    new playbacktogglebutton_1.PlaybackToggleButton(),
                    new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel() }),
                    new playbacktimelabel_1.PlaybackTimeLabel(),
                    new volumecontrolbutton_1.VolumeControlButton({ 'vertical': true }),
                    // new FullscreenToggleButton(),
                    new component_1.Component({ cssClass: 'spacer' })
                ]
            }, true);
            var ui = new uicontainer_1.UIContainer({
                components: [
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    controlBar,
                    new errormessageoverlay_1.ErrorMessageOverlay()
                ], cssClasses: ['ui-skin']
            });
            return new UIManager(player, ui, config);
        }
        Factory.buildAudioVideoUI = buildAudioVideoUI;
        function buildAudioOnlyUI(player, config) {
            if (config === void 0) { config = {}; }
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    new playbacktogglebutton_1.PlaybackToggleButton(),
                    new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel(), hideInLivePlayback: true }),
                    new playbacktimelabel_1.PlaybackTimeLabel(),
                    new volumecontrolbutton_1.VolumeControlButton({ 'vertical': true }),
                    new component_1.Component({ cssClass: 'spacer' })
                ]
            }, false);
            var ui = new uicontainer_1.UIContainer({
                components: [
                    new audioonlyoverlay_1.AudioOnlyOverlay(),
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    controlBar,
                    new errormessageoverlay_1.ErrorMessageOverlay()
                ], cssClasses: ['ui-skin']
            });
            return new UIManager(player, ui, config);
        }
        Factory.buildAudioOnlyUI = buildAudioOnlyUI;
    })(Factory = UIManager.Factory || (UIManager.Factory = {}));
})(UIManager = exports.UIManager || (exports.UIManager = {}));
exports.UIManager = UIManager;
/**
 * Encapsulates functionality to manage a UI instance. Used by the {@link UIManager} to manage multiple UI instances.
 */
var UIInstanceManager = (function () {
    function UIInstanceManager(player, ui, config) {
        if (config === void 0) { config = {}; }
        this.events = {
            onConfigured: new eventdispatcher_1.EventDispatcher(),
            onSeek: new eventdispatcher_1.EventDispatcher(),
            onSeekPreview: new eventdispatcher_1.EventDispatcher(),
            onSeeked: new eventdispatcher_1.EventDispatcher(),
            onComponentShow: new eventdispatcher_1.EventDispatcher(),
            onComponentHide: new eventdispatcher_1.EventDispatcher(),
            onControlsShow: new eventdispatcher_1.EventDispatcher(),
            onPreviewControlsHide: new eventdispatcher_1.EventDispatcher(),
            onControlsHide: new eventdispatcher_1.EventDispatcher(),
        };
        this.playerWrapper = new PlayerWrapper(player);
        this.ui = ui;
        this.config = config;
    }
    UIInstanceManager.prototype.getConfig = function () {
        return this.config;
    };
    UIInstanceManager.prototype.getUI = function () {
        return this.ui;
    };
    UIInstanceManager.prototype.getPlayer = function () {
        return this.playerWrapper.getPlayer();
    };
    Object.defineProperty(UIInstanceManager.prototype, "onConfigured", {
        /**
         * Fires when the UI is fully configured and added to the DOM.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onConfigured;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onSeek", {
        /**
         * Fires when a seek starts.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onSeek;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onSeekPreview", {
        /**
         * Fires when the seek timeline is scrubbed.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onSeekPreview;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onSeeked", {
        /**
         * Fires when a seek is finished.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onSeeked;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onComponentShow", {
        /**
         * Fires when a component is showing.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onComponentShow;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onComponentHide", {
        /**
         * Fires when a component is hiding.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onComponentHide;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onControlsShow", {
        /**
         * Fires when the UI controls are showing.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onControlsShow;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onPreviewControlsHide", {
        /**
         * Fires before the UI controls are hiding to check if they are allowed to hide.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onPreviewControlsHide;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onControlsHide", {
        /**
         * Fires when the UI controls are hiding.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onControlsHide;
        },
        enumerable: true,
        configurable: true
    });
    UIInstanceManager.prototype.clearEventHandlers = function () {
        this.playerWrapper.clearEventHandlers();
        var events = this.events; // avoid TS7017
        for (var event_1 in events) {
            var dispatcher = events[event_1];
            dispatcher.unsubscribeAll();
        }
    };
    return UIInstanceManager;
}());
exports.UIInstanceManager = UIInstanceManager;
/**
 * Extends the {@link UIInstanceManager} for internal use in the {@link UIManager} and provides access to functionality
 * that components receiving a reference to the {@link UIInstanceManager} should not have access to.
 */
var InternalUIInstanceManager = (function (_super) {
    __extends(InternalUIInstanceManager, _super);
    function InternalUIInstanceManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InternalUIInstanceManager.prototype.getWrappedPlayer = function () {
        // TODO find a non-hacky way to provide the WrappedPlayer to the UIManager without exporting it
        // getPlayer() actually returns the WrappedPlayer but its return type is set to Player so the WrappedPlayer does
        // not need to be exported
        return this.getPlayer();
    };
    InternalUIInstanceManager.prototype.configureControls = function () {
        this.configureControlsTree(this.getUI());
        this.configured = true;
    };
    InternalUIInstanceManager.prototype.isConfigured = function () {
        return this.configured;
    };
    InternalUIInstanceManager.prototype.configureControlsTree = function (component) {
        var _this = this;
        var configuredComponents = [];
        utils_1.UIUtils.traverseTree(component, function (component) {
            // First, check if we have already configured a component, and throw an error if we did. Multiple configuration
            // of the same component leads to unexpected UI behavior. Also, a component that is in the UI tree multiple
            // times hints at a wrong UI structure.
            // We could just skip configuration in such a case and not throw an exception, but enforcing a clean UI tree
            // seems like the better choice.
            for (var _i = 0, configuredComponents_1 = configuredComponents; _i < configuredComponents_1.length; _i++) {
                var configuredComponent = configuredComponents_1[_i];
                if (configuredComponent === component) {
                    // Write the component to the console to simplify identification of the culprit
                    // (e.g. by inspecting the config)
                    if (console) {
                        console.error('Circular reference in UI tree', component);
                    }
                    // Additionally throw an error, because this case must not happen and leads to unexpected UI behavior.
                    throw Error('Circular reference in UI tree: ' + component.constructor.name);
                }
            }
            component.initialize();
            component.configure(_this.getPlayer(), _this);
            configuredComponents.push(component);
        });
    };
    InternalUIInstanceManager.prototype.releaseControls = function () {
        // Do not call release methods if the components have never been configured; this can result in exceptions
        if (this.configured) {
            this.releaseControlsTree(this.getUI());
            this.configured = false;
        }
        this.released = true;
    };
    InternalUIInstanceManager.prototype.isReleased = function () {
        return this.released;
    };
    InternalUIInstanceManager.prototype.releaseControlsTree = function (component) {
        component.release();
        if (component instanceof container_1.Container) {
            for (var _i = 0, _a = component.getComponents(); _i < _a.length; _i++) {
                var childComponent = _a[_i];
                this.releaseControlsTree(childComponent);
            }
        }
    };
    InternalUIInstanceManager.prototype.clearEventHandlers = function () {
        _super.prototype.clearEventHandlers.call(this);
    };
    return InternalUIInstanceManager;
}(UIInstanceManager));
/**
 * Wraps the player to track event handlers and provide a simple method to remove all registered event
 * handlers from the player.
 */
var PlayerWrapper = (function () {
    function PlayerWrapper(player) {
        var _this = this;
        this.eventHandlers = {};
        this.player = player;
        // Collect all public API methods of the player
        var methods = [];
        for (var member in player) {
            if (typeof player[member] === 'function') {
                methods.push(member);
            }
        }
        // Create wrapper object and add function wrappers for all API methods that do nothing but calling the base method
        // on the player
        var wrapper = {};
        var _loop_1 = function (member) {
            wrapper[member] = function () {
                // console.log('called ' + member); // track method calls on the player
                return player[member].apply(player, arguments);
            };
        };
        for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
            var member = methods_1[_i];
            _loop_1(member);
        }
        // Collect all public properties of the player and add it to the wrapper
        for (var member in player) {
            if (typeof player[member] !== 'function') {
                wrapper[member] = player[member];
            }
        }
        // Explicitly add a wrapper method for 'addEventHandler' that adds added event handlers to the event list
        wrapper.addEventHandler = function (eventType, callback) {
            player.addEventHandler(eventType, callback);
            if (!_this.eventHandlers[eventType]) {
                _this.eventHandlers[eventType] = [];
            }
            _this.eventHandlers[eventType].push(callback);
            return wrapper;
        };
        // Explicitly add a wrapper method for 'removeEventHandler' that removes removed event handlers from the event list
        wrapper.removeEventHandler = function (eventType, callback) {
            player.removeEventHandler(eventType, callback);
            if (_this.eventHandlers[eventType]) {
                utils_1.ArrayUtils.remove(_this.eventHandlers[eventType], callback);
            }
            return wrapper;
        };
        wrapper.fireEventInUI = function (event, data) {
            if (_this.eventHandlers[event]) {
                // Extend the data object with default values to convert it to a {@link PlayerEvent} object.
                var playerEventData = Object.assign({}, {
                    timestamp: Date.now(),
                    type: event,
                    // Add a marker property so the UI can detect UI-internal player events
                    uiSourced: true,
                }, data);
                // Execute the registered callbacks
                for (var _i = 0, _a = _this.eventHandlers[event]; _i < _a.length; _i++) {
                    var callback = _a[_i];
                    callback(playerEventData);
                }
            }
        };
        this.wrapper = wrapper;
    }
    /**
     * Returns a wrapped player object that can be used on place of the normal player object.
     * @returns {WrappedPlayer} a wrapped player
     */
    PlayerWrapper.prototype.getPlayer = function () {
        return this.wrapper;
    };
    /**
     * Clears all registered event handlers from the player that were added through the wrapped player.
     */
    PlayerWrapper.prototype.clearEventHandlers = function () {
        for (var eventType in this.eventHandlers) {
            for (var _i = 0, _a = this.eventHandlers[eventType]; _i < _a.length; _i++) {
                var callback = _a[_i];
                this.player.removeEventHandler(eventType, callback);
            }
        }
    };
    return PlayerWrapper;
}());


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Guid;
(function (Guid) {
    var guid = 1;
    function next() {
        return guid++;
    }
    Guid.next = next;
})(Guid = exports.Guid || (exports.Guid = {}));


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(1);
var dom_1 = __webpack_require__(2);
/**
 * Animated analog TV static noise.
 */
var TvNoiseCanvas = (function (_super) {
    __extends(TvNoiseCanvas, _super);
    function TvNoiseCanvas(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.canvasWidth = 160;
        _this.canvasHeight = 90;
        _this.interferenceHeight = 50;
        _this.lastFrameUpdate = 0;
        _this.frameInterval = 60;
        _this.useAnimationFrame = !!window.requestAnimationFrame;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-tvnoisecanvas'
        }, _this.config);
        return _this;
    }
    TvNoiseCanvas.prototype.toDomElement = function () {
        return this.canvas = new dom_1.DOM('canvas', { 'class': this.getCssClasses() });
    };
    TvNoiseCanvas.prototype.start = function () {
        this.canvasElement = this.canvas.getElements()[0];
        this.canvasContext = this.canvasElement.getContext('2d');
        this.noiseAnimationWindowPos = -this.canvasHeight;
        this.lastFrameUpdate = 0;
        this.canvasElement.width = this.canvasWidth;
        this.canvasElement.height = this.canvasHeight;
        this.renderFrame();
    };
    TvNoiseCanvas.prototype.stop = function () {
        if (this.useAnimationFrame) {
            cancelAnimationFrame(this.frameUpdateHandlerId);
        }
        else {
            clearTimeout(this.frameUpdateHandlerId);
        }
    };
    TvNoiseCanvas.prototype.renderFrame = function () {
        // This code has been copied from the player controls.js and simplified
        if (this.lastFrameUpdate + this.frameInterval > new Date().getTime()) {
            // It's too early to render the next frame
            this.scheduleNextRender();
            return;
        }
        var currentPixelOffset;
        var canvasWidth = this.canvasWidth;
        var canvasHeight = this.canvasHeight;
        // Create texture
        var noiseImage = this.canvasContext.createImageData(canvasWidth, canvasHeight);
        // Fill texture with noise
        for (var y = 0; y < canvasHeight; y++) {
            for (var x = 0; x < canvasWidth; x++) {
                currentPixelOffset = (canvasWidth * y * 4) + x * 4;
                noiseImage.data[currentPixelOffset] = Math.random() * 255;
                if (y < this.noiseAnimationWindowPos || y > this.noiseAnimationWindowPos + this.interferenceHeight) {
                    noiseImage.data[currentPixelOffset] *= 0.85;
                }
                noiseImage.data[currentPixelOffset + 1] = noiseImage.data[currentPixelOffset];
                noiseImage.data[currentPixelOffset + 2] = noiseImage.data[currentPixelOffset];
                noiseImage.data[currentPixelOffset + 3] = 50;
            }
        }
        // Put texture onto canvas
        this.canvasContext.putImageData(noiseImage, 0, 0);
        this.lastFrameUpdate = new Date().getTime();
        this.noiseAnimationWindowPos += 7;
        if (this.noiseAnimationWindowPos > canvasHeight) {
            this.noiseAnimationWindowPos = -canvasHeight;
        }
        this.scheduleNextRender();
    };
    TvNoiseCanvas.prototype.scheduleNextRender = function () {
        if (this.useAnimationFrame) {
            this.frameUpdateHandlerId = window.requestAnimationFrame(this.renderFrame.bind(this));
        }
        else {
            this.frameUpdateHandlerId = setTimeout(this.renderFrame.bind(this), this.frameInterval);
        }
    };
    return TvNoiseCanvas;
}(component_1.Component));
exports.TvNoiseCanvas = TvNoiseCanvas;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(1);
/**
 * Overlays the player and displays an audio-only indicator.
 */
var AudioOnlyOverlay = (function (_super) {
    __extends(AudioOnlyOverlay, _super);
    function AudioOnlyOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.audioonly = [
            new component_1.Component({ tag: 'div', cssClass: 'ui-audioonly-overlay-indicator' })
        ];
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-audioonly-overlay',
            components: _this.audioonly,
            hidden: false
        }, _this.config);
        return _this;
    }
    AudioOnlyOverlay.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        var self = this;
        var image = self.getDomElement().css('background-image');
        // Hide overlay when Player is paused, so we can see the Big Play Button
        player.addEventHandler(player.EVENT.ON_PAUSED, function (event) {
            self.getDomElement().css('background-image', 'none');
        });
        player.addEventHandler(player.EVENT.ON_PLAY, function (event) {
            self.getDomElement().css('background-image', image);
        });
        // Hide overlay if player is  paused at init (e.g. on mobile devices)
        if (!player.isPlaying()) {
            self.getDomElement().css('background-image', 'none');
        }
    };
    return AudioOnlyOverlay;
}(container_1.Container));
exports.AudioOnlyOverlay = AudioOnlyOverlay;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(1);
var eventdispatcher_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(3);
var ListSelector = (function (_super) {
    __extends(ListSelector, _super);
    function ListSelector(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.listSelectorEvents = {
            onItemAdded: new eventdispatcher_1.EventDispatcher(),
            onItemRemoved: new eventdispatcher_1.EventDispatcher(),
            onItemSelected: new eventdispatcher_1.EventDispatcher()
        };
        _this.config = _this.mergeConfig(config, {
            items: [],
            cssClass: 'ui-listselector'
        }, _this.config);
        _this.items = _this.config.items;
        return _this;
    }
    ListSelector.prototype.getItemIndex = function (key) {
        for (var index in this.items) {
            if (key === this.items[index].key) {
                return parseInt(index);
            }
        }
        return -1;
    };
    /**
     * Checks if the specified item is part of this selector.
     * @param key the key of the item to check
     * @returns {boolean} true if the item is part of this selector, else false
     */
    ListSelector.prototype.hasItem = function (key) {
        return this.getItemIndex(key) > -1;
    };
    /**
     * Adds an item to this selector by appending it to the end of the list of items. If an item with the specified
     * key already exists, it is replaced.
     * @param key the key of the item to add
     * @param label the (human-readable) label of the item to add
     */
    ListSelector.prototype.addItem = function (key, label) {
        this.removeItem(key); // Try to remove key first to get overwrite behavior and avoid duplicate keys
        this.items.push({ key: key, label: label });
        this.onItemAddedEvent(key);
    };
    /**
     * Removes an item from this selector.
     * @param key the key of the item to remove
     * @returns {boolean} true if removal was successful, false if the item is not part of this selector
     */
    ListSelector.prototype.removeItem = function (key) {
        var index = this.getItemIndex(key);
        if (index > -1) {
            utils_1.ArrayUtils.remove(this.items, this.items[index]);
            this.onItemRemovedEvent(key);
            return true;
        }
        return false;
    };
    /**
     * Selects an item from the items in this selector.
     * @param key the key of the item to select
     * @returns {boolean} true is the selection was successful, false if the selected item is not part of the selector
     */
    ListSelector.prototype.selectItem = function (key) {
        if (key === this.selectedItem) {
            // itemConfig is already selected, suppress any further action
            return true;
        }
        var index = this.getItemIndex(key);
        if (index > -1) {
            this.selectedItem = key;
            this.onItemSelectedEvent(key);
            return true;
        }
        return false;
    };
    /**
     * Returns the key of the selected item.
     * @returns {string} the key of the selected item or null if no item is selected
     */
    ListSelector.prototype.getSelectedItem = function () {
        return this.selectedItem;
    };
    /**
     * Removes all items from this selector.
     */
    ListSelector.prototype.clearItems = function () {
        var items = this.items; // local copy for iteration after clear
        this.items = []; // clear items
        // fire events
        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
            var item = items_1[_i];
            this.onItemRemovedEvent(item.key);
        }
    };
    /**
     * Returns the number of items in this selector.
     * @returns {number}
     */
    ListSelector.prototype.itemCount = function () {
        return Object.keys(this.items).length;
    };
    ListSelector.prototype.onItemAddedEvent = function (key) {
        this.listSelectorEvents.onItemAdded.dispatch(this, key);
    };
    ListSelector.prototype.onItemRemovedEvent = function (key) {
        this.listSelectorEvents.onItemRemoved.dispatch(this, key);
    };
    ListSelector.prototype.onItemSelectedEvent = function (key) {
        this.listSelectorEvents.onItemSelected.dispatch(this, key);
    };
    Object.defineProperty(ListSelector.prototype, "onItemAdded", {
        /**
         * Gets the event that is fired when an item is added to the list of items.
         * @returns {Event<ListSelector<Config>, string>}
         */
        get: function () {
            return this.listSelectorEvents.onItemAdded.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListSelector.prototype, "onItemRemoved", {
        /**
         * Gets the event that is fired when an item is removed from the list of items.
         * @returns {Event<ListSelector<Config>, string>}
         */
        get: function () {
            return this.listSelectorEvents.onItemRemoved.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListSelector.prototype, "onItemSelected", {
        /**
         * Gets the event that is fired when an item is selected from the list of items.
         * @returns {Event<ListSelector<Config>, string>}
         */
        get: function () {
            return this.listSelectorEvents.onItemSelected.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return ListSelector;
}(component_1.Component));
exports.ListSelector = ListSelector;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(23);
/**
 * A select box providing a selection between 'auto' and the available video qualities.
 */
var VideoQualitySelectBox = (function (_super) {
    __extends(VideoQualitySelectBox, _super);
    function VideoQualitySelectBox(config) {
        if (config === void 0) { config = {}; }
        return _super.call(this, config) || this;
    }
    VideoQualitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var updateVideoQualities = function () {
            var videoQualities = player.getAvailableVideoQualities();
            _this.clearItems();
            // Add entry for automatic quality switching (default setting)
            _this.addItem('auto', 'auto');
            // Add video qualities
            for (var _i = 0, videoQualities_1 = videoQualities; _i < videoQualities_1.length; _i++) {
                var videoQuality = videoQualities_1[_i];
                _this.addItem(videoQuality.id, videoQuality.label);
            }
        };
        this.onItemSelected.subscribe(function (sender, value) {
            player.setVideoQuality(value);
        });
        // Update qualities when source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, updateVideoQualities);
        // Update qualities when a new source is loaded
        player.addEventHandler(player.EVENT.ON_READY, updateVideoQualities);
        // Update quality selection when quality is changed (from outside)
        player.addEventHandler(player.EVENT.ON_VIDEO_DOWNLOAD_QUALITY_CHANGE, function () {
            var data = player.getDownloadedVideoData();
            _this.selectItem(data.isAuto ? 'auto' : data.id);
        });
        // Populate qualities at startup
        updateVideoQualities();
    };
    return VideoQualitySelectBox;
}(selectbox_1.SelectBox));
exports.VideoQualitySelectBox = VideoQualitySelectBox;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var clickoverlay_1 = __webpack_require__(24);
/**
 * A watermark overlay with a clickable logo.
 */
var Watermark = (function (_super) {
    __extends(Watermark, _super);
    function Watermark(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-watermark',
            url: 'https://www.movingimage.com'
        }, _this.config);
        return _this;
    }
    return Watermark;
}(clickoverlay_1.ClickOverlay));
exports.Watermark = Watermark;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var metadatalabel_1 = __webpack_require__(25);
/**
 * Displays a title bar containing a label with the title of the video.
 */
var TitleBar = (function (_super) {
    __extends(TitleBar, _super);
    function TitleBar(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-titlebar',
            hidden: true,
            components: [
                new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Title }),
                new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Description })
            ],
            keepHiddenWithoutMetadata: false,
        }, _this.config);
        return _this;
    }
    TitleBar.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var shouldBeShown = !this.isHidden();
        var hasMetadataText = true; // Flag to track if any metadata label contains text
        var checkMetadataTextAndUpdateVisibility = function () {
            hasMetadataText = false;
            // Iterate through metadata labels and check if at least one of them contains text
            for (var _i = 0, _a = _this.getComponents(); _i < _a.length; _i++) {
                var component = _a[_i];
                if (component instanceof metadatalabel_1.MetadataLabel) {
                    if (!component.isEmpty()) {
                        hasMetadataText = true;
                        break;
                    }
                }
            }
            if (_this.isShown()) {
                // Hide a visible titlebar if it does not contain any text and the hidden flag is set
                if (config.keepHiddenWithoutMetadata && !hasMetadataText) {
                    _this.hide();
                }
            }
            else if (shouldBeShown) {
                // Show a hidden titlebar if it should actually be shown
                _this.show();
            }
        };
        // Listen to text change events to update the hasMetadataText flag when the metadata dynamically changes
        for (var _i = 0, _a = this.getComponents(); _i < _a.length; _i++) {
            var component = _a[_i];
            if (component instanceof metadatalabel_1.MetadataLabel) {
                component.onTextChanged.subscribe(checkMetadataTextAndUpdateVisibility);
            }
        }
        uimanager.onControlsShow.subscribe(function () {
            shouldBeShown = true;
            if (!(config.keepHiddenWithoutMetadata && !hasMetadataText)) {
                _this.show();
            }
        });
        uimanager.onControlsHide.subscribe(function () {
            shouldBeShown = false;
            _this.hide();
        });
        // init
        checkMetadataTextAndUpdateVisibility();
    };
    return TitleBar;
}(container_1.Container));
exports.TitleBar = TitleBar;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(5);
var dom_1 = __webpack_require__(2);
/**
 * A button to play/replay a video.
 */
var HugeReplayButton = (function (_super) {
    __extends(HugeReplayButton, _super);
    function HugeReplayButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-hugereplaybutton',
            text: 'Replay'
        }, _this.config);
        return _this;
    }
    HugeReplayButton.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            player.play('ui-overlay');
        });
    };
    HugeReplayButton.prototype.toDomElement = function () {
        var buttonElement = _super.prototype.toDomElement.call(this);
        // Add child that contains the play button image
        // Setting the image directly on the button does not work together with scaling animations, because the button
        // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined
        // to the size if the image, it can scale inside the player without overshooting.
        buttonElement.append(new dom_1.DOM('div', {
            'class': this.prefixCss('image')
        }));
        return buttonElement;
    };
    return HugeReplayButton;
}(button_1.Button));
exports.HugeReplayButton = HugeReplayButton;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(1);
var timeout_1 = __webpack_require__(7);
/**
 * Overlays the player and displays a buffering indicator.
 */
var BufferingOverlay = (function (_super) {
    __extends(BufferingOverlay, _super);
    function BufferingOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.indicators = [
            new component_1.Component({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator' }),
            new component_1.Component({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator' }),
            new component_1.Component({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator' }),
        ];
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-buffering-overlay',
            hidden: true,
            components: _this.indicators,
            showDelayMs: 1000,
        }, _this.config);
        return _this;
    }
    BufferingOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var overlayShowTimeout = new timeout_1.Timeout(config.showDelayMs, function () {
            _this.show();
        });
        var showOverlay = function () {
            overlayShowTimeout.start();
        };
        var hideOverlay = function () {
            overlayShowTimeout.clear();
            _this.hide();
        };
        player.addEventHandler(player.EVENT.ON_STALL_STARTED, showOverlay);
        player.addEventHandler(player.EVENT.ON_STALL_ENDED, hideOverlay);
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, hideOverlay);
        // Show overlay if player is already stalled at init
        if (player.isStalled()) {
            this.show();
        }
    };
    return BufferingOverlay;
}(container_1.Container));
exports.BufferingOverlay = BufferingOverlay;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(5);
/**
 * A button that closes (hides) a configured component.
 */
var CloseButton = (function (_super) {
    __extends(CloseButton, _super);
    function CloseButton(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-closebutton',
            text: 'Close'
        }, _this.config);
        return _this;
    }
    CloseButton.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        this.onClick.subscribe(function () {
            config.target.hide();
        });
    };
    return CloseButton;
}(button_1.Button));
exports.CloseButton = CloseButton;


/***/ }),
/* 42 */
/***/ (function(module, exports) {

/*! Hive Stats Pack build 3.2.0 Copyright(c) 2015 HiveStreaming AB, All rights reserved.
 * Authors: mikael.hogqvist@hivestreaming.com - riccardo.reale@hivestreaming.com - roberto.roverso@hivestreaming.com */
/*! AtatusJs - v2.3.12 - 2016-07-03
 * Copyright (c) 2016 Atatus */
!function(a){function b(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function c(a){return"undefined"==typeof a}if(a){var d={},e=a.TraceKit,f=[].slice,g="?";d.noConflict=function(){return a.TraceKit=e,d},d.wrap=function(a){function b(){try{return a.apply(this,arguments)}catch(b){throw d.report(b),b}}return b},d.report=function(){function c(a){i(),m.push(a)}function e(a){for(var b=m.length-1;b>=0;--b)m[b]===a&&m.splice(b,1)}function g(a,c){var e=null;if(!c||d.collectWindowErrors){for(var g in m)if(b(m,g))try{m[g].apply(null,[a].concat(f.call(arguments,2)))}catch(h){e=h}if(e)throw e}}function h(a,b,c,e,f){var h=null;if(f)h=d.computeStackTrace(f);else if(o)d.computeStackTrace.augmentStackTraceWithInitialElement(o,b,c,a),h=o,o=null,n=null;else{var i={url:b,line:c,column:e};i.func=d.computeStackTrace.guessFunctionName(i.url,i.line),i.context=d.computeStackTrace.gatherContext(i.url,i.line),h={mode:"onerror",message:a,url:document.location.href,stack:[i],useragent:navigator.userAgent}}return g(h,"from window.onerror"),k?k.apply(this,arguments):!1}function i(){l!==!0&&(k=a.onerror,a.onerror=h,l=!0)}function j(b){var c=f.call(arguments,1);if(o){if(n===b)return;var e=o;o=null,n=null,g.apply(null,[e,null].concat(c))}var h=d.computeStackTrace(b);throw o=h,n=b,a.setTimeout(function(){n===b&&(o=null,n=null,g.apply(null,[h,null].concat(c)))},h.incomplete?2e3:0),b}var k,l,m=[],n=null,o=null;return j.subscribe=c,j.unsubscribe=e,j}(),d.computeStackTrace=function(){function e(b){if(!d.remoteFetching)return"";try{var c=function(){try{return new a.XMLHttpRequest}catch(b){return new a.ActiveXObject("Microsoft.XMLHTTP")}},e=c();return e.open("GET",b,!1),e.send(""),e.responseText}catch(f){return""}}function f(a){if("string"!=typeof a)return[];if(!b(w,a)){var c="",d="";try{d=document.domain}catch(f){}-1!==a.indexOf(d)&&(c=e(a)),w[a]=c?c.split("\n"):[]}return w[a]}function h(a,b){var d,e=/function ([^(]*)\(([^)]*)\)/,h=/['"]?([0-9A-Za-z$_]+)['"]?\s*[:=]\s*(function|eval|new Function)/,i="",j=10,k=f(a);if(!k.length)return g;for(var l=0;j>l;++l)if(i=k[b-l]+i,!c(i)){if(d=h.exec(i))return d[1];if(d=e.exec(i))return d[1]}return g}function i(a,b){var e=f(a);if(!e.length)return null;var g=[],h=Math.floor(d.linesOfContext/2),i=h+d.linesOfContext%2,j=Math.max(0,b-h-1),k=Math.min(e.length,b+i-1);b-=1;for(var l=j;k>l;++l)c(e[l])||g.push(e[l]);return g.length>0?g:null}function j(a){return a.replace(/[\-\[\]{}()*+?.,\\\^$|#]/g,"\\$&")}function k(a){return j(a).replace("<","(?:<|&lt;)").replace(">","(?:>|&gt;)").replace("&","(?:&|&amp;)").replace('"','(?:"|&quot;)').replace(/\s+/g,"\\s+")}function l(a,b){for(var c,d,e=0,g=b.length;g>e;++e)if((c=f(b[e])).length&&(c=c.join("\n"),d=a.exec(c)))return{url:b[e],line:c.substring(0,d.index).split("\n").length,column:d.index-c.lastIndexOf("\n",d.index)-1};return null}function m(a,b,c){var d,e=f(b),g=new RegExp("\\b"+j(a)+"\\b");return c-=1,e&&e.length>c&&(d=g.exec(e[c]))?d.index:null}function n(b){for(var c,d,e,f,g=[a.location.href],h=document.getElementsByTagName("script"),i=""+b,m=/^function(?:\s+([\w$]+))?\s*\(([\w\s,]*)\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/,n=/^function on([\w$]+)\s*\(event\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/,o=0;o<h.length;++o){var p=h[o];p.src&&g.push(p.src)}if(e=m.exec(i)){var q=e[1]?"\\s+"+e[1]:"",r=e[2].split(",").join("\\s*,\\s*");c=j(e[3]).replace(/;$/,";?"),d=new RegExp("function"+q+"\\s*\\(\\s*"+r+"\\s*\\)\\s*{\\s*"+c+"\\s*}")}else d=new RegExp(j(i).replace(/\s+/g,"\\s+"));if(f=l(d,g))return f;if(e=n.exec(i)){var s=e[1];if(c=k(e[2]),d=new RegExp("on"+s+"=[\\'\"]\\s*"+c+"\\s*[\\'\"]","i"),f=l(d,g[0]))return f;if(d=new RegExp(c),f=l(d,g))return f}return null}function o(a){if(!a.stack)return null;for(var b,d,e=/^\s*at (.*?) ?\(?((?:file|https?|chrome-extension):.*?):(\d+)(?::(\d+))?\)?\s*$/i,f=/^\s*(.*?)(?:\((.*?)\))?@?((?:file|https?|chrome):.*?):(\d+)(?::(\d+))?\s*$/i,j=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:ms-appx|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,k=a.stack.split("\n"),l=[],n=/^(.*) is undefined$/.exec(a.message),o=0,p=k.length;p>o;++o){if(b=f.exec(k[o]))d={url:b[3],func:b[1]||g,args:b[2]?b[2].split(","):"",line:+b[4],column:b[5]?+b[5]:null};else if(b=e.exec(k[o]))d={url:b[2],func:b[1]||g,line:+b[3],column:b[4]?+b[4]:null};else{if(!(b=j.exec(k[o])))continue;d={url:b[2],func:b[1]||g,line:+b[3],column:b[4]?+b[4]:null}}!d.func&&d.line&&(d.func=h(d.url,d.line)),d.line&&(d.context=i(d.url,d.line)),l.push(d)}return l.length?(l[0]&&l[0].line&&!l[0].column&&n?l[0].column=m(n[1],l[0].url,l[0].line):l[0].column||c(a.columnNumber)||(l[0].column=a.columnNumber+1),{mode:"stack",name:a.name,message:a.message,url:document.location.href,stack:l,useragent:navigator.userAgent}):null}function p(a){for(var b,c=a.stacktrace,d=/ line (\d+), column (\d+) in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\) in (.*):\s*$/i,e=c.split("\n"),f=[],g=0,j=e.length;j>g;g+=2)if(b=d.exec(e[g])){var k={line:+b[1],column:+b[2],func:b[3]||b[4],args:b[5]?b[5].split(","):[],url:b[6]};if(!k.func&&k.line&&(k.func=h(k.url,k.line)),k.line)try{k.context=i(k.url,k.line)}catch(l){}k.context||(k.context=[e[g+1]]),f.push(k)}return f.length?{mode:"stacktrace",name:a.name,message:a.message,url:document.location.href,stack:f,useragent:navigator.userAgent}:null}function q(c){var d=c.message.split("\n");if(d.length<4)return null;var e,g,j,m,n=/^\s*Line (\d+) of linked script ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i,o=/^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i,p=/^\s*Line (\d+) of function script\s*$/i,q=[],r=document.getElementsByTagName("script"),s=[];for(g in r)b(r,g)&&!r[g].src&&s.push(r[g]);for(g=2,j=d.length;j>g;g+=2){var t=null;if(e=n.exec(d[g]))t={url:e[2],func:e[3],line:+e[1]};else if(e=o.exec(d[g])){t={url:e[3],func:e[4]};var u=+e[1],v=s[e[2]-1];if(v&&(m=f(t.url))){m=m.join("\n");var w=m.indexOf(v.innerText);w>=0&&(t.line=u+m.substring(0,w).split("\n").length)}}else if(e=p.exec(d[g])){var x=a.location.href.replace(/#.*$/,""),y=e[1],z=new RegExp(k(d[g+1]));m=l(z,[x]),t={url:x,line:m?m.line:y,func:""}}if(t){t.func||(t.func=h(t.url,t.line));var A=i(t.url,t.line),B=A?A[Math.floor(A.length/2)]:null;t.context=A&&B.replace(/^\s*/,"")===d[g+1].replace(/^\s*/,"")?A:[d[g+1]],q.push(t)}}return q.length?{mode:"multiline",name:c.name,message:d[0],url:document.location.href,stack:q,useragent:navigator.userAgent}:null}function r(a,b,c,d){var e={url:b,line:c};if(e.url&&e.line){a.incomplete=!1,e.func||(e.func=h(e.url,e.line)),e.context||(e.context=i(e.url,e.line));var f=/ '([^']+)' /.exec(d);if(f&&(e.column=m(f[1],e.url,e.line)),a.stack.length>0&&a.stack[0].url===e.url){if(a.stack[0].line===e.line)return!1;if(!a.stack[0].line&&a.stack[0].func===e.func)return a.stack[0].line=e.line,a.stack[0].context=e.context,!1}return a.stack.unshift(e),a.partial=!0,!0}return a.incomplete=!0,!1}function s(a,b){for(var c,e,f,i=/function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i,j=[],k={},l=!1,o=s.caller;o&&!l;o=o.caller)if(o!==t&&o!==d.report){if(e={url:null,func:g,line:null,column:null},o.name?e.func=o.name:(c=i.exec(o.toString()))&&(e.func=c[1]),"undefined"==typeof e.func)try{e.func=c.input.substring(0,c.input.indexOf("{"))}catch(p){}if(f=n(o)){e.url=f.url,e.line=f.line,e.func===g&&(e.func=h(e.url,e.line));var q=/ '([^']+)' /.exec(a.message||a.description);q&&(e.column=m(q[1],f.url,f.line))}k[""+o]?l=!0:k[""+o]=!0,j.push(e)}b&&j.splice(0,b);var u={mode:"callers",name:a.name,message:a.message,url:document.location.href,stack:j,useragent:navigator.userAgent};return r(u,a.sourceURL||a.fileName,a.line||a.lineNumber,a.message||a.description),u}function t(a,b){var c=null;b=null==b?0:+b;try{if(c=p(a))return c}catch(d){if(v)throw d}try{if(c=o(a))return c}catch(d){if(v)throw d}try{if(c=q(a))return c}catch(d){if(v)throw d}try{if(c=s(a,b+1))return c}catch(d){if(v)throw d}return{mode:"failed"}}function u(a){a=(null==a?0:+a)+1;try{throw new Error}catch(b){return t(b,a+1)}}var v=!1,w={};return t.augmentStackTraceWithInitialElement=r,t.guessFunctionName=h,t.gatherContext=i,t.ofCaller=u,t.getSource=f,t}(),d.extendToAsynchronousCallbacks=function(){var b=function(b){var c=a[b];a[b]=function(){var a=f.call(arguments),b=a[0];return"function"==typeof b&&(a[0]=d.wrap(b)),c.apply?c.apply(this,a):c(a[0],a[1])}};b("setTimeout"),b("setInterval")},d.remoteFetching||(d.remoteFetching=!0),d.collectWindowErrors||(d.collectWindowErrors=!0),(!d.linesOfContext||d.linesOfContext<1)&&(d.linesOfContext=11),a.TraceKit=d}}("undefined"!=typeof window?window:global),function(a,b){"use strict";if(a){var c=a.event.add;a.event.add=function(d,e,f,g,h){if("function"!=typeof f&&"function"!=typeof f.handler)return c.call(this,d,e,f,g,h);var i;return f.handler?(i=f.handler,f.handler=b.wrap(f.handler)):(i=f,f=b.wrap(f)),f.guid=i.guid?i.guid:i.guid=a.guid++,c.call(this,d,e,f,g,h)};var d=a.fn.ready;a.fn.ready=function(a){return d.call(this,b.wrap(a))};var e=a.ajax;a.ajax=function(c,d){"object"==typeof c&&(d=c,c=void 0),d=d||{};for(var f,g=["complete","error","success"];f=g.pop();)a.isFunction(d[f])&&(d[f]=b.wrap(d[f]));try{return c?e.call(this,c,d):e.call(this,d)}catch(h){throw b.report(h),h}}}}(window.jQuery,window.TraceKit),function(a,b,c,d){function e(a){var b=a,c=a.split("//")[1];if(c){var d=c.indexOf("?"),e=c.toString().substring(0,d),f=e.split("/").slice(0,4).join("/"),g=e.substring(0,48);b=f.length<g.length?f:g,b!==e&&(b+="..")}return b}function f(a,b,c,f){if(K&&(L||b.getAllResponseHeaders())){var g="AJAX Error: "+(b.statusText||"unknown")+" "+(c.type||"unknown")+" "+(e(c.url)||"unknown");V.send(f||a.type,{status:b.status,statusText:b.statusText,type:c.type,url:c.url,ajaxErrorMessage:g,contentType:c.contentType,requestData:c.data&&c.data.slice?c.data.slice(0,10240):d,responseData:b.responseText&&b.responseText.slice?b.responseText.slice(0,10240):d,activeTarget:a.target&&a.target.activeElement?a.target.activeElement.outerHTML:d})}}function g(){return o&&""!==o?!0:(R.log("Atatus API key has not been configured, make sure you call atatus.config(yourApiKey)"),!1)}function h(){var c=b.documentElement,d=b.getElementsByTagName("body")[0],e=a.innerWidth||c.clientWidth||d.clientWidth,f=a.innerHeight||c.clientHeight||d.clientHeight;return{width:e,height:f}}function i(a){var b=(new Date).toJSON();try{var c="atatusjs="+b+"="+R.getRandomInt();"undefined"==typeof localStorage[c]&&(localStorage[c]=a)}catch(d){R.log("Atatus: LocalStorage full, cannot save exception")}}function j(){try{return"localStorage"in a&&null!==a.localStorage}catch(b){return!1}}function k(){if(j()&&localStorage.length>0)for(var a in localStorage)if("atatusjs="===a.substring(0,9)){try{var b=JSON.parse(localStorage[a]);"apikey"in b&&m(N,b)}catch(c){R.log("Atatus: Invalid JSON object in LocalStorage")}localStorage.removeItem(a)}}function l(a,c){if(c=c||{},!a.stack||!a.stack.length)return void R.log("Atatus: Canceling send due to no stacktrace.");R.isEmpty(c.customData)&&(c.customData="function"==typeof p?p():p),R.isEmpty(c.tags)&&(c.tags=E);var d=c.customData&&c.customData.ajaxErrorMessage||a.message;if(d&&0===d.indexOf("Uncaught ")&&(d=a.message.substring(9)),d=d||c.status||"Script error.",w&&w.test(d))return void R.log("Atatus: canceling send due to ignore errors");var e=[];a.stack&&a.stack.length&&R.forEach(a.stack,function(a,b){R.endsWith(b.url,"/atatus.js")||e.push({ln:b.line||0,cn:b.column||0,f:b.url||"anonymous",m:b.func||"[anonymous]"})});var f=[a.name,d,JSON.stringify(e)].join("|");if(f===x)return void R.log("Atatus: canceling send due to duplicate errors");x=f;var g=c.customData;try{JSON.stringify(g)}catch(h){var i="Cannot add custom data; may contain circular reference";g={error:i},R.log("Atatus: "+i)}var j=U.getAllEvents();S.clear();var k={"class":a.name,name:d,backTraces:e,userActions:j,net:null,customData:g||null,tags:c.tags,sourcemap:J,request:{url:b.location.href,ua:navigator.userAgent}};if("function"==typeof y&&(k.groupingKey=y(k)),"function"==typeof z){var l=z(k);l&&m(N,k)}else m(N,k)}function m(c,d){if(G&&G.length&&-1===G.indexOf(location.host))return void R.log("Atatus: canceling send due to not a allowed domain");if(g()){if(!d.ts){var e=a.screen||h();d.ts=(new Date).getTime(),d.apikey=o,d.request=d.request||{},d.request.url=d.request.url||b.location.href,d.request.ua=d.request.ua||navigator.userAgent,d.request.w=e.width,d.request.h=e.height,d.v=r||"",d._v=B||""}q&&(d.cid=q.userId||null),R.log("Sending data to Atatus Receiver:",d),n(c,JSON.stringify(d))}}function n(a,b){var c=new Image,d=M+a+"?data="+encodeURIComponent(b);c.crossOrigin="anonymous",c.onload=function(){k()},c.onerror=c.onabort=function(){I&&a===N&&i(b)},c.src=d}var o,p,q,r,s,t,u,v,w,x,y,z,A,B="2.3.12",C=TraceKit.noConflict(),D=a.atatus,E=[],F=!1,G=[],H=!1,I=!1,J=!1,K=!1,L=!1,M="https://br-rx.atatus.com",N="/track/browser/errors",O="/track/browser/perf",P="/track/browser/perf/ajax",Q="/track/browser/perf/txn";c&&(A=c(b));var R={isBoolean:function(a){return"undefined"!=typeof a&&"boolean"==typeof a},isString:function(a){return"string"==typeof a},isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},endsWith:function(a,b){return a&&b?-1!==a.indexOf(b,a.length-b.length):!1},joinRegExp:function(a){for(var b,c=[],d=0,e=a.length;e>d;d++)b=a[d],R.isString(b)?c.push(b.replace(/([.*+?\^=!:${}()|\[\]\/\\])/g,"\\$1")):b&&b.source&&c.push(b.source);return new RegExp(c.join("|"),"i")},getTargetUrl:function(b){return a.XDomainRequest&&H&&(b=b.slice(6)),b},now:function(){return(new Date).getTime()},pad:function(a){return a=String(a),1===a.length&&(a="0"+a),a},merge:function(a,b){var c,d={};for(c in a)d[c]=a[c];for(c in b)d[c]=b[c];return d},mergeArray:function(a,b){return null!=b?a.concat(b):a},forEach:function(a,b){for(var c=0;c<a.length;c++)b.call(null,c,a[c])},isEmpty:function(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0},getRandomInt:function(){return Math.floor(9007199254740992*Math.random())},log:function(b,c){F&&a.console&&a.console.log&&(a.console.log(b),c&&a.console.log(c))},bind:function(a,b){return function(){return a.apply(b,Array.prototype.slice.call(arguments))}},canAllowInsecureSubmissions:function(){var b=a.navigator.userAgent,c=b.match(/Trident\/([\d.]+)/),d=c&&"7.0"===c[1]?11:(b=b.match(/MSIE ([\d.]+)/))?parseInt(b[1],10):!1;return d&&9>=d},uuid4:function(){return"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"===a?b:3&b|8;return c.toString(16)})},addEventListener:function(b,c,d){return"undefined"!=typeof a.attachEvent?a.attachEvent("on"+b,c):a.addEventListener?a.addEventListener(b,c,d):void 0},arrayFromObject:function(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(a[c]);return b}},S={eventObject:{},all:function(a){for(var b=this.getEventObject(a),c=[],d=0;d<b.length;d++)c.push(b[d].value);return c},clear:function(){for(var a in this.eventObject)this.eventObject.hasOwnProperty(a)&&(this.eventObject[a].length=0)},add:function(a,b){var c=this.getEventObject(a),d=R.uuid4();return c.push({key:d,value:b}),this.truncateEventObject(a,10),d},get:function(a,b){for(var c=this.getEventObject(a),d=0;d<c.length;d++)if(c[d].key===b)return c[d].value;return!1},getEventObject:function(a){return this.eventObject[a]||(this.eventObject[a]=[]),this.eventObject[a]},truncateEventObject:function(a,b){var c=this.getEventObject(a);c.length>b&&(this.eventObject[a]=c.slice(c.length-b))}},T={attach:function(b,c,d,e,f){b=b||a.console||{};for(var g=f||["log","debug","info","warn","error"],h=g.pop(),i=function(a,b,d){c&&S.add("user",{ts:R.now(),c:"console",l:a,m:b}),"error"===a&&e&&V.notify(new Error(b),d)};h;)this.wrapConsoleMethod(b,h,d,i),h=g.pop()},wrapConsoleMethod:function(a,b,c,d){var e=a[b],f=a;b in a&&(a[b]=function(){var a=[].slice.call(arguments),g=""+a.join(" "),h={level:b,logger:"console"};d&&d(b,g,h),e&&c&&Function.prototype.apply.call(e,f,a)})}},U={attach:function(){var a=R.bind(this.onDocumentClicked,this),c=R.bind(this.onInputChanged,this);b.addEventListener?(b.addEventListener("click",a,!0),b.addEventListener("blur",c,!0)):b.attachEvent&&(b.attachEvent("onclick",a),b.attachEvent("onfocusout",c))},writeUserEvent:function(a,b,c,d){"password"===this.getElementType(a)&&(c=void 0),S.add("user",{ts:R.now(),a:b,e:this.getOuterHTML(a),v:this.getValueKind(c,d)})},onDocumentClicked:function(a){var b=this.getElementFromEvent(a);b&&b.tagName&&(this.isTarget(b,"a")||this.isTarget(b,"button")||this.isTarget(b,"input",["button","submit"])?this.writeUserEvent(b,"click"):this.isTarget(b,"input",["checkbox","radio"])&&this.writeUserEvent(b,"check",b.value,b.checked))},onInputChanged:function(a){var b=this.getElementFromEvent(a);b&&b.tagName&&(this.isTarget(b,"textarea")?this.writeUserEvent(b,"input",b.value):this.isTarget(b,"select")&&b.options&&b.options.length?this.onSelectInputChanged(b):this.isTarget(b,"input")&&!this.isTarget(b,"input",["button","submit","hidden","checkbox","radio"])&&this.writeUserEvent(b,"input",b.value))},onSelectInputChanged:function(a){if(a.multiple){for(var b=0;b<a.options.length;b++)if(a.options[b].selected){this.writeUserEvent(a,"select",a.options[b].value);break}}else 0<=a.selectedIndex&&a.options[a.selectedIndex]&&this.writeUserEvent(a,"select",a.options[a.selectedIndex].value)},getElementFromEvent:function(a){return a.target||b.elementFromPoint(a.clientX,a.clientY)},isTarget:function(a,b,c){if(a.tagName.toLowerCase()!==b.toLowerCase())return!1;if(!c)return!0;for(var d=this.getElementType(a),e=0;e<c.length;e++)if(c[e]===d)return!0;return!1},getElementType:function(a){return(a.getAttribute("type")||"").toLowerCase()},getOuterHTML:function(a){for(var b="<"+a.tagName.toLowerCase(),c=a.attributes,d=0,e=c.length;e>d;d++){var f=c[d].name;"value"!==f.toLowerCase()&&(b+=" "+f+'="'+c[d].value+'"')}return b+=" >"},getValueKind:function(a,b){return null==a?null:{length:a.length,checked:b,pattern:this.matchInputPattern(a)}},matchInputPattern:function(a){return""===a?"empty":/^[a-z0-9!#$%&'*+=?\^_`{|}~\-]+(?:\.[a-z0-9!#$%&'*+=?\^_`{|}~\-]+)*@(?:[a-z0-9](?:[a-z0-9\-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9\-]*[a-z0-9])?$/.test(a)?"email":/^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/.test(a)||/^(\d{4}[\/\-](0?[1-9]|1[012])[\/\-]0?[1-9]|[12][0-9]|3[01])$/.test(a)?"date":/^(?:(?:\+?1\s*(?:[.\-]\s*)?)?(?:\(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\s*\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.\-]\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.\-]\s*)?([0-9]{4})(?:\s*(?:#|x\.?|ext\.?|extension)\s*(\d+))?$/.test(a)?"phone":/^\s*$/.test(a)?"whitespace":/^\d*$/.test(a)?"numeric":"character"},getAllEvents:function(){return S.all("user")}},V={noConflict:function(){return a.atatus=D,V},isConfigured:function(){return!!o},config:function(b,c){return c=c||{},o=b,C.remoteFetching=!1,w=[],c&&(p=c.customData,E=c.tags||[],J=!(!c.enableSourcemap&&!c.sourcemap),s=!!c.disableUserActions,t=!!c.disableAjaxMonitoring,u=!!c.disableRUM,F=!!c.debugMode,c.ignoreErrors&&R.isArray(c.ignoreErrors)&&(w=c.ignoreErrors),V.setAllowedDomains(c.allowedDomains),V.setVersion(c.version),V.enableOffline(c.enableOffline||c.offline),V.onBeforeErrorSend(c.beforeErrorSend),V.setGroupingKeyCallback(c.groupingKeyCallback)),H=R.canAllowInsecureSubmissions(),w.push(/^Script error\.?$/),w.push(/^Javascript error: Script error\.? on line 0$/),w=R.joinRegExp(w),k(),v={enabled:!0,timeline:!0,display:!0,error:!0,levels:null},R.isBoolean(c.console)&&(v.enabled=c.console),R.isBoolean(c.consoleTimeline)&&(v.timeline=c.consoleTimeline),R.isBoolean(c.consoleDisplay)&&(v.display=c.consoleDisplay),R.isBoolean(c.consoleErrorNotify)&&(v.error=c.consoleErrorNotify),R.isArray(c.consoleTimelineLevels)&&(v.levels=c.consoleTimelineLevels),v.enabled&&"console"in a&&a.console.log&&T.attach(a.console,v.timeline,v.display,v.error,v.levels),s||U.attach(),t||u||V.__attachAjaxHooks(),V},install:function(){return g()?(C.report.subscribe(l),C.extendToAsynchronousCallbacks(),A&&K&&A.ajaxError(f),V):void 0},uninstall:function(){return o=null,C.report.unsubscribe(l),A&&K&&A.unbind("ajaxError",f),V},setCustomData:function(a){return p=a,V},setTags:function(a){return E=a,V},setAllowedDomains:function(a){return a&&R.isArray(a)&&(G=a),V},getAllowedDomains:function(){return G},setUser:function(a,b,c,d){return q={},a&&(q.userId=""+a),b&&(q.email=""+b),c&&(q.firstName=""+c),d&&(q.lastName=""+d),V},setVersion:function(a){return a&&(r=""+a),V},enableOffline:function(a){return R.isBoolean(a)&&(I=a),V},onBeforeErrorSend:function(a){return"function"==typeof a&&(z=a),V},setGroupingKeyCallback:function(a){return"function"==typeof a&&(y=a),V},setAPIEndpoint:function(a){return M=a,V},init:function(a,b,c){return c&&(b=b||{},b.customData=c),V.config(a,b)},withCustomData:function(a){return V.setCustomData(a)},withTags:function(a){return V.setTags(a)},attach:function(){return V.install()},detach:function(){return V.uninstall()},notify:function(a,b,c){return V.send(a,b,c)},sendPerf:function(a){return u?void R.log("RUM is disabled. Please enable it in the config options."):m(O,a)},sendAjaxPerf:function(a){return u?void R.log("RUM is disabled. Please enable it in the config options."):m(P,a)},sendTxnPerf:function(a){return m(Q,a)},send:function(a,b,c){try{l(C.computeStackTrace(a),{customData:R.merge(p,b),tags:R.mergeArray(E,c)})}catch(d){if(a!==d)throw d}return V},_helper:R};a.atatus=V}(window,document,window.jQuery),function(a,b,c){function d(a){a.pl<=0||atatus.sendPerf(a)}function e(){var b=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance,c=b.timing,e=b.navigation;if(0===c.loadEventEnd)return!1;clearInterval(i),i=null;var f=c.navigationStart;0>=f&&(f=c.fetchStart);var g={};for(var h in j)g[j[h]]=-1,h in c&&(c[h]<=0||(g[j[h]]=c[h]-f));var k={nty:e.type,rc:e.redirectCount,nt:g.rps-g.ns,dp:g.dce-g.rps,pr:g.le-g.dce,fe:g.le-g.rps,pl:g.le-g.ns};d(k)}function f(){if(!h||!h.bDone)return!1;clearInterval(i),i=!1;var a=h.getMeasures();if(null!=a&&null!=a.backend&&null!=a.frontend&&null!=a["page load time"]&&null!=a["total load time"]){var b=a.backend,c=a.backend+a.frontend,e={nty:0,rc:0,nt:b,dp:c-b,pr:a["total load time"]-c,fe:a["total load time"]-b,pl:a["total load time"]};d(e)}}var g=(new Date).getTime(),h=h||{};h.q=h.q||[],h.version="0.3",h.targetOrigin=b.location.protocol+"//"+b.location.hostname,h.bPostMessage=!1,h.beaconUrl=h.beaconUrl||"/images/beacon.gif",h.autorun=!1,h.init=function(){if(h.bDone=!1,h.bUnloaded=!1,h.marks={},h.measures={},h.starts={},h.findStartTime(),h.addEventListener("beforeunload",h.beforeUnload,!1),h.addEventListener("pagehide",h.beforeUnload,!1),h.addEventListener("unload",h.beforeUnload,!1),h.processQ(),"complete"===b.readyState){var c=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance;c&&"undefined"!=typeof c.timing&&"undefined"!=typeof c.timing.loadEventEnd&&(h.mark("firstbyte",c.timing.responseStart),h.mark("onload",c.timing.loadEventEnd)),h.done()}else h.addEventListener("load",h.onload,!1)},h.processQ=function(){for(var a=h.q.length,b=0;a>b;b++){var c=h.q[b],d=c[0];"mark"===d?h.mark(c[1],c[2]):"measure"===d?h.measure(c[1],c[2],c[3]):"done"===d&&h.done(c[1])}},h.mark=function(b,c){return h.dprint("RUM_EPISODES.mark: "+b+", "+c),b?(h.marks[b]=parseInt(c||(new Date).getTime()),h.bPostMessage&&a.postMessage("RUM_EPISODES:mark:"+b+":"+c,h.targetOrigin),void("firstbyte"===b?h.measure("backend","starttime","firstbyte"):"onload"===b?(h.measure("frontend","firstbyte","onload"),h.measure("page load time","starttime","onload")):"done"===b&&h.measure("total load time","starttime","done"))):void h.dprint("Error: markName is undefined in RUM_EPISODES.mark.")},h.measure=function(b,c,d){if(h.dprint("RUM_EPISODES.measure: "+b+", "+c+", "+d),!b)return void h.dprint("Error: episodeName is undefined in RUM_EPISODES.measure.");var e;if("undefined"==typeof c)e="number"==typeof h.marks[b]?h.marks[b]:(new Date).getTime();else if("number"==typeof h.marks[c])e=h.marks[c];else{if("number"!=typeof c)return void h.dprint("Error: unexpected startNameOrTime in RUM_EPISODES.measure: "+c);e=c}var f;if("undefined"==typeof d)f=(new Date).getTime();else if("number"==typeof h.marks[d])f=h.marks[d];else{if("number"!=typeof d)return void h.dprint("Error: unexpected endNameOrTime in RUM_EPISODES.measure: "+d);f=d}h.starts[b]=parseInt(e),h.measures[b]=parseInt(f-e),h.bPostMessage&&a.postMessage("RUM_EPISODES:measure:"+b+":"+e+":"+f,h.targetOrigin)},h.done=function(b){h.bDone=!0,h.mark("done"),h.bPostMessage&&a.postMessage("RUM_EPISODES:done",h.targetOrigin),"function"==typeof b&&b()},h.getMarks=function(){return h.marks},h.getMeasures=function(){return h.measures},h.getStarts=function(){return h.starts},h.findStartTime=function(){var a=h.findStartWebTiming()||h.findStartCookie();a&&h.mark("starttime",a)},h.findStartWebTiming=function(){var b,c=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance;return c&&"undefined"!=typeof c.timing&&"undefined"!=typeof c.timing.navigationStart&&(b=c.timing.navigationStart,h.dprint("RUM_EPISODES.findStartWebTiming: startTime = "+b)),b},h.findStartCookie=function(){for(var d=b.cookie.split(" "),e=0;e<d.length;e++)if(0===d[e].indexOf("RUM_EPISODES=")){for(var f,g,i=d[e].substring("RUM_EPISODES=".length).split("&"),j=0;j<i.length;j++)if(0===i[j].indexOf("s="))f=i[j].substring(2);else if(0===i[j].indexOf("r=")){var k=i[j].substring(2);k=k.replace(/;$/,""),g=a.escape(b.referrer)===k}if(g&&f)return h.dprint("RUM_EPISODES.findStartCookie: startTime = "+f),f}return c},h.beforeUnload=function(){h.bUnloaded||(b.cookie="RUM_EPISODES=s="+Number(new Date)+"&r="+a.escape(b.location)+"; path=/",h.bUnloaded=!0)},h.onload=function(){h.mark("onload"),h.done()},h.addEventListener=function(b,c,d){return"undefined"!=typeof a.attachEvent?a.attachEvent("on"+b,c):a.addEventListener?a.addEventListener(b,c,d):void 0},h.dprint=function(){},h.init();var i=null,j={navigationStart:"ns",redirectStart:"rds",redirectEnd:"rde",unloadEventStart:"us",unloadEventEnd:"ue",fetchStart:"fs",domainLookupStart:"dls",domainLookupEnd:"dle",connectStart:"cs",secureConnectionStart:"scs",connectEnd:"ce",handshakeStart:"hs",requestStart:"rqs",responseStart:"rps",responseEnd:"rpe",domLoading:"dl",domInteractive:"di",domContentLoadedEventStart:"dcs",domContentLoadedEventEnd:"dce",domComplete:"dc",loadEventStart:"ls",loadEventEnd:"le"},k=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance;k&&"undefined"!=typeof k.timing&&"undefined"!=typeof k.navigation?i=setInterval(e,100):(h.mark("firstbyte",g),i=setInterval(f,100))}(window,document),atatus.__attachAjaxHooks=function(){!function(a,b){var c=atatus._helper,d={queue:[],batchSize:25,processing:!1,bUnloaded:!1,push:function(a){"string"==typeof a.url&&a.url.indexOf(".html")>0||(this.queue.push(a),this.queue.length>=this.batchSize&&this._processQueue())},_processQueue:function(){if(!this.processing&&this.queue.length){this.processing=!0;try{for(var a={},b={},d=0;d<this.queue.length;d++){var e,f=this.queue[d];if(f.status<400){e=f.method+f.url;var g=f.respAvailTime-f.sendTime,h=f.respProcTime-f.respAvailTime,i=f.receivedSize,j=f.sendSize,k=a[e];if(k){k.c++;var l=k.re;l.t=l.t+g,l.lo=l.lo<g?l.lo:g,l.hi=l.hi>g?l.hi:g,l.ssq=l.ssq+g*g;var m=k.cb;m.t=m.t+h,m.lo=m.lo<h?m.lo:h,m.hi=m.hi>h?m.hi:h,m.ssq=m.ssq+h*h;var n=k.rs;n.t=n.t+i,n.lo=n.lo<i?n.lo:i,n.hi=n.hi>i?n.hi:i,n.ssq=n.ssq+i*i;var o=k.ss;o.t=o.t+j,o.lo=o.lo<j?o.lo:j,o.hi=o.hi>j?o.hi:j,o.ssq=o.ssq+j*j}else a[e]={m:f.method,url:f.url,c:1,re:{t:g,lo:g,hi:g,ssq:g*g},cb:{t:h,lo:h,hi:h,ssq:h*h},rs:{t:f.receivedSize,lo:f.receivedSize,hi:f.receivedSize,ssq:f.receivedSize*f.receivedSize},ss:{t:f.sendSize,lo:f.sendSize,hi:f.sendSize,ssq:f.sendSize*f.sendSize}}}else e=f.method+f.status+f.url,b[e]?b[e].c++:b[e]={m:f.method,url:f.url,st:f.status,c:1}}var p={xhr:c.arrayFromObject(a),xhrError:c.arrayFromObject(b)};atatus.sendAjaxPerf(p)}catch(q){c.log("Error while processing queue: ",q)}finally{this.queue=[],this.processing=!1}}},beforeUnload:function(){d.bUnloaded||(d._processQueue(),d.bUnloaded=!0)}};c.addEventListener("beforeunload",d.beforeUnload,!1);var e={support:function(a){return!a||"apply"in a},around:function(a,b,d,e){return a=a||function(){},function(){var f,g=Array.prototype.slice.call(arguments);try{b&&(f=b.apply(this,g))}catch(h){c.log(e,h)}var i;try{i=a.apply(this,f||g)}finally{try{d&&d.apply(this,g)}catch(h){c.log(e,h)}}return i}},before:function(a,b){return e.around(a,b)},after:function(a,b){return e.around(a,null,b)},timeout:function(a){setTimeout(a,0)},wrapAddEventListener:function(){return function(a,b){if(("load"===a||"error"===a)&&b&&this._atrumXhrData){var c;b.__atrumInterceptor?c=b.__atrumInterceptor:e.support(b)?(c=g.wrapXHR(b,this,"XHR.invokeEventListener"),b.__atrumInterceptor=c):c=null;var d;return c&&(d=Array.prototype.slice.call(arguments),d[1]=c),d}}},wrapRemoveEventListener:function(){return function(a,b){if(this._atrumXhrData){var c=Array.prototype.slice.call(arguments);return b.__atrumInterceptor&&(c[1]=b.__atrumInterceptor),c}}},aroundWithHandleEvent:function(a,b,c,d){var f=a;return a&&"object"==typeof a&&"toString"in a&&"[xpconnect wrapped nsIDOMEventListener]"===a.toString()&&"handleEvent"in a&&(f=function(){a.handleEvent.apply(this,Array.prototype.slice.call(arguments))}),e.around(f,b,c,d)},getFullyQualifiedUrl:function(a){var c=b.createElement("a");return c.href=a,c.href}};if(a.XMLHttpRequest&&a.XMLHttpRequest.prototype){var f=a.XMLHttpRequest.prototype;if(!("open"in f&&"send"in f))return;if(!e.support(f.open)||!e.support(f.send))return;var g={};g.captureAjaxTimings=function(a){var b=a._atrumXhrData;if(b){var c=(new Date).getTime();2===a.readyState?b.firstByteTime=b.firstByteTime||c:4===a.readyState&&(b.respAvailTime=b.respAvailTime||c,b.firstByteTime=b.firstByteTime||c)}},g.sendPayload=function(a,b){b.receivedSize=0,a.responseType&&"text"!==a.responseType||"string"==typeof a.responseText&&(b.receivedSize=a.responseText.length),b.status=a.status,d.push(b)},g.wrapXHR=function(a,b,c){return e.aroundWithHandleEvent(a,function(){g.captureAjaxTimings(this)},function(){var a=b._atrumXhrData;if(a&&4===b.readyState){var c=(new Date).getTime();a.respProcTime=a.respProcTime||c,g.sendPayload(b,a),delete b._atrumXhrData}},c)},g.ajaxDone=function(a){if(a._atrumXhrData){var b=(new Date).getTime()+3e4,c=function(){g.captureAjaxTimings(a);var d=a._atrumXhrData;if(d){var e=(new Date).getTime();4===a.readyState?(d.respProcTime=d.respProcTime||e,g.sendPayload(a,d),delete a._atrumXhrData):b>e?setTimeout(c,50):delete a._atrumXhrData}};c()}},f.open=e.around(f.open,function(){var a=1<=arguments.length?String(arguments[0]):"",b=2<=arguments.length?String(arguments[1]):"",c=atatus.getAllowedDomains(),d=!0;if(b=e.getFullyQualifiedUrl(b),b&&c&&c.length){d=!1;for(var f=0;f<c.length;f++){var g=c[f];if(g&&b.indexOf(g)>-1){d=!0;break}}}d&&(b=b&&b.split("?")[0],this._atrumXhrData={method:a,url:b,sendTime:null,sendSize:null,firstByteTime:null,respAvailTime:null,respProcTime:null,receivedSize:null,parentPhase:null})},null,"XHR.open"),f.send=e.around(f.send,function(){var a=this,b=a._atrumXhrData;if(b){var c=(new Date).getTime();b.sendTime=b.sendTime||c,b.sendSize=1<=arguments.length&&arguments[0]?arguments[0].length||0:0;var d=0,f=function(){if(4===a.readyState)g.ajaxDone(a);else{var b=null;try{b=a.onreadystatechange}catch(c){return void g.ajaxDone(a)}d++,b?e.support(b)?a.onreadystatechange=g.wrapXHR(b,a,"XHR.onReadyStateChange"):g.ajaxDone(a):5>d?e.timeout(f):g.ajaxDone(a)}};f()}},null,"XHR.send"),"addEventListener"in f&&"removeEventListener"in f&&e.support(f.addEventListener)&&e.support(f.removeEventListener)&&(f.addEventListener=e.around(f.addEventListener,e.wrapAddEventListener(),null,"XHR.addEventListener"),f.removeEventListener=e.around(f.removeEventListener,e.wrapRemoveEventListener(),null,"XHR.removeEventListener"))}}(window,document)},function(a){function b(a,b,c){if(!(0>=b)){var d={name:a,dur:b,st:c};atatus.sendTxnPerf(d)}}function c(a){return h+" "+a}function d(){try{return"localStorage"in a&&null!==a.localStorage;}catch(b){return!1}}function e(a){var b=i.now();try{localStorage.setItem(c(a),b)}catch(d){}}function f(a){var b=null,d=c(a);try{b=localStorage.getItem(d),localStorage.removeItem(d)}catch(e){}var f=0;return b&&(f=i.now()-b),f}function g(a){try{var b=c(a);localStorage.removeItem(b)}catch(d){}}var h="atatus.com/",i=atatus._helper,j=1,k=0;atatus.beginTransaction=function(a){d()&&e(a)},atatus.endTransaction=function(a){if(d()){var c=f(a);b(a,c,j)}},atatus.failTransaction=function(a){if(d()){var c=f(a);b(a,c,k)}},atatus.cancelTransaction=function(a){d()&&g(a)}}(window,document);
/*! https://github.com/ttaubert/node-arraybuffer-slice
 * (c) 2014 Tim Taubert <tim@timtaubert.de>
 * arraybuffer-slice may be freely distributed under the MIT license.*/
!function(r){"use strict";function t(r,t){return r=0|r||0,r<0?Math.max(r+t,0):Math.min(r,t)}ArrayBuffer.prototype.slice||(ArrayBuffer.prototype.slice=function(e,n){var f=this.byteLength,i=t(e,f),a=f;if(n!==r&&(a=t(n,f)),i>a)return new ArrayBuffer(0);var u=a-i,y=new ArrayBuffer(u),o=new Uint8Array(y),s=new Uint8Array(this,i,u);return o.set(s),y})}();
!function(t){function e(r){if(i[r])return i[r].t;var n=i[r]={t:{},id:r,loaded:!1};return t[r].call(n.t,n,n.t,e),n.loaded=!0,n.t}var i={};return e.i=t,e.c=i,e.o="",e(0)}([function(t,e,i){"use strict";var r=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},n=i(25),o=i(7),s=i(9),a=i(1);if("undefined"==typeof c)var c=3e4;var h=function(t){function e(e,i){var r=t.call(this,i)||this;return r.pluginName="bitmovin",r.s=!1,r.player=e,r.player.initSession=function(t){return r.h(),r.p(t).timeout(c,r.u+" Hive Plugin initialization timeout").then(function(t){return r.l(),t.g()})["catch"](function(t){return r.v(),r.h(),r.m().debug(r.u+" error occurred resolving the ticket - "+t.stack),a.reject(t)})},r.m().notice(r.u+"registered plugin [name:"+r.T()+"][id: "+r.S()+"][version: "+r.I()+"]"),r}return r(e,t),e.prototype.l=function(){var t=this;this.s||(this.player.addEventHandler("onReady",function(){if(t.m().debug("bitmovin.player.EVENT.ON_READY"),t.R()){var e=!!t.player.getConfig().playback&&t.player.getConfig().playback.auto;e&&t.k(!1),t.C()&&(t.O=new o.P)}}),this.player.addEventHandler("onPlay",function(){t.m().debug("bitmovin.player.EVENT.ON_PLAY"),t.A(s.F.B.N)}),this.player.addEventHandler("onError",function(e){t.m().debug("bitmovin.player.EVENT.ON_ERROR");var i=-1,r=null;if(null!=e)try{i=e.code,r=JSON.stringify(e,null)}catch(n){r=e}t.onError(i,r)}),this.player.addEventHandler("onPlaybackFinished",function(){t.m().debug("bitmovin.player.EVENT.ON_PLAYBACK_FINISHED"),t._(s.F.B.D,{code:1})}),this.player.addEventHandler("onSeek",function(){t.m().debug("bitmovin.player.EVENT.ON_SEEK"),t._(s.F.B.H)}),this.player.addEventHandler("onFullscreenEnter",function(){t.m().debug("bitmovin.player.EVENT.ON_FULLSCREEN_ENTER"),t._(s.F.B.L,{value:!0})}),this.player.addEventHandler("onFullscreenExit",function(){t.m().debug("bitmovin.player.EVENT.ON_FULLSCREEN_EXIT"),t._(s.F.B.L,{value:!1})}),this.player.addEventHandler("onSegmentRequestFinished",function(e){var i=e.mimeType.indexOf("video")>=0;if(e.success){var r=8*e.size/e.downloadTime;t.O.M(i,t.j,e.size),t.O.U(r)}else t.O.V(i,t.j)}),0===this.q().indexOf("7")?this.J():0===this.q().indexOf("6")&&this.K(),this.s=!0)},e.prototype.K=function(){var t=this;this.player.addEventHandler("onStartBuffering",function(){t.m().debug("bitmovin.player.EVENT.ON_START_BUFFERING"),t.k()}),this.player.addEventHandler("onStopBuffering",function(){t.m().debug("bitmovin.player.EVENT.ON_STOP_BUFFERING"),t.G()}),this.player.addEventHandler("onPause",function(){t.m().debug("bitmovin.player.EVENT.ON_PAUSE"),t.A(s.F.B.W)}),this.player.addEventHandler("onVideoDownloadQualityChange",function(e){var i=t.$();i===StreamProtocol.Y?t.X(e.targetQuality):t.X(e.targetQuality.split("br")[1])})},e.prototype.J=function(){var t=this;this.player.addEventHandler("onStallStarted",function(){t.m().debug("bitmovin.player.EVENT.ON_STALL_STARTED"),t.k()}),this.player.addEventHandler("onStallEnded",function(){t.m().debug("bitmovin.player.EVENT.ON_STALL_ENDED"),t.G()}),this.player.addEventHandler("onPaused",function(){t.m().debug("bitmovin.player.EVENT.ON_PAUSED"),t.A(s.F.B.W)}),this.player.addEventHandler("onVideoDownloadQualityChanged",function(e){t.X(e.targetQualityId.bitrate)})},e.prototype.X=function(t){this.m().debug("newBitrate",t),this.j&&t>this.j?this.O.Z():this.j&&this.j>t&&this.O.tt(),this.j=t},e.prototype.A=function(t){"undefined"!=typeof this.et&&this.et!==t&&(this._(t),this.et=t)},e.prototype.it=function(){var t=this.$();return t===StreamProtocol.Y?this.player.getConfig().source.hls:t===StreamProtocol.rt?this.player.getConfig().source.dash:void 0},e.prototype.getCurrentTime=function(){return null!=this.player?Math.round(1e3*this.player.getCurrentTime()):0},e.prototype.nt=function(){return null!=this.player&&null!=this.player.getVideoBufferLength&&this.player.getVideoBufferLength()>0?Math.max(0,Math.round(1e3*this.player.getVideoBufferLength())):0},e.prototype.ot=function(){if(this.player){var t=this.player.getFigure();return{width:t.offsetWidth,height:t.offsetHeight}}},e.prototype.isFullscreen=function(){return this.player.isFullscreen()},e.prototype.isLive=function(){return this.player.isLive()},e.prototype.st=function(){return!0},e.prototype.$=function(){if(this.player){var t=this.player.getStreamType();if("hls"===t)return StreamProtocol.Y;if("dash"===t)return StreamProtocol.rt}return null},e.prototype.at=function(){var t=this.O;return this.O=new o.P,t},e.prototype.T=function(){return this.pluginName},e.prototype.I=function(){return this.ct()},e.prototype.ht=function(){if(this.player)return this.player.getPlayerType()},e.prototype.q=function(){return"undefined"!=typeof bitmovin.player.version?bitmovin.player.version:this.player.getVersion()},e}(n.pt.Plugin);e.ut=h;var p=function(t,e){new h(t,e)};bitmovin.initHiveSDN=p},function(t,e,i){/*!
 *
 * Copyright 2009-2016 Kris Kowal under the terms of the MIT
 * license found at https://github.com/kriskowal/q/blob/v1/LICENSE
 *
 * With parts by Tyler Close
 * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found
 * at http://www.opensource.org/licenses/mit-license.html
 * Forked at ref_send.js version: 2009-05-11
 *
 * With parts by Mark Miller
 * Copyright (C) 2011 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
  !function(e){"use strict";if("function"==typeof bootstrap)bootstrap("promise",e);else{t.t=e()}}(function(){"use strict";function t(t){return function(){return z.apply(t,arguments)}}function e(t){return t===Object(t)}function i(t){return"[object StopIteration]"===it(t)||t instanceof q}function r(t,e){if(U&&e.stack&&"object"==typeof t&&null!==t&&t.stack&&t.stack.indexOf(rt)===-1){for(var i=[],r=e;r;r=r.source)r.stack&&i.unshift(r.stack);i.unshift(t.stack);var o=i.join("\n"+rt+"\n");t.stack=n(o)}}function n(t){for(var e=t.split("\n"),i=[],r=0;r<e.length;++r){var n=e[r];a(n)||o(n)||!n||i.push(n)}return i.join("\n")}function o(t){return t.indexOf("(module.js:")!==-1||t.indexOf("(node.js:")!==-1}function s(t){var e=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(t);if(e)return[e[1],Number(e[2])];var i=/at ([^ ]+):(\d+):(?:\d+)$/.exec(t);if(i)return[i[1],Number(i[2])];var r=/.*@(.+):(\d+)$/.exec(t);return r?[r[1],Number(r[2])]:void 0}function a(t){var e=s(t);if(!e)return!1;var i=e[0],r=e[1];return i===Q&&r>=J&&r<=ct}function c(){if(U)try{throw new Error}catch(t){var e=t.stack.split("\n"),i=e[0].indexOf("@")>0?e[1]:e[2],r=s(i);if(!r)return;return Q=r[0],r[1]}}function h(t,e,i){return function(){return"undefined"!=typeof console&&"function"==typeof console.warn&&console.warn(e+" is deprecated, use "+i+" instead.",new Error("").stack),t.apply(t,arguments)}}function p(t){return t instanceof f?t:m(t)?C(t):k(t)}function u(){function t(t){e=t,p.lt&&U&&(o.source=t),$(i,function(e,i){p.dt(function(){t.ft.apply(t,i)})},void 0),i=void 0,r=void 0}var e,i=[],r=[],n=Z(u.prototype),o=Z(f.prototype);if(o.ft=function(t,n,o){var s=W(arguments);i?(i.push(s),"when"===n&&o[1]&&r.push(o[1])):p.dt(function(){e.ft.apply(e,s)})},o.valueOf=function(){if(i)return o;var t=v(e);return y(t)&&(e=t),t},o.gt=function(){return e?e.gt():{state:"pending"}},p.lt&&U)try{throw new Error}catch(s){o.stack=s.stack.substring(s.stack.indexOf("\n")+1)}return n.vt=o,n.resolve=function(i){e||t(p(i))},n.yt=function(i){e||t(k(i))},n.reject=function(i){e||t(R(i))},n.notify=function(t){e||$(r,function(e,i){p.dt(function(){i(t)})},void 0)},n}function l(t){if("function"!=typeof t)throw new TypeError("resolver must be a function.");var e=u();try{t(e.resolve,e.reject,e.notify)}catch(i){e.reject(i)}return e.vt}function d(t){return l(function(e,i){for(var r=0,n=t.length;r<n;r++)p(t[r]).then(e,i)})}function f(t,e,i){void 0===e&&(e=function(t){return R(new Error("Promise does not support operation: "+t))}),void 0===i&&(i=function(){return{state:"unknown"}});var r=Z(f.prototype);if(r.ft=function(i,n,o){var s;try{s=t[n]?t[n].apply(r,o):e.call(r,n,o)}catch(a){s=R(a)}i&&i(s)},r.gt=i,i){var n=i();"rejected"===n.state&&(r.exception=n.reason),r.valueOf=function(){var t=i();return"pending"===t.state||"rejected"===t.state?r:t.value}}return r}function g(t,e,i,r){return p(t).then(e,i,r)}function v(t){if(y(t)){var e=t.gt();if("fulfilled"===e.state)return e.value}return t}function y(t){return t instanceof f}function m(t){return e(t)&&"function"==typeof t.then}function w(t){return y(t)&&"pending"===t.gt().state}function T(t){return!y(t)||"fulfilled"===t.gt().state}function S(t){return y(t)&&"rejected"===t.gt().state}function b(){nt.length=0,ot.length=0,at||(at=!0)}function E(t,e){at&&("object"==typeof process&&"function"==typeof process.emit&&p.dt.wt(function(){Y(ot,t)!==-1&&(process.emit("unhandledRejection",e,t),st.push(t))}),ot.push(t),e&&"undefined"!=typeof e.stack?nt.push(e.stack):nt.push("(no stack) "+e))}function I(t){if(at){var e=Y(ot,t);e!==-1&&("object"==typeof process&&"function"==typeof process.emit&&p.dt.wt(function(){var i=Y(st,t);i!==-1&&(process.emit("rejectionHandled",nt[e],t),st.splice(i,1))}),ot.splice(e,1),nt.splice(e,1))}}function R(t){var e=f({when:function(e){return e&&I(this),e?e(t):this}},function(){return this},function(){return{state:"rejected",reason:t}});return E(e,t),e}function k(t){return f({when:function(){return t},get:function(e){return t[e]},set:function(e,i){t[e]=i},"delete":function(e){delete t[e]},Tt:function(e,i){return null===e||void 0===e?t.apply(void 0,i):t[e].apply(t,i)},apply:function(e,i){return t.apply(e,i)},keys:function(){return et(t)}},void 0,function(){return{state:"fulfilled",value:t}})}function C(t){var e=u();return p.dt(function(){try{t.then(e.resolve,e.reject,e.notify)}catch(i){e.reject(i)}}),e.vt}function O(t){return f({St:function(){}},function(e,i){return F(t,e,i)},function(){return p(t).gt()})}function P(t,e,i){return p(t).bt(e,i)}function A(t){return function(){function e(t,e){var s;if("undefined"==typeof StopIteration){try{s=r[t](e)}catch(a){return R(a)}return s.done?p(s.value):g(s.value,n,o)}try{s=r[t](e)}catch(a){return i(a)?p(a.value):R(a)}return g(s,n,o)}var r=t.apply(this,arguments),n=e.bind(e,"next"),o=e.bind(e,"throw");return n()}}function N(t){p.done(p.async(t)())}function x(t){throw new q(t)}function B(t){return function(){return P([this,_(arguments)],function(e,i){return t.apply(e,i)})}}function F(t,e,i){return p(t).Et(e,i)}function _(t){return g(t,function(t){var e=0,i=u();return $(t,function(r,n,o){var s;y(n)&&"fulfilled"===(s=n.gt()).state?t[o]=s.value:(++e,g(n,function(r){t[o]=r,0===--e&&i.resolve(t)},i.reject,function(t){i.notify({index:o,value:t})}))},void 0),0===e&&i.resolve(t),i.vt})}function D(t){if(0===t.length)return p.resolve();var e=p.defer(),i=0;return $(t,function(r,n,o){function s(t){e.resolve(t)}function a(t){i--,0===i&&(t.message="Q can't get fulfillment value from any promise, all promises were rejected. Last error message: "+t.message,e.reject(t))}function c(t){e.notify({index:o,value:t})}var h=t[o];i++,g(h,s,a,c)},void 0),e.vt}function H(t){return g(t,function(t){return t=X(t,p),g(_(X(t,function(t){return g(t,K,K)})),function(){return t})})}function L(t){return p(t).It()}function M(t,e){return p(t).then(void 0,void 0,e)}function j(t,e){return p(t).Rt(e)}var U=!1;try{throw new Error}catch(V){U=!!V.stack}var Q,q,J=c(),K=function(){},G=function(){function t(){for(var t,r;i.next;)i=i.next,t=i.kt,i.kt=void 0,r=i.domain,r&&(i.domain=void 0,r.enter()),e(t,r);for(;h.length;)t=h.pop(),e(t);n=!1}function e(e,i){try{e()}catch(r){if(s)throw i&&i.exit(),setTimeout(t,0),i&&i.enter(),r;setTimeout(function(){throw r},0)}i&&i.exit()}var i={kt:void 0,next:null},r=i,n=!1,o=void 0,s=!1,a=!1;try{a=navigator&&("Microsoft Internet Explorer"===navigator.appName||null!=navigator.appVersion.match(/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i))}catch(c){}var h=[];if(G=function(t){"undefined"!=typeof Framework&&Framework.Ct()?Framework.setTimeout(t,0):(r=r.next={kt:t,domain:s&&process.domain,next:null},n||(n=!0,o()))},"object"==typeof process&&"[object process]"===process.toString()&&process.dt)s=!0,o=function(){process.dt(t)};else if("function"!=typeof setImmediate||a)if("undefined"==typeof MessageChannel||a)o=function(){setTimeout(t,0)};else{var p=new MessageChannel;p.port1.onmessage=function(){o=u,p.port1.onmessage=t,t()};var u=function(){p.port2.postMessage(0)};o=function(){setTimeout(t,0),u()}}else o="undefined"!=typeof window?setImmediate.bind(window,t):function(){setImmediate(t)};return G.wt=function(t){h.push(t),n||(n=!0,o())},G}(),z=Function.call,W=t(Array.prototype.slice),$=t(Array.prototype.reduce||function(t,e){var i=0,r=this.length;if(1===arguments.length)for(;;){if(i in this){e=this[i++];break}if(++i>=r)throw new TypeError}for(;i<r;i++)i in this&&(e=t(e,this[i],i));return e}),Y=t(Array.prototype.indexOf||function(t){for(var e=0;e<this.length;e++)if(this[e]===t)return e;return-1}),X=t(Array.prototype.map||function(t,e){var i=this,r=[];return $(i,function(n,o,s){r.push(t.call(e,o,s,i))},void 0),r}),Z=Object.create||function(t){function e(){}return e.prototype=t,new e},tt=t(Object.prototype.hasOwnProperty),et=Object.keys||function(t){var e=[];for(var i in t)tt(t,i)&&e.push(i);return e},it=t(Object.prototype.toString);q="undefined"!=typeof ReturnValue?ReturnValue:function(t){this.value=t};var rt="From previous event:";p.resolve=p,p.dt=G,p.lt=!1,"object"==typeof process&&process&&process.Ot&&process.Ot.Q_DEBUG&&(p.lt=!0),p.defer=u,u.prototype.Pt=function(){var t=this;return function(e,i){e?t.reject(e):arguments.length>2?t.resolve(W(arguments,1)):t.resolve(i)}},p.Promise=l,p.vt=l,l.race=d,l.all=_,l.reject=R,l.resolve=p,p.At=function(t){return t},f.prototype.At=function(){return this},p.join=function(t,e){return p(t).join(e)},f.prototype.join=function(t){return p([this,t]).bt(function(t,e){if(t===e)return t;throw new Error("Q can't join: not the same: "+t+" "+e)})},p.race=d,f.prototype.race=function(){return this.then(p.race)},p.Nt=f,f.prototype.toString=function(){return"[object Promise]"},f.prototype.then=function(t,e,i){function n(e){try{return"function"==typeof t?t(e):e}catch(i){return R(i)}}function o(t){if("function"==typeof e){r(t,a);try{return e(t)}catch(i){return R(i)}}return R(t)}function s(t){return"function"==typeof i?i(t):t}var a=this,c=u(),h=!1;return p.dt(function(){a.ft(function(t){h||(h=!0,c.resolve(n(t)))},"when",[function(t){h||(h=!0,c.resolve(o(t)))}])}),a.ft(void 0,"when",[void 0,function(t){var e,i=!1;try{e=s(t)}catch(r){if(i=!0,!p.onerror)throw r;p.onerror(r)}i||c.notify(e)}]),c.vt},p.xt=function(t,e){return p(t).xt(e)},f.prototype.xt=function(t){return t=p(t),this.then(function(e){return t.Ft(e).Bt(e)})},p.when=g,f.prototype.Bt=function(t){return this.then(function(){return t})},p.Bt=function(t,e){return p(t).Bt(e)},f.prototype._t=function(t){return this.then(function(){throw t})},p._t=function(t,e){return p(t)._t(e)},p.Dt=v,p.Ht=y,p.Lt=m,p.Mt=w,f.prototype.Mt=function(){return"pending"===this.gt().state},p.jt=T,f.prototype.jt=function(){return"fulfilled"===this.gt().state},p.Ut=S,f.prototype.Ut=function(){return"rejected"===this.gt().state};var nt=[],ot=[],st=[],at=!0;p.Vt=b,p.Qt=function(){return nt.slice()},p.qt=function(){b(),at=!1},b(),p.reject=R,p.yt=k,p.Jt=O,p.bt=P,f.prototype.bt=function(t,e){return this.all().then(function(e){return t.apply(void 0,e)},e)},p.async=A,p.Kt=N,p["Gt"]=x,p.zt=B,p.Et=F,f.prototype.Et=function(t,e){var i=this,r=u();return p.dt(function(){i.ft(r.resolve,t,e)}),r.vt},p.get=function(t,e){return p(t).Et("get",[e])},f.prototype.get=function(t){return this.Et("get",[t])},p.set=function(t,e,i){return p(t).Et("set",[e,i])},f.prototype.set=function(t,e){return this.Et("set",[t,e])},p.Wt=p["delete"]=function(t,e){return p(t).Et("delete",[e])},f.prototype.Wt=f.prototype["delete"]=function(t){return this.Et("delete",[t])},p.$t=p.Tt=function(t,e,i){return p(t).Et("post",[e,i])},f.prototype.$t=f.prototype.Tt=function(t,e){return this.Et("post",[t,e])},p.send=p.Yt=p.Xt=function(t,e){return p(t).Et("post",[e,W(arguments,2)])},f.prototype.send=f.prototype.Yt=f.prototype.Xt=function(t){return this.Et("post",[t,W(arguments,1)])},p.Zt=function(t,e){return p(t).Et("apply",[void 0,e])},f.prototype.Zt=function(t){return this.Et("apply",[void 0,t])},p["te"]=p.Ft=function(t){return p(t).Et("apply",[void 0,W(arguments,1)])},f.prototype.Ft=function(){return this.Et("apply",[void 0,W(arguments)])},p.ee=function(t){var e=p(t),i=W(arguments,1);return function(){return e.Et("apply",[this,i.concat(W(arguments))])}},f.prototype.ee=function(){var t=this,e=W(arguments);return function(){return t.Et("apply",[this,e.concat(W(arguments))])}},p.keys=function(t){return p(t).Et("keys",[])},f.prototype.keys=function(){return this.Et("keys",[])},p.all=_,f.prototype.all=function(){return _(this)},p.ie=D,f.prototype.ie=function(){return D(this)},p.re=h(H,"allResolved","allSettled"),f.prototype.re=function(){return H(this)},p.It=L,f.prototype.It=function(){return this.then(function(t){return _(X(t,function(t){function e(){return t.gt()}return t=p(t),t.then(e,e)}))})},p.fail=p["catch"]=function(t,e){return p(t).then(void 0,e)},f.prototype.fail=f.prototype["catch"]=function(t){return this.then(void 0,t)},p.progress=M,f.prototype.progress=function(t){return this.then(void 0,void 0,t)},p.ne=p["finally"]=function(t,e){return p(t)["finally"](e)},f.prototype.ne=f.prototype["finally"]=function(t){if(!t||"function"!=typeof t.apply)throw new Error("Q can't apply finally callback");return t=p(t),this.then(function(e){return t.Ft().then(function(){return e})},function(e){return t.Ft().then(function(){throw e})})},p.done=function(t,e,i,r){return p(t).done(e,i,r)},f.prototype.done=function(t,e,i){var n=function(t){p.dt(function(){if(r(t,o),!p.onerror)throw t;p.onerror(t)})},o=t||e||i?this.then(t,e,i):this;"object"==typeof process&&process&&process.domain&&(n=process.domain.bind(n)),o.then(void 0,n)},p.timeout=function(t,e,i){return p(t).timeout(e,i)},f.prototype.timeout=function(t,e){var i=u(),r=setTimeout(function(){e&&"string"!=typeof e||(e=new Error(e||"Timed out after "+t+" ms"),e.code="ETIMEDOUT"),i.reject(e)},t);return this.then(function(t){clearTimeout(r),i.resolve(t)},function(t){clearTimeout(r),i.reject(t)},i.notify),i.vt},p.delay=function(t,e){return void 0===e&&(e=t,t=void 0),p(t).delay(e)},f.prototype.delay=function(t){return this.then(function(e){var i=u();return setTimeout(function(){i.resolve(e)},t),i.vt})},p.oe=function(t,e){return p(t).oe(e)},f.prototype.oe=function(t){var e=u(),i=W(t);return i.push(e.Pt()),this.Zt(i).fail(e.reject),e.vt},p.se=function(t){var e=W(arguments,1);return p(t).oe(e)},f.prototype.se=function(){var t=W(arguments),e=u();return t.push(e.Pt()),this.Zt(t).fail(e.reject),e.vt},p.ae=p.ce=function(t){if(void 0===t)throw new Error("Q can't wrap an undefined function");var e=W(arguments,1);return function(){var i=e.concat(W(arguments)),r=u();return i.push(r.Pt()),p(t).Zt(i).fail(r.reject),r.vt}},f.prototype.ae=f.prototype.ce=function(){var t=W(arguments);return t.unshift(this),p.ce.apply(void 0,t)},p.he=function(t,e){var i=W(arguments,2);return function(){function r(){return t.apply(e,arguments)}var n=i.concat(W(arguments)),o=u();return n.push(o.Pt()),p(r).Zt(n).fail(o.reject),o.vt}},f.prototype.he=function(){var t=W(arguments,0);return t.unshift(this),p.he.apply(void 0,t)},p.pe=p.ue=function(t,e,i){return p(t).ue(e,i)},f.prototype.pe=f.prototype.ue=function(t,e){var i=W(e||[]),r=u();return i.push(r.Pt()),this.Et("post",[t,i]).fail(r.reject),r.vt},p.le=p.de=p.fe=function(t,e){var i=W(arguments,2),r=u();return i.push(r.Pt()),p(t).Et("post",[e,i]).fail(r.reject),r.vt},f.prototype.le=f.prototype.de=f.prototype.fe=function(t){var e=W(arguments,1),i=u();return e.push(i.Pt()),this.Et("post",[t,e]).fail(i.reject),i.vt},p.Rt=j,f.prototype.Rt=function(t){return t?void this.then(function(e){p.dt(function(){t(null,e)})},function(e){p.dt(function(){t(e)})}):this},p.ge=function(){throw new Error("Q.noConflict only works when Q is used as a global")};var ct=c();return p})},function(t,e,i){"use strict";var r,n=i(15),o=i(4),s=o.ve;!function(t){function e(e){B&&console.log("Framework already initialized"),t.ye(),N=new Date,e.apply(D),B=D.resolve(k.me),_=D.resolve(k.we),L=B.Ct()}function i(){F=D.resolve(k.Te),F.init()}function r(){return F}function o(){return D}function a(){return _}function c(){return B}function h(t){return H.get(t)}function p(t,e){var i=new C(t);return i.apply(e),H.set(t,i),i}function u(e){A=t.Se(e)}function l(t){return null!=A?A.context.resolve(t):(console.warn("undefined context"),null)}function d(){return A}function f(){return B.time()}function g(t,e){return B.setTimeout(t,e)}function v(t){return B.clearTimeout(t)}function y(t,e){return B.setInterval(t,e)}function m(t){return B.clearInterval(t)}function w(){B.be()}function T(){D.Ee(),D=new n.Ie,H=new s,A=null,N=null,L=!1,x=null,B=null,F=null,_=null}function S(t){x=t}function b(){return x||(x=(new Date).getTime()),x=(9301*x+49297)%233280,x/233280}function E(){return N}function I(){return L}var R=function(){function t(){}return t}();R.Re="ws://127.0.0.1:8000/hive",t.ke=R;var k=function(){function t(){}return t}();k.me="TimerScheduler",k.Ce="identityProvider",k.Te="NetworkComponent",k.Oe="rtcManager",k.Pe="transport",k.Ae="httpManager",k.Ne="httpRequest",k.we="logger",k.xe="serverManager",k.Be="servicesClient",t.Fe=k;var C=function(){function t(t){this.id=t,this.context=new n.Ie}return t.prototype.apply=function(t){t.apply(this.context)},t}();t._e=C;var O;!function(t){t[t.De=0]="HTTP",t[t.He=1]="RTC",t[t.Le=2]="UDP"}(O=t.Me||(t.Me={}));var P;!function(e){function i(){return"["+f()+"] ["+t.je().id+"]"}e.Ue=i}(P=t.Ve||(t.Ve={}));var A,N,x,B,F,_,D=new n.Ie,H=new s,L=!1;t.Qe=e,t.qe=i,t.Je=r,t.system=o,t.m=a,t.Ke=c,t.Se=h,t.Ge=p,t.ze=u,t.resolve=l,t.je=d,t.time=f,t.setTimeout=g,t.clearTimeout=v,t.setInterval=y,t.clearInterval=m,t.be=w,t.ye=T,t.We=S,t.random=b,t.$e=E,t.Ct=I}(r=e.Framework||(e.Framework={})),"undefined"!=typeof global&&(global.Framework=r)},function(t,e){"use strict";var i=!0,r={Ye:function(t){return"boolean"!=typeof t?new Error("Argument type: "+typeof t+". Please use a boolean."):(i=t,t?"adapter.js logging disabled":"adapter.js logging enabled")},log:function(){if("object"==typeof window){if(i)return;"undefined"!=typeof console&&"function"==typeof console.log&&console.log.apply(console,arguments)}},Xe:function(t,e,i){var r=t.match(e);return r&&r.length>=i&&parseInt(r[i],10)},Ze:function(){var t={};if(t.ti=null,t.version=null,"undefined"==typeof window||!window.navigator)return t.ti="Not a browser.",t;if(navigator.mozGetUserMedia)t.ti="firefox",t.version=this.Xe(navigator.userAgent,/Firefox\/(\d+)\./,1);else if(navigator.webkitGetUserMedia)if(window.webkitRTCPeerConnection)t.ti="chrome",t.version=this.Xe(navigator.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else{if(!navigator.userAgent.match(/Version\/(\d+).(\d+)/))return t.ti="Unsupported webkit-based browser with GUM support but no WebRTC support.",t;t.ti="safari",t.version=this.Xe(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}else if(navigator.mediaDevices&&navigator.userAgent.match(/Edge\/(\d+).(\d+)$/))t.ti="edge",t.version=this.Xe(navigator.userAgent,/Edge\/(\d+).(\d+)$/,2);else{if(!navigator.mediaDevices||!navigator.userAgent.match(/AppleWebKit\/(\d+)\./))return t.ti="Not a supported browser.",t;t.ti="safari",t.version=this.Xe(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}return t},ei:function(){if("object"==typeof window&&window.HTMLMediaElement&&"srcObject"in window.HTMLMediaElement.prototype){var t=URL.createObjectURL.bind(URL),e=URL.revokeObjectURL.bind(URL),i=new Map,r=0;URL.createObjectURL=function(e){if("getTracks"in e){var n="polyblob:"+ ++r;return i.set(n,e),console.log("URL.createObjectURL(stream) is deprecated! Use elem.srcObject = stream instead!"),n}return t(e)},URL.revokeObjectURL=function(t){e(t),i["delete"](t)};var n=Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,"src");Object.defineProperty(window.HTMLMediaElement.prototype,"src",{get:function(){return n.get.apply(this)},set:function(t){return this.ii=i.get(t)||null,n.set.apply(this,[t])}});var o=HTMLMediaElement.prototype.setAttribute;HTMLMediaElement.prototype.setAttribute=function(){return 2===arguments.length&&"src"===(""+arguments[0]).toLowerCase()&&(this.ii=i.get(arguments[1])||null),o.apply(this,arguments)}}}};t.t={log:r.log,Ye:r.Ye,ri:r.Ze(),Xe:r.Xe,ei:r.ei,Ze:r.Ze.bind(r)}},function(t,e,i){var r=i(32);t.t={ve:r.Map,ni:r.ni,oi:r.oi}},function(t,e){"use strict";var i;!function(t){t.si="statsClient",t.Be="servicesClient",t.ai="ticketResolver",t.Ce="identityProvider",t.ci="connInfoProvider",t.hi="peerInfo",t.pi="streamInfoProvider",t.ui="reporting",t.li="statsStore",t.di="trackManager",t.fi="trackClient"}(i=e.gi||(e.gi={}))},function(t,e){t.t=function(){return new Function}},function(t,e,i){"use strict";function r(t,e){function i(){return t()?void v.when(e(),i,r.reject):r.resolve(!0)}var r=v.defer();return v.dt(i),r.vt}function n(t,e,i){return void 0===i&&(i=!0),o("GET",t,e,i)}function o(t,e,i,r){void 0===r&&(r=!0);var n=v.defer();try{var o=new XMLHttpRequest;o.open(t,e,r),void 0!=i&&null!=i&&o.setRequestHeader("Content-Type",i),o.onload=function(){200==o.status?n.resolve(o.response):n.reject({status:o.status,reason:o.statusText,body:o.responseText})},o.onerror=function(t){n.reject({status:-1,reason:"Network Error"})},o.send()}catch(s){n.reject({status:-1,reason:s})}return n.vt}function s(t,e,i,r){void 0===r&&(r=!0);var n=v.defer();try{var o=new XMLHttpRequest;o.open("POST",t,r),void 0!=i&&null!=i&&o.setRequestHeader("Content-Type",i),o.onload=function(){200==o.status?n.resolve(o.response):n.reject({status:o.status,reason:o.statusText})},o.onerror=function(t){n.reject({status:-1,reason:"Network Error"})},o.send(e)}catch(s){n.reject({status:-1,reason:s})}return n.vt}function a(t,e){var i,r,n=document.querySelector("base"),o=document.querySelector("head"),s=document.createElement("a"),a=n;return n?i=n.href:a=o.appendChild(document.createElement("base")),a.href=t,s.href=e,r=s.href,n?n.href=i:o.removeChild(a),r}function c(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var i=t[0],r=1;r<t.length;r++){var n=new RegExp("\\{"+(r-1)+"\\}","gm");i=i.replace(n,t[r])}return i}function h(t,e){for(var i in t)t.hasOwnProperty(i)&&e.hasOwnProperty(i)&&(e[i]=t[i])}function p(t,e,i){var r=g(t).vi(!0);for(var n in r)try{if(r.hasOwnProperty(n)&&e.hasOwnProperty(n)&&i.hasOwnProperty(e[n])){var o=e[n],s=r[n];i[o]=u(s,i[o])}}catch(a){}}function u(t,e){var i;switch(typeof e){case"number":i=parseInt(t);break;case"boolean":i="true"===t;break;default:i=t}return i}function l(t,e,i){var r=new m;return r.ticketUrl=t,r.code=e,r.message=w(e),r.detailedMessage=i,r}var d=i(4),f=d.ve,g=i(21),v=i(1),y=i(17),m=y.pt.HiveSessionError,w=y.pt.getHiveSessionErrorMessage,T=y.pt.HiveSession,S=i(26),b=i(46),E=function(){function t(e){if(!e){if(0==Object.keys(t.mapping).length&&!t.yi)return console.error("no registered default HiveRequestFactory tech"),t.yi=!0,t.mi();e=Object.keys(t.mapping)[0]}if(!(e in t.mapping))return t.yi||(console.error("no registered HiveRequestFactory tech for  "+e),t.yi=!0),t.mi();var i=t.mapping[e];switch(i.tech){case"HiveJS":return t.mi();case"HiveJsProxy":return i.wi?new S.Ti(e):(i.wi=!0,new b.Si(e));case"HiveJava":case"StatsJS":return t.mi()}}return t.mi=function(){return"undefined"!=typeof OriginalXMLHttpRequest?new OriginalXMLHttpRequest:new XMLHttpRequest},t.clear=function(){t.mapping={}},t.bi=function(e,i){e in t.mapping||(t.mapping[e]={}),t.mapping[e].tech=i},t}();E.mapping={},E.yi=!1,e.HiveRequestFactory=E;var I=function(){function t(t,e,i,r){this.Ei=!1,this.ticketUrl=t,this.ticket=e,this.manifest=i,this.Ii=v.defer(),this.Ri=r,this.Ri&&this.Ii.resolve(this.Ri)}return t.prototype.st=function(t){return null!==this.tech&&this.tech.st(t,this)},t.prototype.ki=function(t){this.Ei!=t&&(this.Ei=t,this.tech&&this.tech.Ci(this,t))},t.prototype.Oi=function(){return this.Ei},t.prototype.close=function(t){if(null!=this.tech)return this.tech.Pi(this,t)},t.prototype.toString=function(){return this.ticket.toString()},t.prototype.g=function(){var t=new T;return t.id=this.id,t.ticketUrl=this.ticketUrl,t.manifest=this.manifest,t.tech=this.tech.Ai(),t},t.prototype.Ni=function(){return this.Ii.vt},t.prototype.xi=function(t){this.Ri=t,this.Ii.resolve(this.Ri)},t}();e.Bi=I;var R=function(){function t(){}return t}();e.Fi=R;var k=function(){function t(){this.success=0,this._i=0,this.Di=0}return t}();e.Hi=k;var C=function(){function t(){this.Li=0,this.Mi=0,this.ji=new f,this.Ui=new f}return t.prototype.M=function(t,e,i,r){void 0===r&&(r=!0);var n=t?this.ji:this.Ui;n.has(e)||n.set(e,new k);var o=n.get(e);o.Di+=i,r&&o.success++},t.prototype.V=function(t,e){var i=t?this.ji:this.Ui;i.has(e)||i.set(e,new k),i.get(e)._i++},t.prototype.U=function(t){this.bandwidth=t},t.prototype.Z=function(){this.Li++},t.prototype.tt=function(){this.Mi++},t.prototype.Vi=function(){return this.bandwidth},t.prototype.Qi=function(){return this.ji},t.prototype.qi=function(){return this.Ui},t.prototype.Ji=function(){return this.Li},t.prototype.Ki=function(){return this.Mi},t}();e.P=C;var O=function(){function t(){var e=this;if(t.Gi)throw new Error("Error: Instantiation failed: Use VisibilityChangeListener.getInstance() instead of new.");var i,r;"undefined"!=typeof document.hidden?(i="hidden",r="visibilitychange"):"undefined"!=typeof document.msHidden?(i="msHidden",r="msvisibilitychange"):"undefined"!=typeof document.webkitHidden&&(i="webkitHidden",r="webkitvisibilitychange"),"undefined"!=typeof document.addEventListener&&"undefined"!=typeof document[i]?document.addEventListener(r,function(){var t=!document[i];e.zi.forEach(function(i){i.call(e,t)})},!1):t.m&&t.m.debug("warn - visibilityChange listener not supported"),this.zi=new Array}return t.Wi=function(e){return e&&(this.m=e),void 0===this.Gi&&(this.Gi=new t),this.Gi},t.prototype.$i=function(t){this.zi.push(t)},t}();e.Yi=O,e.Xi=r,e.Zi=n,e.tr=o,e.er=s,e.ir=a,e.rr=c,e.nr=h,e.or=p,e.sr=l;var P=function(){function t(){}return t.getItem=function(t){try{return window.sessionStorage?window.sessionStorage.getItem(t):null}catch(e){return null}},t.setItem=function(t,e){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(t,e),!0)}catch(i){return!1}},t.removeItem=function(t){try{window.sessionStorage&&window.sessionStorage.removeItem(t)}catch(e){return null}},t}();e.ar=P;var A=function(){function t(t){this.cr=t}return t.prototype.hr=function(t){var e=Date.now();return this.isEqual(this.pr,t)||(this.ur=e),this.pr=t,e-this.ur>=this.cr},t.prototype.isEqual=function(t,e){if(t&&e){var i=[e.lr-t.lr,e.dr-t.dr,e.gr-t.gr];return i.reduce(function(t,e){return t&&Math.abs(e)<10},!0)}return!1},t}();e.vr=A},function(t,e,i){"use strict";var r,n=i(11),o=i(18),s=i(12);!function(t){var e;!function(t){var e=function(){function t(){this.monitorPort=o.ke.yr?s.wr.mr:s.wr.Tr,this.playerPort=o.ke.yr?s.wr.Sr:s.wr.br,this.feedbackPeriod=2e3,this.idleTimePeriod=6e4,this.useSessionCheck=o.ke.Er,this.debugLevel="notice",this.hiveTechOrder=[],this.telemetryId=null,this.silent=!1,this.loggerTimestamp=n.HiveConfig.Framework.LoggerTimestamp,this.onSourceSetCompleted=function(t){},this.onLoadingCompleted=function(t){}}return t}();t.Ir=e;var i=function(){function t(){this.initTimeout=3e4,this.onError=function(t){return!0},this.onActiveSession=function(t){}}return t}();t.Rr=i;var r=function(){function t(){this.hivePlayerPort="playerPort",this.hiveMonitorPort="monitorPort",this.hiveSilent="silent",this.hiveDebugLevel="debugLevel",this.hiveDebugTimestamp="loggerTimestamp",this.hiveSetupTimeout="setupTimeout",this.hiveJavaTimeout="initTimeout",this.hiveWarnJavaTimeout="warnSlowRespTimeout"}return t}();t.kr=r}(e=t.Ir||(t.Ir={}))}(r=e.pt||(e.pt={}));var a;!function(t){var e=function(){function t(){}return t}();e.enabledRUM=!1,e.enableKeyCombination=!0,e.enabledErrorFilter=!0,t.ErrorMonitor=e}(a=e.HiveConfig||(e.HiveConfig={})),"undefined"!=typeof window&&("undefined"==typeof window.HiveConfig&&(window.HiveConfig={}),window.HiveConfig.ErrorMonitor=a.ErrorMonitor)},function(t,e,i){"use strict";var r,n=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},o=i(28).Cr,s=i(1),a=i(2),c=i(5),h=i(13),p=i(10),u=i(23);!function(t){var e="[TRACK] ";t.Or="hive-client-track",t.Pr="trackevent",t.Ar="NULLID",t.Nr="";var i=function(){function t(){}return t}();i.xr=0,i.Br=1,i.Fr=2,i._r=100,i.Dr=200,t.Hr=i;var r;!function(t){t[t.N=0]="PLAYING",t[t.Lr=1]="BUFFERING",t[t.W=2]="PAUSED",t[t.H=3]="SKIP",t[t.D=4]="STOPPED",t[t.ERROR=5]="ERROR",t[t.Mr=6]="WINDOW_SIZE",t[t.L=7]="FULLSCREEN",t[t.jr=8]="VISIBLE",t[t.HIDDEN=9]="HIDDEN"}(r=t.B||(t.B={}));var l;!function(t){t[t.Ur=0]="JAVA_NOT_REACHABLE",t[t.Vr=1]="JAVA_NOT_READY",t[t.Qr=2]="JAVA_WRONG_VERSION",t[t.qr=3]="JAVA_SESSION_BUSY",t[t.Jr=4]="JAVA_SESSION_ERROR",t[t.Kr=5]="JAVA_TICKET_TIMEOUT"}(l=t.Gr||(t.Gr={}));var d=function(){function t(){}return t}();t.zr=d;var f=function(){function t(){}return t}();t.Wr=f;var g=function(){function t(){}return t}();t.$r=g;var v=function(){function t(){this.type=i.Fr}return t}(),y=function(){function t(){this.sessions=new Array}return t.prototype.Yr=function(t,e){var i;this.sessions.forEach(function(e){e.sessionId==t&&(i=e)}),i||(i=new m,i.sessionId=t,this.sessions.push(i)),i.events.push(e)},t}();t.Xr=y;var m=function(){function t(){this.events=new Array}return t}();t.Zr=m;var w=function(){function i(){this.m=a.Framework.resolve(a.Framework.Fe.we).log(),this.tn=a.Framework.resolve(c.gi.ci),this.en=new Array,this.in=new Array,this.rn=new Array}return i.prototype.nn=function(t){this.client=t},i.prototype.init=function(t,i){this.sn=t,this.an(i),this.m.debug(e+"INIT ID: "+t)},i.prototype.an=function(t,e){this.app=t,e&&(this.cn=e)},i.prototype.hn=function(t){this.pn=t},i.prototype.un=function(t){var e=new S(t,this);this.en.push(e),this.ln=null,this.client.dn(!0)},i.prototype.wi=function(t,i,r){if(!this.ln)for(var n=0;n<this.en.length;n++){var o=this.en[n];if(o.ticket.sessionId===t){this.m.debug(e+"Activating Track for session "+t),this.ln=o;break}}if(this.ln){if(this.ln.ticket.sessionId!=t)return void this.m.warn(e+"ignoring manifest not matching event "+this.ln.ticket.sessionId+" != "+t);if(!this.ln.fn){var s=new b(t,i,r);this.ln.gn(s),this.client.dn()}}},i.prototype.vn=function(t,e,i){null!=this.ln&&(this.ln.fn||this.ln.yn.push(new k(t,e,i)))},i.prototype.mn=function(t,e,i){this.in.push(new I(t,e,i)),this.client.dn()},i.prototype.wn=function(t,e,i){this.rn.push(new R(t,e,i)),this.client.dn()},i.prototype.Tn=function(t){var e=this;t&&t.forEach(function(t){e.rn.push(t)})},i.prototype.Sn=function(){var t=new f;this.cn?(t.partnerId=this.cn.partnerId,t.customerId=this.cn.customerId):this.ln&&(t.partnerId=this.ln.ticket.bn(),t.customerId=this.ln.ticket.En()),t.version=this.app.app+"_"+(this.cn?this.cn.version:this.app.version),this.cn&&(t.installVersion=this.cn.installVersion,t.installTs=this.cn.installTs);var e=new o;return e.In(navigator.userAgent),t.os=e.Rn().name+" "+e.Rn().version,this.pn&&(t.commVersion=this.pn.commVersion,t.pluginName=this.pn.pluginName,t.pluginVersion=this.pn.pluginVersion,t.playerTech=this.pn.playerTech,t.playerVersion=this.pn.playerVersion,this.pn.telemetryId&&(t.telemetryId=this.pn.telemetryId)),t},i.prototype.kn=function(){return this.ln?this.ln:this.en&&this.en.length>0?this.en[this.en.length-1]:void 0},i.prototype.Cn=function(){var e=this,i=s.defer();0==this.en.length&&0==this.in.length&&i.reject("nothing to send");var r=new d;r.app=t.Or,r.createdAt=a.Framework.time(),r.guid=this.sn,r.name=t.Pr;var n=this.kn();if(n){var o=n.ticket.On().replace(/[\[\]]/g,"");r.tags=[o],r.tags.push(n.ticket.bn()),r.tags.push(n.ticket.En())}else r.tags=new Array;var c=new y;return c.peer=this.Sn(),this.en.forEach(function(t){t.fn||c.Yr(t.ticket.sessionId,t)}),this.in.forEach(function(t){c.Yr(t.sessionId,t)}),this.rn.forEach(function(t){c.Yr(t.sessionId,t)}),r.data=c,this.tn.Pn().then(function(t){var i=e.An(t);c.Yr("null",i)}).fail(function(t){})["finally"](function(){return i.resolve(r)}).done(),i.vt},i.prototype.An=function(t){var e=new v;e.ts=a.Framework.time();var i=t.Nn();return i.xn()&&(e.pubIp=i.xn()),i.Bn()&&(e.privIp=i.Bn()),t.Fn()&&(e.hostname=t.Fn()),i._n()&&(e.netmask=i._n()),i.Dn()&&(e.nic=i.Dn()),i.Hn()&&(e.nicName=i.Hn()),i.Ln()&&(e.mac=i.Ln()),e},i.prototype.Mn=function(){return this.cn?this.cn.userAgent:navigator.userAgent},i.prototype.reset=function(){this.en=new Array,this.in=new Array,this.rn=new Array},i.prototype.jn=function(t){},i}();t.Un=w;var T=function(){function t(t){this.Vn=isNaN(u.HiveConfig.DebugLogs.TrackSnapshotLogs)?0:u.HiveConfig.DebugLogs.TrackSnapshotLogs,this.Qn=t,this.m=a.Framework.resolve(a.Framework.Fe.we).log(),this.client=a.Framework.resolve(c.gi.Be),this.Qn.nn(this)}return t.prototype.dn=function(t){void 0===t&&(t=!1);var e=t?h.Kn.Jn.qn:h.Kn.Jn.Gn;if(this.zn){var i=this.Wn-(new Date).getTime();i>e&&(a.Framework.clearTimeout(this.zn),this.Wn=null,this.$n(e))}else this.$n(e)},t.prototype.$n=function(t){var e=this;this.zn=a.Framework.setTimeout(function(){e.Yn()},t),this.Wn=(new Date).getTime()+t},t.prototype.Yn=function(){var t=this;this.zn=null,this.Wn=null,this.m.debug(e+"TAKING A TRACK SNAPSHOT"),
  this.Qn.Cn().then(function(e){return t.forward(e)})["finally"](function(){return t.Qn.reset()})},t.prototype.forward=function(t){if(this.client&&this.client.Xn()){var i=JSON.stringify(t);switch(this.Vn){case 0:default:this.m.debug(e+"TRACK EVENT");break;case 1:this.m.debug(e+"TRACK EVENT:"+i)}var r=new p.Zn(Services.to,2,i);this.client.Xn().send(r)}},t}();t.eo=T;var S=function(){function t(t,e){this.createdAt=(new Date).getTime(),this.fn=!1,this.ticket=t,this.manifests=new Array,this.yn=new Array,this.Qn=e}return t.prototype.gn=function(t){this.manifests.push(t)},t.prototype.toJSON=function(){var t={};t.type=i.xr,t.ticket={},t.ticket.url=this.ticket.ticketUrl,t.ticket.reqTs=this.ticket.io,t.ticket.respTs=this.ticket.ro,t.ticket.userAgent=this.Qn.Mn(),t.manifests=[],this.manifests.forEach(function(e){var i={};i.url=e.url,i.respTs=e.ro,i.respCode=e.respCode,t.manifests.push(i)});var e=-1,r=-1,n=-1;return this.yn.forEach(function(t){t.no>0&&(e==-1&&(e=t.ts,r=t.no),n=t.no)}),e!=-1&&(t.playTs=e),n!=-1&&(t.buffTime=n),r!=-1&&(t.initBuffTime=r),t},t}();t.oo=S;var b=function(){function t(t,e,i){this.eventId=t,this.url=e,this.ro=(new Date).getTime(),this.respCode=i}return t}();t.so=b;var E=function(){function t(t,e,i,r){this.ts=(new Date).getTime(),this.sessionId=t,this.sessionId||(this.sessionId="null"),this.event=e,this.ao=i,r&&(this.ts=r)}return t.prototype.toJSON=function(){var t={};return t.type=this.co+this.event,t.ts=this.ts,this.ao&&(t.parameters=this.ao),t},t}();t.ho=E;var I=function(t){function e(e,r,n,o){var s=t.call(this,e,r,n,o)||this;return s.co=i._r,s}return n(e,t),e}(E);t.po=I;var R=function(t){function e(e,r,n,o){var s=t.call(this,e,r,n,o)||this;return s.co=i.Dr,s}return n(e,t),e}(E);t.uo=R;var k=function(){function t(t,e,i){this.ts=(new Date).getTime(),this.lr=t,this.lo=e,this.no=i}return t}();t.do=k}(r=e.F||(e.F={}))},function(t,e){"use strict";function i(){if(this.fo)return this.fo;var t=window&&window.window?window.window.vo:void 0;if("undefined"!=typeof t&&t.log&&t.debug&&t.info&&t.warn&&t.error&&(this.fo=t),!this.fo){var e=!("undefined"==typeof window.console),i=e?console.log.bind(console):function(){};this.fo={log:i,debug:e&&window.console.debug?window.console.debug.bind(console):i,info:e&&window.console.info?window.console.info.bind(console):i,warn:e&&window.console.warn?window.console.warn.bind(console):i,error:e&&window.console.error?window.console.error.bind(console):i}}return this.fo}e.u="[HiveServices] ";var r=function(){function t(){}return t}();r.yo=250,e.ke=r;var n=function(){function t(t,e,i){this.msgId=e,this.service=t,this.msg=i}return t.prototype.mo=function(){var t=new Uint8Array([this.service>>8,255&this.service]),e=new Uint8Array([this.msgId]),i=[t,e,this.msg];return new Blob(i,{type:"application/octet-binary"})},t.wo=function(e){var i=(String.fromCharCode.apply(null,new Uint8Array(e)),String.fromCharCode.apply(null,new Uint8Array(e.slice(3)))),r=new Uint8Array(e.slice(0,2)),n=new Uint8Array(e.slice(2,3)),o=(r[0]<<8)+r[1];return new t(o,n[0],i)},t}();e.Zn=n,e.m=i},function(t,e){"use strict";var i;!function(t){var e=function(){function t(){}return t}();e.LoggerTimestamp=!0,t.Framework=e;var i=function(){function t(){}return t}();i.MetricSnapshotLogs=0,i.TrackSnapshotLogs=0,t.DebugLogs=i}(i=e.HiveConfig||(e.HiveConfig={})),"undefined"!=typeof window&&("undefined"==typeof window.HiveConfig&&(window.HiveConfig={}),window.HiveConfig.Framework=i.Framework,window.HiveConfig.DebugLogs=i.DebugLogs)},function(t,e){"use strict";var i=function(){function t(){}return t}();i.To="127.0.0.1",i.br=8999,i.Sr=8998,i.Tr=8899,i.mr=8898,i.So="//{0}:{1}/?callback={2}{3}hivePluginId={4}",i.bo="//{0}:{1}/?callback={2}",i.Er=!0,i.Eo=/((http|https):\/\/(.*):([0-9]*)\/([0-9a-z-]*).ism\/)(.*)/,i.Io="2013.1.1",e.wr=i},function(t,e,i){"use strict";var r;!function(t){t.Ro=!0;var e=function(){function t(){}return t}();e.ko="wss://bee.hivestreaming.com:443/v1/hivejs",e.Co="wss://bee-test.hivestreaming.com:443/v1/hivejs",e.Oo={iceServers:[{url:"stun:stun.hivestreaming.com:3678"}]},e.Po=3e4,e.Gn=3e5,e.qn=8e4,e.Ao=3e4,e.No=100,e.xo=1e4,t.Jn=e}(r=e.Kn||(e.Kn={}))},function(t,e,i){"use strict";var r,n=i(4),o=n.ve,s=i(1),a=i(2),c=i(9),h=i(5),p=i(27);!function(t){t[t.IDLE=0]="IDLE",t[t.Bo=1]="PLAY"}(r=e.Fo||(e.Fo={}));var u=function(){function t(t,e,i,r){this.ticket=t,this._o=e,this.app=i,this.identity=r,this.Do=a.Framework.resolve(h.gi.li),this.Ho=a.Framework.resolve(h.gi.si),this.Qn=a.Framework.resolve(h.gi.di),this.Lo=new c.F.eo(this.Qn)}return t.prototype.an=function(t,e,i){this.app=new l(t,e),this.Do.an(this.app),this.Qn.an(this.app,i)},t.prototype.Ci=function(t){this.Ho.Ci(t)},t}();e.Mo=u;var l=function(){function t(t,e){this.app=t,this.version=e}return t}();e.jo=l;var d=function(){function t(){this.Uo=null,this.Vo=null,this.Qo=new o,this.m=a.Framework.resolve(a.Framework.Fe.we).log(),this.m.debug("INIT REPORTING"),this._o=a.Framework.resolve(h.gi.Be),this.qo=a.Framework.resolve(h.gi.Ce),this.Jo=a.Framework.resolve(h.gi.ai)}return t.prototype.initSession=function(t,e){var i=this,r=s.defer(),n=this.qo.Ko(),o=this.Jo.Go(t);return null!=o?n.then(function(t){return i.zo(t,o,r,e)}).fail(r.reject):r.reject("Ticket URL not valid"),r.vt},t.prototype.close=function(){this._o.close()},t.prototype.zo=function(t,e,i,r){var n=this;this.Uo=t.Wo(),this.Vo=t.$o();var o=this._o.init(this.Uo,e),s=this.Jo.resolve(o.Yo,e,r);o.vt.then(function(e){s.then(function(e){var r=e.sessionId;if(n.Qo.has(r)){var o=n.Qo.get(r);n.m.warn("SESSION ALREADY EXISTING "+o.Do.ticket)}else{var s=new l(p.Hive.Xo(),p.Hive.getVersion()),a=new u(e,n._o,s,t);a.Do.init(n.Vo,e,s,r),a.Qn.init(n.Vo,s),a.Qn.un(e),n.Qo.set(r,a),n.m.debug("SESSION SET ",r),i.resolve(a)}}).fail(function(t){return i.reject(t?t:"Error resolving the ticket")}),e.onerror(function(t){i.reject("Error establishing connection to Hive Services")})}).fail(function(t){return i.reject(t)}),this._o.connect()},t.prototype.Zo=function(t,e){return t.es()===e.es()&&t.En()===e.En()&&t.bn()===e.bn()},t}();e.rs=d},function(t,e,i){var r,r;!function(e){t.t=e()}(function(){return function t(e,i,n){function o(a,c){if(!i[a]){if(!e[a]){var h="function"==typeof r&&r;if(!c&&h)return r(a,!0);if(s)return s(a,!0);var p=new Error("Cannot find module '"+a+"'");throw p.code="MODULE_NOT_FOUND",p}var u=i[a]={t:{}};e[a][0].call(u.t,function(t){var i=e[a][1][t];return o(i?i:t)},u,u.t,t,e,i,n)}return i[a].t}for(var s="function"==typeof r&&r,a=0;a<n.length;a++)o(n[a]);return o}({1:[function(t,e,i){var r=t("./kernel");i.Ie=r.Ie;var n=t("./type_binding");i.ns=n.ns;var o=t("./type_binding_scope");i.ss=o.ss},{"./kernel":2,"./type_binding":4,"./type_binding_scope":5}],2:[function(t,e,i){var r=t("./type_binding_scope"),n=t("./lookup"),o=function(){function t(){this.as=new n.cs}return t.prototype.bind=function(t){this.as.add(t.hs,t)},t.prototype.ps=function(t){try{this.as.remove(t)}catch(e){throw new Error("Could not resolve service "+t)}},t.prototype.Ee=function(){this.as=new n.cs},t.prototype.resolve=function(t){var e;if(!this.as.us(t))return null;e=this.as.get(t);var i=e[0];if(i.scope===r.ss.ls&&null!==i.ds)return i.ds;var n=this.fs(i.gs);return i.ds=n,n},t.prototype.vs=function(t){var e,i,r,n,o,s;return o=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,s=/([^\s,]+)/g,e=t.toString().replace(o,""),i=e.indexOf("(")+1,r=e.indexOf(")"),n="function"==typeof Map&&-1!==e.indexOf("class")&&-1===e.indexOf("constructor")?null:e.slice(i,r).match(s),null===n&&(n=[]),n},t.prototype.fs=function(t){var e=this.vs(t);if(0===e.length)return new t;for(var i=[],r=null,n=0;n<e.length;n++){var o=e[n];r=this.resolve(o),i.push(r)}return this.ys(t,i)},t.prototype.ys=function(t,e){return new(Function.prototype.bind.apply(t,[null].concat(e)))},t}();i.Ie=o},{"./lookup":3,"./type_binding_scope":5}],3:[function(t,e,i){var r=function(){function t(t,e){this.key=t,this.value=new Array,this.value.push(e)}return t}(),n=function(){function t(){this.ms=new Array}return t.prototype.ws=function(t){for(var e=-1,i=0;i<this.ms.length;i++){var r=this.ms[i];r.key===t&&(e=i)}return e},t.prototype.add=function(t,e){if(null===t||void 0===t)throw new Error("Argument Null");if(null===e||void 0===e)throw new Error("Argument Null");var i=this.ws(t);if(-1!==i){var n=this.ms[i];n.key===t&&n.value.push(e)}else this.ms.push(new r(t,e))},t.prototype.get=function(t){if(null===t||void 0===t)throw new Error("Argument Null");var e=this.ws(t);if(-1===e)throw new Error("Key Not Found");var i=this.ms[e];return i.key===t?i.value:void 0},t.prototype.remove=function(t){if(null===t||void 0===t)throw new Error("Argument Null");var e=this.ws(t);if(-1===e)throw new Error("Key Not Found");this.ms.splice(e,1)},t.prototype.us=function(t){if(null===t||void 0===t)throw new Error("Argument Null");var e=this.ws(t);return-1!==e},t}();i.cs=n},{}],4:[function(t,e,i){var r=t("./type_binding_scope"),n=function(){function t(t,e,i){if(this.hs=t,this.gs=e,this.ds=null,"undefined"==typeof i)this.scope=r.ss.Ts;else{if(!r.ss[i]){var n="Invalid scope type "+i;throw new Error(n)}this.scope=i}}return t}();i.ns=n},{"./type_binding_scope":5}],5:[function(t,e,i){var r;!function(t){t[t.Ts=0]="Transient",t[t.ls=1]="Singleton"}(r||(r={})),i.ss=r},{}]},{},[1])(1)})},function(module,exports,__webpack_require__){var Thrift={Ss:"0.9.2",bs:{Es:0,Is:1,BOOL:2,BYTE:3,Rs:3,ks:4,Cs:6,Os:8,Ps:10,As:11,Ns:11,xs:12,Bs:13,Fs:14,_s:15,Ds:16,Hs:17},Ls:{Ms:1,js:2,Us:3,Vs:4},Qs:function(t){var e=0;for(var i in t)t.hasOwnProperty(i)&&e++;return e},qs:function(t,e,i){function r(){}r.prototype=e.prototype,t.prototype=new r,t.prototype.name=i||""}};Thrift.Js=function(t){this.message=t},Thrift.qs(Thrift.Js,Error,"TException"),Thrift.Js.prototype.Ks=function(){return this.message},Thrift.Gs={zs:0,Ws:1,$s:2,Ys:3,Xs:4,Zs:5,ta:6,ea:7,ia:8,ra:9,na:10},Thrift.oa=function(t,e){this.message=t,this.code="number"==typeof e?e:0},Thrift.qs(Thrift.oa,Thrift.Js,"TApplicationException"),Thrift.oa.prototype.read=function(t){for(;;){var e=t.sa();if(e.aa==Thrift.bs.Es)break;var i=e.ca;switch(i){case 1:e.aa==Thrift.bs.As?(e=t.ha(),this.message=e.value):e=t.pa(e.aa);break;case 2:e.aa==Thrift.bs.Os?(e=t.ua(),this.code=e.value):e=t.pa(e.aa);break;default:e=t.pa(e.aa)}t.la()}t.da()},Thrift.oa.prototype.write=function(t){t.fa("TApplicationException"),this.message&&(t.ga("message",Thrift.bs.As,1),t.va(this.Ks()),t.ya()),this.code&&(t.ga("type",Thrift.bs.Os,2),t.ma(this.code),t.ya()),t.wa(),t.Ta()},Thrift.oa.prototype.Sa=function(){return this.code},Thrift.ba=Thrift.Ea=function(t,e){this.url=t,this.Ia=0,this.Ra=0,this.ka=e&&e.ka,this.Ca="",this.Oa=""},Thrift.Ea.prototype={Pa:function(){try{return new XMLHttpRequest}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(i){}throw"Your browser doesn't support XHR."},flush:function(t,e){var i=this;if(t&&!e||void 0===this.url||""===this.url)return this.Ca;var r=this.Pa();if(r.overrideMimeType&&r.overrideMimeType("application/json"),e&&(r.onreadystatechange=function(){var t=e;return function(){4==this.readyState&&200==this.status&&(i.Aa(this.responseText),t())}}()),r.open("POST",this.url,!!t),r.send(this.Ca),!t||!e){if(4!=r.readyState)throw"encountered an unknown ajax ready state: "+r.readyState;if(200!=r.status)throw"encountered a unknown request status: "+r.status;this.Oa=r.responseText,this.Na=this.Oa.length,this.Ia=this.Oa.length,this.Ra=0}},xa:function(t,e,i,r){if("undefined"==typeof jQuery||"undefined"==typeof jQuery.Deferred)throw"Thrift.js requires jQuery 1.5+ to use asynchronous requests";var n=this,o=jQuery.ajax({url:this.url,data:e,type:"POST",ds:!1,contentType:"application/json",Ba:"text thrift",Fa:{_a:function(e){n.Aa(e);var i=r.call(t);return i}},context:t,success:jQuery.makeArray(i).pop()});return o},Aa:function(t){this.Oa=t,this.Na=this.Oa.length,this.Ia=this.Oa.length,this.Ra=0},isOpen:function(){return!0},open:function(){},close:function(){},read:function(t){var e=this.Ia-this.Ra;if(0===e)return"";var i=t;e<t&&(i=e);var r=this.read_buf.substr(this.Ra,i);return this.Ra+=i,r},Da:function(){return this.Oa},write:function(t){this.Ca=t},Ha:function(){return this.Ca}},Thrift.La=function(t){this.Ma(t)},Thrift.La.prototype={Ma:function(t){this.url=t,this.ja=null,this.callbacks=[],this.Ua=[],this.Ca="",this.Oa="",this.Va=0,this.Qa=0},flush:function(t,e){var i=this;this.isOpen()?(this.ja.send(this.Ca),this.callbacks.push(function(){var t=e;return function(e){i.Aa(e),t()}}())):this.Ua.push({qa:this.Ca,Ja:e})},Ka:function(){var t=this;this.Ua.length>0&&(this.Ua.forEach(function(e){this.ja.send(e.qa),this.callbacks.push(function(){var i=e.Ja;return function(e){t.Aa(e),i()}}())}),this.Ua=[])},Ga:function(t){this.Ma(this.url)},za:function(t){this.callbacks.length&&this.callbacks.shift()(t.data)},Wa:function(t){console.log("Thrift WebSocket Error: "+t.toString()),this.ja.close()},Aa:function(t){this.Oa=t,this.Na=this.Oa.length,this.Ia=this.Oa.length,this.Ra=0},isOpen:function(){return this.ja&&this.ja.readyState==this.ja.OPEN},open:function(){this.ja&&this.ja.readyState!=this.ja.CLOSED||(this.ja=new WebSocket(this.url),this.ja.onopen=this.Ka.bind(this),this.ja.onmessage=this.za.bind(this),this.ja.onerror=this.Wa.bind(this),this.ja.onclose=this.Ga.bind(this))},close:function(){this.ja.close()},read:function(t){var e=this.Ia-this.Ra;if(0===e)return"";var i=t;e<t&&(i=e);var r=this.read_buf.substr(this.Ra,i);return this.Ra+=i,r},Da:function(){return this.Oa},write:function(t){this.Ca=t},Ha:function(){return this.Ca}},Thrift.$a=Thrift.Ya=function(t){this.Xa=t},Thrift.Ya.bs={},Thrift.Ya.bs[Thrift.bs.BOOL]='"tf"',Thrift.Ya.bs[Thrift.bs.BYTE]='"i8"',Thrift.Ya.bs[Thrift.bs.Cs]='"i16"',Thrift.Ya.bs[Thrift.bs.Os]='"i32"',Thrift.Ya.bs[Thrift.bs.Ps]='"i64"',Thrift.Ya.bs[Thrift.bs.ks]='"dbl"',Thrift.Ya.bs[Thrift.bs.xs]='"rec"',Thrift.Ya.bs[Thrift.bs.As]='"str"',Thrift.Ya.bs[Thrift.bs.Bs]='"map"',Thrift.Ya.bs[Thrift.bs._s]='"lst"',Thrift.Ya.bs[Thrift.bs.Fs]='"set"',Thrift.Ya.Za={},Thrift.Ya.Za.tc=Thrift.bs.BOOL,Thrift.Ya.Za.ec=Thrift.bs.BYTE,Thrift.Ya.Za.ic=Thrift.bs.Cs,Thrift.Ya.Za.rc=Thrift.bs.Os,Thrift.Ya.Za.nc=Thrift.bs.Ps,Thrift.Ya.Za.oc=Thrift.bs.ks,Thrift.Ya.Za.sc=Thrift.bs.xs,Thrift.Ya.Za.ac=Thrift.bs.As,Thrift.Ya.Za.map=Thrift.bs.Bs,Thrift.Ya.Za.cc=Thrift.bs._s,Thrift.Ya.Za.set=Thrift.bs.Fs,Thrift.Ya.Ss=1,Thrift.Ya.prototype={hc:function(){return this.Xa},pc:function(t,e,i){this.uc=[],this.lc=[],this.uc.push([Thrift.Ya.Ss,'"'+t+'"',e,i])},dc:function(){var t=this.uc.pop();this.fc=this.uc.pop(),this.fc.push(t),this.gc="["+this.fc.join(",")+"]",this.Xa.write(this.gc)},fa:function(t){this.lc.push(this.uc.length),this.uc.push({})},Ta:function(){var t=this.lc.pop(),e=this.uc[t],i="{",r=!0;for(var n in e)r?r=!1:i+=",",i+=n+":"+e[n];i+="}",this.uc[t]=i},ga:function(t,e,i){this.lc.push(this.uc.length),this.uc.push({vc:'"'+i+'"',yc:Thrift.Ya.bs[e]})},ya:function(){var t=this.uc.pop(),e=this.uc.pop();this.uc[this.uc.length-1][e.vc]="{"+e.yc+":"+t+"}",this.lc.pop()},wa:function(){},mc:function(t,e,i){this.lc.push(this.uc.length),this.uc.push([Thrift.Ya.bs[t],Thrift.Ya.bs[e],0])},wc:function(){var t=this.lc.pop();if(t!=this.uc.length){(this.uc.length-t-1)%2!==0&&this.uc.push("");var e=(this.uc.length-t-1)/2;this.uc[t][this.uc[t].length-1]=e;for(var i="}",r=!0;this.uc.length>t+1;){var n=this.uc.pop(),o=this.uc.pop();r?r=!1:i=","+i,isNaN(o)||(o='"'+o+'"'),i=o+":"+n+i}i="{"+i,this.uc[t].push(i),this.uc[t]="["+this.uc[t].join(",")+"]"}},Tc:function(t,e){this.lc.push(this.uc.length),this.uc.push([Thrift.Ya.bs[t],e])},Sc:function(){for(var t=this.lc.pop();this.uc.length>t+1;){var e=this.uc[t+1];this.uc.splice(t+1,1),this.uc[t].push(e)}this.uc[t]="["+this.uc[t].join(",")+"]"},bc:function(t,e){this.lc.push(this.uc.length),this.uc.push([Thrift.Ya.bs[t],e])},Ec:function(){for(var t=this.lc.pop();this.uc.length>t+1;){var e=this.uc[t+1];this.uc.splice(t+1,1),this.uc[t].push(e)}this.uc[t]="["+this.uc[t].join(",")+"]"},Ic:function(t){this.uc.push(t?1:0)},Rc:function(t){this.uc.push(t)},kc:function(t){this.uc.push(t)},ma:function(t){this.uc.push(t)},Cc:function(t){this.uc.push(t)},Oc:function(t){this.uc.push(t)},va:function(t){if(null===t)this.uc.push(null);else{for(var e="",i=0;i<t.length;i++){var r=t.charAt(i);e+='"'===r?'\\"':"\\"===r?"\\\\":"\b"===r?"\\b":"\f"===r?"\\f":"\n"===r?"\\n":"\r"===r?"\\r":"\t"===r?"\\t":r}this.uc.push('"'+e+'"')}},Pc:function(t){this.va(t)},Ac:function(){this.Nc=[],this.Ra=[],"undefined"!=typeof JSON&&"function"==typeof JSON.parse?this.xc=JSON.parse(this.Xa.Da()):"undefined"!=typeof jQuery?this.xc=jQuery.parseJSON(this.Xa.Da()):this.xc=eval(this.Xa.Da());var r={},version=this.xc.shift();if(version!=Thrift.Ya.Ss)throw"Wrong thrift protocol version: "+version;return r.Bc=this.xc.shift(),r.Fc=this.xc.shift(),r._c=this.xc.shift(),this.Nc.push(this.xc.shift()),r},Dc:function(){},Hc:function(t){var e={};return e.Bc="",this.Nc[this.Nc.length-1]instanceof Array&&this.Nc.push(this.Nc[this.Nc.length-1].shift()),e},da:function(){this.Nc[this.Nc.length-2]instanceof Array&&this.Nc.pop()},sa:function(){var t={},e=-1,i=Thrift.bs.Es;for(var r in this.Nc[this.Nc.length-1])if(null!==r){e=parseInt(r,10),this.Ra.push(this.Nc.length);var n=this.Nc[this.Nc.length-1][e];delete this.Nc[this.Nc.length-1][e],this.Nc.push(n);break}if(e!=-1)for(var o in this.Nc[this.Nc.length-1])null!==Thrift.Ya.Za[o]&&(i=Thrift.Ya.Za[o],this.Nc[this.Nc.length-1]=this.Nc[this.Nc.length-1][o]);return t.Bc="",t.aa=i,t.ca=e,t},la:function(){for(var t=this.Ra.pop();this.Nc.length>t;)this.Nc.pop()},Lc:function(){var t=this.Nc.pop(),e=t.shift();e instanceof Array&&(this.Nc.push(t),t=e,e=t.shift());var i={};return i.Mc=Thrift.Ya.Za[e],i.jc=Thrift.Ya.Za[t.shift()],i.size=t.shift(),this.Ra.push(this.Nc.length),this.Nc.push(t.shift()),i},Uc:function(){this.la()},Vc:function(){var t=this.Nc[this.Nc.length-1],e={};return e.Qc=Thrift.Ya.Za[t.shift()],e.size=t.shift(),this.Ra.push(this.Nc.length),this.Nc.push(t),e},qc:function(){this.la()},Jc:function(t,e){return this.Vc(t,e)},Kc:function(){return this.qc()},Gc:function(){var t=this.ua();return null!==t&&"1"==t.value?t.value=!0:t.value=!1,t},zc:function(){return this.ua()},Wc:function(){return this.ua()},ua:function(t){void 0===t&&(t=this.Nc[this.Nc.length-1]);var e={};if(t instanceof Array)0===t.length?e.value=void 0:e.value=t.shift();else if(t instanceof Object){for(var i in t)if(null!==i){this.Nc.push(t[i]),delete t[i],e.value=i;break}}else e.value=t,this.Nc.pop();return e},$c:function(){return this.ua()},Yc:function(){return this.ua()},ha:function(){var t=this.ua();return t},Xc:function(){return this.ha()},pa:function(t){var e,i;switch(t){case Thrift.bs.Es:return null;case Thrift.bs.BOOL:return this.Gc();case Thrift.bs.BYTE:return this.zc();case Thrift.bs.Cs:return this.Wc();case Thrift.bs.Os:return this.ua();case Thrift.bs.Ps:return this.$c();case Thrift.bs.ks:return this.Yc();case Thrift.bs.As:return this.ha();case Thrift.bs.xs:for(this.Hc();;){if(e=this.sa(),e.aa==Thrift.bs.Es)break;this.pa(e.aa),this.la()}return this.da(),null;case Thrift.bs.Bs:for(e=this.Lc(),i=0;i<e.size;i++)i>0&&this.Nc.length>this.Ra[this.Ra.length-1]+1&&this.Nc.pop(),this.pa(e.Mc),this.pa(e.jc);return this.Uc(),null;case Thrift.bs.Fs:for(e=this.Jc(),i=0;i<e.size;i++)this.pa(e.Qc);return this.Kc(),null;case Thrift.bs._s:for(e=this.Vc(),i=0;i<e.size;i++)this.pa(e.Qc);return this.qc(),null}}},Thrift.Zc=function(t,e,i,r){Thrift.Ya.call(this,e,i,r),this.th=t},Thrift.qs(Thrift.Zc,Thrift.Ya,"multiplexProtocol"),Thrift.Zc.prototype.pc=function(t,e,i){e===Thrift.Ls.Ms||e===Thrift.Ls.Vs?Thrift.Ya.prototype.pc.call(this,this.th+":"+t,e,i):Thrift.Ya.prototype.pc.call(this,t,e,i)},Thrift.eh=function(){this.ih=0},Thrift.eh.prototype.rh=function(t,e,i){e.eo&&(e=e.eo);var r=this;e.prototype.nh=function(){return r.ih+=1,r.ih};var n=new e(new Thrift.Zc(t,i));return n},module.t=Thrift},function(t,e){"use strict";var i;!function(t){function e(t){return n[t]}var i=function(){function t(){}return t}();t.HiveSession=i;var r;!function(t){t[t.oh=0]="GENERIC_ERROR",t[t.sh=1]="NO_TECH_AVAILABLE",t[t.ah=2]="NO_TECH_RESOLVED",t[t.hh=3]="TECH_ERROR",t[t.ph=4]="TICKET_ERROR"}(r=t.uh||(t.uh={}));var n;!function(t){t[t["lh"]=0]="Generic Undefined Error",t[t["dh"]=1]="No Tech available to resolve the ticket",t[t["fh"]=2]="No available Tech could resolved the ticket",t[t["gh"]=3]="Stopped resolving session on last tech onError",t[t["vh"]=4]="The ticket could not be resolved"}(n||(n={}));var o=function(){function t(){}return t}();t.HiveSessionError=o;var s=function(){function t(t,e){this.code=t,this.message=e}return t}();t.HiveTechError=s;var a;!function(t){t[t.yh=0]="NOT_READY",t[t.mh=1]="PLUGIN_ERROR",t[t.wh=2]="SESSION_ERROR",t[t.ph=3]="TICKET_ERROR",t[t.Th=4]="VERSION_ERROR",t[t.Sh=5]="TIMEOUT_ERROR"}(a=t.bh||(t.bh={}));var c;!function(t){t[t.Eh=0]="OK",t[t.Ih=1]="HIVE_NOT_ALLOWED",t[t.Rh=2]="TICKET_NOT_RESOLVED",t[t.kh=3]="TIMEOUT_RESOLVING_TICKET"}(c=t.Ch||(t.Ch={})),t.getHiveSessionErrorMessage=e;var h=function(){function t(t){this.Oh=t}return t.prototype.getPluginStatusCode=function(){return this.Oh.Ph()},t}();t.Ah=h}(i=e.pt||(e.pt={})),"undefined"!=typeof window&&("undefined"==typeof window.pt&&(window.pt={}),window.pt.getHiveSessionErrorMessage=i.getHiveSessionErrorMessage)},function(t,e){"use strict";var i=function(){function t(){}return t}();i.yr="https:"===location.protocol,i.Er=!0,i.Nh=1e4,i.xh=6e4,e.ke=i},function(t,e,i){"use strict";var r=i(41),n=i(8),o=i(25);if("undefined"==typeof s)var s="592835a6b4204dd197c00488610003e0";if("undefined"==typeof a)var a="0.8";if("undefined"==typeof c)var c=!0;var h=function(){function t(){if(this.st=!1,t.Gi)throw new Error("Error: Instantiation failed: Use AtatusLogger.getInstance() instead of new.");var e,i=void 0!=n.HiveConfig.ErrorMonitor.key?n.HiveConfig.ErrorMonitor.key:s,r=1==n.HiveConfig.ErrorMonitor.enabledRUM,a=1==n.HiveConfig.ErrorMonitor.enableKeyCombination,h=1==n.HiveConfig.ErrorMonitor.enabledErrorFilter;h&&(e=this.Bh()),atatus&&(void 0==n.HiveConfig.ErrorMonitor.enabled&&c||void 0!=n.HiveConfig.ErrorMonitor.enabled&&1==n.HiveConfig.ErrorMonitor.enabled)&&(atatus.config(i,{enableSourcemap:!0,disableRUM:!r,version:o.version,beforeErrorSend:function(t){var i=!1;if(t&&t.customData&&"undefined"!=typeof t.customData.forceSend&&(i=t.customData.forceSend,delete t.customData.forceSend,0===Object.keys(t.customData).length&&(t.customData=null)),!h||i)return!0;if(!e)return!1;try{var r=!1;if(t.backTraces){for(var n=0,o=t.backTraces;n<o.length;n++){var s=o[n],a=s.f.indexOf(e)>-1;if(a&&s.ln>5){r=!0;break}}r&&(t.name=t.name.replace(/%s \[[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]+] /,""),t.name.indexOf("Status Code Error:")>=0&&(t.tags=["Plugin Error Code",t.name.split(":")[1].trim()]))}return r}catch(c){return!1}}}).install(),a&&this.Fh(),this.st=!0,window.console&&console.log("[HiveComm] Error Monitor installed [RUM:"+r+", KeyHandler:"+a+"]"),h&&!e&&this._h("Could not extract error filter"))}return t.Wi=function(){return void 0===this.Gi&&(this.Gi=new t),this.Gi},t.prototype.Fh=function(){r.Hh.Wi().Dh([16,17,88],function(){try{throw new Error("Upload console logs")}catch(t){atatus.notify(t),window.console&&console.log("[HiveComm] console log uploaded for debugging")}})},t.prototype.Bh=function(){try{throw new Error("test")}catch(t){var e=t.stack.match(/(\/\/.*\.js)/i);if(e&&e.length>0)return e[0]}},t.prototype.setUser=function(t){atatus&&this.st&&atatus.setUser(t)},t.prototype.Lh=function(t){this.m=t},t.prototype.setCustomData=function(t){atatus&&this.st&&atatus.setCustomData(t)},t.prototype._h=function(t,e){if(this.m&&this.m.warn(t),atatus&&this.st)try{throw new Error(t)}catch(i){e||(e={}),e.forceSend=!0,atatus.notify(i,e)}},t.prototype.setTags=function(t){atatus&&this.st&&atatus.setTags(t)},t.prototype.notify=function(t,e){atatus&&this.st&&(e||(e={}),e.forceSend=!0,atatus.notify(t,e))},t}();e.ErrorMonitor=h},function(t,e,i){"use strict";var r=i(21),n=i(34),o=n.Mh,s=n.jh,a=function(){function t(){this.SourceURLParams={}}return t.prototype.Uh=function(t){for(var e in t)if("SourceURLParams"===e)for(var i in t[e])this[e][i]=t[e][i];else this[e]=t[e];this.Vh()},t.prototype.Qh=function(){var t="b6614c3e4cd1d14eed6b39ef2bf6b9a3e3d6dfcd26699d7270d887923bcbf83efb3dadb717c0bafb1d48dce361eb369b7cc46e57405ebfbdd86c3175532fe56cc77f473d345b2cb6feafb5ab0e24f364a3d259f27e4a2fd97468265bddfd3ddd3ac64251db650ca0280af2b2c45e8b1c8f040f2c433ac0a157d2b3fd91517253",e="010001",i=this.ContentId+this.SiteId+this.CROId+this.SourceURL,r=new o;r.qh(t,e);var n=s(this.Signature);return r.Jh(i,n)},t.prototype.Kh=function(t){this.ticketUrl=t;var e=r.parse(t),i=e.path.split("/").slice(3);if(this.SiteId=i[0],this.CROId=i[1],this.ContentId=i[2],this.Gh=i[3],e.vi)try{var n=e.vi.split("&");for(var o in n){var s=n[o].split(/=(.+)/);this.SourceURLParams[s[0]]=s[1]}}catch(a){}this.zh=t.indexOf("api-test")>-1},t.prototype.bn=function(){return this.SiteId},t.prototype.En=function(){return this.CROId},t.prototype.es=function(){return this.ContentId},t.prototype.Wh=function(){return this.Gh},t.prototype.$h=function(){return this.SourceURL},t.prototype.Yh=function(){if(this.Xh=this.SourceURL,void 0!=this.SourceURLParams){var t=new Array;for(var e in this.SourceURLParams)t.push(e+"="+this.SourceURLParams[e]);t.length>0&&this.Xh&&(this.Xh+=(this.Xh.indexOf("?")>0?"&":"?")+t.join("&"))}},t.prototype.Vh=function(){var t=i(22);this.sessionId=t.Zh()},t.prototype.tp=function(){return this.Xh||this.Yh(),this.Xh},t.prototype.On=function(){return"["+this.SiteId+"/"+this.CROId+"/"+this.ContentId+"]"},t.prototype.ep=function(){return[this.SiteId,this.CROId,this.ContentId]},t.prototype.ip=function(){return this.SourceURL+"-["+this.SiteId+"/"+this.CROId+"/"+this.ContentId+"]"},t.prototype.toString=function(){return this.On()},t}();a.rp="^https?://api(?:-test)?.hivestreaming.com/v1/events/(?:wildcard/)?",a.np="CROId",a.op="SiteId",a.sp="ContentId",e.ap=a},function(t,e,i){var r,n,o;/*!
 * URI.js - Mutating URLs
 *
 * Version: 1.18.10
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
  !function(s,a){"use strict";"object"==typeof t&&t.t?t.t=a(i(6),i(6),i(6)):(n=[i(6),i(6),i(6)],r=a,o="function"==typeof r?r.apply(e,n):r,!(void 0!==o&&(t.t=o)))}(this,function(t,e,i,r){"use strict";function n(t,e){var i=arguments.length>=1,r=arguments.length>=2;if(!(this instanceof n))return i?r?new n(t,e):new n(t):new n;if(void 0===t){if(i)throw new TypeError("undefined is not a valid argument for URI");t="undefined"!=typeof location?location.href+"":""}if(null===t&&i)throw new TypeError("null is not a valid argument for URI");return this.href(t),void 0!==e?this.cp(e):this}function o(t){return t.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function s(t){return void 0===t?"Undefined":String(Object.prototype.toString.call(t)).slice(8,-1)}function a(t){return"Array"===s(t)}function c(t,e){var i,r,n={};if("RegExp"===s(e))n=null;else if(a(e))for(i=0,r=e.length;i<r;i++)n[e[i]]=!0;else n[e]=!0;for(i=0,r=t.length;i<r;i++){var o=n&&void 0!==n[t[i]]||!n&&e.test(t[i]);o&&(t.splice(i,1),r--,i--)}return t}function h(t,e){var i,r;if(a(e)){for(i=0,r=e.length;i<r;i++)if(!h(t,e[i]))return!1;return!0}var n=s(e);for(i=0,r=t.length;i<r;i++)if("RegExp"===n){if("string"==typeof t[i]&&t[i].match(e))return!0}else if(t[i]===e)return!0;return!1}function p(t,e){if(!a(t)||!a(e))return!1;if(t.length!==e.length)return!1;t.sort(),e.sort();for(var i=0,r=t.length;i<r;i++)if(t[i]!==e[i])return!1;return!0}function u(t){var e=/^\/+|\/+$/g;return t.replace(e,"")}function l(t){return escape(t)}function d(t){return encodeURIComponent(t).replace(/[!'()*]/g,l).replace(/\*/g,"%2A")}function f(t){return function(e,i){return void 0===e?this.hp[t]||"":(this.hp[t]=e||null,this.pp(!i),this)}}function g(t,e){return function(i,r){return void 0===i?this.hp[t]||"":(null!==i&&(i+="",i.charAt(0)===e&&(i=i.substring(1))),this.hp[t]=i,this.pp(!r),this)}}var v=r&&r.up;n.version="1.18.10";var y=n.prototype,m=Object.prototype.hasOwnProperty;n.hp=function(){return{protocol:null,username:null,password:null,hostname:null,urn:null,port:null,path:null,vi:null,lp:null,dp:n.dp,fp:n.fp}},n.dp=!1,n.fp=!0,n.gp=/^[a-z][a-z0-9.+-]*$/i,n.vp=/[^a-z0-9\.-]/i,n.yp=/(xn--)/i,n.mp=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,n.wp=/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,n.Tp=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/gi,n.Sp={start:/\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,end:/[\s\r\n]|$/,trim:/[`!()\[\]{};:'".,<>?«»“”„‘’]+$/,bp:/(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g},n.Ep={Ip:"80",Rp:"443",kp:"21",Cp:"70",Op:"80",Pp:"443"},n.Ap=/[^a-zA-Z0-9\.-]/,n.Np={a:"href",xp:"cite",link:"href",Bp:"href",Fp:"src",form:"action",_p:"src",Dp:"href",Hp:"src",Lp:"src",source:"src",track:"src",input:"src",Mp:"src",video:"src"},n.jp=function(t){if(t&&t.nodeName){var e=t.nodeName.toLowerCase();if("input"!==e||"image"===t.type)return n.Np[e]}},n.encode=d,n.decode=decodeURIComponent,n.Up=function(){n.encode=escape,n.decode=unescape},n.Vp=function(){n.encode=d,n.decode=decodeURIComponent},n.Qp={pathname:{encode:{qp:/%(24|26|2B|2C|3B|3D|3A|40)/gi,map:{"%24":"$","%26":"&","%2B":"+","%2C":",","%3B":";","%3D":"=","%3A":":","%40":"@"}},decode:{qp:/[\/\?#]/g,map:{Jp:"%2F",Kp:"%3F",Gp:"%23"}}},zp:{encode:{qp:/%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi,map:{"%3A":":",Wp:"/",$p:"?",Yp:"#",Xp:"[",Zp:"]","%40":"@",tu:"!","%24":"$","%26":"&",eu:"'",iu:"(",ru:")",nu:"*","%2B":"+","%2C":",","%3B":";","%3D":"="}}},ou:{encode:{qp:/%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi,map:{tu:"!","%24":"$",eu:"'",iu:"(",ru:")",nu:"*","%2B":"+","%2C":",","%3B":";","%3D":"=","%40":"@"}},decode:{qp:/[\/\?#:]/g,map:{Jp:"%2F",Kp:"%3F",Gp:"%23",su:"%3A"}}}},n.au=function(t,e){var i=n.encode(t+"");return void 0===e&&(e=n.fp),e?i.replace(/%20/g,"+"):i},n.cu=function(t,e){t+="",void 0===e&&(e=n.fp);try{return n.decode(e?t.replace(/\+/g,"%20"):t)}catch(i){return t}};var w,T={encode:"encode",decode:"decode"},S=function(t,e){return function(i){try{return n[e](i+"").replace(n.Qp[t][e].qp,function(i){return n.Qp[t][e].map[i]})}catch(r){return i}}};for(w in T)n[w+"PathSegment"]=S("pathname",T[w]),n[w+"UrnPathSegment"]=S("urnpath",T[w]);var b=function(t,e,i){return function(r){var o;o=i?function(t){return n[e](n[i](t))}:n[e];for(var s=(r+"").split(t),a=0,c=s.length;a<c;a++)s[a]=o(s[a]);return s.join(t)}};n.hu=b("/","decodePathSegment"),n.pu=b(":","decodeUrnPathSegment"),n.uu=b("/","encodePathSegment","decode"),n.lu=b(":","encodeUrnPathSegment","decode"),n.du=S("reserved","encode"),n.parse=function(t,e){var i;return e||(e={}),i=t.indexOf("#"),i>-1&&(e.lp=t.substring(i+1)||null,t=t.substring(0,i)),i=t.indexOf("?"),i>-1&&(e.vi=t.substring(i+1)||null,t=t.substring(0,i)),"//"===t.substring(0,2)?(e.protocol=null,t=t.substring(2),t=n.fu(t,e)):(i=t.indexOf(":"),i>-1&&(e.protocol=t.substring(0,i)||null,e.protocol&&!e.protocol.match(n.gp)?e.protocol=void 0:"//"===t.substring(i+1,i+3)?(t=t.substring(i+3),t=n.fu(t,e)):(t=t.substring(i+1),e.urn=!0))),e.path=t,e},n.gu=function(t,e){t=t.replace(/\\/g,"/");var i,r,n=t.indexOf("/");if(n===-1&&(n=t.length),"["===t.charAt(0))i=t.indexOf("]"),e.hostname=t.substring(1,i)||null,e.port=t.substring(i+2,n)||null,"/"===e.port&&(e.port=null);else{var o=t.indexOf(":"),s=t.indexOf("/"),a=t.indexOf(":",o+1);a!==-1&&(s===-1||a<s)?(e.hostname=t.substring(0,n)||null,e.port=null):(r=t.substring(0,n).split(":"),e.hostname=r[0]||null,e.port=r[1]||null)}return e.hostname&&"/"!==t.substring(n).charAt(0)&&(n++,t="/"+t),t.substring(n)||"/"},n.fu=function(t,e){return t=n.vu(t,e),n.gu(t,e)},n.vu=function(t,e){var i,r=t.indexOf("/"),o=t.lastIndexOf("@",r>-1?r:t.length-1);return o>-1&&(r===-1||o<r)?(i=t.substring(0,o).split(":"),e.username=i[0]?n.decode(i[0]):null,i.shift(),e.password=i[0]?n.decode(i.join(":")):null,t=t.substring(o+1)):(e.username=null,e.password=null),t},n.yu=function(t,e){if(!t)return{};if(t=t.replace(/&+/g,"&").replace(/^\?*&*|&+$/g,""),!t)return{};for(var i,r,o,s={},a=t.split("&"),c=a.length,h=0;h<c;h++)i=a[h].split("="),r=n.cu(i.shift(),e),o=i.length?n.cu(i.join("="),e):null,m.call(s,r)?("string"!=typeof s[r]&&null!==s[r]||(s[r]=[s[r]]),s[r].push(o)):s[r]=o;return s},n.pp=function(t){var e="";return t.protocol&&(e+=t.protocol+":"),t.urn||!e&&!t.hostname||(e+="//"),e+=n.mu(t)||"","string"==typeof t.path&&("/"!==t.path.charAt(0)&&"string"==typeof t.hostname&&(e+="/"),e+=t.path),"string"==typeof t.vi&&t.vi&&(e+="?"+t.vi),"string"==typeof t.lp&&t.lp&&(e+="#"+t.lp),e},n.wu=function(t){var e="";return t.hostname?(e+=n.wp.test(t.hostname)?"["+t.hostname+"]":t.hostname,t.port&&(e+=":"+t.port),e):""},n.mu=function(t){return n.Tu(t)+n.wu(t)},n.Tu=function(t){var e="";return t.username&&(e+=n.encode(t.username)),t.password&&(e+=":"+n.encode(t.password)),e&&(e+="@"),e},n.Su=function(t,e,i){var r,o,s,c,h="";for(o in t)if(m.call(t,o)&&o)if(a(t[o]))for(r={},s=0,c=t[o].length;s<c;s++)void 0!==t[o][s]&&void 0===r[t[o][s]+""]&&(h+="&"+n.bu(o,t[o][s],i),e!==!0&&(r[t[o][s]+""]=!0));else void 0!==t[o]&&(h+="&"+n.bu(o,t[o],i));return h.substring(1)},n.bu=function(t,e,i){return n.au(t,i)+(null!==e?"="+n.au(e,i):"")},n.Eu=function(t,e,i){if("object"==typeof e)for(var r in e)m.call(e,r)&&n.Eu(t,r,e[r]);else{if("string"!=typeof e)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");if(void 0===t[e])return void(t[e]=i);"string"==typeof t[e]&&(t[e]=[t[e]]),a(i)||(i=[i]),t[e]=(t[e]||[]).concat(i)}},n.Iu=function(t,e,i){var r,o,h;if(a(e))for(r=0,o=e.length;r<o;r++)t[e[r]]=void 0;else if("RegExp"===s(e))for(h in t)e.test(h)&&(t[h]=void 0);else if("object"==typeof e)for(h in e)m.call(e,h)&&n.Iu(t,h,e[h]);else{if("string"!=typeof e)throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");void 0!==i?"RegExp"===s(i)?!a(t[e])&&i.test(t[e])?t[e]=void 0:t[e]=c(t[e],i):t[e]!==String(i)||a(i)&&1!==i.length?a(t[e])&&(t[e]=c(t[e],i)):t[e]=void 0:t[e]=void 0}},n.Ru=function(t,e,i,r){switch(s(e)){case"String":break;case"RegExp":for(var o in t)if(m.call(t,o)&&e.test(o)&&(void 0===i||n.Ru(t,o,i)))return!0;return!1;case"Object":for(var c in e)if(m.call(e,c)&&!n.Ru(t,c,e[c]))return!1;return!0;default:throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter")}switch(s(i)){case"Undefined":return e in t;case"Boolean":var u=Boolean(a(t[e])?t[e].length:t[e]);return i===u;case"Function":return!!i(t[e],e,t);case"Array":if(!a(t[e]))return!1;var l=r?h:p;return l(t[e],i);case"RegExp":return a(t[e])?!!r&&h(t[e],i):Boolean(t[e]&&t[e].match(i));case"Number":i=String(i);case"String":return a(t[e])?!!r&&h(t[e],i):t[e]===i;default:throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter")}},n.ku=function(){for(var t=[],e=[],i=0,r=0;r<arguments.length;r++){var o=new n(arguments[r]);t.push(o);for(var s=o.Cu(),a=0;a<s.length;a++)"string"==typeof s[a]&&e.push(s[a]),s[a]&&i++}if(!e.length||!i)return new n("");var c=new n("").Cu(e);return""!==t[0].path()&&"/"!==t[0].path().slice(0,1)||c.path("/"+c.path()),c.normalize()},n.Ou=function(t,e){var i,r=Math.min(t.length,e.length);for(i=0;i<r;i++)if(t.charAt(i)!==e.charAt(i)){i--;break}return i<1?t.charAt(0)===e.charAt(0)&&"/"===t.charAt(0)?"/":"":("/"===t.charAt(i)&&"/"===e.charAt(i)||(i=t.substring(0,i).lastIndexOf("/")),t.substring(0,i+1))},n.Pu=function(t,e,i){i||(i={});var r=i.start||n.Sp.start,o=i.end||n.Sp.end,s=i.trim||n.Sp.trim,a=i.bp||n.Sp.bp,c=/[a-z0-9-]=["']?$/i;for(r.lastIndex=0;;){var h=r.exec(t);if(!h)break;var p=h.index;if(i.ignoreHtml){var u=t.slice(Math.max(p-3,0),p);if(u&&c.test(u))continue}for(var l=p+t.slice(p).search(o),d=t.slice(p,l),f=-1;;){var g=a.exec(d);if(!g)break;var v=g.index+g[0].length;f=Math.max(f,v)}if(d=f>-1?d.slice(0,f)+d.slice(f).replace(s,""):d.replace(s,""),!(d.length<=h[0].length||i.ignore&&i.ignore.test(d))){l=p+d.length;var y=e(d,p,l,t);void 0!==y?(y=String(y),t=t.slice(0,p)+y+t.slice(l),r.lastIndex=p+y.length):r.lastIndex=l}}return r.lastIndex=0,t},n.Au=function(e){if(e.match(n.Ap)){if(!t)throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-] and Punycode.js is not available');if(t.toASCII(e).match(n.Ap))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]')}},n.ge=function(t){if(t){var e={up:this.ge()};return r.Nu&&"function"==typeof r.Nu.ge&&(e.Nu=r.Nu.ge()),r.xu&&"function"==typeof r.xu.ge&&(e.xu=r.xu.ge()),r.Bu&&"function"==typeof r.Bu.ge&&(e.Bu=r.Bu.ge()),e}return r.up===this&&(r.up=v),this},y.pp=function(t){return t===!0?this.Fu=!0:(void 0===t||this.Fu)&&(this._u=n.pp(this.hp),this.Fu=!1),this},y.clone=function(){return new n(this)},y.valueOf=y.toString=function(){return this.pp(!1)._u},y.protocol=f("protocol"),y.username=f("username"),y.password=f("password"),y.hostname=f("hostname"),y.port=f("port"),y.vi=g("query","?"),y.lp=g("fragment","#"),y.search=function(t,e){var i=this.vi(t,e);return"string"==typeof i&&i.length?"?"+i:i},y.hash=function(t,e){var i=this.lp(t,e);return"string"==typeof i&&i.length?"#"+i:i},y.pathname=function(t,e){if(void 0===t||t===!0){var i=this.hp.path||(this.hp.hostname?"/":"");return t?(this.hp.urn?n.pu:n.hu)(i):i}return this.hp.urn?this.hp.path=t?n.lu(t):"":this.hp.path=t?n.uu(t):"/",this.pp(!e),this},y.path=y.pathname,y.href=function(t,e){var i;if(void 0===t)return this.toString();this._u="",this.hp=n.hp();var r=t instanceof n,o="object"==typeof t&&(t.hostname||t.path||t.pathname);if(t.nodeName){var s=n.jp(t);t=t[s]||"",o=!1}if(!r&&o&&void 0!==t.pathname&&(t=t.toString()),"string"==typeof t||t instanceof String)this.hp=n.parse(String(t),this.hp);else{if(!r&&!o)throw new TypeError("invalid input");var a=r?t.hp:t;for(i in a)m.call(this.hp,i)&&(this.hp[i]=a[i])}return this.pp(!e),this},y.is=function(t){var e=!1,r=!1,o=!1,s=!1,a=!1,c=!1,h=!1,p=!this.hp.urn;switch(this.hp.hostname&&(p=!1,r=n.mp.test(this.hp.hostname),o=n.wp.test(this.hp.hostname),e=r||o,s=!e,a=s&&i&&i.has(this.hp.hostname),c=s&&n.vp.test(this.hp.hostname),h=s&&n.yp.test(this.hp.hostname)),t.toLowerCase()){case"relative":return p;case"absolute":return!p;case"domain":case"name":return s;case"sld":return a;case"ip":return e;case"ip4":case"ipv4":case"inet4":return r;case"ip6":case"ipv6":case"inet6":return o;case"idn":return c;case"url":return!this.hp.urn;case"urn":return!!this.hp.urn;case"punycode":return h}return null};var E=y.protocol,I=y.port,R=y.hostname;y.protocol=function(t,e){if(void 0!==t&&t&&(t=t.replace(/:(\/\/)?$/,""),!t.match(n.gp)))throw new TypeError('Protocol "'+t+"\" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]");return E.call(this,t,e)},y.scheme=y.protocol,y.port=function(t,e){if(this.hp.urn)return void 0===t?"":this;if(void 0!==t&&(0===t&&(t=null),t&&(t+="",":"===t.charAt(0)&&(t=t.substring(1)),t.match(/[^0-9]/))))throw new TypeError('Port "'+t+'" contains characters other than [0-9]');return I.call(this,t,e)},y.hostname=function(t,e){if(this.hp.urn)return void 0===t?"":this;if(void 0!==t){var i={},r=n.gu(t,i);if("/"!==r)throw new TypeError('Hostname "'+t+'" contains characters other than [A-Z0-9.-]');t=i.hostname}return R.call(this,t,e)},y.origin=function(t,e){if(this.hp.urn)return void 0===t?"":this;if(void 0===t){var i=this.protocol(),r=this.Du();return r?(i?i+"://":"")+this.Du():""}var o=n(t);return this.protocol(o.protocol()).Du(o.Du()).pp(!e),this},y.host=function(t,e){if(this.hp.urn)return void 0===t?"":this;if(void 0===t)return this.hp.hostname?n.wu(this.hp):"";var i=n.gu(t,this.hp);if("/"!==i)throw new TypeError('Hostname "'+t+'" contains characters other than [A-Z0-9.-]');return this.pp(!e),this},y.Du=function(t,e){if(this.hp.urn)return void 0===t?"":this;if(void 0===t)return this.hp.hostname?n.mu(this.hp):"";var i=n.fu(t,this.hp);if("/"!==i)throw new TypeError('Hostname "'+t+'" contains characters other than [A-Z0-9.-]');return this.pp(!e),this},y.Hu=function(t,e){if(this.hp.urn)return void 0===t?"":this;if(void 0===t){var i=n.Tu(this.hp);return i?i.substring(0,i.length-1):i}return"@"!==t[t.length-1]&&(t+="@"),n.vu(t,this.hp),this.pp(!e),this},y.Lu=function(t,e){var i;return void 0===t?this.path()+this.search()+this.hash():(i=n.parse(t),this.hp.path=i.path,this.hp.vi=i.vi,this.hp.lp=i.lp,this.pp(!e),this)},y.Mu=function(t,e){if(this.hp.urn)return void 0===t?"":this;if(void 0===t){if(!this.hp.hostname||this.is("IP"))return"";var i=this.hp.hostname.length-this.domain().length-1;return this.hp.hostname.substring(0,i)||""}var r=this.hp.hostname.length-this.domain().length,s=this.hp.hostname.substring(0,r),a=new RegExp("^"+o(s));return t&&"."!==t.charAt(t.length-1)&&(t+="."),t&&n.Au(t),this.hp.hostname=this.hp.hostname.replace(a,t),this.pp(!e),this},y.domain=function(t,e){if(this.hp.urn)return void 0===t?"":this;if("boolean"==typeof t&&(e=t,t=void 0),void 0===t){if(!this.hp.hostname||this.is("IP"))return"";var i=this.hp.hostname.match(/\./g);if(i&&i.length<2)return this.hp.hostname;var r=this.hp.hostname.length-this.ju(e).length-1;return r=this.hp.hostname.lastIndexOf(".",r-1)+1,this.hp.hostname.substring(r)||""}if(!t)throw new TypeError("cannot set domain empty");if(n.Au(t),!this.hp.hostname||this.is("IP"))this.hp.hostname=t;else{var s=new RegExp(o(this.domain())+"$");this.hp.hostname=this.hp.hostname.replace(s,t)}return this.pp(!e),this},y.ju=function(t,e){if(this.hp.urn)return void 0===t?"":this;if("boolean"==typeof t&&(e=t,t=void 0),void 0===t){if(!this.hp.hostname||this.is("IP"))return"";var r=this.hp.hostname.lastIndexOf("."),n=this.hp.hostname.substring(r+1);return e!==!0&&i&&i.list[n.toLowerCase()]?i.get(this.hp.hostname)||n:n}var s;if(!t)throw new TypeError("cannot set TLD empty");if(t.match(/[^a-zA-Z0-9-]/)){if(!i||!i.is(t))throw new TypeError('TLD "'+t+'" contains characters other than [A-Z0-9]');s=new RegExp(o(this.ju())+"$"),this.hp.hostname=this.hp.hostname.replace(s,t)}else{if(!this.hp.hostname||this.is("IP"))throw new ReferenceError("cannot set TLD on non-domain host");s=new RegExp(o(this.ju())+"$"),this.hp.hostname=this.hp.hostname.replace(s,t)}return this.pp(!e),this},y.Uu=function(t,e){if(this.hp.urn)return void 0===t?"":this;if(void 0===t||t===!0){if(!this.hp.path&&!this.hp.hostname)return"";if("/"===this.hp.path)return"/";var i=this.hp.path.length-this.filename().length-1,r=this.hp.path.substring(0,i)||(this.hp.hostname?"/":"");return t?n.hu(r):r}var s=this.hp.path.length-this.filename().length,a=this.hp.path.substring(0,s),c=new RegExp("^"+o(a));return this.is("relative")||(t||(t="/"),"/"!==t.charAt(0)&&(t="/"+t)),t&&"/"!==t.charAt(t.length-1)&&(t+="/"),t=n.uu(t),this.hp.path=this.hp.path.replace(c,t),this.pp(!e),this},y.filename=function(t,e){if(this.hp.urn)return void 0===t?"":this;if("string"!=typeof t){if(!this.hp.path||"/"===this.hp.path)return"";var i=this.hp.path.lastIndexOf("/"),r=this.hp.path.substring(i+1);return t?n.decodePathSegment(r):r}var s=!1;"/"===t.charAt(0)&&(t=t.substring(1)),t.match(/\.?\//)&&(s=!0);var a=new RegExp(o(this.filename())+"$");return t=n.uu(t),this.hp.path=this.hp.path.replace(a,t),s?this.Vu(e):this.pp(!e),this},y.suffix=function(t,e){if(this.hp.urn)return void 0===t?"":this;if(void 0===t||t===!0){if(!this.hp.path||"/"===this.hp.path)return"";var i,r,s=this.filename(),a=s.lastIndexOf(".");return a===-1?"":(i=s.substring(a+1),r=/^[a-z0-9%]+$/i.test(i)?i:"",t?n.decodePathSegment(r):r)}"."===t.charAt(0)&&(t=t.substring(1));var c,h=this.suffix();if(h)c=t?new RegExp(o(h)+"$"):new RegExp(o("."+h)+"$");else{if(!t)return this;this.hp.path+="."+n.uu(t)}return c&&(t=n.uu(t),this.hp.path=this.hp.path.replace(c,t)),this.pp(!e),this},y.Cu=function(t,e,i){var r=this.hp.urn?":":"/",n=this.path(),o="/"===n.substring(0,1),s=n.split(r);if(void 0!==t&&"number"!=typeof t&&(i=e,e=t,t=void 0),void 0!==t&&"number"!=typeof t)throw new Error('Bad segment "'+t+'", must be 0-based integer');if(o&&s.shift(),t<0&&(t=Math.max(s.length+t,0)),void 0===e)return void 0===t?s:s[t];if(null===t||void 0===s[t])if(a(e)){s=[];for(var c=0,h=e.length;c<h;c++)(e[c].length||s.length&&s[s.length-1].length)&&(s.length&&!s[s.length-1].length&&s.pop(),s.push(u(e[c])))}else(e||"string"==typeof e)&&(e=u(e),""===s[s.length-1]?s[s.length-1]=e:s.push(e));else e?s[t]=u(e):s.splice(t,1);return o&&s.unshift(""),this.path(s.join(r),i)},y.Qu=function(t,e,i){var r,o,s;if("number"!=typeof t&&(i=e,e=t,t=void 0),void 0===e){if(r=this.Cu(t,e,i),a(r))for(o=0,s=r.length;o<s;o++)r[o]=n.decode(r[o]);else r=void 0!==r?n.decode(r):void 0;return r}if(a(e))for(o=0,s=e.length;o<s;o++)e[o]=n.encode(e[o]);else e="string"==typeof e||e instanceof String?n.encode(e):e;return this.Cu(t,e,i)};var k=y.vi;return y.vi=function(t,e){if(t===!0)return n.yu(this.hp.vi,this.hp.fp);if("function"==typeof t){var i=n.yu(this.hp.vi,this.hp.fp),r=t.call(this,i);return this.hp.vi=n.Su(r||i,this.hp.dp,this.hp.fp),this.pp(!e),this}return void 0!==t&&"string"!=typeof t?(this.hp.vi=n.Su(t,this.hp.dp,this.hp.fp),this.pp(!e),this):k.call(this,t,e)},y.qu=function(t,e,i){var r=n.yu(this.hp.vi,this.hp.fp);if("string"==typeof t||t instanceof String)r[t]=void 0!==e?e:null;else{if("object"!=typeof t)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");for(var o in t)m.call(t,o)&&(r[o]=t[o])}return this.hp.vi=n.Su(r,this.hp.dp,this.hp.fp),"string"!=typeof t&&(i=e),this.pp(!i),this},y.Eu=function(t,e,i){var r=n.yu(this.hp.vi,this.hp.fp);return n.Eu(r,t,void 0===e?null:e),this.hp.vi=n.Su(r,this.hp.dp,this.hp.fp),"string"!=typeof t&&(i=e),this.pp(!i),this},y.Iu=function(t,e,i){var r=n.yu(this.hp.vi,this.hp.fp);return n.Iu(r,t,e),this.hp.vi=n.Su(r,this.hp.dp,this.hp.fp),"string"!=typeof t&&(i=e),this.pp(!i),this},y.Ru=function(t,e,i){var r=n.yu(this.hp.vi,this.hp.fp);return n.Ru(r,t,e,i)},y.Ju=y.qu,y.Ku=y.Eu,y.Gu=y.Iu,y.zu=y.Ru,y.normalize=function(){return this.hp.urn?this.Yu(!1).Vu(!1).$u(!1).Wu(!1).pp():this.Yu(!1).Zu(!1).Xu(!1).Vu(!1).$u(!1).Wu(!1).pp()},y.Yu=function(t){return"string"==typeof this.hp.protocol&&(this.hp.protocol=this.hp.protocol.toLowerCase(),this.pp(!t)),this},y.Zu=function(i){return this.hp.hostname&&(this.is("IDN")&&t?this.hp.hostname=t.toASCII(this.hp.hostname):this.is("IPv6")&&e&&(this.hp.hostname=e.best(this.hp.hostname)),this.hp.hostname=this.hp.hostname.toLowerCase(),this.pp(!i)),this},y.Xu=function(t){return"string"==typeof this.hp.protocol&&this.hp.port===n.Ep[this.hp.protocol]&&(this.hp.port=null,this.pp(!t)),this},y.Vu=function(t){var e=this.hp.path;if(!e)return this;if(this.hp.urn)return this.hp.path=n.lu(this.hp.path),this.pp(!t),this;if("/"===this.hp.path)return this;e=n.uu(e);var i,r,o,s="";for("/"!==e.charAt(0)&&(i=!0,e="/"+e),"/.."!==e.slice(-3)&&"/."!==e.slice(-2)||(e+="/"),e=e.replace(/(\/(\.\/)+)|(\/\.$)/g,"/").replace(/\/{2,}/g,"/"),i&&(s=e.substring(1).match(/^(\.\.\/)+/)||"",s&&(s=s[0]));;){if(r=e.search(/\/\.\.(\/|$)/),r===-1)break;0!==r?(o=e.substring(0,r).lastIndexOf("/"),o===-1&&(o=r),e=e.substring(0,o)+e.substring(r+3)):e=e.substring(3)}return i&&this.is("relative")&&(e=s+e.substring(1)),this.hp.path=e,this.pp(!t),this},y.tl=y.Vu,y.$u=function(t){return"string"==typeof this.hp.vi&&(this.hp.vi.length?this.vi(n.yu(this.hp.vi,this.hp.fp)):this.hp.vi=null,this.pp(!t)),this},y.Wu=function(t){return this.hp.lp||(this.hp.lp=null,this.pp(!t)),this},y.el=y.$u,y.il=y.Wu,y.Up=function(){var t=n.encode,e=n.decode;n.encode=escape,n.decode=decodeURIComponent;try{this.normalize()}finally{n.encode=t,n.decode=e}return this},y.Vp=function(){var t=n.encode,e=n.decode;n.encode=d,n.decode=unescape;try{this.normalize()}finally{n.encode=t,n.decode=e}return this},y.rl=function(){var e=this.clone();e.username("").password("").normalize();var i="";if(e.hp.protocol&&(i+=e.hp.protocol+"://"),e.hp.hostname&&(e.is("punycode")&&t?(i+=t.toUnicode(e.hp.hostname),e.hp.port&&(i+=":"+e.hp.port)):i+=e.host()),e.hp.hostname&&e.hp.path&&"/"!==e.hp.path.charAt(0)&&(i+="/"),i+=e.path(!0),e.hp.vi){for(var r="",o=0,s=e.hp.vi.split("&"),a=s.length;o<a;o++){var c=(s[o]||"").split("=");r+="&"+n.cu(c[0],this.hp.fp).replace(/&/g,"%26"),void 0!==c[1]&&(r+="="+n.cu(c[1],this.hp.fp).replace(/&/g,"%26"))}i+="?"+r.substring(1)}return i+=n.cu(e.hash(),!0)},y.cp=function(t){var e,i,r,o=this.clone(),s=["protocol","username","password","hostname","port"];if(this.hp.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(t instanceof n||(t=new n(t)),o.hp.protocol)return o;if(o.hp.protocol=t.hp.protocol,this.hp.hostname)return o;for(i=0;r=s[i];i++)o.hp[r]=t.hp[r];return o.hp.path?(".."===o.hp.path.substring(-2)&&(o.hp.path+="/"),"/"!==o.path().charAt(0)&&(e=t.Uu(),e=e?e:0===t.path().indexOf("/")?"/":"",o.hp.path=(e?e+"/":"")+o.hp.path,o.Vu())):(o.hp.path=t.hp.path,o.hp.vi||(o.hp.vi=t.hp.vi)),o.pp(),o},y.nl=function(t){var e,i,r,o,s,a=this.clone().normalize();if(a.hp.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(t=new n(t).normalize(),e=a.hp,i=t.hp,o=a.path(),s=t.path(),"/"!==o.charAt(0))throw new Error("URI is already relative");if("/"!==s.charAt(0))throw new Error("Cannot calculate a URI relative to another relative URI");if(e.protocol===i.protocol&&(e.protocol=null),e.username!==i.username||e.password!==i.password)return a.pp();if(null!==e.protocol||null!==e.username||null!==e.password)return a.pp();if(e.hostname!==i.hostname||e.port!==i.port)return a.pp();if(e.hostname=null,e.port=null,o===s)return e.path="",a.pp();if(r=n.Ou(o,s),!r)return a.pp();var c=i.path.substring(r.length).replace(/[^\/]*$/,"").replace(/.*?\//g,"../");return e.path=c+e.path.substring(r.length)||"./",a.pp()},y.ol=function(t){var e,i,r,o=this.clone(),s=new n(t),c={},h={},u={};if(o.normalize(),s.normalize(),o.toString()===s.toString())return!0;if(e=o.vi(),i=s.vi(),o.vi(""),s.vi(""),o.toString()!==s.toString())return!1;if(e.length!==i.length)return!1;c=n.yu(e,this.hp.fp),h=n.yu(i,this.hp.fp);for(r in c)if(m.call(c,r)){if(a(c[r])){if(!p(c[r],h[r]))return!1}else if(c[r]!==h[r])return!1;u[r]=!0}for(r in h)if(m.call(h,r)&&!u[r])return!1;return!0},y.dp=function(t){return this.hp.dp=!!t,this},y.fp=function(t){return this.hp.fp=!!t,this},n})},function(t,e,i){/*! uuid.js
 * Copyright (c) 2010-2012 Robert Kieffer
 * MIT License - http://opensource.org/licenses/mit-license.php
 */
  !function(e){"use strict";function r(){var t=e.crypto||e.msCrypto;if(!h&&t&&t.getRandomValues)try{var i=new Uint8Array(16);l=h=function(){return t.getRandomValues(i),i},h()}catch(r){}if(!h){var n=new Array(16);p=h=function(){for(var t,e=0;e<16;e++)0===(3&e)&&(t=4294967296*Math.random()),n[e]=t>>>((3&e)<<3)&255;return n},"undefined"!=typeof console&&console.warn&&console.warn("[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()")}}function n(){try{var t=i(33).randomBytes;u=h=t&&function(){return t(16)},h()}catch(e){}}function o(t,e,i){var r=e&&i||0,n=0;for(e=e||[],t.toLowerCase().replace(/[0-9a-f]{2}/g,function(t){n<16&&(e[r+n++]=v[t])});n<16;)e[r+n++]=0;return e}function s(t,e){var i=e||0,r=g;return r[t[i++]]+r[t[i++]]+r[t[i++]]+r[t[i++]]+"-"+r[t[i++]]+r[t[i++]]+"-"+r[t[i++]]+r[t[i++]]+"-"+r[t[i++]]+r[t[i++]]+"-"+r[t[i++]]+r[t[i++]]+r[t[i++]]+r[t[i++]]+r[t[i++]]+r[t[i++]]}function a(t,e,i){var r=e&&i||0,n=e||[];t=t||{};var o=null!=t.clockseq?t.clockseq:T,a=null!=t.msecs?t.msecs:(new Date).getTime(),c=null!=t.nsecs?t.nsecs:b+1,h=a-S+(c-b)/1e4;if(h<0&&null==t.clockseq&&(o=o+1&16383),(h<0||a>S)&&null==t.nsecs&&(c=0),c>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");S=a,b=c,T=o,a+=122192928e5;var p=(1e4*(268435455&a)+c)%4294967296;n[r++]=p>>>24&255,n[r++]=p>>>16&255,n[r++]=p>>>8&255,n[r++]=255&p;var u=a/4294967296*1e4&268435455;n[r++]=u>>>8&255,n[r++]=255&u,n[r++]=u>>>24&15|16,n[r++]=u>>>16&255,n[r++]=o>>>8|128,n[r++]=255&o;for(var l=t.node||w,d=0;d<6;d++)n[r+d]=l[d];return e?e:s(n)}function c(t,e,i){var r=e&&i||0;"string"==typeof t&&(e="binary"===t?new f(16):null,t=null),t=t||{};var n=t.random||(t.rng||h)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,e)for(var o=0;o<16;o++)e[r+o]=n[o];return e||s(n)}var h,p,u,l,d;e?r():n();for(var f="function"==typeof Buffer?Buffer:Array,g=[],v={},y=0;y<256;y++)g[y]=(y+256).toString(16).substr(1),v[g[y]]=y;var m=h(),w=[1|m[0],m[1],m[2],m[3],m[4],m[5]],T=16383&(m[6]<<8|m[7]),S=0,b=0,E=c;E.sl=a,E.Zh=c,E.parse=o,E.al=s,E.cl=f,E.hl=h,E.pl=p,E.ul=u,E.ll=l,"undefined"!=typeof t&&t.t?t.t=E:(d=e.dl,E.ge=function(){return e.dl=d,E},e.dl=E)}("undefined"!=typeof window?window:null)},function(t,e,i){"use strict";var r,n=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},o=i(11);!function(t){var e=function(){function t(){}return t}();e.DashFilterBitrates=null,e.DashRemoveBitrateSize=!1,t.Dash=e;var i=function(){function t(){}return t}();i.fl=!0,t.Stats=i;var r=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return n(e,t),e}(o.HiveConfig.DebugLogs);r.gl=0,t.DebugLogs=r;var s=function(){function t(){}return t}();s.usiz=null,t.UDPBroadcast=s}(r=e.HiveConfig||(e.HiveConfig={})),"undefined"!=typeof window&&("undefined"==typeof window.HiveConfig&&(window.HiveConfig={}),window.HiveConfig.Dash=r.Dash,window.HiveConfig.Stats=r.Stats,window.HiveConfig.UDPBroadcast=r.UDPBroadcast,window.HiveConfig.DebugLogs=r.DebugLogs)},function(t,e,i){"use strict";var r,n=i(11),o=i(4),s=o.ve;!function(t){var e;!function(t){t[t.off=0]="off",t[t.error=1]="error",t[t.warn=2]="warn",t[t.notice=3]="notice",t[t.info=4]="info",t[t.debug=5]="debug",t[t.trace=6]="trace"}(e=t.vl||(t.vl={}));var i=function(){function t(){this.timestamp=function(){},this.yl=new s,this.level=e.debug,this.timestamp.toString=function(){var t=new Date,e=("0"+t.getUTCHours()).slice(-2)+":"+("0"+t.getUTCMinutes()).slice(-2)+":"+("0"+t.getUTCSeconds()).slice(-2)+":"+t.getUTCMilliseconds();return"["+e+"]"},this.m="undefined"==typeof console?{log:function(){}}:console,this.m.trace||(this.m.trace=this.m.log),this.m.debug||(this.m.debug=this.m.log),this.m.info||(this.m.info=this.m.log),this.m.warn||(this.m.warn=this.m.log),this.m.error||(this.m.error=this.m.log),this.ml(e[this.level])}return t.prototype.ml=function(t,i){n.HiveConfig.Framework.HiveDebugLevel&&void 0!=e[n.HiveConfig.Framework.HiveDebugLevel]?this.level=e[n.HiveConfig.Framework.HiveDebugLevel]:void 0!=e[t]?this.level=e[t]:console.log("Wrong logging level: "+t,e),this.wl(i)},t.prototype.wl=function(t){var i={log:this.Tl(this.m.log,e.error,t),error:this.Tl(this.m.error,e.error,t),warn:this.Tl(this.m.warn,e.warn,t),notice:this.Tl(this.m.info,e.notice,t),info:this.Tl(this.m.info,e.info,t),debug:this.Tl(this.m.debug,e.debug,t),trace:this.Tl(this.m.trace,e.trace,t)};t?this.yl.set(t,i):this.Sl=i},t.prototype.Tl=function(t,e,i){if(!(this.level>=e))return function(){};try{return n.HiveConfig.Framework.LoggerTimestamp?i?Function.prototype.bind.call(t,console,"%s %s",this.timestamp,i):Function.prototype.bind.call(t,console,"%s",this.timestamp):Function.prototype.bind.call(t,console)}catch(r){}},t.prototype.log=function(t){return t?(this.yl.has(t)||this.ml(e[this.level],t),this.yl.get(t)):this.Sl},t}();t.bl=i}(r=e.El||(e.El={}))},function(t,e,i){"use strict";var r=i(4),n=r.ve,o=i(1),s=i(2),a=i(40),c=i(49),h=i(17),p=i(11),u=i(7),l=i(42),d=i(9),f=i(37),g=i(5),v=i(50),y=i(48),m=i(27),w=i(19),T=i(20),S=i(18),b=a.pt.Ir,E=c.pt.Il,I=h.pt.uh,R=h.pt.Ch,k=h.pt.HiveTechError,C=h.pt.bh,O=h.pt.Ah;e.version="3.2.0";var P;!function(t){var r=function(){function t(t){this.Rl=[E[E.HiveJava],E[E.HiveJsProxy],E[E.HiveJS],E[E.StatsJS]],this.kl=new n,this.Cl=new Array,this.Ol=new Array,this.Pl=null,this.Al=0,this.Nl=0,this.u="[HiveComm] ",this.xl=0,this.Bl=u.ar.getItem("hivePluginId"),this.Bl||(this.Bl=Math.abs(Math.floor(68719476736*Math.random())).toString(16),u.ar.setItem("hivePluginId",this.Bl)),w.ErrorMonitor.Wi(),this.options_=new b.Fl,this._l(t),u.nr(t,this.options_),u.or(window.location.href,new b.Dl,this.options_),a.Ll.Hl(this.options_),this.fo=s.Framework.resolve(s.Framework.Fe.we),p.HiveConfig.Framework.LoggerTimestamp=this.options().loggerTimestamp,this.fo.ml(this.options().debugLevel),w.ErrorMonitor.Wi().Lh(this.fo.log());var e=s.Framework.resolve(g.gi.Ce),i=s.Framework.resolve(g.gi.ci);e.Ko().then(function(t){w.ErrorMonitor.Wi().setUser(t.Wo())});var r={};i.Pn().then(function(t){r={pIPAddr:t.Nn().Bn()},w.ErrorMonitor.Wi().setCustomData(r)}),window.vo=this.fo.log(),this.Ml(),this.jl=new O(this),new l.Ul(this);var o=this.options().idleTimePeriod>this.options().feedbackPeriod?this.options().idleTimePeriod:S.ke.xh;this.Vl=new u.vr(o)}return t.prototype.options=function(){return this.options_},t.prototype.m=function(){return this.fo.log()},t.prototype.S=function(){return this.Bl},t.prototype.ct=function(){return e.version},t.prototype.Ql=function(){for(var t=0,e=this.Ol;t<e.length;t++){var i=e[t];i.tech.ql(this)}},t.prototype._l=function(t){var e=new y.StatsJS(this,t);this.kl.set(y.StatsJS.Jl,e);var r=i(43).HiveJava;this.kl.set(r.Jl,new r(this,t));var n=t.hiveTechOrder;if(!n||n instanceof Array)if(n&&n.length>0)for(var o=n.length;o--;){var s=n[o];"string"!=typeof s||this.Rl.indexOf(s)==-1?(console.warn(this.u+'The "'+s+'" Hive tech is undefined'),n.splice(o,1)):"string"==typeof s&&this.kl.has(s)||console.warn(this.u+'The "'+s+'" Hive tech is not enabled on this plugin')}else n=this.Rl;else console.warn(this.u+"hiveTechOrder value not accepted. It must be an array of strings"),n=this.Rl;t.hiveTechOrder=n},t.prototype.p=function(t){var e=this;this.m().notice(this.u+"resolving "+t),this.Kl(t);var i=o.defer(),r=this.Gl().values();0==r.length&&i.reject(u.sr(t,I.sh));var n,s,a=!1,c=!1,h=0,p=null;return u.Xi(function(){return!a&&!c&&h<r.length&&!n},function(){var i=r[h++];i.zl();var u;return u=i.Wl()&&!s?e.$l(t):o.resolve(null),u.then(function(r){null!=r&&(s=r);var n=i.Yl();return i.initSession(t,s).timeout(n,"["+i.Ai()+"] Error: initialization timed out after "+n+"ms").then(function(t){p=t,e.Xl(p,i),a=!0,!i.Wl()&&s&&s.Qn.reset(),e.m().notice(e.u+"initializing Session:["+p.id+"] Ticket:"+p.ticket.toString()+" HiveTech:["+p.tech.Ai()+"]"),o.resolve(!0)},function(r){r instanceof Error&&(r=new k(C.Sh,r.message),i.Zl(r)),r.ticketUrl=t,c=!i.onError(r),e.m().debug(e.u+"tech "+i.Ai()+": "+r.message),o.resolve(!0)})},function(t){n=t,o.resolve(!0)})}).then(function(){n?i.reject(u.sr(t,I.ph,n)):c?i.reject(u.sr(t,I.hh)):a?i.resolve(p):i.reject(u.sr(t,I.sh))})["catch"](function(e){w.ErrorMonitor.Wi()._h(e),i.reject(u.sr(t,I.oh,e.toString()))}).done(),i.vt},t.prototype.$l=function(t){var e=this;return m.Hive.Reporting().initSession(t,!1).then(function(i){return e.m().debug(e.u+"verified ticket "+t),e.hn(i),i})["catch"](function(t){return o.reject("Ticket not verified, error: "+t.message)})},t.prototype.Gl=function(){var t=JSON.parse(JSON.stringify(this.options().hiveTechOrder)),e=new n;for(var i in t)this.kl.has(t[i])&&e.set(t[i],this.kl.get(t[i]));return e},t.prototype.Kl=function(t){var e=w.ErrorMonitor.Wi();try{var i=new T.ap;i.Kh(t),i.bn()&&i.En()&&i.es()?e.setTags([i.bn(),i.En(),i.es()]):e._h(this.u+" Ticket not valid, we could not resolve the triple partnerId/CustomerId/ContentId: "+i.bn()+"/"+i.En()+"/"+i.es())}catch(r){this.m().warn(this.u+" "+r.message,r),e.notify(r)}},t.prototype.hn=function(t){var i={commVersion:e.version,pluginName:this.T(),pluginVersion:this.I(),playerTech:this.ht(),playerVersion:this.q(),telemetryId:this.td()};t.Qn.hn(i)},t.prototype.v=function(){window.HiveRequest=XMLHttpRequest,u.HiveRequestFactory.clear(),m.Hive.Reporting().close()},t.prototype.ed=function(t){this.Pl&&this.Pl.tech?(t.sessionId=this.Pl.id,this.Pl.tech.wn(this.Pl,t)):this.Cl.push(t)},t.prototype.rd=function(){var t=this.Cl;return this.Cl=new Array,t},t.prototype.Ml=function(){var t=this,e=window;e.addEventListener?e.addEventListener("beforeunload",function(){t.nd(!0)},!1):e.attachEvent("onbeforeunload",function(){t.nd(!0)})},t.prototype.h=function(t){this.nd(t),this.Pl=null,this.Ol=new Array,this.Al=0,this.Nl=0,this.od()},t.prototype.Xl=function(t,e){t.tech=e,this.Ol.push(t)},t.prototype.R=function(t){if(null==this.Pl){for(var e=t?t:this.it(),i=0;i<this.Ol.length;i++){var r=this.Ol[i];if(r.st(e))return this.Pl=r,this.Pl.Ri?this.Pl.Ri._o.sd(this.Pl.ticket):this.ad(),this.Ol=new Array,this.Pl.tech.onActiveSession(this.Pl),this.m().notice(this.u+"activating Session:["+this.Pl.id+"] Ticket:"+this.Pl.ticket.toString()+" HiveTech:["+this.Pl.tech.Ai()+"]"),this.hd(),!0}this.m().warn(this.u+"Closing sessions - the active stream doesn't match any initialized sessions"),this.m().warn(this.u+"Active:"+e+" - initialized: "+this.Ol.length),this.h()}return!1},t.prototype.C=function(){if(this.Pl)return this.Pl.g()},t.prototype.ad=function(){var t=!1;this.Ol.forEach(function(e){e.Ri&&(t=!0)}),t&&m.Hive.Reporting().close()},t.prototype.pd=function(){if(null!=this.Pl){if(this.Pl.st(this.it()))return!0;this.m().warn(this.u+"Session src mismatch: "+this.it()+" != "+this.Pl.manifest),this.h()}return!1},t.prototype.nd=function(t){if(null!=this.Pl)this.m().notice(this.u+"Stopping session ["+this.Pl.id+"]"),this.Pl.close(t);else if(this.Ol.length>0){var e=this.Ol[0];this.m().notice(this.u+"Attempt to stopping session ["+e.id+"]"),e.close(t)}},t.prototype.hd=function(){var t=this;null==this.ud&&(this.ud=setInterval(function(){t.ld()},this.options().feedbackPeriod),this.ld())},t.prototype.od=function(){clearInterval(this.ud),this.ud=null},t.prototype.ld=function(){var t=this;if(this.pd()){if(!this.st())return void this.h();var e=new u.Fi;e.lr=this.getCurrentTime(),e.dr=this.nt(),e.gr=this.Al,e.width=this.ot().width,e.height=this.ot().height,e.dd=this.isFullscreen(),this.Pl.ki(this.Vl.hr(e)),this.Pl.tech.fd(this.Pl,e).fail(function(e){t.m().warn(t.u+"stats handling failed",e),t.od()})}},t.prototype.gd=function(){var t=this;try{u.Yi.Wi(this.m()).$i(function(e){var i=t.vd();i&&!i.Oi()&&(t._(e?d.F.B.jr:d.F.B.HIDDEN),t.m().debug(e?"visible":"hidden"))})}catch(e){w.ErrorMonitor.Wi()._h("error setting up the visibilityChange listener",{error:e})}},t.prototype.k=function(t){this.pd()&&this.Nl<=0&&(this.Nl=Date.now(),(void 0==t||t)&&this._(d.F.B.Lr))},t.prototype.G=function(){var t=0==this.Al;if(this.Nl>0){var e=Date.now()-this.Nl;return this.Al+=e,this.m().debug(this.u+"reporting new buffering event of "+e),this.Nl=0,t&&this.ld(),!0}return!1},t.prototype.onError=function(t,e,i){void 0===i&&(i=!0),this._(d.F.B.ERROR,{code:-1,"player-code":t}),i&&this.h()},t.prototype._=function(t,e){var i=this,r=this.vd();null==r||r!=this.Pl&&r.tech.Ai()===E[E.HiveJava]||r.tech.yd(r,t,e).fail(function(t){i.m().warn(i.u+"error in forwarding player event to tech",t)})},t.prototype.vd=function(){return this.Pl?this.Pl:this.Ol&&this.Ol.length>0?this.Ol[0]:void 0},t.prototype.md=function(){this.xl=0},t.prototype.wd=function(t,e){this.md();var i=7,r=6;this.xl+=t<<4*i,e&&0===t&&(this.xl+=1<<4*(r-E[e.Ai()])),t>0&&w.ErrorMonitor.Wi()._h(this.u+"Status Code Error: "+R[t])},t.prototype.Ph=function(){return this.xl},t.prototype.td=function(){return this.options().telemetryId},t}();t.Plugin=r}(P=e.pt||(e.pt={})),s.Framework.Qe(new f.Td),s.Framework.Ge("peer0",new v.Sd),s.Framework.ze("peer0"),window.HiveRequestFactory=u.HiveRequestFactory},function(t,e,i){"use strict";var r=i(45),n=i(7),o=function(){function t(t){this.readyState=3,this.status=0,t&&(this.sessionId=t)}return t.Lh=function(e){t.m=e},t.register=function(e,i){t.bd[e]=i},t.prototype.Ed=function(e){this.sessionId||(this.sessionId=t.bd[e])},t.prototype.open=function(t,e,i){void 0===i&&(i=!1),this.method=t,this.url=e,this.Id=i},t.prototype.getAllResponseHeaders=function(){return this.Rd},t.prototype.getResponseHeader=function(t){var e=this.getAllResponseHeaders();if(e){var i=[],r=e.split("\n");return r.forEach(function(t){var e=t.split(":");i[e[0]]=e[1]}),i[t]}},t.prototype.send=function(){if(t.m&&t.m.debug(this.method+" "+this.url),!this.sessionId){var e=Object.keys(t.bd);e.length>0&&(this.sessionId=t.bd[e[0]])}var i=this,o=new XMLHttpRequest;0===this.url.indexOf("//")&&(this.url=location.protocol+this.url);var s=n.rr(r.Cd.kd,r.Cd.To,r.Cd.Od,this.sessionId,encodeURIComponent(this.url));o.open("GET",s),this.responseType&&(o.responseType=this.responseType),o.onreadystatechange=function(){},o.onload=function(){if(4===o.readyState)try{i.Rd=o.getAllResponseHeaders(),i.response=o.response;var e=o.response.byteLength;"arraybuffer"!==o.responseType&&(i.responseText=o.response),i.readyState=4,i.status=o.status,i.onprogress({lengthComputable:!0,loaded:e,total:e}),i.onreadystatechange({type:"loadend",target:i,currentTarget:i,bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:e,total:e}),i.onload(),i.onloadend({type:"loadend",target:i,currentTarget:i,bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:e,total:0})}catch(r){t.m&&t.m.warn(r)}},o.onerror=function(e){t.m&&t.m.warn("onError: "+JSON.stringify(e)),i.onerror(e)},o.onabort=function(e){t.m&&t.m.warn("onAbort: "+JSON.stringify(e))},o.send()},t.prototype.abort=function(){},t.prototype.onload=function(){},t.prototype.onloadend=function(t){},t.prototype.onerror=function(t){},t.prototype.onprogress=function(t){},t.prototype.onreadystatechange=function(t){},t}();o.bd={},e.Ti=o},function(t,e,i){"use strict";var r=i(2),n=i(5),o=function(){function t(){}return t.Reporting=function(){return t.app="STATS",r.Framework.resolve(n.gi.ui)},t.Xo=function(){return this.app},t.getVersion=function(){return this.version},t}();o.version="3.2.0",e.Hive=o},function(t,e,i){var r;!function(n,o){"use strict";var s="0.7.12",a="",c="?",h="function",p="undefined",u="object",l="string",d="major",f="model",g="name",v="type",y="vendor",m="version",w="architecture",T="console",S="mobile",b="tablet",E="smarttv",I="wearable",R="embedded",k={extend:function(t,e){var i={};for(var r in t)e[r]&&e[r].length%2===0?i[r]=e[r].concat(t[r]):i[r]=t[r];return i},has:function(t,e){return"string"==typeof t&&e.toLowerCase().indexOf(t.toLowerCase())!==-1},Pd:function(t){return t.toLowerCase()},Ad:function(t){return typeof t===l?t.replace(/[^\d\.]/g,"").split(".")[0]:o},trim:function(t){return t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}},C={Nd:function(){for(var t,e,i,r,n,s,a,c=0,l=arguments;c<l.length&&!s;){var d=l[c],f=l[c+1];if(typeof t===p){t={};for(r in f)f.hasOwnProperty(r)&&(n=f[r],typeof n===u?t[n[0]]=o:t[n]=o)}for(e=i=0;e<d.length&&!s;)if(s=d[e++].exec(this.xd()))for(r=0;r<f.length;r++)a=s[++i],n=f[r],typeof n===u&&n.length>0?2==n.length?typeof n[1]==h?t[n[0]]=n[1].call(this,a):t[n[0]]=n[1]:3==n.length?typeof n[1]!==h||n[1].exec&&n[1].test?t[n[0]]=a?a.replace(n[1],n[2]):o:t[n[0]]=a?n[1].call(this,a,n[2]):o:4==n.length&&(t[n[0]]=a?n[3].call(this,a.replace(n[1],n[2])):o):t[n]=a?a:o;c+=2}return t},ac:function(t,e){for(var i in e)if(typeof e[i]===u&&e[i].length>0){for(var r=0;r<e[i].length;r++)if(k.has(e[i][r],t))return i===c?o:i}else if(k.has(e[i],t))return i===c?o:i;return t}},O={ti:{Bd:{version:{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419",Kp:"/"}}},Fd:{_d:{Dd:{Hd:["SD","KF"]}},Ld:{Dd:{Md:"7373KT"},vendor:{jd:"APA",Ud:"Sprint"}}},os:{Vd:{version:{Qd:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2000:"NT 5.0",qd:["NT 5.1","NT 5.2"],Jd:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],Kd:"ARM"}}}},P={ti:[[/(opera\smini)\/([\w\.-]+)/i,/(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,/(opera).+version\/([\w\.]+)/i,/(opera)[\/\s]+([\w\.]+)/i],[g,m],[/(opios)[\/\s]+([\w\.]+)/i],[[g,"Opera Mini"],m],[/\s(opr)\/([\w\.]+)/i],[[g,"Opera"],m],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i,/(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,/(?:ms|\()(ie)\s([\w\.]+)/i,/(rekonq)\/([\w\.]+)*/i,/(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs)\/([\w\.-]+)/i],[g,m],[/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i],[[g,"IE"],m],[/(edge)\/((\d+)?[\w\.]+)/i],[g,m],[/(yabrowser)\/([\w\.]+)/i],[[g,"Yandex"],m],[/(comodo_dragon)\/([\w\.]+)/i],[[g,/_/g," "],m],[/(micromessenger)\/([\w\.]+)/i],[[g,"WeChat"],m],[/xiaomi\/miuibrowser\/([\w\.]+)/i],[m,[g,"MIUI Browser"]],[/\swv\).+(chrome)\/([\w\.]+)/i],[[g,/(.+)/,"$1 WebView"],m],[/android.+samsungbrowser\/([\w\.]+)/i,/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i],[m,[g,"Android Browser"]],[/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i,/(qqbrowser)[\/\s]?([\w\.]+)/i],[g,m],[/(uc\s?browser)[\/\s]?([\w\.]+)/i,/ucweb.+(ucbrowser)[\/\s]?([\w\.]+)/i,/juc.+(ucweb)[\/\s]?([\w\.]+)/i],[[g,"UCBrowser"],m],[/(dolfin)\/([\w\.]+)/i],[[g,"Dolphin"],m],[/((?:android.+)crmo|crios)\/([\w\.]+)/i],[[g,"Chrome"],m],[/;fbav\/([\w\.]+);/i],[m,[g,"Facebook"]],[/fxios\/([\w\.-]+)/i],[m,[g,"Firefox"]],[/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i],[m,[g,"Mobile Safari"]],[/version\/([\w\.]+).+?(mobile\s?safari|safari)/i],[m,g],[/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[g,[m,C.ac,O.ti.Bd.version]],[/(konqueror)\/([\w\.]+)/i,/(webkit|khtml)\/([\w\.]+)/i],[g,m],[/(navigator|netscape)\/([\w\.-]+)/i],[[g,"Netscape"],m],[/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i,/(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,/(links)\s\(([\w\.]+)/i,/(gobrowser)\/?([\w\.]+)*/i,/(ice\s?browser)\/v?([\w\._]+)/i,/(mosaic)[\/\s]([\w\.]+)/i],[g,m]],Gd:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],[[w,"amd64"]],[/(ia32(?=;))/i],[[w,k.Pd]],[/((?:i[346]|x)86)[;\)]/i],[[w,"ia32"]],[/windows\s(ce|mobile);\sppc;/i],[[w,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],[[w,/ower/,"",k.Pd]],[/(sun4\w)[;\)]/i],[[w,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i],[[w,k.Pd]]],Fd:[[/\((ipad|playbook);[\w\s\);-]+(rim|apple)/i],[f,y,[v,b]],[/applecoremedia\/[\w\.]+ \((ipad)/],[f,[y,"Apple"],[v,b]],[/(apple\s{0,1}tv)/i],[[f,"Apple TV"],[y,"Apple"]],[/(archos)\s(gamepad2?)/i,/(hp).+(touchpad)/i,/(hp).+(tablet)/i,/(kindle)\/([\w\.]+)/i,/\s(nook)[\w\s]+build\/(\w+)/i,/(dell)\s(strea[kpr\s\d]*[\dko])/i],[y,f,[v,b]],[/(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i],[f,[y,"Amazon"],[v,b]],[/(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i],[[f,C.ac,O.Fd._d.Dd],[y,"Amazon"],[v,S]],[/\((ip[honed|\s\w*]+);.+(apple)/i],[f,y,[v,S]],[/\((ip[honed|\s\w*]+);/i],[f,[y,"Apple"],[v,S]],[/(blackberry)[\s-]?(\w+)/i,/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|huawei|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i,/(hp)\s([\w\s]+\w)/i,/(asus)-?(\w+)/i],[y,f,[v,S]],[/\(bb10;\s(\w+)/i],[f,[y,"BlackBerry"],[v,S]],[/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)/i],[f,[y,"Asus"],[v,b]],[/(sony)\s(tablet\s[ps])\sbuild\//i,/(sony)?(?:sgp.+)\sbuild\//i],[[y,"Sony"],[f,"Xperia Tablet"],[v,b]],[/(?:sony)?(?:(?:(?:c|d)\d{4})|(?:so[-l].+))\sbuild\//i],[[y,"Sony"],[f,"Xperia Phone"],[v,S]],[/\s(ouya)\s/i,/(nintendo)\s([wids3u]+)/i],[y,f,[v,T]],[/android.+;\s(shield)\sbuild/i],[f,[y,"Nvidia"],[v,T]],[/(playstation\s[34portablevi]+)/i],[f,[y,"Sony"],[v,T]],[/(sprint\s(\w+))/i],[[y,C.ac,O.Fd.Ld.vendor],[f,C.ac,O.Fd.Ld.Dd],[v,S]],[/(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i],[y,f,[v,b]],[/(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i,/(zte)-(\w+)*/i,/(alcatel|geeksphone|huawei|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i],[y,[f,/_/g," "],[v,S]],[/(nexus\s9)/i],[f,[y,"HTC"],[v,b]],[/(nexus\s6p)/i],[f,[y,"Huawei"],[v,S]],[/(microsoft);\s(lumia[\s\w]+)/i],[y,f,[v,S]],[/[\s\(;](xbox(?:\sone)?)[\s\);]/i],[f,[y,"Microsoft"],[v,T]],[/(kin\.[onetw]{3})/i],[[f,/\./g," "],[y,"Microsoft"],[v,S]],[/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i,/mot[\s-]?(\w+)*/i,/(XT\d{3,4}) build\//i,/(nexus\s6)/i],[f,[y,"Motorola"],[v,S]],[/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],[f,[y,"Motorola"],[v,b]],[/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],[[y,k.trim],[f,k.trim],[v,E]],[/hbbtv.+maple;(\d+)/i],[[f,/^/,"SmartTV"],[y,"Samsung"],[v,E]],[/\(dtv[\);].+(aquos)/i],[f,[y,"Sharp"],[v,E]],[/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i,/((SM-T\w+))/i],[[y,"Samsung"],f,[v,b]],[/smart-tv.+(samsung)/i],[y,[v,E],f],[/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i,/(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i,/sec-((sgh\w+))/i],[[y,"Samsung"],f,[v,S]],[/sie-(\w+)*/i],[f,[y,"Siemens"],[v,S]],[/(maemo|nokia).*(n900|lumia\s\d+)/i,/(nokia)[\s_-]?([\w-]+)*/i],[[y,"Nokia"],f,[v,S]],[/android\s3\.[\s\w;-]{10}(a\d{3})/i],[f,[y,"Acer"],[v,b]],[/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i],[[y,"LG"],f,[v,b]],[/(lg) netcast\.tv/i],[y,f,[v,E]],[/(nexus\s[45])/i,/lg[e;\s\/-]+(\w+)*/i],[f,[y,"LG"],[v,S]],[/android.+(ideatab[a-z0-9\-\s]+)/i],[f,[y,"Lenovo"],[v,b]],[/linux;.+((jolla));/i],[y,f,[v,S]],[/((pebble))app\/[\d\.]+\s/i],[y,f,[v,I]],[/android.+;\s(glass)\s\d/i],[f,[y,"Google"],[v,I]],[/android.+(\w+)\s+build\/hm\1/i,/android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,/android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d\w)?)\s+build/i],[[f,/_/g," "],[y,"Xiaomi"],[v,S]],[/android.+a000(1)\s+build/i],[f,[y,"OnePlus"],[v,S]],[/\s(tablet)[;\/]/i,/\s(mobile)(?:[;\/]|\ssafari)/i],[[v,k.Pd],y,f]],zd:[[/windows.+\sedge\/([\w\.]+)/i],[m,[g,"EdgeHTML"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i,/(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,/(icab)[\/\s]([23]\.[\d\.]+)/i],[g,m],[/rv\:([\w\.]+).*(gecko)/i],[m,g]],os:[[/microsoft\s(windows)\s(vista|xp)/i],[g,m],[/(windows)\snt\s6\.2;\s(arm)/i,/(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s]+\w)*/i,/(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i],[g,[m,C.ac,O.os.Vd.version]],[/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],[[g,"Windows"],[m,C.ac,O.os.Vd.version]],[/\((bb)(10);/i],[[g,"BlackBerry"],m],[/(blackberry)\w*\/?([\w\.]+)*/i,/(tizen)[\/\s]([\w\.]+)/i,/(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i,/linux;.+(sailfish);/i],[g,m],[/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i],[[g,"Symbian"],m],[/\((series40);/i],[g],[/mozilla.+\(mobile;.+gecko.+firefox/i],[[g,"Firefox OS"],m],[/(nintendo|playstation)\s([wids34portablevu]+)/i,/(mint)[\/\s\(]?(\w+)*/i,/(mageia|vectorlinux)[;\s]/i,/(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]+)*/i,/(hurd|linux)\s?([\w\.]+)*/i,/(gnu)\s?([\w\.]+)*/i],[g,m],[/(cros)\s[\w]+\s([\w\.]+\w)/i],[[g,"Chromium OS"],m],[/(sunos)\s?([\w\.]+\d)*/i],[[g,"Solaris"],m],[/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i],[g,m],[/(haiku)\s(\w+)/i],[g,m],[/(ip[honead]+)(?:.*os\s([\w]+)*\slike\smac|;\sopera)/i],[[g,"iOS"],[m,/_/g,"."]],[/(mac\sos\sx)\s?([\w\s\.]+\w)*/i,/(macintosh|mac(?=_powerpc)\s)/i],[[g,"Mac OS"],[m,/_/g,"."]],[/((?:open)?solaris)[\/\s-]?([\w\.]+)*/i,/(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i,/(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i,/(unix)\s?([\w\.]+)*/i],[g,m]]},A=function(t,e){if(!(this instanceof A))return new A(t,e).Wd();var i=t||(n&&n.navigator&&n.navigator.userAgent?n.navigator.userAgent:a),r=e?k.extend(P,e):P;return this.$d=function(){var t=C.Nd.apply(this,r.ti);return t.Ad=k.Ad(t.version),t},this.Yd=function(){return C.Nd.apply(this,r.Gd)},this.Xd=function(){return C.Nd.apply(this,r.Fd)},this.Zd=function(){return C.Nd.apply(this,r.zd)},this.Rn=function(){return C.Nd.apply(this,r.os)},this.Wd=function(){return{tf:this.xd(),ti:this.$d(),zd:this.Zd(),os:this.Rn(),Fd:this.Xd(),Gd:this.Yd()}},this.xd=function(){return i},this.In=function(t){return i=t,this},this};A.VERSION=s,A.ef={"if":g,rf:d,VERSION:m},A.nf={sf:w},A.af={cf:f,VENDOR:y,hf:v,pf:T,uf:S,lf:E,df:b,ff:I,gf:R},A.vf={"if":g,VERSION:m},A.yf={"if":g,VERSION:m},typeof e!==p?(typeof t!==p&&t.t&&(e=t.t=A),e.Cr=A):"function"===h&&i(64)?(r=function(){return A}.call(e,i,e,t),!(r!==o&&(t.t=r))):n.Cr=A;var N=n.jQuery||n.Zepto;if(typeof N!==p){var x=new A;N.tf=x.Wd(),N.tf.get=function(){return x.xd()},N.tf.set=function(t){x.In(t);var e=x.Wd();for(var i in e)N.tf[i]=e[i]}}}("object"==typeof window?window:this)},function(t,e){Services={1:"REMOTE_EXECUTOR",mf:1,2:"PEER_FORWARDER",wf:2,3:"PEER_INDEX",Tf:3,4:"PEER_BROADCAST",Sf:4,5:"PEER_FILTER",bf:5,6:"PEER_LOGGING",Ef:6,7:"HIVEJS_TRACKER",If:7,8:"PEER_SYSTEM",Rf:8,9:"HIVEJS_SNAPSHOTS",to:9,10:"HIVEJS_TICKETS",kf:10,11:"HIVEJS_KEEPALIVE",Cf:11,12:"HIVEJS_FORWARDING",Of:12}},function(t,e,i){var r=i(16);StreamType={1:"LIVE",LIVE:1,2:"VOD",Pf:2},StreamProtocol={1:"DASH",rt:1,2:"HDS",Af:2,3:"HLS",Y:3,4:"SS",Nf:4},ClientType={1:"JAVA",xf:1,2:"STATS_ONLY",Bf:2,3:"JS_DIRECT",Ff:3,4:"JS_PROXY",_f:4},EventId=function(t){this.partnerId=null,this.customerId=null,this.contentId=null,this.tags=null,t&&(void 0!==t.partnerId&&(this.partnerId=t.partnerId),void 0!==t.customerId&&(this.customerId=t.customerId),void 0!==t.contentId&&(this.contentId=t.contentId),void 0!==t.tags&&(this.tags=t.tags))},EventId.prototype={},EventId.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.As?this.partnerId=t.ha().value:t.pa(i);break;case 2:i==r.bs.As?this.customerId=t.ha().value:t.pa(i);break;case 3:i==r.bs.As?this.contentId=t.ha().value:t.pa(i);break;case 4:if(i==r.bs._s){var o,s=0;this.tags=[];var a=0;o=t.Vc(),a=o.Qc,s=o.size;for(var c=0;c<s;++c){var h=null;h=t.ha().value,this.tags.push(h)}t.qc()}else t.pa(i);break;default:t.pa(i)}t.la()}t.da()},EventId.prototype.write=function(t){if(t.fa("EventId"),null!==this.partnerId&&void 0!==this.partnerId&&(t.ga("partnerId",r.bs.As,1),t.va(this.partnerId),t.ya()),null!==this.customerId&&void 0!==this.customerId&&(t.ga("customerId",r.bs.As,2),t.va(this.customerId),t.ya()),null!==this.contentId&&void 0!==this.contentId&&(t.ga("contentId",r.bs.As,3),t.va(this.contentId),t.ya()),null!==this.tags&&void 0!==this.tags){t.ga("tags",r.bs._s,4),t.Tc(r.bs.As,this.tags.length);for(var e in this.tags)this.tags.hasOwnProperty(e)&&(e=this.tags[e],t.va(e));t.Sc(),t.ya()}t.wa(),t.Ta()},SnapshotInfo=function(t){this.timestamp=null,this.apiServer=null,this.clientIp=null,t&&(void 0!==t.timestamp&&(this.timestamp=t.timestamp),void 0!==t.apiServer&&(this.apiServer=t.apiServer),void 0!==t.clientIp&&(this.clientIp=t.clientIp))},SnapshotInfo.prototype={},SnapshotInfo.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Ps?this.timestamp=t.$c().value:t.pa(i);break;case 2:i==r.bs.As?this.apiServer=t.ha().value:t.pa(i);break;case 3:i==r.bs.As?this.clientIp=t.ha().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},SnapshotInfo.prototype.write=function(t){t.fa("SnapshotInfo"),null!==this.timestamp&&void 0!==this.timestamp&&(t.ga("timestamp",r.bs.Ps,1),t.Cc(this.timestamp),t.ya()),null!==this.apiServer&&void 0!==this.apiServer&&(t.ga("apiServer",r.bs.As,2),t.va(this.apiServer),t.ya()),null!==this.clientIp&&void 0!==this.clientIp&&(t.ga("clientIp",r.bs.As,3),t.va(this.clientIp),t.ya()),t.wa(),t.Ta()},InetAddress=function(t){this.address=null,this.port=null,t&&(void 0!==t.address&&(this.address=t.address),void 0!==t.port&&(this.port=t.port))},InetAddress.prototype={},InetAddress.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.As?this.address=t.Xc().value:t.pa(i);break;case 2:i==r.bs.Os?this.port=t.ua().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},InetAddress.prototype.write=function(t){t.fa("InetAddress"),null!==this.address&&void 0!==this.address&&(t.ga("address",r.bs.As,1),t.Pc(this.address),t.ya()),null!==this.port&&void 0!==this.port&&(t.ga("port",r.bs.Os,2),t.ma(this.port),t.ya()),t.wa(),t.Ta()}},function(t,e,i){var r=i(16);"undefined"==typeof hive&&(hive={}),"undefined"==typeof hive.snapshots&&(hive.snapshots={}),hive.snapshots.Traffic=function(t){this.reqN=null,this.respFallbackN=null,this.respFallbackErrN=null,this.respP2pN=null,this.reqOtherN=null,this.respFallbackOtherN=null,this.respFallbackOthertErrN=null,this.srcReqN=null,this.srcRespN=null,this.srcRespErrN=null,this.srcReqQt=null,this.srcRespQt=null,this.srcOverQt=null,this.srcOtherReqN=null,this.srcOtherRespN=null,this.srcOtherRespErrN=null,this.srcOtherReqQt=null,this.srcOtherRespQt=null,this.srcOtherOverQt=null,this.p2pSubReqN=null,this.p2pSubRespN=null,this.p2pSubRespPartN=null,this.p2pSubRespErrN=null,this.p2pSubRespExpN=null,this.p2pSubReqQt=null,this.p2pSubRespQt=null,this.p2pDirectQt=null,this.p2pRelayQt=null,this.p2pNatQt=null,this.p2pUdpbQt=null,this.fallAgentRespN=null,this.fallAgentPredHitN=null,this.fallAgentFailedRespN=null,this.fallAgentPredMissN=null,this.fallAgentPredPartialHitN=null,this.fallAgenTrafficSuccessQt=null,this.fallAgenTrafficFailureQt=null,this.p2pAgentPredHitN=null,this.p2pAgentPredMissN=null,this.p2pAgentPredPartialHitN=null,this.p2pAgenTrafficSuccessQt=null,this.p2pAgenTrafficFailureQt=null,this.respP2pOtherN=null,this.lCacheRespN=null,this.lCacheRespQt=null,this.p2pOutSiteLowPrio=null,t&&(void 0!==t.reqN&&(this.reqN=t.reqN),void 0!==t.respFallbackN&&(this.respFallbackN=t.respFallbackN),void 0!==t.respFallbackErrN&&(this.respFallbackErrN=t.respFallbackErrN),void 0!==t.respP2pN&&(this.respP2pN=t.respP2pN),void 0!==t.reqOtherN&&(this.reqOtherN=t.reqOtherN),void 0!==t.respFallbackOtherN&&(this.respFallbackOtherN=t.respFallbackOtherN),void 0!==t.respFallbackOthertErrN&&(this.respFallbackOthertErrN=t.respFallbackOthertErrN),void 0!==t.srcReqN&&(this.srcReqN=t.srcReqN),void 0!==t.srcRespN&&(this.srcRespN=t.srcRespN),void 0!==t.srcRespErrN&&(this.srcRespErrN=t.srcRespErrN),void 0!==t.srcReqQt&&(this.srcReqQt=t.srcReqQt),void 0!==t.srcRespQt&&(this.srcRespQt=t.srcRespQt),void 0!==t.srcOverQt&&(this.srcOverQt=t.srcOverQt),void 0!==t.srcOtherReqN&&(this.srcOtherReqN=t.srcOtherReqN),void 0!==t.srcOtherRespN&&(this.srcOtherRespN=t.srcOtherRespN),void 0!==t.srcOtherRespErrN&&(this.srcOtherRespErrN=t.srcOtherRespErrN),void 0!==t.srcOtherReqQt&&(this.srcOtherReqQt=t.srcOtherReqQt),void 0!==t.srcOtherRespQt&&(this.srcOtherRespQt=t.srcOtherRespQt),void 0!==t.srcOtherOverQt&&(this.srcOtherOverQt=t.srcOtherOverQt),
void 0!==t.p2pSubReqN&&(this.p2pSubReqN=t.p2pSubReqN),void 0!==t.p2pSubRespN&&(this.p2pSubRespN=t.p2pSubRespN),void 0!==t.p2pSubRespPartN&&(this.p2pSubRespPartN=t.p2pSubRespPartN),void 0!==t.p2pSubRespErrN&&(this.p2pSubRespErrN=t.p2pSubRespErrN),void 0!==t.p2pSubRespExpN&&(this.p2pSubRespExpN=t.p2pSubRespExpN),void 0!==t.p2pSubReqQt&&(this.p2pSubReqQt=t.p2pSubReqQt),void 0!==t.p2pSubRespQt&&(this.p2pSubRespQt=t.p2pSubRespQt),void 0!==t.p2pDirectQt&&(this.p2pDirectQt=t.p2pDirectQt),void 0!==t.p2pRelayQt&&(this.p2pRelayQt=t.p2pRelayQt),void 0!==t.p2pNatQt&&(this.p2pNatQt=t.p2pNatQt),void 0!==t.p2pUdpbQt&&(this.p2pUdpbQt=t.p2pUdpbQt),void 0!==t.fallAgentRespN&&(this.fallAgentRespN=t.fallAgentRespN),void 0!==t.fallAgentPredHitN&&(this.fallAgentPredHitN=t.fallAgentPredHitN),void 0!==t.fallAgentFailedRespN&&(this.fallAgentFailedRespN=t.fallAgentFailedRespN),void 0!==t.fallAgentPredMissN&&(this.fallAgentPredMissN=t.fallAgentPredMissN),void 0!==t.fallAgentPredPartialHitN&&(this.fallAgentPredPartialHitN=t.fallAgentPredPartialHitN),void 0!==t.fallAgenTrafficSuccessQt&&(this.fallAgenTrafficSuccessQt=t.fallAgenTrafficSuccessQt),void 0!==t.fallAgenTrafficFailureQt&&(this.fallAgenTrafficFailureQt=t.fallAgenTrafficFailureQt),void 0!==t.p2pAgentPredHitN&&(this.p2pAgentPredHitN=t.p2pAgentPredHitN),void 0!==t.p2pAgentPredMissN&&(this.p2pAgentPredMissN=t.p2pAgentPredMissN),void 0!==t.p2pAgentPredPartialHitN&&(this.p2pAgentPredPartialHitN=t.p2pAgentPredPartialHitN),void 0!==t.p2pAgenTrafficSuccessQt&&(this.p2pAgenTrafficSuccessQt=t.p2pAgenTrafficSuccessQt),void 0!==t.p2pAgenTrafficFailureQt&&(this.p2pAgenTrafficFailureQt=t.p2pAgenTrafficFailureQt),void 0!==t.respP2pOtherN&&(this.respP2pOtherN=t.respP2pOtherN),void 0!==t.lCacheRespN&&(this.lCacheRespN=t.lCacheRespN),void 0!==t.lCacheRespQt&&(this.lCacheRespQt=t.lCacheRespQt),void 0!==t.p2pOutSiteLowPrio&&(this.p2pOutSiteLowPrio=t.p2pOutSiteLowPrio))},hive.snapshots.Traffic.prototype={},hive.snapshots.Traffic.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Os?this.reqN=t.ua().value:t.pa(i);break;case 2:i==r.bs.ks?this.respFallbackN=t.Yc().value:t.pa(i);break;case 3:i==r.bs.Os?this.respFallbackErrN=t.ua().value:t.pa(i);break;case 4:i==r.bs.ks?this.respP2pN=t.Yc().value:t.pa(i);break;case 5:i==r.bs.Os?this.reqOtherN=t.ua().value:t.pa(i);break;case 6:i==r.bs.Os?this.respFallbackOtherN=t.ua().value:t.pa(i);break;case 7:i==r.bs.Os?this.respFallbackOthertErrN=t.ua().value:t.pa(i);break;case 8:i==r.bs.Os?this.srcReqN=t.ua().value:t.pa(i);break;case 9:i==r.bs.Os?this.srcRespN=t.ua().value:t.pa(i);break;case 10:i==r.bs.Os?this.srcRespErrN=t.ua().value:t.pa(i);break;case 11:i==r.bs.Ps?this.srcReqQt=t.$c().value:t.pa(i);break;case 12:i==r.bs.Ps?this.srcRespQt=t.$c().value:t.pa(i);break;case 13:i==r.bs.Ps?this.srcOverQt=t.$c().value:t.pa(i);break;case 14:i==r.bs.Os?this.srcOtherReqN=t.ua().value:t.pa(i);break;case 15:i==r.bs.Os?this.srcOtherRespN=t.ua().value:t.pa(i);break;case 16:i==r.bs.Os?this.srcOtherRespErrN=t.ua().value:t.pa(i);break;case 17:i==r.bs.Ps?this.srcOtherReqQt=t.$c().value:t.pa(i);break;case 18:i==r.bs.Ps?this.srcOtherRespQt=t.$c().value:t.pa(i);break;case 19:i==r.bs.Ps?this.srcOtherOverQt=t.$c().value:t.pa(i);break;case 20:i==r.bs.Os?this.p2pSubReqN=t.ua().value:t.pa(i);break;case 21:i==r.bs.Os?this.p2pSubRespN=t.ua().value:t.pa(i);break;case 22:i==r.bs.ks?this.p2pSubRespPartN=t.Yc().value:t.pa(i);break;case 23:i==r.bs.ks?this.p2pSubRespErrN=t.Yc().value:t.pa(i);break;case 24:i==r.bs.Os?this.p2pSubRespExpN=t.ua().value:t.pa(i);break;case 25:i==r.bs.Ps?this.p2pSubReqQt=t.$c().value:t.pa(i);break;case 26:i==r.bs.Ps?this.p2pSubRespQt=t.$c().value:t.pa(i);break;case 27:i==r.bs.Ps?this.p2pDirectQt=t.$c().value:t.pa(i);break;case 28:i==r.bs.Ps?this.p2pRelayQt=t.$c().value:t.pa(i);break;case 29:i==r.bs.Ps?this.p2pNatQt=t.$c().value:t.pa(i);break;case 30:i==r.bs.Ps?this.p2pUdpbQt=t.$c().value:t.pa(i);break;case 31:i==r.bs.Os?this.fallAgentRespN=t.ua().value:t.pa(i);break;case 32:i==r.bs.Os?this.fallAgentPredHitN=t.ua().value:t.pa(i);break;case 33:i==r.bs.Os?this.fallAgentFailedRespN=t.ua().value:t.pa(i);break;case 34:i==r.bs.Os?this.fallAgentPredMissN=t.ua().value:t.pa(i);break;case 35:i==r.bs.Os?this.fallAgentPredPartialHitN=t.ua().value:t.pa(i);break;case 36:i==r.bs.Ps?this.fallAgenTrafficSuccessQt=t.$c().value:t.pa(i);break;case 37:i==r.bs.Ps?this.fallAgenTrafficFailureQt=t.$c().value:t.pa(i);break;case 38:i==r.bs.Os?this.p2pAgentPredHitN=t.ua().value:t.pa(i);break;case 39:i==r.bs.Os?this.p2pAgentPredMissN=t.ua().value:t.pa(i);break;case 40:i==r.bs.Os?this.p2pAgentPredPartialHitN=t.ua().value:t.pa(i);break;case 41:i==r.bs.Ps?this.p2pAgenTrafficSuccessQt=t.$c().value:t.pa(i);break;case 42:i==r.bs.Ps?this.p2pAgenTrafficFailureQt=t.$c().value:t.pa(i);break;case 43:i==r.bs.Os?this.respP2pOtherN=t.ua().value:t.pa(i);break;case 44:i==r.bs.Os?this.lCacheRespN=t.ua().value:t.pa(i);break;case 45:i==r.bs.Ps?this.lCacheRespQt=t.$c().value:t.pa(i);break;case 46:i==r.bs.Ps?this.p2pOutSiteLowPrio=t.$c().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.Traffic.prototype.write=function(t){t.fa("Traffic"),null!==this.reqN&&void 0!==this.reqN&&(t.ga("reqN",r.bs.Os,1),t.ma(this.reqN),t.ya()),null!==this.respFallbackN&&void 0!==this.respFallbackN&&(t.ga("respFallbackN",r.bs.ks,2),t.Oc(this.respFallbackN),t.ya()),null!==this.respFallbackErrN&&void 0!==this.respFallbackErrN&&(t.ga("respFallbackErrN",r.bs.Os,3),t.ma(this.respFallbackErrN),t.ya()),null!==this.respP2pN&&void 0!==this.respP2pN&&(t.ga("respP2pN",r.bs.ks,4),t.Oc(this.respP2pN),t.ya()),null!==this.reqOtherN&&void 0!==this.reqOtherN&&(t.ga("reqOtherN",r.bs.Os,5),t.ma(this.reqOtherN),t.ya()),null!==this.respFallbackOtherN&&void 0!==this.respFallbackOtherN&&(t.ga("respFallbackOtherN",r.bs.Os,6),t.ma(this.respFallbackOtherN),t.ya()),null!==this.respFallbackOthertErrN&&void 0!==this.respFallbackOthertErrN&&(t.ga("respFallbackOthertErrN",r.bs.Os,7),t.ma(this.respFallbackOthertErrN),t.ya()),null!==this.srcReqN&&void 0!==this.srcReqN&&(t.ga("srcReqN",r.bs.Os,8),t.ma(this.srcReqN),t.ya()),null!==this.srcRespN&&void 0!==this.srcRespN&&(t.ga("srcRespN",r.bs.Os,9),t.ma(this.srcRespN),t.ya()),null!==this.srcRespErrN&&void 0!==this.srcRespErrN&&(t.ga("srcRespErrN",r.bs.Os,10),t.ma(this.srcRespErrN),t.ya()),null!==this.srcReqQt&&void 0!==this.srcReqQt&&(t.ga("srcReqQt",r.bs.Ps,11),t.Cc(this.srcReqQt),t.ya()),null!==this.srcRespQt&&void 0!==this.srcRespQt&&(t.ga("srcRespQt",r.bs.Ps,12),t.Cc(this.srcRespQt),t.ya()),null!==this.srcOverQt&&void 0!==this.srcOverQt&&(t.ga("srcOverQt",r.bs.Ps,13),t.Cc(this.srcOverQt),t.ya()),null!==this.srcOtherReqN&&void 0!==this.srcOtherReqN&&(t.ga("srcOtherReqN",r.bs.Os,14),t.ma(this.srcOtherReqN),t.ya()),null!==this.srcOtherRespN&&void 0!==this.srcOtherRespN&&(t.ga("srcOtherRespN",r.bs.Os,15),t.ma(this.srcOtherRespN),t.ya()),null!==this.srcOtherRespErrN&&void 0!==this.srcOtherRespErrN&&(t.ga("srcOtherRespErrN",r.bs.Os,16),t.ma(this.srcOtherRespErrN),t.ya()),null!==this.srcOtherReqQt&&void 0!==this.srcOtherReqQt&&(t.ga("srcOtherReqQt",r.bs.Ps,17),t.Cc(this.srcOtherReqQt),t.ya()),null!==this.srcOtherRespQt&&void 0!==this.srcOtherRespQt&&(t.ga("srcOtherRespQt",r.bs.Ps,18),t.Cc(this.srcOtherRespQt),t.ya()),null!==this.srcOtherOverQt&&void 0!==this.srcOtherOverQt&&(t.ga("srcOtherOverQt",r.bs.Ps,19),t.Cc(this.srcOtherOverQt),t.ya()),null!==this.p2pSubReqN&&void 0!==this.p2pSubReqN&&(t.ga("p2pSubReqN",r.bs.Os,20),t.ma(this.p2pSubReqN),t.ya()),null!==this.p2pSubRespN&&void 0!==this.p2pSubRespN&&(t.ga("p2pSubRespN",r.bs.Os,21),t.ma(this.p2pSubRespN),t.ya()),null!==this.p2pSubRespPartN&&void 0!==this.p2pSubRespPartN&&(t.ga("p2pSubRespPartN",r.bs.ks,22),t.Oc(this.p2pSubRespPartN),t.ya()),null!==this.p2pSubRespErrN&&void 0!==this.p2pSubRespErrN&&(t.ga("p2pSubRespErrN",r.bs.ks,23),t.Oc(this.p2pSubRespErrN),t.ya()),null!==this.p2pSubRespExpN&&void 0!==this.p2pSubRespExpN&&(t.ga("p2pSubRespExpN",r.bs.Os,24),t.ma(this.p2pSubRespExpN),t.ya()),null!==this.p2pSubReqQt&&void 0!==this.p2pSubReqQt&&(t.ga("p2pSubReqQt",r.bs.Ps,25),t.Cc(this.p2pSubReqQt),t.ya()),null!==this.p2pSubRespQt&&void 0!==this.p2pSubRespQt&&(t.ga("p2pSubRespQt",r.bs.Ps,26),t.Cc(this.p2pSubRespQt),t.ya()),null!==this.p2pDirectQt&&void 0!==this.p2pDirectQt&&(t.ga("p2pDirectQt",r.bs.Ps,27),t.Cc(this.p2pDirectQt),t.ya()),null!==this.p2pRelayQt&&void 0!==this.p2pRelayQt&&(t.ga("p2pRelayQt",r.bs.Ps,28),t.Cc(this.p2pRelayQt),t.ya()),null!==this.p2pNatQt&&void 0!==this.p2pNatQt&&(t.ga("p2pNatQt",r.bs.Ps,29),t.Cc(this.p2pNatQt),t.ya()),null!==this.p2pUdpbQt&&void 0!==this.p2pUdpbQt&&(t.ga("p2pUdpbQt",r.bs.Ps,30),t.Cc(this.p2pUdpbQt),t.ya()),null!==this.fallAgentRespN&&void 0!==this.fallAgentRespN&&(t.ga("fallAgentRespN",r.bs.Os,31),t.ma(this.fallAgentRespN),t.ya()),null!==this.fallAgentPredHitN&&void 0!==this.fallAgentPredHitN&&(t.ga("fallAgentPredHitN",r.bs.Os,32),t.ma(this.fallAgentPredHitN),t.ya()),null!==this.fallAgentFailedRespN&&void 0!==this.fallAgentFailedRespN&&(t.ga("fallAgentFailedRespN",r.bs.Os,33),t.ma(this.fallAgentFailedRespN),t.ya()),null!==this.fallAgentPredMissN&&void 0!==this.fallAgentPredMissN&&(t.ga("fallAgentPredMissN",r.bs.Os,34),t.ma(this.fallAgentPredMissN),t.ya()),null!==this.fallAgentPredPartialHitN&&void 0!==this.fallAgentPredPartialHitN&&(t.ga("fallAgentPredPartialHitN",r.bs.Os,35),t.ma(this.fallAgentPredPartialHitN),t.ya()),null!==this.fallAgenTrafficSuccessQt&&void 0!==this.fallAgenTrafficSuccessQt&&(t.ga("fallAgenTrafficSuccessQt",r.bs.Ps,36),t.Cc(this.fallAgenTrafficSuccessQt),t.ya()),null!==this.fallAgenTrafficFailureQt&&void 0!==this.fallAgenTrafficFailureQt&&(t.ga("fallAgenTrafficFailureQt",r.bs.Ps,37),t.Cc(this.fallAgenTrafficFailureQt),t.ya()),null!==this.p2pAgentPredHitN&&void 0!==this.p2pAgentPredHitN&&(t.ga("p2pAgentPredHitN",r.bs.Os,38),t.ma(this.p2pAgentPredHitN),t.ya()),null!==this.p2pAgentPredMissN&&void 0!==this.p2pAgentPredMissN&&(t.ga("p2pAgentPredMissN",r.bs.Os,39),t.ma(this.p2pAgentPredMissN),t.ya()),null!==this.p2pAgentPredPartialHitN&&void 0!==this.p2pAgentPredPartialHitN&&(t.ga("p2pAgentPredPartialHitN",r.bs.Os,40),t.ma(this.p2pAgentPredPartialHitN),t.ya()),null!==this.p2pAgenTrafficSuccessQt&&void 0!==this.p2pAgenTrafficSuccessQt&&(t.ga("p2pAgenTrafficSuccessQt",r.bs.Ps,41),t.Cc(this.p2pAgenTrafficSuccessQt),t.ya()),null!==this.p2pAgenTrafficFailureQt&&void 0!==this.p2pAgenTrafficFailureQt&&(t.ga("p2pAgenTrafficFailureQt",r.bs.Ps,42),t.Cc(this.p2pAgenTrafficFailureQt),t.ya()),null!==this.respP2pOtherN&&void 0!==this.respP2pOtherN&&(t.ga("respP2pOtherN",r.bs.Os,43),t.ma(this.respP2pOtherN),t.ya()),null!==this.lCacheRespN&&void 0!==this.lCacheRespN&&(t.ga("lCacheRespN",r.bs.Os,44),t.ma(this.lCacheRespN),t.ya()),null!==this.lCacheRespQt&&void 0!==this.lCacheRespQt&&(t.ga("lCacheRespQt",r.bs.Ps,45),t.Cc(this.lCacheRespQt),t.ya()),null!==this.p2pOutSiteLowPrio&&void 0!==this.p2pOutSiteLowPrio&&(t.ga("p2pOutSiteLowPrio",r.bs.Ps,46),t.Cc(this.p2pOutSiteLowPrio),t.ya()),t.wa(),t.Ta()},hive.snapshots.Metrics=function(t){this.upBW=null,this.downBW=null,this.memN=null,this.prtInN=null,this.prtOutN=null,this.initVideoBufQt=null,this.videoAvgBufQt=null,this.videoBufQt=null,this.videoBufN=null,this.initAudioBufQt=null,this.audioAvgBufQt=null,this.audioBufQt=null,this.audioBufN=null,this.bitrateUpN=null,this.bitrateDwnN=null,this.delay=null,this.delayEnforcement=null,this.lookupReqEstablished=null,this.lookupReqAccept=null,this.fallbackAvgTp=null,this.srcThroughput=null,this.diskReadTimeout=null,this.diskReadRate=null,this.diskStoreRate=null,this.diskRemoveRate=null,this.diskCacheSize=null,this.clientBufferMs=null,this.lookupTotal=null,this.lookupNotFound=null,this.lookupFailed=null,this.lookupLatency=null,this.trackerFailed=null,this.trackerLatency=null,this.snapshotFailed=null,this.snapshotLatency=null,t&&(void 0!==t.upBW&&(this.upBW=t.upBW),void 0!==t.downBW&&(this.downBW=t.downBW),void 0!==t.memN&&(this.memN=t.memN),void 0!==t.prtInN&&(this.prtInN=t.prtInN),void 0!==t.prtOutN&&(this.prtOutN=t.prtOutN),void 0!==t.initVideoBufQt&&(this.initVideoBufQt=t.initVideoBufQt),void 0!==t.videoAvgBufQt&&(this.videoAvgBufQt=t.videoAvgBufQt),void 0!==t.videoBufQt&&(this.videoBufQt=t.videoBufQt),void 0!==t.videoBufN&&(this.videoBufN=t.videoBufN),void 0!==t.initAudioBufQt&&(this.initAudioBufQt=t.initAudioBufQt),void 0!==t.audioAvgBufQt&&(this.audioAvgBufQt=t.audioAvgBufQt),void 0!==t.audioBufQt&&(this.audioBufQt=t.audioBufQt),void 0!==t.audioBufN&&(this.audioBufN=t.audioBufN),void 0!==t.bitrateUpN&&(this.bitrateUpN=t.bitrateUpN),void 0!==t.bitrateDwnN&&(this.bitrateDwnN=t.bitrateDwnN),void 0!==t.delay&&(this.delay=t.delay),void 0!==t.delayEnforcement&&(this.delayEnforcement=t.delayEnforcement),void 0!==t.lookupReqEstablished&&(this.lookupReqEstablished=t.lookupReqEstablished),void 0!==t.lookupReqAccept&&(this.lookupReqAccept=t.lookupReqAccept),void 0!==t.fallbackAvgTp&&(this.fallbackAvgTp=t.fallbackAvgTp),void 0!==t.srcThroughput&&(this.srcThroughput=t.srcThroughput),void 0!==t.diskReadTimeout&&(this.diskReadTimeout=t.diskReadTimeout),void 0!==t.diskReadRate&&(this.diskReadRate=t.diskReadRate),void 0!==t.diskStoreRate&&(this.diskStoreRate=t.diskStoreRate),void 0!==t.diskRemoveRate&&(this.diskRemoveRate=t.diskRemoveRate),void 0!==t.diskCacheSize&&(this.diskCacheSize=t.diskCacheSize),void 0!==t.clientBufferMs&&(this.clientBufferMs=t.clientBufferMs),void 0!==t.lookupTotal&&(this.lookupTotal=t.lookupTotal),void 0!==t.lookupNotFound&&(this.lookupNotFound=t.lookupNotFound),void 0!==t.lookupFailed&&(this.lookupFailed=t.lookupFailed),void 0!==t.lookupLatency&&(this.lookupLatency=t.lookupLatency),void 0!==t.trackerFailed&&(this.trackerFailed=t.trackerFailed),void 0!==t.trackerLatency&&(this.trackerLatency=t.trackerLatency),void 0!==t.snapshotFailed&&(this.snapshotFailed=t.snapshotFailed),void 0!==t.snapshotLatency&&(this.snapshotLatency=t.snapshotLatency))},hive.snapshots.Metrics.prototype={},hive.snapshots.Metrics.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Os?this.upBW=t.ua().value:t.pa(i);break;case 2:i==r.bs.Os?this.downBW=t.ua().value:t.pa(i);break;case 3:i==r.bs.Os?this.memN=t.ua().value:t.pa(i);break;case 4:i==r.bs.Os?this.prtInN=t.ua().value:t.pa(i);break;case 5:i==r.bs.Os?this.prtOutN=t.ua().value:t.pa(i);break;case 6:i==r.bs.Ps?this.initVideoBufQt=t.$c().value:t.pa(i);break;case 7:i==r.bs.ks?this.videoAvgBufQt=t.Yc().value:t.pa(i);break;case 8:i==r.bs.Ps?this.videoBufQt=t.$c().value:t.pa(i);break;case 9:i==r.bs.Os?this.videoBufN=t.ua().value:t.pa(i);break;case 10:i==r.bs.Os?this.initAudioBufQt=t.ua().value:t.pa(i);break;case 11:i==r.bs.ks?this.audioAvgBufQt=t.Yc().value:t.pa(i);break;case 12:i==r.bs.Ps?this.audioBufQt=t.$c().value:t.pa(i);break;case 13:i==r.bs.Os?this.audioBufN=t.ua().value:t.pa(i);break;case 14:i==r.bs.Os?this.bitrateUpN=t.ua().value:t.pa(i);break;case 15:i==r.bs.Os?this.bitrateDwnN=t.ua().value:t.pa(i);break;case 16:i==r.bs.Os?this.delay=t.ua().value:t.pa(i);break;case 17:i==r.bs.Os?this.delayEnforcement=t.ua().value:t.pa(i);break;case 18:i==r.bs.Os?this.lookupReqEstablished=t.ua().value:t.pa(i);break;case 19:i==r.bs.Os?this.lookupReqAccept=t.ua().value:t.pa(i);break;case 20:i==r.bs.ks?this.fallbackAvgTp=t.Yc().value:t.pa(i);break;case 21:i==r.bs.ks?this.srcThroughput=t.Yc().value:t.pa(i);break;case 22:i==r.bs.Os?this.diskReadTimeout=t.ua().value:t.pa(i);break;case 23:i==r.bs.ks?this.diskReadRate=t.Yc().value:t.pa(i);break;case 24:i==r.bs.ks?this.diskStoreRate=t.Yc().value:t.pa(i);break;case 25:i==r.bs.ks?this.diskRemoveRate=t.Yc().value:t.pa(i);break;case 26:i==r.bs.Ps?this.diskCacheSize=t.$c().value:t.pa(i);break;case 27:i==r.bs.Os?this.clientBufferMs=t.ua().value:t.pa(i);break;case 28:i==r.bs.Os?this.lookupTotal=t.ua().value:t.pa(i);break;case 29:i==r.bs.Os?this.lookupNotFound=t.ua().value:t.pa(i);break;case 30:i==r.bs.Os?this.lookupFailed=t.ua().value:t.pa(i);break;case 31:i==r.bs.Os?this.lookupLatency=t.ua().value:t.pa(i);break;case 32:i==r.bs.Os?this.trackerFailed=t.ua().value:t.pa(i);break;case 33:i==r.bs.Os?this.trackerLatency=t.ua().value:t.pa(i);break;case 34:i==r.bs.Os?this.snapshotFailed=t.ua().value:t.pa(i);break;case 35:i==r.bs.Os?this.snapshotLatency=t.ua().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.Metrics.prototype.write=function(t){t.fa("Metrics"),null!==this.upBW&&void 0!==this.upBW&&(t.ga("upBW",r.bs.Os,1),t.ma(this.upBW),t.ya()),null!==this.downBW&&void 0!==this.downBW&&(t.ga("downBW",r.bs.Os,2),t.ma(this.downBW),t.ya()),null!==this.memN&&void 0!==this.memN&&(t.ga("memN",r.bs.Os,3),t.ma(this.memN),t.ya()),null!==this.prtInN&&void 0!==this.prtInN&&(t.ga("prtInN",r.bs.Os,4),t.ma(this.prtInN),t.ya()),null!==this.prtOutN&&void 0!==this.prtOutN&&(t.ga("prtOutN",r.bs.Os,5),t.ma(this.prtOutN),t.ya()),null!==this.initVideoBufQt&&void 0!==this.initVideoBufQt&&(t.ga("initVideoBufQt",r.bs.Ps,6),t.Cc(this.initVideoBufQt),t.ya()),null!==this.videoAvgBufQt&&void 0!==this.videoAvgBufQt&&(t.ga("videoAvgBufQt",r.bs.ks,7),t.Oc(this.videoAvgBufQt),t.ya()),null!==this.videoBufQt&&void 0!==this.videoBufQt&&(t.ga("videoBufQt",r.bs.Ps,8),t.Cc(this.videoBufQt),t.ya()),null!==this.videoBufN&&void 0!==this.videoBufN&&(t.ga("videoBufN",r.bs.Os,9),t.ma(this.videoBufN),t.ya()),null!==this.initAudioBufQt&&void 0!==this.initAudioBufQt&&(t.ga("initAudioBufQt",r.bs.Os,10),t.ma(this.initAudioBufQt),t.ya()),null!==this.audioAvgBufQt&&void 0!==this.audioAvgBufQt&&(t.ga("audioAvgBufQt",r.bs.ks,11),t.Oc(this.audioAvgBufQt),t.ya()),null!==this.audioBufQt&&void 0!==this.audioBufQt&&(t.ga("audioBufQt",r.bs.Ps,12),t.Cc(this.audioBufQt),t.ya()),null!==this.audioBufN&&void 0!==this.audioBufN&&(t.ga("audioBufN",r.bs.Os,13),t.ma(this.audioBufN),t.ya()),null!==this.bitrateUpN&&void 0!==this.bitrateUpN&&(t.ga("bitrateUpN",r.bs.Os,14),t.ma(this.bitrateUpN),t.ya()),null!==this.bitrateDwnN&&void 0!==this.bitrateDwnN&&(t.ga("bitrateDwnN",r.bs.Os,15),t.ma(this.bitrateDwnN),t.ya()),null!==this.delay&&void 0!==this.delay&&(t.ga("delay",r.bs.Os,16),t.ma(this.delay),t.ya()),null!==this.delayEnforcement&&void 0!==this.delayEnforcement&&(t.ga("delayEnforcement",r.bs.Os,17),t.ma(this.delayEnforcement),t.ya()),null!==this.lookupReqEstablished&&void 0!==this.lookupReqEstablished&&(t.ga("lookupReqEstablished",r.bs.Os,18),t.ma(this.lookupReqEstablished),t.ya()),null!==this.lookupReqAccept&&void 0!==this.lookupReqAccept&&(t.ga("lookupReqAccept",r.bs.Os,19),t.ma(this.lookupReqAccept),t.ya()),null!==this.fallbackAvgTp&&void 0!==this.fallbackAvgTp&&(t.ga("fallbackAvgTp",r.bs.ks,20),t.Oc(this.fallbackAvgTp),t.ya()),null!==this.srcThroughput&&void 0!==this.srcThroughput&&(t.ga("srcThroughput",r.bs.ks,21),t.Oc(this.srcThroughput),t.ya()),null!==this.diskReadTimeout&&void 0!==this.diskReadTimeout&&(t.ga("diskReadTimeout",r.bs.Os,22),t.ma(this.diskReadTimeout),t.ya()),null!==this.diskReadRate&&void 0!==this.diskReadRate&&(t.ga("diskReadRate",r.bs.ks,23),t.Oc(this.diskReadRate),t.ya()),null!==this.diskStoreRate&&void 0!==this.diskStoreRate&&(t.ga("diskStoreRate",r.bs.ks,24),t.Oc(this.diskStoreRate),t.ya()),null!==this.diskRemoveRate&&void 0!==this.diskRemoveRate&&(t.ga("diskRemoveRate",r.bs.ks,25),t.Oc(this.diskRemoveRate),t.ya()),null!==this.diskCacheSize&&void 0!==this.diskCacheSize&&(t.ga("diskCacheSize",r.bs.Ps,26),t.Cc(this.diskCacheSize),t.ya()),null!==this.clientBufferMs&&void 0!==this.clientBufferMs&&(t.ga("clientBufferMs",r.bs.Os,27),t.ma(this.clientBufferMs),t.ya()),null!==this.lookupTotal&&void 0!==this.lookupTotal&&(t.ga("lookupTotal",r.bs.Os,28),t.ma(this.lookupTotal),t.ya()),null!==this.lookupNotFound&&void 0!==this.lookupNotFound&&(t.ga("lookupNotFound",r.bs.Os,29),t.ma(this.lookupNotFound),t.ya()),null!==this.lookupFailed&&void 0!==this.lookupFailed&&(t.ga("lookupFailed",r.bs.Os,30),t.ma(this.lookupFailed),t.ya()),null!==this.lookupLatency&&void 0!==this.lookupLatency&&(t.ga("lookupLatency",r.bs.Os,31),t.ma(this.lookupLatency),t.ya()),null!==this.trackerFailed&&void 0!==this.trackerFailed&&(t.ga("trackerFailed",r.bs.Os,32),t.ma(this.trackerFailed),t.ya()),null!==this.trackerLatency&&void 0!==this.trackerLatency&&(t.ga("trackerLatency",r.bs.Os,33),t.ma(this.trackerLatency),t.ya()),null!==this.snapshotFailed&&void 0!==this.snapshotFailed&&(t.ga("snapshotFailed",r.bs.Os,34),t.ma(this.snapshotFailed),t.ya()),null!==this.snapshotLatency&&void 0!==this.snapshotLatency&&(t.ga("snapshotLatency",r.bs.Os,35),t.ma(this.snapshotLatency),t.ya()),t.wa(),t.Ta()},hive.snapshots.PartnerTraffic=function(t){this.p2pSuccReq=null,this.p2pFailReq=null,this.p2pPartReq=null,this.p2pSuccReceived=null,this.p2pSuccReceivedLow=null,this.p2pFailReceived=null,this.p2pSuccResp=null,this.p2pFailResp=null,this.p2pPartResp=null,this.p2pSuccSent=null,this.p2pSuccSentLow=null,this.p2pFailSent=null,t&&(void 0!==t.p2pSuccReq&&(this.p2pSuccReq=t.p2pSuccReq),void 0!==t.p2pFailReq&&(this.p2pFailReq=t.p2pFailReq),void 0!==t.p2pPartReq&&(this.p2pPartReq=t.p2pPartReq),void 0!==t.p2pSuccReceived&&(this.p2pSuccReceived=t.p2pSuccReceived),void 0!==t.p2pSuccReceivedLow&&(this.p2pSuccReceivedLow=t.p2pSuccReceivedLow),void 0!==t.p2pFailReceived&&(this.p2pFailReceived=t.p2pFailReceived),void 0!==t.p2pSuccResp&&(this.p2pSuccResp=t.p2pSuccResp),void 0!==t.p2pFailResp&&(this.p2pFailResp=t.p2pFailResp),void 0!==t.p2pPartResp&&(this.p2pPartResp=t.p2pPartResp),void 0!==t.p2pSuccSent&&(this.p2pSuccSent=t.p2pSuccSent),void 0!==t.p2pSuccSentLow&&(this.p2pSuccSentLow=t.p2pSuccSentLow),void 0!==t.p2pFailSent&&(this.p2pFailSent=t.p2pFailSent))},hive.snapshots.PartnerTraffic.prototype={},hive.snapshots.PartnerTraffic.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Ps?this.p2pSuccReq=t.$c().value:t.pa(i);break;case 2:i==r.bs.Ps?this.p2pFailReq=t.$c().value:t.pa(i);break;case 3:i==r.bs.Ps?this.p2pPartReq=t.$c().value:t.pa(i);break;case 4:i==r.bs.Ps?this.p2pSuccReceived=t.$c().value:t.pa(i);break;case 5:i==r.bs.Ps?this.p2pSuccReceivedLow=t.$c().value:t.pa(i);break;case 10:i==r.bs.Ps?this.p2pFailReceived=t.$c().value:t.pa(i);break;case 6:i==r.bs.Ps?this.p2pSuccResp=t.$c().value:t.pa(i);break;case 11:i==r.bs.Ps?this.p2pFailResp=t.$c().value:t.pa(i);break;case 7:i==r.bs.Ps?this.p2pPartResp=t.$c().value:t.pa(i);break;case 8:i==r.bs.Ps?this.p2pSuccSent=t.$c().value:t.pa(i);break;case 9:i==r.bs.Ps?this.p2pSuccSentLow=t.$c().value:t.pa(i);break;case 12:i==r.bs.Ps?this.p2pFailSent=t.$c().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.PartnerTraffic.prototype.write=function(t){t.fa("PartnerTraffic"),null!==this.p2pSuccReq&&void 0!==this.p2pSuccReq&&(t.ga("p2pSuccReq",r.bs.Ps,1),t.Cc(this.p2pSuccReq),t.ya()),null!==this.p2pFailReq&&void 0!==this.p2pFailReq&&(t.ga("p2pFailReq",r.bs.Ps,2),t.Cc(this.p2pFailReq),t.ya()),null!==this.p2pPartReq&&void 0!==this.p2pPartReq&&(t.ga("p2pPartReq",r.bs.Ps,3),t.Cc(this.p2pPartReq),t.ya()),null!==this.p2pSuccReceived&&void 0!==this.p2pSuccReceived&&(t.ga("p2pSuccReceived",r.bs.Ps,4),t.Cc(this.p2pSuccReceived),t.ya()),null!==this.p2pSuccReceivedLow&&void 0!==this.p2pSuccReceivedLow&&(t.ga("p2pSuccReceivedLow",r.bs.Ps,5),t.Cc(this.p2pSuccReceivedLow),t.ya()),null!==this.p2pFailReceived&&void 0!==this.p2pFailReceived&&(t.ga("p2pFailReceived",r.bs.Ps,10),t.Cc(this.p2pFailReceived),t.ya()),null!==this.p2pSuccResp&&void 0!==this.p2pSuccResp&&(t.ga("p2pSuccResp",r.bs.Ps,6),t.Cc(this.p2pSuccResp),t.ya()),null!==this.p2pFailResp&&void 0!==this.p2pFailResp&&(t.ga("p2pFailResp",r.bs.Ps,11),t.Cc(this.p2pFailResp),t.ya()),null!==this.p2pPartResp&&void 0!==this.p2pPartResp&&(t.ga("p2pPartResp",r.bs.Ps,7),t.Cc(this.p2pPartResp),t.ya()),null!==this.p2pSuccSent&&void 0!==this.p2pSuccSent&&(t.ga("p2pSuccSent",r.bs.Ps,8),t.Cc(this.p2pSuccSent),t.ya()),null!==this.p2pSuccSentLow&&void 0!==this.p2pSuccSentLow&&(t.ga("p2pSuccSentLow",r.bs.Ps,9),t.Cc(this.p2pSuccSentLow),t.ya()),null!==this.p2pFailSent&&void 0!==this.p2pFailSent&&(t.ga("p2pFailSent",r.bs.Ps,12),t.Cc(this.p2pFailSent),t.ya()),t.wa(),t.Ta()},hive.snapshots.PartnerMetrics=function(t){this.rateReceived=null,this.rateSent=null,this.handshakeDelay=null,t&&(void 0!==t.rateReceived&&(this.rateReceived=t.rateReceived),void 0!==t.rateSent&&(this.rateSent=t.rateSent),void 0!==t.handshakeDelay&&(this.handshakeDelay=t.handshakeDelay))},hive.snapshots.PartnerMetrics.prototype={},hive.snapshots.PartnerMetrics.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.ks?this.rateReceived=t.Yc().value:t.pa(i);break;case 2:i==r.bs.ks?this.rateSent=t.Yc().value:t.pa(i);break;case 3:i==r.bs.Ps?this.handshakeDelay=t.$c().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.PartnerMetrics.prototype.write=function(t){t.fa("PartnerMetrics"),null!==this.rateReceived&&void 0!==this.rateReceived&&(t.ga("rateReceived",r.bs.ks,1),t.Oc(this.rateReceived),t.ya()),null!==this.rateSent&&void 0!==this.rateSent&&(t.ga("rateSent",r.bs.ks,2),t.Oc(this.rateSent),t.ya()),null!==this.handshakeDelay&&void 0!==this.handshakeDelay&&(t.ga("handshakeDelay",r.bs.Ps,3),t.Cc(this.handshakeDelay),t.ya()),t.wa(),t.Ta()},hive.snapshots.ConnectivityInfo=function(t){this.upBW=null,this.downBW=null,this.externalAs=null,this.internalAs=null,this.publicIp=null,this.privateIp=null,t&&(void 0!==t.upBW&&(this.upBW=t.upBW),void 0!==t.downBW&&(this.downBW=t.downBW),void 0!==t.externalAs&&(this.externalAs=t.externalAs),void 0!==t.internalAs&&(this.internalAs=t.internalAs),void 0!==t.publicIp&&(this.publicIp=t.publicIp),void 0!==t.privateIp&&(this.privateIp=t.privateIp))},hive.snapshots.ConnectivityInfo.prototype={},hive.snapshots.ConnectivityInfo.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Os?this.upBW=t.ua().value:t.pa(i);break;case 2:i==r.bs.Os?this.downBW=t.ua().value:t.pa(i);break;case 3:i==r.bs.Os?this.externalAs=t.ua().value:t.pa(i);break;case 4:i==r.bs.Os?this.internalAs=t.ua().value:t.pa(i);break;case 5:i==r.bs.As?this.publicIp=t.ha().value:t.pa(i);break;case 6:i==r.bs.As?this.privateIp=t.ha().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.ConnectivityInfo.prototype.write=function(t){t.fa("ConnectivityInfo"),null!==this.upBW&&void 0!==this.upBW&&(t.ga("upBW",r.bs.Os,1),t.ma(this.upBW),t.ya()),null!==this.downBW&&void 0!==this.downBW&&(t.ga("downBW",r.bs.Os,2),t.ma(this.downBW),t.ya()),null!==this.externalAs&&void 0!==this.externalAs&&(t.ga("externalAs",r.bs.Os,3),t.ma(this.externalAs),t.ya()),null!==this.internalAs&&void 0!==this.internalAs&&(t.ga("internalAs",r.bs.Os,4),t.ma(this.internalAs),t.ya()),null!==this.publicIp&&void 0!==this.publicIp&&(t.ga("publicIp",r.bs.As,5),t.va(this.publicIp),t.ya()),null!==this.privateIp&&void 0!==this.privateIp&&(t.ga("privateIp",r.bs.As,6),t.va(this.privateIp),t.ya()),t.wa(),t.Ta()},hive.snapshots.Partner=function(t){this.connInfo=null,this.traffic=null,this.metrics=null,this.inPart=null,this.outPart=null,this.udp=null,t&&(void 0!==t.connInfo&&(this.connInfo=t.connInfo),void 0!==t.traffic&&(this.traffic=t.traffic),void 0!==t.metrics&&(this.metrics=t.metrics),void 0!==t.inPart&&(this.inPart=t.inPart),void 0!==t.outPart&&(this.outPart=t.outPart),void 0!==t.udp&&(this.udp=t.udp))},hive.snapshots.Partner.prototype={},hive.snapshots.Partner.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.xs?(this.connInfo=new hive.snapshots.ConnectivityInfo,this.connInfo.read(t)):t.pa(i);break;case 2:i==r.bs.xs?(this.traffic=new hive.snapshots.PartnerTraffic,this.traffic.read(t)):t.pa(i);break;case 3:i==r.bs.xs?(this.metrics=new hive.snapshots.PartnerMetrics,this.metrics.read(t)):t.pa(i);break;case 4:i==r.bs.BOOL?this.inPart=t.Gc().value:t.pa(i);break;case 5:i==r.bs.BOOL?this.outPart=t.Gc().value:t.pa(i);break;case 6:i==r.bs.BOOL?this.udp=t.Gc().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.Partner.prototype.write=function(t){t.fa("Partner"),null!==this.connInfo&&void 0!==this.connInfo&&(t.ga("connInfo",r.bs.xs,1),this.connInfo.write(t),t.ya()),null!==this.traffic&&void 0!==this.traffic&&(t.ga("traffic",r.bs.xs,2),this.traffic.write(t),t.ya()),null!==this.metrics&&void 0!==this.metrics&&(t.ga("metrics",r.bs.xs,3),this.metrics.write(t),t.ya()),null!==this.inPart&&void 0!==this.inPart&&(t.ga("inPart",r.bs.BOOL,4),t.Ic(this.inPart),t.ya()),null!==this.outPart&&void 0!==this.outPart&&(t.ga("outPart",r.bs.BOOL,5),t.Ic(this.outPart),t.ya()),null!==this.udp&&void 0!==this.udp&&(t.ga("udp",r.bs.BOOL,6),t.Ic(this.udp),t.ya()),t.wa(),t.Ta()},hive.snapshots.StreamInfo=function(t){this.url=null,this.streamType=null,this.streamProtocol=null,t&&(void 0!==t.url&&(this.url=t.url),void 0!==t.streamType&&(this.streamType=t.streamType),void 0!==t.streamProtocol&&(this.streamProtocol=t.streamProtocol))},hive.snapshots.StreamInfo.prototype={},hive.snapshots.StreamInfo.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.As?this.url=t.ha().value:t.pa(i);break;case 2:i==r.bs.Os?this.streamType=t.ua().value:t.pa(i);break;case 3:i==r.bs.Os?this.streamProtocol=t.ua().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.StreamInfo.prototype.write=function(t){t.fa("StreamInfo"),null!==this.url&&void 0!==this.url&&(t.ga("url",r.bs.As,1),t.va(this.url),t.ya()),null!==this.streamType&&void 0!==this.streamType&&(t.ga("streamType",r.bs.Os,2),t.ma(this.streamType),t.ya()),null!==this.streamProtocol&&void 0!==this.streamProtocol&&(t.ga("streamProtocol",r.bs.Os,3),t.ma(this.streamProtocol),t.ya()),t.wa(),t.Ta()},hive.snapshots.ClientInfo=function(t){this.clientType=null,this.majorVersion=null,this.minorVersion=null,this.patchVersion=null,t&&(void 0!==t.clientType&&(this.clientType=t.clientType),void 0!==t.majorVersion&&(this.majorVersion=t.majorVersion),void 0!==t.minorVersion&&(this.minorVersion=t.minorVersion),void 0!==t.patchVersion&&(this.patchVersion=t.patchVersion))},hive.snapshots.ClientInfo.prototype={},hive.snapshots.ClientInfo.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Os?this.clientType=t.ua().value:t.pa(i);break;case 2:i==r.bs.BYTE?this.majorVersion=t.zc().value:t.pa(i);break;case 3:i==r.bs.BYTE?this.minorVersion=t.zc().value:t.pa(i);break;case 4:i==r.bs.Cs?this.patchVersion=t.Wc().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.ClientInfo.prototype.write=function(t){t.fa("ClientInfo"),null!==this.clientType&&void 0!==this.clientType&&(t.ga("clientType",r.bs.Os,1),t.ma(this.clientType),t.ya()),null!==this.majorVersion&&void 0!==this.majorVersion&&(t.ga("majorVersion",r.bs.BYTE,2),t.Rc(this.majorVersion),t.ya()),null!==this.minorVersion&&void 0!==this.minorVersion&&(t.ga("minorVersion",r.bs.BYTE,3),t.Rc(this.minorVersion),t.ya()),null!==this.patchVersion&&void 0!==this.patchVersion&&(t.ga("patchVersion",r.bs.Cs,4),t.kc(this.patchVersion),t.ya()),t.wa(),t.Ta()},hive.snapshots.AgentInfo=function(t){this.firstTierBitrates=null,this.secondTierBitrates=null,t&&(void 0!==t.firstTierBitrates&&(this.firstTierBitrates=t.firstTierBitrates),void 0!==t.secondTierBitrates&&(this.secondTierBitrates=t.secondTierBitrates))},hive.snapshots.AgentInfo.prototype={},hive.snapshots.AgentInfo.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:if(i==r.bs.Fs){var o,s=0;this.firstTierBitrates=[];var a=0;o=t.Jc(),a=o.Qc,s=o.size;for(var c=0;c<s;++c){var h=null;h=t.ua().value,this.firstTierBitrates.push(h)}t.Kc()}else t.pa(i);break;case 2:if(i==r.bs.Fs){var p,u=0;this.secondTierBitrates=[];var l=0;p=t.Jc(),l=p.Qc,u=p.size;for(var d=0;d<u;++d){var f=null;f=t.ua().value,this.secondTierBitrates.push(f)}t.Kc()}else t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.AgentInfo.prototype.write=function(t){
  if(t.fa("AgentInfo"),null!==this.firstTierBitrates&&void 0!==this.firstTierBitrates){t.ga("firstTierBitrates",r.bs.Fs,1),t.bc(r.bs.Os,this.firstTierBitrates.length);for(var e in this.firstTierBitrates)this.firstTierBitrates.hasOwnProperty(e)&&(e=this.firstTierBitrates[e],t.ma(e));t.Ec(),t.ya()}if(null!==this.secondTierBitrates&&void 0!==this.secondTierBitrates){t.ga("secondTierBitrates",r.bs.Fs,2),t.bc(r.bs.Os,this.secondTierBitrates.length);for(var i in this.secondTierBitrates)this.secondTierBitrates.hasOwnProperty(i)&&(i=this.secondTierBitrates[i],t.ma(i));t.Ec(),t.ya()}t.wa(),t.Ta()},hive.snapshots.TrafficKey=function(t){this.bitrate=null,this.AS=null,this.partnerGuid=null,t&&(void 0!==t.bitrate&&(this.bitrate=t.bitrate),void 0!==t.AS&&(this.AS=t.AS),void 0!==t.partnerGuid&&(this.partnerGuid=t.partnerGuid))},hive.snapshots.TrafficKey.prototype={},hive.snapshots.TrafficKey.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Os?this.bitrate=t.ua().value:t.pa(i);break;case 2:i==r.bs.Os?this.AS=t.ua().value:t.pa(i);break;case 3:i==r.bs.As?this.partnerGuid=t.ha().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.TrafficKey.prototype.write=function(t){t.fa("TrafficKey"),null!==this.bitrate&&void 0!==this.bitrate&&(t.ga("bitrate",r.bs.Os,1),t.ma(this.bitrate),t.ya()),null!==this.AS&&void 0!==this.AS&&(t.ga("AS",r.bs.Os,2),t.ma(this.AS),t.ya()),null!==this.partnerGuid&&void 0!==this.partnerGuid&&(t.ga("partnerGuid",r.bs.As,3),t.va(this.partnerGuid),t.ya()),t.wa(),t.Ta()},hive.snapshots.PartnerKey=function(t){this.bitrate=null,this.AS=null,this.partnerGuid=null,t&&(void 0!==t.bitrate&&(this.bitrate=t.bitrate),void 0!==t.AS&&(this.AS=t.AS),void 0!==t.partnerGuid&&(this.partnerGuid=t.partnerGuid))},hive.snapshots.PartnerKey.prototype={},hive.snapshots.PartnerKey.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Os?this.bitrate=t.ua().value:t.pa(i);break;case 2:i==r.bs.Os?this.AS=t.ua().value:t.pa(i);break;case 3:i==r.bs.As?this.partnerGuid=t.ha().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.PartnerKey.prototype.write=function(t){t.fa("PartnerKey"),null!==this.bitrate&&void 0!==this.bitrate&&(t.ga("bitrate",r.bs.Os,1),t.ma(this.bitrate),t.ya()),null!==this.AS&&void 0!==this.AS&&(t.ga("AS",r.bs.Os,2),t.ma(this.AS),t.ya()),null!==this.partnerGuid&&void 0!==this.partnerGuid&&(t.ga("partnerGuid",r.bs.As,3),t.va(this.partnerGuid),t.ya()),t.wa(),t.Ta()},hive.snapshots.Player=function(t){this.bufferingN=null,this.bufferingMs=null,this.initBufferingN=null,this.initBufferingMs=null,this.seekBufferingN=null,this.seekBufferingMs=null,this.playerBufferMs=null,t&&(void 0!==t.bufferingN&&(this.bufferingN=t.bufferingN),void 0!==t.bufferingMs&&(this.bufferingMs=t.bufferingMs),void 0!==t.initBufferingN&&(this.initBufferingN=t.initBufferingN),void 0!==t.initBufferingMs&&(this.initBufferingMs=t.initBufferingMs),void 0!==t.seekBufferingN&&(this.seekBufferingN=t.seekBufferingN),void 0!==t.seekBufferingMs&&(this.seekBufferingMs=t.seekBufferingMs),void 0!==t.playerBufferMs&&(this.playerBufferMs=t.playerBufferMs))},hive.snapshots.Player.prototype={},hive.snapshots.Player.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Cs?this.bufferingN=t.Wc().value:t.pa(i);break;case 2:i==r.bs.Os?this.bufferingMs=t.ua().value:t.pa(i);break;case 3:i==r.bs.Cs?this.initBufferingN=t.Wc().value:t.pa(i);break;case 4:i==r.bs.Os?this.initBufferingMs=t.ua().value:t.pa(i);break;case 5:i==r.bs.Cs?this.seekBufferingN=t.Wc().value:t.pa(i);break;case 6:i==r.bs.Os?this.seekBufferingMs=t.ua().value:t.pa(i);break;case 36:i==r.bs.Os?this.playerBufferMs=t.ua().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.Player.prototype.write=function(t){t.fa("Player"),null!==this.bufferingN&&void 0!==this.bufferingN&&(t.ga("bufferingN",r.bs.Cs,1),t.kc(this.bufferingN),t.ya()),null!==this.bufferingMs&&void 0!==this.bufferingMs&&(t.ga("bufferingMs",r.bs.Os,2),t.ma(this.bufferingMs),t.ya()),null!==this.initBufferingN&&void 0!==this.initBufferingN&&(t.ga("initBufferingN",r.bs.Cs,3),t.kc(this.initBufferingN),t.ya()),null!==this.initBufferingMs&&void 0!==this.initBufferingMs&&(t.ga("initBufferingMs",r.bs.Os,4),t.ma(this.initBufferingMs),t.ya()),null!==this.seekBufferingN&&void 0!==this.seekBufferingN&&(t.ga("seekBufferingN",r.bs.Cs,5),t.kc(this.seekBufferingN),t.ya()),null!==this.seekBufferingMs&&void 0!==this.seekBufferingMs&&(t.ga("seekBufferingMs",r.bs.Os,6),t.ma(this.seekBufferingMs),t.ya()),null!==this.playerBufferMs&&void 0!==this.playerBufferMs&&(t.ga("playerBufferMs",r.bs.Os,36),t.ma(this.playerBufferMs),t.ya()),t.wa(),t.Ta()},hive.snapshots.MetricSnapshot=function(t){this.timestamp=null,this.guid=null,this.eventId=null,this.streamInfo=null,this.metrics=null,this.traffic=null,this.snapshotInfo=null,this.agentInfo=null,this.connInfo=null,this.partners=null,this.player=null,this.client=null,this.sessionId=null,t&&(void 0!==t.timestamp&&(this.timestamp=t.timestamp),void 0!==t.guid&&(this.guid=t.guid),void 0!==t.eventId&&(this.eventId=t.eventId),void 0!==t.streamInfo&&(this.streamInfo=t.streamInfo),void 0!==t.metrics&&(this.metrics=t.metrics),void 0!==t.traffic&&(this.traffic=t.traffic),void 0!==t.snapshotInfo&&(this.snapshotInfo=t.snapshotInfo),void 0!==t.agentInfo&&(this.agentInfo=t.agentInfo),void 0!==t.connInfo&&(this.connInfo=t.connInfo),void 0!==t.partners&&(this.partners=t.partners),void 0!==t.player&&(this.player=t.player),void 0!==t.client&&(this.client=t.client),void 0!==t.sessionId&&(this.sessionId=t.sessionId))},hive.snapshots.MetricSnapshot.prototype={},hive.snapshots.MetricSnapshot.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Ps?this.timestamp=t.$c().value:t.pa(i);break;case 2:i==r.bs.As?this.guid=t.ha().value:t.pa(i);break;case 3:i==r.bs.xs?(this.eventId=new EventId,this.eventId.read(t)):t.pa(i);break;case 4:i==r.bs.xs?(this.streamInfo=new hive.snapshots.StreamInfo,this.streamInfo.read(t)):t.pa(i);break;case 5:i==r.bs.xs?(this.metrics=new hive.snapshots.Metrics,this.metrics.read(t)):t.pa(i);break;case 6:if(i==r.bs.Bs){var o,s=0;this.traffic={};var a=0,c=0;o=t.Lc(),a=o.Mc,c=o.jc,s=o.size;for(var h=0;h<s;++h){h>0&&t.Nc.length>t.Ra[t.Ra.length-1]+1&&t.Nc.pop();var p=null,u=null;p=new hive.snapshots.TrafficKey,p.read(t),u=new hive.snapshots.Traffic,u.read(t),this.traffic[p]=u}t.Uc()}else t.pa(i);break;case 7:i==r.bs.xs?(this.snapshotInfo=new SnapshotInfo,this.snapshotInfo.read(t)):t.pa(i);break;case 8:i==r.bs.xs?(this.agentInfo=new hive.snapshots.AgentInfo,this.agentInfo.read(t)):t.pa(i);break;case 9:i==r.bs.xs?(this.connInfo=new hive.snapshots.ConnectivityInfo,this.connInfo.read(t)):t.pa(i);break;case 10:if(i==r.bs.Bs){var l,d=0;this.partners={};var f=0,g=0;l=t.Lc(),f=l.Mc,g=l.jc,d=l.size;for(var v=0;v<d;++v){v>0&&t.Nc.length>t.Ra[t.Ra.length-1]+1&&t.Nc.pop();var y=null,m=null;y=new hive.snapshots.PartnerKey,y.read(t),m=new hive.snapshots.Partner,m.read(t),this.partners[y]=m}t.Uc()}else t.pa(i);break;case 11:i==r.bs.xs?(this.player=new hive.snapshots.Player,this.player.read(t)):t.pa(i);break;case 12:i==r.bs.xs?(this.client=new hive.snapshots.ClientInfo,this.client.read(t)):t.pa(i);break;case 13:i==r.bs.As?this.sessionId=t.ha().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.MetricSnapshot.prototype.write=function(t){if(t.fa("MetricSnapshot"),null!==this.timestamp&&void 0!==this.timestamp&&(t.ga("timestamp",r.bs.Ps,1),t.Cc(this.timestamp),t.ya()),null!==this.guid&&void 0!==this.guid&&(t.ga("guid",r.bs.As,2),t.va(this.guid),t.ya()),null!==this.eventId&&void 0!==this.eventId&&(t.ga("eventId",r.bs.xs,3),this.eventId.write(t),t.ya()),null!==this.streamInfo&&void 0!==this.streamInfo&&(t.ga("streamInfo",r.bs.xs,4),this.streamInfo.write(t),t.ya()),null!==this.metrics&&void 0!==this.metrics&&(t.ga("metrics",r.bs.xs,5),this.metrics.write(t),t.ya()),null!==this.traffic&&void 0!==this.traffic){t.ga("traffic",r.bs.Bs,6),t.mc(r.bs.xs,r.bs.xs,r.Qs(this.traffic));for(var e=0;e<this.traffic.length;e++){var i=this.traffic[e],n=i.key,o=i.value;n.write(t),o.write(t)}t.wc(),t.ya()}if(null!==this.snapshotInfo&&void 0!==this.snapshotInfo&&(t.ga("snapshotInfo",r.bs.xs,7),this.snapshotInfo.write(t),t.ya()),null!==this.agentInfo&&void 0!==this.agentInfo&&(t.ga("agentInfo",r.bs.xs,8),this.agentInfo.write(t),t.ya()),null!==this.connInfo&&void 0!==this.connInfo&&(t.ga("connInfo",r.bs.xs,9),this.connInfo.write(t),t.ya()),null!==this.partners&&void 0!==this.partners){t.ga("partners",r.bs.Bs,10),t.mc(r.bs.xs,r.bs.xs,r.Qs(this.partners));for(var e=0;e<this.partners.length;e++){var i=this.partners[e],s=i.key,a=i.value;s.write(t),a.write(t)}t.wc(),t.ya()}null!==this.player&&void 0!==this.player&&(t.ga("player",r.bs.xs,11),this.player.write(t),t.ya()),null!==this.client&&void 0!==this.client&&(t.ga("client",r.bs.xs,12),this.client.write(t),t.ya()),null!==this.sessionId&&void 0!==this.sessionId&&(t.ga("sessionId",r.bs.As,13),t.va(this.sessionId),t.ya()),t.wa(),t.Ta()},hive.snapshots.JsonMetricSnapshot=function(t){this.timestamp=null,this.guid=null,this.eventId=null,this.streamInfo=null,this.metrics=null,this.traffic=null,this.snapshotInfo=null,this.agentInfo=null,this.connInfo=null,this.partners=null,this.player=null,this.client=null,this.sessionId=null,t&&(void 0!==t.timestamp&&(this.timestamp=t.timestamp),void 0!==t.guid&&(this.guid=t.guid),void 0!==t.eventId&&(this.eventId=t.eventId),void 0!==t.streamInfo&&(this.streamInfo=t.streamInfo),void 0!==t.metrics&&(this.metrics=t.metrics),void 0!==t.traffic&&(this.traffic=t.traffic),void 0!==t.snapshotInfo&&(this.snapshotInfo=t.snapshotInfo),void 0!==t.agentInfo&&(this.agentInfo=t.agentInfo),void 0!==t.connInfo&&(this.connInfo=t.connInfo),void 0!==t.partners&&(this.partners=t.partners),void 0!==t.player&&(this.player=t.player),void 0!==t.client&&(this.client=t.client),void 0!==t.sessionId&&(this.sessionId=t.sessionId))},hive.snapshots.JsonMetricSnapshot.prototype={},hive.snapshots.JsonMetricSnapshot.prototype.read=function(t){for(t.Hc();;){var e=t.sa(),i=(e.Bc,e.aa),n=e.ca;if(i==r.bs.Es)break;switch(n){case 1:i==r.bs.Ps?this.timestamp=t.$c().value:t.pa(i);break;case 2:i==r.bs.As?this.guid=t.ha().value:t.pa(i);break;case 3:i==r.bs.xs?(this.eventId=new EventId,this.eventId.read(t)):t.pa(i);break;case 4:i==r.bs.xs?(this.streamInfo=new hive.snapshots.StreamInfo,this.streamInfo.read(t)):t.pa(i);break;case 5:i==r.bs.xs?(this.metrics=new hive.snapshots.Metrics,this.metrics.read(t)):t.pa(i);break;case 6:if(i==r.bs.Bs){var o,s=0;this.traffic={};var a=0,c=0;o=t.Lc(),a=o.Mc,c=o.jc,s=o.size;for(var h=0;h<s;++h){h>0&&t.Nc.length>t.Ra[t.Ra.length-1]+1&&t.Nc.pop();var p=null,u=null;p=t.ha().value,u=new hive.snapshots.Traffic,u.read(t),this.traffic[p]=u}t.Uc()}else t.pa(i);break;case 7:i==r.bs.xs?(this.snapshotInfo=new SnapshotInfo,this.snapshotInfo.read(t)):t.pa(i);break;case 8:i==r.bs.xs?(this.agentInfo=new hive.snapshots.AgentInfo,this.agentInfo.read(t)):t.pa(i);break;case 9:i==r.bs.xs?(this.connInfo=new hive.snapshots.ConnectivityInfo,this.connInfo.read(t)):t.pa(i);break;case 10:if(i==r.bs.Bs){var l,d=0;this.partners={};var f=0,g=0;l=t.Lc(),f=l.Mc,g=l.jc,d=l.size;for(var v=0;v<d;++v){v>0&&t.Nc.length>t.Ra[t.Ra.length-1]+1&&t.Nc.pop();var y=null,m=null;y=t.ha().value,m=new hive.snapshots.Partner,m.read(t),this.partners[y]=m}t.Uc()}else t.pa(i);break;case 11:i==r.bs.xs?(this.player=new hive.snapshots.Player,this.player.read(t)):t.pa(i);break;case 12:i==r.bs.xs?(this.client=new hive.snapshots.ClientInfo,this.client.read(t)):t.pa(i);break;case 13:i==r.bs.As?this.sessionId=t.ha().value:t.pa(i);break;default:t.pa(i)}t.la()}t.da()},hive.snapshots.JsonMetricSnapshot.prototype.write=function(t){if(t.fa("JsonMetricSnapshot"),null!==this.timestamp&&void 0!==this.timestamp&&(t.ga("timestamp",r.bs.Ps,1),t.Cc(this.timestamp),t.ya()),null!==this.guid&&void 0!==this.guid&&(t.ga("guid",r.bs.As,2),t.va(this.guid),t.ya()),null!==this.eventId&&void 0!==this.eventId&&(t.ga("eventId",r.bs.xs,3),this.eventId.write(t),t.ya()),null!==this.streamInfo&&void 0!==this.streamInfo&&(t.ga("streamInfo",r.bs.xs,4),this.streamInfo.write(t),t.ya()),null!==this.metrics&&void 0!==this.metrics&&(t.ga("metrics",r.bs.xs,5),this.metrics.write(t),t.ya()),null!==this.traffic&&void 0!==this.traffic){t.ga("traffic",r.bs.Bs,6),t.mc(r.bs.As,r.bs.xs,r.Qs(this.traffic));for(var e in this.traffic)if(this.traffic.hasOwnProperty(e)){var i=this.traffic[e];t.va(e),i.write(t)}t.wc(),t.ya()}if(null!==this.snapshotInfo&&void 0!==this.snapshotInfo&&(t.ga("snapshotInfo",r.bs.xs,7),this.snapshotInfo.write(t),t.ya()),null!==this.agentInfo&&void 0!==this.agentInfo&&(t.ga("agentInfo",r.bs.xs,8),this.agentInfo.write(t),t.ya()),null!==this.connInfo&&void 0!==this.connInfo&&(t.ga("connInfo",r.bs.xs,9),this.connInfo.write(t),t.ya()),null!==this.partners&&void 0!==this.partners){t.ga("partners",r.bs.Bs,10),t.mc(r.bs.As,r.bs.xs,r.Qs(this.partners));for(var n in this.partners)if(this.partners.hasOwnProperty(n)){var o=this.partners[n];t.va(n),o.write(t)}t.wc(),t.ya()}null!==this.player&&void 0!==this.player&&(t.ga("player",r.bs.xs,11),this.player.write(t),t.ya()),null!==this.client&&void 0!==this.client&&(t.ga("client",r.bs.xs,12),this.client.write(t),t.ya()),null!==this.sessionId&&void 0!==this.sessionId&&(t.ga("sessionId",r.bs.As,13),t.va(this.sessionId),t.ya()),t.wa(),t.Ta()}},function(t,e){/*! collections.min.js v 3.0.0 github.com/montagejs/collections */
  !function(t){function e(){throw Error("Can't construct. GenericCollection is a mixin.")}function i(){throw Error("Can't construct. GenericSet is a mixin.")}function r(){}function n(){throw Error("This is an abstract interface. Mix it. Don't construct it")}function o(){throw Error("Can't construct. RangeChanges is a mixin.")}function s(){throw Error("Can't construct. GenericOrder is a mixin.")}function a(t){if(!(this instanceof a))return new a(t);if(Array.isArray(t)||"string"==typeof t)return a.Df(t);if(t=lt(t),t instanceof a)return t;if(t.next)this.next=function(){return t.next()};else if(t.Df){var e=t.Df();this.next=function(){return e.next()}}else{if("[object Function]"!==lt.prototype.toString.call(t))throw new TypeError("Cannot iterate");this.next=t}}function c(t,e,i){this.Hf=t,this.start=null==e?0:e,this.end=i}function h(t,e,i){if(!(this instanceof h))return new h(t,e,i);var r=this.head=new this.Node;r.next=r,r.Lf=r,this.Mf=e||Object.ol,this.content=i||Function.jf,this.length=0,this.addEach(t)}function p(t){this.head=t,this.Uf=t.next}function u(t){this.value=t,this.next=this.Lf=null}function l(){throw Error("Can't construct. MapChanges is a mixin.")}function d(){throw Error("Can't construct. GenericMap is a mixin.")}function f(t,e){return this instanceof f?(this.content=e||Function.jf,this.Vf={},this.length=0,void this.addEach(t)):new f(t,e)}function g(t,e,i,r){return this instanceof g?(e=e||Object.ol,i=i||Object.hash,r=r||Function.jf,this.Mf=e,this.Qf=i,this.content=r,this.qf=new this.Jf(null,this.Kf),this.length=0,void this.addEach(t)):new g(t,e,i)}function v(t,e,i,r){return this instanceof v?(e=e||Object.ol,i=i||Object.hash,r=r||Function.jf,this.Mf=e,this.Qf=i,this.content=r,this.Vf=new Mt((void 0),function(t,i){return e(t.key,i.key)},function(t){return i(t.key)}),this.length=0,void this.addEach(t)):new v(t,e,i)}function y(t,e,i,r){return this instanceof y?(e=e||Object.ol,i=i||Object.hash,r=r||Function.jf,this.Mf=e,this.Qf=i,this.content=r,this.order=new this.Gf((void 0),e),this.Vf=new this.zf((void 0),function(t,i){return e(t.value,i.value)},function(t){return i(t.value)}),this.length=0,void this.addEach(t)):new y(t,e,i)}function m(t,e,i,r,n){return this instanceof m?(e=e||1/0,i=i||Object.ol,r=r||Object.hash,n=n||Function.jf,this.Vf=new Yt((void 0),i,r),this.Mf=i,this.Qf=r,this.content=n,this.maxLength=e,this.length=0,void this.addEach(t)):new m(t,e,i,r)}function w(t,e,i,r,n){return this instanceof w?(i=i||Object.ol,r=r||Object.hash,n=n||Function.jf,this.Mf=i,this.Qf=r,this.content=n,this.Vf=new ie((void 0),e,function(t,e){return i(t.key,e.key)},function(t){return r(t.key)}),this.length=0,void this.addEach(t)):new w(t,e,i,r)}function T(t,e,i,r){return this instanceof T?(e=e||Object.ol,i=i||Object.hash,r=r||Function.jf,this.Mf=e,this.Qf=i,this.content=r,this.Vf=new ae((void 0),function(t,i){return e(t.key,i.key)},function(t){return i(t.key)}),this.length=0,void this.addEach(t)):new T(t,e,i)}function S(t,e,i,r){return this instanceof S?(this.Wf=e||this.Wf,void le.call(this,t,i,r,function(t){var e=this.Wf();return le.prototype.set.call(this,t,e),e})):new S(t,e,i,r)}function b(t,e,i,r){return this instanceof b?(Array.isArray(t)?(this.Hf=t,t=t.splice(0,t.length)):this.Hf=[],this.Mf=e||Object.ol,this.$f=i||Object.Yf,this.content=r||Function.jf,this.length=0,void this.addEach(t)):new b(t,e,i,r)}function E(t,e,i){for(var r=0,n=t.length-1;r<=n;){var o=r+n>>1,s=i(e,t[o]);if(0<s)r=o+1;else{if(!(0>s))return o;n=o-1}}return-(r+1)}function I(t,e,i,r){if(i=E(t,e,i),0>i)return-1;for(;0<i&&r(e,t[i-1]);)i--;return r(e,t[i])?i:-1}function R(t,e,i,r){if(i=E(t,e,i),0>i)return-1;for(;i<t.length-1&&r(e,t[i+1]);)i++;return r(e,t[i])?i:-1}function k(t,e,i,r){return this instanceof k?void ye.call(this,t,e,i,r):new k(t,e,i,r)}function C(t,e,i,r){return this instanceof C?(e=e||Object.ol,i=i||Object.Yf,r=r||Function.jf,this.Mf=e,this.$f=i,this.content=r,this.Vf=new Se(null,function(t,i){return e(t.key,i.key)},function(t,e){return i(t.key,e.key)}),this.length=0,void this.addEach(t)):new C(t,e,i,r)}function O(t,e,i,r){return this instanceof O?(this.Mf=e||Object.ol,this.$f=i||Object.Yf,this.content=r||Function.jf,this.root=null,this.length=0,void this.addEach(t)):new O(t,e,i,r)}function P(t){this.value=t,this.right=this.left=null,this.length=1}function A(t,e,i){this.set=t,this.Lf=null,this.end=i,e&&(t=this.set.Xf(e))&&(this.set.Zf(t.value),this.Lf=t.tg())}function N(t,e,i,r){return this instanceof N?(e=e||Object.ol,i=i||Object.Yf,r=r||Function.jf,this.Mf=e,this.$f=i,this.content=r,this.Vf=new Ne(null,function(t,i){return e(t.key,i.key)},function(t,e){return i(t.key,e.key)}),this.length=0,void this.addEach(t)):new N(t,e,i,r)}var x={};x.eg=e,e.prototype.addEach=function(t){if(t&&Object(t)===t)if("function"==typeof t.forEach)t.forEach(this.add,this);else if("number"==typeof t.length)for(var e=0;e<t.length;e++)this.add(t[e],e);else Object.keys(t).forEach(function(e){this.add(t[e],e)},this)},e.prototype.ig=function(t){t.forEach(function(t){this["delete"](t)},this)},e.prototype.forEach=function(t,e){return this.reduce(function(i,r,n,o,s){t.call(e,r,n,o,s)},void 0)},e.prototype.map=function(t,e){var i=[];return this.reduce(function(r,n,o,s,a){i.push(t.call(e,n,o,s,a))},void 0),i},e.prototype.toArray=function(){return this.map(Function.identity)},e.prototype.rg=function(){var t={};return this.reduce(function(e,i,r){t[r]=i},void 0),t},e.prototype.filter=function(t,e){var i=this.ng();return this.reduce(function(r,n,o,s,a){t.call(e,n,o,s,a)&&i.add(n)},void 0),i},e.prototype.every=function(t,e){return this.reduce(function(i,r,n,o,s){return i&&t.call(e,r,n,o,s)},!0)},e.prototype.some=function(t,e){return this.reduce(function(i,r,n,o,s){return i||t.call(e,r,n,o,s)},!1)},e.prototype.all=function(){return this.every(Boolean)},e.prototype.ie=function(){return this.some(Boolean)},e.prototype.min=function(t){return t=this.$f||Object.Yf,this.reduce(function(e,i){return 0>t(i,e)?i:e},1/0)},e.prototype.max=function(t){return t=this.$f||Object.Yf,this.reduce(function(e,i){return 0<t(i,e)?i:e},-(1/0))},e.prototype.og=function(t){return this.reduce(function(t,e){return t+e},void 0===t?0:t)},e.prototype.sg=function(t){var e=void 0===t?0:t,i=void 0===t?0:t;return this.reduce(function(t,r){e+=r,i+=1},void 0),e/i},e.prototype.concat=function(){for(var t=this.ng(this),e=0;e<arguments.length;e++)t.addEach(arguments[e]);return t},e.prototype.ag=function(){var t=this;return this.reduce(function(e,i){return i.forEach(function(t){this.push(t)},e,t),e},[])},e.prototype.cg=function(){var t=Array.prototype.slice.call(arguments);t.unshift(this);for(var e=[],i=1/0,r=0;r<t.length;r++){var n=t[r];t[r]=n.toArray(),n.length<i&&(i=n.length)}for(r=0;r<t.length;r++)for(var n=t[r],o=0;o<n.length;o++)o<i&&o in n&&(e[o]=e[o]||[],e[o][r]=n[o]);return e},e.prototype.hg=function(t,e,i){return t=t||this.$f||Object.Yf,t.pg?(e=t.pg,t=t.Yf||this.$f||Object.Yf):e=e||Function.identity,void 0===i&&(i=1),this.map(function(t){return{pg:e(t),value:t}}).sort(function(e,r){return t(e.pg,r.pg)*i}).map(function(t){return t.value})},e.prototype.reversed=function(){return this.ng(this).reverse()},e.prototype.clone=function(t,e){if(void 0===t)t=1/0;else if(0===t)return this;var i=this.ng();return this.forEach(function(r,n){i.add(Object.clone(r,t-1,e),n)},this),i},e.prototype.only=function(){if(0===this.length)throw Error("Can't get only value in empty collection.");if(1<this.length)throw Error("Can't get only value in collection with multiple values.");return this.ug()},x.eg&&(x=x.eg);var B={};B.eg=i,i.prototype.lg=function(t){var e=this.ng(this);return e.addEach(t),e},i.prototype.dg=function(t){return this.ng(this.filter(function(e){return t.has(e)}))},i.prototype.fg=function(t){var e=this.ng(this);return e.ig(t),e},i.prototype.gg=function(t){var e=this.lg(t),t=this.dg(t);return e.fg(t)},i.prototype.ol=function(t,e){var i=this;return Object.vg(t,"reduce")&&this.length===t.length&&t.reduce(function(t,r){return t&&i.has(r,e)},!0)},B.eg&&(B=B.eg);var F=x,_=Object.prototype.toString;Array.isArray||(Array.isArray=function(t){return"[object Array]"==_.call(t)}),Array.prototype.forEach||(Array.prototype.forEach=F.forEach),Array.prototype.map||(Array.prototype.map=F.map),Array.prototype.filter||(Array.prototype.filter=F.filter),Array.prototype.every||(Array.prototype.every=F.every),Array.prototype.some||(Array.prototype.some=F.some),Array.prototype.reduce||(Array.prototype.reduce=function(t){var e=toObject(this),i=e.length>>>0;if("[object Function]"!=_.call(t))throw new TypeError(t+" is not a function");if(!i&&1==arguments.length)throw new TypeError("reduce of empty array with no initial value");var r,n=0;if(2<=arguments.length)r=arguments[1];else for(;;){if(n in e){r=e[n++];break}if(++n>=i)throw new TypeError("reduce of empty array with no initial value")}for(;n<i;n++)n in e&&(r=t.call(void 0,r,e[n],n,e));return r}),Array.prototype.reduceRight||(Array.prototype.reduceRight=function(t){var e=toObject(this),i=e.length>>>0;if("[object Function]"!=_.call(t))throw new TypeError(t+" is not a function");if(!i&&1==arguments.length)throw new TypeError("reduceRight of empty array with no initial value");var r,i=i-1;if(2<=arguments.length)r=arguments[1];else for(;;){if(i in e){r=e[i--];break}if(0>--i)throw new TypeError("reduceRight of empty array with no initial value")}do i in this&&(r=t.call(void 0,r,e[i],i,e));while(i--);return r}),Array.prototype.indexOf||(Array.prototype.indexOf=function(t){var e=toObject(this),i=e.length>>>0;if(!i)return-1;var r=0;for(1<arguments.length&&(r=toInteger(arguments[1])),r=0<=r?r:Math.max(0,i+r);r<i;r++)if(r in e&&e[r]===t)return r;return-1}),Array.prototype.lastIndexOf||(Array.prototype.lastIndexOf=function(t){var e=toObject(this),i=e.length>>>0;if(!i)return-1;var r=i-1;for(1<arguments.length&&(r=Math.min(r,toInteger(arguments[1]))),r=0<=r?r:i-Math.abs(r);0<=r;r--)if(r in e&&t===e[r])return r;return-1});var D={};D.eg=Function,Function.jf=function(){},Function.identity=function(t){return t},Function.pg=function(t,e){var e=e||Object.Yf,t=t||Function.identity,i=function(i,r){return e(t(i),t(r))};return i.Yf=e,i.pg=t,i},D.eg&&(D=D.eg);var H={};H.eg=r,r.yg={dg:"+",mg:"-",wg:"+",Tg:"+",Sg:".",bg:"'",Eg:"+",Ig:"|"},r.Rg={dg:"╋",mg:"━",wg:"┻",Tg:"┳",Sg:"╭",bg:"╰",Eg:"┣",Ig:"┃"},r.kg={dg:"╋",mg:"━",wg:"┻",Tg:"┳",Sg:"┏",bg:"┗",Eg:"┣",Ig:"┃"},H.eg&&(H=H.eg);var L,M={},j=M;if("undefined"!=typeof WeakMap)L=WeakMap;else{var U=function(t){return t.prototype=null,Object.freeze(t)},V=Object.getOwnPropertyNames,Q=Object.defineProperty,q={};V(Object).forEach(function(t){q[t]=Object[t]});var J="ident:"+Math.random()+"___";if("undefined"!=typeof crypto&&"function"==typeof crypto.getRandomValues&&"function"==typeof ArrayBuffer&&"function"==typeof Uint8Array){var K=new ArrayBuffer(25),K=new Uint8Array(K);crypto.getRandomValues(K),J="rand:"+Array.prototype.map.call(K,function(t){return(t%36).toString(36)}).join("")+"___"}Q(Object,"getOwnPropertyNames",{value:function(t){return V(t).filter(function(t){return t!==J})}}),"getPropertyNames"in Object&&Q(Object,"getPropertyNames",{value:function(t){return q.getPropertyNames(t).filter(function(t){return t!==J})}});var G=function(t){if(t!==Object(t))throw new TypeError("Not an object: "+t);var e=t[J];return e&&e.key===t?e:q.isExtensible(t)?(e={key:t,Cg:[],Og:[]},Q(t,J,{value:e,Pg:!1,Ag:!1,Ng:!1}),e):void 0},z=Object.freeze;Q(Object,"freeze",{value:function(t){return G(t),z(t)}});var W=Object.seal;Q(Object,"seal",{value:function(t){return G(t),W(t)}});var $=Object.preventExtensions;Q(Object,"preventExtensions",{value:function(t){return G(t),$(t)}});var Y=function(){function t(r,n){var o,s=G(r);return s?(o=s.Cg.indexOf(t),s=s.Og):(o=e.indexOf(r),s=i),0<=o?s[o]:n}var e=[],i=[];return Object.create(Y.prototype,{xg:{value:U(t)},Bg:{value:U(function(i){var r=G(i);return 0<=(r?r.Cg.indexOf(t):e.indexOf(i))})},Fg:{value:U(function(r,n){var o,s=G(r);s?(o=s.Cg.indexOf(t),0<=o?s.Og[o]=n:(s.Cg.push(t),s.Og.push(n))):(o=e.indexOf(r),0<=o?i[o]=n:(e.push(r),i.push(n)))})},_g:{value:U(function(r){var n=G(r);return n?(r=n.Cg.indexOf(t),0<=r&&(n.Cg.splice(r,1),n.Og.splice(r,1))):(r=e.indexOf(r),0<=r&&(e.splice(r,1),i.splice(r,1))),!0})}})};Y.prototype=Object.create(Object.prototype,{get:{value:function(t,e){return this.xg(t,e)},Pg:!0,Ng:!0},has:{value:function(t){return this.Bg(t)},Pg:!0,Ng:!0},set:{value:function(t,e){this.Fg(t,e)},Pg:!0,Ng:!0},"delete":{value:function(t){return this._g(t)},Pg:!0,Ng:!0}}),L=Y}j.eg=L,M.eg&&(M=M.eg);var X={},Z=M,tt=Object.prototype.hasOwnProperty,et=new Z,it=new Z;X.eg=n,n.prototype.Dg=function(t){et.has(this)||et.set(this,{});var e=et.get(this);return tt.call(e,t)||(e[t]={Hg:[],Lg:[]}),e[t]},n.prototype.Mg=function(t){if(!et.has(this))return!1;if(!t)return!0;var e=et.get(this);return!!tt.call(e,t)},n.prototype.jg=function(t,e,i){this.makeObservable&&!this.isObservable&&this.makeObservable();var r=n.Dg(this,t),i=i?r.Hg:r.Lg;n.Ug(this,t),i.push(e)},n.prototype.Vg=function(t,e){return n.jg(this,t,e,!0)},n.prototype.Qg=function(t,e,i){var r=n.Dg(this,t),i=i?r.Hg:r.Lg,e=i.lastIndexOf(e);if(-1===e)throw Error("Can't remove listener: does not exist.");i.splice(e,1),0===r.Lg.length+r.Hg.length&&n.qg(this,t)},n.prototype.Jg=function(t,e){return n.Qg(this,t,e,!0)},n.prototype.Kg=function(t,e,i){var r=n.Dg(this,t),r=i?r.Hg:r.Lg,i=(i?"Will":"")+"Change",o="handleProperty"+i,s=String(t),s=s&&s[0].toUpperCase()+s.slice(1),a="handle"+s+i;r.forEach(function(i){var r=i,i=i[a]||i[o]||i;i.call&&i.call(r,e,t,this)},this)},n.prototype.Gg=function(t,e){return n.Kg(this,t,e,!0)},n.prototype.Ug=function(t){if(!Array.isArray(this)){it.has(this)||(e={},it.set(this,e));var e=it.get(this);if(!tt.call(e,t)){var i,r=this;Object.getOwnPropertyDescriptor(r,t);do{if(i=Object.getOwnPropertyDescriptor(r,t))break;r=Object.getPrototypeOf(r)}while(r);if(i=i||{value:void 0,Ag:!0,Pg:!0,Ng:!0},!i.Ng)throw Error("Can't observe non-configurable properties");e[t]=i,(i.Pg||i.set)&&Object.defineProperty(this,t,"value"in i?{get:function(){return i.value},set:function(e){return e===i.value?e:(n.Gg(this,t,i.value),i.value=e,n.Kg(this,t,e),e)},Ag:i.Ag,Ng:!0}:{get:function(){if(i.get)return i.get.apply(this,arguments)},set:function(e){var r;return i.get&&(r=i.get.apply(this,arguments)),e===r?e:(n.Gg(this,t,r),i.set&&i.set.apply(this,arguments),i.get&&(e=i.get.apply(this,arguments)),n.Kg(this,t,e),e)},Ag:i.Ag,Ng:!0})}}},n.prototype.qg=function(t){if(!Array.isArray(this)){if(!it.has(this))throw Error("Can't uninstall observer on property");var e=it.get(this);if(!e[t])throw Error("Can't uninstall observer on property");var i=e[t];delete e[t],Object.defineProperty(this,t,i)}},n.Dg=function(t,e){return t.Dg?t.Dg(e):n.prototype.Dg.call(t,e)},n.Mg=function(t,e){return t.Mg?t.Mg(e):n.prototype.Mg.call(t,e)},n.jg=function(t,e,i,r){return t.jg?t.jg(e,i,r):n.prototype.jg.call(t,e,i,r)},n.Qg=function(t,e,i,r){return t.Qg?t.Qg(e,i,r):n.prototype.Qg.call(t,e,i,r)},n.Kg=function(t,e,i,r){return t.Kg?t.Kg(e,i,r):n.prototype.Kg.call(t,e,i,r)},n.Vg=function(t,e,i){return n.jg(t,e,i,!0)},n.Jg=function(t,e,i){return n.Qg(t,e,i,!0)},n.Gg=function(t,e,i){return n.Kg(t,e,i,!0)},n.Ug=function(t,e){return t.Ug?t.Ug(e):n.prototype.Ug.call(t,e)},n.qg=function(t,e){return t.qg?t.qg(e):n.prototype.qg.call(t,e)},X.eg&&(X=X.eg);var rt={},nt=new M;rt.eg=o,o.prototype.zg=function(){return nt.has(this)||nt.set(this,{st:!1,Lg:[],Hg:[]}),nt.get(this)},o.prototype.Wg=function(t,e){!this.isObservable&&this.makeObservable&&this.makeObservable();var i=this.zg();(e?i.Hg:i.Lg).push(t),this.$g=!!(i.Hg.length+i.Lg.length)},o.prototype.Yg=function(t,e){var i,r=this.zg();i=e?r.Hg:r.Lg;var n=i.lastIndexOf(t);if(-1===n)throw Error("Can't remove listener: does not exist.");i.splice(n,1),this.$g=!!(r.Hg.length+r.Lg.length)},o.prototype.Xg=function(t,e,i,r){var n=this.zg();if(!n.st){n.st=!0;var o;o=r?n.Hg:n.Lg;try{o.forEach(function(n){n.yd?n.yd({Zg:r?"before":"after",currentTarget:this,target:this,tv:t,ev:e,index:i}):(n=r?n.handleRangeWillChange||n:n.handleRangeChange||n,n.call&&n.call(this,t,e,i,r))},this)}finally{n.st=!1}}},o.prototype.iv=function(t){return this.Wg(t,!0)},o.prototype.rv=function(t){return this.Yg(t,!0)},o.prototype.nv=function(t,e,i){return this.Xg(t,e,i,!0)},rt.eg&&(rt=rt.eg);var ot={},st=M;ot.eg=Object,Object.empty=Object.freeze(Object.create(null)),Object.ov=function(t){return Object(t)===t},Object.sv=function(t){return Object.vg(t,"valueOf")&&(t=t.valueOf()),t};var at=new st;Object.hash=function(t){return Object.vg(t,"hash")?""+t.hash():Object(t)===t?(at.has(t)||at.set(t,Math.random().toString(36).slice(2)),at.get(t)):""+t};var ct=Object.prototype.hasOwnProperty;Object.av=function(t,e){return ct.call(t,e)},Object.vg=function(t,e){return null!=t&&"function"==typeof t[e]&&!ct.call(t,e)},Object.has=function(t,e){if("object"!=typeof t)throw Error("Object.has can't accept non-object: "+typeof t);if(Object.vg(t,"has"))return t.has(e);if("string"==typeof e)return e in t&&t[e]!==Object.prototype[e];throw Error("Key must be a string for Object.has on plain objects")},Object.get=function(t,e,i){if("object"!=typeof t)throw Error("Object.get can't accept non-object: "+typeof t);return Object.vg(t,"get")?t.get(e,i):Object.has(t,e)?t[e]:i},Object.set=function(t,e,i){Object.vg(t,"set")?t.set(e,i):t[e]=i},Object.addEach=function(t,e){Object.vg(e,"forEach")?"function"==typeof e.keys?e.forEach(function(e,i){t[i]=e}):e.forEach(function(e){t[e[0]]=e[1]}):Object.keys(e).forEach(function(i){t[i]=e[i]})},Object.forEach=function(t,e,i){Object.keys(t).forEach(function(r){e.call(i,t[r],r,t)})},Object.map=function(t,e,i){return Object.keys(t).map(function(r){return e.call(i,t[r],r,t)})},Object.values=function(t){return Object.map(t,Function.identity)},Object.is=function(t,e){return t===e?0!==t||1/t===1/e:t!==t&&e!==e},Object.ol=function(t,e,i){if(i=i||Object.ol,t=Object.sv(t),e=Object.sv(e),t===e)return 0!==t||1/t===1/e;if(Object.vg(t,"equals"))return t.ol(e,i);if(Object.vg(e,"equals"))return e.ol(t,i);if("object"==typeof t&&"object"==typeof e){var r=Object.getPrototypeOf(t),n=Object.getPrototypeOf(e);if(r===n&&(r===Object.prototype||null===r)){for(var o in t)if(!i(t[o],e[o]))return!1;for(o in e)if(!i(t[o],e[o]))return!1;return!0}}return t!==t&&e!==e},Object.Yf=function(t,e){var t=Object.sv(t),e=Object.sv(e),i=typeof t;return t===e||i!==typeof e?0:"number"===i?t-e:"string"===i?t<e?-1:1:Object.vg(t,"compare")?t.Yf(e):Object.vg(e,"compare")?-e.Yf(t):0},Object.clone=function(t,e,i){if(t=Object.sv(t),i=i||new st,void 0===e)e=1/0;else if(0===e)return t;if(Object.ov(t)){if(!i.has(t))if(Object.vg(t,"clone"))i.set(t,t.clone(e,i));else{var r=Object.getPrototypeOf(t);if(null!==r&&r!==Object.prototype)throw Error("Can't clone "+t);r=Object.create(r),i.set(t,r);for(var n in t)r[n]=Object.clone(t[n],e-1,i)}return i.get(t)}return t},Object.clear=function(t){if(Object.vg(t,"clear"))t.clear();else for(var e=Object.keys(t),i=e.length;i;)i--,delete t[e[i]];return t},ot.eg&&(ot=ot.eg);var ht={},pt=ot;ht.eg=s,s.prototype.ol=function(t,e){return e=e||this.Mf||pt.ol,this===t||!!t&&(this.length===t.length&&this.cg(t).every(function(t){return e(t[0],t[1])}))},s.prototype.Yf=function(t,e){if(e=e||this.$f||pt.Yf,this===t)return 0;if(!t)return 1;var i=Math.min(this.length,t.length),r=this.cg(t).reduce(function(t,r,n){return 0===t?n>=i?t:e(r[0],r[1]):t},0);return 0===r?this.length-t.length:r},ht.eg&&(ht=ht.eg);var ut={};ut.eg=a;var lt=ot;if(lt.addEach(a.prototype,x.prototype),a.prototype.ng=function(t){var e=[];return Reducible.addEach.call(e,t),e},a.prototype.cv=function(t,e){var i=a(this),r=0;if("[object Function]"!=lt.prototype.toString.call(t))throw new TypeError;return new i.constructor(function(){return t.call(e,i.next(),r++,i)})},a.prototype.hv=function(t,e){var i=a(this),r=0;if("[object Function]"!=lt.prototype.toString.call(t))throw new TypeError;return new i.constructor(function(){for(var n;;)if(n=i.next(),t.call(e,n,r++,i))return n})},a.prototype.reduce=function(t){var e,i=a(this),r=arguments[1],n=arguments[2],o=0;if("[object Function]"!=lt.prototype.toString.call(t))throw new TypeError;try{e=i.next(),r=1<arguments.length?t.call(n,r,e,o,i):e,o++}catch(s){if(isStopIteration(s)){if(1<arguments.length)return arguments[1];throw TypeError("cannot reduce a value from an empty iterator with no initial value")}throw s}try{for(;;)e=i.next(),r=t.call(n,r,e,o,i),o++}catch(c){if(isStopIteration(c))return r;throw c}},a.prototype.every=function(t){var e=a(this),i=!0;if("[object Function]"!=lt.prototype.toString.call(t))throw new TypeError;return e.cv.apply(e,arguments).forEach(function(t){if(!t)throw i=!1,StopIteration}),i},a.prototype.some=function(t){var e=a(this),i=!1;if("[object Function]"!=lt.prototype.toString.call(t))throw new TypeError;return e.cv.apply(e,arguments).forEach(function(t){if(t)throw i=!0,StopIteration}),i},a.prototype.concat=function(){return a.concat(Array.prototype.concat.apply(this,arguments))},a.prototype.pv=function(t,e){var i,r=a(this),n=!1;if("[object Function]"!=lt.prototype.toString.call(t))throw new TypeError;return r.forEach(function(o,s){if(!t.call(e,o,s,r))throw n=!0,i=o,StopIteration}),n?r.constructor([i]).concat(r):r.constructor([])},a.prototype.uv=function(t,e){var i=a(this);if("[object Function]"!=lt.prototype.toString.call(t))throw new TypeError;return i.cv(function(r,n){if(!t.call(e,r,n,i))throw StopIteration;return r})},a.prototype.hv=function(t,e){var i=a(this),r=0;if("[object Function]"!=lt.prototype.toString.call(t))throw new TypeError;return new i.constructor(function(){for(var n;;)if(n=i.next(),t.call(e,n,r++,i))return n})},a.prototype.cg=function(){return a.lv(Array.prototype.concat.apply(this,arguments))},a.prototype.enumerate=function(t){return a.count(t).cg(this)},a.Df=function(t){var e;return e=0,new a(function(){if("object"==typeof t)for(;!(e in t);){if(e>=t.length)throw StopIteration;e+=1}else if(e>=t.length)throw StopIteration;var i=t[e];return e+=1,i})},a.dv=function(t,e){2>arguments.length&&(e=1/0);var i=function(){throw StopIteration};return new a(function(){var r;try{return i()}catch(n){if(isStopIteration(n)){if(0>=e)throw n;return e--,r=a.Df(t),(i=r.next.bind(r))()}throw n}})},a.concat=function(t){var t=a(t),e=function(){throw StopIteration};return new a(function(){var i;try{return e()}catch(r){if(isStopIteration(r))return i=a(t.next()),(e=i.next.bind(i))();throw r}})},a.lv=function(t){return t=a(t).map(a),new a(1>t.length?[]:function(){var e,i=t.map(function(t){try{return t.next()}catch(i){if(!isStopIteration(i))throw i;e=!0}});if(e)throw StopIteration;return i})},a.cg=function(){return a.lv(Array.prototype.slice.call(arguments))},a.chain=function(){return a.concat(Array.prototype.slice.call(arguments))},a.range=function(t,e,i){return 3>arguments.length&&(i=1),2>arguments.length&&(e=t,t=0),t=t||0,new a(function(){if(t>=e)throw StopIteration;if(isNaN(t))throw"";var r=t;return t+=i,r})},a.count=function(t,e){return a.range(t,1/0,e||1)},a.repeat=function(t,e){return 2>arguments.length&&(e=1/0),new a.range((+e)).cv(function(){return t})},"undefined"==typeof isStopIteration&&(t.fv=function(t){return"[object StopIteration]"===lt.prototype.toString.call(t)}),"undefined"==typeof StopIteration){t.StopIteration={};var dt=lt.prototype.toString;lt.prototype.toString=function(){return this===t.StopIteration||this instanceof t.gv?"[object StopIteration]":dt.call(this,arguments)}}"undefined"==typeof ReturnValue&&(t.gv=function(e){return this instanceof t.gv?void(this.value=e):new t.gv(e)}),ut.eg&&(ut=ut.eg);var ft={},gt=x,vt=ht,yt=M;ft.eg=Array,Array.empty=[],Object.freeze&&Object.freeze(Array.empty),Array.from=function(t){var e=[];return e.addEach(t),e},Array.prototype.addEach=gt.prototype.addEach,Array.prototype.ig=gt.prototype.ig,Array.prototype.toArray=gt.prototype.toArray,Array.prototype.rg=gt.prototype.rg,Array.prototype.all=gt.prototype.all,Array.prototype.ie=gt.prototype.ie,Array.prototype.min=gt.prototype.min,Array.prototype.max=gt.prototype.max,Array.prototype.og=gt.prototype.og,Array.prototype.sg=gt.prototype.sg,Array.prototype.only=gt.prototype.only,Array.prototype.ag=gt.prototype.ag,Array.prototype.cg=gt.prototype.cg,Array.prototype.hg=gt.prototype.hg,Array.prototype.reversed=gt.prototype.reversed,Array.prototype.ng=function(t){var e=new this.constructor;return e.addEach(t),e},Array.prototype.has=function(t,e){return-1!==this.find(t,e)},Array.prototype.get=function(t){return this[t]},Array.prototype.set=function(t,e){return this.splice(t,1,e),!0},Array.prototype.add=function(t){return this.push(t),!0},Array.prototype["delete"]=function(t,e){var i=this.find(t,e);return-1!==i&&(this.splice(i,1),!0)},Array.prototype.find=function(t,e){for(var e=e||this.Mf||Object.ol,i=0;i<this.length;i++)if(i in this&&e(this[i],t))return i;return-1},Array.prototype.vv=function(t,e){var e=e||this.Mf||Object.ol,i=this.length;do if(i--,i in this&&e(this[i],t))return i;while(0<i);return-1},Array.prototype.yv=function(t,e,i){var r=Array.prototype.slice.call(arguments,0,2);return i&&r.push.apply(r,i),this.splice.apply(this,r)},Array.prototype.ug=function(){if(0===this.length)throw Error("Can't get one element from empty array.");for(var t in this)if(Object.av(this,t))return this[t]},Array.prototype.clear=function(){return this.length=0,this},Array.prototype.Yf=function(t,e){var i,r,n,o,e=e||Object.Yf;if(this===t)return 0;if(!t||!Array.isArray(t))return vt.prototype.Yf.call(this,t,e);for(r=Math.min(this.length,t.length),i=0;i<r;i++)if(i in this){if(!(i in t))return-1;if(n=this[i],o=t[i],n=e(n,o))return n}else if(i in t)return 1;return this.length-t.length},Array.prototype.ol=function(t){var e,i,r=r||Object.ol,n=0,o=this.length;if(this===t)return!0;if(!t||!Array.isArray(t))return vt.prototype.ol.call(this,t);if(o!==t.length)return!1;for(;n<o;++n)if(n in this){if(e=this[n],i=t[n],e!==i&&e&&i&&!r(e,i))return!1}else if(n in t)return!1;return!0},Array.prototype.clone=function(t,e){if(void 0===t)t=1/0;else if(0===t)return this;var i,e=e||new yt,r=[];for(i in this)Object.av(this,i)&&(r[i]=Object.clone(this[i],t-1,e));return r},Array.prototype.Df=function(t,e){return new c(this,t,e)},Array.prototype.Iterator=c,c.prototype.next=function(){if(this.start===(null==this.end?this.Hf.length:this.end))throw StopIteration;return this.Hf[this.start++]},ft.eg&&(ft=ft.eg);var mt={};mt.eg=h;var wt=ht,Tt=X;Object.addEach(h.prototype,x.prototype),Object.addEach(h.prototype,wt.prototype),Object.addEach(h.prototype,Tt.prototype),h.prototype.ng=function(t){return new this.constructor(t,this.Mf,this.content)},h.prototype.find=function(t,e){for(var e=e||this.Mf,i=this.head,r=i.next;r!==i;){if(e(r.value,t))return r;r=r.next}},h.prototype.vv=function(t,e){for(var e=e||this.Mf,i=this.head,r=i.Lf;r!==i;){if(e(r.value,t))return r;r=r.Lf}},h.prototype.has=function(t,e){return!!this.find(t,e)},h.prototype.get=function(t,e){var i=this.find(t,e);return i?i.value:this.content()},h.prototype["delete"]=function(t,e){var i=this.vv(t,e);return!!i&&(i["delete"](),this.length--,!0)},h.prototype.clear=function(){this.head.next=this.head.Lf=this.head,this.length=0},h.prototype.add=function(t){return this.head.mv(new this.Node(t)),this.length++,!0},h.prototype.push=function(){for(var t=this.head,e=0;e<arguments.length;e++){var i=new this.Node(arguments[e]);t.mv(i),this.length++}},h.prototype.unshift=function(){for(var t=this.head,e=0;e<arguments.length;e++){var i=new this.Node(arguments[e]);t.wv(i),this.length++,t=i}},h.prototype.pop=function(){var t,e=this.head;return e.Lf!==e&&(t=e.Lf.value,e.Lf["delete"](),this.length--),t},h.prototype.shift=function(){var t,e=this.head;return e.Lf!==e&&(t=e.next.value,e.next["delete"](),this.length--),t},h.prototype.Tv=function(t,e){var i=this.head;if("number"==typeof t){var r=t;if(0<=r)for(t=i.next;r&&(r--,t=t.next,!(t==i)););else for(t=i;0>r&&(r++,t=t.Lf,!(t==i)););return t}return t||e},h.prototype.slice=function(t,e){for(var i=[],r=this.head,t=this.Tv(t,r.next),e=this.Tv(e,r);t!==e&&t!==r;)i.push(t.value),t=t.next;return i},h.prototype.splice=function(t,e){return this.yv(t,e,Array.prototype.slice.call(arguments,2))},h.prototype.yv=function(t,e,i){var r=[],n=t,t=this.Tv(t,this.head);for(void 0===e&&(e=1/0);e--&&0<=e&&t!==this.head;)r.push(t.value),t["delete"](),t=t.next,this.length--;if(i){for(null===n&&t===this.head&&(t=this.head.next),e=0;e<i.length;e++)n=new this.Node(i[e]),t.mv(n);this.length+=i.length}return r},h.prototype.reverse=function(){var t=this.head;do{var e=t.next;t.next=t.Lf,t.Lf=e,t=t.next}while(t!==this.head);return this},h.prototype.reduce=function(t,e,i){for(var r=this.head,n=r.next;n!==r;)e=t.call(i,e,n.value,n,this),n=n.next;return e},h.prototype.reduceRight=function(t,e,i){for(var r=this.head,n=r.Lf;n!==r;)e=t.call(i,e,n.value,n,this),n=n.Lf;return e},h.prototype.ug=function(){if(this.head===this.head.next)throw Error("Can't get one value from empty list");return this.head.next.value},h.prototype.Df=function(){return new p(this.head)},p.prototype.next=function(){if(this.Uf===this.head)throw StopIteration;var t=this.Uf.value;return this.Uf=this.Uf.next,t},h.prototype.Node=u,u.prototype["delete"]=function(){this.Lf.next=this.next,this.next.Lf=this.Lf},u.prototype.mv=function(t){var e=this.Lf;this.Lf=t,t.Lf=e,e.next=t,t.next=this},u.prototype.wv=function(t){var e=this.next;this.next=t,t.next=e,e.Lf=t,t.Lf=this},mt.eg&&(mt=mt.eg);var St={},bt=mt;St.eg=l,l.prototype.Sv=function(){return this.bv||(this.bv={Hg:new bt,Lg:new bt}),this.bv},l.prototype.Ev=function(t,e){this.makeObservable&&!this.dispatchMapChanges&&this.makeObservable();var i=this.Sv();(e?i.Hg:i.Lg).push(t),this.Iv=!0},l.prototype.Rv=function(t,e){var i=this.Sv(),i=(e?i.Hg:i.Lg).vv(t);if(!i)throw Error("Can't remove listener: does not exist.");i["delete"]()},l.prototype.kv=function(t,e,i){var r=this.Sv(),n="handleMap"+((i?"Will":"")+"Change");(i?r.Hg:r.Lg).forEach(function(i){var r=i,i=i[n]||i;i.call&&i.call(r,e,t,this)},this)},l.prototype.Cv=function(t){return this.Ev(t,!0)},l.prototype.Ov=function(t){return this.Rv(t,!0)},l.prototype.Pv=function(t,e){return this.kv(t,e,!0)},St.eg&&(St=St.eg);var Et={},It=ot,Rt=St,kt=X;Et.eg=d,It.addEach(d.prototype,Rt.prototype),It.addEach(d.prototype,kt.prototype),d.prototype.addEach=function(t){t&&It(t)===t&&("function"==typeof t.forEach?"function"==typeof t.keys?t.forEach(function(t,e){this.set(e,t)},this):t.forEach(function(t){this.set(t[0],t[1])},this):It.keys(t).forEach(function(e){this.set(e,t[e])},this))},d.prototype.get=function(t,e){var i=this.Vf.get(new this.Av(t));return i?i.value:1<arguments.length?e:this.content(t)},d.prototype.set=function(t,e){var i=new this.Av(t,e),r=this.Vf.get(i),n=!1;return r?(this.Iv&&this.Pv(t,r.value),r.value=e):(this.Iv&&this.Pv(t,void 0),this.Vf.add(i)&&(this.length++,n=!0)),this.Iv&&this.kv(t,e),n},d.prototype.add=function(t,e){return this.set(e,t)},d.prototype.has=function(t){return this.Vf.has(new this.Av(t))},d.prototype["delete"]=function(t){var e=new this.Av(t);if(this.Vf.has(e)){var i=this.Vf.get(e).value;return this.Iv&&this.Pv(t,i),this.Vf["delete"](e),this.length--,this.Iv&&this.kv(t,void 0),!0}return!1},d.prototype.clear=function(){this.Vf.clear(),this.length=0},d.prototype.reduce=function(t,e,i){return this.Vf.reduce(function(e,r){return t.call(i,e,r.value,r.key,this)},e,this)},d.prototype.reduceRight=function(t,e,i){return this.Vf.reduceRight(function(e,r){return t.call(i,e,r.value,r.key,this)},e,this)},d.prototype.keys=function(){return this.map(function(t,e){return e})},d.prototype.values=function(){return this.map(Function.identity)},d.prototype.Nv=function(){return this.map(function(t,e){return[e,t]})},d.prototype.ol=function(t,e){return e=e||It.ol,this===t||(It.vg(t,"every")?t.length===this.length&&t.every(function(t,i){return e(this.get(i),t)},this):It.keys(t).length===this.length&&It.keys(t).every(function(i){return e(this.get(i),t[i])},this))},d.prototype.Av=function(t,e){this.key=t,this.value=e},Et.eg&&(Et=Et.eg);var Ct={},Ot=x,Pt=Et,At=X;Ct.eg=f,Object.addEach(f.prototype,Ot.prototype),
    Object.addEach(f.prototype,Pt.prototype),Object.addEach(f.prototype,At.prototype),f.prototype.ng=function(t){return new this.constructor(t,this.mangle,this.content)},f.prototype.xv=function(t){if("string"!=typeof t)throw new TypeError("key must be a string.")},f.prototype.get=function(t,e){this.xv(t);var i="~"+t;return i in this.Vf?this.Vf[i]:1<arguments.length?e:this.content()},f.prototype.set=function(t,e){this.xv(t);var i="~"+t;return i in this.Vf?(this.Vf[i]=e,!1):(this.length++,this.Vf[i]=e,!0)},f.prototype.has=function(t){return this.xv(t),"~"+t in this.Vf},f.prototype["delete"]=function(t){return this.xv(t),"~"+t in this.Vf&&(delete this.Vf["~"+t],this.length--,!0)},f.prototype.clear=function(){for(var t in this.Vf)delete this.Vf[t];this.length=0},f.prototype.reduce=function(t,e,i){for(var r in this.Vf)e=t.call(i,e,this.Vf[r],r.slice(1),this);return e},f.prototype.ug=function(){for(var t in this.Vf)return this.Vf[t];throw Error("Can't get one value from empty dictionary.")},Ct.eg&&(Ct=Ct.eg);var Nt={},xt=Ct,Bt=mt,Ft=x,_t=B,Dt=H,Ht=X;Nt.eg=g,Object.addEach(g.prototype,Ft.prototype),Object.addEach(g.prototype,_t.prototype),Object.addEach(g.prototype,Ht.prototype),g.prototype.Jf=xt,g.prototype.Kf=Bt,g.prototype.ng=function(t){return new this.constructor(t,this.Mf,this.Qf,this.content)},g.prototype.has=function(t){var e=this.Qf(t);return this.qf.get(e).has(t)},g.prototype.get=function(t){var e=this.Qf(t),i=this.qf;return i.has(e)?i.get(e).get(t):this.content(t)},g.prototype["delete"]=function(t){var e=this.Qf(t),i=this.qf;if(i.has(e)){var r=i.get(e);if(r["delete"](t))return this.length--,0===r.length&&i["delete"](e),!0}return!1},g.prototype.clear=function(){this.qf.clear(),this.length=0},g.prototype.add=function(t){var e=this.Qf(t),i=this.qf;return i.has(e)||i.set(e,new this.Kf(null,this.Mf)),!i.get(e).has(t)&&(i.get(e).add(t),this.length++,!0)},g.prototype.reduce=function(t,e,i){return this.qf.reduce(function(e,r){return r.reduce(function(e,r){return t.call(i,e,r,r,this)},e,this)},e,this)},g.prototype.ug=function(){if(0===this.length)throw Error("Can't get one value from empty set.");return this.qf.ug().ug()},g.prototype.Df=function(){return this.qf.values().ag().Df()},g.prototype.log=function(t,e,i,r){t=t||Dt.kg,e=e||this.Bv,i||(i=console.log,r=console);var i=i.bind(r),n=this.qf,o=n.keys();o.forEach(function(s,a){var c,h;a===o.length-1?(c=t.bg,h=" "):(c=0===a?t.Tg:t.Eg,h=t.Ig);var p=n.get(s);i.call(r,c+t.mg+t.Tg+" "+s),p.forEach(function(n,o){var s,a;o===p.head.Lf?(s=t.bg,a=" "):(s=t.Eg,a=t.Ig);var c;e(o,function(e){c?i.call(r,h+" "+a+"  "+e):(i.call(r,h+" "+s+t.mg+t.mg+e),c=!0)},function(e){i.call(r,h+" "+t.Ig+"  "+e)})})})},g.prototype.Bv=function(t,e){var i=t.value;Object(i)===i?JSON.stringify(i,null,4).split("\n").forEach(function(t){e(" "+t)}):e(" "+i)},Nt.eg&&(Nt=Nt.eg);var Lt={},Mt=Nt,jt=x,Ut=Et,Vt=X;Lt.eg=v,Object.addEach(v.prototype,jt.prototype),Object.addEach(v.prototype,Ut.prototype),Object.addEach(v.prototype,Vt.prototype),v.prototype.ng=function(t){return new this.constructor(t,this.Mf,this.Qf,this.content)},v.prototype.log=function(t,e){e=e||this.stringify,this.Vf.log(t,e)},v.prototype.stringify=function(t,e){return e+JSON.stringify(t.key)+": "+JSON.stringify(t.value)},Lt.eg&&(Lt=Lt.eg);var Qt={},qt=mt,Jt=Nt,Kt=x,Gt=B,zt=X,Wt=rt;Qt.eg=y,Object.addEach(y.prototype,Kt.prototype),Object.addEach(y.prototype,Gt.prototype),Object.addEach(y.prototype,zt.prototype),Object.addEach(y.prototype,Wt.prototype),y.prototype.Gf=qt,y.prototype.zf=Jt,y.prototype.ng=function(t){return new this.constructor(t,this.Mf,this.Qf,this.content)},y.prototype.has=function(t){return t=new this.order.Node(t),this.Vf.has(t)},y.prototype.get=function(t){var e=new this.order.Node(t);return(e=this.Vf.get(e))?e.value:this.content(t)},y.prototype.add=function(t){var e=new this.order.Node(t);return!this.Vf.has(e)&&(this.$g&&this.nv([t],[],0),this.order.add(t),e=this.order.head.Lf,this.Vf.add(e),this.length++,this.$g&&this.Xg([t],[],0),!0)},y.prototype["delete"]=function(t){var e=new this.order.Node(t);return!!this.Vf.has(e)&&(this.$g&&this.nv([],[t],0),e=this.Vf.get(e),this.Vf["delete"](e),e["delete"](),this.length--,this.$g&&this.Xg([],[t],0),!0)},y.prototype.ug=function(){if(0===this.length)throw Error("Can't get one value from empty set.");return this.Vf.ug().value},y.prototype.clear=function(){this.Vf.clear(),this.order.clear(),this.length=0},y.prototype.reduce=function(t,e,i){return this.order.reduce(function(e,r){return t.call(i,e,r,r,this)},e,this)},y.prototype.reduceRight=function(t,e,i){return this.order.reduceRight(function(e,r){return t.call(i,e,r,r,this)},e,this)},y.prototype.Df=function(){return this.order.Df()},y.prototype.log=function(){var t=this.Vf;return t.log.apply(t,arguments)},Qt.eg&&(Qt=Qt.eg);var $t={},Yt=Qt,Xt=x,Zt=B,te=X;$t.eg=m,Object.addEach(m.prototype,Xt.prototype),Object.addEach(m.prototype,Zt.prototype),Object.addEach(m.prototype,te.prototype),m.prototype.ng=function(t){return new this.constructor(t,this.maxLength,this.Mf,this.Qf,this.content)},m.prototype.has=function(t){return this.Vf.has(t)},m.prototype.get=function(t){return t=this.Vf.get(t),void 0!==t?(this.Vf["delete"](t),this.Vf.add(t)):t=this.content(),t},m.prototype.add=function(t){return this.Vf.has(t)&&(this.Vf["delete"](t),this.length--),this.Vf.add(t),this.length++,!(this.Vf.length>this.maxLength)||(this.Vf["delete"](this.Vf.order.head.next.value),this.length--,!1)},m.prototype["delete"]=function(t){return!!this.Vf["delete"](t)&&(this.length--,!0)},m.prototype.ug=function(){if(0===this.length)throw Error("Can't get one value from empty collection.");return this.Vf.ug()},m.prototype.clear=function(){this.Vf.clear(),this.length=0},m.prototype.reduce=function(t,e,i){return this.Vf.reduce(function(e,r){return t.call(i,e,r,r,this)},e,this)},m.prototype.reduceRight=function(t,e,i){return this.Vf.reduceRight(function(t,e){return callback.call(i,t,e,e,this)},basis,this)},m.prototype.Df=function(){return this.Vf.Df()},$t.eg&&($t=$t.eg);var ee={},ie=$t,re=x,ne=Et,oe=X;ee.eg=w,Object.addEach(w.prototype,re.prototype),Object.addEach(w.prototype,ne.prototype),Object.addEach(w.prototype,oe.prototype),w.prototype.ng=function(t){return new this.constructor(t,this.maxLength,this.Mf,this.Qf,this.content)},w.prototype.log=function(t,e){e=e||this.stringify,this.Vf.log(t,e)},w.prototype.stringify=function(t,e){return e+JSON.stringify(t.key)+": "+JSON.stringify(t.value)},ee.eg&&(ee=ee.eg);var se={},ae=Qt,ce=x,he=Et,pe=X;se.eg=T,Object.addEach(T.prototype,ce.prototype),Object.addEach(T.prototype,he.prototype),Object.addEach(T.prototype,pe.prototype),T.prototype.ng=function(t){return new this.constructor(t,this.Mf,this.Qf,this.content)},T.prototype.log=function(t,e){e=e||this.stringify,this.Vf.log(t,e)},T.prototype.stringify=function(t,e){return e+JSON.stringify(t.key)+": "+JSON.stringify(t.value)},se.eg&&(se=se.eg);var ue={},le=se;ue.eg=S,S.prototype=Object.create(le.prototype),S.prototype.constructor=S,S.prototype.ng=function(t){return new this.constructor(t,this.Wf,this.Mf,this.Qf)},S.prototype.set=function(t,e){var i=this.get(t);i.yv(0,i.length,e)},S.prototype.Wf=function(){return[]},ue.eg&&(ue=ue.eg);var de={};de.eg=b;var fe=X,ge=rt;Object.addEach(b.prototype,x.prototype),Object.addEach(b.prototype,fe.prototype),Object.addEach(b.prototype,ge.prototype),b.prototype.ng=function(t){return new this.constructor(t,this.Mf,this.$f,this.content)},b.prototype.has=function(t){var e=E(this.Hf,t,this.$f);return 0<=e&&this.Mf(this.Hf[e],t)},b.prototype.get=function(t){var e=I(this.Hf,t,this.$f,this.Mf);return-1!==e?this.Hf[e]:this.content(t)},b.prototype.add=function(t){var e;e=this.Hf;var i=this.$f,r=E(e,t,i);if(0>r)e=-r-1;else{for(var n=e.length-1;r<n&&0===i(t,e[r+1]);)r++;e=r}return this.$g&&this.nv([t],[],e),this.Hf.splice(e,0,t),this.length++,this.$g&&this.Xg([t],[],e),!0},b.prototype["delete"]=function(t){var e=I(this.Hf,t,this.$f,this.Mf);return-1!==e&&(this.$g&&this.nv([],[t],e),this.Hf.splice(e,1),this.length--,this.$g&&this.Xg([],[t],e),!0)},b.prototype.indexOf=function(t){return I(this.Hf,t,this.$f,this.Mf)},b.prototype.lastIndexOf=function(t){return R(this.Hf,t,this.$f,this.Mf)},b.prototype.find=function(t){return I(this.Hf,t,this.$f,this.Mf)},b.prototype.vv=function(t){return R(this.Hf,t,this.$f,this.Mf)},b.prototype.push=function(){this.addEach(arguments)},b.prototype.unshift=function(){this.addEach(arguments)},b.prototype.pop=function(){return this.Hf.pop()},b.prototype.shift=function(){return this.Hf.shift()},b.prototype.slice=function(){return this.Hf.slice.apply(this.Hf,arguments)},b.prototype.splice=function(t,e){return this.yv(t,e,Array.prototype.slice.call(arguments,2))},b.prototype.yv=function(t,e,i){if(void 0===t&&void 0===e)return[];t=t||0,0>t&&(t+=this.length),void 0===e&&(e=1/0);var r=this.slice(t,t+e);return this.$g&&this.nv(i,r,t),this.Hf.splice(t,e),this.addEach(i),this.$g&&this.Xg(i,r,t),r},b.prototype.reduce=function(t,e,i){return this.Hf.reduce(function(e,r,n){return t.call(i,e,r,n,this)},e,this)},b.prototype.reduceRight=function(t,e,i){return this.Hf.reduceRight(function(t,e,r){return callback.call(i,t,e,r,this)},basis,this)},b.prototype.min=function(){if(this.length)return this.Hf[0]},b.prototype.max=function(){if(this.length)return this.Hf[this.length-1]},b.prototype.ug=function(){return this.Hf.ug()},b.prototype.clear=function(){var t;this.$g&&(t=this.Hf.slice(),this.nv([],t,0)),this.length=0,this.Hf.clear(),this.$g&&this.Xg([],t,0)},b.prototype.ol=function(t,e){return this.Hf.ol(t,e)},b.prototype.Yf=function(t,e){return this.Hf.Yf(t,e)},b.prototype.Df=function(t,e){return new this.Iterator(this.Hf,t,e)},b.prototype.Iterator=Array.prototype.Iterator,de.eg&&(de=de.eg);var ve={};ve.eg=k;var ye=de,me=B,we=X;k.prototype=Object.create(ye.prototype),k.prototype.constructor=k,Object.addEach(k.prototype,me.prototype),Object.addEach(k.prototype,we.prototype),k.prototype.add=function(t){return!this.has(t)&&(ye.prototype.add.call(this,t),!0)},k.prototype.reduce=function(t,e,i){var r=this;return this.Hf.reduce(function(e,n,o){return t.call(i,e,n,n,r,o)},e)},k.prototype.reduceRight=function(t,e,i){var r=this;return this.Hf.reduceRight(function(e,n,o){return t.call(i,e,n,n,r,o)},e)},ve.eg&&(ve=ve.eg);var Te={},Se=ve,be=x,Ee=Et,Ie=X;Te.eg=C,Object.addEach(C.prototype,be.prototype),Object.addEach(C.prototype,Ee.prototype),Object.addEach(C.prototype,Ie.prototype),C.prototype.ng=function(t){return new this.constructor(t,this.Mf,this.$f,this.content)},Te.eg&&(Te=Te.eg);var Re={};Re.eg=O;var ke=B,Ce=X,Oe=rt,Pe=H;Object.addEach(O.prototype,x.prototype),Object.addEach(O.prototype,ke.prototype),Object.addEach(O.prototype,Ce.prototype),Object.addEach(O.prototype,Oe.prototype),O.prototype.ng=function(t){return new this.constructor(t,this.Mf,this.$f,this.content)},O.prototype.has=function(t){return!!this.root&&(this.Zf(t),this.Mf(t,this.root.value))},O.prototype.get=function(t){return this.root&&(this.Zf(t),this.Mf(t,this.root.value))?this.root.value:this.content(t)},O.prototype.add=function(t){var e=new this.Node(t);return this.root?(this.Zf(t),!this.Mf(t,this.root.value)&&(this.$g&&this.nv([t],[],this.root.index),0>this.$f(t,this.root.value)?(e.right=this.root,e.left=this.root.left,this.root.left=null):(e.left=this.root,e.right=this.root.right,this.root.right=null),this.root.Fv(),e.Fv(),this.root=e,this.length++,this.$g&&this.Xg([t],[],this.root.index),!0)):(this.$g&&this.nv([t],[],0),this.root=e,this.length++,this.$g&&this.Xg([t],[],0),!0)},O.prototype["delete"]=function(t){if(this.root&&(this.Zf(t),this.Mf(t,this.root.value))){var e=this.root.index;if(this.$g&&this.nv([],[t],e),this.root.left){var i=this.root.right;this.root=this.root.left,this.Zf(t),this.root.right=i}else this.root=this.root.right;return this.length--,this.root&&this.root.Fv(),this.$g&&this.Xg([],[t],e),!0}return!1},O.prototype.indexOf=function(t){return this.root&&(this.Zf(t),this.Mf(t,this.root.value))?this.root.index:-1},O.prototype.find=function(t){if(this.root&&(this.Zf(t),this.Mf(t,this.root.value)))return this.root},O.prototype._v=function(t){if(this.root){for(t=t||this.root;t.right;)t=t.right;return t}},O.prototype.Dv=function(t){if(this.root){for(t=t||this.root;t.left;)t=t.left;return t}},O.prototype.Hv=function(t){if(this.root)return this.Zf(t),this.root},O.prototype.Lv=function(t){if(this.root)return this.Zf(t),this.root.tg()},O.prototype.Xf=function(t){if(this.root)return this.Zf(t),0===this.$f(t,this.root.value)?this.root:this.root.Mv()},O.prototype.jv=function(t){if(this.root)return this.Zf(t),this.$f(t,this.root.value),this.root.Mv()},O.prototype.pop=function(){if(this.root){var t=this._v();return this["delete"](t.value),t.value}},O.prototype.shift=function(){if(this.root){var t=this.Dv();return this["delete"](t.value),t.value}},O.prototype.push=function(){this.addEach(arguments)},O.prototype.unshift=function(){this.addEach(arguments)},O.prototype.slice=function(t,e){t=t||0,e=e||this.length,0>t&&(t+=this.length),0>e&&(e+=this.length);var i=[];if(this.root)for(this.Uv(t);this.root.index<e&&(i.push(this.root.value),this.root.right);)this.Zf(this.root.Mv().value);return i},O.prototype.splice=function(t,e){return this.yv(t,e,Array.prototype.slice.call(arguments,2))},O.prototype.yv=function(t,e,i){if(void 0===t&&void 0===e)return[];t=t||0,0>t&&(t+=this.length),void 0===e&&(e=1/0);var r=[];if(this.root)for(this.Uv(t),t=0;t<e;t++){r.push(this.root.value);var n=this.root.Mv();if(this["delete"](this.root.value),!n)break;this.Zf(n.value)}return this.addEach(i),r},O.prototype.Zf=function(t){var e,i,r,n,o,s;if(this.root){for(e=i=r=new this.Node,s=new this.Node,o=this.root;;)if(n=this.$f(t,o.value),0>n){if(!o.left)break;if(0>this.$f(t,o.left.value)&&(n=o.left,o.left=n.right,o.Fv(),n.right=o,n.Fv(),o=n,!o.left))break;n=new P,n.right=o,n.left=s.left,s.left=n,r.left=o,r.Fv(),r=o,o=o.left}else{if(!(0<n))break;if(!o.right)break;if(0<this.$f(t,o.right.value)&&(n=o.right,o.right=n.left,o.Fv(),n.left=o,n.Fv(),o=n,!o.right))break;n=new P,n.left=o,n.right=s.right,s.right=n,i.right=o,i.Fv(),i=o,o=o.right}for(i.right=o.left,i.Fv(),r.left=o.right,r.Fv(),o.left=e.right,o.right=e.left;s.left;)s.left.right.Fv(),s.left=s.left.left;for(;s.right;)s.right.left.Fv(),s.right=s.right.right;o.Fv(),this.root=o}},O.prototype.Uv=function(t){if(this.root){for(var e=this.root,i=this.root.index;i!==t;)if(i>t&&e.left)e=e.left,i-=1+(e.right?e.right.length:0);else{if(!(i<t&&e.right))break;e=e.right,i+=1+(e.left?e.left.length:0)}return this.Zf(e.value),this.root.index===t}return!1},O.prototype.reduce=function(t,e,i){return this.root&&(e=this.root.reduce(t,e,i,this)),e},O.prototype.reduceRight=function(t,e,i){return this.root&&(e=this.root.reduceRight(t,e,i,this)),e},O.prototype.min=function(t){if(t=this.Dv(t))return t.value},O.prototype.max=function(t){if(t=this._v(t))return t.value},O.prototype.ug=function(){if(!this.root)throw Error("Can't get one value from empty set");return this.root.value},O.prototype.clear=function(){var t;this.$g&&(t=this.toArray(),this.nv([],t,0)),this.root=null,this.length=0,this.$g&&this.Xg([],t,0)},O.prototype.Df=function(t,e){return new this.Iterator(this,t,e)},O.prototype.Iterator=A,O.prototype.summary=function(){return this.root?this.root.summary():"()"},O.prototype.log=function(t,e,i,r){t=t||Pe.Rg,e=e||this.Bv,i||(i=console.log,r=console),i=i.bind(r),this.root&&this.root.log(t,e,i,i)},O.prototype.Bv=function(t,e){e(" "+t.value)},O.Vv=Pe,O.prototype.Node=P,P.prototype.reduce=function(t,e,i,r,n){return n=n||0,this.left&&(e=this.left.reduce(t,e,i,r,n+1)),e=t.call(i,e,this.value,this.value,r,this,n),this.right&&(e=this.right.reduce(t,e,i,r,n+1)),e},P.prototype.reduceRight=function(t,e,i,r,n){return n=n||0,this.right&&(e=this.right.reduce(t,e,i,r,n+1)),e=t.call(i,e,this.value,this.value,r,this,n),this.left&&(e=this.left.reduce(t,e,i,r,n+1)),e},P.prototype.Fv=function(){this.length=1+(this.left?this.left.length:0)+(this.right?this.right.length:0),this.index=this.left?this.left.length:0},P.prototype.Qv=function(){var t;if(t=1+(this.left?this.left.Qv():0),t+=this.right?this.right.Qv():0,this.length!==t)throw Error("Integrity check failed: "+this.summary());return t},P.prototype.Mv=function(){var t=this;if(t.right){for(t=t.right;t.left;)t=t.left;return t}},P.prototype.tg=function(){var t=this;if(t.left){for(t=t.left;t.right;)t=t.right;return t}},P.prototype.summary=function(){var t=this.value||"-",t=t+(" <"+this.length);return this.left||this.right?"("+t+" "+(this.left?this.left.summary():"()")+", "+(this.right?this.right.summary():"()")+")":"("+t+")"},P.prototype.log=function(t,e,i,r){var n,o=this;n=this.left&&this.right?t.dg:this.left?t.wg:this.right?t.Tg:t.mg;var s;this.left&&this.left.log(t,e,function(e){s?r(t.Ig+" "+e):(s=!0,r(t.Sg+t.mg+e))},function(t){r("  "+t)});var a;e(this,function(e){a?i((o.right?t.Ig:" ")+e):(a=!0,i(n+e))},function(e){r((o.left?t.Ig:" ")+e)});var c;this.right&&this.right.log(t,e,function(e){c?i("  "+e):(c=!0,i(t.bg+t.mg+e))},function(e){i(t.Ig+" "+e)})},A.prototype.next=function(){var t;if(t=this.Lf?this.set.jv(this.Lf.value):this.set.Dv(),!t)throw StopIteration;if(void 0!==this.end&&0<=this.set.$f(t.value,this.end))throw StopIteration;return this.Lf=t,t.value},Re.eg&&(Re=Re.eg);var Ae={},Ne=Re,xe=x,Be=Et,Fe=X;Ae.eg=N,Object.addEach(N.prototype,xe.prototype),Object.addEach(N.prototype,Be.prototype),Object.addEach(N.prototype,Fe.prototype),N.prototype.ng=function(t){return new this.constructor(t,this.Mf,this.$f,this.content)},N.prototype.log=function(t,e){e=e||this.stringify,this.Vf.log(t,e)},N.prototype.qv=function(t,e,i,r){r=r||this.stringify,this.Vf.qv(t,e,i,r)},N.prototype.stringify=function(t,e,i,r){t.call(e,r+" "+i.value.key+": "+i.value.value)},Ae.eg&&(Ae=Ae.eg),t.Jv=mt,t.Set=Qt,t.Map=se,t.Kv=ue,t.WeakMap=M,t.Gv=Re,t.ni=Ae,t.zv=$t,t.Wv=ee,t.$v=de,t.oi=ve,t.Yv=Te,t.Xv=Nt,t.Zv=Lt,t.ty=Ct,t.Iterator=ut}(this)},function(t,e){t.t=function(){return new Function}},function(t,e){function i(t,e,i){null!=t&&("number"==typeof t?this.fromNumber(t,e,i):null==e&&"string"!=typeof t?this.ey(t,256):this.ey(t,e))}function r(){return new i(null)}function n(t,e,i,r,n,o){for(;--o>=0;){var s=e*this[t++]+i[r]+n;n=Math.floor(s/67108864),i[r++]=67108863&s}return n}function o(t,e,i,r,n,o){for(var s=32767&e,a=e>>15;--o>=0;){var c=32767&this[t],h=this[t++]>>15,p=a*c+h*s;c=s*c+((32767&p)<<15)+i[r]+(1073741823&n),n=(c>>>30)+(p>>>15)+a*h+(n>>>30),i[r++]=1073741823&c}return n}function s(t,e,i,r,n,o){for(var s=16383&e,a=e>>14;--o>=0;){var c=16383&this[t],h=this[t++]>>14,p=a*c+h*s;c=s*c+((16383&p)<<14)+i[r]+n,n=(c>>28)+(p>>14)+a*h,i[r++]=268435455&c}return n}function a(t){return Pt.charAt(t)}function c(t,e){var i=At[t.charCodeAt(e)];return null==i?-1:i}function h(t){for(var e=this.iy-1;e>=0;--e)t[e]=this[e];t.iy=this.iy,t.ny=this.ny}function p(t){this.iy=1,this.ny=t<0?-1:0,t>0?this[0]=t:t<-1?this[0]=t+this.oy:this.iy=0}function u(t){var e=r();return e.sy(t),e}function l(t,e){var r;if(16==e)r=4;else if(8==e)r=3;else if(256==e)r=8;else if(2==e)r=1;else if(32==e)r=5;else{if(4!=e)return void this.fromRadix(t,e);r=2}this.iy=0,this.ny=0;for(var n=t.length,o=!1,s=0;--n>=0;){var a=8==r?255&t[n]:c(t,n);a<0?"-"==t.charAt(n)&&(o=!0):(o=!1,0==s?this[this.iy++]=a:s+r>this.ay?(this[this.iy-1]|=(a&(1<<this.ay-s)-1)<<s,this[this.iy++]=a>>this.ay-s):this[this.iy-1]|=a<<s,s+=r,s>=this.ay&&(s-=this.ay))}8==r&&0!=(128&t[0])&&(this.ny=-1,s>0&&(this[this.iy-1]|=(1<<this.ay-s)-1<<s)),this.hy(),o&&i.ZERO.py(this,this)}function d(){for(var t=this.ny&this.uy;this.iy>0&&this[this.iy-1]==t;)--this.iy}function f(t){if(this.ny<0)return"-"+this.ly().toString(t);var e;if(16==t)e=4;else if(8==t)e=3;else if(2==t)e=1;else if(32==t)e=5;else{if(4!=t)return this.toRadix(t);e=2}var i,r=(1<<e)-1,n=!1,o="",s=this.iy,c=this.ay-s*this.ay%e;if(s-- >0)for(c<this.ay&&(i=this[s]>>c)>0&&(n=!0,o=a(i));s>=0;)c<e?(i=(this[s]&(1<<c)-1)<<e-c,i|=this[--s]>>(c+=this.ay-e)):(i=this[s]>>(c-=e)&r,c<=0&&(c+=this.ay,--s)),i>0&&(n=!0),n&&(o+=a(i));return n?o:"0"}function g(){var t=r();return i.ZERO.py(this,t),t}function v(){return this.ny<0?this.ly():this}function y(t){var e=this.ny-t.ny;if(0!=e)return e;var i=this.iy;if(e=i-t.iy,0!=e)return this.ny<0?-e:e;for(;--i>=0;)if(0!=(e=this[i]-t[i]))return e;return 0}function m(t){var e,i=1;return 0!=(e=t>>>16)&&(t=e,i+=16),0!=(e=t>>8)&&(t=e,i+=8),0!=(e=t>>4)&&(t=e,i+=4),0!=(e=t>>2)&&(t=e,i+=2),0!=(e=t>>1)&&(t=e,i+=1),i}function w(){return this.iy<=0?0:this.ay*(this.iy-1)+m(this[this.iy-1]^this.ny&this.uy)}function T(t,e){var i;for(i=this.iy-1;i>=0;--i)e[i+t]=this[i];for(i=t-1;i>=0;--i)e[i]=0;e.iy=this.iy+t,e.ny=this.ny}function S(t,e){for(var i=t;i<this.iy;++i)e[i-t]=this[i];e.iy=Math.max(this.iy-t,0),e.ny=this.ny}function b(t,e){var i,r=t%this.ay,n=this.ay-r,o=(1<<n)-1,s=Math.floor(t/this.ay),a=this.ny<<r&this.uy;for(i=this.iy-1;i>=0;--i)e[i+s+1]=this[i]>>n|a,a=(this[i]&o)<<r;for(i=s-1;i>=0;--i)e[i]=0;e[s]=a,e.iy=this.iy+s+1,e.ny=this.ny,e.hy()}function E(t,e){e.ny=this.ny;var i=Math.floor(t/this.ay);if(i>=this.iy)return void(e.iy=0);var r=t%this.ay,n=this.ay-r,o=(1<<r)-1;e[0]=this[i]>>r;for(var s=i+1;s<this.iy;++s)e[s-i-1]|=(this[s]&o)<<n,e[s-i]=this[s]>>r;r>0&&(e[this.iy-i-1]|=(this.ny&o)<<n),e.iy=this.iy-i,e.hy()}function I(t,e){for(var i=0,r=0,n=Math.min(t.iy,this.iy);i<n;)r+=this[i]-t[i],e[i++]=r&this.uy,r>>=this.ay;if(t.iy<this.iy){for(r-=t.ny;i<this.iy;)r+=this[i],e[i++]=r&this.uy,r>>=this.ay;r+=this.ny}else{for(r+=this.ny;i<t.iy;)r-=t[i],e[i++]=r&this.uy,r>>=this.ay;r-=t.ny}e.ny=r<0?-1:0,r<-1?e[i++]=this.oy+r:r>0&&(e[i++]=r),e.iy=i,e.hy()}function R(t,e){var r=this.abs(),n=t.abs(),o=r.iy;for(e.iy=o+n.iy;--o>=0;)e[o]=0;for(o=0;o<n.iy;++o)e[o+r.iy]=r.gy(0,n[o],e,o,0,r.iy);e.ny=0,e.hy(),this.ny!=t.ny&&i.ZERO.py(e,e)}function k(t){for(var e=this.abs(),i=t.iy=2*e.iy;--i>=0;)t[i]=0;for(i=0;i<e.iy-1;++i){var r=e.gy(i,e[i],t,2*i,0,1);(t[i+e.iy]+=e.gy(i+1,2*e[i],t,2*i+1,r,e.iy-i-1))>=e.oy&&(t[i+e.iy]-=e.oy,t[i+e.iy+1]=1)}t.iy>0&&(t[t.iy-1]+=e.gy(i,e[i],t,2*i,0,1)),t.ny=0,t.hy()}function C(t,e,n){var o=t.abs();if(!(o.iy<=0)){var s=this.abs();if(s.iy<o.iy)return null!=e&&e.sy(0),void(null!=n&&this.vy(n));null==n&&(n=r());var a=r(),c=this.ny,h=t.ny,p=this.ay-m(o[o.iy-1]);p>0?(o.yy(p,a),s.yy(p,n)):(o.vy(a),s.vy(n));var u=a.iy,l=a[u-1];if(0!=l){var d=l*(1<<this.my)+(u>1?a[u-2]>>this.wy:0),f=this.Ty/d,g=(1<<this.my)/d,v=1<<this.wy,y=n.iy,w=y-u,T=null==e?r():e;for(a.Sy(w,T),n.by(T)>=0&&(n[n.iy++]=1,n.py(T,n)),i.ONE.Sy(u,T),T.py(a,a);a.iy<u;)a[a.iy++]=0;for(;--w>=0;){var S=n[--y]==l?this.uy:Math.floor(n[y]*f+(n[y-1]+v)*g);if((n[y]+=a.gy(0,S,n,w,0,u))<S)for(a.Sy(w,T),n.py(T,n);n[y]<--S;)n.py(T,n)}null!=e&&(n.Ey(u,e),c!=h&&i.ZERO.py(e,e)),n.iy=u,n.hy(),p>0&&n.Iy(p,n),c<0&&i.ZERO.py(n,n)}}}function O(t){var e=r();return this.abs().Ry(t,null,e),this.ny<0&&e.by(i.ZERO)>0&&t.py(e,e),e}function P(t){this.i=t}function A(t){return t.ny<0||t.by(this.i)>=0?t.ky(this.i):t}function N(t){return t}function x(t){t.Ry(this.i,null,t)}function B(t,e,i){t.Cy(e,i),this.reduce(i)}function F(t,e){t.Oy(e),this.reduce(e)}function _(){if(this.iy<1)return 0;var t=this[0];if(0==(1&t))return 0;var e=3&t;return e=e*(2-(15&t)*e)&15,e=e*(2-(255&t)*e)&255,e=e*(2-((65535&t)*e&65535))&65535,e=e*(2-t*e%this.oy)%this.oy,e>0?this.oy-e:-e}function D(t){this.i=t,this.Py=t.Ay(),this.Ny=32767&this.Py,this.xy=this.Py>>15,this.By=(1<<t.ay-15)-1,this.Fy=2*t.iy}function H(t){var e=r();return t.abs().Sy(this.i.iy,e),e.Ry(this.i,null,e),t.ny<0&&e.by(i.ZERO)>0&&this.i.py(e,e),e}function L(t){var e=r();return t.vy(e),this.reduce(e),e}function M(t){for(;t.iy<=this.Fy;)t[t.iy++]=0;for(var e=0;e<this.i.iy;++e){var i=32767&t[e],r=i*this.Ny+((i*this.xy+(t[e]>>15)*this.Ny&this.By)<<15)&t.uy;for(i=e+this.i.iy,t[i]+=this.i.gy(0,r,t,e,0,this.i.iy);t[i]>=t.oy;)t[i]-=t.oy,t[++i]++}t.hy(),t.Ey(this.i.iy,t),t.by(this.i)>=0&&t.py(this.i,t)}function j(t,e){t.Oy(e),this.reduce(e)}function U(t,e,i){t.Cy(e,i),this.reduce(i)}function V(){return 0==(this.iy>0?1&this[0]:this.ny)}function Q(t,e){if(t>4294967295||t<1)return i.ONE;var n=r(),o=r(),s=e._y(this),a=m(t)-1;for(s.vy(n);--a>=0;)if(e.Dy(n,o),(t&1<<a)>0)e.Hy(o,s,n);else{var c=n;n=o,o=c}return e.Ly(n)}function q(t,e){var i;return i=t<256||e.My()?new P(e):new D(e),this.exp(t,i)}function J(t){var e,i,r,n="",o=0;for(e=0;e<t.length&&t.charAt(e)!=xt;++e)r=Nt.indexOf(t.charAt(e)),r<0||(0==o?(n+=a(r>>2),i=3&r,o=1):1==o?(n+=a(i<<2|r>>4),i=15&r,o=2):2==o?(n+=a(i),n+=a(r>>2),i=3&r,o=3):(n+=a(i<<2|r>>4),n+=a(15&r),o=0));return 1==o&&(n+=a(i<<2)),n}function K(t){var e,i=J(t),r=new Array;for(e=0;2*e<i.length;++e)r[e]=parseInt(i.substring(2*e,2*e+2),16);return r}/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/
 */
  function G(t,e){return new i(t,e)}function z(t,e){if(e<t.length+11)return alert("Message too long for RSA"),null;for(var r=new Array,n=t.length-1;n>=0&&e>0;){var o=t.charCodeAt(n--);o<128?r[--e]=o:o>127&&o<2048?(r[--e]=63&o|128,r[--e]=o>>6|192):(r[--e]=63&o|128,r[--e]=o>>6&63|128,r[--e]=o>>12|224)}r[--e]=0;for(var s=new SecureRandom,a=new Array;e>2;){for(a[0]=0;0==a[0];)s.nextBytes(a);r[--e]=a[0]}return r[--e]=2,r[--e]=0,new i(r)}function W(t,e,i){for(var r="",n=0;r.length<e;)r+=i(String.fromCharCode.apply(String,t.concat([(4278190080&n)>>24,(16711680&n)>>16,(65280&n)>>8,255&n]))),n+=1;return r}function $(t,e,r){if(t.length+2*Bt+2>e)throw"Message too long for RSA";var n,o="";for(n=0;n<e-t.length-2*Bt-2;n+=1)o+="\0";var s=rstr_sha1("")+o+""+t,a=new Array(Bt);(new SecureRandom).nextBytes(a);var c=W(a,s.length,r||rstr_sha1),h=[];for(n=0;n<s.length;n+=1)h[n]=s.charCodeAt(n)^c.charCodeAt(n);var p=W(h,a.length,rstr_sha1),u=[0];for(n=0;n<a.length;n+=1)u[n+1]=a[n]^p.charCodeAt(n);return new i(u.concat(h))}function Y(){this.n=null,this.e=0,this.d=null,this.o=null,this.jy=null,this.Uy=null,this.Vy=null,this.Qy=null}function X(t,e){this.qy=!0,"string"!=typeof t?(this.n=t,this.e=e):null!=t&&null!=e&&t.length>0&&e.length>0?(this.n=G(t,16),this.e=parseInt(e,16)):alert("Invalid RSA public key")}function Z(t){return t.Jy(this.e,this.n)}function tt(t){var e=z(t,this.n.Ky()+7>>3);if(null==e)return null;var i=this.Gy(e);if(null==i)return null;var r=i.toString(16);return 0==(1&r.length)?r:"0"+r}function et(t,e){var i=$(t,this.n.Ky()+7>>3,e);if(null==i)return null;var r=this.Gy(i);if(null==r)return null;var n=r.toString(16);return 0==(1&n.length)?n:"0"+n}function it(t,e){for(var i="",r=e/4-t.length,n=0;n<r;n++)i+="0";return i+t}function rt(t,e){var i=function(t){return KJUR.crypto.Wy.zy(t,e)},r=i(t);return this.$y(r,e)}function nt(t,e){var i=KJUR.crypto.Wy.Yy(t,e,this.n.Ky()),r=G(i,16),n=this.doPrivate(r),o=n.toString(16);return it(o,this.n.Ky())}function ot(t){return rt.call(this,t,"sha1")}function st(t){return rt.call(this,t,"sha256")}function at(t,e,i){for(var r="",n=0;r.length<e;)r+=hextorstr(i(rstrtohex(t+String.fromCharCode.apply(String,[(4278190080&n)>>24,(16711680&n)>>16,(65280&n)>>8,255&n])))),n+=1;return r}function ct(t,e,i){var r=function(t){return KJUR.crypto.Wy.Xy(t,e)},n=r(rstrtohex(t));return void 0===i&&(i=-1),this.Zy(n,e,i)}function ht(t,e,r){var n,o=hextorstr(t),s=o.length,a=this.n.Ky()-1,c=Math.ceil(a/8),h=function(t){return KJUR.crypto.Wy.Xy(t,e)};if(r===-1||void 0===r)r=s;else if(r===-2)r=c-s-2;else if(r<-2)throw"invalid salt length";if(c<s+r+2)throw"data too long";var p="";r>0&&(p=new Array(r),(new SecureRandom).nextBytes(p),p=String.fromCharCode.apply(String,p));var u=hextorstr(h(rstrtohex("\0\0\0\0\0\0\0\0"+o+p))),l=[];for(n=0;n<c-r-s-2;n+=1)l[n]=0;var d=String.fromCharCode.apply(String,l)+""+p,f=at(u,d.length,h),g=[];for(n=0;n<d.length;n+=1)g[n]=d.charCodeAt(n)^f.charCodeAt(n);var v=65280>>8*c-a&255;for(g[0]&=~v,n=0;n<s;n++)g.push(u.charCodeAt(n));return g.push(188),it(this.doPrivate(new i(g)).toString(16),this.n.Ky())}function pt(t,e,i){var r=new Y;r.qh(e,i);var n=r.Gy(t);return n}function ut(t,e,i){var r=pt(t,e,i),n=r.toString(16).replace(/^1f+00/,"");return n}function lt(t){for(var e in KJUR.crypto.Wy.tm){var i=KJUR.crypto.Wy.tm[e],r=i.length;if(t.substring(0,r)==i){var n=[e,t.substring(r)];return n}}return[]}function dt(t,e,i,r){var n=ut(e,i,r),o=lt(n);if(0==o.length)return!1;var s=o[0],a=o[1],c=function(t){return KJUR.crypto.Wy.zy(t,s)},h=c(t);return a==h}function ft(t,e){var i=G(t,16),r=dt(e,i,this.n.toString(16),this.e.toString(16));return r}function gt(t,e){e=e.replace(Ft,""),e=e.replace(/[ \n]+/g,"");var i=G(e,16);if(i.Ky()>this.n.Ky())return 0;var r=this.Gy(i),n=r.toString(16).replace(/^1f+00/,""),o=lt(n);if(0==o.length)return!1;var s=o[0],a=o[1],c=function(t){return KJUR.crypto.Wy.zy(t,s)},h=c(t);return a==h}function vt(t,e){e=e.replace(Ft,""),e=e.replace(/[ \n]+/g,"");var i=G(e,16);if(i.Ky()>this.n.Ky())return 0;var r=this.Gy(i),n=r.toString(16).replace(/^1f+00/,""),o=lt(n);if(0==o.length)return!1;var s=(o[0],o[1]);return s==t}function yt(t,e,i,r){var n=function(t){return KJUR.crypto.Wy.Xy(t,i)},o=n(rstrtohex(t));return void 0===r&&(r=-1),this.em(o,e,i,r)}function mt(t,e,r,n){var o=new i(e,16);if(o.Ky()>this.n.Ky())return!1;var s,a=function(t){return KJUR.crypto.Wy.Xy(t,r)},c=hextorstr(t),h=c.length,p=this.n.Ky()-1,u=Math.ceil(p/8);if(n===-1||void 0===n)n=h;else if(n===-2)n=u-h-2;else if(n<-2)throw"invalid salt length";if(u<h+n+2)throw"data too long";var l=this.Gy(o).toByteArray();for(s=0;s<l.length;s+=1)l[s]&=255;for(;l.length<u;)l.unshift(0);if(188!==l[u-1])throw"encoded message does not end in 0xbc";l=String.fromCharCode.apply(String,l);var d=l.substr(0,u-h-1),f=l.substr(d.length,h),g=65280>>8*u-p&255;if(0!==(d.charCodeAt(0)&g))throw"bits beyond keysize not zero";var v=at(f,d.length,a),y=[];for(s=0;s<d.length;s+=1)y[s]=d.charCodeAt(s)^v.charCodeAt(s);y[0]&=~g;var m=u-h-n-2;for(s=0;s<m;s+=1)if(0!==y[s])throw"leftmost octets not zero";if(1!==y[m])throw"0x01 marker not found";return f===hextorstr(a(rstrtohex("\0\0\0\0\0\0\0\0"+c+String.fromCharCode.apply(String,y.slice(-n)))))}var wt={};wt.userAgent=!1;var Tt={};if("undefined"==typeof St||!St)var St={};St.im=function(){var t,e,i,r=arguments,n=null;for(t=0;t<r.length;t+=1)for(i=(""+r[t]).split("."),n=St,e="YAHOO"==i[0]?1:0;e<i.length;e+=1)n[i[e]]=n[i[e]]||{},n=n[i[e]];return n},St.log=function(t,e,i){var r=St.widget.Logger;return!(!r||!r.log)&&r.log(t,e,i)},St.register=function(t,e,i){var r,n,o,s,a,c=St.Ot.rm;for(c[t]||(c[t]={nm:[],om:[]}),r=c[t],n=i.version,o=i.pp,s=St.Ot.zi,r.name=t,r.version=n,r.pp=o,r.nm.push(n),r.om.push(o),r.sm=e,a=0;a<s.length;a+=1)s[a](r);e?(e.VERSION=n,e.am=o):St.log("mainClass is undefined for module "+t,"warn")},St.Ot=St.Ot||{rm:[],zi:[]},St.Ot.getVersion=function(t){return St.Ot.rm[t]||null},St.Ot.cm=function(t){var e,i=function(t){var e=0;return parseFloat(t.replace(/\./g,function(){return 1==e++?"":"."}))},r=wt,n={hm:0,opera:0,pm:0,um:0,chrome:0,lm:null,dm:0,fm:0,gm:0,vm:0,ym:null,mm:0,wm:0,Tm:r&&r.cajaVersion,Sm:!1,os:null},o=t||wt&&wt.userAgent,s=Tt&&Tt.location,a=s&&s.href;return n.Sm=a&&0===a.toLowerCase().indexOf("https"),o&&(/windows|win32/i.test(o)?n.os="windows":/macintosh/i.test(o)?n.os="macintosh":/rhino/i.test(o)&&(n.os="rhino"),/KHTML/.test(o)&&(n.um=1),e=o.match(/AppleWebKit\/([^\s]*)/),e&&e[1]&&(n.um=i(e[1]),/ Mobile\//.test(o)?(n.lm="Apple",e=o.match(/OS ([^\s]*)/),e&&e[1]&&(e=i(e[1].replace("_","."))),n.ym=e,n.fm=n.vm=n.gm=0,e=o.match(/iPad|iPod|iPhone/),e&&e[0]&&(n[e[0].toLowerCase()]=n.ym)):(e=o.match(/NokiaN[^\/]*|Android \d\.\d|webOS\/\d\.\d/),e&&(n.lm=e[0]),/webOS/.test(o)&&(n.lm="WebOS",e=o.match(/webOS\/([^\s]*);/),e&&e[1]&&(n.wm=i(e[1]))),/ Android/.test(o)&&(n.lm="Android",e=o.match(/Android ([^\s]*);/),e&&e[1]&&(n.mm=i(e[1])))),e=o.match(/Chrome\/([^\s]*)/),e&&e[1]?n.chrome=i(e[1]):(e=o.match(/AdobeAIR\/([^\s]*)/),e&&(n.dm=e[0]))),n.um||(e=o.match(/Opera[\s\/]([^\s]*)/),e&&e[1]?(n.opera=i(e[1]),e=o.match(/Version\/([^\s]*)/),e&&e[1]&&(n.opera=i(e[1])),e=o.match(/Opera Mini[^;]*/),e&&(n.lm=e[0])):(e=o.match(/MSIE\s([^;]*)/),e&&e[1]?n.hm=i(e[1]):(e=o.match(/Gecko\/([^\s]*)/),e&&(n.pm=1,e=o.match(/rv:([^\s\)]*)/),e&&e[1]&&(n.pm=i(e[1]))))))),n},St.Ot.tf=St.Ot.cm(),function(){if(St.im("util","widget","example"),"undefined"!=typeof YAHOO_config){var t,e=YAHOO_config.listener,i=St.Ot.zi,r=!0;if(e){for(t=0;t<i.length;t++)if(i[t]==e){r=!1;break}r&&i.push(e)}}}(),St.lang=St.lang||{},function(){var t=St.lang,e=Object.prototype,i="[object Array]",r="[object Function]",n="[object Object]",o=[],s={bm:"&amp;",Em:"&lt;",Im:"&gt;",Rm:"&quot;",km:"&#x27;",Jp:"&#x2F;",Cm:"&#x60;"},a=["toString","valueOf"],c={isArray:function(t){return e.toString.apply(t)===i},Om:function(t){return"boolean"==typeof t},Pm:function(t){return"function"==typeof t||e.toString.apply(t)===r},Am:function(t){return null===t},Nm:function(t){return"number"==typeof t&&isFinite(t)},ov:function(e){return e&&("object"==typeof e||t.Pm(e))||!1},xm:function(t){return"string"==typeof t},Bm:function(t){return"undefined"==typeof t},Fm:St.Ot.tf.hm?function(i,r){var n,o,s;for(n=0;n<a.length;n+=1)o=a[n],s=r[o],t.Pm(s)&&s!=e[o]&&(i[o]=s)}:function(){},_m:function(t){return t.replace(/[&<>"'\/`]/g,function(t){return s[t]})},extend:function(i,r,n){if(!r||!i)throw new Error("extend failed, please check that all dependencies are included.");var o,s=function(){};if(s.prototype=r.prototype,i.prototype=new s,i.prototype.constructor=i,i.Dm=r.prototype,r.prototype.constructor==e.constructor&&(r.prototype.constructor=r),n){for(o in n)t.hasOwnProperty(n,o)&&(i.prototype[o]=n[o]);t.Fm(i.prototype,n)}},Hm:function(e,i){if(!i||!e)throw new Error("Absorb failed, verify dependencies.");var r,n,o=arguments,s=o[2];if(s&&s!==!0)for(r=2;r<o.length;r+=1)e[o[r]]=i[o[r]];else{for(n in i)!s&&n in e||(e[n]=i[n]);t.Fm(e,i)}return e},Lm:function(e,i){if(!i||!e)throw new Error("Augment failed, verify dependencies.");var r,n=[e.prototype,i.prototype];for(r=2;r<arguments.length;r+=1)n.push(arguments[r]);return t.Hm.apply(this,n),e},dump:function(e,i){var r,n,o=[],s="{...}",a="f(){...}",c=", ",h=" => ";if(!t.ov(e))return e+"";if(e instanceof Date||"nodeType"in e&&"tagName"in e)return e;if(t.Pm(e))return a;if(i=t.Nm(i)?i:3,t.isArray(e)){for(o.push("["),r=0,n=e.length;r<n;r+=1)t.ov(e[r])?o.push(i>0?t.dump(e[r],i-1):s):o.push(e[r]),o.push(c);o.length>1&&o.pop(),o.push("]")}else{o.push("{");for(r in e)t.hasOwnProperty(e,r)&&(o.push(r+h),t.ov(e[r])?o.push(i>0?t.dump(e[r],i-1):s):o.push(e[r]),o.push(c));o.length>1&&o.pop(),o.push("}")}return o.join("")},Mm:function(e,i,r,o){for(var s,a,c,h,p,u,l,d,f,g=[],v=e.length,y="dump",m=" ",w="{",T="}";(s=e.lastIndexOf(w,v),!(s<0))&&(a=e.indexOf(T,s),!(s+1>a));)l=e.substring(s+1,a),h=l,u=null,c=h.indexOf(m),c>-1&&(u=h.substring(c+1),h=h.substring(0,c)),p=i[h],r&&(p=r(h,p,u)),t.ov(p)?t.isArray(p)?p=t.dump(p,parseInt(u,10)):(u=u||"",d=u.indexOf(y),d>-1&&(u=u.substring(4)),f=p.toString(),p=f===n||d>-1?t.dump(p,parseInt(u,10)):f):t.xm(p)||t.Nm(p)||(p="~-"+g.length+"-~",g[g.length]=l),e=e.substring(0,s)+p+e.substring(a+1),o===!1&&(v=s-1);for(s=g.length-1;s>=0;s-=1)e=e.replace(new RegExp("~-"+s+"-~"),"{"+g[s]+"}","g");return e},trim:function(t){try{return t.replace(/^\s+|\s+$/g,"")}catch(e){return t}},jm:function(){var e,i={},r=arguments,n=r.length;for(e=0;e<n;e+=1)t.Hm(i,r[e],!0);return i},Um:function(e,i,r,n,s){e=e||0,i=i||{};var a,c,h=r,p=n;if(t.xm(r)&&(h=i[r]),!h)throw new TypeError("method undefined");return t.Bm(n)||t.isArray(p)||(p=[n]),a=function(){h.apply(i,p||o)},c=s?setInterval(a,e):setTimeout(a,e),{interval:s,cancel:function(){this.interval?clearInterval(c):clearTimeout(c)}}},Vm:function(e){return t.ov(e)||t.xm(e)||t.Nm(e)||t.Om(e)}};t.hasOwnProperty=e.hasOwnProperty?function(t,e){return t&&t.hasOwnProperty&&t.hasOwnProperty(e)}:function(e,i){return!t.Bm(e[i])&&e.constructor.prototype[i]!==e[i]},c.Hm(t,c,!0),St.util.Lang=t,t.Qm=t.Lm,St.Qm=t.Lm,St.extend=t.extend}(),St.register("yahoo",St,{version:"2.9.0",pp:"2800"});/*! CryptoJS v3.1.2 core-fix.js
   * code.google.com/p/crypto-js
   * (c) 2009-2013 by Jeff Mott. All rights reserved.
   * code.google.com/p/crypto-js/wiki/License
   * THIS IS FIX of 'core.js' to fix Hmac issue.
   * https://code.google.com/p/crypto-js/issues/detail?id=84
   * https://crypto-js.googlecode.com/svn-history/r667/branches/3.x/src/core.js
   */
  var bt=bt||function(t,e){var i={},r=i.qm={},n=r.Jm=function(){function t(){}return{extend:function(e){t.prototype=this;var i=new t;return e&&i.Km(e),i.hasOwnProperty("init")||(i.init=function(){i.Gm.init.apply(this,arguments)}),i.init.prototype=i,i.Gm=this,i},create:function(){var t=this.extend();return t.init.apply(t,arguments),t},init:function(){},Km:function(t){for(var e in t)t.hasOwnProperty(e)&&(this[e]=t[e]);t.hasOwnProperty("toString")&&(this.toString=t.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),o=r.zm=n.extend({init:function(t,i){t=this.Wm=t||[],i!=e?this.$m=i:this.$m=4*t.length},toString:function(t){return(t||a).stringify(this)},concat:function(t){var e=this.Wm,i=t.Wm,r=this.$m,n=t.$m;if(this.hy(),r%4)for(var o=0;o<n;o++){var s=i[o>>>2]>>>24-o%4*8&255;e[r+o>>>2]|=s<<24-(r+o)%4*8}else for(var o=0;o<n;o+=4)e[r+o>>>2]=i[o>>>2];return this.$m+=n,this},hy:function(){var e=this.Wm,i=this.$m;e[i>>>2]&=4294967295<<32-i%4*8,e.length=t.ceil(i/4)},clone:function(){var t=n.clone.call(this);return t.Wm=this.Wm.slice(0),t},random:function(e){for(var i=[],r=0;r<e;r+=4)i.push(4294967296*t.random()|0);return new o.init(i,e)}}),s=i.Ym={},a=s.Xm={stringify:function(t){for(var e=t.Wm,i=t.$m,r=[],n=0;n<i;n++){var o=e[n>>>2]>>>24-n%4*8&255;r.push((o>>>4).toString(16)),r.push((15&o).toString(16))}return r.join("")},parse:function(t){for(var e=t.length,i=[],r=0;r<e;r+=2)i[r>>>3]|=parseInt(t.substr(r,2),16)<<24-r%8*4;return new o.init(i,e/2)}},c=s.Zm={stringify:function(t){for(var e=t.Wm,i=t.$m,r=[],n=0;n<i;n++){var o=e[n>>>2]>>>24-n%4*8&255;r.push(String.fromCharCode(o))}return r.join("")},parse:function(t){for(var e=t.length,i=[],r=0;r<e;r++)i[r>>>2]|=(255&t.charCodeAt(r))<<24-r%4*8;return new o.init(i,e)}},h=s.tw={stringify:function(t){try{return decodeURIComponent(escape(c.stringify(t)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:function(t){return c.parse(unescape(encodeURIComponent(t)))}},p=r.ew=n.extend({reset:function(){this.iw=new o.init,this.rw=0},nw:function(t){"string"==typeof t&&(t=h.parse(t)),this.iw.concat(t),this.rw+=t.$m},ow:function(e){var i=this.iw,r=i.Wm,n=i.$m,s=this.sw,a=4*s,c=n/a;c=e?t.ceil(c):t.max((0|c)-this.aw,0);var h=c*s,p=t.min(4*h,n);if(h){for(var u=0;u<h;u+=s)this.cw(r,u);var l=r.splice(0,h);i.$m-=p}return new o.init(l,p)},clone:function(){var t=n.clone.call(this);return t.iw=this.iw.clone(),t},aw:0}),u=(r.hw=p.extend({pw:n.extend(),init:function(t){this.pw=this.pw.extend(t),this.reset()},reset:function(){p.reset.call(this),this.uw()},update:function(t){return this.nw(t),this.ow(),this},lw:function(t){t&&this.nw(t);var e=this.dw();return e},sw:16,fw:function(t){return function(e,i){return new t.init(i).lw(e)}},gw:function(t){return function(e,i){return new u.HMAC.init(t,i).lw(e)}}}),i.vw={});return i}(Math);!function(t){function e(t,e,i,r,n,o,s){return t=t+(e&i|~e&r)+n+s,(t<<o|t>>>32-o)+e}function i(t,e,i,r,n,o,s){return t=t+(e&r|i&~r)+n+s,(t<<o|t>>>32-o)+e}function r(t,e,i,r,n,o,s){return t=t+(e^i^r)+n+s,(t<<o|t>>>32-o)+e}function n(t,e,i,r,n,o,s){return t=t+(i^(e|~r))+n+s,(t<<o|t>>>32-o)+e}for(var o=bt,s=o.qm,a=s.zm,c=s.hw,s=o.vw,h=[],p=0;64>p;p++)h[p]=4294967296*t.abs(t.sin(p+1))|0;s=s.yw=c.extend({uw:function(){this.mw=new a.init([1732584193,4023233417,2562383102,271733878])},cw:function(t,o){for(var s=0;16>s;s++){var a=o+s,c=t[a];t[a]=16711935&(c<<8|c>>>24)|4278255360&(c<<24|c>>>8)}var s=this.mw.Wm,a=t[o+0],c=t[o+1],p=t[o+2],u=t[o+3],l=t[o+4],d=t[o+5],f=t[o+6],g=t[o+7],v=t[o+8],y=t[o+9],m=t[o+10],w=t[o+11],T=t[o+12],S=t[o+13],b=t[o+14],E=t[o+15],I=s[0],R=s[1],k=s[2],C=s[3],I=e(I,R,k,C,a,7,h[0]),C=e(C,I,R,k,c,12,h[1]),k=e(k,C,I,R,p,17,h[2]),R=e(R,k,C,I,u,22,h[3]),I=e(I,R,k,C,l,7,h[4]),C=e(C,I,R,k,d,12,h[5]),k=e(k,C,I,R,f,17,h[6]),R=e(R,k,C,I,g,22,h[7]),I=e(I,R,k,C,v,7,h[8]),C=e(C,I,R,k,y,12,h[9]),k=e(k,C,I,R,m,17,h[10]),R=e(R,k,C,I,w,22,h[11]),I=e(I,R,k,C,T,7,h[12]),C=e(C,I,R,k,S,12,h[13]),k=e(k,C,I,R,b,17,h[14]),R=e(R,k,C,I,E,22,h[15]),I=i(I,R,k,C,c,5,h[16]),C=i(C,I,R,k,f,9,h[17]),k=i(k,C,I,R,w,14,h[18]),R=i(R,k,C,I,a,20,h[19]),I=i(I,R,k,C,d,5,h[20]),C=i(C,I,R,k,m,9,h[21]),k=i(k,C,I,R,E,14,h[22]),R=i(R,k,C,I,l,20,h[23]),I=i(I,R,k,C,y,5,h[24]),C=i(C,I,R,k,b,9,h[25]),k=i(k,C,I,R,u,14,h[26]),R=i(R,k,C,I,v,20,h[27]),I=i(I,R,k,C,S,5,h[28]),C=i(C,I,R,k,p,9,h[29]),k=i(k,C,I,R,g,14,h[30]),R=i(R,k,C,I,T,20,h[31]),I=r(I,R,k,C,d,4,h[32]),C=r(C,I,R,k,v,11,h[33]),k=r(k,C,I,R,w,16,h[34]),R=r(R,k,C,I,b,23,h[35]),I=r(I,R,k,C,c,4,h[36]),C=r(C,I,R,k,l,11,h[37]),k=r(k,C,I,R,g,16,h[38]),R=r(R,k,C,I,m,23,h[39]),I=r(I,R,k,C,S,4,h[40]),C=r(C,I,R,k,a,11,h[41]),k=r(k,C,I,R,u,16,h[42]),R=r(R,k,C,I,f,23,h[43]),I=r(I,R,k,C,y,4,h[44]),C=r(C,I,R,k,T,11,h[45]),k=r(k,C,I,R,E,16,h[46]),R=r(R,k,C,I,p,23,h[47]),I=n(I,R,k,C,a,6,h[48]),C=n(C,I,R,k,g,10,h[49]),k=n(k,C,I,R,b,15,h[50]),R=n(R,k,C,I,d,21,h[51]),I=n(I,R,k,C,T,6,h[52]),C=n(C,I,R,k,u,10,h[53]),k=n(k,C,I,R,m,15,h[54]),R=n(R,k,C,I,c,21,h[55]),I=n(I,R,k,C,v,6,h[56]),C=n(C,I,R,k,E,10,h[57]),k=n(k,C,I,R,f,15,h[58]),R=n(R,k,C,I,S,21,h[59]),I=n(I,R,k,C,l,6,h[60]),C=n(C,I,R,k,w,10,h[61]),k=n(k,C,I,R,p,15,h[62]),R=n(R,k,C,I,y,21,h[63]);s[0]=s[0]+I|0,s[1]=s[1]+R|0,s[2]=s[2]+k|0,s[3]=s[3]+C|0},dw:function(){var e=this.iw,i=e.Wm,r=8*this.rw,n=8*e.$m;i[n>>>5]|=128<<24-n%32;var o=t.floor(r/4294967296);for(i[(n+64>>>9<<4)+15]=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),i[(n+64>>>9<<4)+14]=16711935&(r<<8|r>>>24)|4278255360&(r<<24|r>>>8),e.$m=4*(i.length+1),this.ow(),e=this.mw,i=e.Wm,r=0;4>r;r++)n=i[r],i[r]=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8);return e},clone:function(){var t=c.clone.call(this);return t.mw=this.mw.clone(),t}}),o.yw=c.fw(s),o.ww=c.gw(s)}(Math),function(){var t=bt,e=t.qm,i=e.zm,r=e.hw,n=[],e=t.vw.Tw=r.extend({uw:function(){this.mw=new i.init([1732584193,4023233417,2562383102,271733878,3285377520])},cw:function(t,e){for(var i=this.mw.Wm,r=i[0],o=i[1],s=i[2],a=i[3],c=i[4],h=0;80>h;h++){if(16>h)n[h]=0|t[e+h];else{var p=n[h-3]^n[h-8]^n[h-14]^n[h-16];n[h]=p<<1|p>>>31}p=(r<<5|r>>>27)+c+n[h],p=20>h?p+((o&s|~o&a)+1518500249):40>h?p+((o^s^a)+1859775393):60>h?p+((o&s|o&a|s&a)-1894007588):p+((o^s^a)-899497514),c=a,a=s,s=o<<30|o>>>2,o=r,r=p}i[0]=i[0]+r|0,i[1]=i[1]+o|0,i[2]=i[2]+s|0,i[3]=i[3]+a|0,i[4]=i[4]+c|0},dw:function(){var t=this.iw,e=t.Wm,i=8*this.rw,r=8*t.$m;return e[r>>>5]|=128<<24-r%32,e[(r+64>>>9<<4)+14]=Math.floor(i/4294967296),e[(r+64>>>9<<4)+15]=i,t.$m=4*e.length,this.ow(),this.mw},clone:function(){var t=r.clone.call(this);return t.mw=this.mw.clone(),t}});t.Tw=r.fw(e),t.Sw=r.gw(e)}();/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/ */
  var Et,It=0xdeadbeefcafe,Rt=15715070==(16777215&It);Rt&&"Microsoft Internet Explorer"==wt.appName?(i.prototype.gy=o,Et=30):Rt&&"Netscape"!=wt.appName?(i.prototype.gy=n,Et=26):(i.prototype.gy=s,Et=28),i.prototype.ay=Et,i.prototype.uy=(1<<Et)-1,i.prototype.oy=1<<Et;var kt=52;i.prototype.Ty=Math.pow(2,kt),i.prototype.my=kt-Et,i.prototype.wy=2*Et-kt;var Ct,Ot,Pt="0123456789abcdefghijklmnopqrstuvwxyz",At=new Array;for(Ct="0".charCodeAt(0),Ot=0;Ot<=9;++Ot)At[Ct++]=Ot;for(Ct="a".charCodeAt(0),Ot=10;Ot<36;++Ot)At[Ct++]=Ot;for(Ct="A".charCodeAt(0),Ot=10;Ot<36;++Ot)At[Ct++]=Ot;P.prototype._y=A,P.prototype.Ly=N,P.prototype.reduce=x,P.prototype.Hy=B,P.prototype.Dy=F,D.prototype._y=H,D.prototype.Ly=L,D.prototype.reduce=M,D.prototype.Hy=U,D.prototype.Dy=j,i.prototype.vy=h,i.prototype.sy=p,i.prototype.ey=l,i.prototype.hy=d,i.prototype.Sy=T,i.prototype.Ey=S,i.prototype.yy=b,i.prototype.Iy=E,i.prototype.py=I,i.prototype.Cy=R,i.prototype.Oy=k,i.prototype.Ry=C,i.prototype.Ay=_,i.prototype.My=V,i.prototype.exp=Q,i.prototype.toString=f,i.prototype.ly=g,i.prototype.abs=v,i.prototype.by=y,i.prototype.Ky=w,i.prototype.ky=O,i.prototype.Jy=q,i.ZERO=u(0),i.ONE=u(1),/*! asn1-1.0.9.js (c) 2013-2015 Kenji Urushima | kjur.github.com/jsrsasign/license
   */
  "undefined"!=typeof KJUR&&KJUR||(KJUR={}),"undefined"!=typeof KJUR.bw&&KJUR.bw||(KJUR.bw={}),KJUR.bw.Ew=new function(){this.Iw=function(t){var e=t.toString(16);return e.length%2==1&&(e="0"+e),e},this.Rw=function(t){var e=t.toString(16);if("-"!=e.substr(0,1))e.length%2==1?e="0"+e:e.match(/^[0-7]/)||(e="00"+e);else{var r=e.substr(1),n=r.length;n%2==1?n+=1:e.match(/^[0-7]/)||(n+=2);for(var o="",s=0;s<n;s++)o+="f";var a=new i(o,16),c=a.xor(t).add(i.ONE);e=c.toString(16).replace(/^-/,"")}return e},this.kw=function(t,e){var i=(KJUR.bw,bt.Ym.Xm.parse(t)),r=bt.Ym.Base64.stringify(i),n=r.replace(/(.{64})/g,"$1\r\n");return n=n.replace(/\r\n$/,""),"-----BEGIN "+e+"-----\r\n"+n+"\r\n-----END "+e+"-----\r\n"},this.Cw=function(t){var e=KJUR.bw,i=Object.keys(t);if(1!=i.length)throw"key of param shall be only one.";var r=i[0];if(":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":"+r+":")==-1)throw"undefined key: "+r;if("bool"==r)return new e.Ow(t[r]);if("int"==r)return new e.Pw(t[r]);if("bitstr"==r)return new e.Aw(t[r]);if("octstr"==r)return new e.Nw(t[r]);if("null"==r)return new e.xw(t[r]);if("oid"==r)return new e.Bw(t[r]);if("enum"==r)return new e.Fw(t[r]);if("utf8str"==r)return new e._w(t[r]);if("numstr"==r)return new e.Dw(t[r]);if("prnstr"==r)return new e.Hw(t[r]);if("telstr"==r)return new e.Lw(t[r]);if("ia5str"==r)return new e.Mw(t[r]);if("utctime"==r)return new e.jw(t[r]);if("gentime"==r)return new e.Uw(t[r]);if("seq"==r){for(var n=t[r],o=[],s=0;s<n.length;s++){var a=e.Ew.Cw(n[s]);o.push(a)}return new e.Vw({Hf:o})}if("set"==r){for(var n=t[r],o=[],s=0;s<n.length;s++){var a=e.Ew.Cw(n[s]);o.push(a)}return new e.Qw({Hf:o})}if("tag"==r){var c=t[r];if("[object Array]"===Object.prototype.toString.call(c)&&3==c.length){var h=e.Ew.Cw(c[2]);return new e.qw({tag:c[0],Jw:c[1],Kw:h})}var p={};if(void 0!==c.Jw&&(p.Jw=c.Jw),void 0!==c.tag&&(p.tag=c.tag),void 0===c.Kw)throw"obj shall be specified for 'tag'.";return p.Kw=e.Ew.Cw(c.Kw),new e.qw(p)}},this.Gw=function(t){var e=this.Cw(t);return e.zw()}},KJUR.bw.Ew.Ww=function(t){for(var e="",r=parseInt(t.substr(0,2),16),n=Math.floor(r/40),o=r%40,e=n+"."+o,s="",a=2;a<t.length;a+=2){var c=parseInt(t.substr(a,2),16),h=("00000000"+c.toString(2)).slice(-8);if(s+=h.substr(1,7),"0"==h.substr(0,1)){var p=new i(s,2);e=e+"."+p.toString(10),s=""}}return e},KJUR.bw.Ew.$w=function(t){var e=function(t){var e=t.toString(16);return 1==e.length&&(e="0"+e),e},r=function(t){var r="",n=new i(t,10),o=n.toString(2),s=7-o.length%7;7==s&&(s=0);for(var a="",c=0;c<s;c++)a+="0";o=a+o;for(var c=0;c<o.length-1;c+=7){var h=o.substr(c,7);c!=o.length-7&&(h="1"+h),r+=e(parseInt(h,2))}return r};if(!t.match(/^[0-9.]+$/))throw"malformed oid string: "+t;var n="",o=t.split("."),s=40*parseInt(o[0])+parseInt(o[1]);n+=e(s),o.splice(0,2);for(var a=0;a<o.length;a++)n+=r(o[a]);return n},KJUR.bw.Yw=function(){var t="";this.Xw=function(){if("undefined"==typeof this.Zw||null==this.Zw)throw"this.hV is null or undefined.";if(this.Zw.length%2==1)throw"value hex must be even length: n="+t.length+",v="+this.Zw;var e=this.Zw.length/2,i=e.toString(16);if(i.length%2==1&&(i="0"+i),e<128)return i;var r=i.length/2;if(r>15)throw"ASN.1 length too long to represent by 8x: n = "+e.toString(16);var n=128+r;return n.toString(16)+i},this.zw=function(){return(null==this.tT||this.eT)&&(this.Zw=this.iT(),this.rT=this.Xw(),this.tT=this.nT+this.rT+this.Zw,this.eT=!1),this.tT},this.oT=function(){return this.zw(),this.Zw},this.iT=function(){return""}},KJUR.bw.sT=function(t){KJUR.bw.sT.Dm.constructor.call(this);this.aT=function(){return this.ny},this.cT=function(t){this.tT=null,this.eT=!0,this.ny=t,this.Zw=stohex(this.ny)},this.hT=function(t){this.tT=null,this.eT=!0,this.ny=null,this.Zw=t},this.iT=function(){return this.Zw},"undefined"!=typeof t&&("string"==typeof t?this.cT(t):"undefined"!=typeof t.ac?this.cT(t.ac):"undefined"!=typeof t.pT&&this.hT(t.pT))},St.lang.extend(KJUR.bw.sT,KJUR.bw.Yw),KJUR.bw.uT=function(t){KJUR.bw.uT.Dm.constructor.call(this);this.lT=function(t){utc=t.getTime()+6e4*t.getTimezoneOffset();var e=new Date(utc);return e},this.dT=function(t,e,i){var r=this.fT,n=this.lT(t),o=String(n.getFullYear());"utc"==e&&(o=o.substr(2,2));var s=r(String(n.getMonth()+1),2),a=r(String(n.getDate()),2),c=r(String(n.getHours()),2),h=r(String(n.getMinutes()),2),p=r(String(n.getSeconds()),2),u=o+s+a+c+h+p;if(i===!0){var l=n.getMilliseconds();if(0!=l){var d=r(String(l),3);d=d.replace(/[0]+$/,""),u=u+"."+d}}return u+"Z"},this.fT=function(t,e){return t.length>=e?t:new Array(e-t.length+1).join("0")+t},this.aT=function(){return this.ny},this.cT=function(t){this.tT=null,this.eT=!0,this.ny=t,this.Zw=stohex(t)},this.gT=function(t,e,i,r,n,o){var s=new Date(Date.UTC(t,e-1,i,r,n,o,0));this.vT(s)},this.iT=function(){return this.Zw}},St.lang.extend(KJUR.bw.uT,KJUR.bw.Yw),KJUR.bw.yT=function(t){KJUR.bw.sT.Dm.constructor.call(this);this.mT=function(t){this.tT=null,this.eT=!0,this.wT=t},this.TT=function(t){this.tT=null,this.eT=!0,this.wT.push(t)},this.wT=new Array,"undefined"!=typeof t&&"undefined"!=typeof t.Hf&&(this.wT=t.Hf)},St.lang.extend(KJUR.bw.yT,KJUR.bw.Yw),KJUR.bw.Ow=function(){KJUR.bw.Ow.Dm.constructor.call(this),this.nT="01",this.tT="0101ff"},St.lang.extend(KJUR.bw.Ow,KJUR.bw.Yw),KJUR.bw.Pw=function(t){KJUR.bw.Pw.Dm.constructor.call(this),this.nT="02",this.ST=function(t){this.tT=null,this.eT=!0,this.Zw=KJUR.bw.Ew.Rw(t)},this.bT=function(t){var e=new i(String(t),10);this.ST(e)},this.ET=function(t){this.Zw=t},this.iT=function(){return this.Zw},"undefined"!=typeof t&&("undefined"!=typeof t.bigint?this.ST(t.bigint):"undefined"!=typeof t["int"]?this.bT(t["int"]):"number"==typeof t?this.bT(t):"undefined"!=typeof t.pT&&this.ET(t.pT))},St.lang.extend(KJUR.bw.Pw,KJUR.bw.Yw),KJUR.bw.Aw=function(t){KJUR.bw.Aw.Dm.constructor.call(this),this.nT="03",this.IT=function(t){this.tT=null,this.eT=!0,this.Zw=t},this.RT=function(t,e){if(t<0||7<t)throw"unused bits shall be from 0 to 7: u = "+t;var i="0"+t;this.tT=null,this.eT=!0,this.Zw=i+e},this.kT=function(t){t=t.replace(/0+$/,"");var e=8-t.length%8;8==e&&(e=0);for(var i=0;i<=e;i++)t+="0";for(var r="",i=0;i<t.length-1;i+=8){var n=t.substr(i,8),o=parseInt(n,2).toString(16);1==o.length&&(o="0"+o),r+=o}this.tT=null,this.eT=!0,this.Zw="0"+e+r},this.CT=function(t){for(var e="",i=0;i<t.length;i++)e+=1==t[i]?"1":"0";this.kT(e)},this.OT=function(t){for(var e=new Array(t),i=0;i<t;i++)e[i]=!1;return e},this.iT=function(){return this.Zw},"undefined"!=typeof t&&("string"==typeof t&&t.toLowerCase().match(/^[0-9a-f]+$/)?this.IT(t):"undefined"!=typeof t.pT?this.IT(t.pT):"undefined"!=typeof t.bin?this.kT(t.bin):"undefined"!=typeof t.Hf&&this.CT(t.Hf))},St.lang.extend(KJUR.bw.Aw,KJUR.bw.Yw),KJUR.bw.Nw=function(t){KJUR.bw.Nw.Dm.constructor.call(this,t),this.nT="04"},St.lang.extend(KJUR.bw.Nw,KJUR.bw.sT),KJUR.bw.xw=function(){KJUR.bw.xw.Dm.constructor.call(this),this.nT="05",this.tT="0500"},St.lang.extend(KJUR.bw.xw,KJUR.bw.Yw),KJUR.bw.Bw=function(t){var e=function(t){var e=t.toString(16);return 1==e.length&&(e="0"+e),e},r=function(t){var r="",n=new i(t,10),o=n.toString(2),s=7-o.length%7;7==s&&(s=0);for(var a="",c=0;c<s;c++)a+="0";o=a+o;for(var c=0;c<o.length-1;c+=7){var h=o.substr(c,7);c!=o.length-7&&(h="1"+h),r+=e(parseInt(h,2))}return r};KJUR.bw.Bw.Dm.constructor.call(this),this.nT="06",this.ET=function(t){this.tT=null,this.eT=!0,this.ny=null,this.Zw=t},this.PT=function(t){if(!t.match(/^[0-9.]+$/))throw"malformed oid string: "+t;var i="",n=t.split("."),o=40*parseInt(n[0])+parseInt(n[1]);i+=e(o),n.splice(0,2);for(var s=0;s<n.length;s++)i+=r(n[s]);this.tT=null,this.eT=!0,this.ny=null,this.Zw=i},this.AT=function(t){if("undefined"==typeof KJUR.bw.x509.NT.name2oidList[t])throw"DERObjectIdentifier oidName undefined: "+t;var e=KJUR.bw.x509.NT.name2oidList[t];this.PT(e)},this.iT=function(){return this.Zw},"undefined"!=typeof t&&("string"==typeof t&&t.match(/^[0-2].[0-9.]+$/)?this.PT(t):void 0!==KJUR.bw.x509.NT.name2oidList[t]?this.PT(KJUR.bw.x509.NT.name2oidList[t]):"undefined"!=typeof t.oid?this.PT(t.oid):"undefined"!=typeof t.pT?this.ET(t.pT):"undefined"!=typeof t.name&&this.AT(t.name))},St.lang.extend(KJUR.bw.Bw,KJUR.bw.Yw),KJUR.bw.Fw=function(t){KJUR.bw.Fw.Dm.constructor.call(this),this.nT="0a",this.ST=function(t){this.tT=null,this.eT=!0,this.Zw=KJUR.bw.Ew.Rw(t)},this.bT=function(t){var e=new i(String(t),10);this.ST(e)},this.ET=function(t){this.Zw=t},this.iT=function(){return this.Zw},"undefined"!=typeof t&&("undefined"!=typeof t["int"]?this.bT(t["int"]):"number"==typeof t?this.bT(t):"undefined"!=typeof t.pT&&this.ET(t.pT))},St.lang.extend(KJUR.bw.Fw,KJUR.bw.Yw),KJUR.bw._w=function(t){KJUR.bw._w.Dm.constructor.call(this,t),this.nT="0c"},St.lang.extend(KJUR.bw._w,KJUR.bw.sT),KJUR.bw.Dw=function(t){KJUR.bw.Dw.Dm.constructor.call(this,t),this.nT="12"},St.lang.extend(KJUR.bw.Dw,KJUR.bw.sT),KJUR.bw.Hw=function(t){KJUR.bw.Hw.Dm.constructor.call(this,t),this.nT="13"},St.lang.extend(KJUR.bw.Hw,KJUR.bw.sT),KJUR.bw.Lw=function(t){KJUR.bw.Lw.Dm.constructor.call(this,t),this.nT="14"},St.lang.extend(KJUR.bw.Lw,KJUR.bw.sT),KJUR.bw.Mw=function(t){KJUR.bw.Mw.Dm.constructor.call(this,t),this.nT="16"},St.lang.extend(KJUR.bw.Mw,KJUR.bw.sT),KJUR.bw.jw=function(t){KJUR.bw.jw.Dm.constructor.call(this,t),this.nT="17",this.vT=function(t){this.tT=null,this.eT=!0,this.xT=t,this.ny=this.dT(this.xT,"utc"),this.Zw=stohex(this.ny)},this.iT=function(){return"undefined"==typeof this.xT&&"undefined"==typeof this.ny&&(this.xT=new Date,this.ny=this.dT(this.xT,"utc"),this.Zw=stohex(this.ny)),this.Zw},void 0!==t&&(void 0!==t.ac?this.cT(t.ac):"string"==typeof t&&t.match(/^[0-9]{12}Z$/)?this.cT(t):void 0!==t.pT?this.hT(t.pT):void 0!==t.xT&&this.vT(t.xT))},St.lang.extend(KJUR.bw.jw,KJUR.bw.uT),KJUR.bw.Uw=function(t){KJUR.bw.Uw.Dm.constructor.call(this,t),this.nT="18",this.BT=!1,this.vT=function(t){this.tT=null,this.eT=!0,this.xT=t,this.ny=this.dT(this.xT,"gen",this.BT),this.Zw=stohex(this.ny)},this.iT=function(){return void 0===this.xT&&void 0===this.ny&&(this.xT=new Date,this.ny=this.dT(this.xT,"gen",this.BT),this.Zw=stohex(this.ny)),this.Zw},void 0!==t&&(void 0!==t.ac?this.cT(t.ac):"string"==typeof t&&t.match(/^[0-9]{14}Z$/)?this.cT(t):void 0!==t.pT?this.hT(t.pT):void 0!==t.xT&&this.vT(t.xT),t.millis===!0&&(this.BT=!0))},St.lang.extend(KJUR.bw.Uw,KJUR.bw.uT),KJUR.bw.Vw=function(t){KJUR.bw.Vw.Dm.constructor.call(this,t),this.nT="30",this.iT=function(){for(var t="",e=0;e<this.wT.length;e++){var i=this.wT[e];t+=i.zw()}return this.Zw=t,this.Zw}},St.lang.extend(KJUR.bw.Vw,KJUR.bw.yT),KJUR.bw.Qw=function(t){KJUR.bw.Qw.Dm.constructor.call(this,t),this.nT="31",this.FT=!0,this.iT=function(){for(var t=new Array,e=0;e<this.wT.length;e++){var i=this.wT[e];t.push(i.zw())}return 1==this.FT&&t.sort(),this.Zw=t.join(""),this.Zw},"undefined"!=typeof t&&"undefined"!=typeof t.sortflag&&0==t.sortflag&&(this.FT=!1)},St.lang.extend(KJUR.bw.Qw,KJUR.bw.yT),KJUR.bw.qw=function(t){KJUR.bw.qw.Dm.constructor.call(this),this.nT="a0",this.Zw="",this._T=!0,this.DT=null,this.HT=function(t,e,i){this.nT=e,this._T=t,this.DT=i,this._T?(this.Zw=this.DT.zw(),this.tT=null,this.eT=!0):(this.Zw=null,this.tT=i.zw(),this.tT=this.tT.replace(/^../,e),this.eT=!1)},this.iT=function(){return this.Zw},"undefined"!=typeof t&&("undefined"!=typeof t.tag&&(this.nT=t.tag),"undefined"!=typeof t.Jw&&(this._T=t.Jw),"undefined"!=typeof t.Kw&&(this.DT=t.Kw,this.HT(this._T,this.nT,this.DT)))},St.lang.extend(KJUR.bw.qw,KJUR.bw.Yw);/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/ */
  var Nt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",xt="=";/*! crypto-1.1.8.js (c) 2013-2016 Kenji Urushima | kjur.github.com/jsrsasign/license
   */
  "undefined"!=typeof KJUR&&KJUR||(KJUR={}),"undefined"!=typeof KJUR.crypto&&KJUR.crypto||(KJUR.crypto={}),KJUR.crypto.Wy=new function(){this.tm={sha1:"3021300906052b0e03021a05000414",LT:"302d300d06096086480165030402040500041c",sha256:"3031300d060960864801650304020105000420",MT:"3041300d060960864801650304020205000430",jT:"3051300d060960864801650304020305000440",UT:"3020300c06082a864886f70d020205000410",VT:"3020300c06082a864886f70d020505000410",QT:"3021300906052b2403020105000414"},this.qT={VT:"cryptojs",sha1:"cryptojs",LT:"cryptojs",sha256:"cryptojs",MT:"cryptojs",jT:"cryptojs",QT:"cryptojs",JT:"cryptojs",KT:"cryptojs",GT:"cryptojs",zT:"cryptojs",WT:"cryptojs",$T:"cryptojs",YT:"cryptojs",XT:"cryptojs/jsrsa",ZT:"cryptojs/jsrsa",tS:"cryptojs/jsrsa",eS:"cryptojs/jsrsa",iS:"cryptojs/jsrsa",rS:"cryptojs/jsrsa",nS:"cryptojs/jsrsa",oS:"cryptojs/jsrsa",sS:"cryptojs/jsrsa",aS:"cryptojs/jsrsa",cS:"cryptojs/jsrsa",hS:"cryptojs/jsrsa",pS:"cryptojs/jsrsa",uS:"cryptojs/jsrsa",lS:"cryptojs/jsrsa",dS:"cryptojs/jsrsa",fS:"cryptojs/jsrsa",gS:"cryptojs/jsrsa",vS:"cryptojs/jsrsa",yS:"cryptojs/jsrsa",mS:"cryptojs/jsrsa",wS:"cryptojs/jsrsa",TS:"cryptojs/jsrsa",SS:"cryptojs/jsrsa"},this.bS={VT:bt.vw.yw,sha1:bt.vw.Tw,LT:bt.vw.SHA224,sha256:bt.vw.SHA256,MT:bt.vw.SHA384,jT:bt.vw.SHA512,QT:bt.vw.RIPEMD160},this.ES=function(t,e){if("undefined"==typeof this.tm[e])throw"alg not supported in Util.DIGESTINFOHEAD: "+e;return this.tm[e]+t},this.Yy=function(t,e,i){var r=this.ES(t,e),n=i/4;if(r.length+22>n)throw"key is too short for SigAlg: keylen="+i+","+e;for(var o="0001",s="00"+r,a="",c=n-o.length-s.length,h=0;h<c;h+=2)a+="ff";var p=o+a+s;return p},this.zy=function(t,e){var i=new KJUR.crypto.IS({RS:e});return i.kS(t)},this.Xy=function(t,e){var i=new KJUR.crypto.IS({RS:e});return i.CS(t)},this.sha1=function(t){var e=new KJUR.crypto.IS({RS:"sha1",OS:"cryptojs"});return e.kS(t)},this.sha256=function(t){var e=new KJUR.crypto.IS({RS:"sha256",OS:"cryptojs"});return e.kS(t)},this.PS=function(t){var e=new KJUR.crypto.IS({RS:"sha256",OS:"cryptojs"});return e.CS(t)},this.jT=function(t){var e=new KJUR.crypto.IS({RS:"sha512",OS:"cryptojs"});return e.kS(t)},this.NS=function(t){var e=new KJUR.crypto.IS({RS:"sha512",OS:"cryptojs"});return e.CS(t)},this.VT=function(t){var e=new KJUR.crypto.IS({RS:"md5",OS:"cryptojs"});return e.kS(t)},this.QT=function(t){var e=new KJUR.crypto.IS({RS:"ripemd160",OS:"cryptojs"});return e.kS(t)},this.xS=function(t){}},KJUR.crypto.IS=function(t){this.BS=function(t,e){if(null!=t&&void 0===e&&(e=KJUR.crypto.Wy.qT[t]),":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(t)!=-1&&"cryptojs"==e){try{this.FS=KJUR.crypto.Wy.bS[t].create()}catch(i){throw"setAlgAndProvider hash alg set fail alg="+t+"/"+i}this._S=function(t){this.FS.update(t)},this.DS=function(t){var e=bt.Ym.Xm.parse(t);this.FS.update(e)},this.digest=function(){var t=this.FS.lw();return t.toString(bt.Ym.Xm)},this.kS=function(t){return this._S(t),this.digest()},this.CS=function(t){return this.DS(t),this.digest()}}if(":sha256:".indexOf(t)!=-1&&"sjcl"==e){try{this.FS=new sjcl.hash.sha256}catch(i){throw"setAlgAndProvider hash alg set fail alg="+t+"/"+i}this._S=function(t){this.FS.update(t)},this.DS=function(t){var e=sjcl.codec.pT.toBits(t);this.FS.update(e)},this.digest=function(){var t=this.FS.lw();return sjcl.codec.pT.fromBits(t)},this.kS=function(t){return this._S(t),this.digest()},this.CS=function(t){return this.DS(t),this.digest()}}},this._S=function(t){throw"updateString(str) not supported for this alg/prov: "+this.HS+"/"+this.LS},this.DS=function(t){throw"updateHex(hex) not supported for this alg/prov: "+this.HS+"/"+this.LS},this.digest=function(){throw"digest() not supported for this alg/prov: "+this.HS+"/"+this.LS},this.kS=function(t){throw"digestString(str) not supported for this alg/prov: "+this.HS+"/"+this.LS},this.CS=function(t){throw"digestHex(hex) not supported for this alg/prov: "+this.HS+"/"+this.LS},void 0!==t&&void 0!==t.RS&&(this.HS=t.RS,void 0===t.OS&&(this.LS=KJUR.crypto.Wy.qT[this.HS]),this.BS(this.HS,this.LS))},KJUR.crypto.MS=function(t){this.BS=function(t,e){if(t=t.toLowerCase(),null==t&&(t="hmacsha1"),t=t.toLowerCase(),"hmac"!=t.substr(0,4))throw"setAlgAndProvider unsupported HMAC alg: "+t;void 0===e&&(e=KJUR.crypto.Wy.qT[t]),this.jS=t+"/"+e;var i=t.substr(4);if(":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(i)!=-1&&"cryptojs"==e){try{var r=KJUR.crypto.Wy.bS[i];this.mac=bt.vw.HMAC.create(r,this.US)}catch(n){throw"setAlgAndProvider hash alg set fail hashAlg="+i+"/"+n}this._S=function(t){this.mac.update(t)},this.DS=function(t){var e=bt.Ym.Xm.parse(t);this.mac.update(e)},this.VS=function(){var t=this.mac.lw();return t.toString(bt.Ym.Xm)},this.QS=function(t){return this._S(t),this.VS()},this.qS=function(t){return this.DS(t),this.VS()}}},this._S=function(t){throw"updateString(str) not supported for this alg/prov: "+this.jS},this.DS=function(t){throw"updateHex(hex) not supported for this alg/prov: "+this.jS},this.VS=function(){throw"digest() not supported for this alg/prov: "+this.jS},this.QS=function(t){throw"digestString(str) not supported for this alg/prov: "+this.jS},this.qS=function(t){throw"digestHex(hex) not supported for this alg/prov: "+this.jS},this.JS=function(t){if("string"==typeof t){var e=t;return t.length%2!=1&&t.match(/^[0-9A-Fa-f]+$/)||(e=rstrtohex(t)),void(this.US=bt.Ym.Xm.parse(e))}if("object"!=typeof t)throw"KJUR.crypto.Mac unsupported password type: "+t;var e=null;if(void 0!==t.pT){if(t.pT.length%2!=0||!t.pT.match(/^[0-9A-Fa-f]+$/))throw"Mac: wrong hex password: "+t.pT;e=t.pT}if(void 0!==t.utf8&&(e=utf8tohex(t.utf8)),void 0!==t.rstr&&(e=rstrtohex(t.rstr)),void 0!==t.b64&&(e=J(t.b64)),void 0!==t.b64u&&(e=b64utohex(t.b64u)),null==e)throw"KJUR.crypto.Mac unsupported password type: "+t;this.US=bt.Ym.Xm.parse(e)},void 0!==t&&(void 0!==t.US&&this.JS(t.US),void 0!==t.RS&&(this.HS=t.RS,void 0===t.OS&&(this.LS=KJUR.crypto.Wy.qT[this.HS]),this.BS(this.HS,this.LS)))},KJUR.crypto.Signature=function(t){var e=null;if(this.KS=function(){this.HS.match(/^(.+)with(.+)$/)&&(this.GS=RegExp.$1.toLowerCase(),this.zS=RegExp.$2.toLowerCase())},this.WS=function(t,e){for(var i="",r=e/4-t.length,n=0;n<r;n++)i+="0";return i+t},this.BS=function(t,e){if(this.KS(),"cryptojs/jsrsa"!=e)throw"provider not supported: "+e;if(":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(this.GS)!=-1){try{this.FS=new KJUR.crypto.IS({RS:this.GS})}catch(i){throw"setAlgAndProvider hash alg set fail alg="+this.GS+"/"+i}this.init=function(t,e){var i=null;try{i=void 0===e?KEYUTIL.getKey(t):KEYUTIL.getKey(t,e)}catch(r){throw"init failed:"+r}if(i.isPrivate===!0)this.$S=i,this.state="SIGN";else{if(i.qy!==!0)throw"init failed.:"+i;this.YS=i,this.state="VERIFY"}},this.XS=function(t){"string"==typeof t.ZS&&"string"==typeof t.tb?(this.ZS=t.ZS,this.tb=t.tb):this.$S=t,this.state="SIGN"},this.eb=function(t){"string"==typeof t.ib&&"string"==typeof t.tb?(this.ib=t.ib,this.tb=t.tb):t instanceof KJUR.crypto.ECDSA?this.YS=t:t instanceof Y&&(this.YS=t),this.state="VERIFY"},this.rb=function(t){var e=new X509;e.readCertPEM(t),this.YS=e.nb,this.state="VERIFY"},this._S=function(t){this.FS._S(t)},this.DS=function(t){this.FS.DS(t)},this.sign=function(){if(this.ob=this.FS.digest(),"undefined"!=typeof this.ZS&&"undefined"!=typeof this.tb){var t=new KJUR.crypto.ECDSA({curve:this.tb});this.sb=t.ab(this.ob,this.ZS)}else if(this.$S instanceof Y&&"rsaandmgf1"==this.zS)this.sb=this.$S.Zy(this.ob,this.GS,this.cb);else if(this.$S instanceof Y&&"rsa"==this.zS)this.sb=this.$S.$y(this.ob,this.GS);else if(this.$S instanceof KJUR.crypto.ECDSA)this.sb=this.$S.$y(this.ob);else{if(!(this.$S instanceof KJUR.crypto.DSA))throw"Signature: unsupported public key alg: "+this.zS;this.sb=this.$S.$y(this.ob)}return this.sb},this.hb=function(t){return this._S(t),this.sign()},this.ab=function(t){return this.DS(t),this.sign()},this.verify=function(t){if(this.ob=this.FS.digest(),"undefined"!=typeof this.ib&&"undefined"!=typeof this.tb){var e=new KJUR.crypto.ECDSA({curve:this.tb});return e.verifyHex(this.ob,t,this.ib)}if(this.YS instanceof Y&&"rsaandmgf1"==this.zS)return this.YS.em(this.ob,t,this.GS,this.cb);if(this.YS instanceof Y&&"rsa"==this.zS)return this.YS.pb(this.ob,t);if(this.YS instanceof KJUR.crypto.ECDSA)return this.YS.pb(this.ob,t);if(this.YS instanceof KJUR.crypto.DSA)return this.YS.pb(this.ob,t);throw"Signature: unsupported public key alg: "+this.zS}}},this.init=function(t,e){throw"init(key, pass) not supported for this alg:prov="+this.ub},this.eb=function(t){throw"initVerifyByPublicKey(rsaPubKeyy) not supported for this alg:prov="+this.ub},this.rb=function(t){throw"initVerifyByCertificatePEM(certPEM) not supported for this alg:prov="+this.ub},this.XS=function(t){throw"initSign(prvKey) not supported for this alg:prov="+this.ub},this._S=function(t){throw"updateString(str) not supported for this alg:prov="+this.ub},this.DS=function(t){throw"updateHex(hex) not supported for this alg:prov="+this.ub},this.sign=function(){throw"sign() not supported for this alg:prov="+this.ub},this.hb=function(t){throw"digestString(str) not supported for this alg:prov="+this.ub},this.ab=function(t){throw"digestHex(hex) not supported for this alg:prov="+this.ub},this.verify=function(t){throw"verify(hSigVal) not supported for this alg:prov="+this.ub},this.lb=t,void 0!==t&&(void 0!==t.RS&&(this.HS=t.RS,void 0===t.OS?this.LS=KJUR.crypto.Wy.qT[this.HS]:this.LS=t.OS,this.ub=this.HS+":"+this.LS,this.BS(this.HS,this.LS),this.KS()),void 0!==t.fb&&(this.cb=t.fb),void 0!==t.prvkeypem)){if(void 0!==t.prvkeypas)throw"both prvkeypem and prvkeypas parameters not supported";try{var e=new Y;e.readPrivateKeyFromPEMString(t.prvkeypem),this.XS(e)}catch(i){throw"fatal error to load pem private key: "+i}}},KJUR.crypto.NT=new function(){this.gb={vb:"rsaEncryption",yb:"ecPublicKey",mb:"dsa",wb:"secp256r1",Tb:"secp192k1",Sb:"secp224r1",bb:"secp256k1",Eb:"secp521r1",Ib:"secp384r1",Rb:"SHA1withDSA","608648016503040301":"SHA224withDSA","608648016503040302":"SHA256withDSA"}};var Bt=20;Y.prototype.Gy=Z,Y.prototype.qh=X,Y.prototype.encrypt=tt,Y.prototype.kb=et,Y.prototype.type="RSA";/*! rsasign-1.2.7.js (c) 2012 Kenji Urushima | kjur.github.com/jsrsasign/license
   */
  var Ft=new RegExp("");Ft.compile("[^0-9a-f]","gi"),Y.prototype.$y=nt,Y.prototype.hb=rt,Y.prototype.Cb=ot,Y.prototype.Ob=st,Y.prototype.sign=rt,Y.prototype.Pb=ot,Y.prototype.Ab=st,Y.prototype.Zy=ht,Y.prototype.Nb=ct,Y.prototype.xb=ct,Y.Bb=-1,Y.Fb=-2,Y.prototype.pb=vt,Y.prototype.Jh=gt,Y.prototype._b=ft,Y.prototype.verify=gt,Y.prototype.Db=ft,Y.prototype.em=mt,Y.prototype.Hb=yt,Y.prototype.Lb=yt,Y.Mb=-2,e.jb=i,e.Mh=Y,e.Signature=KJUR.crypto.Signature,e.IS=KJUR.crypto.IS,e.Ub=bt,e.jh=J,e.Vb=K},function(t,e){"use strict";var i={};i.Qb=function(){return Math.random().toString(36).substr(2,10)},i.qb=i.Qb(),i.Jb=function(t){return t.trim().split("\n").map(function(t){return t.trim()})},i.Kb=function(t){var e=t.split("\nm=");return e.map(function(t,e){return(e>0?"m="+t:t).trim()+"\r\n"})},i.Gb=function(t,e){return i.Jb(t).filter(function(t){return 0===t.indexOf(e)})},i.zb=function(t){var e;e=0===t.indexOf("a=candidate:")?t.substring(12).split(" "):t.substring(10).split(" ");for(var i={Wb:e[0],$b:e[1],protocol:e[2].toLowerCase(),Yb:parseInt(e[3],10),Xb:e[4],port:parseInt(e[5],10),type:e[7]},r=8;r<e.length;r+=2)switch(e[r]){case"raddr":i.Zb=e[r+1];break;case"rport":i.tE=parseInt(e[r+1],10);break;case"tcptype":i.eE=e[r+1];break;default:i[e[r]]=e[r+1]}return i},i.iE=function(t){var e=[];e.push(t.Wb),e.push(t.$b),e.push(t.protocol.toUpperCase()),e.push(t.Yb),e.push(t.Xb),e.push(t.port);var i=t.type;return e.push("typ"),e.push(i),"host"!==i&&t.Zb&&t.tE&&(e.push("raddr"),e.push(t.Zb),e.push("rport"),e.push(t.tE)),t.eE&&"tcp"===t.protocol.toLowerCase()&&(e.push("tcptype"),e.push(t.eE)),"candidate:"+e.join(" ")},i.rE=function(t){return t.substr(14).split(" ")},i.nE=function(t){var e=t.substr(9).split(" "),i={oE:parseInt(e.shift(),10)};return e=e[0].split("/"),i.name=e[0],i.sE=parseInt(e[1],10),i.aE=3===e.length?parseInt(e[2],10):1,i},i.cE=function(t){var e=t.oE;return void 0!==t.hE&&(e=t.hE),"a=rtpmap:"+e+" "+t.name+"/"+t.sE+(1!==t.aE?"/"+t.aE:"")+"\r\n"},i.pE=function(t){var e=t.substr(9).split(" ");return{id:parseInt(e[0],10),direction:e[0].indexOf("/")>0?e[0].split("/")[1]:"sendrecv",uri:e[1]}},i.uE=function(t){return"a=extmap:"+(t.id||t.preferredId)+(t.direction&&"sendrecv"!==t.direction?"/"+t.direction:"")+" "+t.uri+"\r\n"},i.lE=function(t){for(var e,i={},r=t.substr(t.indexOf(" ")+1).split(";"),n=0;n<r.length;n++)e=r[n].trim().split("="),i[e[0].trim()]=e[1];return i},i.dE=function(t){var e="",i=t.oE;if(void 0!==t.hE&&(i=t.hE),t.parameters&&Object.keys(t.parameters).length){var r=[];Object.keys(t.parameters).forEach(function(e){r.push(e+"="+t.parameters[e])}),e+="a=fmtp:"+i+" "+r.join(";")+"\r\n"}return e},i.fE=function(t){var e=t.substr(t.indexOf(" ")+1).split(" ");return{type:e.shift(),gE:e.join(" ")}},i.vE=function(t){var e="",i=t.oE;return void 0!==t.hE&&(i=t.hE),t.yE&&t.yE.length&&t.yE.forEach(function(t){e+="a=rtcp-fb:"+i+" "+t.type+(t.gE&&t.gE.length?" "+t.gE:"")+"\r\n"}),e},i.mE=function(t){var e=t.indexOf(" "),i={wE:parseInt(t.substr(7,e-7),10)},r=t.indexOf(":",e);return r>-1?(i.TE=t.substr(e+1,r-e-1),i.value=t.substr(r+1)):i.TE=t.substr(e+1),i},i.SE=function(t){var e=i.Gb(t,"a=mid:")[0];if(e)return e.substr(6)},i.bE=function(t){var e=t.substr(14).split(" ");return{algorithm:e[0].toLowerCase(),value:e[1]}},i.EE=function(t,e){var r=i.Gb(t+e,"a=fingerprint:");return{IE:"auto",RE:r.map(i.bE)}},i.kE=function(t,e){var i="a=setup:"+e+"\r\n";return t.RE.forEach(function(t){i+="a=fingerprint:"+t.algorithm+" "+t.value+"\r\n"}),i},i.CE=function(t,e){var r=i.Jb(t);r=r.concat(i.Jb(e));var n={OE:r.filter(function(t){return 0===t.indexOf("a=ice-ufrag:")})[0].substr(12),password:r.filter(function(t){return 0===t.indexOf("a=ice-pwd:")})[0].substr(10)};return n},i.PE=function(t){return"a=ice-ufrag:"+t.OE+"\r\na=ice-pwd:"+t.password+"\r\n"},i.AE=function(t){for(var e={NE:[],xE:[],BE:[],FE:[]},r=i.Jb(t),n=r[0].split(" "),o=3;o<n.length;o++){var s=n[o],a=i.Gb(t,"a=rtpmap:"+s+" ")[0];if(a){var c=i.nE(a),h=i.Gb(t,"a=fmtp:"+s+" ");switch(c.parameters=h.length?i.lE(h[0]):{},c.yE=i.Gb(t,"a=rtcp-fb:"+s+" ").map(i.fE),e.NE.push(c),c.name.toUpperCase()){case"RED":case"ULPFEC":e.BE.push(c.name.toUpperCase())}}}return i.Gb(t,"a=extmap:").forEach(function(t){e.xE.push(i.pE(t))}),e},i._E=function(t,e){var r="";r+="m="+t+" ",r+=e.NE.length>0?"9":"0",r+=" UDP/TLS/RTP/SAVPF ",r+=e.NE.map(function(t){return void 0!==t.hE?t.hE:t.oE}).join(" ")+"\r\n",r+="c=IN IP4 0.0.0.0\r\n",r+="a=rtcp:9 IN IP4 0.0.0.0\r\n",e.NE.forEach(function(t){r+=i.cE(t),r+=i.dE(t),r+=i.vE(t)});var n=0;return e.NE.forEach(function(t){t.DE>n&&(n=t.DE)}),n>0&&(r+="a=maxptime:"+n+"\r\n"),r+="a=rtcp-mux\r\n",e.xE.forEach(function(t){r+=i.uE(t)}),r},i.HE=function(t){var e,r=[],n=i.AE(t),o=n.BE.indexOf("RED")!==-1,s=n.BE.indexOf("ULPFEC")!==-1,a=i.Gb(t,"a=ssrc:").map(function(t){return i.mE(t)}).filter(function(t){return"cname"===t.TE}),c=a.length>0&&a[0].wE,h=i.Gb(t,"a=ssrc-group:FID").map(function(t){var e=t.split(" ");return e.shift(),e.map(function(t){return parseInt(t,10)})});h.length>0&&h[0].length>1&&h[0][0]===c&&(e=h[0][1]),n.NE.forEach(function(t){if("RTX"===t.name.toUpperCase()&&t.parameters.apt){var i={wE:c,LE:parseInt(t.parameters.apt,10),ME:{wE:e}};r.push(i),o&&(i=JSON.parse(JSON.stringify(i)),i.jE={wE:e,UE:s?"red+ulpfec":"red"},r.push(i))}}),0===r.length&&c&&r.push({wE:c});var p=i.Gb(t,"b=");return p.length&&(0===p[0].indexOf("b=TIAS:")?p=parseInt(p[0].substr(7),10):0===p[0].indexOf("b=AS:")&&(p=parseInt(p[0].substr(5),10)),r.forEach(function(t){t.VE=p})),r},i.QE=function(t){var e={},r=i.Gb(t,"a=ssrc:").map(function(t){return i.mE(t)}).filter(function(t){return"cname"===t.TE})[0];r&&(e.qE=r.value,e.wE=r.wE);var n=i.Gb(t,"a=rtcp-rsize");e.JE=n.length>0,e.KE=0===n.length;var o=i.Gb(t,"a=rtcp-mux");return e.GE=o.length>0,e},i.zE=function(t){var e,r=i.Gb(t,"a=msid:");if(1===r.length)return e=r[0].substr(7).split(" "),{stream:e[0],track:e[1]};var n=i.Gb(t,"a=ssrc:").map(function(t){return i.mE(t)}).filter(function(t){return"msid"===t.TE});return n.length>0?(e=n[0].value.split(" "),{stream:e[0],track:e[1]}):void 0},i.WE=function(){return"v=0\r\no=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},i.$E=function(t,e,r,n){var o=i._E(t.kind,e);if(o+=i.PE(t.YE.getLocalParameters()),o+=i.kE(t.XE.getLocalParameters(),"offer"===r?"actpass":"active"),o+="a=mid:"+t.ZE+"\r\n",o+=t.direction?"a="+t.direction+"\r\n":t.tI&&t.eI?"a=sendrecv\r\n":t.tI?"a=sendonly\r\n":t.eI?"a=recvonly\r\n":"a=inactive\r\n",t.tI){var s="msid:"+n.id+" "+t.tI.track.id+"\r\n";o+="a="+s,o+="a=ssrc:"+t.iI[0].wE+" "+s,t.iI[0].ME&&(o+="a=ssrc:"+t.iI[0].ME.wE+" "+s,o+="a=ssrc-group:FID "+t.iI[0].wE+" "+t.iI[0].ME.wE+"\r\n")}return o+="a=ssrc:"+t.iI[0].wE+" cname:"+i.qb+"\r\n",t.tI&&t.iI[0].ME&&(o+="a=ssrc:"+t.iI[0].ME.wE+" cname:"+i.qb+"\r\n"),o},i.rI=function(t,e){for(var r=i.Jb(t),n=0;n<r.length;n++)switch(r[n]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return r[n].substr(2)}return e?i.rI(e):"sendrecv"},i.nI=function(t){var e=i.Jb(t),r=e[0].split(" ");return r[0].substr(2)},i.Ut=function(t){return"0"===t.split(" ",2)[1]},t.t=i},function(t,e,i){"use strict";var r=i(1),n=i(10),o=function(){function t(t,e){this.msg=t,this.oI=Date.now()+e,this.sI=r.defer()}return t.prototype.aI=function(){return Date.now()>=this.oI},t}(),s=function(){function t(t,e,i,r,n,o,s){void 0===e&&(e=3e4),void 0===i&&(i=100),void 0===r&&(r=3e4),void 0===n&&(n=15e3),void 0===o&&(o=Date),void 0===s&&(s=!1),this.cI=1,this.hI=-1,this.pI=-1,this.uI={},this.lI=[],this.dI=[],this.fI=!1,this.gI=!0,this.vI=t,this.yI=Array(),this.Ao=e,this.No=i,this.xo=r,this.mI=n,this.wI=o,this.fI=s||/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge./i.test(navigator.userAgent)}return t.prototype.Et=function(t){var e=t.service+"_"+t.msgId,i=this.uI[e];null!=i?i(t):n.m().error(n.u+"Could not find a dispatcher for ",t,e,this.uI)},t.prototype.on=function(t,e,i){this.uI[t+"_"+e]=i},t.prototype.onerror=function(t){this.lI.push(t)},t.prototype.TI=function(t){this.dI.push(t)},t.prototype.SI=function(){var t=this;if(!window.WebSocket)return void this.lI.forEach(function(t){return t("WebSocket not defined")});var e=new WebSocket(this.vI);return e.binaryType="arraybuffer",e.onopen=function(e){t.bI(),n.m().debug(n.u+"HiveServicesConnection established to "+t.vI),t.pI=(new t.wI).getTime(),t.EI(),t.dI.forEach(function(e){return e(t)}),t.II(),t.RI()},e.onclose=function(e){t.close(t.gI),t.connect()},e.onmessage=function(e){t.Et(n.Zn.wo(e.data))},e.onerror=function(e){t.close(!0),t.lI.forEach(function(t){return t(e.toString())})},e},t.prototype.isOpen=function(){return null!=this.Op&&this.Op.readyState==this.Op.OPEN},t.prototype.connect=function(t){var e=this;t&&(this.gI=!0),this.gI&&1!=this.isOpen()&&(this.hI>0||(this.pI>-1&&(new this.wI).getTime()-this.pI>this.Ao?(this.cI=n.ke.yo,this.pI=-1):this.cI=Math.min(2*this.cI,this.Ao),this.hI=window.setTimeout(function(){e.hI=-1,n.m().debug(n.u+"Connection attempt to "+e.vI+" [t:"+e.cI+" hb:"+e.fI+"]"),e.Op=e.SI(),e.cI=Math.max(e.cI,n.ke.yo)},this.cI)))},t.prototype.bI=function(){this.hI>-1&&(clearTimeout(this.hI),this.hI=-1)},t.prototype.close=function(t){this.gI=void 0!=t&&t,n.m().debug(n.u+"Closing connection [reconnect:"+this.gI+"]"),this.bI(),null!=this.Op&&(this.Op.close(),this.Op=null)},t.prototype.EI=function(){for(;this.yI.length>0;){var t=this.yI.pop();try{t.aI()?t.sI.reject(new Error("Message expired")):(this.II(),this.Op.send(t.msg.mo()))}catch(e){if(e.code===DOMException.INVALID_STATE_ERR){this.yI.push(t);break}n.m().error(n.u+"Failed to send the message, dropped: ",e.code,e.name),t.sI.reject(e)}}this.RI()},t.prototype.II=function(){this.kI&&(clearTimeout(this.kI),this.kI=null)},t.prototype.RI=function(){var t=this;this.fI&&!this.kI&&(this.kI=window.setInterval(function(){t.send(new n.Zn(Services.Cf,0,""))},this.mI))},t.prototype.send=function(t,e){if(void 0===e&&(e=this.xo),this.yI.length>=this.No)throw new Error("HiveServices connection cannot queue more messages");var i=new o(t,e);return this.yI.push(i),this.Op&&this.EI(),i.sI.vt},t.prototype.CI=function(t){this.fI=t,this.fI&&this.RI()},t.prototype.OI=function(){return null!=this.Op},t}();e.AI=s},function(t,e,i){"use strict";var r=i(15),n=i(38),o=i(24),s=i(2),a=function(){function t(){}return t.prototype.apply=function(t){t.bind(new r.ns(s.Framework.Fe.me,n.NI,r.ss.ls)),t.bind(new r.ns(s.Framework.Fe.we,o.El.bl))},t}();e.Td=a},function(t,e){"use strict";var i=function(){function t(){"undefined"!=typeof global?this.xI=global:this.xI=window}return t.prototype.Ct=function(){return!1},t.prototype.BI=function(t,e,i){},t.prototype.be=function(){},t.prototype.time=function(){return+new Date},t.prototype.setTimeout=function(t,e){var i=this.xI.setTimeout(function(){t()},e);return i},t.prototype.clearTimeout=function(t){return this.xI.clearTimeout(t),!0},t.prototype.setInterval=function(t,e){var i=this.xI.setInterval(function(){t()},e);return i},t.prototype.clearInterval=function(t){return this.xI.clearInterval(t),!0},t}();e.NI=i},function(t,e){"use strict";var i=function(){function t(t,e){this.Uo=t,this.Vo=e}return t.prototype.Wo=function(){return this.Uo},t.prototype.$o=function(){return this.Vo?this.Vo:this.Uo},t}();e.FI=i},function(t,e,i){"use strict";var r,n=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},o=i(8),s=o.pt.Ir.Ir,a=o.pt.Ir.kr;!function(t){var e;!function(t){var e=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.authTokenEnabled=!0,e.dashRemoveBitrateSize=!1,e.dashFilterBitrates=null,e.logJsonSnapshots=void 0,e}return n(e,t),e}(s);t.Fl=e;var i=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.hiveAuthTokenEnabled="authTokenEnabled",e.hiveDashRemoveBitrateSize="dashRemoveBitrateSize",e.hiveDashFilterBitrates="dashFilterBitrates",e.hiveLogJsonSnapshots="logJsonSnapshots",e}return n(e,t),e}(a);t.Dl=i}(e=t.Ir||(t.Ir={}))}(r=e.pt||(e.pt={}));var c=function(){function t(){}return t.Hl=function(t){"dashRemoveBitrateSize"in t&&t.dashRemoveBitrateSize&&window.HiveConfig&&window.HiveConfig.Dash&&(window.HiveConfig.Dash.DashRemoveBitrateSize=t.dashRemoveBitrateSize),"dashFilterBitrates"in t&&t.dashFilterBitrates&&window.HiveConfig&&window.HiveConfig.Dash&&(window.HiveConfig.Dash.DashFilterBitrates=t.dashFilterBitrates),"logJsonSnapshots"in t&&t.logJsonSnapshots&&window.HiveConfig&&window.HiveConfig.DebugLogs&&(window.HiveConfig.DebugLogs.MetricSnapshotLogs=1,window.HiveConfig.DebugLogs.TrackSnapshotLogs=1,window.HiveConfig.DebugLogs.gl=1)},t}();e.Ll=c},function(t,e){"use strict";var i=function(){function t(){var e=this;if(this._I=new Array,this.callbacks=new Array,t.Gi)throw new Error("Error: Instantiation failed: Use KeyHandlerHiveComm.getInstance() instead of new.");var i={};document.addEventListener("keydown",function(t){i[t.keyCode]=!0,e.DI(i)},!0),document.addEventListener("keyup",function(t){i={}},!0)}return t.Wi=function(){return void 0===this.Gi&&(this.Gi=new t),this.Gi},t.prototype.Dh=function(t,e){this._I.push(t),this.callbacks.push(e)},t.prototype.DI=function(t){for(var e=function(e){var r=!0;i._I[e].forEach(function(e){void 0!=t[e]&&t[e]||(r=!1)}),r&&i.callbacks[e]()},i=this,r=0;r<this._I.length;r++)e(r)},t}();e.Hh=i},function(t,e,i){"use strict";var r=i(12),n=i(18),o=i(7),s=function(){function t(t){this.HI=n.ke.yr?9989:9988,this.LI=-1,this.MI=t,this.jI()}return t.prototype.jI=function(){var t=this;this.MI.options().silent&&void 0===this.UI&&(this.url="//"+r.wr.To+":"+this.HI+"/feedback",this.MI.m().info("starting periodic alive ping to hive tester ["+this.url+"]"),this.UI=setInterval(function(){t.VI()},n.ke.Nh))},t.prototype.VI=function(){var t=this,e=this.MI.getCurrentTime();e>this.LI?(this.MI.m().info("sending hive tester ping ["+e+" > "+this.LI+"]"),o.Zi(this.url).then(function(t){},function(e){t.MI.m().error("error sending hive tester ping",e),clearInterval(t.UI)})):this.MI.m().warn("not sending hive tester ping ["+e+" <= "+this.LI+"]"),this.LI=e},t}();e.Ul=s},function(t,e,i){"use strict";var r=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},n=i(1),o=i(7),s=i(8),a=i(44),c=i(17),h=i(12),p=i(14),u=i(9),l=i(20),d=i(19),f=a.pt.Ir,g=s.pt.Ir.kr,v=c.pt.HiveTechError,y=c.pt.bh,m=i(28);e.QI=navigator;var w=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e}(o.Bi),T=function(){function t(t,e){this.qI=0,this.MI=t,this.options_=new f.JI,this.KI(e),o.or(window.location.href,new g,this.options_)}return t.prototype.Ai=function(){return t.Jl},t.prototype.getVersion=function(){return this.version},t.prototype.Wl=function(){return!1},t.prototype.GI=function(){var t=this;if(null==this.zI||Date.now()-this.qI>1e4){var e=new m;e.In(navigator.userAgent);var i=e.$d();if("IE"===i.name&&i.version&&parseInt(i.version)<10)return n.reject(new v(y.yh,"Internet Explorer < v.10 not supported"));this.WI=Date.now(),this.$I=0;var r="//"+h.wr.To+":"+this.MI.options().monitorPort+"/version.json";this.m().debug(this.id()+"verifying Hive Client version"),this.zI=o.Zi(r).then(function(e){var i=JSON.parse(e);return t.state=i.state,t.version=i.version,"ready"===t.state?"developer"===t.version||t.version>=t.options_.minVersion?(t.$I=Date.now(),t.m().debug(t.id()+"Hive Client ready - version "+t.version+" ["+(t.$I-t.WI)+"]"),"ready"):(d.ErrorMonitor.Wi()._h(t.id()+"Client version requirement not satisfied: "+t.version+" < "+t.options_.minVersion),t.MI.ed(new u.F.uo(null,u.F.Gr.Qr)),n.reject(new v(y.Th,"version "+t.version))):(d.ErrorMonitor.Wi()._h(t.id()+"Client state: "+t.state),t.MI.ed(new u.F.uo(null,u.F.Gr.Vr)),n.reject(new v(y.yh,"state "+t.state)))},function(e){var i="Client not reachable";return void 0!=e&&void 0!=e.status&&e.status!=-1&&(i="Client check returned "+e.status),d.ErrorMonitor.Wi()._h(t.id()+i),t.MI.ed(new u.F.uo(null,u.F.Gr.Ur)),n.reject(new v(y.yh,i))})["catch"](function(e){if(e instanceof v)return n.reject(e);var i="Error fetching Hive Client version: "+e;return d.ErrorMonitor.Wi()._h(t.id()+i),n.reject(new v(y.yh,i))}),this.qI=Date.now()}return this.zI},t.prototype.initSession=function(t,e){var i=this;return this.options_.minVersion!=h.wr.Io?this.GI().then(function(){return i.YI(t)["catch"](function(t){return n.reject(t)})}):this.YI(t)["catch"](function(t){return n.reject(t)})},t.prototype.Yl=function(){return this.options_.initTimeout},t.prototype.st=function(t,e){return t.indexOf(e.XI)>-1},t.prototype.Pi=function(t,i){var r=this;this.m().debug(this.id()+"Stopping session "+t.id+" [complete close:"+i+"]");var n="//"+h.wr.To+":"+this.MI.options().playerPort+"/session?action=stop";n+="&currentSession="+t.id,i&&(n+="&completeStop=true"),i&&e.QI.sendBeacon?(e.QI.sendBeacon(n),this.m().debug(this.id()+"session stopped ["+t.id+"][beacon]")):o.Zi(n,null,!i).then(function(){r.m().debug(r.id()+"session stopped ["+t.id+"]"+(i?"[sync]":""))},function(e){r.m().warn(r.id()+"session close error ["+t.id+"]"+(i?"[sync]":""),e)})},t.prototype.Ci=function(t,e){this.ZI=e?p.Fo.IDLE:p.Fo.Bo,this.m().notice("[HiveComm] client state: "+p.Fo[this.ZI])},t.prototype.fd=function(t,e){if(this.ZI==p.Fo.IDLE)return n.resolve(!0);var i="playing-point="+e.lr;i+="&buffer-length="+e.dr,i+="&total-buffering="+e.gr,i+="&width="+e.width,i+="&height="+e.height,i+="&fullscreen="+e.dd;var r=t.XI+"stats?"+i;return this.m().trace(r),o.Zi(r)},t.prototype.yd=function(t,e,i){var r=this;if(!(e!==u.F.B.jr&&e!==u.F.B.HIDDEN||this.version&&("developer"===this.version||this.version>="2017")))return n.resolve(!0);var s=t.XI+"player-event?type="+u.F.B[e];if(void 0!=i)for(var a in i)s+="&"+a+"="+i[a];return this.m().debug(this.id()+"event "+u.F.B[e],void 0!=i?i:""),o.Zi(s).fail(function(t){return r.m().warn(r.id()+"error sending feedback event to Hive Client",t),n.reject(t)})},t.prototype.wn=function(t,e){return n.resolve(!0)},t.prototype.hn=function(t){var e=this;if(this.tR())return this.m().warn("Player info not supported in this Java client version"),n.resolve(!0);var i="comm-version="+this.MI.ct();i+="&plugin-name="+this.MI.T(),i+="&plugin-version="+this.MI.I(),i+="&player-tech="+this.MI.ht(),i+="&player-version="+this.MI.q();var r=this.MI.td();r&&(i+="&telemetry-id="+this.MI.td());var s=t.XI+"player-info?"+i;return o.Zi(s).fail(function(t){return e.m().debug(e.id()+"error sending player Info to Hive Client",t),n.reject(t)})},t.prototype.onError=function(t){var e=!0;if(void 0!=this.options_.onError)try{e=this.options_.onError(t)}catch(i){d.ErrorMonitor.Wi()._h(this.id()+"exception in user-defined onError callback: "+i)}return e},t.prototype.Zl=function(t,e,i){var r={isReadyIn:this.WI,isReadyOut:this.$I,leaseIn:this.eR,leaseOut:this.iR,resolveIn:this.rR,resolveOut:this.nR};"undefined"!=typeof e&&null!=e&&(r.sessionId=e.id),"undefined"!=typeof i&&(r.total=i);var n=JSON.parse(JSON.stringify(r));d.ErrorMonitor.Wi()._h(t.message,n),this.MI.ed(new u.F.uo(null,u.F.Gr.Kr,r)),this.oR()},t.prototype.onActiveSession=function(t){if(this.hn(t),o.ar.setItem("hiveActiveSessionId",t.id),void 0!=this.options_.onActiveSession)try{this.options_.onActiveSession(t.g())}catch(e){d.ErrorMonitor.Wi()._h(this.id()+"exception in user-defined onActiveSession callback: "+e)}},t.prototype.ql=function(t){this.MI=t},t.prototype.id=function(){return"["+t.Jl+"] "},t.prototype.KI=function(e){void 0!=e[t.Jl]&&o.nr(e[t.Jl],this.options_)},t.prototype.YI=function(t){var e=this,i=(new Date).getTime();return this.sR(t).then(function(r){return r?e.aR(t,r,i):e.p(t).then(function(r){return e.aR(t,r,i)})})},t.prototype.sR=function(e){var i=this;if(this.eR=Date.now(),this.MI.options().useSessionCheck){var r="//"+h.wr.To+":"+this.MI.options().playerPort+"/session?&action=check";r+="&hivePluginId="+this.MI.S(),r+="&callback="+e;var s=o.ar.getItem("hiveActiveSessionId");return o.ar.removeItem("hiveActiveSessionId"),s&&(r+="&currentSession="+s),this.cR(),o.Zi(r).then(function(t){return i.iR=Date.now(),t?i.hR(t,r,e,i.eR):(i.m().debug(i.id()+"session allowed ["+(i.iR-i.eR)+"]"),!1)},function(e){if(400==e.status)return i.pR("bad request","error resolving ticket",e);if(401==e.status)return i.pR("unauthorized","error verifying the ticket",e);if(403==e.status){var r=t.uR(e,void 0,"session"),o=r?{lR:r}:void 0;return d.ErrorMonitor.Wi()._h(i.id()+"reports another active session",o),i.MI.ed(new u.F.uo(null,u.F.Gr.qr,o)),n.reject(new v(y.wh,"another active session"+(o?" ["+o.lR+"]":"")))}return 404==e.status?(i.m().debug(i.id()+"installed version does not support active session check"),i.iR=Date.now(),!1):e.status==-1?(clearTimeout(i.dR),i.fR()):(d.ErrorMonitor.Wi()._h(i.id()+" unhandled error from Java",{error:e.status}),i.MI.ed(new u.F.uo(null,u.F.Gr.Jr)),n.reject(new v(y.mh,e)))})["catch"](function(t){return t instanceof v?n.reject(t):(d.ErrorMonitor.Wi()._h(i.id()+" unhandled error on requestLeaseDirect",{error:t}),i.MI.ed(new u.F.uo(null,u.F.Gr.Jr)),n.reject(new v(y.mh,t)))})["finally"](function(){clearTimeout(i.dR)})}return this.m().debug(this.id()+"Hive session check disabled - will directly resolve ticket (other active sessions may fail)"),n.resolve(!1)},t.prototype.pR=function(e,i,r){var o=t.uR(r,e);return d.ErrorMonitor.Wi()._h(""+this.id()+i),this.nR=Date.now(),n.reject(new v(y.ph,o))},t.uR=function(t,e,i){void 0===i&&(i="status");var r=e;if(t.body)try{var n=JSON.parse(t.body);r=n[i]}catch(o){}return r},t.prototype.p=function(t){var e=this;this.rR=Date.now(),this.m().debug(this.id()+"resolving ticket: "+t);var i=this.gR(t);return o.Zi(i,"application/json").then(function(r){return e.hR(r,i,t,e.rR)},function(i){return i&&i.status==-1?e.fR():(d.ErrorMonitor.Wi()._h(e.id()+"error resolving ticket",{ticket:t}),n.reject(new v(y.ph,i)))})["catch"](function(t){return d.ErrorMonitor.Wi()._h(e.id()+"error parsing ticket response: "+t),n.reject(new v(y.mh,t))})},t.prototype.hR=function(t,e,i,r){var n=JSON.parse(t),s=o.ir(e,n.location);return n.version&&!this.version&&(this.version=n.version),this.nR=Date.now(),this.m().debug(this.id()+"resolved ticket "+i+" -> "+s+" ["+(this.nR-r)+"]"),s},t.prototype.aR=function(t,e,i){var r=this.vR(t,e);if(null!=r){var n=(new Date).getTime(),s=n-i;return s>=this.options_.warnSlowRespTimeout&&this.Zl(new v(y.Sh,this.id()+" The tech initialization took more than "+this.options_.warnSlowRespTimeout+" milliseconds"),r,s),o.HiveRequestFactory.bi(r.id,this.Ai()),r}throw new v(y.ph,"error generating session")},t.prototype.vR=function(t,e){var i=new l.ap;i.Kh(t);var r=new w(t,i,e,null);r.yR=!0;var n=h.wr.Eo,o=n.exec(r.manifest);return null!=o?(r.XI=o[1],r.id=o[5],r):null},t.prototype.gR=function(t){var e=t.indexOf("?")==-1?"?":"&";return this.tR()?o.rr(h.wr.bo,h.wr.To,this.MI.options().playerPort,t):o.rr(h.wr.So,h.wr.To,this.MI.options().playerPort,t,e,this.MI.S())},t.prototype.cR=function(){var t=this;this.dR&&clearTimeout(this.dR),this.dR=setTimeout(function(){d.ErrorMonitor.Wi()._h(t.id()+" The Lease Request is taking more than "+t.options_.warnSlowRespTimeout+" secs")},this.options_.warnSlowRespTimeout)},t.prototype.oR=function(){this.eR=0,this.iR=0,this.rR=0,this.nR=0},t.prototype.m=function(){return this.MI.m()},t.prototype.zl=function(){this.oR()},t.prototype.fR=function(){var t=this,e="//"+h.wr.To+":"+this.MI.options().monitorPort+"/version.json";return this.m().debug(this.id()+"checking if the monitor port is reachable"),o.Zi(e).then(function(e){var i=JSON.parse(e);throw t.state=i.state,d.ErrorMonitor.Wi()._h(t.id()+"Client state: "+t.state),t.MI.ed(new u.F.uo(null,u.F.Gr.Vr)),new v(y.yh,"state "+t.state)}).fail(function(e){if(e instanceof v)return n.reject(e);if(e&&e.status==-1){var i="client not reachable";return t.MI.ed(new u.F.uo(null,u.F.Gr.Ur)),t.m().warn(t.id()+i),n.reject(new v(y.yh,i))}var i="VerifyClientState error";return d.ErrorMonitor.Wi()._h(t.id()+i,{error:e}),t.MI.ed(new u.F.uo(null,u.F.Gr.Vr)),n.reject(new v(y.mh,i))})},t.prototype.tR=function(){return this.options_.supportLegacyClient&&(!this.version||this.version.substr(0,4)<"2016")},t}();T.Jl="HiveJava",e.HiveJava=T},function(t,e,i){"use strict";var r,n=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},o=i(8),s=i(12);!function(t){var e;!function(t){var e=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.minVersion=s.wr.Io,e.initTimeout=6e4,e.warnSlowRespTimeout=5e3,e.supportLegacyClient=!1,e}return n(e,t),e}(o.pt.Ir.Rr);t.JI=e}(e=t.Ir||(t.Ir={}))}(r=e.pt||(e.pt={}))},function(t,e){"use strict";var i=function(){function t(){}return t}();i.To="127.0.0.1",i.Od=11983,i.So="//{0}:{1}/proxy/?callback={2}{3}hivePluginId={4}",i.mR="//{0}:{1}/proxy/{2}/session?manifest={3}",i.kd="//{0}:{1}/proxy/{2}/player?req={3}",i.wR="//{0}:{1}/proxy/{2}/info?{3}",e.Cd=i},function(t,e,i){"use strict";var r=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},n=i(26),o=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e.bi=function(t,i){e.TR[i]=t},e.SR=function(t,i){e.bR[i]=t},e.prototype.send=function(){if(!this.sessionId){var t=Object.keys(e.bR);t.length>0&&(this.sessionId=e.bR[t[0]])}var i=e.TR[this.sessionId],r=e.bR[this.sessionId];r.m().debug("Intercepted Manifest Request "+this.url),i.setManifestRequest(this),r.R(this.url)},e.prototype.ER=function(){var t=this,e=new XMLHttpRequest;e.open("GET",this.url),e.onreadystatechange=function(){4===e.readyState&&(t.response=e.responseText,t.responseText=e.responseText,t.readyState=4,t.status=e.status,t.onreadystatechange(),t.onload(),console.debug("Returned Manifest Request "+t.url))},e.send()},e.prototype.IR=function(){t.prototype.send.call(this)},e}(n.Ti);o.bR={},o.TR={},e.Si=o},function(t,e,i){"use strict";var r,n=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},o=i(8);!function(t){var e;!function(t){var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return n(e,t),e}(o.pt.Ir.Rr);t.RR=e}(e=t.Ir||(t.Ir={}))}(r=e.pt||(e.pt={}))},function(t,e,i){"use strict";var r=i(1),n=i(7),o=i(47),s=o.pt.Ir.RR,a=i(14),c=i(59),h=i(19),p=function(){function t(e,i){this.MI=e,this.options_=new s,void 0!==i[t.Jl]&&n.nr(i[t.Jl],this.options_)}return t.prototype.Ai=function(){return t.Jl},t.prototype.getVersion=function(){return null},t.prototype.Wl=function(){return!0},t.prototype.GI=function(){return r.resolve(!0)},t.prototype.initSession=function(t,e){var i=this.vR(t,e.ticket,e.ticket.tp(),e);return n.HiveRequestFactory.bi(i.id,this.Ai()),r.resolve(i)},t.prototype.Yl=function(){return this.options().initTimeout},t.prototype.st=function(t,e){var i=e.manifest.toLowerCase().indexOf("/manifest");if(i>-1){var r=e.manifest.substring(0,i);if(t.indexOf(r)>-1)return!0}else if(t==e.manifest)return!0;return!1},t.prototype.Pi=function(t){t.Ri&&(this.MI.m().debug("[StatsJS] stopping session ["+t.id+"]"),t.Ri.Ho.reset())},t.prototype.Ci=function(t,e){var i=e?a.Fo.IDLE:a.Fo.Bo;this.MI.m().notice("[HiveComm] client state: "+a.Fo[i]),t.Ri&&t.Ri.Ci(i)},t.prototype.fd=function(t,e){var i=this,n=0;return this.kR<e.gr&&(n=e.gr-this.kR,this.kR=e.gr),t.Ni().then(function(){t.Ri.Do.CR(n,e.dr),t.Ri.Qn.vn(e.lr,e.dr,e.gr),i.OR()}).done(),r.resolve(!0)},t.prototype.yd=function(t,e,i){return t.Ni().then(function(){t.Ri.Qn.mn(t.ticket.sessionId,e,i)}).done(),r.resolve(!0)},t.prototype.wn=function(t,e){return t.Ni().then(function(){t.Ri.Qn.Tn([e])}).done(),r.resolve(!0)},t.prototype.onError=function(t){var e=!0;if(void 0!=this.options().onError)try{e=this.options().onError(t)}catch(i){h.ErrorMonitor.Wi()._h("[StatsJS] exception in user-defined onError callback: "+i)}return e},t.prototype.onActiveSession=function(t){var e=this;this.PR(),t.Ni().then(function(i){e.AR=i;var r=new c.NR(e.MI.isLive(),e.MI.$(),t.ticket.tp());e.AR.xR=r,e.AR.Do.xR=r,e.MI.hn(e.AR),e.AR.Ho.init(e.AR.Do,null),e.AR.Qn.wi(t.ticket.sessionId,e.MI.it(),200);var n=e.MI.rd();if(n&&n.length>0&&e.AR.Qn.Tn(n),void 0!=e.options_.onActiveSession)try{e.options_.onActiveSession(t.g())}catch(o){h.ErrorMonitor.Wi()._h("[StatsJS] exception in user-defined onActiveSession callback: "+o)}}).done()},t.prototype.Zl=function(){},t.prototype.zl=function(){},t.prototype.ql=function(t){this.MI=t},t.prototype.options=function(){return this.options_},t.prototype.PR=function(){this.kR=0},t.prototype.vR=function(t,e,i,r){var o=new n.Bi(t,e,i,r);return o.yR=!1,o.id=e.sessionId,o},t.prototype.OR=function(){try{var t=this.MI.at();void 0!=t&&(this.AR.Do.BR.metrics.bitrateUpN+=t.Ji(),this.AR.Do.BR.metrics.bitrateDwnN+=t.Ki(),null!=t.Vi()&&(this.AR.Do.BR.metrics.srcThroughput=t.Vi()),null!=t.Qi()&&this.FR(!0,t.Qi()),null!=t.qi()&&this.FR(!1,t.qi()))}catch(e){h.ErrorMonitor.Wi()._h(e)}},t.prototype.FR=function(t,e){var i=this,r=0,n=0,o=0,s=0;e.forEach(function(e,a){var c=e.success+e._i;if(r+=c,s+=e.Di,n+=e.success,o+=e._i,t){var h=i.AR.Do._R(Number(a));i.DR(h,c,e.success,e._i,e.Di)}});var a=this.AR.Do.HR();this.DR(a,r,n,o,s)},t.prototype.DR=function(t,e,i,r,n){t.srcReqN+=e,t.srcRespN+=i,t.srcRespErrN+=r,t.srcRespQt+=n,t.respFallbackN+=i,t.respFallbackErrN+=r},t}();p.Jl="StatsJS",e.StatsJS=p},function(t,e){"use strict";var i;!function(t){var e;!function(t){t[t.HiveJS=0]="HiveJS",t[t.HiveJava=1]="HiveJava",t[t.StatsJS=2]="StatsJS",t[t.HiveJsProxy=3]="HiveJsProxy"}(e=t.Il||(t.Il={}))}(i=e.pt||(e.pt={}))},function(t,e,i){"use strict";var r=i(15),n=i(2),o=i(24),s=i(14),a=i(5),c=i(9),h=i(56),p=i(55),u=i(60),l=i(52),d=i(51);if("undefined"==typeof f)var f=!1;if(f)var g=i(53).LR;else var v=i(57).MR;var y=function(){function t(){}return t.prototype.apply=function(t){t.bind(new r.ns(a.gi.ui,s.rs,r.ss.ls)),t.bind(new r.ns(a.gi.Be,p.jR,r.ss.ls)),t.bind(new r.ns(a.gi.ai,u.UR,r.ss.ls)),t.bind(new r.ns(a.gi.Ce,l.VR,r.ss.ls)),t.bind(new r.ns(n.Framework.Fe.we,o.El.bl,r.ss.ls)),f?t.bind(new r.ns(a.gi.ci,g,r.ss.ls)):t.bind(new r.ns(a.gi.ci,v,r.ss.ls)),t.bind(new r.ns(a.gi.hi,d.QR,r.ss.ls)),t.bind(new r.ns(a.gi.li,h.Stats.zf,r.ss.Ts)),t.bind(new r.ns(a.gi.si,h.Stats.eo,r.ss.Ts)),t.bind(new r.ns(a.gi.di,c.F.Un,r.ss.Ts)),t.bind(new r.ns(a.gi.fi,c.F.eo,r.ss.Ts))},t}();e.Sd=y},function(t,e){"use strict";var i=function(){function t(){}return t.prototype.qR=function(t){this.hostname=t},t.prototype.Fn=function(){return this.hostname},t.prototype.JR=function(t){this.KR=t},t.prototype.Nn=function(){return this.KR},t}();e.QR=i},function(t,e,i){"use strict";var r=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},n=i(1),o=i(22),s=i(2),a=i(13),c=i(39),h=function(){function t(){this.GR="IdentityStore",this.zR="IdentityDB",this.sn=null,this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,s.Framework&&s.Framework.resolve(s.Framework.Fe.we)?this.m=s.Framework.resolve(s.Framework.Fe.we).log():this.m=console}return t.prototype.WR=function(){var t=this,e=n.defer(),i=indexedDB.open(this.zR);return i.onupgradeneeded=function(){var e=i.result;e.createObjectStore(t.GR,{keyPath:"id"})},i.onsuccess=function(){var t=i.result;e.resolve(t)},i.onerror=function(t){e.reject(t)},e.vt},t.prototype.Ko=function(){var t=this;if(this.$R)return this.$R;var e=n.defer();if(this.sn)e.resolve(new c.FI(this.sn));else if(a.Kn.Ro&&this.indexedDB){var i=setTimeout(function(){t.m.warn("[HiveComm] timeout retrieving persistent ID - generating random one"),
  t.sn=t.YR(),t.m.debug("[HiveComm] Generated UUID: "+t.sn),e.resolve(new c.FI(t.sn))},4e3);try{var r=this.WR();r.then(function(r){var n=r.transaction(t.GR,"readwrite"),o=n.objectStore(t.GR),s=o.get("MYID");s.onsuccess=function(){if(clearTimeout(i),t.sn)e.resolve(new c.FI(t.sn));else if(null!=s.result&&a.Kn.Ro){var n=s.result.value;t.m.debug("[HiveComm] Retrieved persistent UUID: "+n),t.sn=n,r.close(),e.resolve(new c.FI(t.sn))}else{var o=t.YR();t.XR(r,o),e.resolve(new c.FI(t.sn))}},s.onerror=function(r){clearTimeout(i),t.sn||(t.m.warn("[HiveComm] error retrieving persistent UUID: "+r),t.sn=t.YR(),t.m.debug("[HiveComm] Generated UUID: "+t.sn)),e.resolve(new c.FI(t.sn))}}).fail(function(r){clearTimeout(i),t.sn||(t.m.warn("[HiveComm] error opening indexedDB - generating random id. Error: "+r),t.sn=t.YR(),t.m.debug("[HiveComm] Generated UUID: "+t.sn)),e.resolve(new c.FI(t.sn))})}catch(o){this.sn=this.YR(),this.m.debug("[HiveComm] Persistence error - Generate UUID: "+this.sn,o),e.resolve(new c.FI(this.sn))}}else this.sn=this.YR(),this.m.debug("[HiveComm] Persistence disabled - Generate UUID: "+this.sn),e.resolve(new c.FI(this.sn));return this.$R=e.vt,this.$R},t.prototype.XR=function(t,e){var i=this,r=t.transaction(this.GR,"readwrite"),n=r.objectStore(this.GR);n.put({id:"MYID",value:e}),r.oncomplete=function(){i.m.debug("[HiveComm] completed UUID persistence"),t.close()},this.m.debug("[HiveComm] Generated UUID: "+e),this.sn=e},t.prototype.YR=function(){return o.Zh()},t}();e.ZR=h;var p=function(t){function e(){return t.call(this)||this}return r(e,t),e.prototype.Ko=function(){var e=this;if(this.tk)return this.tk;var i=n.defer();return t.prototype.Ko.call(this).then(function(t){var r=e.YR(),n=t.$o(),o=new c.FI(r,n);i.resolve(o)}).fail(function(t){var r=e.YR(),n=new c.FI(r);i.resolve(n)}),this.tk=i.vt,this.tk},e}(h);e.VR=p},function(t,e,i){"use strict";var r=i(1),n=i(2),o=function(){function t(){this.u="[PreloadConnectivityInfoProvider] ",this.connInfo=window.ek,this.m=n.Framework.resolve(n.Framework.Fe.we).log(),this.connInfo||this.m.error(this.u+" helper undefined")}return t.prototype.Pn=function(){var t=this;if(!this.connInfo)return r.reject("ConnInfo helper undefined");var e=setTimeout(function(){return t.m.warn(t.u+"Get connectivity info expired"),t.ik?r.resolve(t.ik):r.reject("expired")},2e3);try{return this.connInfo.Pn().then(function(i){return clearTimeout(e),t.ik=i,i}).fail(function(e){return t.m.debug(t.u+" get connectivity info failed with error 1: ",e),t.ik?t.ik:r.reject(e)})}catch(i){return this.m.debug(this.u+" get connectivity info failed with error 2:",i),r.reject(i)}},t.prototype.rk=function(t,e,i){},t}();e.LR=o},function(t,e,i){"use strict";var r=i(63),n=i(1),o=i(2),s=function(){function t(){this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,this.m=o.Framework.resolve(o.Framework.Fe.we).log()}return t.prototype.WR=function(){var t=n.defer(),e=this.indexedDB.open("PrivateIPDB");return e.onupgradeneeded=function(){var t=e.result;t.createObjectStore("PrivateIPStore",{keyPath:"id"})},e.onsuccess=function(){var i=e.result;t.resolve(i)},e.onerror=function(e){t.reject(e)},t.vt},t.prototype.nk=function(){var t=this;if(this.sk)return this.sk;var e=setTimeout(function(){t.m.warn("Private list retrieval timeout"),i.reject("Private list timeout")},4e3),i=n.defer(),o=this.WR();return o.then(function(n){var o=n.transaction("PrivateIPStore","readwrite"),s=o.objectStore("PrivateIPStore"),a=s.get("iplist");a.onsuccess=function(){clearTimeout(e);var t=[];r.ak(a.result)||r.ak(a.result.value)||(t=a.result.value.split("|")),i.resolve(t),n.close()},a.onerror=function(r){clearTimeout(e),t.m.warn("I got an error on indexed db "+r.message),i.reject("Error on indexedDB "+r.message)}}).fail(function(r){clearTimeout(e),t.m.warn("DB is not open with error"+r.message),i.reject("DB is not open with error "+r.message)}),this.sk=i.vt,this.sk},t.prototype.ck=function(t){var e=this,i=t.join("|"),r=this.WR();r.then(function(r){var n=r.transaction("PrivateIPStore","readwrite"),o=n.objectStore("PrivateIPStore");o.put({id:"iplist",value:i}),n.oncomplete=function(){e.m.debug("Storing site matched ips ["+t.join(",")+"]"),r.close()}}).fail(function(t){e.m.warn("DB is not open with error "+t.message)})},t}();e.hk=s},function(t,e,i){"use strict";var r=i(1),n=i(21),o=i(36),s=i(2),a=i(13),c=i(10),h=function(){function t(){this.m=s.Framework.resolve(s.Framework.Fe.we).log(),this.m.debug("INIT SERVICE CLIENT")}return t.prototype.init=function(t,e){var i=this;if(this.pk)this.pk.then(function(){var t={partnerId:e.bn(),customerId:e.En(),contentId:e.es(),secret:e.Wh()},r=new c.Zn(Services.kf,1,JSON.stringify(t));i.connection.send(r)});else{var s=r.defer(),h=a.Kn.Jn.ko;e.zh&&(this.m.warn("[HiveComm] Error trying to resolve test ticket against production services - use production ticket or test plugin"),s.reject(new Error("test ticket in production")));var p=new n(h),u=p.Eu({"connection-id":t,partner_id:e.bn(),customer_id:e.En(),content_id:e.es(),ticket:e.Wh()}).toString();this.connection=new o.AI(u,a.Kn.Jn.Ao,a.Kn.Jn.No,a.Kn.Jn.xo),this.connection.TI(function(){i.m.debug("HIVE SERVICES CONNECTED"),s.resolve(i.connection)}),this.connection.onerror(function(){i.m.warn("Hive Services Connection failed"),s.reject(i.connection)}),this.pk=s.vt}return{Yo:this.connection,vt:this.pk}},t.prototype.connect=function(){this.connection&&this.connection.connect(!0)},t.prototype.sd=function(t){},t.prototype.Xn=function(){return this.connection},t.prototype.close=function(){this.connection&&this.connection.close()},t}();e.jR=h},function(t,e,i){"use strict";var r=i(4),n=r.ve,o=i(16);i(31),i(30);var s,a=i(2),c=i(5),h=i(13),p=i(10),u=i(14),l=i(23);!function(t){var e="[SNAP]",i=function(){function t(){this.metrics=new hive.snapshots.Metrics,this.uk=new hive.snapshots.Traffic,this.lk=new n,this.dk=new n,this.fk=new n,this.player=new hive.snapshots.Player}return t}();t.gk=i;var r=function(){function i(){this.ticket=null,this.vk=0,this.yk=0,this.mk()}return i.prototype.init=function(t,i,r,n){this.m=a.Framework.resolve(a.Framework.Fe.we).log(n),this.tn=a.Framework.resolve(c.gi.ci),this.m.debug(e+" INIT STATS STORE - ID: "+t),this.sn=t,this.ticket=i,this.an(r)},i.prototype.wk=function(t){this.Tk=t},i.prototype.an=function(t){this.app=t},i.prototype.mk=function(){this.Sk=new t.gk,this.sn=null,this.ticket=null,this.reset()},i.prototype.reset=function(){this.BR=new t.gk,this.bk(this.BR.uk),this.Ek(this.BR)},i.prototype.bk=function(t){t.respFallbackN=0,t.respFallbackErrN=0,t.srcReqN=0,t.srcRespErrN=0,t.srcRespQt=0,t.srcOtherRespN=0,t.srcRespN=0,t.srcOverQt=0,t.p2pDirectQt=0,t.p2pNatQt=0,t.p2pUdpbQt=0,t.p2pRelayQt=0,t.p2pOutSiteLowPrio=0,t.respP2pN=0,t.p2pSubReqN=0,t.p2pSubRespErrN=0,t.p2pSubRespQt=0,t.p2pSubRespPartN=0},i.prototype.Ek=function(t){t.metrics.videoBufN=0,t.metrics.videoBufQt=0,t.metrics.clientBufferMs=0,t.player.bufferingN=0,t.player.bufferingMs=0},i.prototype.Ik=function(){var t=this,i=new hive.snapshots.MetricSnapshot;i.timestamp=a.Framework.time(),i.guid=this.sn,i.sessionId=this.ticket.sessionId,i.eventId=new EventId,i.eventId.partnerId=this.ticket.bn(),i.eventId.customerId=this.ticket.En(),i.eventId.contentId=this.ticket.es();try{var r=new hive.snapshots.ClientInfo;r.clientType=this.Rk();var n=this.app.version.split(".");r.majorVersion=parseInt(n[0]),r.minorVersion=parseInt(n[1]),r.patchVersion=parseInt(n[2]),i.client=r}catch(o){this.m.warn(e+" error setting Snapshot ClientInfo",o)}i.streamInfo=this.xR.kk(),i.traffic=[];var s=new hive.snapshots.TrafficKey;if(i.traffic.push({key:s,value:this.BR.uk}),this.BR.lk.forEach(function(t,e){var r=new hive.snapshots.TrafficKey;r.bitrate=e,i.traffic.push({key:r,value:t})}),i.metrics=this.BR.metrics,this.Tk&&(i.metrics.clientBufferMs=this.Tk.min()),i.player=this.BR.player,this.Ck){var c=this.Ck.getPartnerSnapshots();c.forEach(function(e,r){t.Ok(r,e,i)}),this.BR.fk.filter(function(t,e){return!c.has(e)}).forEach(function(e,r){t.Ok(r,e,i)})}return i.connInfo=new hive.snapshots.ConnectivityInfo,this.tn.Pn().then(function(e){return i.connInfo.privateIp=e.Nn().Bn(),t.Pk(i)}).fail(function(e){return t.Pk(i)})},i.prototype.Pk=function(t){return t.connInfo.internalAs=this.vk,t.connInfo.externalAs=this.yk,t.connInfo.publicIp=this.Ak,t},i.prototype.Rk=function(){var t;switch(this.app.app){case"JS":t=ClientType.Ff;break;case"PROXY":t=ClientType._f;break;default:t=ClientType.Bf}return t},i.prototype.Ok=function(t,e,i){var r=this.BR.dk.get(t);e.traffic=r,i.partners||(i.partners=[]);var n=new hive.snapshots.PartnerKey;n.partnerGuid=t,i.partners.push({key:n,value:e})},i.prototype.CR=function(t,e){t>0&&(this.BR.metrics.videoBufN++,this.BR.metrics.videoBufQt+=t,this.BR.player.bufferingN++,this.BR.player.bufferingMs+=t),this.BR.player.playerBufferMs=e},i.prototype.HR=function(){return this.BR.uk},i.prototype.Nk=function(){return this.Sk.uk},i.prototype.xk=function(t){return this.Sk.lk.has(t)||this.Sk.lk.set(t,new hive.snapshots.Traffic),this.Sk.lk.get(t)},i.prototype._R=function(t){if(!this.BR.lk.has(t)){var e=new hive.snapshots.Traffic;this.bk(e),this.BR.lk.set(t,e)}return this.BR.lk.get(t)},i.prototype.Bk=function(t,e){return e.dk.has(t)||e.dk.set(t,new hive.snapshots.PartnerTraffic),e.dk.get(t)},i.prototype.Fk=function(t){return this.Bk(t,this.BR)},i.prototype._k=function(t){return this.Bk(t,this.Sk)},i.prototype.Dk=function(t){this.tn=t},i.prototype.Hk=function(t){this.Ck=t},i.prototype.jn=function(t){},i}();t.zf=r;var s=function(){function t(){this.Lk=isNaN(l.HiveConfig.DebugLogs.MetricSnapshotLogs)?0:l.HiveConfig.DebugLogs.MetricSnapshotLogs,this.state=u.Fo.Bo,this.client=a.Framework.resolve(c.gi.Be),this.Xa=new o.Ea,this.protocol=new o.$a(this.Xa)}return t.prototype.init=function(t,i){this.m=a.Framework.resolve(a.Framework.Fe.we).log(i),this.m.debug(e+" INIT CLIENT STATS"),this.Vf=t,this.Mk()},t.prototype.Mk=function(){var t=this;this.jk>-1&&a.Framework.clearInterval(this.jk),this.jk=a.Framework.setInterval(function(){t.Uk()},h.Kn.Jn.Po)},t.prototype.Ci=function(t){this.state=t},t.prototype.reset=function(){a.Framework.clearInterval(this.jk),this.Vf&&this.Vf.mk()},t.prototype.Uk=function(){var t=this;this.m.debug("[SNAP] TAKING SNAPSHOT");var e=this.Vf.Ik();e.then(function(e){return t.forward(e)}).fail(function(e){t.m.warn("[SNAP] ERROR FORWARDING SNAPSHOT",e)})["finally"](function(){t.Vf.reset()})},t.prototype.forward=function(t){var i=this;if(this.state===u.Fo.IDLE)return void this.m.debug(e+" not send - state idle");if(this.client&&this.client.Xn()){switch(this.Lk){case 0:default:this.m.debug(e+" SENDING SNAPSHOT");break;case 1:this.m.debug(e+" SENDING SNAPSHOT "+JSON.stringify(t));break;case 2:this.m.debug(e+" SENDING SNAPSHOT",t);break;case 3:this.m.debug(e+" SENDING SNAPSHOT "+JSON.stringify(t),t)}this.protocol.pc("SNAPSHOT",o.Ls.Vs,0),t.write(this.protocol),this.protocol.dc();var r=this.Xa.Ha(),n=this.Vk(r,",",4),s=r.slice(n+1,r.length-1),a=new p.Zn(Services.to,1,s);this.client.Xn().send(a).fail(function(t){i.m.warn(e+" PROBLEM: ",t)})}},t.prototype.Vk=function(t,e,i){return t.split(e,i).join(e).length},t}();t.eo=s}(s=e.Stats||(e.Stats={}))},function(t,e,i){"use strict";var r=i(1),n=i(4),o=i(2),s=i(5),a=i(58),c=i(54),h=i(65),p=function(){function t(){this.Qk=null,this.qk=null,this.Jk=null,this.Kk=null,this.Gk=new n.ve,this.publicIp=null,this.zk=[],this._i=!1,this.Wk=null,this.m=o.Framework.resolve(o.Framework.Fe.we).log(),this.ik=o.Framework.resolve(s.gi.hi),this.$k=new c.hk,this.Yk=[],this.Xk()}return t.prototype.Xk=function(){var t=this;o.Framework.setInterval(function(){t.zk=[],t.Yk=[],t.Gk=new n.ve,t.publicIp=null,t.Zk=null},12e4)},t.prototype.Pn=function(){return this.Zk||(this.Zk=this.tC()),this.Zk},t.prototype.tC=function(){var t=this,e=r.defer();if(this.Wk=o.Framework.setTimeout(function(){e.reject({eC:!0,message:"expired"})},4e3),this.iC())try{this.Qk=new RTCPeerConnection(null),this.Jk=this.Qk.createDataChannel("sendChannel",{reliable:!1}),this.qk=new RTCPeerConnection(null),this.qk.ondatachannel=function(i){t.Kk=i.channel,t.Kk.onopen=function(i){"open"===t.Kk.readyState&&(t.m.debug("Collected ips ["+t.Gk.keys().join(", ")+"]"),t.qk.close(),t.$k.nk().then(function(e){t.Yk=e,t.m.debug("Already known matching ips ["+t.Yk.join(",")+"]");var i=t.Gk.keys();t.Yk.forEach(function(e){i.indexOf(e)>0&&(t.zk.push(e),t.Gk["delete"](e))}),t.Gk.keys().forEach(function(e){t.zk.push(e)})}).fail(function(e){t.m.warn("Get Previous working ips failed with error "+e.message),t.Gk.keys().forEach(function(e){t.zk.push(e)})})["finally"](function(){t.m.debug("Final private ip list ["+t.zk.join(",")+"]"),e.resolve(t.rC())}))}},this.Qk.onicecandidate=function(i){i.candidate&&t.zb(i.candidate.candidate),!i.candidate||t.qk.addIceCandidate(i.candidate)["catch"](function(i){e.reject({eC:!0,message:i.message}),o.Framework.clearTimeout(t.Wk),console.log("Error: Failure during addIceCandidate()")})},this.qk.onicecandidate=function(i){i.candidate&&t.zb(i.candidate.candidate),!i.candidate||t.Qk.addIceCandidate(i.candidate)["catch"](function(i){e.reject({eC:!0,message:i.message}),o.Framework.clearTimeout(t.Wk),console.log("Error: Failure during addIceCandidate()")})},this.Qk.createOffer().then(function(e){return t.Qk.setLocalDescription(e)}).then(function(){return t.qk.setRemoteDescription(t.Qk.localDescription)}).then(function(){return t.qk.createAnswer()}).then(function(e){return t.qk.setLocalDescription(e)}).then(function(){return t.Qk.setRemoteDescription(t.qk.localDescription)})["catch"](function(i){e.reject({eC:!0,message:i.message}),o.Framework.clearTimeout(t.Wk),console.log("Error: Failure creating offer")})}catch(i){e.reject({eC:!0,message:i.message})}else o.Framework.clearTimeout(this.Wk),e.reject({eC:!1,message:"webrtc datachannel not supported"});return e.vt},t.prototype.iC=function(){try{return null!=h.Xe&&null!=h.nC&&"function"==typeof new RTCPeerConnection(null,null).createDataChannel}catch(t){return!1}},t.prototype.zb=function(t){var e=/([0-9]{1,3}(\.[0-9]{1,3}){3})/,i=e.exec(t);if(i){var r=i[0];this.Gk.set(r,!0)}},t.prototype.rC=function(){var t=new a.oC;return this.zk.length>0&&t.sC(this.zk[0]),this.publicIp&&t.aC(this.publicIp),this.ik.JR(t),this.ik},t.prototype.rk=function(t,e,i){if(this.publicIp=t,this.cC(),0===i&&this.zk.length>1)this.zk.shift();else if(0!==i&&this.Yk.indexOf(this.zk[0])==-1)this.Yk.unshift(this.zk[0]),this.$k.ck(this.Yk.slice(0,2));else if(0!==i&&this.Yk.indexOf(this.zk[0])>0){var r=this.Yk.indexOf(this.zk[0]);this.Yk=this.Yk.splice(r,1),this.Yk.unshift(this.zk[0]),this.$k.ck(this.Yk.slice(0,2))}this.rC()},t.prototype.cC=function(){var t=this.zk.indexOf(this.publicIp);t>-1&&this.zk.splice(t,1)},t}();e.MR=p},function(t,e){"use strict";var i=function(){function t(){}return t.prototype.aC=function(t){this.publicIp=t},t.prototype.xn=function(){return this.publicIp},t.prototype.hC=function(t){this.pC=t},t.prototype.Ln=function(){return this.pC},t.prototype.uC=function(t){this.nic=t},t.prototype.Dn=function(){return this.nic},t.prototype.lC=function(t){this.nicName=t},t.prototype.Hn=function(){return this.nicName},t.prototype.sC=function(t){this.privateIp=t},t.prototype.Bn=function(){return this.privateIp},t.prototype.dC=function(t){this.netmask=t},t.prototype.fC=function(){return this.netmask},t.prototype.gC=function(t){this.vC=t},t.prototype._n=function(){return null},t}();e.oC=i},function(t,e){"use strict";var i=function(){function t(t,e,i){this.isLive=t,this.protocol=e,this.yC=i}return t.prototype.kk=function(){var t=new hive.snapshots.StreamInfo;return t.streamType=this.isLive?StreamType.LIVE:StreamType.Pf,t.streamProtocol=this.protocol,t.url=this.yC,t},t}();e.NR=i},function(t,e,i){"use strict";i(29);var r=i(1),n=i(4),o=n.ve,s=i(2),a=i(20),c=function(){function t(t){this.io=(new Date).getTime(),this.mC=t}return t}(),h=function(){function t(){this.wC=new o,this.m=(s.Framework.resolve(s.Framework.Fe.we)||console).log(),this.m.debug("INIT TICKET RESOLVER")}return t.prototype.resolve=function(t,e,i){var n=this,o=r.defer();return t&&(t.on(Services.kf,0,function(t){n.TC(t)}),t.on(Services.kf,2,function(t){n.TC(t)}),this.wC.set(e,new c(o))),o.vt},t.prototype.TC=function(t){var e=this,i=(new Date).getTime(),r=JSON.parse(t.msg),n=!1;this.wC.forEach(function(t,o){if(e.SC(o,r)){n=!0;var s=e.$l(o,r);s?(s.io=t.io,s.ro=i,t.mC.resolve(s)):t.mC.reject("Ticket verification failed"),e.wC["delete"](s)}}),n||this.m.warn("no pending ticket matching: "+t.msg)},t.prototype.Go=function(t){var e=new RegExp("^https?://api(?:-test)?.hivestreaming.com/v1/events/(?:wildcard/)?");if(e.test(t)){var i=this.bC();return i.Kh(t),i}return null},t.prototype.bC=function(){return new a.ap},t.prototype.SC=function(t,e){return t.bn()===e[a.ap.op]&&t.En()===e[a.ap.np]&&t.es()===e[a.ap.sp]},t.prototype.$l=function(t,e){return t.Uh(e),t.Qh()?t:null},t}();e.UR=h},function(t,e){"function"==typeof Object.create?t.t=function(t,e){t.EC=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,Ag:!1,Pg:!0,Ng:!0}})}:t.t=function(t,e){t.EC=e;var i=function(){};i.prototype=e.prototype,t.prototype=new i,t.prototype.constructor=t}},function(t,e){t.t=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,e,i){function r(t,i){var r={IC:[],RC:o};return arguments.length>=3&&(r.kC=arguments[2]),arguments.length>=4&&(r.CC=arguments[3]),f(i)?r.OC=i:i&&e.PC(r,i),T(r.OC)&&(r.OC=!1),T(r.kC)&&(r.kC=2),T(r.CC)&&(r.CC=!1),T(r.AC)&&(r.AC=!0),r.CC&&(r.RC=n),a(r,t,r.kC)}function n(t,e){var i=r.NC[e];return i?"["+r.CC[i][0]+"m"+t+"["+r.CC[i][1]+"m":t}function o(t,e){return t}function s(t){var e={};return t.forEach(function(t,i){e[t]=!0}),e}function a(t,i,r){if(t.AC&&i&&R(i.gt)&&i.gt!==e.gt&&(!i.constructor||i.constructor.prototype!==i)){var n=i.gt(r,t);return m(n)||(n=a(t,n,r)),n}var o=c(t,i);if(o)return o;var f=Object.keys(i),g=s(f);if(t.OC&&(f=Object.getOwnPropertyNames(i)),I(i)&&(f.indexOf("message")>=0||f.indexOf("description")>=0))return h(i);if(0===f.length){if(R(i)){var v=i.name?": "+i.name:"";return t.RC("[Function"+v+"]","special")}if(S(i))return t.RC(RegExp.prototype.toString.call(i),"regexp");if(E(i))return t.RC(Date.prototype.toString.call(i),"date");if(I(i))return h(i)}var y="",w=!1,T=["{","}"];if(d(i)&&(w=!0,T=["[","]"]),R(i)){var b=i.name?": "+i.name:"";y=" [Function"+b+"]"}if(S(i)&&(y=" "+RegExp.prototype.toString.call(i)),E(i)&&(y=" "+Date.prototype.toUTCString.call(i)),I(i)&&(y=" "+h(i)),0===f.length&&(!w||0==i.length))return T[0]+y+T[1];if(r<0)return S(i)?t.RC(RegExp.prototype.toString.call(i),"regexp"):t.RC("[Object]","special");t.IC.push(i);var k;return k=w?p(t,i,r,g,f):f.map(function(e){return u(t,i,r,g,e,w)}),t.IC.pop(),l(k,y,T)}function c(t,e){if(T(e))return t.RC("undefined","undefined");if(m(e)){var i="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.RC(i,"string")}return y(e)?t.RC(""+e,"number"):f(e)?t.RC(""+e,"boolean"):g(e)?t.RC("null","null"):void 0}function h(t){return"["+Error.prototype.toString.call(t)+"]"}function p(t,e,i,r,n){for(var o=[],s=0,a=e.length;s<a;++s)A(e,String(s))?o.push(u(t,e,i,r,String(s),!0)):o.push("");return n.forEach(function(n){n.match(/^\d+$/)||o.push(u(t,e,i,r,n,!0))}),o}function u(t,e,i,r,n,o){var s,c,h;if(h=Object.getOwnPropertyDescriptor(e,n)||{value:e[n]},h.get?c=h.set?t.RC("[Getter/Setter]","special"):t.RC("[Getter]","special"):h.set&&(c=t.RC("[Setter]","special")),A(r,n)||(s="["+n+"]"),c||(t.IC.indexOf(h.value)<0?(c=g(i)?a(t,h.value,null):a(t,h.value,i-1),c.indexOf("\n")>-1&&(c=o?c.split("\n").map(function(t){return"  "+t}).join("\n").substr(2):"\n"+c.split("\n").map(function(t){return"   "+t}).join("\n"))):c=t.RC("[Circular]","special")),T(s)){if(o&&n.match(/^\d+$/))return c;s=JSON.stringify(""+n),s.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=t.RC(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=t.RC(s,"string"))}return s+": "+c}function l(t,e,i){var r=0,n=t.reduce(function(t,e){return r++,e.indexOf("\n")>=0&&r++,t+e.replace(/\u001b\[\d\d?m/g,"").length+1},0);return n>60?i[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+i[1]:i[0]+e+" "+t.join(", ")+" "+i[1]}function d(t){return Array.isArray(t)}function f(t){return"boolean"==typeof t}function g(t){return null===t}function v(t){return null==t}function y(t){return"number"==typeof t}function m(t){return"string"==typeof t}function w(t){return"symbol"==typeof t}function T(t){return void 0===t}function S(t){return b(t)&&"[object RegExp]"===C(t)}function b(t){return"object"==typeof t&&null!==t}function E(t){return b(t)&&"[object Date]"===C(t)}function I(t){return b(t)&&("[object Error]"===C(t)||t instanceof Error)}function R(t){return"function"==typeof t}function k(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||"undefined"==typeof t}function C(t){return Object.prototype.toString.call(t)}function O(t){return t<10?"0"+t.toString(10):t.toString(10)}function P(){var t=new Date,e=[O(t.getHours()),O(t.getMinutes()),O(t.getSeconds())].join(":");return[t.getDate(),F[t.getMonth()],e].join(" ")}function A(t,e){return Object.prototype.hasOwnProperty.call(t,e)}var N=/%[sdj%]/g;e.format=function(t){if(!m(t)){for(var e=[],i=0;i<arguments.length;i++)e.push(r(arguments[i]));return e.join(" ")}for(var i=1,n=arguments,o=n.length,s=String(t).replace(N,function(t){if("%%"===t)return"%";if(i>=o)return t;switch(t){case"%s":return String(n[i++]);case"%d":return Number(n[i++]);case"%j":try{return JSON.stringify(n[i++])}catch(e){return"[Circular]"}default:return t}}),a=n[i];i<o;a=n[++i])s+=g(a)||!b(a)?" "+a:" "+r(a);return s},e.xC=function(t,i){function r(){if(!n){if(process.throwDeprecation)throw new Error(i);process.traceDeprecation?console.trace(i):console.error(i),n=!0}return t.apply(this,arguments)}if(T(global.process))return function(){return e.xC(t,i).apply(this,arguments)};if(process.noDeprecation===!0)return t;var n=!1;return r};var x,B={};e.BC=function(t){if(T(x)&&(x=process.Ot.NODE_DEBUG||""),t=t.toUpperCase(),!B[t])if(new RegExp("\\b"+t+"\\b","i").test(x)){var i=process.pid;B[t]=function(){var r=e.format.apply(e,arguments);console.error("%s %d: %s",t,i,r)}}else B[t]=function(){};return B[t]},e.gt=r,r.CC={bold:[1,22],FC:[3,23],_C:[4,24],inverse:[7,27],DC:[37,39],HC:[90,39],LC:[30,39],blue:[34,39],MC:[36,39],green:[32,39],jC:[35,39],red:[31,39],UC:[33,39]},r.NC={VC:"cyan",number:"yellow",QC:"yellow",undefined:"grey",qC:"bold",JC:"green",xT:"magenta",KC:"red"},e.isArray=d,e.Om=f,e.Am=g,e.ak=v,e.Nm=y,e.xm=m,e.GC=w,e.Bm=T,e.zC=S,e.ov=b,e.WC=E,e.$C=I,e.Pm=R,e.YC=k,e.isBuffer=i(62);var F=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];e.log=function(){console.log("%s - %s",P(),e.format.apply(e,arguments))},e.qs=i(61),e.PC=function(t,e){if(!e||!b(e))return t;for(var i=Object.keys(e),r=i.length;r--;)t[i[r]]=e[i[r]];return t}},function(t,e){(function(e){t.t=e}).call(e,{})},function(t,e,i){"use strict";!function(){var e=i(3),r=e.log,n=e.ri;t.t.ri=n,t.t.Xe=e.Xe,t.t.Ye=e.Ye;var o=i(66)||null,s=i(68)||null,a=i(70)||null,c=i(72)||null;switch(n.ti){case"chrome":if(!o||!o.XC)return void r("Chrome shim is not included in this adapter release.");r("adapter.js shimming chrome."),t.t.nC=o,o.ZC(),o.tO(),e.ei(),o.eO(),o.XC(),o.iO(),o.rO();break;case"firefox":if(!a||!a.XC)return void r("Firefox shim is not included in this adapter release.");r("adapter.js shimming firefox."),t.t.nC=a,a.ZC(),e.ei(),a.eO(),a.XC(),a.iO();break;case"edge":if(!s||!s.XC)return void r("MS edge shim is not included in this adapter release.");r("adapter.js shimming edge."),t.t.nC=s,s.ZC(),e.ei(),s.XC();break;case"safari":if(!c)return void r("Safari shim is not included in this adapter release.");r("adapter.js shimming safari."),t.t.nC=c,c.ZC();break;default:r("Unsupported browser!")}}()},function(t,e,i){"use strict";var r=i(3).log,n=i(3).ri,o={tO:function(){window.MediaStream=window.MediaStream||window.webkitMediaStream},iO:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this.nO},set:function(t){var e=this;this.nO&&(this.removeEventListener("track",this.nO),this.removeEventListener("addstream",this.oO)),this.addEventListener("track",this.nO=t),this.addEventListener("addstream",this.oO=function(t){t.stream.addEventListener("addtrack",function(i){var r=new Event("track");r.track=i.track,r.receiver={track:i.track},r.sO=[t.stream],e.dispatchEvent(r)}),t.stream.getTracks().forEach(function(e){var i=new Event("track");i.track=e,i.receiver={track:e},i.sO=[t.stream],this.dispatchEvent(i)}.bind(this))}.bind(this))}})},rO:function(){if("object"==typeof window&&window.RTCPeerConnection&&!("getSenders"in RTCPeerConnection.prototype)&&"createDTMFSender"in RTCPeerConnection.prototype){RTCPeerConnection.prototype.getSenders=function(){return this.aO};var t=RTCPeerConnection.prototype.addStream,e=RTCPeerConnection.prototype.removeStream;RTCPeerConnection.prototype.addStream=function(e){var i=this;i.aO=i.aO||[],t.apply(i,[e]),e.getTracks().forEach(function(t){i.aO.push({track:t,get cO(){return void 0===this.hO&&("audio"===t.kind?this.hO=i.createDTMFSender(t):this.hO=null),this.hO}})})},RTCPeerConnection.prototype.removeStream=function(t){var i=this;i.aO=i.aO||[],e.apply(i,[t]),t.getTracks().forEach(function(t){var e=i.aO.find(function(e){return e.track===t});e&&i.aO.splice(i.aO.indexOf(e),1)})}}},eO:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this.pO},set:function(t){var e=this;return this.pO=t,this.src&&URL.revokeObjectURL(this.src),t?(this.src=URL.createObjectURL(t),t.addEventListener("addtrack",function(){e.src&&URL.revokeObjectURL(e.src),e.src=URL.createObjectURL(t)}),void t.addEventListener("removetrack",function(){e.src&&URL.revokeObjectURL(e.src),e.src=URL.createObjectURL(t)})):void(this.src="")}}))},XC:function(){window.RTCPeerConnection||(window.RTCPeerConnection=function(t,e){return r("PeerConnection"),t&&t.uO&&(t.lO=t.uO),new webkitRTCPeerConnection(t,e)},window.RTCPeerConnection.prototype=webkitRTCPeerConnection.prototype,webkitRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return webkitRTCPeerConnection.generateCertificate}}));var t=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(e,i,r){var n=this,o=arguments;if(arguments.length>0&&"function"==typeof e)return t.apply(this,arguments);if(0===t.length&&(0===arguments.length||"function"!=typeof arguments[0]))return t.apply(this,[]);var s=function(t){var e={},i=t.result();return i.forEach(function(t){var i={id:t.id,timestamp:t.timestamp,type:{dO:"local-candidate",fO:"remote-candidate"}[t.type]||t.type};t.names().forEach(function(e){i[e]=t.stat(e)}),e[i.id]=i}),e},a=function(t){return new Map(Object.keys(t).map(function(e){return[e,t[e]]}))};if(arguments.length>=2){var c=function(t){o[1](a(s(t)))};return t.apply(this,[c,arguments[0]])}return new Promise(function(e,i){t.apply(n,[function(t){e(a(s(t)))},i])}).then(i,r)},n.version<51&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(t){var e=RTCPeerConnection.prototype[t];RTCPeerConnection.prototype[t]=function(){var t=arguments,i=this,r=new Promise(function(r,n){e.apply(i,[t[0],r,n])});return t.length<2?r:r.then(function(){t[1].apply(null,[])},function(e){t.length>=3&&t[2].apply(null,[e])})}}),n.version<52&&["createOffer","createAnswer"].forEach(function(t){var e=RTCPeerConnection.prototype[t];RTCPeerConnection.prototype[t]=function(){var t=this;if(arguments.length<1||1===arguments.length&&"object"==typeof arguments[0]){var i=1===arguments.length?arguments[0]:void 0;return new Promise(function(r,n){e.apply(t,[r,n,i])})}return e.apply(this,arguments)}}),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(t){var e=RTCPeerConnection.prototype[t];RTCPeerConnection.prototype[t]=function(){return arguments[0]=new("addIceCandidate"===t?RTCIceCandidate:RTCSessionDescription)(arguments[0]),e.apply(this,arguments)}});var e=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?e.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}};t.t={tO:o.tO,iO:o.iO,rO:o.rO,eO:o.eO,XC:o.XC,ZC:i(67)}},function(t,e,i){"use strict";var r=i(3).log,n=i(3).ri;t.t=function(){var t=function(t){if("object"!=typeof t||t.gO||t.optional)return t;var e={};return Object.keys(t).forEach(function(i){if("require"!==i&&"advanced"!==i&&"mediaSource"!==i){var r="object"==typeof t[i]?t[i]:{vO:t[i]};void 0!==r.yO&&"number"==typeof r.yO&&(r.min=r.max=r.yO);var n=function(t,e){return t?t+e.charAt(0).toUpperCase()+e.slice(1):"deviceId"===e?"sourceId":e};if(void 0!==r.vO){e.optional=e.optional||[];var o={};"number"==typeof r.vO?(o[n("min",i)]=r.vO,e.optional.push(o),o={},o[n("max",i)]=r.vO,e.optional.push(o)):(o[n("",i)]=r.vO,e.optional.push(o))}void 0!==r.yO&&"number"!=typeof r.yO?(e.gO=e.gO||{},e.gO[n("",i)]=r.yO):["min","max"].forEach(function(t){void 0!==r[t]&&(e.gO=e.gO||{},e.gO[n(t,i)]=r[t])})}}),t.mO&&(e.optional=(e.optional||[]).concat(t.mO)),e},e=function(e,i){if(e=JSON.parse(JSON.stringify(e)),e&&e.Mp&&(e.Mp=t(e.Mp)),e&&"object"==typeof e.video){var o=e.video.wO;o=o&&("object"==typeof o?o:{vO:o});var s=n.version<59;if(o&&("user"===o.yO||"environment"===o.yO||"user"===o.vO||"environment"===o.vO)&&(!navigator.mediaDevices.TO||!navigator.mediaDevices.TO().wO||s)&&(delete e.video.wO,"environment"===o.yO||"environment"===o.vO))return navigator.mediaDevices.SO().then(function(n){n=n.filter(function(t){return"videoinput"===t.kind});var s=n.find(function(t){return t.label.toLowerCase().indexOf("back")!==-1})||n.length&&n[n.length-1];return s&&(e.video.bO=o.yO?{yO:s.bO}:{vO:s.bO}),e.video=t(e.video),r("chrome: "+JSON.stringify(e)),i(e)});e.video=t(e.video)}return r("chrome: "+JSON.stringify(e)),i(e)},i=function(t){return{name:{EO:"NotAllowedError",IO:"OverconstrainedError"}[t.name]||t.name,message:t.message,RO:t.constraintName,toString:function(){return this.name+(this.message&&": ")+this.message}}},o=function(t,r,n){e(t,function(t){navigator.webkitGetUserMedia(t,r,function(t){n(i(t))})})};navigator.getUserMedia=o;var s=function(t){return new Promise(function(e,i){navigator.getUserMedia(t,e,i)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:s,SO:function(){return new Promise(function(t){var e={Mp:"audioinput",video:"videoinput"};return MediaStreamTrack.getSources(function(i){t(i.map(function(t){return{label:t.label,kind:e[t.kind],bO:t.id,kO:""}}))})})},TO:function(){return{bO:!0,CO:!0,wO:!0,OO:!0,height:!0,width:!0}}}),navigator.mediaDevices.getUserMedia){var a=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(t){return e(t,function(t){return a(t).then(function(e){if(t.Mp&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach(function(t){t.stop()}),new DOMException("","NotFoundError");return e},function(t){return Promise.reject(i(t))})})}}else navigator.mediaDevices.getUserMedia=function(t){return s(t)};"undefined"==typeof navigator.mediaDevices.addEventListener&&(navigator.mediaDevices.addEventListener=function(){r("Dummy mediaDevices.addEventListener called.")}),"undefined"==typeof navigator.mediaDevices.removeEventListener&&(navigator.mediaDevices.removeEventListener=function(){r("Dummy mediaDevices.removeEventListener called.")})}},function(t,e,i){"use strict";function r(t){var e=t.filter(function(t){return"audio"===t.kind}),i=t.filter(function(t){return"video"===t.kind});for(t=[];e.length||i.length;)e.length&&t.push(e.shift()),
i.length&&t.push(i.shift());return t}function n(t){var e=!1;return t=JSON.parse(JSON.stringify(t)),t.filter(function(t){if(t&&(t.PO||t.url)){var i=t.PO||t.url,r="string"==typeof i;return r&&(i=[i]),i=i.filter(function(t){var i=0===t.indexOf("turn:")&&t.indexOf("transport=udp")!==-1&&t.indexOf("turn:[")===-1&&!e;return i?(e=!0,!0):0===t.indexOf("stun:")&&s.version>=14393}),delete t.url,t.PO=r?i[0]:i,!!i.length}return!1})}var o=i(35),s=i(3).ri,a={XC:function(){if(window.RTCIceGatherer&&(window.RTCIceCandidate||(window.RTCIceCandidate=function(t){return t}),window.RTCSessionDescription||(window.RTCSessionDescription=function(t){return t}),s.version<15025)){var t=Object.getOwnPropertyDescriptor(MediaStreamTrack.prototype,"enabled");Object.defineProperty(MediaStreamTrack.prototype,"enabled",{set:function(e){t.set.call(this,e);var i=new Event("enabled");i.enabled=e,this.dispatchEvent(i)}})}window.RTCPeerConnection=function(t){var e=this,i=document.createDocumentFragment();if(["addEventListener","removeEventListener","dispatchEvent"].forEach(function(t){e[t]=i[t].bind(i)}),this.onicecandidate=null,this.onaddstream=null,this.AO=null,this.onremovestream=null,this.onsignalingstatechange=null,this.oniceconnectionstatechange=null,this.NO=null,this.onnegotiationneeded=null,this.ondatachannel=null,this.xO=[],this.BO=[],this.getLocalStreams=function(){return e.xO},this.getRemoteStreams=function(){return e.BO},this.localDescription=new RTCSessionDescription({type:"",sdp:""}),this.remoteDescription=new RTCSessionDescription({type:"",sdp:""}),this.signalingState="stable",this.iceConnectionState="new",this.iceGatheringState="new",this.FO={_O:"all",iceServers:[]},t&&t.uO)switch(t.uO){case"all":case"relay":this.FO._O=t.uO}this.DO=t&&"max-bundle"===t.bundlePolicy,t&&t.iceServers&&(this.FO.iceServers=n(t.iceServers)),this.HO=t,this.LO=[],this.MO=[]},window.RTCPeerConnection.prototype.jO=function(){var t=new Event("icegatheringstatechange");this.dispatchEvent(t),null!==this.NO&&this.NO(t)},window.RTCPeerConnection.prototype.UO=function(){var t=this,e=o.Kb(t.localDescription.sdp);this.MO.forEach(function(i){var r=!i.candidate||0===Object.keys(i.candidate).length;if(r)for(var n=1;n<e.length;n++)e[n].indexOf("\r\na=end-of-candidates\r\n")===-1&&(e[n]+="a=end-of-candidates\r\n");else e[i.candidate.sdpMLineIndex+1]+="a="+i.candidate.candidate+"\r\n";if(t.localDescription.sdp=e.join(""),t.dispatchEvent(i),null!==t.onicecandidate&&t.onicecandidate(i),!i.candidate&&"complete"!==t.iceGatheringState){var o=t.LO.every(function(t){return t.YE&&"completed"===t.YE.state});o&&"complete"!==t.iceGatheringStateChange&&(t.iceGatheringState="complete",t.jO())}}),this.MO=[]},window.RTCPeerConnection.prototype.getConfiguration=function(){return this.HO},window.RTCPeerConnection.prototype.addStream=function(t){if(s.version>=15025)this.xO.push(t);else{var e=t.clone();t.getTracks().forEach(function(t,i){var r=e.getTracks()[i];t.addEventListener("enabled",function(t){r.enabled=t.enabled})}),this.xO.push(e)}this.VO()},window.RTCPeerConnection.prototype.removeStream=function(t){var e=this.xO.indexOf(t);e>-1&&(this.xO.splice(e,1),this.VO())},window.RTCPeerConnection.prototype.getSenders=function(){return this.LO.filter(function(t){return!!t.tI}).map(function(t){return t.tI})},window.RTCPeerConnection.prototype.getReceivers=function(){return this.LO.filter(function(t){return!!t.eI}).map(function(t){return t.eI})},window.RTCPeerConnection.prototype.QO=function(t,e){var i={NE:[],xE:[],BE:[]},r=function(t,e){t=parseInt(t,10);for(var i=0;i<e.length;i++)if(e[i].oE===t||e[i].hE===t)return e[i]},n=function(t,e,i,n){var o=r(t.parameters.apt,i),s=r(e.parameters.apt,n);return o&&s&&o.name.toLowerCase()===s.name.toLowerCase()};return t.NE.forEach(function(r){for(var o=0;o<e.NE.length;o++){var s=e.NE[o];if(r.name.toLowerCase()===s.name.toLowerCase()&&r.sE===s.sE){if("rtx"===r.name.toLowerCase()&&r.parameters&&s.parameters.apt&&!n(r,s,t.NE,e.NE))continue;s=JSON.parse(JSON.stringify(s)),s.aE=Math.min(r.aE,s.aE),i.NE.push(s),s.yE=s.yE.filter(function(t){for(var e=0;e<r.yE.length;e++)if(r.yE[e].type===t.type&&r.yE[e].gE===t.gE)return!0;return!1});break}}}),t.xE.forEach(function(t){for(var r=0;r<e.xE.length;r++){var n=e.xE[r];if(t.uri===n.uri){i.xE.push(n);break}}}),i},window.RTCPeerConnection.prototype.qO=function(t,e){var i=this,r=new RTCIceGatherer(i.FO),n=new RTCIceTransport(r);r.JO=function(s){var a=new Event("icecandidate");a.candidate={sdpMid:t,sdpMLineIndex:e};var c=s.candidate,h=!c||0===Object.keys(c).length;h?void 0===r.state&&(r.state="completed"):(c.$b="RTCP"===n.$b?2:1,a.candidate.candidate=o.iE(c));var p=o.Kb(i.localDescription.sdp);h?p[a.candidate.sdpMLineIndex+1]+="a=end-of-candidates\r\n":p[a.candidate.sdpMLineIndex+1]+="a="+a.candidate.candidate+"\r\n",i.localDescription.sdp=p.join("");var u=i.KO?i.KO:i.LO,l=u.every(function(t){return t.YE&&"completed"===t.YE.state});switch(i.iceGatheringState){case"new":h||i.MO.push(a),h&&l&&i.MO.push(new Event("icecandidate"));break;case"gathering":i.UO(),h||(i.dispatchEvent(a),null!==i.onicecandidate&&i.onicecandidate(a)),l&&(i.dispatchEvent(new Event("icecandidate")),null!==i.onicecandidate&&i.onicecandidate(new Event("icecandidate")),i.iceGatheringState="complete",i.jO());break;case"complete":}},n.GO=function(){i.zO()};var s=new RTCDtlsTransport(n);return s.WO=function(){i.zO()},s.onerror=function(){s.state="failed",i.zO()},{YE:r,$O:n,XE:s}},window.RTCPeerConnection.prototype.YO=function(t,e,i){var r=this.QO(t.XO,t.ZO);e&&t.tI&&(r.tP=t.iI,r.FE={qE:o.qb},t.eP.length&&(r.FE.wE=t.eP[0].wE),t.tI.send(r)),i&&t.eI&&("video"===t.kind&&t.eP&&s.version<15019&&t.eP.forEach(function(t){delete t.ME}),r.tP=t.eP,r.FE={qE:t.qE},t.iI.length&&(r.FE.wE=t.iI[0].wE),t.eI.receive(r))},window.RTCPeerConnection.prototype.setLocalDescription=function(t){var e,i,r=this;if("offer"===t.type)this.KO&&(e=o.Kb(t.sdp),i=e.shift(),e.forEach(function(t,e){var i=o.AE(t);r.KO[e].XO=i}),this.LO=this.KO,delete this.KO);else if("answer"===t.type){e=o.Kb(r.remoteDescription.sdp),i=e.shift();var n=o.Gb(i,"a=ice-lite").length>0;e.forEach(function(t,e){var s=r.LO[e],a=s.YE,c=s.$O,h=s.XE,p=s.XO,u=s.ZO,l="0"===t.split("\n",1)[0].split(" ",2)[1];if(!l&&!s.iP){var d=o.CE(t,i),f=o.EE(t,i);n&&(f.IE="server"),r.DO&&0!==e||(c.start(a,d,n?"controlling":"controlled"),h.start(f));var g=r.QO(p,u);r.YO(s,g.NE.length>0,!1)}})}switch(this.localDescription={type:t.type,sdp:t.sdp},t.type){case"offer":this.rP("have-local-offer");break;case"answer":this.rP("stable");break;default:throw new TypeError('unsupported type "'+t.type+'"')}var s=arguments.length>1&&"function"==typeof arguments[1];if(s){var a=arguments[1];window.setTimeout(function(){a(),"new"===r.iceGatheringState&&(r.iceGatheringState="gathering",r.jO()),r.UO()},0)}var c=Promise.resolve();return c.then(function(){s||("new"===r.iceGatheringState&&(r.iceGatheringState="gathering",r.jO()),window.setTimeout(r.UO.bind(r),500))}),c},window.RTCPeerConnection.prototype.setRemoteDescription=function(t){var e=this,i=new MediaStream,r=[],n=o.Kb(t.sdp),a=n.shift(),c=o.Gb(a,"a=ice-lite").length>0;switch(this.DO=o.Gb(a,"a=group:BUNDLE ").length>0,n.forEach(function(n,h){var p=o.Jb(n),u=p[0].substr(2).split(" "),l=u[0],d="0"===u[1],f=o.rI(n,a),g=o.Gb(n,"a=mid:");if(g=g.length?g[0].substr(6):o.Qb(),"application"===l&&"DTLS/SCTP"===u[2])return void(e.LO[h]={ZE:g,iP:!0});var v,y,m,w,T,S,b,E,I,R,k,C,O=o.AE(n);d||(k=o.CE(n,a),C=o.EE(n,a),C.IE="client"),E=o.HE(n);var P,A=o.Gb(n,"a=ssrc:").map(function(t){return o.mE(t)}).filter(function(t){return"cname"===t.TE})[0];A&&(P=A.value);var N=o.Gb(n,"a=end-of-candidates",a).length>0,x=o.Gb(n,"a=candidate:").map(function(t){return o.zb(t)}).filter(function(t){return"1"===t.$b});if("offer"!==t.type||d)"answer"!==t.type||d||(v=e.LO[h],y=v.YE,m=v.$O,w=v.XE,T=v.tI,S=v.eI,b=v.iI,I=v.XO,e.LO[h].eP=E,e.LO[h].ZO=O,e.LO[h].qE=P,(c||N)&&x.length&&m.setRemoteCandidates(x),e.DO&&0!==h||(m.start(y,k,"controlling"),w.start(C)),e.YO(v,"sendrecv"===f||"recvonly"===f,"sendrecv"===f||"sendonly"===f),!S||"sendrecv"!==f&&"sendonly"!==f?delete v.eI:(R=S.track,r.push([R,S]),i.addTrack(R)));else{var B=e.DO&&h>0?{YE:e.LO[0].YE,$O:e.LO[0].$O,XE:e.LO[0].XE}:e.qO(g,h);if(!N||e.DO&&0!==h||B.$O.setRemoteCandidates(x),I=RTCRtpReceiver.getCapabilities(l),s.version<15019&&(I.NE=I.NE.filter(function(t){return"rtx"!==t.name})),b=[{wE:1001*(2*h+2)}],"sendrecv"!==f&&"sendonly"!==f||(S=new RTCRtpReceiver(B.XE,l),R=S.track,r.push([R,S]),i.addTrack(R)),e.xO.length>0&&e.xO[0].getTracks().length>=h){var F;"audio"===l?F=e.xO[0].getAudioTracks()[0]:"video"===l&&(F=e.xO[0].getVideoTracks()[0]),F&&(s.version>=15019&&"video"===l&&(b[0].ME={wE:1001*(2*h+2)+1}),T=new RTCRtpSender(F,B.XE))}e.LO[h]={YE:B.YE,$O:B.$O,XE:B.XE,XO:I,ZO:O,tI:T,eI:S,kind:l,ZE:g,qE:P,iI:b,eP:E},e.YO(e.LO[h],!1,"sendrecv"===f||"sendonly"===f)}}),this.remoteDescription={type:t.type,sdp:t.sdp},t.type){case"offer":this.rP("have-remote-offer");break;case"answer":this.rP("stable");break;default:throw new TypeError('unsupported type "'+t.type+'"')}return i.getTracks().length&&(e.BO.push(i),window.setTimeout(function(){var t=new Event("addstream");t.stream=i,e.dispatchEvent(t),null!==e.onaddstream&&window.setTimeout(function(){e.onaddstream(t)},0),r.forEach(function(t){var r=t[0],n=t[1],o=new Event("track");o.track=r,o.receiver=n,o.sO=[i],e.dispatchEvent(o),null!==e.AO&&window.setTimeout(function(){e.AO(o)},0)})},0)),arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.close=function(){this.LO.forEach(function(t){t.$O&&t.$O.stop(),t.XE&&t.XE.stop(),t.tI&&t.tI.stop(),t.eI&&t.eI.stop()}),this.rP("closed")},window.RTCPeerConnection.prototype.rP=function(t){this.signalingState=t;var e=new Event("signalingstatechange");this.dispatchEvent(e),null!==this.onsignalingstatechange&&this.onsignalingstatechange(e)},window.RTCPeerConnection.prototype.VO=function(){var t=new Event("negotiationneeded");this.dispatchEvent(t),null!==this.onnegotiationneeded&&this.onnegotiationneeded(t)},window.RTCPeerConnection.prototype.zO=function(){var t,e=this,i={nP:0,closed:0,oP:0,sP:0,connected:0,aP:0,_i:0};if(this.LO.forEach(function(t){i[t.$O.state]++,i[t.XE.state]++}),i.connected+=i.aP,t="new",i._i>0?t="failed":i.oP>0||i.sP>0?t="connecting":i.disconnected>0?t="disconnected":i["nP"]>0?t="new":(i.connected>0||i.aP>0)&&(t="connected"),t!==e.iceConnectionState){e.iceConnectionState=t;var r=new Event("iceconnectionstatechange");this.dispatchEvent(r),null!==this.oniceconnectionstatechange&&this.oniceconnectionstatechange(r)}},window.RTCPeerConnection.prototype.createOffer=function(){var t=this;if(this.KO)throw new Error("createOffer called while there is a pending offer.");var e;1===arguments.length&&"function"!=typeof arguments[0]?e=arguments[0]:3===arguments.length&&(e=arguments[2]);var i=[],n=0,a=0;if(this.xO.length&&(n=this.xO[0].getAudioTracks().length,a=this.xO[0].getVideoTracks().length),e){if(e.gO||e.optional)throw new TypeError("Legacy mandatory/optional constraints not supported.");void 0!==e.cP&&(n=e.cP),void 0!==e.hP&&(a=e.hP)}for(this.xO.length&&this.xO[0].getTracks().forEach(function(t){i.push({kind:t.kind,track:t,pP:"audio"===t.kind?n>0:a>0}),"audio"===t.kind?n--:"video"===t.kind&&a--});n>0||a>0;)n>0&&(i.push({kind:"audio",pP:!0}),n--),a>0&&(i.push({kind:"video",pP:!0}),a--);i=r(i);var c=o.WE(),h=[];i.forEach(function(e,i){var r=e.track,n=e.kind,a=o.Qb(),c=t.DO&&i>0?{YE:h[0].YE,$O:h[0].$O,XE:h[0].XE}:t.qO(a,i),p=RTCRtpSender.getCapabilities(n);s.version<15019&&(p.NE=p.NE.filter(function(t){return"rtx"!==t.name})),p.NE.forEach(function(t){"H264"===t.name&&void 0===t.parameters["uP"]&&(t.parameters["uP"]="1")});var u,l,d=[{wE:1001*(2*i+1)}];r&&(s.version>=15019&&"video"===n&&(d[0].ME={wE:1001*(2*i+1)+1}),u=new RTCRtpSender(r,c.XE)),e.pP&&(l=new RTCRtpReceiver(c.XE,n)),h[i]={YE:c.YE,$O:c.$O,XE:c.XE,XO:p,ZO:null,tI:u,eI:l,kind:n,ZE:a,iI:d,eP:null}}),this.DO&&(c+="a=group:BUNDLE "+h.map(function(t){return t.ZE}).join(" ")+"\r\n"),i.forEach(function(e,i){var r=h[i];c+=o.$E(r,r.XO,"offer",t.xO[0])}),this.KO=h;var p=new RTCSessionDescription({type:"offer",sdp:c});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,p),Promise.resolve(p)},window.RTCPeerConnection.prototype.createAnswer=function(){var t=this,e=o.WE();this.DO&&(e+="a=group:BUNDLE "+this.LO.map(function(t){return t.ZE}).join(" ")+"\r\n"),this.LO.forEach(function(i){if(i.iP)return void(e+="m=application 0 DTLS/SCTP 5000\r\nc=IN IP4 0.0.0.0\r\na=mid:"+i.ZE+"\r\n");var r=t.QO(i.XO,i.ZO);e+=o.$E(i,r,"answer",t.xO[0])});var i=new RTCSessionDescription({type:"answer",sdp:e});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,i),Promise.resolve(i)},window.RTCPeerConnection.prototype.addIceCandidate=function(t){if(t){var e=t.sdpMLineIndex;if(t.sdpMid)for(var i=0;i<this.LO.length;i++)if(this.LO[i].ZE===t.sdpMid){e=i;break}var r=this.LO[e];if(r){var n=Object.keys(t.candidate).length>0?o.zb(t.candidate):{};if("tcp"===n.protocol&&(0===n.port||9===n.port))return Promise.resolve();if("1"!==n.$b)return Promise.resolve();r.$O.addRemoteCandidate(n);var s=o.Kb(this.remoteDescription.sdp);s[e+1]+=(n.type?t.candidate.trim():"a=end-of-candidates")+"\r\n",this.remoteDescription.sdp=s.join("")}}else for(var a=0;a<this.LO.length;a++)if(this.LO[a].$O.addRemoteCandidate({}),this.DO)return Promise.resolve();return arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.getStats=function(){var t=[];this.LO.forEach(function(e){["rtpSender","rtpReceiver","iceGatherer","iceTransport","dtlsTransport"].forEach(function(i){e[i]&&t.push(e[i].getStats())})});var e=arguments.length>1&&"function"==typeof arguments[1]&&arguments[1],i=function(t){return{lP:"inbound-rtp",dP:"outbound-rtp",fP:"candidate-pair",dO:"local-candidate",fO:"remote-candidate"}[t.type]||t.type};return new Promise(function(r){var n=new Map;Promise.all(t).then(function(t){t.forEach(function(t){Object.keys(t).forEach(function(e){t[e].type=i(t[e]),n.set(e,t[e])})}),e&&window.setTimeout(e,0,n),r(n)})})}}};t.t={XC:a.XC,ZC:i(69)}},function(t,e){"use strict";t.t=function(){var t=function(t){return{name:{EO:"NotAllowedError"}[t.name]||t.name,message:t.message,RO:t.RO,toString:function(){return this.name}}},e=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(i){return e(i)["catch"](function(e){return Promise.reject(t(e))})}}},function(t,e,i){"use strict";var r=i(3).ri,n={iO:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this.nO},set:function(t){this.nO&&(this.removeEventListener("track",this.nO),this.removeEventListener("addstream",this.oO)),this.addEventListener("track",this.nO=t),this.addEventListener("addstream",this.oO=function(t){t.stream.getTracks().forEach(function(e){var i=new Event("track");i.track=e,i.receiver={track:e},i.sO=[t.stream],this.dispatchEvent(i)}.bind(this))}.bind(this))}})},eO:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this.mozSrcObject},set:function(t){this.mozSrcObject=t}}))},XC:function(){if("object"==typeof window&&(window.RTCPeerConnection||window.mozRTCPeerConnection)){window.RTCPeerConnection||(window.RTCPeerConnection=function(t,e){if(r.version<38&&t&&t.iceServers){for(var i=[],n=0;n<t.iceServers.length;n++){var o=t.iceServers[n];if(o.hasOwnProperty("urls"))for(var s=0;s<o.PO.length;s++){var a={url:o.PO[s]};0===o.PO[s].indexOf("turn")&&(a.username=o.username,a.gP=o.gP),i.push(a)}else i.push(t.iceServers[n])}t.iceServers=i}return new mozRTCPeerConnection(t,e)},window.RTCPeerConnection.prototype=mozRTCPeerConnection.prototype,mozRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return mozRTCPeerConnection.generateCertificate}}),window.RTCSessionDescription=mozRTCSessionDescription,window.RTCIceCandidate=mozRTCIceCandidate),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(t){var e=RTCPeerConnection.prototype[t];RTCPeerConnection.prototype[t]=function(){return arguments[0]=new("addIceCandidate"===t?RTCIceCandidate:RTCSessionDescription)(arguments[0]),e.apply(this,arguments)}});var t=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?t.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())};var e=function(t){var e=new Map;return Object.keys(t).forEach(function(i){e.set(i,t[i]),e[i]=t[i]}),e},i={lP:"inbound-rtp",dP:"outbound-rtp",fP:"candidate-pair",dO:"local-candidate",fO:"remote-candidate"},n=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(t,o,s){return n.apply(this,[t||null]).then(function(t){if(r.version<48&&(t=e(t)),r.version<53&&!o)try{t.forEach(function(t){t.type=i[t.type]||t.type})}catch(n){if("TypeError"!==n.name)throw n;t.forEach(function(e,r){t.set(r,Object.assign({},e,{type:i[e.type]||e.type}))})}return t}).then(o,s)}}}};t.t={iO:n.iO,eO:n.eO,XC:n.XC,ZC:i(71)}},function(t,e,i){"use strict";var r=i(3).log,n=i(3).ri;t.t=function(){var t=function(t){return{name:{vP:"NotAllowedError",EO:"NotAllowedError"}[t.name]||t.name,message:{"The operation is insecure.":"The request is not allowed by the user agent or the platform in the current context."}[t.message]||t.message,RO:t.RO,toString:function(){return this.name+(this.message&&": ")+this.message}}},e=function(e,i,o){var s=function(t){if("object"!=typeof t||t.yP)return t;var e=[];return Object.keys(t).forEach(function(i){if("require"!==i&&"advanced"!==i&&"mediaSource"!==i){var r=t[i]="object"==typeof t[i]?t[i]:{vO:t[i]};if(void 0===r.min&&void 0===r.max&&void 0===r.yO||e.push(i),void 0!==r.yO&&("number"==typeof r.yO?r.min=r.max=r.yO:t[i]=r.yO,delete r.yO),void 0!==r.vO){t.mO=t.mO||[];var n={};"number"==typeof r.vO?n[i]={min:r.vO,max:r.vO}:n[i]=r.vO,t.mO.push(n),delete r.vO,Object.keys(r).length||delete t[i]}}}),e.length&&(t.yP=e),t};return e=JSON.parse(JSON.stringify(e)),n.version<38&&(r("spec: "+JSON.stringify(e)),e.Mp&&(e.Mp=s(e.Mp)),e.video&&(e.video=s(e.video)),r("ff37: "+JSON.stringify(e))),navigator.mozGetUserMedia(e,i,function(e){o(t(e))})},i=function(t){return new Promise(function(i,r){e(t,i,r)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:i,addEventListener:function(){},removeEventListener:function(){}}),navigator.mediaDevices.SO=navigator.mediaDevices.SO||function(){return new Promise(function(t){var e=[{kind:"audioinput",bO:"default",label:"",kO:""},{kind:"videoinput",bO:"default",label:"",kO:""}];t(e)})},n.version<41){var o=navigator.mediaDevices.SO.bind(navigator.mediaDevices);navigator.mediaDevices.SO=function(){return o().then(void 0,function(t){if("NotFoundError"===t.name)return[];throw t})}}if(n.version<49){var s=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(e){return s(e).then(function(t){if(e.Mp&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(t){t.stop()}),new DOMException("The object can not be found here.","NotFoundError");return t},function(e){return Promise.reject(t(e))})}}navigator.getUserMedia=function(t,i,r){return n.version<44?e(t,i,r):(console.warn("navigator.getUserMedia has been replaced by navigator.mediaDevices.getUserMedia"),void navigator.mediaDevices.getUserMedia(t).then(i,r))}}},function(t,e){"use strict";var i={ZC:function(){navigator.getUserMedia||(navigator.webkitGetUserMedia?navigator.getUserMedia=navigator.webkitGetUserMedia.bind(navigator):navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&(navigator.getUserMedia=function(t,e,i){navigator.mediaDevices.getUserMedia(t).then(e,i)}.bind(navigator)))}};t.t={ZC:i.ZC}}]);

//# sourceMappingURL=bitmovin.hive.min.js.map


/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,