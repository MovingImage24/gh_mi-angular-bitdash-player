/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 66);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var arrayutils_1 = __webpack_require__(11);
/**
 * A container component that can contain a collection of child components.
 * Components can be added at construction time through the {@link ContainerConfig#components} setting, or later
 * through the {@link Container#addComponent} method. The UIManager automatically takes care of all components, i.e. it
 * initializes and configures them automatically.
 *
 * In the DOM, the container consists of an outer <div> (that can be configured by the config) and an inner wrapper
 * <div> that contains the components. This double-<div>-structure is often required to achieve many advanced effects
 * in CSS and/or JS, e.g. animations and certain formatting with absolute positioning.
 *
 * DOM example:
 * <code>
 *     <div class='ui-container'>
 *         <div class='container-wrapper'>
 *             ... child components ...
 *         </div>
 *     </div>
 * </code>
 */
var Container = (function (_super) {
    __extends(Container, _super);
    function Container(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-container',
            components: [],
        }, _this.config);
        _this.componentsToAdd = [];
        _this.componentsToRemove = [];
        return _this;
    }
    /**
     * Adds a child component to the container.
     * @param component the component to add
     */
    Container.prototype.addComponent = function (component) {
        this.config.components.push(component);
        this.componentsToAdd.push(component);
    };
    /**
     * Removes a child component from the container.
     * @param component the component to remove
     * @returns {boolean} true if the component has been removed, false if it is not contained in this container
     */
    Container.prototype.removeComponent = function (component) {
        if (arrayutils_1.ArrayUtils.remove(this.config.components, component) != null) {
            this.componentsToRemove.push(component);
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * Gets an array of all child components in this container.
     * @returns {Component<ComponentConfig>[]}
     */
    Container.prototype.getComponents = function () {
        return this.config.components;
    };
    /**
     * Removes all child components from the container.
     */
    Container.prototype.removeComponents = function () {
        for (var _i = 0, _a = this.getComponents().slice(); _i < _a.length; _i++) {
            var component = _a[_i];
            this.removeComponent(component);
        }
    };
    /**
     * Updates the DOM of the container with the current components.
     */
    Container.prototype.updateComponents = function () {
        /* We cannot just clear the container to remove all elements and then re-add those that should stay, because
         * IE looses the innerHTML of unattached elements, leading to empty elements within the container (e.g. missing
         * subtitle text in SubtitleLabel).
         * Instead, we keep a list of elements to add and remove, leaving remaining elements alone. By keeping them in
         * the DOM, their content gets preserved in all browsers.
         */
        var component;
        while (component = this.componentsToRemove.shift()) {
            component.getDomElement().remove();
        }
        while (component = this.componentsToAdd.shift()) {
            this.innerContainerElement.append(component.getDomElement());
        }
    };
    Container.prototype.toDomElement = function () {
        // Create the container element (the outer <div>)
        var containerElement = new dom_1.DOM(this.config.tag, {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        // Create the inner container element (the inner <div>) that will contain the components
        var innerContainer = new dom_1.DOM(this.config.tag, {
            'class': this.prefixCss('container-wrapper'),
        });
        this.innerContainerElement = innerContainer;
        for (var _i = 0, _a = this.config.components; _i < _a.length; _i++) {
            var initialComponent = _a[_i];
            this.componentsToAdd.push(initialComponent);
        }
        this.updateComponents();
        containerElement.append(innerContainer);
        return containerElement;
    };
    return Container;
}(component_1.Component));
exports.Container = Container;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Simple DOM manipulation and DOM element event handling modeled after jQuery (as replacement for jQuery).
 *
 * Like jQuery, DOM operates on single elements and lists of elements. For example: creating an element returns a DOM
 * instance with a single element, selecting elements returns a DOM instance with zero, one, or many elements. Similar
 * to jQuery, setters usually affect all elements, while getters operate on only the first element.
 * Also similar to jQuery, most methods (except getters) return the DOM instance facilitating easy chaining of method
 * calls.
 *
 * Built with the help of: http://youmightnotneedjquery.com/
 */
var DOM = (function () {
    function DOM(something, attributes) {
        this.document = document; // Set the global document to the local document field
        if (something instanceof Array) {
            if (something.length > 0 && something[0] instanceof HTMLElement) {
                var elements = something;
                this.elements = elements;
            }
        }
        else if (something instanceof HTMLElement) {
            var element = something;
            this.elements = [element];
        }
        else if (something instanceof Document) {
            // When a document is passed in, we do not do anything with it, but by setting this.elements to null
            // we give the event handling method a means to detect if the events should be registered on the document
            // instead of elements.
            this.elements = null;
        }
        else if (attributes) {
            var tagName = something;
            var element = document.createElement(tagName);
            for (var attributeName in attributes) {
                var attributeValue = attributes[attributeName];
                element.setAttribute(attributeName, attributeValue);
            }
            this.elements = [element];
        }
        else {
            var selector = something;
            this.elements = this.findChildElements(selector);
        }
    }
    Object.defineProperty(DOM.prototype, "length", {
        /**
         * Gets the number of elements that this DOM instance currently holds.
         * @returns {number} the number of elements
         */
        get: function () {
            return this.elements ? this.elements.length : 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the HTML elements that this DOM instance currently holds.
     * @returns {HTMLElement[]} the raw HTML elements
     * @deprecated use {@link #get()} instead
     */
    DOM.prototype.getElements = function () {
        return this.get();
    };
    DOM.prototype.get = function (index) {
        if (index === undefined) {
            return this.elements;
        }
        else if (!this.elements || index >= this.elements.length || index < -this.elements.length) {
            return undefined;
        }
        else if (index < 0) {
            return this.elements[this.elements.length - index];
        }
        else {
            return this.elements[index];
        }
    };
    /**
     * A shortcut method for iterating all elements. Shorts this.elements.forEach(...) to this.forEach(...).
     * @param handler the handler to execute an operation on an element
     */
    DOM.prototype.forEach = function (handler) {
        if (!this.elements) {
            return;
        }
        this.elements.forEach(function (element) {
            handler(element);
        });
    };
    DOM.prototype.findChildElementsOfElement = function (element, selector) {
        var childElements = element.querySelectorAll(selector);
        // Convert NodeList to Array
        // https://toddmotto.com/a-comprehensive-dive-into-nodelists-arrays-converting-nodelists-and-understanding-the-dom/
        return [].slice.call(childElements);
    };
    DOM.prototype.findChildElements = function (selector) {
        var _this = this;
        var allChildElements = [];
        if (this.elements) {
            this.forEach(function (element) {
                allChildElements = allChildElements.concat(_this.findChildElementsOfElement(element, selector));
            });
        }
        else {
            return this.findChildElementsOfElement(document, selector);
        }
        return allChildElements;
    };
    /**
     * Finds all child elements of all elements matching the supplied selector.
     * @param selector the selector to match with child elements
     * @returns {DOM} a new DOM instance representing all matched children
     */
    DOM.prototype.find = function (selector) {
        var allChildElements = this.findChildElements(selector);
        return new DOM(allChildElements);
    };
    DOM.prototype.html = function (content) {
        if (arguments.length > 0) {
            return this.setHtml(content);
        }
        else {
            return this.getHtml();
        }
    };
    DOM.prototype.getHtml = function () {
        return this.elements[0].innerHTML;
    };
    DOM.prototype.setHtml = function (content) {
        if (content === undefined || content == null) {
            // Set to empty string to avoid innerHTML getting set to 'undefined' (all browsers) or 'null' (IE9)
            content = '';
        }
        this.forEach(function (element) {
            element.innerHTML = content;
        });
        return this;
    };
    /**
     * Clears the inner HTML of all elements (deletes all children).
     * @returns {DOM}
     */
    DOM.prototype.empty = function () {
        this.forEach(function (element) {
            element.innerHTML = '';
        });
        return this;
    };
    /**
     * Returns the current value of the first form element, e.g. the selected value of a select box or the text if an
     * input field.
     * @returns {string} the value of a form element
     */
    DOM.prototype.val = function () {
        var element = this.elements[0];
        if (element instanceof HTMLSelectElement || element instanceof HTMLInputElement) {
            return element.value;
        }
        else {
            // TODO add support for missing form elements
            throw new Error("val() not supported for " + typeof element);
        }
    };
    DOM.prototype.attr = function (attribute, value) {
        if (arguments.length > 1) {
            return this.setAttr(attribute, value);
        }
        else {
            return this.getAttr(attribute);
        }
    };
    DOM.prototype.getAttr = function (attribute) {
        return this.elements[0].getAttribute(attribute);
    };
    DOM.prototype.setAttr = function (attribute, value) {
        this.forEach(function (element) {
            element.setAttribute(attribute, value);
        });
        return this;
    };
    DOM.prototype.data = function (dataAttribute, value) {
        if (arguments.length > 1) {
            return this.setData(dataAttribute, value);
        }
        else {
            return this.getData(dataAttribute);
        }
    };
    DOM.prototype.getData = function (dataAttribute) {
        return this.elements[0].getAttribute('data-' + dataAttribute);
    };
    DOM.prototype.setData = function (dataAttribute, value) {
        this.forEach(function (element) {
            element.setAttribute('data-' + dataAttribute, value);
        });
        return this;
    };
    /**
     * Appends one or more DOM elements as children to all elements.
     * @param childElements the chrild elements to append
     * @returns {DOM}
     */
    DOM.prototype.append = function () {
        var childElements = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            childElements[_i] = arguments[_i];
        }
        this.forEach(function (element) {
            childElements.forEach(function (childElement) {
                childElement.elements.forEach(function (_, index) {
                    element.appendChild(childElement.elements[index]);
                });
            });
        });
        return this;
    };
    /**
     * Removes all elements from the DOM.
     */
    DOM.prototype.remove = function () {
        this.forEach(function (element) {
            var parent = element.parentNode;
            if (parent) {
                parent.removeChild(element);
            }
        });
    };
    /**
     * Returns the offset of the first element from the document's top left corner.
     * @returns {Offset}
     */
    DOM.prototype.offset = function () {
        var element = this.elements[0];
        var elementRect = element.getBoundingClientRect();
        var htmlRect = document.body.parentElement.getBoundingClientRect();
        // Virtual viewport scroll handling (e.g. pinch zoomed viewports in mobile browsers or desktop Chrome/Edge)
        // 'normal' zooms and virtual viewport zooms (aka layout viewport) result in different
        // element.getBoundingClientRect() results:
        //  - with normal scrolls, the clientRect decreases with an increase in scroll(Top|Left)/page(X|Y)Offset
        //  - with pinch zoom scrolls, the clientRect stays the same while scroll/pageOffset changes
        // This means, that the combination of clientRect + scroll/pageOffset does not work to calculate the offset
        // from the document's upper left origin when pinch zoom is used.
        // To work around this issue, we do not use scroll/pageOffset but get the clientRect of the html element and
        // subtract it from the element's rect, which always results in the offset from the document origin.
        // NOTE: the current way of offset calculation was implemented specifically to track event positions on the
        // seek bar, and it might break compatibility with jQuery's offset() method. If this ever turns out to be a
        // problem, this method should be reverted to the old version and the offset calculation moved to the seek bar.
        return {
            top: elementRect.top - htmlRect.top,
            left: elementRect.left - htmlRect.left,
        };
    };
    /**
     * Returns the width of the first element.
     * @returns {number} the width of the first element
     */
    DOM.prototype.width = function () {
        // TODO check if this is the same as jQuery's width() (probably not)
        return this.elements[0].offsetWidth;
    };
    /**
     * Returns the height of the first element.
     * @returns {number} the height of the first element
     */
    DOM.prototype.height = function () {
        // TODO check if this is the same as jQuery's height() (probably not)
        return this.elements[0].offsetHeight;
    };
    /**
     * Attaches an event handler to one or more events on all elements.
     * @param eventName the event name (or multiple names separated by space) to listen to
     * @param eventHandler the event handler to call when the event fires
     * @returns {DOM}
     */
    DOM.prototype.on = function (eventName, eventHandler) {
        var _this = this;
        var events = eventName.split(' ');
        events.forEach(function (event) {
            if (_this.elements == null) {
                _this.document.addEventListener(event, eventHandler);
            }
            else {
                _this.forEach(function (element) {
                    element.addEventListener(event, eventHandler);
                });
            }
        });
        return this;
    };
    /**
     * Removes an event handler from one or more events on all elements.
     * @param eventName the event name (or multiple names separated by space) to remove the handler from
     * @param eventHandler the event handler to remove
     * @returns {DOM}
     */
    DOM.prototype.off = function (eventName, eventHandler) {
        var _this = this;
        var events = eventName.split(' ');
        events.forEach(function (event) {
            if (_this.elements == null) {
                _this.document.removeEventListener(event, eventHandler);
            }
            else {
                _this.forEach(function (element) {
                    element.removeEventListener(event, eventHandler);
                });
            }
        });
        return this;
    };
    /**
     * Adds the specified class(es) to all elements.
     * @param className the class(es) to add, multiple classes separated by space
     * @returns {DOM}
     */
    DOM.prototype.addClass = function (className) {
        this.forEach(function (element) {
            if (element.classList) {
                var classNames = className.split(' ')
                    .filter(function (className) { return className.length > 0; });
                if (classNames.length > 0) {
                    (_a = element.classList).add.apply(_a, classNames);
                }
            }
            else {
                element.className += ' ' + className;
            }
            var _a;
        });
        return this;
    };
    /**
     * Removed the specified class(es) from all elements.
     * @param className the class(es) to remove, multiple classes separated by space
     * @returns {DOM}
     */
    DOM.prototype.removeClass = function (className) {
        this.forEach(function (element) {
            if (element.classList) {
                var classNames = className.split(' ')
                    .filter(function (className) { return className.length > 0; });
                if (classNames.length > 0) {
                    (_a = element.classList).remove.apply(_a, classNames);
                }
            }
            else {
                element.className = element.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
            }
            var _a;
        });
        return this;
    };
    /**
     * Checks if any of the elements has the specified class.
     * @param className the class name to check
     * @returns {boolean} true if one of the elements has the class attached, else if no element has it attached
     */
    DOM.prototype.hasClass = function (className) {
        var hasClass = false;
        this.forEach(function (element) {
            if (element.classList) {
                if (element.classList.contains(className)) {
                    // Since we are inside a handler, we can't just 'return true'. Instead, we save it to a variable
                    // and return it at the end of the function body.
                    hasClass = true;
                }
            }
            else {
                if (new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className)) {
                    // See comment above
                    hasClass = true;
                }
            }
        });
        return hasClass;
    };
    DOM.prototype.css = function (propertyNameOrCollection, value) {
        if (typeof propertyNameOrCollection === 'string') {
            var propertyName = propertyNameOrCollection;
            if (arguments.length === 2) {
                return this.setCss(propertyName, value);
            }
            else {
                return this.getCss(propertyName);
            }
        }
        else {
            var propertyValueCollection = propertyNameOrCollection;
            return this.setCssCollection(propertyValueCollection);
        }
    };
    DOM.prototype.getCss = function (propertyName) {
        return getComputedStyle(this.elements[0])[propertyName];
    };
    DOM.prototype.setCss = function (propertyName, value) {
        this.forEach(function (element) {
            // <any> cast to resolve TS7015: http://stackoverflow.com/a/36627114/370252
            element.style[propertyName] = value;
        });
        return this;
    };
    DOM.prototype.setCssCollection = function (ruleValueCollection) {
        this.forEach(function (element) {
            // http://stackoverflow.com/a/34490573/370252
            Object.assign(element.style, ruleValueCollection);
        });
        return this;
    };
    return DOM;
}());
exports.DOM = DOM;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var guid_1 = __webpack_require__(72);
var dom_1 = __webpack_require__(1);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * The base class of the UI framework.
 * Each component must extend this class and optionally the config interface.
 */
var Component = (function () {
    /**
     * Constructs a component with an optionally supplied config. All subclasses must call the constructor of their
     * superclass and then merge their configuration into the component's configuration.
     * @param config the configuration for the component
     */
    function Component(config) {
        if (config === void 0) { config = {}; }
        /**
         * The list of events that this component offers. These events should always be private and only directly
         * accessed from within the implementing component.
         *
         * Because TypeScript does not support private properties with the same name on different class hierarchy levels
         * (i.e. superclass and subclass cannot contain a private property with the same name), the default naming
         * convention for the event list of a component that should be followed by subclasses is the concatenation of the
         * camel-cased class name + 'Events' (e.g. SubClass extends Component => subClassEvents).
         * See {@link #componentEvents} for an example.
         *
         * Event properties should be named in camel case with an 'on' prefix and in the present tense. Async events may
         * have a start event (when the operation starts) in the present tense, and must have an end event (when the
         * operation ends) in the past tense (or present tense in special cases (e.g. onStart/onStarted or onPlay/onPlaying).
         * See {@link #componentEvents#onShow} for an example.
         *
         * Each event should be accompanied with a protected method named by the convention eventName + 'Event'
         * (e.g. onStartEvent), that actually triggers the event by calling {@link EventDispatcher#dispatch dispatch} and
         * passing a reference to the component as first parameter. Components should always trigger their events with these
         * methods. Implementing this pattern gives subclasses means to directly listen to the events by overriding the
         * method (and saving the overhead of passing a handler to the event dispatcher) and more importantly to trigger
         * these events without having access to the private event list.
         * See {@link #onShow} for an example.
         *
         * To provide external code the possibility to listen to this component's events (subscribe, unsubscribe, etc.),
         * each event should also be accompanied by a public getter function with the same name as the event's property,
         * that returns the {@link Event} obtained from the event dispatcher by calling {@link EventDispatcher#getEvent}.
         * See {@link #onShow} for an example.
         *
         * Full example for an event representing an example action in a example component:
         *
         * <code>
         * // Define an example component class with an example event
         * class ExampleComponent extends Component<ComponentConfig> {
           *
           *     private exampleComponentEvents = {
           *         onExampleAction: new EventDispatcher<ExampleComponent, NoArgs>()
           *     }
           *
           *     // constructor and other stuff...
           *
           *     protected onExampleActionEvent() {
           *        this.exampleComponentEvents.onExampleAction.dispatch(this);
           *    }
           *
           *    get onExampleAction(): Event<ExampleComponent, NoArgs> {
           *        return this.exampleComponentEvents.onExampleAction.getEvent();
           *    }
           * }
         *
         * // Create an instance of the component somewhere
         * var exampleComponentInstance = new ExampleComponent();
         *
         * // Subscribe to the example event on the component
         * exampleComponentInstance.onExampleAction.subscribe(function (sender: ExampleComponent) {
           *     console.log('onExampleAction of ' + sender + ' has fired!');
           * });
         * </code>
         */
        this.componentEvents = {
            onShow: new eventdispatcher_1.EventDispatcher(),
            onHide: new eventdispatcher_1.EventDispatcher(),
            onHoverChanged: new eventdispatcher_1.EventDispatcher(),
        };
        // Create the configuration for this component
        this.config = this.mergeConfig(config, {
            tag: 'div',
            id: 'mi-wbc-id-' + guid_1.Guid.next(),
            cssPrefix: 'mi-wbc',
            cssClass: 'ui-component',
            cssClasses: [],
            hidden: false,
        }, {});
    }
    /**
     * Initializes the component, e.g. by applying config settings.
     * This method must not be called from outside the UI framework.
     *
     * This method is automatically called by the {@link UIInstanceManager}. If the component is an inner component of
     * some component, and thus encapsulated abd managed internally and never directly exposed to the UIManager,
     * this method must be called from the managing component's {@link #initialize} method.
     */
    Component.prototype.initialize = function () {
        this.hidden = this.config.hidden;
        // Hide the component at initialization if it is configured to be hidden
        if (this.isHidden()) {
            this.hidden = false; // Set flag to false for the following hide() call to work (hide() checks the flag)
            this.hide();
        }
    };
    /**
     * Configures the component for the supplied Player and UIInstanceManager. This is the place where all the magic
     * happens, where components typically subscribe and react to events (on their DOM element, the Player, or the
     * UIInstanceManager), and basically everything that makes them interactive.
     * This method is called only once, when the UIManager initializes the UI.
     *
     * Subclasses usually overwrite this method to add their own functionality.
     *
     * @param player the player which this component controls
     * @param uimanager the UIInstanceManager that manages this component
     */
    Component.prototype.configure = function (player, uimanager) {
        var _this = this;
        this.onShow.subscribe(function () {
            uimanager.onComponentShow.dispatch(_this);
        });
        this.onHide.subscribe(function () {
            uimanager.onComponentHide.dispatch(_this);
        });
        // Track the hovered state of the element
        this.getDomElement().on('mouseenter', function () {
            _this.onHoverChangedEvent(true);
        });
        this.getDomElement().on('mouseleave', function () {
            _this.onHoverChangedEvent(false);
        });
    };
    /**
     * Releases all resources and dependencies that the component holds. Player, DOM, and UIManager events are
     * automatically removed during release and do not explicitly need to be removed here.
     * This method is called by the UIManager when it releases the UI.
     *
     * Subclasses that need to release resources should override this method and call super.release().
     */
    Component.prototype.release = function () {
        // Nothing to do here, override where necessary
    };
    /**
     * Generate the DOM element for this component.
     *
     * Subclasses usually overwrite this method to extend or replace the DOM element with their own design.
     */
    Component.prototype.toDomElement = function () {
        var element = new dom_1.DOM(this.config.tag, {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        return element;
    };
    /**
     * Returns the DOM element of this component. Creates the DOM element if it does not yet exist.
     *
     * Should not be overwritten by subclasses.
     *
     * @returns {DOM}
     */
    Component.prototype.getDomElement = function () {
        if (!this.element) {
            this.element = this.toDomElement();
        }
        return this.element;
    };
    /**
     * Merges a configuration with a default configuration and a base configuration from the superclass.
     *
     * @param config the configuration settings for the components, as usually passed to the constructor
     * @param defaults a default configuration for settings that are not passed with the configuration
     * @param base configuration inherited from a superclass
     * @returns {Config}
     */
    Component.prototype.mergeConfig = function (config, defaults, base) {
        // Extend default config with supplied config
        var merged = Object.assign({}, base, defaults, config);
        // Return the extended config
        return merged;
    };
    /**
     * Helper method that returns a string of all CSS classes of the component.
     *
     * @returns {string}
     */
    Component.prototype.getCssClasses = function () {
        var _this = this;
        // Merge all CSS classes into single array
        var flattenedArray = [this.config.cssClass].concat(this.config.cssClasses);
        // Prefix classes
        flattenedArray = flattenedArray.map(function (css) {
            return _this.prefixCss(css);
        });
        // Join array values into a string
        var flattenedString = flattenedArray.join(' ');
        // Return trimmed string to prevent whitespace at the end from the join operation
        return flattenedString.trim();
    };
    Component.prototype.prefixCss = function (cssClassOrId) {
        return this.config.cssPrefix + '-' + cssClassOrId;
    };
    /**
     * Returns the configuration object of the component.
     * @returns {Config}
     */
    Component.prototype.getConfig = function () {
        return this.config;
    };
    /**
     * Hides the component if shown.
     * This method basically transfers the component into the hidden state. Actual hiding is done via CSS.
     */
    Component.prototype.hide = function () {
        if (!this.hidden) {
            this.hidden = true;
            this.getDomElement().addClass(this.prefixCss(Component.CLASS_HIDDEN));
            this.onHideEvent();
        }
    };
    /**
     * Shows the component if hidden.
     */
    Component.prototype.show = function () {
        if (this.hidden) {
            this.getDomElement().removeClass(this.prefixCss(Component.CLASS_HIDDEN));
            this.hidden = false;
            this.onShowEvent();
        }
    };
    /**
     * Determines if the component is hidden.
     * @returns {boolean} true if the component is hidden, else false
     */
    Component.prototype.isHidden = function () {
        return this.hidden;
    };
    /**
     * Determines if the component is shown.
     * @returns {boolean} true if the component is visible, else false
     */
    Component.prototype.isShown = function () {
        return !this.isHidden();
    };
    /**
     * Toggles the hidden state by hiding the component if it is shown, or showing it if hidden.
     */
    Component.prototype.toggleHidden = function () {
        if (this.isHidden()) {
            this.show();
        }
        else {
            this.hide();
        }
    };
    /**
     * Determines if the component is currently hovered.
     * @returns {boolean} true if the component is hovered, else false
     */
    Component.prototype.isHovered = function () {
        return this.hovered;
    };
    /**
     * Fires the onShow event.
     * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
     */
    Component.prototype.onShowEvent = function () {
        this.componentEvents.onShow.dispatch(this);
    };
    /**
     * Fires the onHide event.
     * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
     */
    Component.prototype.onHideEvent = function () {
        this.componentEvents.onHide.dispatch(this);
    };
    /**
     * Fires the onHoverChanged event.
     * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
     */
    Component.prototype.onHoverChangedEvent = function (hovered) {
        this.hovered = hovered;
        this.componentEvents.onHoverChanged.dispatch(this, { hovered: hovered });
    };
    Object.defineProperty(Component.prototype, "onShow", {
        /**
         * Gets the event that is fired when the component is showing.
         * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
         * @returns {Event<Component<Config>, NoArgs>}
         */
        get: function () {
            return this.componentEvents.onShow.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "onHide", {
        /**
         * Gets the event that is fired when the component is hiding.
         * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
         * @returns {Event<Component<Config>, NoArgs>}
         */
        get: function () {
            return this.componentEvents.onHide.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "onHoverChanged", {
        /**
         * Gets the event that is fired when the component's hover-state is changing.
         * @returns {Event<Component<Config>, ComponentHoverChangedEventArgs>}
         */
        get: function () {
            return this.componentEvents.onHoverChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return Component;
}());
/**
 * The classname that is attached to the element when it is in the hidden state.
 * @type {string}
 */
Component.CLASS_HIDDEN = 'hidden';
exports.Component = Component;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var arrayutils_1 = __webpack_require__(11);
/**
 * Event dispatcher to subscribe and trigger events. Each event should have its own dispatcher.
 */
var EventDispatcher = (function () {
    function EventDispatcher() {
        this.listeners = [];
    }
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.subscribe = function (listener) {
        this.listeners.push(new EventListenerWrapper(listener));
    };
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.subscribeOnce = function (listener) {
        this.listeners.push(new EventListenerWrapper(listener, true));
    };
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.subscribeRateLimited = function (listener, rateMs) {
        this.listeners.push(new RateLimitedEventListenerWrapper(listener, rateMs));
    };
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.unsubscribe = function (listener) {
        // Iterate through listeners, compare with parameter, and remove if found
        // NOTE: In case we ever remove all matching listeners instead of just the first, we need to reverse-iterate here
        for (var i = 0; i < this.listeners.length; i++) {
            var subscribedListener = this.listeners[i];
            if (subscribedListener.listener === listener) {
                arrayutils_1.ArrayUtils.remove(this.listeners, subscribedListener);
                return true;
            }
        }
        return false;
    };
    /**
     * Removes all listeners from this dispatcher.
     */
    EventDispatcher.prototype.unsubscribeAll = function () {
        this.listeners = [];
    };
    /**
     * Dispatches an event to all subscribed listeners.
     * @param sender the source of the event
     * @param args the arguments for the event
     */
    EventDispatcher.prototype.dispatch = function (sender, args) {
        if (args === void 0) { args = null; }
        var listenersToRemove = [];
        // Call every listener
        // We iterate over a copy of the array of listeners to avoid the case where events are not fired on listeners when
        // listeners are unsubscribed from within the event handlers during a dispatch (because the indices change and
        // listeners are shifted within the array).
        // This means that listener x+1 will still be called if unsubscribed from within the handler of listener x, as well
        // as listener y+1 will not be called when subscribed from within the handler of listener y.
        // Array.slice(0) is the fastest array copy method according to: https://stackoverflow.com/a/21514254/370252
        var listeners = this.listeners.slice(0);
        for (var _i = 0, listeners_1 = listeners; _i < listeners_1.length; _i++) {
            var listener = listeners_1[_i];
            listener.fire(sender, args);
            if (listener.isOnce()) {
                listenersToRemove.push(listener);
            }
        }
        // Remove one-time listener
        for (var _a = 0, listenersToRemove_1 = listenersToRemove; _a < listenersToRemove_1.length; _a++) {
            var listenerToRemove = listenersToRemove_1[_a];
            arrayutils_1.ArrayUtils.remove(this.listeners, listenerToRemove);
        }
    };
    /**
     * Returns the event that this dispatcher manages and on which listeners can subscribe and unsubscribe event handlers.
     * @returns {Event}
     */
    EventDispatcher.prototype.getEvent = function () {
        // For now, just cast the event dispatcher to the event interface. At some point in the future when the
        // codebase grows, it might make sense to split the dispatcher into separate dispatcher and event classes.
        return this;
    };
    return EventDispatcher;
}());
exports.EventDispatcher = EventDispatcher;
/**
 * A basic event listener wrapper to manage listeners within the {@link EventDispatcher}. This is a 'private' class
 * for internal dispatcher use and it is therefore not exported.
 */
var EventListenerWrapper = (function () {
    function EventListenerWrapper(listener, once) {
        if (once === void 0) { once = false; }
        this.eventListener = listener;
        this.once = once;
    }
    Object.defineProperty(EventListenerWrapper.prototype, "listener", {
        /**
         * Returns the wrapped event listener.
         * @returns {EventListener<Sender, Args>}
         */
        get: function () {
            return this.eventListener;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Fires the wrapped event listener with the given arguments.
     * @param sender
     * @param args
     */
    EventListenerWrapper.prototype.fire = function (sender, args) {
        this.eventListener(sender, args);
    };
    /**
     * Checks if this listener is scheduled to be called only once.
     * @returns {boolean} once if true
     */
    EventListenerWrapper.prototype.isOnce = function () {
        return this.once;
    };
    return EventListenerWrapper;
}());
/**
 * Extends the basic {@link EventListenerWrapper} with rate-limiting functionality.
 */
var RateLimitedEventListenerWrapper = (function (_super) {
    __extends(RateLimitedEventListenerWrapper, _super);
    function RateLimitedEventListenerWrapper(listener, rateMs) {
        var _this = _super.call(this, listener) || this;
        _this.rateMs = rateMs;
        _this.lastFireTime = 0;
        // Wrap the event listener with an event listener that does the rate-limiting
        _this.rateLimitingEventListener = function (sender, args) {
            if (Date.now() - _this.lastFireTime > _this.rateMs) {
                // Only if enough time since the previous call has passed, call the
                // actual event listener and record the current time
                _this.fireSuper(sender, args);
                _this.lastFireTime = Date.now();
            }
        };
        return _this;
    }
    RateLimitedEventListenerWrapper.prototype.fireSuper = function (sender, args) {
        // Fire the actual external event listener
        _super.prototype.fire.call(this, sender, args);
    };
    RateLimitedEventListenerWrapper.prototype.fire = function (sender, args) {
        // Fire the internal rate-limiting listener instead of the external event listener
        this.rateLimitingEventListener(sender, args);
    };
    return RateLimitedEventListenerWrapper;
}(EventListenerWrapper));


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * Base class for all subtitles settings select box
 **/
var SubtitleSettingSelectBox = (function (_super) {
    __extends(SubtitleSettingSelectBox, _super);
    function SubtitleSettingSelectBox(config) {
        var _this = _super.call(this, config) || this;
        _this.settingsManager = config.settingsManager;
        _this.overlay = config.overlay;
        return _this;
    }
    /**
     * Removes a previously set class and adds the passed in class.
     * @param cssClass The new class to replace the previous class with or null to just remove the previous class
     */
    SubtitleSettingSelectBox.prototype.toggleOverlayClass = function (cssClass) {
        // Remove previous class if existing
        if (this.currentCssClass) {
            this.overlay.getDomElement().removeClass(this.currentCssClass);
            this.currentCssClass = null;
        }
        // Add new class if specified. If the new class is null, we don't add anything.
        if (cssClass) {
            this.currentCssClass = this.prefixCss(cssClass);
            this.overlay.getDomElement().addClass(this.currentCssClass);
        }
    };
    return SubtitleSettingSelectBox;
}(selectbox_1.SelectBox));
exports.SubtitleSettingSelectBox = SubtitleSettingSelectBox;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * A button that can be toggled between 'on' and 'off' states.
 */
var ToggleButton = (function (_super) {
    __extends(ToggleButton, _super);
    function ToggleButton(config) {
        var _this = _super.call(this, config) || this;
        _this.toggleButtonEvents = {
            onToggle: new eventdispatcher_1.EventDispatcher(),
            onToggleOn: new eventdispatcher_1.EventDispatcher(),
            onToggleOff: new eventdispatcher_1.EventDispatcher(),
        };
        var defaultConfig = {
            cssClass: 'ui-togglebutton',
            onClass: 'on',
            offClass: 'off',
        };
        _this.config = _this.mergeConfig(config, defaultConfig, _this.config);
        return _this;
    }
    ToggleButton.prototype.configure = function (player, uimanager) {
        var config = this.getConfig();
        this.getDomElement().addClass(this.prefixCss(config.offClass));
    };
    /**
     * Toggles the button to the 'on' state.
     */
    ToggleButton.prototype.on = function () {
        if (this.isOff()) {
            var config = this.getConfig();
            this.onState = true;
            this.getDomElement().removeClass(this.prefixCss(config.offClass));
            this.getDomElement().addClass(this.prefixCss(config.onClass));
            this.onToggleEvent();
            this.onToggleOnEvent();
        }
    };
    /**
     * Toggles the button to the 'off' state.
     */
    ToggleButton.prototype.off = function () {
        if (this.isOn()) {
            var config = this.getConfig();
            this.onState = false;
            this.getDomElement().removeClass(this.prefixCss(config.onClass));
            this.getDomElement().addClass(this.prefixCss(config.offClass));
            this.onToggleEvent();
            this.onToggleOffEvent();
        }
    };
    /**
     * Toggle the button 'on' if it is 'off', or 'off' if it is 'on'.
     */
    ToggleButton.prototype.toggle = function () {
        if (this.isOn()) {
            this.off();
        }
        else {
            this.on();
        }
    };
    /**
     * Checks if the toggle button is in the 'on' state.
     * @returns {boolean} true if button is 'on', false if 'off'
     */
    ToggleButton.prototype.isOn = function () {
        return this.onState;
    };
    /**
     * Checks if the toggle button is in the 'off' state.
     * @returns {boolean} true if button is 'off', false if 'on'
     */
    ToggleButton.prototype.isOff = function () {
        return !this.isOn();
    };
    ToggleButton.prototype.onClickEvent = function () {
        _super.prototype.onClickEvent.call(this);
        // Fire the toggle event together with the click event
        // (they are technically the same, only the semantics are different)
        this.onToggleEvent();
    };
    ToggleButton.prototype.onToggleEvent = function () {
        this.toggleButtonEvents.onToggle.dispatch(this);
    };
    ToggleButton.prototype.onToggleOnEvent = function () {
        this.toggleButtonEvents.onToggleOn.dispatch(this);
    };
    ToggleButton.prototype.onToggleOffEvent = function () {
        this.toggleButtonEvents.onToggleOff.dispatch(this);
    };
    Object.defineProperty(ToggleButton.prototype, "onToggle", {
        /**
         * Gets the event that is fired when the button is toggled.
         * @returns {Event<ToggleButton<Config>, NoArgs>}
         */
        get: function () {
            return this.toggleButtonEvents.onToggle.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToggleButton.prototype, "onToggleOn", {
        /**
         * Gets the event that is fired when the button is toggled 'on'.
         * @returns {Event<ToggleButton<Config>, NoArgs>}
         */
        get: function () {
            return this.toggleButtonEvents.onToggleOn.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToggleButton.prototype, "onToggleOff", {
        /**
         * Gets the event that is fired when the button is toggled 'off'.
         * @returns {Event<ToggleButton<Config>, NoArgs>}
         */
        get: function () {
            return this.toggleButtonEvents.onToggleOff.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return ToggleButton;
}(button_1.Button));
exports.ToggleButton = ToggleButton;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * A simple text label.
 *
 * DOM example:
 * <code>
 *     <span class='ui-label'>...some text...</span>
 * </code>
 */
var Label = (function (_super) {
    __extends(Label, _super);
    function Label(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.labelEvents = {
            onClick: new eventdispatcher_1.EventDispatcher(),
            onTextChanged: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-label',
        }, _this.config);
        _this.text = _this.config.text;
        return _this;
    }
    Label.prototype.toDomElement = function () {
        var _this = this;
        var labelElement = new dom_1.DOM('span', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        }).html(this.text);
        labelElement.on('click', function () {
            _this.onClickEvent();
        });
        return labelElement;
    };
    /**
     * Set the text on this label.
     * @param text
     */
    Label.prototype.setText = function (text) {
        this.text = text;
        this.getDomElement().html(text);
        this.onTextChangedEvent(text);
    };
    /**
     * Gets the text on this label.
     * @return {string} The text on the label
     */
    Label.prototype.getText = function () {
        return this.text;
    };
    /**
     * Clears the text on this label.
     */
    Label.prototype.clearText = function () {
        this.getDomElement().html('');
        this.onTextChangedEvent(null);
    };
    /**
     * Tests if the label is empty and does not contain any text.
     * @return {boolean} True if the label is empty, else false
     */
    Label.prototype.isEmpty = function () {
        return !this.text;
    };
    /**
     * Fires the {@link #onClick} event.
     * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method
     * and calling the super method.
     */
    Label.prototype.onClickEvent = function () {
        this.labelEvents.onClick.dispatch(this);
    };
    /**
     * Fires the {@link #onClick} event.
     * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method
     * and calling the super method.
     */
    Label.prototype.onTextChangedEvent = function (text) {
        this.labelEvents.onTextChanged.dispatch(this, text);
    };
    Object.defineProperty(Label.prototype, "onClick", {
        /**
         * Gets the event that is fired when the label is clicked.
         * @returns {Event<Label<LabelConfig>, NoArgs>}
         */
        get: function () {
            return this.labelEvents.onClick.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "onTextChanged", {
        /**
         * Gets the event that is fired when the text on the label is changed.
         * @returns {Event<Label<LabelConfig>, string>}
         */
        get: function () {
            return this.labelEvents.onTextChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return Label;
}(component_1.Component));
exports.Label = Label;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * A simple clickable button.
 */
var Button = (function (_super) {
    __extends(Button, _super);
    function Button(config) {
        var _this = _super.call(this, config) || this;
        _this.buttonEvents = {
            onClick: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-button',
        }, _this.config);
        return _this;
    }
    Button.prototype.toDomElement = function () {
        var _this = this;
        // Create the button element with the text label
        var buttonElement = new dom_1.DOM('button', {
            'type': 'button',
            'id': this.config.id,
            'class': this.getCssClasses(),
        }).append(new dom_1.DOM('span', {
            'class': this.prefixCss('label'),
        }).html(this.config.text));
        // Listen for the click event on the button element and trigger the corresponding event on the button component
        buttonElement.on('click', function () {
            _this.onClickEvent();
        });
        return buttonElement;
    };
    /**
     * Sets text on the label of the button.
     * @param text the text to put into the label of the button
     */
    Button.prototype.setText = function (text) {
        this.getDomElement().find('.' + this.prefixCss('label')).html(text);
    };
    Button.prototype.onClickEvent = function () {
        this.buttonEvents.onClick.dispatch(this);
    };
    Object.defineProperty(Button.prototype, "onClick", {
        /**
         * Gets the event that is fired when the button is clicked.
         * @returns {Event<Button<Config>, NoArgs>}
         */
        get: function () {
            return this.buttonEvents.onClick.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return Button;
}(component_1.Component));
exports.Button = Button;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var listselector_1 = __webpack_require__(33);
var dom_1 = __webpack_require__(1);
/**
 * A simple select box providing the possibility to select a single item out of a list of available items.
 *
 * DOM example:
 * <code>
 *     <select class='ui-selectbox'>
 *         <option value='key'>label</option>
 *         ...
 *     </select>
 * </code>
 */
var SelectBox = (function (_super) {
    __extends(SelectBox, _super);
    function SelectBox(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-selectbox',
        }, _this.config);
        return _this;
    }
    SelectBox.prototype.toDomElement = function () {
        var _this = this;
        var selectElement = new dom_1.DOM('select', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        this.selectElement = selectElement;
        this.updateDomItems();
        selectElement.on('change', function () {
            var value = selectElement.val();
            _this.onItemSelectedEvent(value, false);
        });
        return selectElement;
    };
    SelectBox.prototype.updateDomItems = function (selectedValue) {
        if (selectedValue === void 0) { selectedValue = null; }
        // Delete all children
        this.selectElement.empty();
        // Add updated children
        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
            var item = _a[_i];
            var optionElement = new dom_1.DOM('option', {
                'value': item.key,
            }).html(item.label);
            if (item.key === String(selectedValue)) {
                optionElement.attr('selected', 'selected');
            }
            this.selectElement.append(optionElement);
        }
    };
    SelectBox.prototype.onItemAddedEvent = function (value) {
        _super.prototype.onItemAddedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    SelectBox.prototype.onItemRemovedEvent = function (value) {
        _super.prototype.onItemRemovedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    SelectBox.prototype.onItemSelectedEvent = function (value, updateDomItems) {
        if (updateDomItems === void 0) { updateDomItems = true; }
        _super.prototype.onItemSelectedEvent.call(this, value);
        if (updateDomItems) {
            this.updateDomItems(value);
        }
    };
    return SelectBox;
}(listselector_1.ListSelector));
exports.SelectBox = SelectBox;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// TODO change to internal (not exported) class, how to use in other files?
/**
 * Executes a callback after a specified amount of time, optionally repeatedly until stopped.
 */
var Timeout = (function () {
    /**
     * Creates a new timeout callback handler.
     * @param delay the delay in milliseconds after which the callback should be executed
     * @param callback the callback to execute after the delay time
     * @param repeat if true, call the callback repeatedly in delay intervals
     */
    function Timeout(delay, callback, repeat) {
        if (repeat === void 0) { repeat = false; }
        this.delay = delay;
        this.callback = callback;
        this.repeat = repeat;
        this.timeoutHandle = 0;
    }
    /**
     * Starts the timeout and calls the callback when the timeout delay has passed.
     * @returns {Timeout} the current timeout (so the start call can be chained to the constructor)
     */
    Timeout.prototype.start = function () {
        this.reset();
        return this;
    };
    /**
     * Clears the timeout. The callback will not be called if clear is called during the timeout.
     */
    Timeout.prototype.clear = function () {
        this.clearInternal();
    };
    /**
     * Resets the passed timeout delay to zero. Can be used to defer the calling of the callback.
     */
    Timeout.prototype.reset = function () {
        var _this = this;
        var lastScheduleTime = 0;
        var delayAdjust = 0;
        this.clearInternal();
        var internalCallback = function () {
            _this.callback();
            if (_this.repeat) {
                var now = Date.now();
                // The time of one iteration from scheduling to executing the callback (usually a bit longer than the delay
                // time)
                var delta = now - lastScheduleTime;
                // Calculate the delay adjustment for the next schedule to keep a steady delay interval over time
                delayAdjust = _this.delay - delta + delayAdjust;
                lastScheduleTime = now;
                // Schedule next execution by the adjusted delay
                _this.timeoutHandle = setTimeout(internalCallback, _this.delay + delayAdjust);
            }
        };
        lastScheduleTime = Date.now();
        this.timeoutHandle = setTimeout(internalCallback, this.delay);
    };
    Timeout.prototype.clearInternal = function () {
        clearTimeout(this.timeoutHandle);
    };
    return Timeout;
}());
exports.Timeout = Timeout;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var StringUtils;
(function (StringUtils) {
    StringUtils.FORMAT_HHMMSS = 'hh:mm:ss';
    StringUtils.FORMAT_MMSS = 'mm:ss';
    /**
     * Formats a number of seconds into a time string with the pattern hh:mm:ss.
     *
     * @param totalSeconds the total number of seconds to format to string
     * @param format the time format to output (default: hh:mm:ss)
     * @returns {string} the formatted time string
     */
    function secondsToTime(totalSeconds, format) {
        if (format === void 0) { format = StringUtils.FORMAT_HHMMSS; }
        var isNegative = totalSeconds < 0;
        if (isNegative) {
            // If the time is negative, we make it positive for the calculation below
            // (else we'd get all negative numbers) and reattach the negative sign later.
            totalSeconds = -totalSeconds;
        }
        // Split into separate time parts
        var hours = Math.floor(totalSeconds / 3600);
        var minutes = Math.floor(totalSeconds / 60) - hours * 60;
        var seconds = Math.floor(totalSeconds) % 60;
        return (isNegative ? '-' : '') + format
            .replace('hh', leftPadWithZeros(hours, 2))
            .replace('mm', leftPadWithZeros(minutes, 2))
            .replace('ss', leftPadWithZeros(seconds, 2));
    }
    StringUtils.secondsToTime = secondsToTime;
    /**
     * Converts a number to a string and left-pads it with zeros to the specified length.
     * Example: leftPadWithZeros(123, 5) => '00123'
     *
     * @param num the number to convert to string and pad with zeros
     * @param length the desired length of the padded string
     * @returns {string} the padded number as string
     */
    function leftPadWithZeros(num, length) {
        var text = num + '';
        var padding = '0000000000'.substr(0, length - text.length);
        return padding + text;
    }
    /**
     * Fills out placeholders in an ad message.
     *
     * Has the placeholders '{remainingTime[formatString]}', '{playedTime[formatString]}' and
     * '{adDuration[formatString]}', which are replaced by the remaining time until the ad can be skipped, the current
     * time or the ad duration. The format string is optional. If not specified, the placeholder is replaced by the time
     * in seconds. If specified, it must be of the following format:
     * - %d - Inserts the time as an integer.
     * - %0Nd - Inserts the time as an integer with leading zeroes, if the length of the time string is smaller than N.
     * - %f - Inserts the time as a float.
     * - %0Nf - Inserts the time as a float with leading zeroes.
     * - %.Mf - Inserts the time as a float with M decimal places. Can be combined with %0Nf, e.g. %04.2f (the time
     * 10.123
     * would be printed as 0010.12).
     * - %hh:mm:ss
     * - %mm:ss
     *
     * @param adMessage an ad message with optional placeholders to fill
     * @param skipOffset if specified, {remainingTime} will be filled with the remaining time until the ad can be skipped
     * @param player the player to get the time data from
     * @returns {string} the ad message with filled placeholders
     */
    function replaceAdMessagePlaceholders(adMessage, skipOffset, player) {
        var adMessagePlaceholderRegex = new RegExp('\\{(remainingTime|playedTime|adDuration)(}|%((0[1-9]\\d*(\\.\\d+(d|f)|d|f)|\\.\\d+f|d|f)|hh:mm:ss|mm:ss)})', 'g');
        return adMessage.replace(adMessagePlaceholderRegex, function (formatString) {
            var time = 0;
            if (formatString.indexOf('remainingTime') > -1) {
                if (skipOffset) {
                    time = Math.ceil(skipOffset - player.getCurrentTime());
                }
                else {
                    time = player.getDuration() - player.getCurrentTime();
                }
            }
            else if (formatString.indexOf('playedTime') > -1) {
                time = player.getCurrentTime();
            }
            else if (formatString.indexOf('adDuration') > -1) {
                time = player.getDuration();
            }
            return formatNumber(time, formatString);
        });
    }
    StringUtils.replaceAdMessagePlaceholders = replaceAdMessagePlaceholders;
    function formatNumber(time, format) {
        var formatStringValidationRegex = /%((0[1-9]\d*(\.\d+(d|f)|d|f)|\.\d+f|d|f)|hh:mm:ss|mm:ss)/;
        var leadingZeroesRegex = /(%0[1-9]\d*)(?=(\.\d+f|f|d))/;
        var decimalPlacesRegex = /\.\d*(?=f)/;
        if (!formatStringValidationRegex.test(format)) {
            // If the format is invalid, we set a default fallback format
            format = '%d';
        }
        // Determine the number of leading zeros
        var leadingZeroes = 0;
        var leadingZeroesMatches = format.match(leadingZeroesRegex);
        if (leadingZeroesMatches) {
            leadingZeroes = parseInt(leadingZeroesMatches[0].substring(2));
        }
        // Determine the number of decimal places
        var numDecimalPlaces = null;
        var decimalPlacesMatches = format.match(decimalPlacesRegex);
        if (decimalPlacesMatches && !isNaN(parseInt(decimalPlacesMatches[0].substring(1)))) {
            numDecimalPlaces = parseInt(decimalPlacesMatches[0].substring(1));
            if (numDecimalPlaces > 20) {
                numDecimalPlaces = 20;
            }
        }
        // Float format
        if (format.indexOf('f') > -1) {
            var timeString = '';
            if (numDecimalPlaces !== null) {
                // Apply fixed number of decimal places
                timeString = time.toFixed(numDecimalPlaces);
            }
            else {
                timeString = '' + time;
            }
            // Apply leading zeros
            if (timeString.indexOf('.') > -1) {
                return leftPadWithZeros(timeString, timeString.length + (leadingZeroes - timeString.indexOf('.')));
            }
            else {
                return leftPadWithZeros(timeString, leadingZeroes);
            }
        }
        else if (format.indexOf(':') > -1) {
            var totalSeconds = Math.ceil(time);
            // hh:mm:ss format
            if (format.indexOf('hh') > -1) {
                return secondsToTime(totalSeconds);
            }
            else {
                var minutes = Math.floor(totalSeconds / 60);
                var seconds = totalSeconds % 60;
                return leftPadWithZeros(minutes, 2) + ':' + leftPadWithZeros(seconds, 2);
            }
        }
        else {
            return leftPadWithZeros(Math.ceil(time), leadingZeroes);
        }
    }
})(StringUtils = exports.StringUtils || (exports.StringUtils = {}));


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ArrayUtils;
(function (ArrayUtils) {
    /**
     * Removes an item from an array.
     * @param array the array that may contain the item to remove
     * @param item the item to remove from the array
     * @returns {any} the removed item or null if it wasn't part of the array
     */
    function remove(array, item) {
        var index = array.indexOf(item);
        if (index > -1) {
            return array.splice(index, 1)[0];
        }
        else {
            return null;
        }
    }
    ArrayUtils.remove = remove;
})(ArrayUtils = exports.ArrayUtils || (exports.ArrayUtils = {}));


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var eventdispatcher_1 = __webpack_require__(3);
var browserutils_1 = __webpack_require__(15);
var PlayerUtils;
(function (PlayerUtils) {
    var PlayerState;
    (function (PlayerState) {
        PlayerState[PlayerState["IDLE"] = 0] = "IDLE";
        PlayerState[PlayerState["PREPARED"] = 1] = "PREPARED";
        PlayerState[PlayerState["PLAYING"] = 2] = "PLAYING";
        PlayerState[PlayerState["PAUSED"] = 3] = "PAUSED";
        PlayerState[PlayerState["FINISHED"] = 4] = "FINISHED";
    })(PlayerState = PlayerUtils.PlayerState || (PlayerUtils.PlayerState = {}));
    function isTimeShiftAvailable(player) {
        return player.isLive() && player.getMaxTimeShift() !== 0;
    }
    PlayerUtils.isTimeShiftAvailable = isTimeShiftAvailable;
    function getState(player) {
        if (player.hasEnded()) {
            return PlayerState.FINISHED;
        }
        else if (player.isPlaying()) {
            return PlayerState.PLAYING;
        }
        else if (player.isPaused()) {
            return PlayerState.PAUSED;
        }
        else if (player.isReady()) {
            return PlayerState.PREPARED;
        }
        else {
            return PlayerState.IDLE;
        }
    }
    PlayerUtils.getState = getState;
    var TimeShiftAvailabilityDetector = (function () {
        function TimeShiftAvailabilityDetector(player) {
            var _this = this;
            this.timeShiftAvailabilityChangedEvent = new eventdispatcher_1.EventDispatcher();
            this.player = player;
            this.timeShiftAvailable = undefined;
            var timeShiftDetector = function () {
                _this.detect();
            };
            // Try to detect timeshift availability in ON_READY, which works for DASH streams
            player.addEventHandler(player.EVENT.ON_READY, timeShiftDetector);
            // With HLS/NativePlayer streams, getMaxTimeShift can be 0 before the buffer fills, so we need to additionally
            // check timeshift availability in ON_TIME_CHANGED
            player.addEventHandler(player.EVENT.ON_TIME_CHANGED, timeShiftDetector);
        }
        TimeShiftAvailabilityDetector.prototype.detect = function () {
            if (this.player.isLive()) {
                var timeShiftAvailableNow = PlayerUtils.isTimeShiftAvailable(this.player);
                // When the availability changes, we fire the event
                if (timeShiftAvailableNow !== this.timeShiftAvailable) {
                    this.timeShiftAvailabilityChangedEvent.dispatch(this.player, { timeShiftAvailable: timeShiftAvailableNow });
                    this.timeShiftAvailable = timeShiftAvailableNow;
                }
            }
        };
        Object.defineProperty(TimeShiftAvailabilityDetector.prototype, "onTimeShiftAvailabilityChanged", {
            get: function () {
                return this.timeShiftAvailabilityChangedEvent.getEvent();
            },
            enumerable: true,
            configurable: true
        });
        return TimeShiftAvailabilityDetector;
    }());
    PlayerUtils.TimeShiftAvailabilityDetector = TimeShiftAvailabilityDetector;
    /**
     * Detects changes of the stream type, i.e. changes of the return value of the player#isLive method.
     * Normally, a stream cannot change its type during playback, it's either VOD or live. Due to bugs on some
     * platforms or browsers, it can still change. It is therefore unreliable to just check #isLive and this detector
     * should be used as a workaround instead.
     *
     * Known cases:
     *
     * - HLS VOD on Android 4.3
     * Video duration is initially 'Infinity' and only gets available after playback starts, so streams are wrongly
     * reported as 'live' before playback (the live-check in the player checks for infinite duration).
     */
    var LiveStreamDetector = (function () {
        function LiveStreamDetector(player) {
            var _this = this;
            this.liveChangedEvent = new eventdispatcher_1.EventDispatcher();
            this.player = player;
            this.live = undefined;
            var liveDetector = function () {
                _this.detect();
            };
            // Initialize when player is ready
            player.addEventHandler(player.EVENT.ON_READY, liveDetector);
            // Re-evaluate when playback starts
            player.addEventHandler(player.EVENT.ON_PLAY, liveDetector);
            // HLS live detection workaround for Android:
            // Also re-evaluate during playback, because that is when the live flag might change.
            // (Doing it only in Android Chrome saves unnecessary overhead on other plattforms)
            if (browserutils_1.BrowserUtils.isAndroid && browserutils_1.BrowserUtils.isChrome) {
                player.addEventHandler(player.EVENT.ON_TIME_CHANGED, liveDetector);
            }
        }
        LiveStreamDetector.prototype.detect = function () {
            var liveNow = this.player.isLive();
            // Compare current to previous live state flag and fire event when it changes. Since we initialize the flag
            // with undefined, there is always at least an initial event fired that tells listeners the live state.
            if (liveNow !== this.live) {
                this.liveChangedEvent.dispatch(this.player, { live: liveNow });
                this.live = liveNow;
            }
        };
        Object.defineProperty(LiveStreamDetector.prototype, "onLiveChanged", {
            get: function () {
                return this.liveChangedEvent.getEvent();
            },
            enumerable: true,
            configurable: true
        });
        return LiveStreamDetector;
    }());
    PlayerUtils.LiveStreamDetector = LiveStreamDetector;
})(PlayerUtils = exports.PlayerUtils || (exports.PlayerUtils = {}));


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = angular;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var dom_1 = __webpack_require__(1);
var timeout_1 = __webpack_require__(9);
var playerutils_1 = __webpack_require__(12);
/**
 * The base container that contains all of the UI. The UIContainer is passed to the {@link UIManager} to build and
 * setup the UI.
 */
var UIContainer = (function (_super) {
    __extends(UIContainer, _super);
    function UIContainer(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-uicontainer',
            hideDelay: 5000,
        }, _this.config);
        return _this;
    }
    UIContainer.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        this.configureUIShowHide(player, uimanager);
        this.configurePlayerStates(player, uimanager);
    };
    UIContainer.prototype.configureUIShowHide = function (player, uimanager) {
        var _this = this;
        var container = this.getDomElement();
        var config = this.getConfig();
        if (config.hideDelay === -1) {
            uimanager.onConfigured.subscribe(function () { return uimanager.onControlsShow.dispatch(_this); });
            return;
        }
        var isUiShown = false;
        var isSeeking = false;
        var isFirstTouch = true;
        var showUi = function () {
            if (!isUiShown) {
                // Let subscribers know that they should reveal themselves
                uimanager.onControlsShow.dispatch(_this);
                isUiShown = true;
            }
            // Don't trigger timeout while seeking (it will be triggered once the seek is finished) or casting
            if (!isSeeking && !player.isCasting()) {
                _this.uiHideTimeout.start();
            }
        };
        var hideUi = function () {
            // Hide the UI only if it is shown, and if not casting
            if (isUiShown && !player.isCasting()) {
                // Issue a preview event to check if we are good to hide the controls
                var previewHideEventArgs = {};
                uimanager.onPreviewControlsHide.dispatch(_this, previewHideEventArgs);
                if (!previewHideEventArgs.cancel) {
                    // If the preview wasn't canceled, let subscribers know that they should now hide themselves
                    uimanager.onControlsHide.dispatch(_this);
                    isUiShown = false;
                }
                else {
                    // If the hide preview was canceled, continue to show UI
                    showUi();
                }
            }
        };
        // Timeout to defer UI hiding by the configured delay time
        this.uiHideTimeout = new timeout_1.Timeout(config.hideDelay, hideUi);
        // On touch displays, the first touch reveals the UI
        container.on('touchend', function (e) {
            if (!isUiShown) {
                // Only if the UI is hidden, we prevent other actions (except for the first touch) and reveal the UI instead.
                // The first touch is not prevented to let other listeners receive the event and trigger an initial action, e.g.
                // the huge playback button can directly start playback instead of requiring a double tap which 1. reveals
                // the UI and 2. starts playback.
                if (isFirstTouch) {
                    isFirstTouch = false;
                }
                else {
                    e.preventDefault();
                }
                showUi();
            }
        });
        // When the mouse enters, we show the UI
        container.on('mouseenter', function () {
            showUi();
        });
        // When the mouse moves within, we show the UI
        container.on('mousemove', function () {
            showUi();
        });
        // When the mouse leaves, we can prepare to hide the UI, except a seek is going on
        container.on('mouseleave', function () {
            // When a seek is going on, the seek scrub pointer may exit the UI area while still seeking, and we do not hide
            // the UI in such cases
            if (!isSeeking) {
                _this.uiHideTimeout.start();
            }
        });
        uimanager.onSeek.subscribe(function () {
            _this.uiHideTimeout.clear(); // Don't hide UI while a seek is in progress
            isSeeking = true;
        });
        uimanager.onSeeked.subscribe(function () {
            isSeeking = false;
            _this.uiHideTimeout.start(); // Re-enable UI hide timeout after a seek
        });
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function () {
            showUi(); // Show UI when a Cast session has started (UI will then stay permanently on during the session)
        });
    };
    UIContainer.prototype.configurePlayerStates = function (player, uimanager) {
        var _this = this;
        var container = this.getDomElement();
        // Convert player states into CSS class names
        var stateClassNames = [];
        for (var state in playerutils_1.PlayerUtils.PlayerState) {
            if (isNaN(Number(state))) {
                var enumName = playerutils_1.PlayerUtils.PlayerState[playerutils_1.PlayerUtils.PlayerState[state]];
                stateClassNames[playerutils_1.PlayerUtils.PlayerState[state]] =
                    this.prefixCss(UIContainer.STATE_PREFIX + enumName.toLowerCase());
            }
        }
        var removeStates = function () {
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.IDLE]);
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PREPARED]);
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PLAYING]);
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PAUSED]);
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.FINISHED]);
        };
        player.addEventHandler(player.EVENT.ON_READY, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PREPARED]);
        });
        player.addEventHandler(player.EVENT.ON_PLAY, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PLAYING]);
        });
        player.addEventHandler(player.EVENT.ON_PAUSED, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PAUSED]);
        });
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.FINISHED]);
        });
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.IDLE]);
        });
        // Init in current player state
        container.addClass(stateClassNames[playerutils_1.PlayerUtils.getState(player)]);
        // Fullscreen marker class
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_ENTER, function () {
            container.addClass(_this.prefixCss(UIContainer.FULLSCREEN));
        });
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_EXIT, function () {
            container.removeClass(_this.prefixCss(UIContainer.FULLSCREEN));
        });
        // Init fullscreen state
        if (player.isFullscreen()) {
            container.addClass(this.prefixCss(UIContainer.FULLSCREEN));
        }
        // Buffering marker class
        player.addEventHandler(player.EVENT.ON_STALL_STARTED, function () {
            container.addClass(_this.prefixCss(UIContainer.BUFFERING));
        });
        player.addEventHandler(player.EVENT.ON_STALL_ENDED, function () {
            container.removeClass(_this.prefixCss(UIContainer.BUFFERING));
        });
        // Init buffering state
        if (player.isStalled()) {
            container.addClass(this.prefixCss(UIContainer.BUFFERING));
        }
        // RemoteControl marker class
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function () {
            container.addClass(_this.prefixCss(UIContainer.REMOTE_CONTROL));
        });
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, function () {
            container.removeClass(_this.prefixCss(UIContainer.REMOTE_CONTROL));
        });
        // Init RemoteControl state
        if (player.isCasting()) {
            container.addClass(this.prefixCss(UIContainer.REMOTE_CONTROL));
        }
        // Controls visibility marker class
        uimanager.onControlsShow.subscribe(function () {
            container.removeClass(_this.prefixCss(UIContainer.CONTROLS_HIDDEN));
            container.addClass(_this.prefixCss(UIContainer.CONTROLS_SHOWN));
        });
        uimanager.onControlsHide.subscribe(function () {
            container.removeClass(_this.prefixCss(UIContainer.CONTROLS_SHOWN));
            container.addClass(_this.prefixCss(UIContainer.CONTROLS_HIDDEN));
        });
        // Layout size classes
        var updateLayoutSizeClasses = function (width, height) {
            container.removeClass(_this.prefixCss('layout-max-width-400'));
            container.removeClass(_this.prefixCss('layout-max-width-600'));
            container.removeClass(_this.prefixCss('layout-max-width-800'));
            container.removeClass(_this.prefixCss('layout-max-width-1200'));
            if (width <= 400) {
                container.addClass(_this.prefixCss('layout-max-width-400'));
            }
            else if (width <= 600) {
                container.addClass(_this.prefixCss('layout-max-width-600'));
            }
            else if (width <= 800) {
                container.addClass(_this.prefixCss('layout-max-width-800'));
            }
            else if (width <= 1200) {
                container.addClass(_this.prefixCss('layout-max-width-1200'));
            }
        };
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function (e) {
            // Convert strings (with "px" suffix) to ints
            var width = Math.round(Number(e.width.substring(0, e.width.length - 2)));
            var height = Math.round(Number(e.height.substring(0, e.height.length - 2)));
            updateLayoutSizeClasses(width, height);
        });
        // Init layout state
        updateLayoutSizeClasses(new dom_1.DOM(player.getFigure()).width(), new dom_1.DOM(player.getFigure()).height());
    };
    UIContainer.prototype.release = function () {
        _super.prototype.release.call(this);
        this.uiHideTimeout.clear();
    };
    UIContainer.prototype.toDomElement = function () {
        var container = _super.prototype.toDomElement.call(this);
        // Detect flexbox support (not supported in IE9)
        if (document && typeof document.createElement('p').style.flex !== 'undefined') {
            container.addClass(this.prefixCss('flexbox'));
        }
        else {
            container.addClass(this.prefixCss('no-flexbox'));
        }
        return container;
    };
    return UIContainer;
}(container_1.Container));
UIContainer.STATE_PREFIX = 'player-state-';
UIContainer.FULLSCREEN = 'fullscreen';
UIContainer.BUFFERING = 'buffering';
UIContainer.REMOTE_CONTROL = 'remote-control';
UIContainer.CONTROLS_SHOWN = 'controls-shown';
UIContainer.CONTROLS_HIDDEN = 'controls-hidden';
exports.UIContainer = UIContainer;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BrowserUtils;
(function (BrowserUtils) {
    // isMobile only needs to be evaluated once (it cannot change during a browser session)
    // Mobile detection according to Mozilla recommendation: "In summary, we recommend looking for the string “Mobi”
    // anywhere in the User Agent to detect a mobile device."
    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent
    BrowserUtils.isMobile = navigator && navigator.userAgent && /Mobi/.test(navigator.userAgent);
    BrowserUtils.isChrome = navigator && navigator.userAgent && /Chrome/.test(navigator.userAgent);
    BrowserUtils.isAndroid = navigator && navigator.userAgent && /Android/.test(navigator.userAgent);
})(BrowserUtils = exports.BrowserUtils || (exports.BrowserUtils = {}));


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
var playerutils_1 = __webpack_require__(12);
/**
 * A button that toggles between playback and pause.
 */
var PlaybackToggleButton = (function (_super) {
    __extends(PlaybackToggleButton, _super);
    function PlaybackToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-playbacktogglebutton',
            text: 'Play/Pause',
        }, _this.config);
        return _this;
    }
    PlaybackToggleButton.prototype.configure = function (player, uimanager, handleClickEvent) {
        var _this = this;
        if (handleClickEvent === void 0) { handleClickEvent = true; }
        _super.prototype.configure.call(this, player, uimanager);
        var isSeeking = false;
        // Handler to update button state based on player state
        var playbackStateHandler = function (event) {
            // If the UI is currently seeking, playback is temporarily stopped but the buttons should
            // not reflect that and stay as-is (e.g indicate playback while seeking).
            if (isSeeking) {
                return;
            }
            if (player.isPlaying()) {
                _this.on();
            }
            else {
                _this.off();
            }
        };
        // Call handler upon these events
        player.addEventHandler(player.EVENT.ON_PLAY, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_PAUSED, playbackStateHandler);
        if (player.EVENT.ON_PLAYING) {
            // Since player 7.3. Not really necessary but just in case we ever miss the ON_PLAY event.
            player.addEventHandler(player.EVENT.ON_PLAYING, playbackStateHandler);
        }
        // after unloading + loading a new source, the player might be in a different playing state (from playing into stopped)
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, playbackStateHandler);
        // when playback finishes, player turns to paused mode
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_PLAYING, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_PAUSED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_PLAYBACK_FINISHED, playbackStateHandler);
        // When a playback attempt is rejected with warning 5008, we switch the button state back to off
        // This is required for blocked autoplay, because there is no ON_PAUSED event in such case
        player.addEventHandler(player.EVENT.ON_WARNING, function (event) {
            if (event.code === 5008) {
                _this.off();
            }
        });
        // Detect absence of timeshifting on live streams and add tagging class to convert button icons to play/stop
        var timeShiftDetector = new playerutils_1.PlayerUtils.TimeShiftAvailabilityDetector(player);
        timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(function (sender, args) {
            if (!args.timeShiftAvailable) {
                _this.getDomElement().addClass(_this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));
            }
            else {
                _this.getDomElement().removeClass(_this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));
            }
        });
        timeShiftDetector.detect(); // Initial detection
        if (handleClickEvent) {
            // Control player by button events
            // When a button event triggers a player API call, events are fired which in turn call the event handler
            // above that updated the button state.
            this.onClick.subscribe(function () {
                if (player.isPlaying()) {
                    player.pause('ui');
                }
                else {
                    player.play('ui');
                }
            });
        }
        // Track UI seeking status
        uimanager.onSeek.subscribe(function () {
            isSeeking = true;
        });
        uimanager.onSeeked.subscribe(function () {
            isSeeking = false;
        });
        // Startup init
        playbackStateHandler(null);
    };
    return PlaybackToggleButton;
}(togglebutton_1.ToggleButton));
PlaybackToggleButton.CLASS_STOPTOGGLE = 'stoptoggle';
exports.PlaybackToggleButton = PlaybackToggleButton;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles audio muting.
 */
var VolumeToggleButton = (function (_super) {
    __extends(VolumeToggleButton, _super);
    function VolumeToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        var defaultConfig = {
            cssClass: 'ui-volumetogglebutton',
            text: 'Volume/Mute',
            onClass: 'muted',
            offClass: 'unmuted',
        };
        _this.config = _this.mergeConfig(config, defaultConfig, _this.config);
        return _this;
    }
    VolumeToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var muteStateHandler = function () {
            if (player.isMuted()) {
                _this.on();
                // When the volume is unmuted and the volume level is veeeery low, we increase it to 10%. This especially helps
                // in the case when the volume is first turned down to 0 and then the player is muted; when the player gets
                // unmuted it would switch to volume level 0 which would seem like unmuting did not work, and increasing the
                // level a bit helps to overcome this issue.
                if (player.getVolume() < 10) {
                    player.setVolume(10);
                }
            }
            else {
                _this.off();
            }
        };
        var volumeLevelHandler = function () {
            var volumeLevelTens = Math.ceil(player.getVolume() / 10);
            _this.getDomElement().data(_this.prefixCss('volume-level-tens'), String(volumeLevelTens));
            // When the volume is turned down to zero, switch into the mute state of the button. This avoids the usability
            // issue where the volume is turned down to zero, the button shows the muted icon but is not really unmuted, and
            // the next button press would switch it into the mute state, visually staying the same which would seem like
            // an expected unmute did not work.
            if (volumeLevelTens === 0) {
                _this.off();
            }
        };
        player.addEventHandler(player.EVENT.ON_MUTED, muteStateHandler);
        player.addEventHandler(player.EVENT.ON_UNMUTED, muteStateHandler);
        player.addEventHandler(player.EVENT.ON_VOLUME_CHANGED, volumeLevelHandler);
        this.onClick.subscribe(function () {
            if (player.isMuted()) {
                player.unmute('ui-volumetogglebutton');
            }
            else {
                player.mute('ui-volumetogglebutton');
            }
        });
        // Startup init
        muteStateHandler();
        volumeLevelHandler();
    };
    return VolumeToggleButton;
}(togglebutton_1.ToggleButton));
exports.VolumeToggleButton = VolumeToggleButton;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var eventdispatcher_1 = __webpack_require__(3);
var timeout_1 = __webpack_require__(9);
var playerutils_1 = __webpack_require__(12);
/**
 * A seek bar to seek within the player's media. It displays the current playback position, amount of buffed data, seek
 * target, and keeps status about an ongoing seek.
 *
 * The seek bar displays different 'bars':
 *  - the playback position, i.e. the position in the media at which the player current playback pointer is positioned
 *  - the buffer position, which usually is the playback position plus the time span that is already buffered ahead
 *  - the seek position, used to preview to where in the timeline a seek will jump to
 */
var SeekBar = (function (_super) {
    __extends(SeekBar, _super);
    function SeekBar(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        /**
         * Buffer of the the current playback position. The position must be buffered in case the element
         * needs to be refreshed with {@link #refreshPlaybackPosition}.
         * @type {number}
         */
        _this.playbackPositionPercentage = 0;
        // https://hacks.mozilla.org/2013/04/detecting-touch-its-the-why-not-the-how/
        _this.touchSupported = ('ontouchstart' in window);
        _this.seekBarEvents = {
            /**
             * Fired when a scrubbing seek operation is started.
             */
            onSeek: new eventdispatcher_1.EventDispatcher(),
            /**
             * Fired during a scrubbing seek to indicate that the seek preview (i.e. the video frame) should be updated.
             */
            onSeekPreview: new eventdispatcher_1.EventDispatcher(),
            /**
             * Fired when a scrubbing seek has finished or when a direct seek is issued.
             */
            onSeeked: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-seekbar',
            vertical: false,
            smoothPlaybackPositionUpdateIntervalMs: 50,
        }, _this.config);
        _this.label = _this.config.label;
        _this.timelineMarkers = [];
        return _this;
    }
    SeekBar.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        if (this.hasLabel()) {
            this.getLabel().initialize();
        }
    };
    SeekBar.prototype.configure = function (player, uimanager, configureSeek) {
        var _this = this;
        if (configureSeek === void 0) { configureSeek = true; }
        _super.prototype.configure.call(this, player, uimanager);
        // Apply scaling transform to the backdrop bar to have all bars rendered similarly
        // (the call must be up here to be executed for the volume slider as well)
        this.setPosition(this.seekBarBackdrop, 100);
        if (!configureSeek) {
            // The configureSeek flag can be used by subclasses to disable configuration as seek bar. E.g. the volume
            // slider is reusing this component but adds its own functionality, and does not need the seek functionality.
            // This is actually a hack, the proper solution would be for both seek bar and volume sliders to extend
            // a common base slider component and implement their functionality there.
            return;
        }
        var isPlaying = false;
        var isSeeking = false;
        // Update playback and buffer positions
        var playbackPositionHandler = function (event, forceUpdate) {
            if (event === void 0) { event = null; }
            if (forceUpdate === void 0) { forceUpdate = false; }
            if (isSeeking) {
                // We caught a seek preview seek, do not update the seekbar
                return;
            }
            if (player.isLive()) {
                if (player.getMaxTimeShift() === 0) {
                    // This case must be explicitly handled to avoid division by zero
                    _this.setPlaybackPosition(100);
                }
                else {
                    var playbackPositionPercentage = 100 - (100 / player.getMaxTimeShift() * player.getTimeShift());
                    _this.setPlaybackPosition(playbackPositionPercentage);
                }
                // Always show full buffer for live streams
                _this.setBufferPosition(100);
            }
            else {
                var playbackPositionPercentage = 100 / player.getDuration() * player.getCurrentTime();
                var videoBufferLength = player.getVideoBufferLength();
                var audioBufferLength = player.getAudioBufferLength();
                // Calculate the buffer length which is the smaller length of the audio and video buffers. If one of these
                // buffers is not available, we set it's value to MAX_VALUE to make sure that the other real value is taken
                // as the buffer length.
                var bufferLength = Math.min(videoBufferLength != null ? videoBufferLength : Number.MAX_VALUE, audioBufferLength != null ? audioBufferLength : Number.MAX_VALUE);
                // If both buffer lengths are missing, we set the buffer length to zero
                if (bufferLength === Number.MAX_VALUE) {
                    bufferLength = 0;
                }
                var bufferPercentage = 100 / player.getDuration() * bufferLength;
                // Update playback position only in paused state or in the initial startup state where player is neither
                // paused nor playing. Playback updates are handled in the Timeout below.
                if (_this.config.smoothPlaybackPositionUpdateIntervalMs === SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED
                    || forceUpdate || player.isPaused() || (player.isPaused() === player.isPlaying())) {
                    _this.setPlaybackPosition(playbackPositionPercentage);
                }
                _this.setBufferPosition(playbackPositionPercentage + bufferPercentage);
            }
        };
        // Update seekbar upon these events
        // init playback position when the player is ready
        player.addEventHandler(player.EVENT.ON_READY, playbackPositionHandler);
        // update playback position when it changes
        player.addEventHandler(player.EVENT.ON_TIME_CHANGED, playbackPositionHandler);
        // update bufferlevel when buffering is complete
        player.addEventHandler(player.EVENT.ON_STALL_ENDED, playbackPositionHandler);
        // update playback position when a seek has finished
        player.addEventHandler(player.EVENT.ON_SEEKED, playbackPositionHandler);
        // update playback position when a timeshift has finished
        player.addEventHandler(player.EVENT.ON_TIME_SHIFTED, playbackPositionHandler);
        // update bufferlevel when a segment has been downloaded
        player.addEventHandler(player.EVENT.ON_SEGMENT_REQUEST_FINISHED, playbackPositionHandler);
        // update playback position of Cast playback
        player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, playbackPositionHandler);
        this.configureLivePausedTimeshiftUpdater(player, uimanager, playbackPositionHandler);
        // Seek handling
        player.addEventHandler(player.EVENT.ON_SEEK, function () {
            _this.setSeeking(true);
        });
        player.addEventHandler(player.EVENT.ON_SEEKED, function () {
            _this.setSeeking(false);
        });
        player.addEventHandler(player.EVENT.ON_TIME_SHIFT, function () {
            _this.setSeeking(true);
        });
        player.addEventHandler(player.EVENT.ON_TIME_SHIFTED, function () {
            _this.setSeeking(false);
        });
        var seek = function (percentage) {
            if (player.isLive()) {
                player.timeShift(player.getMaxTimeShift() - (player.getMaxTimeShift() * (percentage / 100)), 'ui');
            }
            else {
                player.seek(player.getDuration() * (percentage / 100), 'ui');
            }
        };
        this.onSeek.subscribe(function (sender) {
            isSeeking = true; // track seeking status so we can catch events from seek preview seeks
            // Notify UI manager of started seek
            uimanager.onSeek.dispatch(sender);
            // Save current playback state
            isPlaying = player.isPlaying();
            // Pause playback while seeking
            if (isPlaying) {
                player.pause('ui');
            }
        });
        this.onSeekPreview.subscribe(function (sender, args) {
            // Notify UI manager of seek preview
            uimanager.onSeekPreview.dispatch(sender, args);
        });
        this.onSeekPreview.subscribeRateLimited(function (sender, args) {
            // Rate-limited scrubbing seek
            if (args.scrubbing) {
                seek(args.position);
            }
        }, 200);
        this.onSeeked.subscribe(function (sender, percentage) {
            isSeeking = false;
            // Do the seek
            seek(percentage);
            // Continue playback after seek if player was playing when seek started
            if (isPlaying) {
                player.play('ui');
            }
            // Notify UI manager of finished seek
            uimanager.onSeeked.dispatch(sender);
        });
        if (this.hasLabel()) {
            // Configure a seekbar label that is internal to the seekbar)
            this.getLabel().configure(player, uimanager);
        }
        // Hide seekbar for live sources without timeshift
        var isLive = false;
        var hasTimeShift = false;
        var switchVisibility = function (isLive, hasTimeShift) {
            if (isLive && !hasTimeShift) {
                _this.hide();
            }
            else {
                _this.show();
            }
            playbackPositionHandler(null, true);
            _this.refreshPlaybackPosition();
        };
        var liveStreamDetector = new playerutils_1.PlayerUtils.LiveStreamDetector(player);
        liveStreamDetector.onLiveChanged.subscribe(function (sender, args) {
            isLive = args.live;
            switchVisibility(isLive, hasTimeShift);
        });
        var timeShiftDetector = new playerutils_1.PlayerUtils.TimeShiftAvailabilityDetector(player);
        timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(function (sender, args) {
            hasTimeShift = args.timeShiftAvailable;
            switchVisibility(isLive, hasTimeShift);
        });
        // Initial detection
        liveStreamDetector.detect();
        timeShiftDetector.detect();
        // Refresh the playback position when the player resized or the UI is configured. The playback position marker
        // is positioned absolutely and must therefore be updated when the size of the seekbar changes.
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () {
            _this.refreshPlaybackPosition();
        });
        // Additionally, when this code is called, the seekbar is not part of the UI yet and therefore does not have a size,
        // resulting in a wrong initial position of the marker. Refreshing it once the UI is configured solved this issue.
        uimanager.onConfigured.subscribe(function () {
            _this.refreshPlaybackPosition();
        });
        // It can also happen that the value changes once the player is ready, or when a new source is loaded, so we need
        // to update on ON_READY too
        player.addEventHandler(player.EVENT.ON_READY, function () {
            _this.refreshPlaybackPosition();
        });
        // Initialize seekbar
        playbackPositionHandler(); // Set the playback position
        this.setBufferPosition(0);
        this.setSeekPosition(0);
        if (this.config.smoothPlaybackPositionUpdateIntervalMs !== SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED) {
            this.configureSmoothPlaybackPositionUpdater(player, uimanager);
        }
        this.configureMarkers(player, uimanager);
    };
    /**
     * Update seekbar while a live stream with DVR window is paused.
     * The playback position stays still and the position indicator visually moves towards the back.
     */
    SeekBar.prototype.configureLivePausedTimeshiftUpdater = function (player, uimanager, playbackPositionHandler) {
        // Regularly update the playback position while the timeout is active
        var pausedTimeshiftUpdater = new timeout_1.Timeout(1000, playbackPositionHandler, true);
        // Start updater when a live stream with timeshift window is paused
        player.addEventHandler(player.EVENT.ON_PAUSED, function () {
            if (player.isLive() && player.getMaxTimeShift() < 0) {
                pausedTimeshiftUpdater.start();
            }
        });
        // Stop updater when playback continues (no matter if the updater was started before)
        player.addEventHandler(player.EVENT.ON_PLAY, function () { return pausedTimeshiftUpdater.clear(); });
    };
    SeekBar.prototype.configureSmoothPlaybackPositionUpdater = function (player, uimanager) {
        var _this = this;
        /*
         * Playback position update
         *
         * We do not update the position directly from the ON_TIME_CHANGED event, because it arrives very jittery and
         * results in a jittery position indicator since the CSS transition time is statically set.
         * To work around this issue, we maintain a local playback position that is updated in a stable regular interval
         * and kept in sync with the player.
         */
        var currentTimeSeekBar = 0;
        var currentTimePlayer = 0;
        var updateIntervalMs = 50;
        var currentTimeUpdateDeltaSecs = updateIntervalMs / 1000;
        this.smoothPlaybackPositionUpdater = new timeout_1.Timeout(updateIntervalMs, function () {
            currentTimeSeekBar += currentTimeUpdateDeltaSecs;
            currentTimePlayer = player.getCurrentTime();
            // Sync currentTime of seekbar to player
            var currentTimeDelta = currentTimeSeekBar - currentTimePlayer;
            // If the delta is larger that 2 secs, directly jump the seekbar to the
            // player time instead of smoothly fast forwarding/rewinding.
            if (Math.abs(currentTimeDelta) > 2) {
                currentTimeSeekBar = currentTimePlayer;
            }
            else if (currentTimeDelta <= -currentTimeUpdateDeltaSecs) {
                currentTimeSeekBar += currentTimeUpdateDeltaSecs;
            }
            else if (currentTimeDelta >= currentTimeUpdateDeltaSecs) {
                currentTimeSeekBar -= currentTimeUpdateDeltaSecs;
            }
            var playbackPositionPercentage = 100 / player.getDuration() * currentTimeSeekBar;
            _this.setPlaybackPosition(playbackPositionPercentage);
        }, true);
        var startSmoothPlaybackPositionUpdater = function () {
            if (!player.isLive()) {
                currentTimeSeekBar = player.getCurrentTime();
                _this.smoothPlaybackPositionUpdater.start();
            }
        };
        var stopSmoothPlaybackPositionUpdater = function () {
            _this.smoothPlaybackPositionUpdater.clear();
        };
        player.addEventHandler(player.EVENT.ON_PLAY, startSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_CAST_PLAYING, startSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_PAUSED, stopSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_CAST_PAUSED, stopSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, stopSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_SEEKED, function () {
            currentTimeSeekBar = player.getCurrentTime();
        });
        if (player.isPlaying()) {
            startSmoothPlaybackPositionUpdater();
        }
    };
    SeekBar.prototype.configureMarkers = function (player, uimanager) {
        var _this = this;
        var clearMarkers = function () {
            _this.timelineMarkers = [];
            _this.updateMarkers();
        };
        var setupMarkers = function () {
            clearMarkers();
            var duration = player.getDuration();
            if (duration === Infinity) {
                // Don't generate timeline markers if we don't yet have a duration
                // The duration check is for buggy platforms where the duration is not available instantly (Chrome on Android 4.3)
                return;
            }
            for (var _i = 0, _a = uimanager.getConfig().metadata.markers; _i < _a.length; _i++) {
                var marker = _a[_i];
                var markerPosition = 100 / duration * marker.time; // convert absolute time to percentage
                var markerDuration = 100 / duration * marker.duration;
                _this.timelineMarkers.push({ marker: marker, position: markerPosition, duration: markerDuration });
            }
            // Populate the timeline with the markers
            _this.updateMarkers();
        };
        // Add markers when a source is loaded
        player.addEventHandler(player.EVENT.ON_READY, setupMarkers);
        // Remove markers when unloaded
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, clearMarkers);
        // Update markers when the size of the seekbar changes
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () { return _this.updateMarkers(); });
        // Update markers when a marker is added or removed
        uimanager.getConfig().events.onUpdated.subscribe(setupMarkers);
        uimanager.onRelease.subscribe(function () { return uimanager.getConfig().events.onUpdated.unsubscribe(setupMarkers); });
        // Init markers at startup
        setupMarkers();
    };
    SeekBar.prototype.release = function () {
        _super.prototype.release.call(this);
        if (this.smoothPlaybackPositionUpdater) {
            this.smoothPlaybackPositionUpdater.clear();
        }
    };
    SeekBar.prototype.toDomElement = function () {
        var _this = this;
        if (this.config.vertical) {
            this.config.cssClasses.push('vertical');
        }
        var seekBarContainer = new dom_1.DOM('div', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        var seekBar = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar'),
        });
        this.seekBar = seekBar;
        // Indicator that shows the buffer fill level
        var seekBarBufferLevel = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-bufferlevel'),
        });
        this.seekBarBufferPosition = seekBarBufferLevel;
        // Indicator that shows the current playback position
        var seekBarPlaybackPosition = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-playbackposition'),
        });
        this.seekBarPlaybackPosition = seekBarPlaybackPosition;
        // A marker of the current playback position, e.g. a dot or line
        var seekBarPlaybackPositionMarker = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-playbackposition-marker'),
        });
        this.seekBarPlaybackPositionMarker = seekBarPlaybackPositionMarker;
        // Indicator that show where a seek will go to
        var seekBarSeekPosition = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-seekposition'),
        });
        this.seekBarSeekPosition = seekBarSeekPosition;
        // Indicator that shows the full seekbar
        var seekBarBackdrop = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-backdrop'),
        });
        this.seekBarBackdrop = seekBarBackdrop;
        var seekBarChapterMarkersContainer = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-markers'),
        });
        this.seekBarMarkersContainer = seekBarChapterMarkersContainer;
        seekBar.append(this.seekBarBackdrop, this.seekBarBufferPosition, this.seekBarSeekPosition, this.seekBarPlaybackPosition, this.seekBarMarkersContainer, this.seekBarPlaybackPositionMarker);
        var seeking = false;
        // Define handler functions so we can attach/remove them later
        var mouseTouchMoveHandler = function (e) {
            e.preventDefault();
            // Avoid propagation to VR handler
            e.stopPropagation();
            var targetPercentage = 100 * _this.getOffset(e);
            _this.setSeekPosition(targetPercentage);
            _this.setPlaybackPosition(targetPercentage);
            _this.onSeekPreviewEvent(targetPercentage, true);
        };
        var mouseTouchUpHandler = function (e) {
            e.preventDefault();
            // Remove handlers, seek operation is finished
            new dom_1.DOM(document).off('touchmove mousemove', mouseTouchMoveHandler);
            new dom_1.DOM(document).off('touchend mouseup', mouseTouchUpHandler);
            var targetPercentage = 100 * _this.getOffset(e);
            var snappedChapter = _this.getMarkerAtPosition(targetPercentage);
            _this.setSeeking(false);
            seeking = false;
            // Fire seeked event
            _this.onSeekedEvent(snappedChapter ? snappedChapter.position : targetPercentage);
        };
        // A seek always start with a touchstart or mousedown directly on the seekbar.
        // To track a mouse seek also outside the seekbar (for touch events this works automatically),
        // so the user does not need to take care that the mouse always stays on the seekbar, we attach the mousemove
        // and mouseup handlers to the whole document. A seek is triggered when the user lifts the mouse key.
        // A seek mouse gesture is thus basically a click with a long time frame between down and up events.
        seekBar.on('touchstart mousedown', function (e) {
            var isTouchEvent = _this.touchSupported && e instanceof TouchEvent;
            // Prevent selection of DOM elements (also prevents mousedown if current event is touchstart)
            e.preventDefault();
            // Avoid propagation to VR handler
            e.stopPropagation();
            _this.setSeeking(true); // Set seeking class on DOM element
            seeking = true; // Set seek tracking flag
            // Fire seeked event
            _this.onSeekEvent();
            // Add handler to track the seek operation over the whole document
            new dom_1.DOM(document).on(isTouchEvent ? 'touchmove' : 'mousemove', mouseTouchMoveHandler);
            new dom_1.DOM(document).on(isTouchEvent ? 'touchend' : 'mouseup', mouseTouchUpHandler);
        });
        // Display seek target indicator when mouse hovers or finger slides over seekbar
        seekBar.on('touchmove mousemove', function (e) {
            e.preventDefault();
            if (seeking) {
                // During a seek (when mouse is down or touch move active), we need to stop propagation to avoid
                // the VR viewport reacting to the moves.
                e.stopPropagation();
                // Because the stopped propagation inhibits the event on the document, we need to call it from here
                mouseTouchMoveHandler(e);
            }
            var position = 100 * _this.getOffset(e);
            _this.setSeekPosition(position);
            _this.onSeekPreviewEvent(position, false);
            if (_this.hasLabel() && _this.getLabel().isHidden()) {
                _this.getLabel().show();
            }
        });
        // Hide seek target indicator when mouse or finger leaves seekbar
        seekBar.on('touchend mouseleave', function (e) {
            e.preventDefault();
            _this.setSeekPosition(0);
            if (_this.hasLabel()) {
                _this.getLabel().hide();
            }
        });
        seekBarContainer.append(seekBar);
        if (this.label) {
            seekBarContainer.append(this.label.getDomElement());
        }
        return seekBarContainer;
    };
    SeekBar.prototype.updateMarkers = function () {
        var _this = this;
        this.seekBarMarkersContainer.empty();
        var seekBarWidthPx = this.seekBar.width();
        for (var _i = 0, _a = this.timelineMarkers; _i < _a.length; _i++) {
            var marker = _a[_i];
            var markerClasses = ['seekbar-marker'].concat(marker.marker.cssClasses || [])
                .map(function (cssClass) { return _this.prefixCss(cssClass); });
            var cssProperties = {
                'width': marker.position + '%',
            };
            if (marker.duration > 0) {
                var markerWidthPx = Math.round(seekBarWidthPx / 100 * marker.duration);
                cssProperties['border-right-width'] = markerWidthPx + 'px';
                cssProperties['margin-left'] = '0';
            }
            this.seekBarMarkersContainer.append(new dom_1.DOM('div', {
                'class': markerClasses.join(' '),
                'data-marker-time': String(marker.marker.time),
                'data-marker-title': String(marker.marker.title),
            }).css(cssProperties));
        }
    };
    SeekBar.prototype.getMarkerAtPosition = function (percentage) {
        var snappingRange = 1;
        if (this.timelineMarkers.length > 0) {
            for (var _i = 0, _a = this.timelineMarkers; _i < _a.length; _i++) {
                var marker = _a[_i];
                // Handle interval markers
                if (marker.duration > 0
                    && percentage >= marker.position - snappingRange
                    && percentage <= marker.position + marker.duration + snappingRange) {
                    return marker;
                }
                else if (percentage >= marker.position - snappingRange
                    && percentage <= marker.position + snappingRange) {
                    return marker;
                }
            }
        }
        return null;
    };
    /**
     * Gets the horizontal offset of a mouse/touch event point from the left edge of the seek bar.
     * @param eventPageX the pageX coordinate of an event to calculate the offset from
     * @returns {number} a number in the range of [0, 1], where 0 is the left edge and 1 is the right edge
     */
    SeekBar.prototype.getHorizontalOffset = function (eventPageX) {
        var elementOffsetPx = this.seekBar.offset().left;
        var widthPx = this.seekBar.width();
        var offsetPx = eventPageX - elementOffsetPx;
        var offset = 1 / widthPx * offsetPx;
        return this.sanitizeOffset(offset);
    };
    /**
     * Gets the vertical offset of a mouse/touch event point from the bottom edge of the seek bar.
     * @param eventPageY the pageX coordinate of an event to calculate the offset from
     * @returns {number} a number in the range of [0, 1], where 0 is the bottom edge and 1 is the top edge
     */
    SeekBar.prototype.getVerticalOffset = function (eventPageY) {
        var elementOffsetPx = this.seekBar.offset().top;
        var widthPx = this.seekBar.height();
        var offsetPx = eventPageY - elementOffsetPx;
        var offset = 1 / widthPx * offsetPx;
        return 1 - this.sanitizeOffset(offset);
    };
    /**
     * Gets the mouse or touch event offset for the current configuration (horizontal or vertical).
     * @param e the event to calculate the offset from
     * @returns {number} a number in the range of [0, 1]
     * @see #getHorizontalOffset
     * @see #getVerticalOffset
     */
    SeekBar.prototype.getOffset = function (e) {
        if (this.touchSupported && e instanceof TouchEvent) {
            if (this.config.vertical) {
                return this.getVerticalOffset(e.type === 'touchend' ? e.changedTouches[0].pageY : e.touches[0].pageY);
            }
            else {
                return this.getHorizontalOffset(e.type === 'touchend' ? e.changedTouches[0].pageX : e.touches[0].pageX);
            }
        }
        else if (e instanceof MouseEvent) {
            if (this.config.vertical) {
                return this.getVerticalOffset(e.pageY);
            }
            else {
                return this.getHorizontalOffset(e.pageX);
            }
        }
        else {
            if (console) {
                console.warn('invalid event');
            }
            return 0;
        }
    };
    /**
     * Sanitizes the mouse offset to the range of [0, 1].
     *
     * When tracking the mouse outside the seek bar, the offset can be outside the desired range and this method
     * limits it to the desired range. E.g. a mouse event left of the left edge of a seek bar yields an offset below
     * zero, but to display the seek target on the seek bar, we need to limit it to zero.
     *
     * @param offset the offset to sanitize
     * @returns {number} the sanitized offset.
     */
    SeekBar.prototype.sanitizeOffset = function (offset) {
        // Since we track mouse moves over the whole document, the target can be outside the seek range,
        // and we need to limit it to the [0, 1] range.
        if (offset < 0) {
            offset = 0;
        }
        else if (offset > 1) {
            offset = 1;
        }
        return offset;
    };
    /**
     * Sets the position of the playback position indicator.
     * @param percent a number between 0 and 100 as returned by the player
     */
    SeekBar.prototype.setPlaybackPosition = function (percent) {
        this.playbackPositionPercentage = percent;
        // Set position of the bar
        this.setPosition(this.seekBarPlaybackPosition, percent);
        // Set position of the marker
        var totalSize = (this.config.vertical ? (this.seekBar.height() - this.seekBarPlaybackPositionMarker.height()) : this.seekBar.width());
        var px = (totalSize) / 100 * percent;
        if (this.config.vertical) {
            px = this.seekBar.height() - px - this.seekBarPlaybackPositionMarker.height();
        }
        var style = this.config.vertical ?
            // -ms-transform required for IE9
            // -webkit-transform required for Android 4.4 WebView
            {
                'transform': 'translateY(' + px + 'px)',
                '-ms-transform': 'translateY(' + px + 'px)',
                '-webkit-transform': 'translateY(' + px + 'px)',
            } :
            {
                'transform': 'translateX(' + px + 'px)',
                '-ms-transform': 'translateX(' + px + 'px)',
                '-webkit-transform': 'translateX(' + px + 'px)',
            };
        this.seekBarPlaybackPositionMarker.css(style);
    };
    /**
     * Refreshes the playback position. Can be used by subclasses to refresh the position when
     * the size of the component changes.
     */
    SeekBar.prototype.refreshPlaybackPosition = function () {
        this.setPlaybackPosition(this.playbackPositionPercentage);
    };
    /**
     * Sets the position until which media is buffered.
     * @param percent a number between 0 and 100
     */
    SeekBar.prototype.setBufferPosition = function (percent) {
        this.setPosition(this.seekBarBufferPosition, percent);
    };
    /**
     * Sets the position where a seek, if executed, would jump to.
     * @param percent a number between 0 and 100
     */
    SeekBar.prototype.setSeekPosition = function (percent) {
        this.setPosition(this.seekBarSeekPosition, percent);
    };
    /**
     * Set the actual position (width or height) of a DOM element that represent a bar in the seek bar.
     * @param element the element to set the position for
     * @param percent a number between 0 and 100
     */
    SeekBar.prototype.setPosition = function (element, percent) {
        var scale = percent / 100;
        // When the scale is exactly 1 or very near 1 (and the browser internally rounds it to 1), browsers seem to render
        // the elements differently and the height gets slightly off, leading to mismatching heights when e.g. the buffer
        // level bar has a width of 1 and the playback position bar has a width < 1. A jittering buffer level around 1
        // leads to an even worse flickering effect.
        // Various changes in CSS styling and DOM hierarchy did not solve the issue so the workaround is to avoid a scale
        // of exactly 1.
        if (scale >= 0.99999 && scale <= 1.00001) {
            scale = 0.99999;
        }
        var style = this.config.vertical ?
            // -ms-transform required for IE9
            // -webkit-transform required for Android 4.4 WebView
            {
                'transform': 'scaleY(' + scale + ')',
                '-ms-transform': 'scaleY(' + scale + ')',
                '-webkit-transform': 'scaleY(' + scale + ')',
            } :
            {
                'transform': 'scaleX(' + scale + ')',
                '-ms-transform': 'scaleX(' + scale + ')',
                '-webkit-transform': 'scaleX(' + scale + ')',
            };
        element.css(style);
    };
    /**
     * Puts the seek bar into or out of seeking state by adding/removing a class to the DOM element. This can be used
     * to adjust the styling while seeking.
     *
     * @param seeking should be true when entering seek state, false when exiting the seek state
     */
    SeekBar.prototype.setSeeking = function (seeking) {
        if (seeking) {
            this.getDomElement().addClass(this.prefixCss(SeekBar.CLASS_SEEKING));
        }
        else {
            this.getDomElement().removeClass(this.prefixCss(SeekBar.CLASS_SEEKING));
        }
    };
    /**
     * Checks if the seek bar is currently in the seek state.
     * @returns {boolean} true if in seek state, else false
     */
    SeekBar.prototype.isSeeking = function () {
        return this.getDomElement().hasClass(this.prefixCss(SeekBar.CLASS_SEEKING));
    };
    /**
     * Checks if the seek bar has a {@link SeekBarLabel}.
     * @returns {boolean} true if the seek bar has a label, else false
     */
    SeekBar.prototype.hasLabel = function () {
        return this.label != null;
    };
    /**
     * Gets the label of this seek bar.
     * @returns {SeekBarLabel} the label if this seek bar has a label, else null
     */
    SeekBar.prototype.getLabel = function () {
        return this.label;
    };
    SeekBar.prototype.onSeekEvent = function () {
        this.seekBarEvents.onSeek.dispatch(this);
    };
    SeekBar.prototype.onSeekPreviewEvent = function (percentage, scrubbing) {
        var snappedMarker = this.getMarkerAtPosition(percentage);
        var seekPositionPercentage = percentage;
        if (snappedMarker) {
            if (snappedMarker.duration > 0) {
                if (percentage < snappedMarker.position) {
                    // Snap the position to the start of the interval if the seek is within the left snap margin
                    // We know that we are within a snap margin when we are outside the marker interval but still
                    // have a snappedMarker
                    seekPositionPercentage = snappedMarker.position;
                }
                else if (percentage > snappedMarker.position + snappedMarker.duration) {
                    // Snap the position to the end of the interval if the seek is within the right snap margin
                    seekPositionPercentage = snappedMarker.position + snappedMarker.duration;
                }
            }
            else {
                // Position markers always snap to their marker position
                seekPositionPercentage = snappedMarker.position;
            }
        }
        if (this.label) {
            this.label.getDomElement().css({
                'left': seekPositionPercentage + '%',
            });
        }
        this.seekBarEvents.onSeekPreview.dispatch(this, {
            scrubbing: scrubbing,
            position: seekPositionPercentage,
            marker: snappedMarker,
        });
    };
    SeekBar.prototype.onSeekedEvent = function (percentage) {
        this.seekBarEvents.onSeeked.dispatch(this, percentage);
    };
    Object.defineProperty(SeekBar.prototype, "onSeek", {
        /**
         * Gets the event that is fired when a scrubbing seek operation is started.
         * @returns {Event<SeekBar, NoArgs>}
         */
        get: function () {
            return this.seekBarEvents.onSeek.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeekBar.prototype, "onSeekPreview", {
        /**
         * Gets the event that is fired during a scrubbing seek (to indicate that the seek preview, i.e. the video frame,
         * should be updated), or during a normal seek preview when the seek bar is hovered (and the seek target,
         * i.e. the seek bar label, should be updated).
         * @returns {Event<SeekBar, SeekPreviewEventArgs>}
         */
        get: function () {
            return this.seekBarEvents.onSeekPreview.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeekBar.prototype, "onSeeked", {
        /**
         * Gets the event that is fired when a scrubbing seek has finished or when a direct seek is issued.
         * @returns {Event<SeekBar, number>}
         */
        get: function () {
            return this.seekBarEvents.onSeeked.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    SeekBar.prototype.onShowEvent = function () {
        _super.prototype.onShowEvent.call(this);
        // Refresh the position of the playback position when the seek bar becomes visible. To correctly set the position,
        // the DOM element must be fully initialized an have its size calculated, because the position is set as an absolute
        // value calculated from the size. This required size is not known when it is hidden.
        // For such cases, we refresh the position here in onShow because here it is guaranteed that the component knows
        // its size and can set the position correctly.
        this.refreshPlaybackPosition();
    };
    return SeekBar;
}(component_1.Component));
SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED = -1;
/**
 * The CSS class that is added to the DOM element while the seek bar is in 'seeking' state.
 */
SeekBar.CLASS_SEEKING = 'seeking';
exports.SeekBar = SeekBar;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var uiutils_1 = __webpack_require__(20);
var spacer_1 = __webpack_require__(21);
/**
 * A container for main player control components, e.g. play toggle button, seek bar, volume control, fullscreen toggle
 * button.
 */
var ControlBar = (function (_super) {
    __extends(ControlBar, _super);
    function ControlBar(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-controlbar',
            hidden: true,
        }, _this.config);
        return _this;
    }
    ControlBar.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        // Counts how many components are hovered and block hiding of the control bar
        var hoverStackCount = 0;
        // Track hover status of child components
        uiutils_1.UIUtils.traverseTree(this, function (component) {
            // Do not track hover status of child containers or spacers, only of 'real' controls
            if (component instanceof container_1.Container || component instanceof spacer_1.Spacer) {
                return;
            }
            // Subscribe hover event and keep a count of the number of hovered children
            component.onHoverChanged.subscribe(function (sender, args) {
                if (args.hovered) {
                    hoverStackCount++;
                }
                else {
                    hoverStackCount--;
                }
            });
        });
        uimanager.onControlsShow.subscribe(function () {
            _this.show();
        });
        uimanager.onPreviewControlsHide.subscribe(function (sender, args) {
            // Cancel the hide event if hovered child components block hiding
            args.cancel = (hoverStackCount > 0);
        });
        uimanager.onControlsHide.subscribe(function () {
            _this.hide();
        });
    };
    return ControlBar;
}(container_1.Container));
exports.ControlBar = ControlBar;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var UIUtils;
(function (UIUtils) {
    function traverseTree(component, visit) {
        var recursiveTreeWalker = function (component, parent) {
            visit(component, parent);
            // If the current component is a container, visit it's children
            if (component instanceof container_1.Container) {
                for (var _i = 0, _a = component.getComponents(); _i < _a.length; _i++) {
                    var childComponent = _a[_i];
                    recursiveTreeWalker(childComponent, component);
                }
            }
        };
        // Walk and configure the component tree
        recursiveTreeWalker(component);
    }
    UIUtils.traverseTree = traverseTree;
})(UIUtils = exports.UIUtils || (exports.UIUtils = {}));


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
/**
 * A dummy component that just reserves some space and does nothing else.
 */
var Spacer = (function (_super) {
    __extends(Spacer, _super);
    function Spacer(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-spacer',
        }, _this.config);
        return _this;
    }
    Spacer.prototype.onShowEvent = function () {
        // disable event firing by overwriting and not calling super
    };
    Spacer.prototype.onHideEvent = function () {
        // disable event firing by overwriting and not calling super
    };
    Spacer.prototype.onHoverChangedEvent = function (hovered) {
        // disable event firing by overwriting and not calling super
    };
    return Spacer;
}(component_1.Component));
exports.Spacer = Spacer;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(2);
var selectbox_1 = __webpack_require__(8);
var label_1 = __webpack_require__(6);
var videoqualityselectbox_1 = __webpack_require__(23);
var audioqualityselectbox_1 = __webpack_require__(24);
var timeout_1 = __webpack_require__(9);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * A panel containing a list of {@link SettingsPanelItem items} that represent labelled settings.
 */
var SettingsPanel = (function (_super) {
    __extends(SettingsPanel, _super);
    function SettingsPanel(config) {
        var _this = _super.call(this, config) || this;
        _this.settingsPanelEvents = {
            onSettingsStateChanged: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-settings-panel',
            hideDelay: 3000,
        }, _this.config);
        return _this;
    }
    SettingsPanel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig(); // TODO fix generics type inference
        if (config.hideDelay > -1) {
            this.hideTimeout = new timeout_1.Timeout(config.hideDelay, function () {
                _this.hide();
                _this.hideHoveredSelectBoxes();
            });
            this.onShow.subscribe(function () {
                // Activate timeout when shown
                _this.hideTimeout.start();
            });
            this.getDomElement().on('mouseenter', function () {
                // On mouse enter clear the timeout
                _this.hideTimeout.clear();
            });
            this.getDomElement().on('mouseleave', function () {
                // On mouse leave activate the timeout
                _this.hideTimeout.reset();
            });
            this.onHide.subscribe(function () {
                // Clear timeout when hidden from outside
                _this.hideTimeout.clear();
            });
        }
        // Fire event when the state of a settings-item has changed
        var settingsStateChangedHandler = function () {
            _this.onSettingsStateChangedEvent();
            // Attach marker class to last visible item
            var lastShownItem = null;
            for (var _i = 0, _a = _this.getItems(); _i < _a.length; _i++) {
                var component = _a[_i];
                component.getDomElement().removeClass(_this.prefixCss(SettingsPanel.CLASS_LAST));
                if (component.isShown()) {
                    lastShownItem = component;
                }
            }
            if (lastShownItem) {
                lastShownItem.getDomElement().addClass(_this.prefixCss(SettingsPanel.CLASS_LAST));
            }
        };
        for (var _i = 0, _a = this.getItems(); _i < _a.length; _i++) {
            var component = _a[_i];
            component.onActiveChanged.subscribe(settingsStateChangedHandler);
        }
    };
    /**
     * Hack for IE + Firefox
     * when the settings panel fades out while an item of a select box is still hovered, the select box will not fade out
     * while the settings panel does. This would leave a floating select box, which is just weird
     */
    SettingsPanel.prototype.hideHoveredSelectBoxes = function () {
        this.getItems().forEach(function (item) {
            if (item.isActive() && item.setting instanceof selectbox_1.SelectBox) {
                var selectBox_1 = item.setting;
                var oldDisplay_1 = selectBox_1.getDomElement().css('display');
                // updating the display to none marks the select-box as inactive, so it will be hidden with the rest
                // we just have to make sure to reset this as soon as possible
                selectBox_1.getDomElement().css('display', 'none');
                if (window.requestAnimationFrame) {
                    requestAnimationFrame(function () { selectBox_1.getDomElement().css('display', oldDisplay_1); });
                }
                else {
                    // IE9 has no requestAnimationFrame, set the value directly. It has no optimization about ignoring DOM-changes
                    // between animationFrames
                    selectBox_1.getDomElement().css('display', oldDisplay_1);
                }
            }
        });
    };
    SettingsPanel.prototype.release = function () {
        _super.prototype.release.call(this);
        if (this.hideTimeout) {
            this.hideTimeout.clear();
        }
    };
    /**
     * Checks if there are active settings within this settings panel. An active setting is a setting that is visible
     * and enabled, which the user can interact with.
     * @returns {boolean} true if there are active settings, false if the panel is functionally empty to a user
     */
    SettingsPanel.prototype.hasActiveSettings = function () {
        for (var _i = 0, _a = this.getItems(); _i < _a.length; _i++) {
            var component = _a[_i];
            if (component.isActive()) {
                return true;
            }
        }
        return false;
    };
    SettingsPanel.prototype.getItems = function () {
        return this.config.components.filter(function (component) { return component instanceof SettingsPanelItem; });
    };
    SettingsPanel.prototype.onSettingsStateChangedEvent = function () {
        this.settingsPanelEvents.onSettingsStateChanged.dispatch(this);
    };
    Object.defineProperty(SettingsPanel.prototype, "onSettingsStateChanged", {
        /**
         * Gets the event that is fired when one or more {@link SettingsPanelItem items} have changed state.
         * @returns {Event<SettingsPanel, NoArgs>}
         */
        get: function () {
            return this.settingsPanelEvents.onSettingsStateChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return SettingsPanel;
}(container_1.Container));
SettingsPanel.CLASS_LAST = 'last';
exports.SettingsPanel = SettingsPanel;
/**
 * An item for a {@link SettingsPanel},
 * Containing an optionnal {@link Label} and a component that configures a setting.
 * If the components is a {@link SelectBox} it will handle the logic of displaying it or not
 */
var SettingsPanelItem = (function (_super) {
    __extends(SettingsPanelItem, _super);
    function SettingsPanelItem(label, setting, config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.settingsPanelItemEvents = {
            onActiveChanged: new eventdispatcher_1.EventDispatcher(),
        };
        _this.setting = setting;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-settings-panel-item',
        }, _this.config);
        if (label !== null) {
            if (label instanceof component_1.Component) {
                _this.label = label;
            }
            else {
                _this.label = new label_1.Label({ text: label });
            }
            _this.addComponent(_this.label);
        }
        _this.addComponent(_this.setting);
        return _this;
    }
    SettingsPanelItem.prototype.configure = function (player, uimanager) {
        var _this = this;
        if (this.setting instanceof selectbox_1.SelectBox) {
            var handleConfigItemChanged = function () {
                if (!(_this.setting instanceof selectbox_1.SelectBox)) {
                    return;
                }
                // The minimum number of items that must be available for the setting to be displayed
                // By default, at least two items must be available, else a selection is not possible
                var minItemsToDisplay = 2;
                // Audio/video quality select boxes contain an additional 'auto' mode, which in combination with a single
                // available quality also does not make sense
                if ((_this.setting instanceof videoqualityselectbox_1.VideoQualitySelectBox && _this.setting.hasAutoItem())
                    || _this.setting instanceof audioqualityselectbox_1.AudioQualitySelectBox) {
                    minItemsToDisplay = 3;
                }
                // Hide the setting if no meaningful choice is available
                if (_this.setting.itemCount() < minItemsToDisplay) {
                    _this.hide();
                }
                else {
                    _this.show();
                }
                // Visibility might have changed and therefore the active state might have changed so we fire the event
                // TODO fire only when state has really changed (e.g. check if visibility has really changed)
                _this.onActiveChangedEvent();
            };
            this.setting.onItemAdded.subscribe(handleConfigItemChanged);
            this.setting.onItemRemoved.subscribe(handleConfigItemChanged);
            // Initialize hidden state
            handleConfigItemChanged();
        }
    };
    /**
     * Checks if this settings panel item is active, i.e. visible and enabled and a user can interact with it.
     * @returns {boolean} true if the panel is active, else false
     */
    SettingsPanelItem.prototype.isActive = function () {
        return this.isShown();
    };
    SettingsPanelItem.prototype.onActiveChangedEvent = function () {
        this.settingsPanelItemEvents.onActiveChanged.dispatch(this);
    };
    Object.defineProperty(SettingsPanelItem.prototype, "onActiveChanged", {
        /**
         * Gets the event that is fired when the 'active' state of this item changes.
         * @see #isActive
         * @returns {Event<SettingsPanelItem, NoArgs>}
         */
        get: function () {
            return this.settingsPanelItemEvents.onActiveChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return SettingsPanelItem;
}(container_1.Container));
exports.SettingsPanelItem = SettingsPanelItem;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection between 'auto' and the available video qualities.
 */
var VideoQualitySelectBox = (function (_super) {
    __extends(VideoQualitySelectBox, _super);
    function VideoQualitySelectBox(config) {
        if (config === void 0) { config = {}; }
        return _super.call(this, config) || this;
    }
    VideoQualitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var selectCurrentVideoQuality = function () {
            if (player.getVideoQuality) {
                // Since player 7.3.1
                _this.selectItem(player.getVideoQuality().id);
            }
            else {
                // Backwards compatibility for players <= 7.3.0
                // TODO remove in next major release
                var data = player.getDownloadedVideoData();
                _this.selectItem(data.isAuto ? 'auto' : data.id);
            }
        };
        var updateVideoQualities = function () {
            var videoQualities = player.getAvailableVideoQualities();
            _this.clearItems();
            // Progressive streams do not support automatic quality selection
            _this.hasAuto = player.getStreamType() !== 'progressive';
            if (_this.hasAuto) {
                // Add entry for automatic quality switching (default setting)
                _this.addItem('auto', 'auto');
            }
            // Add video qualities
            for (var _i = 0, videoQualities_1 = videoQualities; _i < videoQualities_1.length; _i++) {
                var videoQuality = videoQualities_1[_i];
                _this.addItem(videoQuality.id, videoQuality.label);
            }
            // Select initial quality
            selectCurrentVideoQuality();
        };
        this.onItemSelected.subscribe(function (sender, value) {
            player.setVideoQuality(value);
        });
        // Update qualities when source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, updateVideoQualities);
        // Update qualities when a new source is loaded
        player.addEventHandler(player.EVENT.ON_READY, updateVideoQualities);
        // Update qualities when the period within a source changes
        player.addEventHandler(player.EVENT.ON_PERIOD_SWITCHED, updateVideoQualities);
        // Update quality selection when quality is changed (from outside)
        if (player.EVENT.ON_VIDEO_QUALITY_CHANGED) {
            // Since player 7.3.1
            player.addEventHandler(player.EVENT.ON_VIDEO_QUALITY_CHANGED, selectCurrentVideoQuality);
        }
        else {
            // Backwards compatibility for players <= 7.3.0
            // TODO remove in next major release
            player.addEventHandler(player.EVENT.ON_VIDEO_DOWNLOAD_QUALITY_CHANGE, selectCurrentVideoQuality);
        }
    };
    /**
     * Returns true if the select box contains an 'auto' item for automatic quality selection mode.
     * @return {boolean}
     */
    VideoQualitySelectBox.prototype.hasAutoItem = function () {
        return this.hasAuto;
    };
    return VideoQualitySelectBox;
}(selectbox_1.SelectBox));
exports.VideoQualitySelectBox = VideoQualitySelectBox;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection between 'auto' and the available audio qualities.
 */
var AudioQualitySelectBox = (function (_super) {
    __extends(AudioQualitySelectBox, _super);
    function AudioQualitySelectBox(config) {
        if (config === void 0) { config = {}; }
        return _super.call(this, config) || this;
    }
    AudioQualitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var selectCurrentAudioQuality = function () {
            if (player.getAudioQuality) {
                // Since player 7.3.1
                _this.selectItem(player.getAudioQuality().id);
            }
            else {
                // Backwards compatibility for players <= 7.3.0
                // TODO remove in next major release
                var data = player.getDownloadedAudioData();
                _this.selectItem(data.isAuto ? 'auto' : data.id);
            }
        };
        var updateAudioQualities = function () {
            var audioQualities = player.getAvailableAudioQualities();
            _this.clearItems();
            // Add entry for automatic quality switching (default setting)
            _this.addItem('auto', 'auto');
            // Add audio qualities
            for (var _i = 0, audioQualities_1 = audioQualities; _i < audioQualities_1.length; _i++) {
                var audioQuality = audioQualities_1[_i];
                _this.addItem(audioQuality.id, audioQuality.label);
            }
            // Select initial quality
            selectCurrentAudioQuality();
        };
        this.onItemSelected.subscribe(function (sender, value) {
            player.setAudioQuality(value);
        });
        // Update qualities when audio track has changed
        player.addEventHandler(player.EVENT.ON_AUDIO_CHANGED, updateAudioQualities);
        // Update qualities when source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, updateAudioQualities);
        // Update qualities when a new source is loaded
        player.addEventHandler(player.EVENT.ON_READY, updateAudioQualities);
        // Update qualities when the period within a source changes
        player.addEventHandler(player.EVENT.ON_PERIOD_SWITCHED, updateAudioQualities);
        // Update quality selection when quality is changed (from outside)
        if (player.EVENT.ON_AUDIO_QUALITY_CHANGED) {
            // Since player 7.3.1
            player.addEventHandler(player.EVENT.ON_AUDIO_QUALITY_CHANGED, selectCurrentAudioQuality);
        }
        else {
            // Backwards compatibility for players <= 7.3.0
            // TODO remove in next major release
            player.addEventHandler(player.EVENT.ON_AUDIO_DOWNLOAD_QUALITY_CHANGE, selectCurrentAudioQuality);
        }
    };
    return AudioQualitySelectBox;
}(selectbox_1.SelectBox));
exports.AudioQualitySelectBox = AudioQualitySelectBox;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
var SubtitleSettingsButton = (function (_super) {
    __extends(SubtitleSettingsButton, _super);
    function SubtitleSettingsButton(config) {
        var _this = _super.call(this, config) || this;
        _this.subtitleSettingsPanel = config.subtitleSettingsPanel;
        _this.settingsPanel = config.settingsPanel;
        return _this;
    }
    return SubtitleSettingsButton;
}(button_1.Button));
exports.SubtitleSettingsButton = SubtitleSettingsButton;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var seekbar_1 = __webpack_require__(18);
/**
 * A simple volume slider component to adjust the player's volume setting.
 */
var VolumeSlider = (function (_super) {
    __extends(VolumeSlider, _super);
    function VolumeSlider(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-volumeslider',
            hideIfVolumeControlProhibited: true,
        }, _this.config);
        return _this;
    }
    VolumeSlider.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager, false);
        var config = this.getConfig();
        if (config.hideIfVolumeControlProhibited && !this.detectVolumeControlAvailability()) {
            this.hide();
            // We can just return from here, because the user will never interact with the control and any configured
            // functionality would only eat resources for no reason.
            return;
        }
        var volumeChangeHandler = function () {
            if (player.isMuted()) {
                _this.setPlaybackPosition(0);
            }
            else {
                _this.setPlaybackPosition(player.getVolume());
            }
        };
        player.addEventHandler(player.EVENT.ON_READY, volumeChangeHandler);
        player.addEventHandler(player.EVENT.ON_VOLUME_CHANGED, volumeChangeHandler);
        player.addEventHandler(player.EVENT.ON_MUTED, volumeChangeHandler);
        player.addEventHandler(player.EVENT.ON_UNMUTED, volumeChangeHandler);
        this.onSeekPreview.subscribeRateLimited(function (sender, args) {
            if (args.scrubbing) {
                player.setVolume(args.position, VolumeSlider.issuerName);
            }
        }, 50);
        this.onSeeked.subscribe(function (sender, percentage) {
            player.setVolume(percentage, VolumeSlider.issuerName);
        });
        // Update the volume slider marker when the player resized, a source is loaded and player is ready,
        // or the UI is configured. Check the seekbar for a detailed description.
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () {
            _this.refreshPlaybackPosition();
        });
        player.addEventHandler(player.EVENT.ON_READY, function () {
            _this.refreshPlaybackPosition();
        });
        uimanager.onConfigured.subscribe(function () {
            _this.refreshPlaybackPosition();
        });
        // Init volume bar
        volumeChangeHandler();
    };
    VolumeSlider.prototype.detectVolumeControlAvailability = function () {
        /*
         * "On iOS devices, the audio level is always under the user’s physical control. The volume property is not
         * settable in JavaScript. Reading the volume property always returns 1."
         * https://developer.apple.com/library/content/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html
         */
        // as muted autoplay gets paused as soon as we unmute it, we may not touch the volume of the actual player so we
        // probe a dummy audio element
        var dummyVideoElement = document.createElement('video');
        // try setting the volume to 0.7 and if it's still 1 we are on a volume control restricted device
        dummyVideoElement.volume = 0.7;
        return dummyVideoElement.volume !== 1;
    };
    return VolumeSlider;
}(seekbar_1.SeekBar));
VolumeSlider.issuerName = 'ui';
exports.VolumeSlider = VolumeSlider;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var label_1 = __webpack_require__(6);
/**
 * Enumerates the types of content that the {@link MetadataLabel} can display.
 */
var MetadataLabelContent;
(function (MetadataLabelContent) {
    /**
     * Title of the data source.
     */
    MetadataLabelContent[MetadataLabelContent["Title"] = 0] = "Title";
    /**
     * Description fo the data source.
     */
    MetadataLabelContent[MetadataLabelContent["Description"] = 1] = "Description";
})(MetadataLabelContent = exports.MetadataLabelContent || (exports.MetadataLabelContent = {}));
/**
 * A label that can be configured to display certain metadata.
 */
var MetadataLabel = (function (_super) {
    __extends(MetadataLabel, _super);
    function MetadataLabel(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClasses: ['label-metadata', 'label-metadata-' + MetadataLabelContent[config.content].toLowerCase()],
        }, _this.config);
        return _this;
    }
    MetadataLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var uiconfig = uimanager.getConfig();
        var init = function () {
            switch (config.content) {
                case MetadataLabelContent.Title:
                    _this.setText(uiconfig.metadata.title);
                    break;
                case MetadataLabelContent.Description:
                    _this.setText(uiconfig.metadata.description);
                    break;
            }
        };
        var unload = function () {
            _this.setText(null);
        };
        // Init label
        init();
        // Reinit label when a new source is loaded
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, init);
        // Clear labels when source is unloaded
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, unload);
    };
    return MetadataLabel;
}(label_1.Label));
exports.MetadataLabel = MetadataLabel;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
/**
 * A click overlay that opens an url in a new tab if clicked.
 */
var ClickOverlay = (function (_super) {
    __extends(ClickOverlay, _super);
    function ClickOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-clickoverlay',
        }, _this.config);
        return _this;
    }
    ClickOverlay.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.setUrl(this.config.url);
        var element = this.getDomElement();
        element.on('click', function () {
            if (element.data('url')) {
                window.open(element.data('url'), '_blank');
            }
        });
    };
    /**
     * Gets the URL that should be followed when the watermark is clicked.
     * @returns {string} the watermark URL
     */
    ClickOverlay.prototype.getUrl = function () {
        return this.getDomElement().data('url');
    };
    ClickOverlay.prototype.setUrl = function (url) {
        if (url === undefined || url == null) {
            url = '';
        }
        this.getDomElement().data('url', url);
    };
    return ClickOverlay;
}(button_1.Button));
exports.ClickOverlay = ClickOverlay;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles the player between windowed and fullscreen view.
 */
var FullscreenToggleButton = (function (_super) {
    __extends(FullscreenToggleButton, _super);
    function FullscreenToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-fullscreentogglebutton',
            text: 'Fullscreen',
        }, _this.config);
        return _this;
    }
    FullscreenToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var fullscreenStateHandler = function () {
            if (player.isFullscreen()) {
                _this.on();
            }
            else {
                _this.off();
            }
        };
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_ENTER, fullscreenStateHandler);
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_EXIT, fullscreenStateHandler);
        this.onClick.subscribe(function () {
            if (player.isFullscreen()) {
                player.exitFullscreen();
            }
            else {
                player.enterFullscreen();
            }
        });
        // Startup init
        fullscreenStateHandler();
    };
    return FullscreenToggleButton;
}(togglebutton_1.ToggleButton));
exports.FullscreenToggleButton = FullscreenToggleButton;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles the video view between normal/mono and VR/stereo.
 */
var VRToggleButton = (function (_super) {
    __extends(VRToggleButton, _super);
    function VRToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-vrtogglebutton',
            text: 'VR',
        }, _this.config);
        return _this;
    }
    VRToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var isVRConfigured = function () {
            // VR availability cannot be checked through getVRStatus() because it is asynchronously populated and not
            // available at UI initialization. As an alternative, we check the VR settings in the config.
            // TODO use getVRStatus() through isVRStereoAvailable() once the player has been rewritten and the status is
            // available in ON_READY
            var config = player.getConfig();
            return config.source && config.source.vr && config.source.vr.contentType !== 'none';
        };
        var isVRStereoAvailable = function () {
            return player.getVRStatus().contentType !== 'none';
        };
        var vrStateHandler = function () {
            if (isVRConfigured() && isVRStereoAvailable()) {
                _this.show(); // show button in case it is hidden
                if (player.getVRStatus().isStereo) {
                    _this.on();
                }
                else {
                    _this.off();
                }
            }
            else {
                _this.hide(); // hide button if no stereo mode available
            }
        };
        var vrButtonVisibilityHandler = function () {
            if (isVRConfigured()) {
                _this.show();
            }
            else {
                _this.hide();
            }
        };
        player.addEventHandler(player.EVENT.ON_VR_MODE_CHANGED, vrStateHandler);
        player.addEventHandler(player.EVENT.ON_VR_STEREO_CHANGED, vrStateHandler);
        player.addEventHandler(player.EVENT.ON_VR_ERROR, vrStateHandler);
        // Hide button when VR source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, vrButtonVisibilityHandler);
        // Show button when a new source is loaded and it's VR
        player.addEventHandler(player.EVENT.ON_READY, vrButtonVisibilityHandler);
        this.onClick.subscribe(function () {
            if (!isVRStereoAvailable()) {
                if (console) {
                    console.log('No VR content');
                }
            }
            else {
                if (player.getVRStatus().isStereo) {
                    player.setVRStereo(false);
                }
                else {
                    player.setVRStereo(true);
                }
            }
        });
        // Set startup visibility
        vrButtonVisibilityHandler();
    };
    return VRToggleButton;
}(togglebutton_1.ToggleButton));
exports.VRToggleButton = VRToggleButton;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var label_1 = __webpack_require__(6);
var playerutils_1 = __webpack_require__(12);
var stringutils_1 = __webpack_require__(10);
var PlaybackTimeLabelMode;
(function (PlaybackTimeLabelMode) {
    PlaybackTimeLabelMode[PlaybackTimeLabelMode["CurrentTime"] = 0] = "CurrentTime";
    PlaybackTimeLabelMode[PlaybackTimeLabelMode["TotalTime"] = 1] = "TotalTime";
    PlaybackTimeLabelMode[PlaybackTimeLabelMode["CurrentAndTotalTime"] = 2] = "CurrentAndTotalTime";
})(PlaybackTimeLabelMode = exports.PlaybackTimeLabelMode || (exports.PlaybackTimeLabelMode = {}));
/**
 * A label that display the current playback time and the total time through {@link PlaybackTimeLabel#setTime setTime}
 * or any string through {@link PlaybackTimeLabel#setText setText}.
 */
var PlaybackTimeLabel = (function (_super) {
    __extends(PlaybackTimeLabel, _super);
    function PlaybackTimeLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-playbacktimelabel',
            timeLabelMode: PlaybackTimeLabelMode.CurrentAndTotalTime,
            hideInLivePlayback: false,
        }, _this.config);
        return _this;
    }
    PlaybackTimeLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var live = false;
        var liveCssClass = this.prefixCss('ui-playbacktimelabel-live');
        var liveEdgeCssClass = this.prefixCss('ui-playbacktimelabel-live-edge');
        var minWidth = 0;
        var liveClickHandler = function () {
            player.timeShift(0);
        };
        var updateLiveState = function () {
            // Player is playing a live stream when the duration is infinite
            live = player.isLive();
            // Attach/detach live marker class
            if (live) {
                _this.getDomElement().addClass(liveCssClass);
                _this.setText('Live');
                if (config.hideInLivePlayback) {
                    _this.hide();
                }
                _this.onClick.subscribe(liveClickHandler);
                updateLiveTimeshiftState();
            }
            else {
                _this.getDomElement().removeClass(liveCssClass);
                _this.getDomElement().removeClass(liveEdgeCssClass);
                _this.show();
                _this.onClick.unsubscribe(liveClickHandler);
            }
        };
        var updateLiveTimeshiftState = function () {
            if (!live) {
                return;
            }
            // The player is only at the live edge iff the stream is not shifted and it is actually playing or playback has
            // never been started (meaning it isn't paused). A player that is paused is always behind the live edge.
            // An exception is made for live streams without a timeshift window, because here we "stop" playback instead
            // of pausing it (from a UI perspective), so we keep the live edge indicator on because a play would always
            // resume at the live edge.
            var isTimeshifted = player.getTimeShift() < 0;
            var isTimeshiftAvailable = player.getMaxTimeShift() < 0;
            if (!isTimeshifted && (!player.isPaused() || !isTimeshiftAvailable)) {
                _this.getDomElement().addClass(liveEdgeCssClass);
            }
            else {
                _this.getDomElement().removeClass(liveEdgeCssClass);
            }
        };
        var liveStreamDetector = new playerutils_1.PlayerUtils.LiveStreamDetector(player);
        liveStreamDetector.onLiveChanged.subscribe(function (sender, args) {
            live = args.live;
            updateLiveState();
        });
        liveStreamDetector.detect(); // Initial detection
        var playbackTimeHandler = function () {
            if (!live && player.getDuration() !== Infinity) {
                _this.setTime(player.getCurrentTime(), player.getDuration());
            }
            // To avoid 'jumping' in the UI by varying label sizes due to non-monospaced fonts,
            // we gradually increase the min-width with the content to reach a stable size.
            var width = _this.getDomElement().width();
            if (width > minWidth) {
                minWidth = width;
                _this.getDomElement().css({
                    'min-width': minWidth + 'px',
                });
            }
        };
        player.addEventHandler(player.EVENT.ON_TIME_CHANGED, playbackTimeHandler);
        player.addEventHandler(player.EVENT.ON_SEEKED, playbackTimeHandler);
        player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, playbackTimeHandler);
        player.addEventHandler(player.EVENT.ON_TIME_SHIFT, updateLiveTimeshiftState);
        player.addEventHandler(player.EVENT.ON_TIME_SHIFTED, updateLiveTimeshiftState);
        player.addEventHandler(player.EVENT.ON_PLAY, updateLiveTimeshiftState);
        player.addEventHandler(player.EVENT.ON_PAUSED, updateLiveTimeshiftState);
        var init = function () {
            // Reset min-width when a new source is ready (especially for switching VOD/Live modes where the label content
            // changes)
            minWidth = 0;
            _this.getDomElement().css({
                'min-width': null,
            });
            // Set time format depending on source duration
            _this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?
                stringutils_1.StringUtils.FORMAT_HHMMSS : stringutils_1.StringUtils.FORMAT_MMSS;
            // Update time after the format has been set
            playbackTimeHandler();
        };
        player.addEventHandler(player.EVENT.ON_READY, init);
        init();
    };
    /**
     * Sets the current playback time and total duration.
     * @param playbackSeconds the current playback time in seconds
     * @param durationSeconds the total duration in seconds
     */
    PlaybackTimeLabel.prototype.setTime = function (playbackSeconds, durationSeconds) {
        var currentTime = stringutils_1.StringUtils.secondsToTime(playbackSeconds, this.timeFormat);
        var totalTime = stringutils_1.StringUtils.secondsToTime(durationSeconds, this.timeFormat);
        switch (this.config.timeLabelMode) {
            case PlaybackTimeLabelMode.CurrentTime:
                this.setText("" + currentTime);
                break;
            case PlaybackTimeLabelMode.TotalTime:
                this.setText("" + totalTime);
                break;
            case PlaybackTimeLabelMode.CurrentAndTotalTime:
                this.setText(currentTime + " / " + totalTime);
                break;
        }
    };
    /**
     * Sets the current time format
     * @param timeFormat the time format
     */
    PlaybackTimeLabel.prototype.setTimeFormat = function (timeFormat) {
        this.timeFormat = timeFormat;
    };
    return PlaybackTimeLabel;
}(label_1.Label));
exports.PlaybackTimeLabel = PlaybackTimeLabel;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles visibility of a settings panel.
 */
var SettingsToggleButton = (function (_super) {
    __extends(SettingsToggleButton, _super);
    function SettingsToggleButton(config) {
        var _this = _super.call(this, config) || this;
        if (!config.settingsPanel) {
            throw new Error('Required SettingsPanel is missing');
        }
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-settingstogglebutton',
            text: 'Settings',
            settingsPanel: null,
            autoHideWhenNoActiveSettings: true,
        }, _this.config);
        return _this;
    }
    SettingsToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig(); // TODO fix generics type inference
        var settingsPanel = config.settingsPanel;
        this.onClick.subscribe(function () {
            settingsPanel.toggleHidden();
        });
        settingsPanel.onShow.subscribe(function () {
            // Set toggle status to on when the settings panel shows
            _this.on();
        });
        settingsPanel.onHide.subscribe(function () {
            // Set toggle status to off when the settings panel hides
            _this.off();
        });
        // Handle automatic hiding of the button if there are no settings for the user to interact with
        if (config.autoHideWhenNoActiveSettings) {
            // Setup handler to show/hide button when the settings change
            var settingsPanelItemsChangedHandler = function () {
                if (settingsPanel.hasActiveSettings()) {
                    if (_this.isHidden()) {
                        _this.show();
                    }
                }
                else {
                    if (_this.isShown()) {
                        _this.hide();
                    }
                }
            };
            // Wire the handler to the event
            settingsPanel.onSettingsStateChanged.subscribe(settingsPanelItemsChangedHandler);
            // Call handler for first init at startup
            settingsPanelItemsChangedHandler();
        }
    };
    return SettingsToggleButton;
}(togglebutton_1.ToggleButton));
exports.SettingsToggleButton = SettingsToggleButton;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var eventdispatcher_1 = __webpack_require__(3);
var arrayutils_1 = __webpack_require__(11);
var ListSelector = (function (_super) {
    __extends(ListSelector, _super);
    function ListSelector(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.listSelectorEvents = {
            onItemAdded: new eventdispatcher_1.EventDispatcher(),
            onItemRemoved: new eventdispatcher_1.EventDispatcher(),
            onItemSelected: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            items: [],
            cssClass: 'ui-listselector',
        }, _this.config);
        _this.items = _this.config.items;
        return _this;
    }
    ListSelector.prototype.getItemIndex = function (key) {
        for (var index in this.items) {
            if (key === this.items[index].key) {
                return parseInt(index);
            }
        }
        return -1;
    };
    /**
     * Checks if the specified item is part of this selector.
     * @param key the key of the item to check
     * @returns {boolean} true if the item is part of this selector, else false
     */
    ListSelector.prototype.hasItem = function (key) {
        return this.getItemIndex(key) > -1;
    };
    /**
     * Adds an item to this selector by appending it to the end of the list of items. If an item with the specified
     * key already exists, it is replaced.
     * @param key the key of the item to add
     * @param label the (human-readable) label of the item to add
     */
    ListSelector.prototype.addItem = function (key, label) {
        var listItem = { key: key, label: label };
        // Apply filter function
        if (this.config.filter && !this.config.filter(listItem)) {
            return;
        }
        // Apply translator function
        if (this.config.translator) {
            listItem.label = this.config.translator(listItem);
        }
        this.removeItem(key); // Try to remove key first to get overwrite behavior and avoid duplicate keys
        this.items.push(listItem);
        this.onItemAddedEvent(key);
    };
    /**
     * Removes an item from this selector.
     * @param key the key of the item to remove
     * @returns {boolean} true if removal was successful, false if the item is not part of this selector
     */
    ListSelector.prototype.removeItem = function (key) {
        var index = this.getItemIndex(key);
        if (index > -1) {
            arrayutils_1.ArrayUtils.remove(this.items, this.items[index]);
            this.onItemRemovedEvent(key);
            return true;
        }
        return false;
    };
    /**
     * Selects an item from the items in this selector.
     * @param key the key of the item to select
     * @returns {boolean} true is the selection was successful, false if the selected item is not part of the selector
     */
    ListSelector.prototype.selectItem = function (key) {
        if (key === this.selectedItem) {
            // itemConfig is already selected, suppress any further action
            return true;
        }
        var index = this.getItemIndex(key);
        if (index > -1) {
            this.selectedItem = key;
            this.onItemSelectedEvent(key);
            return true;
        }
        return false;
    };
    /**
     * Returns the key of the selected item.
     * @returns {string} the key of the selected item or null if no item is selected
     */
    ListSelector.prototype.getSelectedItem = function () {
        return this.selectedItem;
    };
    /**
     * Removes all items from this selector.
     */
    ListSelector.prototype.clearItems = function () {
        // local copy for iteration after clear
        var items = this.items;
        // clear items
        this.items = [];
        // clear the selection as the selected item is also removed
        this.selectedItem = null;
        // fire events
        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
            var item = items_1[_i];
            this.onItemRemovedEvent(item.key);
        }
    };
    /**
     * Returns the number of items in this selector.
     * @returns {number}
     */
    ListSelector.prototype.itemCount = function () {
        return Object.keys(this.items).length;
    };
    ListSelector.prototype.onItemAddedEvent = function (key) {
        this.listSelectorEvents.onItemAdded.dispatch(this, key);
    };
    ListSelector.prototype.onItemRemovedEvent = function (key) {
        this.listSelectorEvents.onItemRemoved.dispatch(this, key);
    };
    ListSelector.prototype.onItemSelectedEvent = function (key) {
        this.listSelectorEvents.onItemSelected.dispatch(this, key);
    };
    Object.defineProperty(ListSelector.prototype, "onItemAdded", {
        /**
         * Gets the event that is fired when an item is added to the list of items.
         * @returns {Event<ListSelector<Config>, string>}
         */
        get: function () {
            return this.listSelectorEvents.onItemAdded.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListSelector.prototype, "onItemRemoved", {
        /**
         * Gets the event that is fired when an item is removed from the list of items.
         * @returns {Event<ListSelector<Config>, string>}
         */
        get: function () {
            return this.listSelectorEvents.onItemRemoved.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListSelector.prototype, "onItemSelected", {
        /**
         * Gets the event that is fired when an item is selected from the list of items.
         * @returns {Event<ListSelector<Config>, string>}
         */
        get: function () {
            return this.listSelectorEvents.onItemSelected.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return ListSelector;
}(component_1.Component));
exports.ListSelector = ListSelector;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var settingspanel_1 = __webpack_require__(22);
var fontcolorselectbox_1 = __webpack_require__(35);
var fontopacityselectbox_1 = __webpack_require__(36);
var fontfamilyselectbox_1 = __webpack_require__(37);
var fontsizeselectbox_1 = __webpack_require__(38);
var backgroundcolorselectbox_1 = __webpack_require__(39);
var backgroundopacityselectbox_1 = __webpack_require__(40);
var windowcolorselectbox_1 = __webpack_require__(41);
var windowopacityselectbox_1 = __webpack_require__(42);
var characteredgeselectbox_1 = __webpack_require__(43);
var subtitlesettingsmanager_1 = __webpack_require__(73);
var subtitlesettingsclosebutton_1 = __webpack_require__(45);
var subtitlesettingsresetbutton_1 = __webpack_require__(46);
/**
 * SubtitleSettingsPanel is a settings panel specific to subtitles settings
 **/
var SubtitleSettingsPanel = (function (_super) {
    __extends(SubtitleSettingsPanel, _super);
    function SubtitleSettingsPanel(config) {
        var _this = _super.call(this, config) || this;
        _this.overlay = config.overlay;
        var manager = new subtitlesettingsmanager_1.SubtitleSettingsManager();
        _this.config = _this.mergeConfig(config, {
            components: [
                new settingspanel_1.SettingsPanelItem('Font size', new fontsizeselectbox_1.FontSizeSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Font family', new fontfamilyselectbox_1.FontFamilySelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Font color', new fontcolorselectbox_1.FontColorSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Font opacity', new fontopacityselectbox_1.FontOpacitySelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Character edge', new characteredgeselectbox_1.CharacterEdgeSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Background color', new backgroundcolorselectbox_1.BackgroundColorSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Background opacity', new backgroundopacityselectbox_1.BackgroundOpacitySelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Window color', new windowcolorselectbox_1.WindowColorSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Window opacity', new windowopacityselectbox_1.WindowOpacitySelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem(new subtitlesettingsclosebutton_1.SubtitleSettingsCloseButton({
                    subtitleSettingsPanel: _this, settingsPanel: config.settingsPanel,
                }), new subtitlesettingsresetbutton_1.SubtitleSettingsResetButton({
                    settingsManager: manager,
                })),
            ],
        }, _this.config);
        return _this;
    }
    SubtitleSettingsPanel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onShow.subscribe(function () {
            _this.overlay.enablePreviewSubtitleLabel();
        });
        this.onHide.subscribe(function () {
            _this.overlay.removePreviewSubtitleLabel();
        });
    };
    return SubtitleSettingsPanel;
}(settingspanel_1.SettingsPanel));
exports.SubtitleSettingsPanel = SubtitleSettingsPanel;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different font colors.
 */
var FontColorSelectBox = (function (_super) {
    __extends(FontColorSelectBox, _super);
    function FontColorSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontColorSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('white', 'white');
        this.addItem('black', 'black');
        this.addItem('red', 'red');
        this.addItem('green', 'green');
        this.addItem('blue', 'blue');
        this.addItem('cyan', 'cyan');
        this.addItem('yellow', 'yellow');
        this.addItem('magenta', 'magenta');
        var setColorAndOpacity = function () {
            if (_this.settingsManager.fontColor.isSet() && _this.settingsManager.fontOpacity.isSet()) {
                _this.toggleOverlayClass('fontcolor-' + _this.settingsManager.fontColor.value + _this.settingsManager.fontOpacity.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
        };
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.fontColor.value = key;
        });
        this.settingsManager.fontColor.onChanged.subscribe(function (sender, property) {
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.fontColor.isSet()) {
                // ... clear the opacity when the color is not set
                _this.settingsManager.fontOpacity.clear();
            }
            else if (!_this.settingsManager.fontOpacity.isSet()) {
                // ... set an opacity when the color is set
                _this.settingsManager.fontOpacity.value = '100';
            }
            _this.selectItem(property.value);
            setColorAndOpacity();
        });
        this.settingsManager.fontOpacity.onChanged.subscribe(function () {
            setColorAndOpacity();
        });
        // Load initial value
        if (this.settingsManager.fontColor.isSet()) {
            this.selectItem(this.settingsManager.fontColor.value);
        }
    };
    return FontColorSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.FontColorSelectBox = FontColorSelectBox;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different font colors.
 */
var FontOpacitySelectBox = (function (_super) {
    __extends(FontOpacitySelectBox, _super);
    function FontOpacitySelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontOpacitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('100', '100%');
        this.addItem('75', '75%');
        this.addItem('50', '50%');
        this.addItem('25', '25%');
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.fontOpacity.value = key;
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.fontOpacity.isSet()) {
                // ... clear the color when the opacity is not set
                _this.settingsManager.fontColor.clear();
            }
            else if (!_this.settingsManager.fontColor.isSet()) {
                // ... set a color when the opacity is set
                _this.settingsManager.fontColor.value = 'white';
            }
        });
        // Update selected item when value is set from somewhere else
        this.settingsManager.fontOpacity.onChanged.subscribe(function (sender, property) {
            _this.selectItem(property.value);
        });
        // Load initial value
        if (this.settingsManager.fontOpacity.isSet()) {
            this.selectItem(this.settingsManager.fontOpacity.value);
        }
    };
    return FontOpacitySelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.FontOpacitySelectBox = FontOpacitySelectBox;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different font family.
 */
var FontFamilySelectBox = (function (_super) {
    __extends(FontFamilySelectBox, _super);
    function FontFamilySelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontFamilySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('monospacedserif', 'monospaced serif');
        this.addItem('proportionalserif', 'proportional serif');
        this.addItem('monospacedsansserif', 'monospaced sans serif');
        this.addItem('proportionalsansserif', 'proportional sans serif');
        this.addItem('casual', 'casual');
        this.addItem('cursive', 'cursive');
        this.addItem('smallcapital', 'small capital');
        this.settingsManager.fontFamily.onChanged.subscribe(function (sender, property) {
            if (property.isSet()) {
                _this.toggleOverlayClass('fontfamily-' + property.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
            // Select the item in case the property was set from outside
            _this.selectItem(property.value);
        });
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.fontFamily.value = key;
        });
        // Load initial value
        if (this.settingsManager.fontFamily.isSet()) {
            this.selectItem(this.settingsManager.fontFamily.value);
        }
    };
    return FontFamilySelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.FontFamilySelectBox = FontFamilySelectBox;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different font colors.
 */
var FontSizeSelectBox = (function (_super) {
    __extends(FontSizeSelectBox, _super);
    function FontSizeSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontSizeSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('50', '50%');
        this.addItem('75', '75%');
        this.addItem('100', '100%');
        this.addItem('150', '150%');
        this.addItem('200', '200%');
        this.addItem('300', '300%');
        this.addItem('400', '400%');
        this.settingsManager.fontSize.onChanged.subscribe(function (sender, property) {
            if (property.isSet()) {
                _this.toggleOverlayClass('fontsize-' + property.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
            // Select the item in case the property was set from outside
            _this.selectItem(property.value);
        });
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.fontSize.value = key;
        });
        // Load initial value
        if (this.settingsManager.fontSize.isSet()) {
            this.selectItem(this.settingsManager.fontSize.value);
        }
    };
    return FontSizeSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.FontSizeSelectBox = FontSizeSelectBox;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different background colors.
 */
var BackgroundColorSelectBox = (function (_super) {
    __extends(BackgroundColorSelectBox, _super);
    function BackgroundColorSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BackgroundColorSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('white', 'white');
        this.addItem('black', 'black');
        this.addItem('red', 'red');
        this.addItem('green', 'green');
        this.addItem('blue', 'blue');
        this.addItem('cyan', 'cyan');
        this.addItem('yellow', 'yellow');
        this.addItem('magenta', 'magenta');
        var setColorAndOpacity = function () {
            if (_this.settingsManager.backgroundColor.isSet() && _this.settingsManager.backgroundOpacity.isSet()) {
                _this.toggleOverlayClass('bgcolor-' + _this.settingsManager.backgroundColor.value + _this.settingsManager.backgroundOpacity.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
        };
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.backgroundColor.value = key;
        });
        this.settingsManager.backgroundColor.onChanged.subscribe(function (sender, property) {
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.backgroundColor.isSet()) {
                // ... clear the opacity when the color is not set
                _this.settingsManager.backgroundOpacity.clear();
            }
            else if (!_this.settingsManager.backgroundOpacity.isSet()) {
                // ... set an opacity when the color is set
                _this.settingsManager.backgroundOpacity.value = '100';
            }
            _this.selectItem(property.value);
            setColorAndOpacity();
        });
        this.settingsManager.backgroundOpacity.onChanged.subscribe(function () {
            setColorAndOpacity();
        });
        // Load initial value
        if (this.settingsManager.backgroundColor.isSet()) {
            this.selectItem(this.settingsManager.backgroundColor.value);
        }
    };
    return BackgroundColorSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.BackgroundColorSelectBox = BackgroundColorSelectBox;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different background opacity.
 */
var BackgroundOpacitySelectBox = (function (_super) {
    __extends(BackgroundOpacitySelectBox, _super);
    function BackgroundOpacitySelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BackgroundOpacitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('100', '100%');
        this.addItem('75', '75%');
        this.addItem('50', '50%');
        this.addItem('25', '25%');
        this.addItem('0', '0%');
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.backgroundOpacity.value = key;
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.backgroundOpacity.isSet()) {
                // ... clear the color when the opacity is not set
                _this.settingsManager.backgroundColor.clear();
            }
            else if (!_this.settingsManager.backgroundColor.isSet()) {
                // ... set a color when the opacity is set
                _this.settingsManager.backgroundColor.value = 'black';
            }
        });
        // Update selected item when value is set from somewhere else
        this.settingsManager.backgroundOpacity.onChanged.subscribe(function (sender, property) {
            _this.selectItem(property.value);
        });
        // Load initial value
        if (this.settingsManager.backgroundOpacity.isSet()) {
            this.selectItem(this.settingsManager.backgroundOpacity.value);
        }
    };
    return BackgroundOpacitySelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.BackgroundOpacitySelectBox = BackgroundOpacitySelectBox;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different background colors.
 */
var WindowColorSelectBox = (function (_super) {
    __extends(WindowColorSelectBox, _super);
    function WindowColorSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WindowColorSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('white', 'white');
        this.addItem('black', 'black');
        this.addItem('red', 'red');
        this.addItem('green', 'green');
        this.addItem('blue', 'blue');
        this.addItem('cyan', 'cyan');
        this.addItem('yellow', 'yellow');
        this.addItem('magenta', 'magenta');
        var setColorAndOpacity = function () {
            if (_this.settingsManager.windowColor.isSet() && _this.settingsManager.windowOpacity.isSet()) {
                _this.toggleOverlayClass('windowcolor-' + _this.settingsManager.windowColor.value + _this.settingsManager.windowOpacity.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
        };
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.windowColor.value = key;
        });
        this.settingsManager.windowColor.onChanged.subscribe(function (sender, property) {
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.windowColor.isSet()) {
                // ... clear the opacity when the color is not set
                _this.settingsManager.windowOpacity.clear();
            }
            else if (!_this.settingsManager.windowOpacity.isSet()) {
                // ... set an opacity when the color is set
                _this.settingsManager.windowOpacity.value = '100';
            }
            _this.selectItem(property.value);
            setColorAndOpacity();
        });
        this.settingsManager.windowOpacity.onChanged.subscribe(function () {
            setColorAndOpacity();
        });
        // Load initial value
        if (this.settingsManager.windowColor.isSet()) {
            this.selectItem(this.settingsManager.windowColor.value);
        }
    };
    return WindowColorSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.WindowColorSelectBox = WindowColorSelectBox;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different background opacity.
 */
var WindowOpacitySelectBox = (function (_super) {
    __extends(WindowOpacitySelectBox, _super);
    function WindowOpacitySelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WindowOpacitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('100', '100%');
        this.addItem('75', '75%');
        this.addItem('50', '50%');
        this.addItem('25', '25%');
        this.addItem('0', '0%');
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.windowOpacity.value = key;
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.windowOpacity.isSet()) {
                // ... clear the color when the opacity is not set
                _this.settingsManager.windowColor.clear();
            }
            else if (!_this.settingsManager.windowColor.isSet()) {
                // ... set a color when the opacity is set
                _this.settingsManager.windowColor.value = 'black';
            }
        });
        // Update selected item when value is set from somewhere else
        this.settingsManager.windowOpacity.onChanged.subscribe(function (sender, property) {
            _this.selectItem(property.value);
        });
        // Load initial value
        if (this.settingsManager.windowOpacity.isSet()) {
            this.selectItem(this.settingsManager.windowOpacity.value);
        }
    };
    return WindowOpacitySelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.WindowOpacitySelectBox = WindowOpacitySelectBox;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different character edge.
 */
var CharacterEdgeSelectBox = (function (_super) {
    __extends(CharacterEdgeSelectBox, _super);
    function CharacterEdgeSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CharacterEdgeSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('raised', 'raised');
        this.addItem('depressed', 'depressed');
        this.addItem('uniform', 'uniform');
        this.addItem('dropshadowed', 'drop shadowed');
        this.settingsManager.characterEdge.onChanged.subscribe(function (sender, property) {
            if (property.isSet()) {
                _this.toggleOverlayClass('characteredge-' + property.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
            // Select the item in case the property was set from outside
            _this.selectItem(property.value);
        });
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.characterEdge.value = key;
        });
        // Load initial value
        if (this.settingsManager.characterEdge.isSet()) {
            this.selectItem(this.settingsManager.characterEdge.value);
        }
    };
    return CharacterEdgeSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.CharacterEdgeSelectBox = CharacterEdgeSelectBox;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var StorageUtils;
(function (StorageUtils) {
    var hasLocalStorageCache;
    function hasLocalStorage() {
        if (hasLocalStorageCache) {
            return hasLocalStorageCache;
        }
        // hasLocalStorage is used to safely ensure we can use localStorage
        // taken from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage
        var storage = window['localStorage'];
        try {
            var x = '__storage_test__';
            storage.setItem(x, x);
            storage.removeItem(x);
            hasLocalStorageCache = true;
        }
        catch (e) {
            hasLocalStorageCache = e instanceof DOMException && (
            // everything except Firefox
            e.code === 22 ||
                // Firefox
                e.code === 1014 ||
                // test name field too, because code might not be present
                // everything except Firefox
                e.name === 'QuotaExceededError' ||
                // Firefox
                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&
                // acknowledge QuotaExceededError only if there's something already stored
                storage.length !== 0;
        }
        return hasLocalStorageCache;
    }
    StorageUtils.hasLocalStorage = hasLocalStorage;
    /**
     * Stores a string item into localStorage.
     * @param key the item's key
     * @param data the item's data
     */
    function setItem(key, data) {
        if (StorageUtils.hasLocalStorage()) {
            window.localStorage.setItem(key, data);
        }
    }
    StorageUtils.setItem = setItem;
    /**
     * Gets an item's string value from the localStorage.
     * @param key the key to look up its associated value
     * @return {string | null} Returns the string if found, null if there is no data stored for the key
     */
    function getItem(key) {
        if (StorageUtils.hasLocalStorage()) {
            return window.localStorage.getItem(key);
        }
        else {
            return null;
        }
    }
    StorageUtils.getItem = getItem;
    /**
     * Stores an object into localStorage. The object will be serialized to JSON. The following types are supported
     * in addition to the default types:
     *  - ColorUtils.Color
     *
     * @param key the key to store the data to
     * @param data the object to store
     */
    function setObject(key, data) {
        if (StorageUtils.hasLocalStorage()) {
            var json = JSON.stringify(data);
            setItem(key, json);
        }
    }
    StorageUtils.setObject = setObject;
    /**
     * Gets an object for the given key from localStorage. The object will be deserialized from JSON. Beside the
     * default types, the following types are supported:
     *  - ColorUtils.Color
     *
     * @param key the key to look up its associated object
     * @return {any} Returns the object if found, null otherwise
     */
    function getObject(key) {
        if (StorageUtils.hasLocalStorage()) {
            var json = getItem(key);
            if (key) {
                var object = JSON.parse(json);
                return object;
            }
        }
        return null;
    }
    StorageUtils.getObject = getObject;
})(StorageUtils = exports.StorageUtils || (exports.StorageUtils = {}));


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingsbutton_1 = __webpack_require__(25);
/**
 * A button that toggles the option menu for subtitles
 */
var SubtitleSettingsCloseButton = (function (_super) {
    __extends(SubtitleSettingsCloseButton, _super);
    function SubtitleSettingsCloseButton(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitlesettingsclosebutton',
            text: 'Back',
        }, _this.config);
        return _this;
    }
    SubtitleSettingsCloseButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            _this.subtitleSettingsPanel.hide();
            _this.settingsPanel.show();
        });
    };
    return SubtitleSettingsCloseButton;
}(subtitlesettingsbutton_1.SubtitleSettingsButton));
exports.SubtitleSettingsCloseButton = SubtitleSettingsCloseButton;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
/**
 * A button that resets all subtitle settings to their defaults.
 */
var SubtitleSettingsResetButton = (function (_super) {
    __extends(SubtitleSettingsResetButton, _super);
    function SubtitleSettingsResetButton(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitlesettingsresetbutton',
            text: 'Reset',
        }, _this.config);
        return _this;
    }
    SubtitleSettingsResetButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            _this.config.settingsManager.reset();
        });
    };
    return SubtitleSettingsResetButton;
}(button_1.Button));
exports.SubtitleSettingsResetButton = SubtitleSettingsResetButton;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var dom_1 = __webpack_require__(1);
var SubtitleSettingsLabel = (function (_super) {
    __extends(SubtitleSettingsLabel, _super);
    function SubtitleSettingsLabel(config) {
        var _this = _super.call(this, config) || this;
        _this.opener = config.opener;
        _this.text = config.text;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-label',
            components: [
                _this.opener,
            ],
        }, _this.config);
        return _this;
    }
    SubtitleSettingsLabel.prototype.toDomElement = function () {
        var labelElement = new dom_1.DOM('span', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        }).append(new dom_1.DOM('span', {}).html(this.text), this.opener.getDomElement());
        return labelElement;
    };
    return SubtitleSettingsLabel;
}(container_1.Container));
exports.SubtitleSettingsLabel = SubtitleSettingsLabel;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingsbutton_1 = __webpack_require__(25);
/**
 * A button that toggles the option menu for subtitles
 */
var SubtitleSettingsOpenButton = (function (_super) {
    __extends(SubtitleSettingsOpenButton, _super);
    function SubtitleSettingsOpenButton(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitlesettingsopenbutton',
            text: 'Subtitles settings',
        }, _this.config);
        return _this;
    }
    SubtitleSettingsOpenButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            _this.subtitleSettingsPanel.show();
            _this.settingsPanel.hide();
        });
    };
    return SubtitleSettingsOpenButton;
}(subtitlesettingsbutton_1.SubtitleSettingsButton));
exports.SubtitleSettingsOpenButton = SubtitleSettingsOpenButton;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection between available audio tracks (e.g. different languages).
 */
var AudioTrackSelectBox = (function (_super) {
    __extends(AudioTrackSelectBox, _super);
    function AudioTrackSelectBox(config) {
        if (config === void 0) { config = {}; }
        return _super.call(this, config) || this;
    }
    AudioTrackSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var selectCurrentAudioTrack = function () {
            var currentAudioTrack = player.getAudio();
            // HLS streams don't always provide this, so we have to check
            if (currentAudioTrack) {
                _this.selectItem(currentAudioTrack.id);
            }
        };
        var updateAudioTracks = function () {
            var audioTracks = player.getAvailableAudio();
            _this.clearItems();
            // Add audio tracks
            for (var _i = 0, audioTracks_1 = audioTracks; _i < audioTracks_1.length; _i++) {
                var audioTrack = audioTracks_1[_i];
                _this.addItem(audioTrack.id, audioTrack.label);
            }
            // Select the correct audio track after the tracks have been added
            // This is also important in case we missed the `ON_AUDIO_CHANGED` event, e.g. when `playback.audioLanguage`
            // is configured but the event is fired before the UI is created.
            selectCurrentAudioTrack();
        };
        this.onItemSelected.subscribe(function (sender, value) {
            player.setAudio(value);
        });
        // Update selection when selected track has changed
        player.addEventHandler(player.EVENT.ON_AUDIO_CHANGED, selectCurrentAudioTrack);
        // Update tracks when source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, updateAudioTracks);
        // Update tracks when a new source is loaded
        player.addEventHandler(player.EVENT.ON_READY, updateAudioTracks);
        // Update tracks when the period within a source changes
        player.addEventHandler(player.EVENT.ON_PERIOD_SWITCHED, updateAudioTracks);
        // Update tracks when a track is added or removed (since player 7.1.4)
        if (player.EVENT.ON_AUDIO_ADDED && player.EVENT.ON_AUDIO_REMOVED) {
            player.addEventHandler(player.EVENT.ON_AUDIO_ADDED, updateAudioTracks);
            player.addEventHandler(player.EVENT.ON_AUDIO_REMOVED, updateAudioTracks);
        }
        // Populate tracks at startup
        updateAudioTracks();
    };
    return AudioTrackSelectBox;
}(selectbox_1.SelectBox));
exports.AudioTrackSelectBox = AudioTrackSelectBox;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var component_1 = __webpack_require__(2);
var stringutils_1 = __webpack_require__(10);
var imageloader_1 = __webpack_require__(74);
/**
 * A label for a {@link SeekBar} that can display the seek target time, a thumbnail, and title (e.g. chapter title).
 */
var SeekBarLabel = (function (_super) {
    __extends(SeekBarLabel, _super);
    function SeekBarLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.timeLabel = new label_1.Label({ cssClasses: ['seekbar-label-time'] });
        _this.titleLabel = new label_1.Label({ cssClasses: ['seekbar-label-title'] });
        _this.thumbnail = new component_1.Component({ cssClasses: ['seekbar-thumbnail'] });
        _this.thumbnailImageLoader = new imageloader_1.ImageLoader();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-seekbar-label',
            components: [new container_1.Container({
                    components: [
                        _this.thumbnail,
                        new container_1.Container({
                            components: [_this.titleLabel, _this.timeLabel],
                            cssClass: 'seekbar-label-metadata',
                        })
                    ],
                    cssClass: 'seekbar-label-inner',
                })],
            hidden: true,
        }, _this.config);
        return _this;
    }
    SeekBarLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var appliedMarkerCssClasses = [];
        uimanager.onSeekPreview.subscribeRateLimited(function (sender, args) {
            if (player.isLive()) {
                var maxTimeShift = player.getMaxTimeShift();
                var time = maxTimeShift - maxTimeShift * (args.position / 100);
                _this.setTime(time);
            }
            else {
                if (args.marker) {
                    _this.setTitleText(args.marker.marker.title);
                }
                else {
                    _this.setTitleText(null);
                }
                var time = player.getDuration() * (args.position / 100);
                _this.setTime(time);
                _this.setThumbnail(player.getThumb(time));
            }
            // Remove CSS classes from previous marker
            if (appliedMarkerCssClasses.length > 0) {
                _this.getDomElement().removeClass(appliedMarkerCssClasses.join(' '));
                appliedMarkerCssClasses = [];
            }
            // Add CSS classes of current marker
            if (args.marker) {
                var cssClasses = (args.marker.marker.cssClasses || []).map(function (cssClass) { return _this.prefixCss(cssClass); });
                _this.getDomElement().addClass(cssClasses.join(' '));
                appliedMarkerCssClasses = cssClasses;
            }
        }, 100);
        var init = function () {
            // Set time format depending on source duration
            _this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?
                stringutils_1.StringUtils.FORMAT_HHMMSS : stringutils_1.StringUtils.FORMAT_MMSS;
        };
        player.addEventHandler(player.EVENT.ON_READY, init);
        init();
    };
    /**
     * Sets arbitrary text on the label.
     * @param text the text to show on the label
     */
    SeekBarLabel.prototype.setText = function (text) {
        this.timeLabel.setText(text);
    };
    /**
     * Sets a time to be displayed on the label.
     * @param seconds the time in seconds to display on the label
     */
    SeekBarLabel.prototype.setTime = function (seconds) {
        this.setText(stringutils_1.StringUtils.secondsToTime(seconds, this.timeFormat));
    };
    /**
     * Sets the text on the title label.
     * @param text the text to show on the label
     */
    SeekBarLabel.prototype.setTitleText = function (text) {
        this.titleLabel.setText(text);
    };
    /**
     * Sets or removes a thumbnail on the label.
     * @param thumbnail the thumbnail to display on the label or null to remove a displayed thumbnail
     */
    SeekBarLabel.prototype.setThumbnail = function (thumbnail) {
        if (thumbnail === void 0) { thumbnail = null; }
        var thumbnailElement = this.thumbnail.getDomElement();
        if (thumbnail == null) {
            thumbnailElement.css({
                'background-image': null,
                'display': null,
                'width': null,
                'height': null,
            });
        }
        else {
            // We use the thumbnail image loader to make sure the thumbnail is loaded and it's size is known before be can
            // calculate the CSS properties and set them on the element.
            this.thumbnailImageLoader.load(thumbnail.url, function (url, width, height) {
                var thumbnailCountX = width / thumbnail.w;
                var thumbnailCountY = height / thumbnail.h;
                var thumbnailIndexX = thumbnail.x / thumbnail.w;
                var thumbnailIndexY = thumbnail.y / thumbnail.h;
                var sizeX = 100 * thumbnailCountX;
                var sizeY = 100 * thumbnailCountY;
                var offsetX = 100 * thumbnailIndexX;
                var offsetY = 100 * thumbnailIndexY;
                var aspectRatio = 1 / thumbnail.w * thumbnail.h;
                // The thumbnail size is set by setting the CSS 'width' and 'padding-bottom' properties. 'padding-bottom' is
                // used because it is relative to the width and can be used to set the aspect ratio of the thumbnail.
                // A default value for width is set in the stylesheet and can be overwritten from there or anywhere else.
                thumbnailElement.css({
                    'display': 'inherit',
                    'background-image': "url(" + thumbnail.url + ")",
                    'padding-bottom': 100 * aspectRatio + "%",
                    'background-size': sizeX + "% " + sizeY + "%",
                    'background-position': "-" + offsetX + "% -" + offsetY + "%",
                });
            });
        }
    };
    return SeekBarLabel;
}(container_1.Container));
exports.SeekBarLabel = SeekBarLabel;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection between available subtitle and caption tracks.
 */
var SubtitleSelectBox = (function (_super) {
    __extends(SubtitleSelectBox, _super);
    function SubtitleSelectBox(config) {
        if (config === void 0) { config = {}; }
        return _super.call(this, config) || this;
    }
    SubtitleSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var selectCurrentSubtitle = function () {
            var currentSubtitle = player.getSubtitle();
            if (currentSubtitle) {
                _this.selectItem(currentSubtitle.id);
            }
        };
        var updateSubtitles = function () {
            _this.clearItems();
            for (var _i = 0, _a = player.getAvailableSubtitles(); _i < _a.length; _i++) {
                var subtitle = _a[_i];
                _this.addItem(subtitle.id, subtitle.label);
            }
            // Select the correct subtitle after the subtitles have been added
            selectCurrentSubtitle();
        };
        this.onItemSelected.subscribe(function (sender, value) {
            player.setSubtitle(value === 'null' ? null : value);
        });
        // React to API events
        player.addEventHandler(player.EVENT.ON_SUBTITLE_ADDED, updateSubtitles);
        player.addEventHandler(player.EVENT.ON_SUBTITLE_CHANGED, selectCurrentSubtitle);
        player.addEventHandler(player.EVENT.ON_SUBTITLE_REMOVED, updateSubtitles);
        // Update subtitles when source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, updateSubtitles);
        // Update subtitles when a new source is loaded
        player.addEventHandler(player.EVENT.ON_READY, updateSubtitles);
        // Update subtitles when the period within a source changes
        player.addEventHandler(player.EVENT.ON_PERIOD_SWITCHED, updateSubtitles);
        // Populate subtitles at startup
        updateSubtitles();
    };
    return SubtitleSelectBox;
}(selectbox_1.SelectBox));
exports.SubtitleSelectBox = SubtitleSelectBox;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var controlbar_1 = __webpack_require__(19);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * Overlays the player to display subtitles.
 */
var SubtitleOverlay = (function (_super) {
    __extends(SubtitleOverlay, _super);
    function SubtitleOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.preprocessLabelEventCallback = new eventdispatcher_1.EventDispatcher();
        _this.previewSubtitleActive = false;
        _this.previewSubtitle = new SubtitleLabel({ text: 'example subtitle' });
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitle-overlay',
        }, _this.config);
        return _this;
    }
    SubtitleOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var subtitleManager = new ActiveSubtitleManager();
        this.subtitleManager = subtitleManager;
        player.addEventHandler(player.EVENT.ON_CUE_ENTER, function (event) {
            // Sanitize cue data (must be done before the cue ID is generated in subtitleManager.cueEnter)
            if (event.position) {
                // Sometimes the positions are undefined, we assume them to be zero
                event.position.row = event.position.row || 0;
                event.position.column = event.position.column || 0;
            }
            var labelToAdd = subtitleManager.cueEnter(event);
            _this.preprocessLabelEventCallback.dispatch(event, labelToAdd);
            if (_this.previewSubtitleActive) {
                _this.removeComponent(_this.previewSubtitle);
            }
            _this.addComponent(labelToAdd);
            _this.updateComponents();
            _this.show();
        });
        player.addEventHandler(player.EVENT.ON_CUE_EXIT, function (event) {
            var labelToRemove = subtitleManager.cueExit(event);
            if (labelToRemove) {
                _this.removeComponent(labelToRemove);
                _this.updateComponents();
            }
            if (!subtitleManager.hasCues) {
                if (!_this.previewSubtitleActive) {
                    _this.hide();
                }
                else {
                    _this.addComponent(_this.previewSubtitle);
                    _this.updateComponents();
                }
            }
        });
        var subtitleClearHandler = function () {
            _this.hide();
            subtitleManager.clear();
            _this.removeComponents();
            _this.updateComponents();
        };
        player.addEventHandler(player.EVENT.ON_AUDIO_CHANGED, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_SUBTITLE_CHANGED, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_SEEK, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_TIME_SHIFT, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, subtitleClearHandler);
        uimanager.onComponentShow.subscribe(function (component) {
            if (component instanceof controlbar_1.ControlBar) {
                _this.getDomElement().addClass(_this.prefixCss(SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE));
            }
        });
        uimanager.onComponentHide.subscribe(function (component) {
            if (component instanceof controlbar_1.ControlBar) {
                _this.getDomElement().removeClass(_this.prefixCss(SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE));
            }
        });
        this.configureCea608Captions(player, uimanager);
        // Init
        subtitleClearHandler();
    };
    SubtitleOverlay.prototype.configureCea608Captions = function (player, uimanager) {
        var _this = this;
        // The calculated font size
        var fontSize = 0;
        // The required letter spacing spread the text characters evenly across the grid
        var fontLetterSpacing = 0;
        // Flag telling if a font size calculation is required of if the current values are valid
        var fontSizeCalculationRequired = true;
        // Flag telling if the CEA-608 mode is enabled
        var enabled = false;
        var updateCEA608FontSize = function () {
            var dummyLabel = new SubtitleLabel({ text: 'X' });
            dummyLabel.getDomElement().css({
                // By using a large font size we do not need to use multiple letters and can get still an
                // accurate measurement even though the returned size is an integer value
                'font-size': '200px',
                'line-height': '200px',
                'visibility': 'hidden',
            });
            _this.addComponent(dummyLabel);
            _this.updateComponents();
            _this.show();
            var dummyLabelCharWidth = dummyLabel.getDomElement().width();
            var dummyLabelCharHeight = dummyLabel.getDomElement().height();
            var fontSizeRatio = dummyLabelCharWidth / dummyLabelCharHeight;
            _this.removeComponent(dummyLabel);
            _this.updateComponents();
            if (!_this.subtitleManager.hasCues) {
                _this.hide();
            }
            // We subtract 1px here to avoid line breaks at the right border of the subtitle overlay that can happen
            // when texts contain whitespaces. It's probably some kind of pixel rounding issue in the browser's
            // layouting, but the actual reason could not be determined. Aiming for a target width - 1px would work in
            // most browsers, but Safari has a "quantized" font size rendering with huge steps in between so we need
            // to subtract some more pixels to avoid line breaks there as well.
            var subtitleOverlayWidth = _this.getDomElement().width() - 10;
            var subtitleOverlayHeight = _this.getDomElement().height();
            // The size ratio of the letter grid
            var fontGridSizeRatio = (dummyLabelCharWidth * SubtitleOverlay.CEA608_NUM_COLUMNS) /
                (dummyLabelCharHeight * SubtitleOverlay.CEA608_NUM_ROWS);
            // The size ratio of the available space for the grid
            var subtitleOverlaySizeRatio = subtitleOverlayWidth / subtitleOverlayHeight;
            if (subtitleOverlaySizeRatio > fontGridSizeRatio) {
                // When the available space is wider than the text grid, the font size is simply
                // determined by the height of the available space.
                fontSize = subtitleOverlayHeight / SubtitleOverlay.CEA608_NUM_ROWS;
                // Calculate the additional letter spacing required to evenly spread the text across the grid's width
                var gridSlotWidth = subtitleOverlayWidth / SubtitleOverlay.CEA608_NUM_COLUMNS;
                var fontCharWidth = fontSize * fontSizeRatio;
                fontLetterSpacing = gridSlotWidth - fontCharWidth;
            }
            else {
                // When the available space is not wide enough, texts would vertically overlap if we take
                // the height as a base for the font size, so we need to limit the height. We do that
                // by determining the font size by the width of the available space.
                fontSize = subtitleOverlayWidth / SubtitleOverlay.CEA608_NUM_COLUMNS / fontSizeRatio;
                fontLetterSpacing = 0;
            }
            // Update font-size of all active subtitle labels
            for (var _i = 0, _a = _this.getComponents(); _i < _a.length; _i++) {
                var label = _a[_i];
                if (label instanceof SubtitleLabel) {
                    label.getDomElement().css({
                        'font-size': fontSize + "px",
                        'letter-spacing': fontLetterSpacing + "px",
                    });
                }
            }
        };
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () {
            if (enabled) {
                updateCEA608FontSize();
            }
            else {
                fontSizeCalculationRequired = true;
            }
        });
        this.preprocessLabelEventCallback.subscribe(function (event, label) {
            var isCEA608 = event.position != null;
            if (!isCEA608) {
                // Skip all non-CEA608 cues
                return;
            }
            if (!enabled) {
                enabled = true;
                _this.getDomElement().addClass(_this.prefixCss(SubtitleOverlay.CLASS_CEA_608));
                // We conditionally update the font size by this flag here to avoid updating every time a subtitle
                // is added into an empty overlay. Because we reset the overlay when all subtitles are gone, this
                // would trigger an unnecessary update every time, but it's only required under certain conditions,
                // e.g. after the player size has changed.
                if (fontSizeCalculationRequired) {
                    updateCEA608FontSize();
                    fontSizeCalculationRequired = false;
                }
            }
            label.getDomElement().css({
                'left': event.position.column * SubtitleOverlay.CEA608_COLUMN_OFFSET + "%",
                'top': event.position.row * SubtitleOverlay.CEA608_ROW_OFFSET + "%",
                'font-size': fontSize + "px",
                'letter-spacing': fontLetterSpacing + "px",
            });
        });
        var reset = function () {
            _this.getDomElement().removeClass(_this.prefixCss(SubtitleOverlay.CLASS_CEA_608));
            enabled = false;
        };
        player.addEventHandler(player.EVENT.ON_CUE_EXIT, function () {
            if (!_this.subtitleManager.hasCues) {
                // Disable CEA-608 mode when all subtitles are gone (to allow correct formatting and
                // display of other types of subtitles, e.g. the formatting preview subtitle)
                reset();
            }
        });
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, reset);
        player.addEventHandler(player.EVENT.ON_SUBTITLE_CHANGED, reset);
    };
    SubtitleOverlay.prototype.enablePreviewSubtitleLabel = function () {
        this.previewSubtitleActive = true;
        if (!this.subtitleManager.hasCues) {
            this.addComponent(this.previewSubtitle);
            this.updateComponents();
            this.show();
        }
    };
    SubtitleOverlay.prototype.removePreviewSubtitleLabel = function () {
        this.previewSubtitleActive = false;
        this.removeComponent(this.previewSubtitle);
        this.updateComponents();
    };
    return SubtitleOverlay;
}(container_1.Container));
SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE = 'controlbar-visible';
SubtitleOverlay.CLASS_CEA_608 = 'cea608';
// The number of rows in a cea608 grid
SubtitleOverlay.CEA608_NUM_ROWS = 15;
// The number of columns in a cea608 grid
SubtitleOverlay.CEA608_NUM_COLUMNS = 32;
// The offset in percent for one row (which is also the height of a row)
SubtitleOverlay.CEA608_ROW_OFFSET = 100 / SubtitleOverlay.CEA608_NUM_ROWS;
// The offset in percent for one column (which is also the width of a column)
SubtitleOverlay.CEA608_COLUMN_OFFSET = 100 / SubtitleOverlay.CEA608_NUM_COLUMNS;
exports.SubtitleOverlay = SubtitleOverlay;
var SubtitleLabel = (function (_super) {
    __extends(SubtitleLabel, _super);
    function SubtitleLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitle-label',
        }, _this.config);
        return _this;
    }
    return SubtitleLabel;
}(label_1.Label));
var ActiveSubtitleManager = (function () {
    function ActiveSubtitleManager() {
        this.activeSubtitleCueMap = {};
        this.activeSubtitleCueCount = 0;
    }
    /**
     * Calculates a unique ID for a subtitle cue, which is needed to associate an ON_CUE_ENTER with its ON_CUE_EXIT
     * event so we can remove the correct subtitle in ON_CUE_EXIT when multiple subtitles are active at the same time.
     * The start time plus the text should make a unique identifier, and in the only case where a collision
     * can happen, two similar texts will be displayed at a similar time and a similar position (or without position).
     * The start time should always be known, because it is required to schedule the ON_CUE_ENTER event. The end time
     * must not necessarily be known and therefore cannot be used for the ID.
     * @param event
     * @return {string}
     */
    ActiveSubtitleManager.calculateId = function (event) {
        var id = event.start + '-' + event.text;
        if (event.position) {
            id += '-' + event.position.row + '-' + event.position.column;
        }
        return id;
    };
    /**
     * Adds a subtitle cue to the manager and returns the label that should be added to the subtitle overlay.
     * @param event
     * @return {SubtitleLabel}
     */
    ActiveSubtitleManager.prototype.cueEnter = function (event) {
        var id = ActiveSubtitleManager.calculateId(event);
        var label = new SubtitleLabel({
            // Prefer the HTML subtitle text if set, else use the plain text
            text: event.html || event.text,
        });
        // Create array for id if it does not exist
        this.activeSubtitleCueMap[id] = this.activeSubtitleCueMap[id] || [];
        // Add cue
        this.activeSubtitleCueMap[id].push({ event: event, label: label });
        this.activeSubtitleCueCount++;
        return label;
    };
    /**
     * Returns the label associated with an already added cue.
     * @param event
     * @return {SubtitleLabel}
     */
    ActiveSubtitleManager.prototype.getCues = function (event) {
        var id = ActiveSubtitleManager.calculateId(event);
        var activeSubtitleCues = this.activeSubtitleCueMap[id];
        if (activeSubtitleCues && activeSubtitleCues.length > 0) {
            return activeSubtitleCues.map(function (cue) { return cue.label; });
        }
        else {
            return null;
        }
    };
    /**
     * Removes the subtitle cue from the manager and returns the label that should be removed from the subtitle overlay,
     * or null if there is no associated label existing (e.g. because all labels have been {@link #clear cleared}.
     * @param event
     * @return {SubtitleLabel|null}
     */
    ActiveSubtitleManager.prototype.cueExit = function (event) {
        var id = ActiveSubtitleManager.calculateId(event);
        var activeSubtitleCues = this.activeSubtitleCueMap[id];
        if (activeSubtitleCues && activeSubtitleCues.length > 0) {
            // Remove cue
            /* We apply the FIFO approach here and remove the oldest cue from the associated id. When there are multiple cues
             * with the same id, there is no way to know which one of the cues is to be deleted, so we just hope that FIFO
             * works fine. Theoretically it can happen that two cues with colliding ids are removed at different times, in
             * the wrong order. This rare case has yet to be observed. If it ever gets an issue, we can take the unstable
             * cue end time (which can change between ON_CUE_ENTER and ON_CUE_EXIT IN ON_CUE_UPDATE) and use it as an
             * additional hint to try and remove the correct one of the colliding cues.
             */
            var activeSubtitleCue = activeSubtitleCues.shift();
            this.activeSubtitleCueCount--;
            return activeSubtitleCue.label;
        }
        else {
            return null;
        }
    };
    Object.defineProperty(ActiveSubtitleManager.prototype, "cueCount", {
        /**
         * Returns the number of active subtitle cues.
         * @return {number}
         */
        get: function () {
            // We explicitly count the cues to save an Array.reduce on every cueCount call (which can happen frequently)
            return this.activeSubtitleCueCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActiveSubtitleManager.prototype, "hasCues", {
        /**
         * Returns true if there are active subtitle cues, else false.
         * @return {boolean}
         */
        get: function () {
            return this.cueCount > 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Removes all subtitle cues from the manager.
     */
    ActiveSubtitleManager.prototype.clear = function () {
        this.activeSubtitleCueMap = {};
        this.activeSubtitleCueCount = 0;
    };
    return ActiveSubtitleManager;
}());


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles casting to a Cast receiver.
 */
var CastToggleButton = (function (_super) {
    __extends(CastToggleButton, _super);
    function CastToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-casttogglebutton',
            text: 'Google Cast',
        }, _this.config);
        return _this;
    }
    CastToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            if (player.isCastAvailable()) {
                if (player.isCasting()) {
                    player.castStop();
                }
                else {
                    player.castVideo();
                }
            }
            else {
                if (console) {
                    console.log('Cast unavailable');
                }
            }
        });
        var castAvailableHander = function () {
            if (player.isCastAvailable()) {
                _this.show();
            }
            else {
                _this.hide();
            }
        };
        player.addEventHandler(player.EVENT.ON_CAST_AVAILABLE, castAvailableHander);
        // Toggle button 'on' state
        player.addEventHandler(player.EVENT.ON_CAST_WAITING_FOR_DEVICE, function () {
            _this.on();
        });
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function () {
            // When a session is resumed, there is no ON_CAST_START event, so we also need to toggle here for such cases
            _this.on();
        });
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, function () {
            _this.off();
        });
        // Startup init
        castAvailableHander(); // Hide button if Cast not available
        if (player.isCasting()) {
            this.on();
        }
    };
    return CastToggleButton;
}(togglebutton_1.ToggleButton));
exports.CastToggleButton = CastToggleButton;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
/**
 * Overlays the player and displays the status of a Cast session.
 */
var CastStatusOverlay = (function (_super) {
    __extends(CastStatusOverlay, _super);
    function CastStatusOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.statusLabel = new label_1.Label({ cssClass: 'ui-cast-status-label' });
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-cast-status-overlay',
            components: [_this.statusLabel],
            hidden: true,
        }, _this.config);
        return _this;
    }
    CastStatusOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        player.addEventHandler(player.EVENT.ON_CAST_WAITING_FOR_DEVICE, function (event) {
            _this.show();
            // Get device name and update status text while connecting
            var castDeviceName = event.castPayload.deviceName;
            _this.statusLabel.setText("Connecting to <strong>" + castDeviceName + "</strong>...");
        });
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function (event) {
            // Session is started or resumed
            // For cases when a session is resumed, we do not receive the previous events and therefore show the status panel
            // here too
            _this.show();
            var castDeviceName = event.deviceName;
            _this.statusLabel.setText("Playing on <strong>" + castDeviceName + "</strong>");
        });
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, function (event) {
            // Cast session gone, hide the status panel
            _this.hide();
        });
    };
    return CastStatusOverlay;
}(container_1.Container));
exports.CastStatusOverlay = CastStatusOverlay;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var tvnoisecanvas_1 = __webpack_require__(75);
/**
 * Overlays the player and displays error messages.
 */
var ErrorMessageOverlay = (function (_super) {
    __extends(ErrorMessageOverlay, _super);
    function ErrorMessageOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.errorLabel = new label_1.Label({ cssClass: 'ui-errormessage-label' });
        _this.tvNoiseBackground = new tvnoisecanvas_1.TvNoiseCanvas();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-errormessage-overlay',
            components: [_this.tvNoiseBackground, _this.errorLabel],
            hidden: true,
        }, _this.config);
        return _this;
    }
    ErrorMessageOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        player.addEventHandler(player.EVENT.ON_ERROR, function (event) {
            var message = event.message;
            // Process message translations
            if (config.messages) {
                if (typeof config.messages === 'function') {
                    // Translation function for all errors
                    message = config.messages(event);
                }
                else if (config.messages[event.code]) {
                    // It's not a translation function, so it must be a map of strings or translation functions
                    var customMessage = config.messages[event.code];
                    if (typeof customMessage === 'string') {
                        message = customMessage;
                    }
                    else {
                        // The message is a translation function, so we call it
                        message = customMessage(event);
                    }
                }
            }
            _this.errorLabel.setText(message);
            _this.tvNoiseBackground.start();
            _this.show();
        });
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, function (event) {
            if (_this.isShown()) {
                _this.tvNoiseBackground.stop();
                _this.hide();
            }
        });
    };
    ErrorMessageOverlay.prototype.release = function () {
        _super.prototype.release.call(this);
        // Canvas rendering must be explicitly stopped, else it just continues forever and hogs resources
        this.tvNoiseBackground.stop();
    };
    return ErrorMessageOverlay;
}(container_1.Container));
exports.ErrorMessageOverlay = ErrorMessageOverlay;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var metadatalabel_1 = __webpack_require__(27);
/**
 * Displays a title bar containing a label with the title of the video.
 */
var TitleBar = (function (_super) {
    __extends(TitleBar, _super);
    function TitleBar(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-titlebar',
            hidden: true,
            components: [
                new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Title }),
                new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Description }),
            ],
            keepHiddenWithoutMetadata: false,
        }, _this.config);
        return _this;
    }
    TitleBar.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var shouldBeShown = !this.isHidden();
        var hasMetadataText = true; // Flag to track if any metadata label contains text
        var checkMetadataTextAndUpdateVisibility = function () {
            hasMetadataText = false;
            // Iterate through metadata labels and check if at least one of them contains text
            for (var _i = 0, _a = _this.getComponents(); _i < _a.length; _i++) {
                var component = _a[_i];
                if (component instanceof metadatalabel_1.MetadataLabel) {
                    if (!component.isEmpty()) {
                        hasMetadataText = true;
                        break;
                    }
                }
            }
            if (_this.isShown()) {
                // Hide a visible titlebar if it does not contain any text and the hidden flag is set
                if (config.keepHiddenWithoutMetadata && !hasMetadataText) {
                    _this.hide();
                }
            }
            else if (shouldBeShown) {
                // Show a hidden titlebar if it should actually be shown
                _this.show();
            }
        };
        // Listen to text change events to update the hasMetadataText flag when the metadata dynamically changes
        for (var _i = 0, _a = this.getComponents(); _i < _a.length; _i++) {
            var component = _a[_i];
            if (component instanceof metadatalabel_1.MetadataLabel) {
                component.onTextChanged.subscribe(checkMetadataTextAndUpdateVisibility);
            }
        }
        uimanager.onControlsShow.subscribe(function () {
            shouldBeShown = true;
            if (!(config.keepHiddenWithoutMetadata && !hasMetadataText)) {
                _this.show();
            }
        });
        uimanager.onControlsHide.subscribe(function () {
            shouldBeShown = false;
            _this.hide();
        });
        // init
        checkMetadataTextAndUpdateVisibility();
    };
    return TitleBar;
}(container_1.Container));
exports.TitleBar = TitleBar;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var stringutils_1 = __webpack_require__(10);
var hugereplaybutton_1 = __webpack_require__(58);
/**
 * Overlays the player and displays recommended videos.
 */
var RecommendationOverlay = (function (_super) {
    __extends(RecommendationOverlay, _super);
    function RecommendationOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.replayButton = new hugereplaybutton_1.HugeReplayButton();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-recommendation-overlay',
            hidden: true,
            components: [_this.replayButton],
        }, _this.config);
        return _this;
    }
    RecommendationOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var clearRecommendations = function () {
            for (var _i = 0, _a = _this.getComponents().slice(); _i < _a.length; _i++) {
                var component = _a[_i];
                if (component instanceof RecommendationItem) {
                    _this.removeComponent(component);
                }
            }
            _this.updateComponents();
            _this.getDomElement().removeClass(_this.prefixCss('recommendations'));
        };
        var setupRecommendations = function () {
            clearRecommendations();
            var recommendations = uimanager.getConfig().recommendations;
            if (recommendations.length > 0) {
                var index = 1;
                for (var _i = 0, recommendations_1 = recommendations; _i < recommendations_1.length; _i++) {
                    var item = recommendations_1[_i];
                    _this.addComponent(new RecommendationItem({
                        itemConfig: item,
                        cssClasses: ['recommendation-item-' + (index++)],
                    }));
                }
                _this.updateComponents(); // create container DOM elements
                _this.getDomElement().addClass(_this.prefixCss('recommendations'));
            }
        };
        // Add recommendation when a source is loaded
        player.addEventHandler(player.EVENT.ON_READY, setupRecommendations);
        // Remove recommendations and hide overlay when source is unloaded
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, function () {
            clearRecommendations();
            _this.hide();
        });
        // Display recommendations when playback has finished
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, function () {
            // Dismiss ON_PLAYBACK_FINISHED events at the end of ads
            // TODO remove this workaround once issue #1278 is solved
            if (player.isAd()) {
                return;
            }
            _this.show();
        });
        // Hide recommendations when playback starts, e.g. a restart
        player.addEventHandler(player.EVENT.ON_PLAY, function () {
            _this.hide();
        });
        // Init on startup
        setupRecommendations();
    };
    return RecommendationOverlay;
}(container_1.Container));
exports.RecommendationOverlay = RecommendationOverlay;
/**
 * An item of the {@link RecommendationOverlay}. Used only internally in {@link RecommendationOverlay}.
 */
var RecommendationItem = (function (_super) {
    __extends(RecommendationItem, _super);
    function RecommendationItem(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-recommendation-item',
            itemConfig: null,
        }, _this.config);
        return _this;
    }
    RecommendationItem.prototype.toDomElement = function () {
        var config = this.config.itemConfig; // TODO fix generics and get rid of cast
        var itemElement = new dom_1.DOM('a', {
            'id': this.config.id,
            'class': this.getCssClasses(),
            'href': config.url,
        }).css({ 'background-image': "url(" + config.thumbnail + ")" });
        var bgElement = new dom_1.DOM('div', {
            'class': this.prefixCss('background'),
        });
        itemElement.append(bgElement);
        var titleElement = new dom_1.DOM('span', {
            'class': this.prefixCss('title'),
        }).append(new dom_1.DOM('span', {
            'class': this.prefixCss('innertitle'),
        }).html(config.title));
        itemElement.append(titleElement);
        var timeElement = new dom_1.DOM('span', {
            'class': this.prefixCss('duration'),
        }).append(new dom_1.DOM('span', {
            'class': this.prefixCss('innerduration'),
        }).html(config.duration ? stringutils_1.StringUtils.secondsToTime(config.duration) : ''));
        itemElement.append(timeElement);
        return itemElement;
    };
    return RecommendationItem;
}(component_1.Component));


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
var dom_1 = __webpack_require__(1);
/**
 * A button to play/replay a video.
 */
var HugeReplayButton = (function (_super) {
    __extends(HugeReplayButton, _super);
    function HugeReplayButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-hugereplaybutton',
            text: 'Replay',
        }, _this.config);
        return _this;
    }
    HugeReplayButton.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            player.play('ui');
        });
    };
    HugeReplayButton.prototype.toDomElement = function () {
        var buttonElement = _super.prototype.toDomElement.call(this);
        // Add child that contains the play button image
        // Setting the image directly on the button does not work together with scaling animations, because the button
        // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined
        // to the size if the image, it can scale inside the player without overshooting.
        buttonElement.append(new dom_1.DOM('div', {
            'class': this.prefixCss('image'),
        }));
        return buttonElement;
    };
    return HugeReplayButton;
}(button_1.Button));
exports.HugeReplayButton = HugeReplayButton;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection of different playback speeds.
 */
var PlaybackSpeedSelectBox = (function (_super) {
    __extends(PlaybackSpeedSelectBox, _super);
    function PlaybackSpeedSelectBox(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.defaultPlaybackSpeeds = [0.25, 0.5, 1, 1.5, 2];
        return _this;
    }
    PlaybackSpeedSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addDefaultItems();
        this.onItemSelected.subscribe(function (sender, value) {
            player.setPlaybackSpeed(parseFloat(value));
            _this.selectItem(value);
        });
        var setDefaultValue = function () {
            var playbackSpeed = player.getPlaybackSpeed();
            _this.setSpeed(playbackSpeed);
        };
        // when the player hits onReady again, adjust the playback speed selection
        player.addEventHandler(player.EVENT.ON_READY, setDefaultValue);
        if (player.EVENT.ON_PLAYBACK_SPEED_CHANGED) {
            // Since player 7.8.0
            player.addEventHandler(player.EVENT.ON_PLAYBACK_SPEED_CHANGED, setDefaultValue);
        }
    };
    PlaybackSpeedSelectBox.prototype.setSpeed = function (speed) {
        if (!this.selectItem(String(speed))) {
            // a playback speed was set which is not in the list, add it to the list to show it to the user
            this.clearItems();
            this.addDefaultItems([speed]);
            this.selectItem(String(speed));
        }
    };
    PlaybackSpeedSelectBox.prototype.addDefaultItems = function (customItems) {
        var _this = this;
        if (customItems === void 0) { customItems = []; }
        var sortedSpeeds = this.defaultPlaybackSpeeds.concat(customItems).sort();
        sortedSpeeds.forEach(function (element) {
            if (element !== 1) {
                _this.addItem(String(element), element + "x");
            }
            else {
                _this.addItem(String(element), 'Normal');
            }
        });
    };
    PlaybackSpeedSelectBox.prototype.clearItems = function () {
        this.items = [];
        this.selectedItem = null;
    };
    return PlaybackSpeedSelectBox;
}(selectbox_1.SelectBox));
exports.PlaybackSpeedSelectBox = PlaybackSpeedSelectBox;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(2);
var timeout_1 = __webpack_require__(9);
/**
 * Overlays the player and displays a buffering indicator.
 */
var BufferingOverlay = (function (_super) {
    __extends(BufferingOverlay, _super);
    function BufferingOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.indicators = [
            new component_1.Component({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator' }),
            new component_1.Component({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator' }),
            new component_1.Component({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator' }),
        ];
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-buffering-overlay',
            hidden: true,
            components: _this.indicators,
            showDelayMs: 1000,
        }, _this.config);
        return _this;
    }
    BufferingOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var overlayShowTimeout = new timeout_1.Timeout(config.showDelayMs, function () {
            _this.show();
        });
        var showOverlay = function () {
            overlayShowTimeout.start();
        };
        var hideOverlay = function () {
            overlayShowTimeout.clear();
            _this.hide();
        };
        player.addEventHandler(player.EVENT.ON_STALL_STARTED, showOverlay);
        player.addEventHandler(player.EVENT.ON_STALL_ENDED, hideOverlay);
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, hideOverlay);
        // Show overlay if player is already stalled at init
        if (player.isStalled()) {
            this.show();
        }
    };
    return BufferingOverlay;
}(container_1.Container));
exports.BufferingOverlay = BufferingOverlay;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var hugeplaybacktogglebutton_1 = __webpack_require__(62);
/**
 * Overlays the player and displays error messages.
 */
var PlaybackToggleOverlay = (function (_super) {
    __extends(PlaybackToggleOverlay, _super);
    function PlaybackToggleOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.playbackToggleButton = new hugeplaybacktogglebutton_1.HugePlaybackToggleButton();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-playbacktoggle-overlay',
            components: [_this.playbackToggleButton],
        }, _this.config);
        return _this;
    }
    return PlaybackToggleOverlay;
}(container_1.Container));
exports.PlaybackToggleOverlay = PlaybackToggleOverlay;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var playbacktogglebutton_1 = __webpack_require__(16);
var dom_1 = __webpack_require__(1);
/**
 * A button that overlays the video and toggles between playback and pause.
 */
var HugePlaybackToggleButton = (function (_super) {
    __extends(HugePlaybackToggleButton, _super);
    function HugePlaybackToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-hugeplaybacktogglebutton',
            text: 'Play/Pause',
        }, _this.config);
        return _this;
    }
    HugePlaybackToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        // Update button state through API events
        _super.prototype.configure.call(this, player, uimanager, false);
        var togglePlayback = function () {
            if (player.isPlaying()) {
                player.pause('ui');
            }
            else {
                player.play('ui');
            }
        };
        var toggleFullscreen = function () {
            if (player.isFullscreen()) {
                player.exitFullscreen();
            }
            else {
                player.enterFullscreen();
            }
        };
        var firstPlay = true;
        var clickTime = 0;
        var doubleClickTime = 0;
        /*
         * YouTube-style toggle button handling
         *
         * The goal is to prevent a short pause or playback interval between a click, that toggles playback, and a
         * double click, that toggles fullscreen. In this naive approach, the first click would e.g. start playback,
         * the second click would be detected as double click and toggle to fullscreen, and as second normal click stop
         * playback, which results is a short playback interval with max length of the double click detection
         * period (usually 500ms).
         *
         * To solve this issue, we defer handling of the first click for 200ms, which is almost unnoticeable to the user,
         * and just toggle playback if no second click (double click) has been registered during this period. If a double
         * click is registered, we just toggle the fullscreen. In the first 200ms, undesired playback changes thus cannot
         * happen. If a double click is registered within 500ms, we undo the playback change and switch fullscreen mode.
         * In the end, this method basically introduces a 200ms observing interval in which playback changes are prevented
         * if a double click happens.
         */
        this.onClick.subscribe(function () {
            // Directly start playback on first click of the button.
            // This is a required workaround for mobile browsers where video playback needs to be triggered directly
            // by the user. A deferred playback start through the timeout below is not considered as user action and
            // therefore ignored by mobile browsers.
            if (firstPlay) {
                // Try to start playback. Then we wait for ON_PLAY and only when it arrives, we disable the firstPlay flag.
                // If we disable the flag here, onClick was triggered programmatically instead of by a user interaction, and
                // playback is blocked (e.g. on mobile devices due to the programmatic play() call), we loose the chance to
                // ever start playback through a user interaction again with this button.
                togglePlayback();
                return;
            }
            var now = Date.now();
            if (now - clickTime < 200) {
                // We have a double click inside the 200ms interval, just toggle fullscreen mode
                toggleFullscreen();
                doubleClickTime = now;
                return;
            }
            else if (now - clickTime < 500) {
                // We have a double click inside the 500ms interval, undo playback toggle and toggle fullscreen mode
                toggleFullscreen();
                togglePlayback();
                doubleClickTime = now;
                return;
            }
            clickTime = now;
            setTimeout(function () {
                if (Date.now() - doubleClickTime > 200) {
                    // No double click detected, so we toggle playback and wait what happens next
                    togglePlayback();
                }
            }, 200);
        });
        player.addEventHandler(player.EVENT.ON_PLAY, function () {
            // Playback has really started, we can disable the flag to switch to normal toggle button handling
            firstPlay = false;
        });
        player.addEventHandler(player.EVENT.ON_WARNING, function (event) {
            // 5008 == Playback could not be started
            if (event.code === 5008) {
                // if playback could not be started, reset the first play flag as we need the user interaction to start
                firstPlay = true;
            }
        });
        // Hide button while initializing a Cast session
        var castInitializationHandler = function (event) {
            if (event.type === player.EVENT.ON_CAST_START) {
                // Hide button when session is being initialized
                _this.hide();
            }
            else {
                // Show button when session is established or initialization was aborted
                _this.show();
            }
        };
        player.addEventHandler(player.EVENT.ON_CAST_START, castInitializationHandler);
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, castInitializationHandler);
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, castInitializationHandler);
        var suppressPlayButtonTransitionAnimation = function () {
            // Disable the current animation
            _this.setTransitionAnimationsEnabled(false);
            // Enable the transition animations for the next state change
            _this.onToggle.subscribeOnce(function () {
                _this.setTransitionAnimationsEnabled(true);
            });
        };
        // Hide the play button animation when the UI is loaded (it should only be animated on state changes)
        suppressPlayButtonTransitionAnimation();
        var isAutoplayEnabled = player.getConfig().playback && Boolean(player.getConfig().playback.autoplay);
        // We only know if an autoplay attempt is upcoming if the player is not yet ready. It the player is already ready,
        // the attempt might be upcoming or might have already happened, but we don't have to handle that because we can
        // simply rely on isPlaying and the play state events.
        var isAutoplayUpcoming = !player.isReady() && isAutoplayEnabled;
        // Hide the play button when the player is already playing or autoplay is upcoming
        if (player.isPlaying() || isAutoplayUpcoming) {
            // Hide the play button (switch to playing state)
            this.on();
            // Disable the animation of the playing state switch
            suppressPlayButtonTransitionAnimation();
            // Show the play button without an animation if a play attempt is blocked
            player.addEventHandler(player.EVENT.ON_WARNING, function (event) {
                if (event.code === 5008) {
                    suppressPlayButtonTransitionAnimation();
                }
            });
        }
    };
    HugePlaybackToggleButton.prototype.toDomElement = function () {
        var buttonElement = _super.prototype.toDomElement.call(this);
        // Add child that contains the play button image
        // Setting the image directly on the button does not work together with scaling animations, because the button
        // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined
        // to the size if the image, it can scale inside the player without overshooting.
        buttonElement.append(new dom_1.DOM('div', {
            'class': this.prefixCss('image'),
        }));
        return buttonElement;
    };
    /**
     * Enables or disables the play state transition animations of the play button image. Can be used to suppress
     * animations.
     * @param {boolean} enabled true to enable the animations (default), false to disable them
     */
    HugePlaybackToggleButton.prototype.setTransitionAnimationsEnabled = function (enabled) {
        var noTransitionAnimationsClass = this.prefixCss('no-transition-animations');
        if (enabled) {
            this.getDomElement().removeClass(noTransitionAnimationsClass);
        }
        else if (!this.getDomElement().hasClass(noTransitionAnimationsClass)) {
            this.getDomElement().addClass(noTransitionAnimationsClass);
        }
    };
    return HugePlaybackToggleButton;
}(playbacktogglebutton_1.PlaybackToggleButton));
exports.HugePlaybackToggleButton = HugePlaybackToggleButton;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
/**
 * A button that closes (hides) a configured component.
 */
var CloseButton = (function (_super) {
    __extends(CloseButton, _super);
    function CloseButton(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-closebutton',
            text: 'Close',
        }, _this.config);
        return _this;
    }
    CloseButton.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        this.onClick.subscribe(function () {
            config.target.hide();
        });
    };
    return CloseButton;
}(button_1.Button));
exports.CloseButton = CloseButton;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles Apple AirPlay.
 */
var AirPlayToggleButton = (function (_super) {
    __extends(AirPlayToggleButton, _super);
    function AirPlayToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-airplaytogglebutton',
            text: 'Apple AirPlay',
        }, _this.config);
        return _this;
    }
    AirPlayToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        if (!player.isAirplayAvailable) {
            // If the player does not support Airplay (player 7.0), we just hide this component and skip configuration
            this.hide();
            return;
        }
        this.onClick.subscribe(function () {
            if (player.isAirplayAvailable()) {
                player.showAirplayTargetPicker();
            }
            else {
                if (console) {
                    console.log('AirPlay unavailable');
                }
            }
        });
        var airPlayAvailableHandler = function () {
            if (player.isAirplayAvailable()) {
                _this.show();
            }
            else {
                _this.hide();
            }
        };
        player.addEventHandler(player.EVENT.ON_AIRPLAY_AVAILABLE, airPlayAvailableHandler);
        // Startup init
        airPlayAvailableHandler(); // Hide button if AirPlay is not available
    };
    return AirPlayToggleButton;
}(togglebutton_1.ToggleButton));
exports.AirPlayToggleButton = AirPlayToggleButton;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles Apple macOS picture-in-picture mode.
 */
var PictureInPictureToggleButton = (function (_super) {
    __extends(PictureInPictureToggleButton, _super);
    function PictureInPictureToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-piptogglebutton',
            text: 'Picture-in-Picture',
        }, _this.config);
        return _this;
    }
    PictureInPictureToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        if (!player.isPictureInPictureAvailable) {
            // If the player does not support PIP (player 7.0), we just hide this component and skip configuration
            this.hide();
            return;
        }
        this.onClick.subscribe(function () {
            if (player.isPictureInPictureAvailable()) {
                if (player.isPictureInPicture()) {
                    player.exitPictureInPicture();
                }
                else {
                    player.enterPictureInPicture();
                }
            }
            else {
                if (console) {
                    console.log('PIP unavailable');
                }
            }
        });
        var pipAvailableHander = function () {
            if (player.isPictureInPictureAvailable()) {
                _this.show();
            }
            else {
                _this.hide();
            }
        };
        player.addEventHandler(player.EVENT.ON_READY, pipAvailableHander);
        // Toggle button 'on' state
        player.addEventHandler(player.EVENT.ON_PICTURE_IN_PICTURE_ENTER, function () {
            _this.on();
        });
        player.addEventHandler(player.EVENT.ON_PICTURE_IN_PICTURE_EXIT, function () {
            _this.off();
        });
        // Startup init
        pipAvailableHander(); // Hide button if PIP not available
        if (player.isPictureInPicture()) {
            this.on();
        }
    };
    return PictureInPictureToggleButton;
}(togglebutton_1.ToggleButton));
exports.PictureInPictureToggleButton = PictureInPictureToggleButton;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(67);
__webpack_require__(70);
module.exports = __webpack_require__(84);


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var angular = __webpack_require__(13);
var bitdash_controller_1 = __webpack_require__(68);
var bitdash_directive_1 = __webpack_require__(69);
exports.default = angular.module('mi.BitdashPlayer', [])
    .controller('MiBitdashController', bitdash_controller_1.default)
    .directive('miBitdashPlayer', bitdash_directive_1.default);


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var angular = __webpack_require__(13);
var BitmovinController = (function () {
    function BitmovinController($scope, $log) {
        this.$scope = $scope;
        this.$log = $log;
        this.state = {};
        this.config = {};
        this.options = {};
    }
    BitmovinController.prototype.$onInit = function () {
        this.state = this.$scope.state = {};
        if (angular.isDefined(this.$scope.config) && angular.isDefined(this.$scope.config.key)) {
            this.config = this.$scope.config;
        }
        else {
            this.$log.error("basic config for bitdash player is missing!");
        }
        if (angular.isDefined(this.$scope.options)) {
            this.options = this.$scope.options;
        }
        if (angular.isDefined(this.$scope.webcast)) {
            this.processWebcast(this.$scope.webcast);
        }
    };
    BitmovinController.prototype.processWebcast = function (webcast) {
        var stateProperty = this.options.forcedState || webcast.state;
        if (stateProperty === 'ondemand') {
            var languageIndex_1 = 0;
            webcast.languages.some(function (lang, index) {
                if (webcast.language === lang.language) {
                    languageIndex_1 = index;
                    return true;
                }
            });
            this.state.data = webcast.languages[languageIndex_1].ondemandStateData;
        }
        else {
            this.state.data = webcast[stateProperty + 'StateData'];
        }
        this.config.source = this.getPlayerConfigSource(webcast);
        this.config.style = { ux: false };
    };
    BitmovinController.prototype.getPlayerConfigSource = function (webcast) {
        return webcast.useDVRPlaybackInPostlive && webcast.state === 'postlive' ?
            this.getDVRPlaybackToPostlive(webcast)
            : this.getPlayerConfigSourceByState(webcast);
    };
    BitmovinController.prototype.getDVRPlaybackToPostlive = function (webcast) {
        var hls = webcast['liveStateData'].playout.hlsDvrUrl;
        var title = webcast.name;
        if (angular.isDefined(webcast['postliveStateData'].playout.offset)) {
            var offset = parseInt(webcast['postliveStateData'].playout.offset, 10);
            if (offset) {
                var offsetPrefix = void 0;
                var parser = document.createElement('a');
                parser.href = webcast['liveStateData'].playout.hlsDvrUrl;
                offsetPrefix = (parser.search) ? '&' : '?';
                hls += offsetPrefix + "wowzadvrplayliststart=" + offset + "000";
            }
        }
        return { hls: hls, title: title };
    };
    BitmovinController.prototype.getPlayerConfigSourceByState = function (webcast) {
        var hls = this.state.data.playout.hlsUrl;
        var title = webcast.name;
        var hiveServiceUrl = this.getHiveServiceUrlByLang(webcast);
        if (angular.isDefined(this.state.data.playout.videoManagerHlsUrl) && this.state.data.playout.videoManagerHlsUrl) {
            hls = this.state.data.playout.videoManagerHlsUrl;
        }
        if (angular.isDefined(this.state.data.playout.offset)) {
            var offset = parseInt(this.state.data.playout.offset, 10);
            if (offset > 0) {
                var offsetPrefix = void 0;
                var parser = document.createElement('a');
                parser.href = hls;
                offsetPrefix = (parser.search) ? '&' : '?';
                hls += offsetPrefix + "start=" + offset;
            }
        }
        return hiveServiceUrl ? { title: title, hls_ticket: hiveServiceUrl } : { hls: hls, title: title };
    };
    BitmovinController.prototype.getHiveServiceUrlByLang = function (webcast) {
        var hiveServiceUrl = null;
        if (webcast.languages && webcast.language) {
            webcast.languages.forEach(function (item) {
                if (item.language === webcast.language) {
                    hiveServiceUrl = angular.copy(item.hiveServiceUrl);
                }
            });
        }
        return hiveServiceUrl;
    };
    return BitmovinController;
}());
BitmovinController.$inject = ['$scope', '$log'];
exports.default = BitmovinController;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var angular = __webpack_require__(13);
var BitdashDirective = function ($window, $log) { return ({
    controller: 'MiBitdashController',
    controllerAs: 'bitdashVm',
    replace: true,
    restrict: 'EA',
    scope: {
        config: '=',
        options: '=?',
        webcast: '=',
    },
    template: "<div id=\"mi-bitdash-player\" width=\"100%\" height=\"auto\"></div>",
    link: function (scope) {
        var bitmovinPlayer;
        var bitmovinUIManager;
        var bitmovinControlbar;
        var config = scope.config;
        var webcast = scope.webcast;
        buildPlayer();
        function buildPlayer() {
            bitmovinPlayer = $window.window.bitmovin.player('mi-bitdash-player');
            if (angular.isDefined(bitmovinPlayer) && bitmovinPlayer.isReady() === true) {
                bitmovinPlayer.destroy();
                bitmovinPlayer = $window.window.bitmovin.player('mi-bitdash-player');
            }
            if ((webcast.state === 'live') && config.source.hls_ticket) {
                // Get a hive-enabled player through bitdash.initHiveSDN
                $window.window.bitmovin.initHiveSDN(bitmovinPlayer, { debugLevel: 'off' });
            }
            loadPlayer(config);
        }
        function getAudioOnlyPlayerConfig() {
            return webcast.theme.audioOnlyFileUrl ? { audioOnlyOverlayConfig: { backgroundImageUrl: webcast.theme.audioOnlyFileUrl, hiddeIndicator: true } } : {};
        }
        function loadPlayer(conf) {
            bitmovinPlayer.setup(conf)
                .then(function () {
                bitmovinUIManager = $window.window.bitmovin.playerui.UIManager.Factory;
                if (isAudioOnly()) {
                    bitmovinUIManager.buildAudioOnlyUI(bitmovinPlayer, getAudioOnlyPlayerConfig());
                }
                else {
                    bitmovinUIManager.buildAudioVideoUI(bitmovinPlayer);
                }
                bitmovinControlbar = getElementsByClassName('bitmovinplayer-container');
                if (bitmovinControlbar) {
                    bitmovinControlbar.style.minWidth = '175px';
                    bitmovinControlbar.style.minHeight = '101px';
                    document.getElementById('bitmovinplayer-video-mi-bitdash-player').setAttribute('title', webcast.name);
                }
            }, function (reason) {
                $log.log("Error: " + reason.code + " - " + reason.message);
            });
        }
        function isAudioOnly() {
            return webcast.layout.layout === 'audio-only';
        }
        function getElementsByClassName(className) {
            return document.getElementsByClassName(className)[0];
        }
    }
}); };
exports.default = BitdashDirective;
BitdashDirective.$inject = ['$window', '$log'];


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='player.d.ts' />
var uimanager_1 = __webpack_require__(71);
var button_1 = __webpack_require__(7);
var controlbar_1 = __webpack_require__(19);
var fullscreentogglebutton_1 = __webpack_require__(29);
var hugeplaybacktogglebutton_1 = __webpack_require__(62);
var playbacktimelabel_1 = __webpack_require__(31);
var playbacktogglebutton_1 = __webpack_require__(16);
var seekbar_1 = __webpack_require__(18);
var selectbox_1 = __webpack_require__(8);
var itemselectionlist_1 = __webpack_require__(77);
var settingspanel_1 = __webpack_require__(22);
var settingstogglebutton_1 = __webpack_require__(32);
var togglebutton_1 = __webpack_require__(5);
var videoqualityselectbox_1 = __webpack_require__(23);
var volumetogglebutton_1 = __webpack_require__(17);
var vrtogglebutton_1 = __webpack_require__(30);
var watermark_1 = __webpack_require__(78);
var uicontainer_1 = __webpack_require__(14);
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var audioqualityselectbox_1 = __webpack_require__(24);
var audiotrackselectbox_1 = __webpack_require__(49);
var caststatusoverlay_1 = __webpack_require__(54);
var casttogglebutton_1 = __webpack_require__(53);
var component_1 = __webpack_require__(2);
var errormessageoverlay_1 = __webpack_require__(55);
var recommendationoverlay_1 = __webpack_require__(57);
var seekbarlabel_1 = __webpack_require__(50);
var subtitleoverlay_1 = __webpack_require__(52);
var subtitleselectbox_1 = __webpack_require__(51);
var titlebar_1 = __webpack_require__(56);
var volumecontrolbutton_1 = __webpack_require__(79);
var clickoverlay_1 = __webpack_require__(28);
var adskipbutton_1 = __webpack_require__(80);
var admessagelabel_1 = __webpack_require__(81);
var adclickoverlay_1 = __webpack_require__(82);
var playbackspeedselectbox_1 = __webpack_require__(59);
var hugereplaybutton_1 = __webpack_require__(58);
var bufferingoverlay_1 = __webpack_require__(60);
var castuicontainer_1 = __webpack_require__(83);
var playbacktoggleoverlay_1 = __webpack_require__(61);
var closebutton_1 = __webpack_require__(63);
var metadatalabel_1 = __webpack_require__(27);
var airplaytogglebutton_1 = __webpack_require__(64);
var volumeslider_1 = __webpack_require__(26);
var pictureinpicturetogglebutton_1 = __webpack_require__(65);
var spacer_1 = __webpack_require__(21);
var backgroundcolorselectbox_1 = __webpack_require__(39);
var backgroundopacityselectbox_1 = __webpack_require__(40);
var characteredgeselectbox_1 = __webpack_require__(43);
var fontcolorselectbox_1 = __webpack_require__(35);
var fontfamilyselectbox_1 = __webpack_require__(37);
var fontopacityselectbox_1 = __webpack_require__(36);
var fontsizeselectbox_1 = __webpack_require__(38);
var subtitlesettingsbutton_1 = __webpack_require__(25);
var subtitlesettingsclosebutton_1 = __webpack_require__(45);
var subtitlesettingselectbox_1 = __webpack_require__(4);
var subtitlesettingslabel_1 = __webpack_require__(47);
var subtitlesettingsopenbutton_1 = __webpack_require__(48);
var subtitlesettingspanel_1 = __webpack_require__(34);
var windowcolorselectbox_1 = __webpack_require__(41);
var windowopacityselectbox_1 = __webpack_require__(42);
var arrayutils_1 = __webpack_require__(11);
var stringutils_1 = __webpack_require__(10);
var playerutils_1 = __webpack_require__(12);
var uiutils_1 = __webpack_require__(20);
var browserutils_1 = __webpack_require__(15);
var storageutils_1 = __webpack_require__(44);
var subtitlesettingsresetbutton_1 = __webpack_require__(46);
// Object.assign polyfill for ES5/IE9
// https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
if (typeof Object.assign !== 'function') {
    Object.assign = function (target) {
        'use strict';
        if (target == null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }
        target = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source != null) {
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
        }
        return target;
    };
}
var playerui = {
    version: '{{VERSION}}',
    // Management
    UIManager: uimanager_1.UIManager,
    UIInstanceManager: uimanager_1.UIInstanceManager,
    // Utils
    ArrayUtils: arrayutils_1.ArrayUtils,
    StringUtils: stringutils_1.StringUtils,
    PlayerUtils: playerutils_1.PlayerUtils,
    UIUtils: uiutils_1.UIUtils,
    BrowserUtils: browserutils_1.BrowserUtils,
    StorageUtils: storageutils_1.StorageUtils,
    // Components
    AdClickOverlay: adclickoverlay_1.AdClickOverlay,
    AdMessageLabel: admessagelabel_1.AdMessageLabel,
    AdSkipButton: adskipbutton_1.AdSkipButton,
    AirPlayToggleButton: airplaytogglebutton_1.AirPlayToggleButton,
    AudioQualitySelectBox: audioqualityselectbox_1.AudioQualitySelectBox,
    AudioTrackSelectBox: audiotrackselectbox_1.AudioTrackSelectBox,
    BufferingOverlay: bufferingoverlay_1.BufferingOverlay,
    Button: button_1.Button,
    CastStatusOverlay: caststatusoverlay_1.CastStatusOverlay,
    CastToggleButton: casttogglebutton_1.CastToggleButton,
    CastUIContainer: castuicontainer_1.CastUIContainer,
    ClickOverlay: clickoverlay_1.ClickOverlay,
    CloseButton: closebutton_1.CloseButton,
    Component: component_1.Component,
    Container: container_1.Container,
    ControlBar: controlbar_1.ControlBar,
    ErrorMessageOverlay: errormessageoverlay_1.ErrorMessageOverlay,
    FullscreenToggleButton: fullscreentogglebutton_1.FullscreenToggleButton,
    HugePlaybackToggleButton: hugeplaybacktogglebutton_1.HugePlaybackToggleButton,
    HugeReplayButton: hugereplaybutton_1.HugeReplayButton,
    Label: label_1.Label,
    MetadataLabel: metadatalabel_1.MetadataLabel,
    MetadataLabelContent: metadatalabel_1.MetadataLabelContent,
    PictureInPictureToggleButton: pictureinpicturetogglebutton_1.PictureInPictureToggleButton,
    PlaybackSpeedSelectBox: playbackspeedselectbox_1.PlaybackSpeedSelectBox,
    PlaybackTimeLabel: playbacktimelabel_1.PlaybackTimeLabel,
    PlaybackTimeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode,
    PlaybackToggleButton: playbacktogglebutton_1.PlaybackToggleButton,
    PlaybackToggleOverlay: playbacktoggleoverlay_1.PlaybackToggleOverlay,
    RecommendationOverlay: recommendationoverlay_1.RecommendationOverlay,
    SeekBar: seekbar_1.SeekBar,
    SeekBarLabel: seekbarlabel_1.SeekBarLabel,
    SelectBox: selectbox_1.SelectBox,
    ItemSelectionList: itemselectionlist_1.ItemSelectionList,
    SettingsPanel: settingspanel_1.SettingsPanel,
    SettingsPanelItem: settingspanel_1.SettingsPanelItem,
    SettingsToggleButton: settingstogglebutton_1.SettingsToggleButton,
    Spacer: spacer_1.Spacer,
    SubtitleOverlay: subtitleoverlay_1.SubtitleOverlay,
    SubtitleSelectBox: subtitleselectbox_1.SubtitleSelectBox,
    TitleBar: titlebar_1.TitleBar,
    ToggleButton: togglebutton_1.ToggleButton,
    UIContainer: uicontainer_1.UIContainer,
    VideoQualitySelectBox: videoqualityselectbox_1.VideoQualitySelectBox,
    VolumeControlButton: volumecontrolbutton_1.VolumeControlButton,
    VolumeSlider: volumeslider_1.VolumeSlider,
    VolumeToggleButton: volumetogglebutton_1.VolumeToggleButton,
    VRToggleButton: vrtogglebutton_1.VRToggleButton,
    Watermark: watermark_1.Watermark,
    // Subtitle related components
    subtitlesettings: {
        BackgroundColorSelectBox: backgroundcolorselectbox_1.BackgroundColorSelectBox,
        BackgroundOpacitySelectBox: backgroundopacityselectbox_1.BackgroundOpacitySelectBox,
        CharacterEdgeSelectBox: characteredgeselectbox_1.CharacterEdgeSelectBox,
        FontColorSelectBox: fontcolorselectbox_1.FontColorSelectBox,
        FontFamilySelectBox: fontfamilyselectbox_1.FontFamilySelectBox,
        FontOpacitySelectBox: fontopacityselectbox_1.FontOpacitySelectBox,
        FontSizeSelectBox: fontsizeselectbox_1.FontSizeSelectBox,
        SubtitleSettingsButton: subtitlesettingsbutton_1.SubtitleSettingsButton,
        SubtitleSettingsCloseButton: subtitlesettingsclosebutton_1.SubtitleSettingsCloseButton,
        SubtitleSettingSelectBox: subtitlesettingselectbox_1.SubtitleSettingSelectBox,
        SubtitleSettingsLabel: subtitlesettingslabel_1.SubtitleSettingsLabel,
        SubtitleSettingsOpenButton: subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton,
        SubtitleSettingsPanel: subtitlesettingspanel_1.SubtitleSettingsPanel,
        WindowColorSelectBox: windowcolorselectbox_1.WindowColorSelectBox,
        WindowOpacitySelectBox: windowopacityselectbox_1.WindowOpacitySelectBox,
        SubtitleSettingsResetButton: subtitlesettingsresetbutton_1.SubtitleSettingsResetButton,
    },
};
window.bitmovin.playerui = playerui;
module.exports = playerui;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var uicontainer_1 = __webpack_require__(14);
var dom_1 = __webpack_require__(1);
var container_1 = __webpack_require__(0);
var playbacktogglebutton_1 = __webpack_require__(16);
var fullscreentogglebutton_1 = __webpack_require__(29);
var vrtogglebutton_1 = __webpack_require__(30);
var volumetogglebutton_1 = __webpack_require__(17);
var seekbar_1 = __webpack_require__(18);
var playbacktimelabel_1 = __webpack_require__(31);
var controlbar_1 = __webpack_require__(19);
var eventdispatcher_1 = __webpack_require__(3);
var settingstogglebutton_1 = __webpack_require__(32);
var settingspanel_1 = __webpack_require__(22);
var subtitlesettingspanel_1 = __webpack_require__(34);
var subtitlesettingslabel_1 = __webpack_require__(47);
var subtitlesettingsopenbutton_1 = __webpack_require__(48);
var videoqualityselectbox_1 = __webpack_require__(23);
// import {Watermark} from './components/watermark';
var audioqualityselectbox_1 = __webpack_require__(24);
var audiotrackselectbox_1 = __webpack_require__(49);
var seekbarlabel_1 = __webpack_require__(50);
var volumeslider_1 = __webpack_require__(26);
var subtitleselectbox_1 = __webpack_require__(51);
var subtitleoverlay_1 = __webpack_require__(52);
// import {VolumeControlButton} from './components/volumecontrolbutton';
var casttogglebutton_1 = __webpack_require__(53);
var caststatusoverlay_1 = __webpack_require__(54);
var errormessageoverlay_1 = __webpack_require__(55);
var titlebar_1 = __webpack_require__(56);
var recommendationoverlay_1 = __webpack_require__(57);
var playbackspeedselectbox_1 = __webpack_require__(59);
var bufferingoverlay_1 = __webpack_require__(60);
// import {CastUIContainer} from './components/castuicontainer';
var playbacktoggleoverlay_1 = __webpack_require__(61);
var closebutton_1 = __webpack_require__(63);
var metadatalabel_1 = __webpack_require__(27);
var airplaytogglebutton_1 = __webpack_require__(64);
var pictureinpicturetogglebutton_1 = __webpack_require__(65);
var audioonlyoverlay_1 = __webpack_require__(76);
var spacer_1 = __webpack_require__(21);
var uiutils_1 = __webpack_require__(20);
var arrayutils_1 = __webpack_require__(11);
var browserutils_1 = __webpack_require__(15);
var UIManager = (function () {
    function UIManager(player, playerUiOrUiVariants, config) {
        if (config === void 0) { config = {}; }
        var _this = this;
        this.events = {
            onUiVariantResolve: new eventdispatcher_1.EventDispatcher(),
        };
        if (playerUiOrUiVariants instanceof uicontainer_1.UIContainer) {
            // Single-UI constructor has been called, transform arguments to UIVariant[] signature
            var playerUi = playerUiOrUiVariants;
            var uiVariants = [];
            // Add the default player UI
            uiVariants.push({ ui: playerUi });
            this.uiVariants = uiVariants;
        }
        else {
            // Default constructor (UIVariant[]) has been called
            this.uiVariants = playerUiOrUiVariants;
        }
        this.player = player;
        this.config = __assign({}, config, { events: {
                onUpdated: new eventdispatcher_1.EventDispatcher(),
            } });
        this.managerPlayerWrapper = new PlayerWrapper(player);
        /**
         * Gathers configuration data from the UI config and player source config and creates a merged UI config
         * that is used throughout the UI instance.
         */
        var updateConfig = function () {
            var playerSourceConfig = player.getConfig().source || {};
            var uiConfig = __assign({}, config);
            uiConfig.metadata = uiConfig.metadata || {};
            // Extract the UI-related config properties from the source config
            var playerSourceUiConfig = {
                metadata: {
                    // TODO move metadata into source.metadata namespace in player v8
                    title: playerSourceConfig.title,
                    description: playerSourceConfig.description,
                    markers: playerSourceConfig.markers,
                },
                recommendations: playerSourceConfig.recommendations,
            };
            // Player source config takes precedence over the UI config, because the config in the source is attached
            // to a source which changes with every player.load, whereas the UI config stays the same for the whole
            // lifetime of the player instance.
            _this.config.metadata = _this.config.metadata || {};
            _this.config.metadata.title = playerSourceUiConfig.metadata.title || uiConfig.metadata.title;
            _this.config.metadata.description = playerSourceUiConfig.metadata.description || uiConfig.metadata.description;
            _this.config.metadata.markers = playerSourceUiConfig.metadata.markers || uiConfig.metadata.markers || [];
            _this.config.recommendations = playerSourceUiConfig.recommendations || uiConfig.recommendations || [];
        };
        updateConfig();
        // Update the configuration when a new source is loaded
        this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_SOURCE_LOADED, function () {
            updateConfig();
            _this.config.events.onUpdated.dispatch(_this);
        });
        if (config.container) {
            // Unfortunately 'uiContainerElement = new DOM(config.container)' will not accept the container with
            // string|HTMLElement type directly, although it accepts both types, so we need to spit these two cases up here.
            // TODO check in upcoming TS versions if the container can be passed in directly, or fix the constructor
            this.uiContainerElement = config.container instanceof HTMLElement ?
                new dom_1.DOM(config.container) : new dom_1.DOM(config.container);
        }
        else {
            this.uiContainerElement = new dom_1.DOM(player.getFigure());
        }
        // Create UI instance managers for the UI variants
        // The instance managers map to the corresponding UI variants by their array index
        this.uiInstanceManagers = [];
        var uiVariantsWithoutCondition = [];
        for (var _i = 0, _a = this.uiVariants; _i < _a.length; _i++) {
            var uiVariant = _a[_i];
            if (uiVariant.condition == null) {
                // Collect variants without conditions for error checking
                uiVariantsWithoutCondition.push(uiVariant);
            }
            // Create the instance manager for a UI variant
            this.uiInstanceManagers.push(new InternalUIInstanceManager(player, uiVariant.ui, this.config));
        }
        // Make sure that there is only one UI variant without a condition
        // It does not make sense to have multiple variants without condition, because only the first one in the list
        // (the one with the lowest index) will ever be selected.
        if (uiVariantsWithoutCondition.length > 1) {
            throw Error('Too many UIs without a condition: You cannot have more than one default UI');
        }
        // Make sure that the default UI variant, if defined, is at the end of the list (last index)
        // If it comes earlier, the variants with conditions that come afterwards will never be selected because the
        // default variant without a condition always evaluates to 'true'
        if (uiVariantsWithoutCondition.length > 0
            && uiVariantsWithoutCondition[0] !== this.uiVariants[this.uiVariants.length - 1]) {
            throw Error('Invalid UI variant order: the default UI (without condition) must be at the end of the list');
        }
        // Switch on auto UI resolving by default
        if (config.autoUiVariantResolve === undefined) {
            config.autoUiVariantResolve = true;
        }
        var adStartedEvent = null; // keep the event stored here during ad playback
        // Dynamically select a UI variant that matches the current UI condition.
        var resolveUiVariant = function (event) {
            // Make sure that the ON_AD_STARTED event data is persisted through ad playback in case other events happen
            // in the meantime, e.g. player resize. We need to store this data because there is no other way to find out
            // ad details (e.g. the ad client) while an ad is playing.
            // Existing event data signals that an ad is currently active. We cannot use player.isAd() because it returns
            // true on ad start and also on ad end events, which is problematic.
            if (event != null) {
                switch (event.type) {
                    // When the ad starts, we store the event data
                    case player.EVENT.ON_AD_STARTED:
                        adStartedEvent = event;
                        break;
                    // When the ad ends, we delete the event data
                    case player.EVENT.ON_AD_FINISHED:
                    case player.EVENT.ON_AD_SKIPPED:
                    case player.EVENT.ON_AD_ERROR:
                        adStartedEvent = null;
                        break;
                    // When a new source is loaded during ad playback, there will be no ad end event so we detect the end
                    // of the ad playback by checking isAd() in ON_READY, because ON_READY always arrives when the source
                    // changes.
                    case player.EVENT.ON_READY:
                        if (adStartedEvent && !player.isAd()) {
                            adStartedEvent = null;
                        }
                }
            }
            // Detect if an ad has started
            var ad = adStartedEvent != null;
            var adWithUI = ad && adStartedEvent.clientType === 'vast';
            _this.resolveUiVariant({
                isAd: ad,
                isAdWithUI: adWithUI,
                adClientType: ad ? adStartedEvent.clientType : null,
            }, function (context) {
                // If this is an ad UI, we need to relay the saved ON_AD_STARTED event data so ad components can configure
                // themselves for the current ad.
                if (context.isAd) {
                    /* Relay the ON_AD_STARTED event to the ads UI
                     *
                     * Because the ads UI is initialized in the ON_AD_STARTED handler, i.e. when the ON_AD_STARTED event has
                     * already been fired, components in the ads UI that listen for the ON_AD_STARTED event never receive it.
                     * Since this can break functionality of components that rely on this event, we relay the event to the
                     * ads UI components with the following call.
                     */
                    _this.currentUi.getWrappedPlayer().fireEventInUI(_this.player.EVENT.ON_AD_STARTED, adStartedEvent);
                }
            });
        };
        // Listen to the following events to trigger UI variant resolution
        if (config.autoUiVariantResolve) {
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_READY, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_PLAY, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_PAUSED, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_STARTED, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_FINISHED, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_SKIPPED, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_ERROR, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_PLAYER_RESIZE, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_FULLSCREEN_ENTER, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_FULLSCREEN_EXIT, resolveUiVariant);
        }
        // Initialize the UI
        resolveUiVariant(null);
    }
    UIManager.prototype.getConfig = function () {
        return this.config;
    };
    /**
     * Returns the list of UI variants as passed into the constructor of {@link UIManager}.
     * @returns {UIVariant[]} the list of available UI variants
     */
    UIManager.prototype.getUiVariants = function () {
        return this.uiVariants;
    };
    /**
     * Switches to a UI variant from the list returned by {@link getUiVariants}.
     * @param {UIVariant} uiVariant the UI variant to switch to
     * @param {() => void} onShow a callback that is executed just before the new UI variant is shown
     */
    UIManager.prototype.switchToUiVariant = function (uiVariant, onShow) {
        var uiVariantIndex = this.uiVariants.indexOf(uiVariant);
        var nextUi = this.uiInstanceManagers[uiVariantIndex];
        var uiVariantChanged = false;
        // Determine if the UI variant is changing
        if (nextUi !== this.currentUi) {
            uiVariantChanged = true;
            // console.log('switched from ', this.currentUi ? this.currentUi.getUI() : 'none',
            //   ' to ', nextUi ? nextUi.getUI() : 'none');
        }
        // Only if the UI variant is changing, we need to do some stuff. Else we just leave everything as-is.
        if (uiVariantChanged) {
            // Hide the currently active UI variant
            if (this.currentUi) {
                this.currentUi.getUI().hide();
            }
            // Assign the new UI variant as current UI
            this.currentUi = nextUi;
            // When we switch to a different UI instance, there's some additional stuff to manage. If we do not switch
            // to an instance, we're done here.
            if (this.currentUi != null) {
                // Add the UI to the DOM (and configure it) the first time it is selected
                if (!this.currentUi.isConfigured()) {
                    this.addUi(this.currentUi);
                }
                if (onShow) {
                    onShow();
                }
                this.currentUi.getUI().show();
            }
        }
    };
    /**
     * Triggers a UI variant switch as triggered by events when automatic switching is enabled. It allows to overwrite
     * properties of the {@link UIConditionContext}.
     * @param {Partial<UIConditionContext>} context an optional set of properties that overwrite properties of the
     *   automatically determined context
     * @param {(context: UIConditionContext) => void} onShow a callback that is executed just before the new UI variant
     *   is shown (if a switch is happening)
     */
    UIManager.prototype.resolveUiVariant = function (context, onShow) {
        if (context === void 0) { context = {}; }
        // Determine the current context for which the UI variant will be resolved
        var defaultContext = {
            isAd: false,
            isAdWithUI: false,
            adClientType: null,
            isFullscreen: this.player.isFullscreen(),
            isMobile: browserutils_1.BrowserUtils.isMobile,
            isPlaying: this.player.isPlaying(),
            width: this.uiContainerElement.width(),
            documentWidth: document.body.clientWidth,
        };
        // Overwrite properties of the default context with passed in context properties
        var switchingContext = __assign({}, defaultContext, context);
        // Fire the event and allow modification of the context before it is used to resolve the UI variant
        this.events.onUiVariantResolve.dispatch(this, switchingContext);
        var nextUiVariant = null;
        // Select new UI variant
        // If no variant condition is fulfilled, we switch to *no* UI
        for (var _i = 0, _a = this.uiVariants; _i < _a.length; _i++) {
            var uiVariant = _a[_i];
            if (uiVariant.condition == null || uiVariant.condition(switchingContext) === true) {
                nextUiVariant = uiVariant;
                break;
            }
        }
        this.switchToUiVariant(nextUiVariant, function () {
            if (onShow) {
                onShow(switchingContext);
            }
        });
    };
    UIManager.prototype.addUi = function (ui) {
        var dom = ui.getUI().getDomElement();
        var player = ui.getWrappedPlayer();
        ui.configureControls();
        /* Append the UI DOM after configuration to avoid CSS transitions at initialization
         * Example: Components are hidden during configuration and these hides may trigger CSS transitions that are
         * undesirable at this time. */
        this.uiContainerElement.append(dom);
        // Some components initialize their state on ON_READY. When the UI is loaded after the player is already ready,
        // they will never receive the event so we fire it from here in such cases.
        if (player.isReady()) {
            player.fireEventInUI(player.EVENT.ON_READY, {});
        }
        // Fire onConfigured after UI DOM elements are successfully added. When fired immediately, the DOM elements
        // might not be fully configured and e.g. do not have a size.
        // https://swizec.com/blog/how-to-properly-wait-for-dom-elements-to-show-up-in-modern-browsers/swizec/6663
        if (window.requestAnimationFrame) {
            requestAnimationFrame(function () { ui.onConfigured.dispatch(ui.getUI()); });
        }
        else {
            // IE9 fallback
            setTimeout(function () { ui.onConfigured.dispatch(ui.getUI()); }, 0);
        }
    };
    UIManager.prototype.releaseUi = function (ui) {
        ui.releaseControls();
        ui.getUI().getDomElement().remove();
        ui.clearEventHandlers();
    };
    UIManager.prototype.release = function () {
        for (var _i = 0, _a = this.uiInstanceManagers; _i < _a.length; _i++) {
            var uiInstanceManager = _a[_i];
            this.releaseUi(uiInstanceManager);
        }
        this.managerPlayerWrapper.clearEventHandlers();
    };
    Object.defineProperty(UIManager.prototype, "onUiVariantResolve", {
        /**
         * Fires just before UI variants are about to be resolved and the UI variant is possibly switched. It is fired when
         * the switch is triggered from an automatic switch and when calling {@link resolveUiVariant}.
         * Can be used to modify the {@link UIConditionContext} before resolving is done.
         * @returns {EventDispatcher<UIManager, UIConditionContext>}
         */
        get: function () {
            return this.events.onUiVariantResolve;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns the list of all added markers in undefined order.
     */
    UIManager.prototype.getTimelineMarkers = function () {
        return this.config.metadata.markers;
    };
    /**
     * Adds a marker to the timeline. Does not check for duplicates/overlaps at the `time`.
     */
    UIManager.prototype.addTimelineMarker = function (timelineMarker) {
        this.config.metadata.markers.push(timelineMarker);
        this.config.events.onUpdated.dispatch(this);
    };
    /**
     * Removes a marker from the timeline (by reference) and returns `true` if the marker has
     * been part of the timeline and successfully removed, or `false` if the marker could not
     * be found and thus not removed.
     */
    UIManager.prototype.removeTimelineMarker = function (timelineMarker) {
        if (arrayutils_1.ArrayUtils.remove(this.config.metadata.markers, timelineMarker) === timelineMarker) {
            this.config.events.onUpdated.dispatch(this);
            return true;
        }
        return false;
    };
    return UIManager;
}());
exports.UIManager = UIManager;
(function (UIManager) {
    var Factory;
    (function (Factory) {
        function buildAudioVideoUI(player, config) {
            if (config === void 0) { config = {}; }
            var smallScreenSwitchWidth = 600;
            return new UIManager(player, [{
                    ui: modernSmallScreenUI(),
                    condition: function (context) {
                        return context.isMobile && context.documentWidth < smallScreenSwitchWidth;
                    },
                }, {
                    ui: modernUI(),
                }], config);
        }
        Factory.buildAudioVideoUI = buildAudioVideoUI;
        function buildAudioOnlyUI(player, config) {
            if (config === void 0) { config = {}; }
            var smallScreenSwitchWidth = 600;
            return new UIManager(player, [{
                    ui: modernAudioOnlySmallScreenUI(),
                    condition: function (context) {
                        return context.isMobile && context.documentWidth < smallScreenSwitchWidth;
                    },
                }, {
                    ui: modernAudioOnlyUI(),
                }], config);
        }
        Factory.buildAudioOnlyUI = buildAudioOnlyUI;
        // export function buildDefaultUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return UIManager.Factory.buildModernUI(player, config);
        // }
        // export function buildDefaultSmallScreenUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return UIManager.Factory.buildModernSmallScreenUI(player, config);
        // }
        // export function buildDefaultCastReceiverUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return UIManager.Factory.buildModernCastReceiverUI(player, config);
        // }
        function modernUI() {
            var subtitleOverlay = new subtitleoverlay_1.SubtitleOverlay();
            var settingsPanel = new settingspanel_1.SettingsPanel({
                components: [
                    new settingspanel_1.SettingsPanelItem('Video Quality', new videoqualityselectbox_1.VideoQualitySelectBox()),
                    new settingspanel_1.SettingsPanelItem('Speed', new playbackspeedselectbox_1.PlaybackSpeedSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Track', new audiotrackselectbox_1.AudioTrackSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Quality', new audioqualityselectbox_1.AudioQualitySelectBox()),
                ],
                hidden: true,
            });
            var subtitleSettingsPanel = new subtitlesettingspanel_1.SubtitleSettingsPanel({
                hidden: true,
                overlay: subtitleOverlay,
                settingsPanel: settingsPanel,
            });
            var subtitleSettingsOpenButton = new subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton({
                subtitleSettingsPanel: subtitleSettingsPanel,
                settingsPanel: settingsPanel,
            });
            settingsPanel.addComponent(new settingspanel_1.SettingsPanelItem(new subtitlesettingslabel_1.SubtitleSettingsLabel({ text: 'Subtitles', opener: subtitleSettingsOpenButton }), new subtitleselectbox_1.SubtitleSelectBox()));
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    settingsPanel,
                    subtitleSettingsPanel,
                    new container_1.Container({
                        components: [
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
                            new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel() }),
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
                        ],
                        cssClasses: ['controlbar-top'],
                    }),
                    new container_1.Container({
                        components: [
                            new playbacktogglebutton_1.PlaybackToggleButton(),
                            new volumetogglebutton_1.VolumeToggleButton(),
                            new volumeslider_1.VolumeSlider(),
                            new spacer_1.Spacer(),
                            new pictureinpicturetogglebutton_1.PictureInPictureToggleButton(),
                            new airplaytogglebutton_1.AirPlayToggleButton(),
                            new casttogglebutton_1.CastToggleButton(),
                            new vrtogglebutton_1.VRToggleButton(),
                            new settingstogglebutton_1.SettingsToggleButton({ settingsPanel: settingsPanel }),
                            new fullscreentogglebutton_1.FullscreenToggleButton(),
                        ],
                        cssClasses: ['controlbar-bottom'],
                    }),
                ],
            });
            return new uicontainer_1.UIContainer({
                components: [
                    subtitleOverlay,
                    new bufferingoverlay_1.BufferingOverlay(),
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    new caststatusoverlay_1.CastStatusOverlay(),
                    controlBar,
                    // new TitleBar(),
                    new recommendationoverlay_1.RecommendationOverlay(),
                    // new Watermark(),
                    new errormessageoverlay_1.ErrorMessageOverlay(),
                ],
                cssClasses: ['ui-skin-mi-wbc'],
            });
        }
        function modernAudioOnlyUI() {
            var subtitleOverlay = new subtitleoverlay_1.SubtitleOverlay();
            var settingsPanel = new settingspanel_1.SettingsPanel({
                components: [
                    new settingspanel_1.SettingsPanelItem('Speed', new playbackspeedselectbox_1.PlaybackSpeedSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Track', new audiotrackselectbox_1.AudioTrackSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Quality', new audioqualityselectbox_1.AudioQualitySelectBox()),
                ],
                hidden: true,
            });
            var subtitleSettingsPanel = new subtitlesettingspanel_1.SubtitleSettingsPanel({
                hidden: true,
                overlay: subtitleOverlay,
                settingsPanel: settingsPanel,
            });
            var subtitleSettingsOpenButton = new subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton({
                subtitleSettingsPanel: subtitleSettingsPanel,
                settingsPanel: settingsPanel,
            });
            settingsPanel.addComponent(new settingspanel_1.SettingsPanelItem(new subtitlesettingslabel_1.SubtitleSettingsLabel({ text: 'Subtitles', opener: subtitleSettingsOpenButton }), new subtitleselectbox_1.SubtitleSelectBox()));
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    settingsPanel,
                    subtitleSettingsPanel,
                    new container_1.Container({
                        components: [
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
                            new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel() }),
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
                        ],
                        cssClasses: ['controlbar-top'],
                    }),
                    new container_1.Container({
                        components: [
                            new playbacktogglebutton_1.PlaybackToggleButton(),
                            new volumetogglebutton_1.VolumeToggleButton(),
                            new volumeslider_1.VolumeSlider(),
                            new spacer_1.Spacer(),
                            new airplaytogglebutton_1.AirPlayToggleButton(),
                            new casttogglebutton_1.CastToggleButton(),
                            new settingstogglebutton_1.SettingsToggleButton({ settingsPanel: settingsPanel }),
                            new fullscreentogglebutton_1.FullscreenToggleButton(),
                        ],
                        cssClasses: ['controlbar-bottom'],
                    }),
                ],
            });
            return new uicontainer_1.UIContainer({
                components: [
                    new audioonlyoverlay_1.AudioOnlyOverlay(),
                    subtitleOverlay,
                    new bufferingoverlay_1.BufferingOverlay(),
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    new caststatusoverlay_1.CastStatusOverlay(),
                    controlBar,
                    // new TitleBar(),
                    new recommendationoverlay_1.RecommendationOverlay(),
                    // new Watermark(),
                    new errormessageoverlay_1.ErrorMessageOverlay(),
                ],
                cssClasses: ['ui-skin-mi-wbc'],
            });
        }
        // function modernAdsUI() {
        //   return new UIContainer({
        //     components: [
        //       new BufferingOverlay(),
        //       new AdClickOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Container({
        //         components: [
        //           new AdMessageLabel({ text: 'Ad: {remainingTime} secs' }),
        //           new AdSkipButton(),
        //         ],
        //         cssClass: 'ui-ads-status',
        //       }),
        //       new ControlBar({
        //         components: [
        //           new Container({
        //             components: [
        //               new PlaybackToggleButton(),
        //               new VolumeToggleButton(),
        //               new VolumeSlider(),
        //               new Spacer(),
        //               new FullscreenToggleButton(),
        //             ],
        //             cssClasses: ['controlbar-bottom'],
        //           }),
        //         ],
        //       }),
        //     ],
        //     cssClasses: ['ui-skin-mi-wbc', 'ui-skin-ads'],
        //   });
        // }
        function modernSmallScreenUI() {
            var subtitleOverlay = new subtitleoverlay_1.SubtitleOverlay();
            var settingsPanel = new settingspanel_1.SettingsPanel({
                components: [
                    new settingspanel_1.SettingsPanelItem('Video Quality', new videoqualityselectbox_1.VideoQualitySelectBox()),
                    new settingspanel_1.SettingsPanelItem('Speed', new playbackspeedselectbox_1.PlaybackSpeedSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Track', new audiotrackselectbox_1.AudioTrackSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Quality', new audioqualityselectbox_1.AudioQualitySelectBox()),
                ],
                hidden: true,
                hideDelay: -1,
            });
            var subtitleSettingsPanel = new subtitlesettingspanel_1.SubtitleSettingsPanel({
                hidden: true,
                hideDelay: -1,
                overlay: subtitleOverlay,
                settingsPanel: settingsPanel,
            });
            var subtitleSettingsOpenButton = new subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton({
                subtitleSettingsPanel: subtitleSettingsPanel,
                settingsPanel: settingsPanel,
            });
            settingsPanel.addComponent(new settingspanel_1.SettingsPanelItem(new subtitlesettingslabel_1.SubtitleSettingsLabel({ text: 'Subtitles', opener: subtitleSettingsOpenButton }), new subtitleselectbox_1.SubtitleSelectBox()));
            settingsPanel.addComponent(new closebutton_1.CloseButton({ target: settingsPanel }));
            subtitleSettingsPanel.addComponent(new closebutton_1.CloseButton({ target: subtitleSettingsPanel }));
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    new container_1.Container({
                        components: [
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
                            new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel() }),
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
                        ],
                        cssClasses: ['controlbar-top'],
                    }),
                ],
            });
            return new uicontainer_1.UIContainer({
                components: [
                    subtitleOverlay,
                    new bufferingoverlay_1.BufferingOverlay(),
                    new caststatusoverlay_1.CastStatusOverlay(),
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    controlBar,
                    new titlebar_1.TitleBar({
                        components: [
                            new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Title }),
                            new casttogglebutton_1.CastToggleButton(),
                            new vrtogglebutton_1.VRToggleButton(),
                            new volumetogglebutton_1.VolumeToggleButton(),
                            new settingstogglebutton_1.SettingsToggleButton({ settingsPanel: settingsPanel }),
                            new fullscreentogglebutton_1.FullscreenToggleButton(),
                        ],
                    }),
                    settingsPanel,
                    subtitleSettingsPanel,
                    new recommendationoverlay_1.RecommendationOverlay(),
                    // new Watermark(),
                    new errormessageoverlay_1.ErrorMessageOverlay(),
                ],
                cssClasses: ['ui-skin-mi-wbc', 'ui-skin-smallscreen'],
            });
        }
        function modernAudioOnlySmallScreenUI() {
            var subtitleOverlay = new subtitleoverlay_1.SubtitleOverlay();
            var settingsPanel = new settingspanel_1.SettingsPanel({
                components: [
                    new settingspanel_1.SettingsPanelItem('Speed', new playbackspeedselectbox_1.PlaybackSpeedSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Track', new audiotrackselectbox_1.AudioTrackSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Quality', new audioqualityselectbox_1.AudioQualitySelectBox()),
                ],
                hidden: true,
                hideDelay: -1,
            });
            var subtitleSettingsPanel = new subtitlesettingspanel_1.SubtitleSettingsPanel({
                hidden: true,
                hideDelay: -1,
                overlay: subtitleOverlay,
                settingsPanel: settingsPanel,
            });
            var subtitleSettingsOpenButton = new subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton({
                subtitleSettingsPanel: subtitleSettingsPanel,
                settingsPanel: settingsPanel,
            });
            settingsPanel.addComponent(new settingspanel_1.SettingsPanelItem(new subtitlesettingslabel_1.SubtitleSettingsLabel({ text: 'Subtitles', opener: subtitleSettingsOpenButton }), new subtitleselectbox_1.SubtitleSelectBox()));
            settingsPanel.addComponent(new closebutton_1.CloseButton({ target: settingsPanel }));
            subtitleSettingsPanel.addComponent(new closebutton_1.CloseButton({ target: subtitleSettingsPanel }));
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    new container_1.Container({
                        components: [
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
                            new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel() }),
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
                        ],
                        cssClasses: ['controlbar-top'],
                    }),
                ],
            });
            return new uicontainer_1.UIContainer({
                components: [
                    new audioonlyoverlay_1.AudioOnlyOverlay(),
                    subtitleOverlay,
                    new bufferingoverlay_1.BufferingOverlay(),
                    new caststatusoverlay_1.CastStatusOverlay(),
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    controlBar,
                    new titlebar_1.TitleBar({
                        components: [
                            new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Title }),
                            new casttogglebutton_1.CastToggleButton(),
                            new vrtogglebutton_1.VRToggleButton(),
                            new volumetogglebutton_1.VolumeToggleButton(),
                            new settingstogglebutton_1.SettingsToggleButton({ settingsPanel: settingsPanel }),
                            new fullscreentogglebutton_1.FullscreenToggleButton(),
                        ],
                    }),
                    settingsPanel,
                    subtitleSettingsPanel,
                    new recommendationoverlay_1.RecommendationOverlay(),
                    // new Watermark(),
                    new errormessageoverlay_1.ErrorMessageOverlay(),
                ],
                cssClasses: ['ui-skin-mi-wbc', 'ui-skin-smallscreen'],
            });
        }
        // function modernSmallScreenAdsUI() {
        //   return new UIContainer({
        //     components: [
        //       new BufferingOverlay(),
        //       new AdClickOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new TitleBar({
        //         components: [
        //           // dummy label with no content to move buttons to the right
        //           new Label({ cssClass: 'label-metadata-title' }),
        //           new FullscreenToggleButton(),
        //         ],
        //       }),
        //       new Container({
        //         components: [
        //           new AdMessageLabel({ text: 'Ad: {remainingTime} secs' }),
        //           new AdSkipButton(),
        //         ],
        //         cssClass: 'ui-ads-status',
        //       }),
        //     ],
        //     cssClasses: ['ui-skin-mi-wbc', 'ui-skin-ads', 'ui-skin-smallscreen'],
        //   });
        // }
        // function modernCastReceiverUI() {
        //   let controlBar = new ControlBar({
        //     components: [
        //       new Container({
        //         components: [
        //           new PlaybackTimeLabel({ timeLabelMode: PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
        //           new SeekBar({ smoothPlaybackPositionUpdateIntervalMs: -1 }),
        //           new PlaybackTimeLabel({ timeLabelMode: PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
        //         ],
        //         cssClasses: ['controlbar-top'],
        //       }),
        //     ],
        //   });
        //   return new CastUIContainer({
        //     components: [
        //       new SubtitleOverlay(),
        //       new BufferingOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Watermark(),
        //       controlBar,
        //       new TitleBar({ keepHiddenWithoutMetadata: true }),
        //       new ErrorMessageOverlay(),
        //     ],
        //     cssClasses: ['ui-skin-mi-wbc', 'ui-skin-cast-receiver'],
        //   });
        // }
        // export function buildModernUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   // show smallScreen UI only on mobile/handheld devices
        //   let smallScreenSwitchWidth = 600;
        //   return new UIManager(player, [{
        //     ui: modernSmallScreenAdsUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isMobile && context.documentWidth < smallScreenSwitchWidth && context.isAdWithUI;
        //     },
        //   }, {
        //     ui: modernAdsUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isAdWithUI;
        //     },
        //   }, {
        //     ui: modernSmallScreenUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isMobile && context.documentWidth < smallScreenSwitchWidth;
        //     },
        //   }, {
        //     ui: modernUI(),
        //   }], config);
        // }
        // export function buildModernSmallScreenUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, [{
        //     ui: modernSmallScreenAdsUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isAdWithUI;
        //     },
        //   }, {
        //     ui: modernSmallScreenUI(),
        //   }], config);
        // }
        // export function buildModernCastReceiverUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, modernCastReceiverUI(), config);
        // }
        // function legacyUI() {
        //   let settingsPanel = new SettingsPanel({
        //     components: [
        //       new SettingsPanelItem('Video Quality', new VideoQualitySelectBox()),
        //       new SettingsPanelItem('Audio Track', new AudioTrackSelectBox()),
        //       new SettingsPanelItem('Audio Quality', new AudioQualitySelectBox()),
        //       new SettingsPanelItem('Subtitles', new SubtitleSelectBox()),
        //     ],
        //     hidden: true,
        //   });
        //   let controlBar = new ControlBar({
        //     components: [
        //       settingsPanel,
        //       new PlaybackToggleButton(),
        //       new SeekBar({ label: new SeekBarLabel() }),
        //       new PlaybackTimeLabel(),
        //       new VRToggleButton(),
        //       new VolumeControlButton(),
        //       new SettingsToggleButton({ settingsPanel: settingsPanel }),
        //       new CastToggleButton(),
        //       new FullscreenToggleButton(),
        //     ],
        //   });
        //   return new UIContainer({
        //     components: [
        //       new SubtitleOverlay(),
        //       new CastStatusOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Watermark(),
        //       new RecommendationOverlay(),
        //       controlBar,
        //       new TitleBar(),
        //       new ErrorMessageOverlay(),
        //     ],
        //     cssClasses: ['ui-skin-legacy'],
        //   });
        // }
        // function legacyAdsUI() {
        //   return new UIContainer({
        //     components: [
        //       new AdClickOverlay(),
        //       new ControlBar({
        //         components: [
        //           new PlaybackToggleButton(),
        //           new AdMessageLabel(),
        //           new VolumeControlButton(),
        //           new FullscreenToggleButton(),
        //         ],
        //       }),
        //       new AdSkipButton(),
        //     ],
        //     cssClasses: ['ui-skin-legacy', 'ui-skin-ads'],
        //   });
        // }
        // function legacyCastReceiverUI() {
        //   let controlBar = new ControlBar({
        //     components: [
        //       new SeekBar(),
        //       new PlaybackTimeLabel(),
        //     ],
        //   });
        //   return new UIContainer({
        //     components: [
        //       new SubtitleOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Watermark(),
        //       controlBar,
        //       new TitleBar(),
        //       new ErrorMessageOverlay(),
        //     ],
        //     cssClasses: ['ui-skin-legacy', 'ui-skin-cast-receiver'],
        //   });
        // }
        // function legacyTestUI() {
        //   let settingsPanel = new SettingsPanel({
        //     components: [
        //       new SettingsPanelItem('Video Quality', new VideoQualitySelectBox()),
        //       new SettingsPanelItem('Audio Track', new AudioTrackSelectBox()),
        //       new SettingsPanelItem('Audio Quality', new AudioQualitySelectBox()),
        //       new SettingsPanelItem('Subtitles', new SubtitleSelectBox()),
        //     ],
        //     hidden: true,
        //   });
        //   let controlBar = new ControlBar({
        //     components: [settingsPanel,
        //       new PlaybackToggleButton(),
        //       new SeekBar({ label: new SeekBarLabel() }),
        //       new PlaybackTimeLabel(),
        //       new VRToggleButton(),
        //       new VolumeToggleButton(),
        //       new VolumeSlider(),
        //       new VolumeControlButton(),
        //       new VolumeControlButton({ vertical: false }),
        //       new SettingsToggleButton({ settingsPanel: settingsPanel }),
        //       new CastToggleButton(),
        //       new FullscreenToggleButton(),
        //     ],
        //   });
        //   return new UIContainer({
        //     components: [
        //       new SubtitleOverlay(),
        //       new CastStatusOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Watermark(),
        //       new RecommendationOverlay(),
        //       controlBar,
        //       new TitleBar(),
        //       new ErrorMessageOverlay(),
        //     ],
        //     cssClasses: ['ui-skin-legacy'],
        //   });
        // }
        // export function buildLegacyUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, [{
        //     ui: legacyAdsUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isAdWithUI;
        //     },
        //   }, {
        //     ui: legacyUI(),
        //   }], config);
        // }
        // export function buildLegacyCastReceiverUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, legacyCastReceiverUI(), config);
        // }
        // export function buildLegacyTestUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, legacyTestUI(), config);
        // }
    })(Factory = UIManager.Factory || (UIManager.Factory = {}));
})(UIManager = exports.UIManager || (exports.UIManager = {}));
exports.UIManager = UIManager;
/**
 * Encapsulates functionality to manage a UI instance. Used by the {@link UIManager} to manage multiple UI instances.
 */
var UIInstanceManager = (function () {
    function UIInstanceManager(player, ui, config) {
        this.events = {
            onConfigured: new eventdispatcher_1.EventDispatcher(),
            onSeek: new eventdispatcher_1.EventDispatcher(),
            onSeekPreview: new eventdispatcher_1.EventDispatcher(),
            onSeeked: new eventdispatcher_1.EventDispatcher(),
            onComponentShow: new eventdispatcher_1.EventDispatcher(),
            onComponentHide: new eventdispatcher_1.EventDispatcher(),
            onControlsShow: new eventdispatcher_1.EventDispatcher(),
            onPreviewControlsHide: new eventdispatcher_1.EventDispatcher(),
            onControlsHide: new eventdispatcher_1.EventDispatcher(),
            onRelease: new eventdispatcher_1.EventDispatcher(),
        };
        this.playerWrapper = new PlayerWrapper(player);
        this.ui = ui;
        this.config = config;
    }
    UIInstanceManager.prototype.getConfig = function () {
        return this.config;
    };
    UIInstanceManager.prototype.getUI = function () {
        return this.ui;
    };
    UIInstanceManager.prototype.getPlayer = function () {
        return this.playerWrapper.getPlayer();
    };
    Object.defineProperty(UIInstanceManager.prototype, "onConfigured", {
        /**
         * Fires when the UI is fully configured and added to the DOM.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onConfigured;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onSeek", {
        /**
         * Fires when a seek starts.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onSeek;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onSeekPreview", {
        /**
         * Fires when the seek timeline is scrubbed.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onSeekPreview;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onSeeked", {
        /**
         * Fires when a seek is finished.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onSeeked;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onComponentShow", {
        /**
         * Fires when a component is showing.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onComponentShow;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onComponentHide", {
        /**
         * Fires when a component is hiding.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onComponentHide;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onControlsShow", {
        /**
         * Fires when the UI controls are showing.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onControlsShow;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onPreviewControlsHide", {
        /**
         * Fires before the UI controls are hiding to check if they are allowed to hide.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onPreviewControlsHide;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onControlsHide", {
        /**
         * Fires when the UI controls are hiding.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onControlsHide;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onRelease", {
        /**
         * Fires when the UI controls are released.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onRelease;
        },
        enumerable: true,
        configurable: true
    });
    UIInstanceManager.prototype.clearEventHandlers = function () {
        this.playerWrapper.clearEventHandlers();
        var events = this.events; // avoid TS7017
        for (var event_1 in events) {
            var dispatcher = events[event_1];
            dispatcher.unsubscribeAll();
        }
    };
    return UIInstanceManager;
}());
exports.UIInstanceManager = UIInstanceManager;
/**
 * Extends the {@link UIInstanceManager} for internal use in the {@link UIManager} and provides access to functionality
 * that components receiving a reference to the {@link UIInstanceManager} should not have access to.
 */
var InternalUIInstanceManager = (function (_super) {
    __extends(InternalUIInstanceManager, _super);
    function InternalUIInstanceManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InternalUIInstanceManager.prototype.getWrappedPlayer = function () {
        // TODO find a non-hacky way to provide the WrappedPlayer to the UIManager without exporting it
        // getPlayer() actually returns the WrappedPlayer but its return type is set to Player so the WrappedPlayer does
        // not need to be exported
        return this.getPlayer();
    };
    InternalUIInstanceManager.prototype.configureControls = function () {
        this.configureControlsTree(this.getUI());
        this.configured = true;
    };
    InternalUIInstanceManager.prototype.isConfigured = function () {
        return this.configured;
    };
    InternalUIInstanceManager.prototype.configureControlsTree = function (component) {
        var _this = this;
        var configuredComponents = [];
        uiutils_1.UIUtils.traverseTree(component, function (component) {
            // First, check if we have already configured a component, and throw an error if we did. Multiple configuration
            // of the same component leads to unexpected UI behavior. Also, a component that is in the UI tree multiple
            // times hints at a wrong UI structure.
            // We could just skip configuration in such a case and not throw an exception, but enforcing a clean UI tree
            // seems like the better choice.
            for (var _i = 0, configuredComponents_1 = configuredComponents; _i < configuredComponents_1.length; _i++) {
                var configuredComponent = configuredComponents_1[_i];
                if (configuredComponent === component) {
                    // Write the component to the console to simplify identification of the culprit
                    // (e.g. by inspecting the config)
                    if (console) {
                        console.error('Circular reference in UI tree', component);
                    }
                    // Additionally throw an error, because this case must not happen and leads to unexpected UI behavior.
                    throw Error('Circular reference in UI tree: ' + component.constructor.name);
                }
            }
            component.initialize();
            component.configure(_this.getPlayer(), _this);
            configuredComponents.push(component);
        });
    };
    InternalUIInstanceManager.prototype.releaseControls = function () {
        // Do not call release methods if the components have never been configured; this can result in exceptions
        if (this.configured) {
            this.onRelease.dispatch(this.getUI());
            this.releaseControlsTree(this.getUI());
            this.configured = false;
        }
        this.released = true;
    };
    InternalUIInstanceManager.prototype.isReleased = function () {
        return this.released;
    };
    InternalUIInstanceManager.prototype.releaseControlsTree = function (component) {
        component.release();
        if (component instanceof container_1.Container) {
            for (var _i = 0, _a = component.getComponents(); _i < _a.length; _i++) {
                var childComponent = _a[_i];
                this.releaseControlsTree(childComponent);
            }
        }
    };
    InternalUIInstanceManager.prototype.clearEventHandlers = function () {
        _super.prototype.clearEventHandlers.call(this);
    };
    return InternalUIInstanceManager;
}(UIInstanceManager));
/**
 * Wraps the player to track event handlers and provide a simple method to remove all registered event
 * handlers from the player.
 */
var PlayerWrapper = (function () {
    function PlayerWrapper(player) {
        var _this = this;
        this.eventHandlers = {};
        this.player = player;
        // Collect all members of the player (public API methods and properties of the player)
        // (Object.getOwnPropertyNames(player) does not work with the player TypeScript class starting in 7.2)
        var members = [];
        for (var member in player) {
            members.push(member);
        }
        // Split the members into methods and properties
        var methods = [];
        var properties = [];
        for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {
            var member = members_1[_i];
            if (typeof player[member] === 'function') {
                methods.push(member);
            }
            else {
                properties.push(member);
            }
        }
        // Create wrapper object
        var wrapper = {};
        var _loop_1 = function (method) {
            wrapper[method] = function () {
                // console.log('called ' + member); // track method calls on the player
                return player[method].apply(player, arguments);
            };
        };
        // Add function wrappers for all API methods that do nothing but calling the base method on the player
        for (var _a = 0, methods_1 = methods; _a < methods_1.length; _a++) {
            var method = methods_1[_a];
            _loop_1(method);
        }
        var _loop_2 = function (property) {
            // Get an eventually existing property descriptor to differentiate between plain properties and properties with
            // getters/setters.
            var propertyDescriptor = Object.getOwnPropertyDescriptor(player, property) ||
                Object.getOwnPropertyDescriptor(Object.getPrototypeOf(player), property);
            // If the property has getters/setters, wrap them accordingly...
            if (propertyDescriptor && (propertyDescriptor.get || propertyDescriptor.set)) {
                Object.defineProperty(wrapper, property, {
                    get: function () { return propertyDescriptor.get.call(player); },
                    set: function (value) { return propertyDescriptor.set.call(player, value); },
                });
            }
            else {
                wrapper[property] = player[property];
            }
        };
        // Add all public properties of the player to the wrapper
        for (var _b = 0, properties_1 = properties; _b < properties_1.length; _b++) {
            var property = properties_1[_b];
            _loop_2(property);
        }
        // Explicitly add a wrapper method for 'addEventHandler' that adds added event handlers to the event list
        wrapper.addEventHandler = function (eventType, callback) {
            // in player V8 addEventHandler was replaced by on
            if (player.on) {
                player.on(eventType, callback);
            }
            else {
                // keep backward compatibility for versions <7.7
                player.addEventHandler(eventType, callback);
            }
            if (!_this.eventHandlers[eventType]) {
                _this.eventHandlers[eventType] = [];
            }
            _this.eventHandlers[eventType].push(callback);
            return wrapper;
        };
        // Explicitly add a wrapper method for 'removeEventHandler' that removes removed event handlers from the event list
        wrapper.removeEventHandler = function (eventType, callback) {
            if (player.off) {
                player.off(eventType, callback);
            }
            else {
                // keep backward compatibility for versions <7.7
                player.removeEventHandler(eventType, callback);
            }
            if (_this.eventHandlers[eventType]) {
                arrayutils_1.ArrayUtils.remove(_this.eventHandlers[eventType], callback);
            }
            return wrapper;
        };
        wrapper.fireEventInUI = function (event, data) {
            if (_this.eventHandlers[event]) {
                // Extend the data object with default values to convert it to a {@link PlayerEvent} object.
                var playerEventData = Object.assign({}, {
                    timestamp: Date.now(),
                    type: event,
                    // Add a marker property so the UI can detect UI-internal player events
                    uiSourced: true,
                }, data);
                // Execute the registered callbacks
                for (var _i = 0, _a = _this.eventHandlers[event]; _i < _a.length; _i++) {
                    var callback = _a[_i];
                    callback(playerEventData);
                }
            }
        };
        this.wrapper = wrapper;
    }
    /**
     * Returns a wrapped player object that can be used on place of the normal player object.
     * @returns {WrappedPlayer} a wrapped player
     */
    PlayerWrapper.prototype.getPlayer = function () {
        return this.wrapper;
    };
    /**
     * Clears all registered event handlers from the player that were added through the wrapped player.
     */
    PlayerWrapper.prototype.clearEventHandlers = function () {
        for (var eventType in this.eventHandlers) {
            for (var _i = 0, _a = this.eventHandlers[eventType]; _i < _a.length; _i++) {
                var callback = _a[_i];
                this.player.removeEventHandler(eventType, callback);
            }
        }
    };
    return PlayerWrapper;
}());


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Guid;
(function (Guid) {
    var guid = 1;
    function next() {
        return guid++;
    }
    Guid.next = next;
})(Guid = exports.Guid || (exports.Guid = {}));


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var storageutils_1 = __webpack_require__(44);
var component_1 = __webpack_require__(2);
var eventdispatcher_1 = __webpack_require__(3);
var SubtitleSettingsManager = (function () {
    function SubtitleSettingsManager() {
        var _this = this;
        this._properties = {
            fontColor: new SubtitleSettingsProperty(this),
            fontOpacity: new SubtitleSettingsProperty(this),
            fontFamily: new SubtitleSettingsProperty(this),
            fontSize: new SubtitleSettingsProperty(this),
            characterEdge: new SubtitleSettingsProperty(this),
            backgroundColor: new SubtitleSettingsProperty(this),
            backgroundOpacity: new SubtitleSettingsProperty(this),
            windowColor: new SubtitleSettingsProperty(this),
            windowOpacity: new SubtitleSettingsProperty(this),
        };
        this.userSettings = {};
        this.localStorageKey = DummyComponent.instance().prefixCss('subtitlesettings');
        var _loop_1 = function (propertyName) {
            this_1._properties[propertyName].onChanged.subscribe(function (sender, property) {
                if (property.isSet()) {
                    _this.userSettings[propertyName] = property.value;
                }
                else {
                    // Delete the property from the settings object if unset to avoid serialization of null values
                    delete _this.userSettings[propertyName];
                }
                // Save the settings object when a property has changed
                _this.save();
            });
        };
        var this_1 = this;
        for (var propertyName in this._properties) {
            _loop_1(propertyName);
        }
        this.load();
    }
    SubtitleSettingsManager.prototype.reset = function () {
        for (var propertyName in this._properties) {
            this._properties[propertyName].clear();
        }
    };
    Object.defineProperty(SubtitleSettingsManager.prototype, "fontColor", {
        get: function () {
            return this._properties.fontColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "fontOpacity", {
        get: function () {
            return this._properties.fontOpacity;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "fontFamily", {
        get: function () {
            return this._properties.fontFamily;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "fontSize", {
        get: function () {
            return this._properties.fontSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "characterEdge", {
        get: function () {
            return this._properties.characterEdge;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "backgroundColor", {
        get: function () {
            return this._properties.backgroundColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "backgroundOpacity", {
        get: function () {
            return this._properties.backgroundOpacity;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "windowColor", {
        get: function () {
            return this._properties.windowColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "windowOpacity", {
        get: function () {
            return this._properties.windowOpacity;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Saves the settings to local storage.
     */
    SubtitleSettingsManager.prototype.save = function () {
        storageutils_1.StorageUtils.setObject(this.localStorageKey, this.userSettings);
    };
    /**
     * Loads the settings from local storage
     */
    SubtitleSettingsManager.prototype.load = function () {
        this.userSettings = storageutils_1.StorageUtils.getObject(this.localStorageKey) || {};
        // Apply the loaded settings
        for (var property in this.userSettings) {
            this._properties[property].value = this.userSettings[property];
        }
    };
    return SubtitleSettingsManager;
}());
exports.SubtitleSettingsManager = SubtitleSettingsManager;
/**
 * A dummy component whose sole purpose is to expose the {@link #prefixCss} method to the
 * {@link SubtitleSettingsManager}.
 */
var DummyComponent = (function (_super) {
    __extends(DummyComponent, _super);
    function DummyComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DummyComponent.instance = function () {
        if (!DummyComponent._instance) {
            DummyComponent._instance = new DummyComponent();
        }
        return DummyComponent._instance;
    };
    DummyComponent.prototype.prefixCss = function (cssClassOrId) {
        return _super.prototype.prefixCss.call(this, cssClassOrId);
    };
    return DummyComponent;
}(component_1.Component));
var SubtitleSettingsProperty = (function () {
    function SubtitleSettingsProperty(manager) {
        this._manager = manager;
        this._onChanged = new eventdispatcher_1.EventDispatcher();
    }
    SubtitleSettingsProperty.prototype.isSet = function () {
        return this._value != null;
    };
    SubtitleSettingsProperty.prototype.clear = function () {
        this._value = null;
        this.onChangedEvent(null);
    };
    Object.defineProperty(SubtitleSettingsProperty.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            if (typeof value === 'string' && value === 'null') {
                value = null;
            }
            this._value = value;
            this.onChangedEvent(value);
        },
        enumerable: true,
        configurable: true
    });
    SubtitleSettingsProperty.prototype.onChangedEvent = function (value) {
        this._onChanged.dispatch(this._manager, this);
    };
    Object.defineProperty(SubtitleSettingsProperty.prototype, "onChanged", {
        get: function () {
            return this._onChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return SubtitleSettingsProperty;
}());
exports.SubtitleSettingsProperty = SubtitleSettingsProperty;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var dom_1 = __webpack_require__(1);
/**
 * Tracks the loading state of images.
 */
var ImageLoader = (function () {
    function ImageLoader() {
        this.state = {};
    }
    /**
     * Loads an image and call the callback once the image is loaded. If the image is already loaded, the callback
     * is called immediately, else it is called once loading has finished. Calling this method multiple times for the
     * same image while it is loading calls only let callback passed into the last call.
     * @param url The url to the image to load
     * @param loadedCallback The callback that is called when the image is loaded
     */
    ImageLoader.prototype.load = function (url, loadedCallback) {
        var _this = this;
        if (!this.state[url]) {
            // When the image was never attempted to be loaded before, we create a state and store it in the state map
            // for later use when the same image is requested to be loaded again.
            var state_1 = {
                url: url,
                image: new dom_1.DOM('img', {}),
                loadedCallback: loadedCallback,
                loaded: false,
                width: 0,
                height: 0,
            };
            this.state[url] = state_1;
            // Listen to the load event, update the state and call the callback once the image is loaded
            state_1.image.on('load', function (e) {
                state_1.loaded = true;
                state_1.width = state_1.image.get(0).width;
                state_1.height = state_1.image.get(0).height;
                _this.callLoadedCallback(state_1);
            });
            // Set the image URL to start the loading
            state_1.image.attr('src', state_1.url);
        }
        else {
            // We have a state for the requested image, so it is either already loaded or currently loading
            var state = this.state[url];
            // We overwrite the callback to make sure that only the callback of the latest call gets executed.
            // Earlier callbacks become invalid once a new load call arrives, and they are not called as long as the image
            // is not loaded.
            state.loadedCallback = loadedCallback;
            // When the image is already loaded, we directly execute the callback instead of waiting for the load event
            if (state.loaded) {
                this.callLoadedCallback(state);
            }
        }
    };
    ImageLoader.prototype.callLoadedCallback = function (state) {
        state.loadedCallback(state.url, state.width, state.height);
    };
    return ImageLoader;
}());
exports.ImageLoader = ImageLoader;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
/**
 * Animated analog TV static noise.
 */
var TvNoiseCanvas = (function (_super) {
    __extends(TvNoiseCanvas, _super);
    function TvNoiseCanvas(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.canvasWidth = 160;
        _this.canvasHeight = 90;
        _this.interferenceHeight = 50;
        _this.lastFrameUpdate = 0;
        _this.frameInterval = 60;
        _this.useAnimationFrame = !!window.requestAnimationFrame;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-tvnoisecanvas',
        }, _this.config);
        return _this;
    }
    TvNoiseCanvas.prototype.toDomElement = function () {
        return this.canvas = new dom_1.DOM('canvas', { 'class': this.getCssClasses() });
    };
    TvNoiseCanvas.prototype.start = function () {
        this.canvasElement = this.canvas.get(0);
        this.canvasContext = this.canvasElement.getContext('2d');
        this.noiseAnimationWindowPos = -this.canvasHeight;
        this.lastFrameUpdate = 0;
        this.canvasElement.width = this.canvasWidth;
        this.canvasElement.height = this.canvasHeight;
        this.renderFrame();
    };
    TvNoiseCanvas.prototype.stop = function () {
        if (this.useAnimationFrame) {
            cancelAnimationFrame(this.frameUpdateHandlerId);
        }
        else {
            clearTimeout(this.frameUpdateHandlerId);
        }
    };
    TvNoiseCanvas.prototype.renderFrame = function () {
        // This code has been copied from the player controls.js and simplified
        if (this.lastFrameUpdate + this.frameInterval > new Date().getTime()) {
            // It's too early to render the next frame
            this.scheduleNextRender();
            return;
        }
        var currentPixelOffset;
        var canvasWidth = this.canvasWidth;
        var canvasHeight = this.canvasHeight;
        // Create texture
        var noiseImage = this.canvasContext.createImageData(canvasWidth, canvasHeight);
        // Fill texture with noise
        for (var y = 0; y < canvasHeight; y++) {
            for (var x = 0; x < canvasWidth; x++) {
                currentPixelOffset = (canvasWidth * y * 4) + x * 4;
                noiseImage.data[currentPixelOffset] = Math.random() * 255;
                if (y < this.noiseAnimationWindowPos || y > this.noiseAnimationWindowPos + this.interferenceHeight) {
                    noiseImage.data[currentPixelOffset] *= 0.85;
                }
                noiseImage.data[currentPixelOffset + 1] = noiseImage.data[currentPixelOffset];
                noiseImage.data[currentPixelOffset + 2] = noiseImage.data[currentPixelOffset];
                noiseImage.data[currentPixelOffset + 3] = 50;
            }
        }
        // Put texture onto canvas
        this.canvasContext.putImageData(noiseImage, 0, 0);
        this.lastFrameUpdate = new Date().getTime();
        this.noiseAnimationWindowPos += 7;
        if (this.noiseAnimationWindowPos > canvasHeight) {
            this.noiseAnimationWindowPos = -canvasHeight;
        }
        this.scheduleNextRender();
    };
    TvNoiseCanvas.prototype.scheduleNextRender = function () {
        if (this.useAnimationFrame) {
            this.frameUpdateHandlerId = window.requestAnimationFrame(this.renderFrame.bind(this));
        }
        else {
            this.frameUpdateHandlerId = setTimeout(this.renderFrame.bind(this), this.frameInterval);
        }
    };
    return TvNoiseCanvas;
}(component_1.Component));
exports.TvNoiseCanvas = TvNoiseCanvas;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(2);
var timeout_1 = __webpack_require__(9);
/**
 * Overlays the player and displays an audio-only indicator.
 */
var AudioOnlyOverlay = (function (_super) {
    __extends(AudioOnlyOverlay, _super);
    function AudioOnlyOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.indicatorConfig = [
            new component_1.Component({ tag: 'div', cssClass: 'ui-audioonly-overlay-indicator', hidden: true }),
        ];
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-audioonly-overlay',
            hidden: false,
            components: _this.indicatorConfig,
        }, _this.config);
        return _this;
    }
    AudioOnlyOverlay.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        this.componentConfig = uimanager.getConfig().audioOnlyOverlayConfig || {};
        var config = this.getConfig();
        var indicator = config.components[0];
        var backgroundImageUrl = this.componentConfig.backgroundImageUrl;
        var element = this.getDomElement();
        var showBackgroundImage = function () {
            element.css('backgroundImage', "url(" + backgroundImageUrl + ")");
            element.css('backgroundSize', 'contain');
            element.css('backgroundColor', '#000000');
            element.css('animation', 'none');
            element.css('backgroundPosition', 'center');
        };
        var overlayShowTimeout = new timeout_1.Timeout(400, function () {
            indicator.show();
        });
        var showOverlay = function () {
            overlayShowTimeout.start();
        };
        var hideOverlay = function () {
            overlayShowTimeout.clear();
            indicator.hide();
        };
        if (backgroundImageUrl) {
            showBackgroundImage();
        }
        if (!this.componentConfig.hiddeIndicator) {
            player.addEventHandler(player.EVENT.ON_PLAY, showOverlay);
            player.addEventHandler(player.EVENT.ON_PAUSED, hideOverlay);
        }
    };
    return AudioOnlyOverlay;
}(container_1.Container));
exports.AudioOnlyOverlay = AudioOnlyOverlay;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var listselector_1 = __webpack_require__(33);
var dom_1 = __webpack_require__(1);
var ItemSelectionList = (function (_super) {
    __extends(ItemSelectionList, _super);
    function ItemSelectionList(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            tag: 'ul',
            cssClass: 'ui-itemselectionlist',
        }, _this.config);
        return _this;
    }
    ItemSelectionList.prototype.isActive = function () {
        return this.items.length > 1;
    };
    ItemSelectionList.prototype.toDomElement = function () {
        var listElement = new dom_1.DOM('ul', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        this.listElement = listElement;
        this.updateDomItems();
        return listElement;
    };
    ItemSelectionList.prototype.updateDomItems = function (selectedValue) {
        var _this = this;
        if (selectedValue === void 0) { selectedValue = null; }
        // Delete all children
        this.listElement.empty();
        var selectedListItem = null;
        var selectItem = function (listItem) {
            listItem.addClass(_this.prefixCss(ItemSelectionList.CLASS_SELECTED));
        };
        var deselectItem = function (listItem) {
            listItem.removeClass(_this.prefixCss(ItemSelectionList.CLASS_SELECTED));
        };
        var _loop_1 = function (item) {
            var listItem = new dom_1.DOM('li', {
                'type': 'li',
                'class': this_1.prefixCss('ui-selectionlistitem'),
            }).append(new dom_1.DOM('a', {}).html(item.label));
            if (!selectedListItem) {
                if (selectedValue == null) {
                    selectedListItem = listItem;
                }
                else if (String(selectedValue) === item.key) {
                    selectedListItem = listItem;
                }
            }
            // Handle list item selections
            listItem.on('click', function () {
                // Deselect the previous item (if there was a selected item)
                if (selectedListItem) {
                    deselectItem(selectedListItem);
                }
                // Select the clicked item
                selectedListItem = listItem;
                selectItem(listItem);
                // Fire the event
                _this.onItemSelectedEvent(item.key, false);
            });
            // Select default item
            if (selectedListItem) {
                selectItem(selectedListItem);
            }
            this_1.listElement.append(listItem);
        };
        var this_1 = this;
        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
            var item = _a[_i];
            _loop_1(item);
        }
    };
    ItemSelectionList.prototype.onItemAddedEvent = function (value) {
        _super.prototype.onItemAddedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    ItemSelectionList.prototype.onItemRemovedEvent = function (value) {
        _super.prototype.onItemRemovedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    ItemSelectionList.prototype.onItemSelectedEvent = function (value, updateDomItems) {
        if (updateDomItems === void 0) { updateDomItems = true; }
        _super.prototype.onItemSelectedEvent.call(this, value);
        if (updateDomItems) {
            this.updateDomItems(value);
        }
    };
    return ItemSelectionList;
}(listselector_1.ListSelector));
ItemSelectionList.CLASS_SELECTED = 'selected';
exports.ItemSelectionList = ItemSelectionList;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var clickoverlay_1 = __webpack_require__(28);
/**
 * A watermark overlay with a clickable logo.
 */
var Watermark = (function (_super) {
    __extends(Watermark, _super);
    function Watermark(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-watermark',
            url: 'http://bitmovin.com',
        }, _this.config);
        return _this;
    }
    return Watermark;
}(clickoverlay_1.ClickOverlay));
exports.Watermark = Watermark;


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var volumeslider_1 = __webpack_require__(26);
var volumetogglebutton_1 = __webpack_require__(17);
var timeout_1 = __webpack_require__(9);
/**
 * A composite volume control that consists of and internally manages a volume control button that can be used
 * for muting, and a (depending on the CSS style, e.g. slide-out) volume control bar.
 */
var VolumeControlButton = (function (_super) {
    __extends(VolumeControlButton, _super);
    function VolumeControlButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.volumeToggleButton = new volumetogglebutton_1.VolumeToggleButton();
        _this.volumeSlider = new volumeslider_1.VolumeSlider({
            vertical: config.vertical != null ? config.vertical : true,
            hidden: true,
        });
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-volumecontrolbutton',
            components: [_this.volumeToggleButton, _this.volumeSlider],
            hideDelay: 500,
        }, _this.config);
        return _this;
    }
    VolumeControlButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var volumeToggleButton = this.getVolumeToggleButton();
        var volumeSlider = this.getVolumeSlider();
        this.volumeSliderHideTimeout = new timeout_1.Timeout(this.getConfig().hideDelay, function () {
            volumeSlider.hide();
        });
        /*
         * Volume Slider visibility handling
         *
         * The volume slider shall be visible while the user hovers the mute toggle button, while the user hovers the
         * volume slider, and while the user slides the volume slider. If none of these situations are true, the slider
         * shall disappear.
         */
        var volumeSliderHovered = false;
        volumeToggleButton.getDomElement().on('mouseenter', function () {
            // Show volume slider when mouse enters the button area
            if (volumeSlider.isHidden()) {
                volumeSlider.show();
            }
            // Avoid hiding of the slider when button is hovered
            _this.volumeSliderHideTimeout.clear();
        });
        volumeToggleButton.getDomElement().on('mouseleave', function () {
            // Hide slider delayed when button is left
            _this.volumeSliderHideTimeout.reset();
        });
        volumeSlider.getDomElement().on('mouseenter', function () {
            // When the slider is entered, cancel the hide timeout activated by leaving the button
            _this.volumeSliderHideTimeout.clear();
            volumeSliderHovered = true;
        });
        volumeSlider.getDomElement().on('mouseleave', function () {
            // When mouse leaves the slider, only hide it if there is no slide operation in progress
            if (volumeSlider.isSeeking()) {
                _this.volumeSliderHideTimeout.clear();
            }
            else {
                _this.volumeSliderHideTimeout.reset();
            }
            volumeSliderHovered = false;
        });
        volumeSlider.onSeeked.subscribe(function () {
            // When a slide operation is done and the slider not hovered (mouse outside slider), hide slider delayed
            if (!volumeSliderHovered) {
                _this.volumeSliderHideTimeout.reset();
            }
        });
    };
    VolumeControlButton.prototype.release = function () {
        _super.prototype.release.call(this);
        this.volumeSliderHideTimeout.clear();
    };
    /**
     * Provides access to the internally managed volume toggle button.
     * @returns {VolumeToggleButton}
     */
    VolumeControlButton.prototype.getVolumeToggleButton = function () {
        return this.volumeToggleButton;
    };
    /**
     * Provides access to the internally managed volume silder.
     * @returns {VolumeSlider}
     */
    VolumeControlButton.prototype.getVolumeSlider = function () {
        return this.volumeSlider;
    };
    return VolumeControlButton;
}(container_1.Container));
exports.VolumeControlButton = VolumeControlButton;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
var stringutils_1 = __webpack_require__(10);
/**
 * A button that is displayed during ads and can be used to skip the ad.
 */
var AdSkipButton = (function (_super) {
    __extends(AdSkipButton, _super);
    function AdSkipButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-button-ad-skip',
            skipMessage: {
                countdown: 'Skip ad in {remainingTime}',
                skip: 'Skip ad',
            },
        }, _this.config);
        return _this;
    }
    AdSkipButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig(); // TODO get rid of generic cast
        var skipMessage = config.skipMessage;
        var adEvent = null;
        var updateSkipMessageHandler = function () {
            // Display this button only if ad is skippable
            if (adEvent.skipOffset) {
                _this.show();
            }
            else {
                _this.hide();
            }
            // Update the skip message on the button
            if (player.getCurrentTime() < adEvent.skipOffset) {
                _this.setText(stringutils_1.StringUtils.replaceAdMessagePlaceholders(config.skipMessage.countdown, adEvent.skipOffset, player));
            }
            else {
                _this.setText(config.skipMessage.skip);
            }
        };
        var adStartHandler = function (event) {
            adEvent = event;
            skipMessage = adEvent.skipMessage || skipMessage;
            updateSkipMessageHandler();
            player.addEventHandler(player.EVENT.ON_TIME_CHANGED, updateSkipMessageHandler);
            player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, updateSkipMessageHandler);
        };
        var adEndHandler = function () {
            player.removeEventHandler(player.EVENT.ON_TIME_CHANGED, updateSkipMessageHandler);
            player.removeEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, updateSkipMessageHandler);
        };
        player.addEventHandler(player.EVENT.ON_AD_STARTED, adStartHandler);
        player.addEventHandler(player.EVENT.ON_AD_SKIPPED, adEndHandler);
        player.addEventHandler(player.EVENT.ON_AD_ERROR, adEndHandler);
        player.addEventHandler(player.EVENT.ON_AD_FINISHED, adEndHandler);
        this.onClick.subscribe(function () {
            // Try to skip the ad (this only works if it is skippable so we don't need to take extra care of that here)
            player.skipAd();
        });
    };
    return AdSkipButton;
}(button_1.Button));
exports.AdSkipButton = AdSkipButton;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var label_1 = __webpack_require__(6);
var stringutils_1 = __webpack_require__(10);
/**
 * A label that displays a message about a running ad, optionally with a countdown.
 */
var AdMessageLabel = (function (_super) {
    __extends(AdMessageLabel, _super);
    function AdMessageLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-label-ad-message',
            text: 'This ad will end in {remainingTime} seconds.',
        }, _this.config);
        return _this;
    }
    AdMessageLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var text = this.getConfig().text;
        var updateMessageHandler = function () {
            _this.setText(stringutils_1.StringUtils.replaceAdMessagePlaceholders(text, null, player));
        };
        var adStartHandler = function (event) {
            text = event.adMessage || text;
            updateMessageHandler();
            player.addEventHandler(player.EVENT.ON_TIME_CHANGED, updateMessageHandler);
            player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, updateMessageHandler);
        };
        var adEndHandler = function () {
            player.removeEventHandler(player.EVENT.ON_TIME_CHANGED, updateMessageHandler);
            player.removeEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, updateMessageHandler);
        };
        player.addEventHandler(player.EVENT.ON_AD_STARTED, adStartHandler);
        player.addEventHandler(player.EVENT.ON_AD_SKIPPED, adEndHandler);
        player.addEventHandler(player.EVENT.ON_AD_ERROR, adEndHandler);
        player.addEventHandler(player.EVENT.ON_AD_FINISHED, adEndHandler);
    };
    return AdMessageLabel;
}(label_1.Label));
exports.AdMessageLabel = AdMessageLabel;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var clickoverlay_1 = __webpack_require__(28);
/**
 * A simple click capture overlay for clickThroughUrls of ads.
 */
var AdClickOverlay = (function (_super) {
    __extends(AdClickOverlay, _super);
    function AdClickOverlay() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AdClickOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var clickThroughUrl = null;
        var clickThroughEnabled = !player.getConfig().advertising
            || !player.getConfig().advertising.hasOwnProperty('clickThroughEnabled')
            || player.getConfig().advertising.clickThroughEnabled;
        player.addEventHandler(player.EVENT.ON_AD_STARTED, function (event) {
            clickThroughUrl = event.clickThroughUrl;
            if (clickThroughEnabled) {
                _this.setUrl(clickThroughUrl);
            }
            else {
                // If click-through is disabled, we set the url to null to avoid it open
                _this.setUrl(null);
            }
        });
        // Clear click-through URL when ad has finished
        var adFinishedHandler = function () {
            _this.setUrl(null);
        };
        player.addEventHandler(player.EVENT.ON_AD_FINISHED, adFinishedHandler);
        player.addEventHandler(player.EVENT.ON_AD_SKIPPED, adFinishedHandler);
        player.addEventHandler(player.EVENT.ON_AD_ERROR, adFinishedHandler);
        this.onClick.subscribe(function () {
            // Pause the ad when overlay is clicked
            player.pause('ui-content-click');
            // Notify the player of the clicked ad
            player.fireEvent(player.EVENT.ON_AD_CLICKED, {
                clickThroughUrl: clickThroughUrl,
            });
        });
    };
    return AdClickOverlay;
}(clickoverlay_1.ClickOverlay));
exports.AdClickOverlay = AdClickOverlay;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var uicontainer_1 = __webpack_require__(14);
var timeout_1 = __webpack_require__(9);
/**
 * The base container for Cast receivers that contains all of the UI and takes care that the UI is shown on
 * certain playback events.
 */
var CastUIContainer = (function (_super) {
    __extends(CastUIContainer, _super);
    function CastUIContainer(config) {
        return _super.call(this, config) || this;
    }
    CastUIContainer.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        /*
         * Show UI on Cast devices at certain playback events
         *
         * Since a Cast receiver does not have a direct HCI, we show the UI on certain playback events to give the user
         * a chance to see on the screen what's going on, e.g. on play/pause or a seek the UI is shown and the user can
         * see the current time and position on the seek bar.
         * The UI is shown permanently while playback is paused, otherwise hides automatically after the configured
         * hide delay time.
         */
        var isUiShown = false;
        var hideUi = function () {
            uimanager.onControlsHide.dispatch(_this);
            isUiShown = false;
        };
        this.castUiHideTimeout = new timeout_1.Timeout(config.hideDelay, hideUi);
        var showUi = function () {
            if (!isUiShown) {
                uimanager.onControlsShow.dispatch(_this);
                isUiShown = true;
            }
        };
        var showUiPermanently = function () {
            showUi();
            _this.castUiHideTimeout.clear();
        };
        var showUiWithTimeout = function () {
            showUi();
            _this.castUiHideTimeout.start();
        };
        var showUiAfterSeek = function () {
            if (player.isPlaying()) {
                showUiWithTimeout();
            }
            else {
                showUiPermanently();
            }
        };
        player.addEventHandler(player.EVENT.ON_READY, showUiWithTimeout);
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, showUiWithTimeout);
        player.addEventHandler(player.EVENT.ON_PLAY, showUiWithTimeout);
        player.addEventHandler(player.EVENT.ON_PAUSED, showUiPermanently);
        player.addEventHandler(player.EVENT.ON_SEEK, showUiPermanently);
        player.addEventHandler(player.EVENT.ON_SEEKED, showUiAfterSeek);
    };
    CastUIContainer.prototype.release = function () {
        _super.prototype.release.call(this);
        this.castUiHideTimeout.clear();
    };
    return CastUIContainer;
}(uicontainer_1.UIContainer));
exports.CastUIContainer = CastUIContainer;


/***/ }),
/* 84 */
/***/ (function(module, exports) {

/*! Hive Stats Pack build 4.1.0 Copyright(c) 2015 HiveStreaming AB, All rights reserved.
 * Authors: mikael.hogqvist@hivestreaming.com - riccardo.reale@hivestreaming.com - roberto.roverso@hivestreaming.com */
/*! AtatusJs - v2.3.12 - 2016-07-03
 * Copyright (c) 2016 Atatus */
!function(a){function b(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function c(a){return"undefined"==typeof a}if(a){var d={},e=a.TraceKit,f=[].slice,g="?";d.noConflict=function(){return a.TraceKit=e,d},d.wrap=function(a){function b(){try{return a.apply(this,arguments)}catch(b){throw d.report(b),b}}return b},d.report=function(){function c(a){i(),m.push(a)}function e(a){for(var b=m.length-1;b>=0;--b)m[b]===a&&m.splice(b,1)}function g(a,c){var e=null;if(!c||d.collectWindowErrors){for(var g in m)if(b(m,g))try{m[g].apply(null,[a].concat(f.call(arguments,2)))}catch(h){e=h}if(e)throw e}}function h(a,b,c,e,f){var h=null;if(f)h=d.computeStackTrace(f);else if(o)d.computeStackTrace.augmentStackTraceWithInitialElement(o,b,c,a),h=o,o=null,n=null;else{var i={url:b,line:c,column:e};i.func=d.computeStackTrace.guessFunctionName(i.url,i.line),i.context=d.computeStackTrace.gatherContext(i.url,i.line),h={mode:"onerror",message:a,url:document.location.href,stack:[i],useragent:navigator.userAgent}}return g(h,"from window.onerror"),k?k.apply(this,arguments):!1}function i(){l!==!0&&(k=a.onerror,a.onerror=h,l=!0)}function j(b){var c=f.call(arguments,1);if(o){if(n===b)return;var e=o;o=null,n=null,g.apply(null,[e,null].concat(c))}var h=d.computeStackTrace(b);throw o=h,n=b,a.setTimeout(function(){n===b&&(o=null,n=null,g.apply(null,[h,null].concat(c)))},h.incomplete?2e3:0),b}var k,l,m=[],n=null,o=null;return j.subscribe=c,j.unsubscribe=e,j}(),d.computeStackTrace=function(){function e(b){if(!d.remoteFetching)return"";try{var c=function(){try{return new a.XMLHttpRequest}catch(b){return new a.ActiveXObject("Microsoft.XMLHTTP")}},e=c();return e.open("GET",b,!1),e.send(""),e.responseText}catch(f){return""}}function f(a){if("string"!=typeof a)return[];if(!b(w,a)){var c="",d="";try{d=document.domain}catch(f){}-1!==a.indexOf(d)&&(c=e(a)),w[a]=c?c.split("\n"):[]}return w[a]}function h(a,b){var d,e=/function ([^(]*)\(([^)]*)\)/,h=/['"]?([0-9A-Za-z$_]+)['"]?\s*[:=]\s*(function|eval|new Function)/,i="",j=10,k=f(a);if(!k.length)return g;for(var l=0;j>l;++l)if(i=k[b-l]+i,!c(i)){if(d=h.exec(i))return d[1];if(d=e.exec(i))return d[1]}return g}function i(a,b){var e=f(a);if(!e.length)return null;var g=[],h=Math.floor(d.linesOfContext/2),i=h+d.linesOfContext%2,j=Math.max(0,b-h-1),k=Math.min(e.length,b+i-1);b-=1;for(var l=j;k>l;++l)c(e[l])||g.push(e[l]);return g.length>0?g:null}function j(a){return a.replace(/[\-\[\]{}()*+?.,\\\^$|#]/g,"\\$&")}function k(a){return j(a).replace("<","(?:<|&lt;)").replace(">","(?:>|&gt;)").replace("&","(?:&|&amp;)").replace('"','(?:"|&quot;)').replace(/\s+/g,"\\s+")}function l(a,b){for(var c,d,e=0,g=b.length;g>e;++e)if((c=f(b[e])).length&&(c=c.join("\n"),d=a.exec(c)))return{url:b[e],line:c.substring(0,d.index).split("\n").length,column:d.index-c.lastIndexOf("\n",d.index)-1};return null}function m(a,b,c){var d,e=f(b),g=new RegExp("\\b"+j(a)+"\\b");return c-=1,e&&e.length>c&&(d=g.exec(e[c]))?d.index:null}function n(b){for(var c,d,e,f,g=[a.location.href],h=document.getElementsByTagName("script"),i=""+b,m=/^function(?:\s+([\w$]+))?\s*\(([\w\s,]*)\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/,n=/^function on([\w$]+)\s*\(event\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/,o=0;o<h.length;++o){var p=h[o];p.src&&g.push(p.src)}if(e=m.exec(i)){var q=e[1]?"\\s+"+e[1]:"",r=e[2].split(",").join("\\s*,\\s*");c=j(e[3]).replace(/;$/,";?"),d=new RegExp("function"+q+"\\s*\\(\\s*"+r+"\\s*\\)\\s*{\\s*"+c+"\\s*}")}else d=new RegExp(j(i).replace(/\s+/g,"\\s+"));if(f=l(d,g))return f;if(e=n.exec(i)){var s=e[1];if(c=k(e[2]),d=new RegExp("on"+s+"=[\\'\"]\\s*"+c+"\\s*[\\'\"]","i"),f=l(d,g[0]))return f;if(d=new RegExp(c),f=l(d,g))return f}return null}function o(a){if(!a.stack)return null;for(var b,d,e=/^\s*at (.*?) ?\(?((?:file|https?|chrome-extension):.*?):(\d+)(?::(\d+))?\)?\s*$/i,f=/^\s*(.*?)(?:\((.*?)\))?@?((?:file|https?|chrome):.*?):(\d+)(?::(\d+))?\s*$/i,j=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:ms-appx|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,k=a.stack.split("\n"),l=[],n=/^(.*) is undefined$/.exec(a.message),o=0,p=k.length;p>o;++o){if(b=f.exec(k[o]))d={url:b[3],func:b[1]||g,args:b[2]?b[2].split(","):"",line:+b[4],column:b[5]?+b[5]:null};else if(b=e.exec(k[o]))d={url:b[2],func:b[1]||g,line:+b[3],column:b[4]?+b[4]:null};else{if(!(b=j.exec(k[o])))continue;d={url:b[2],func:b[1]||g,line:+b[3],column:b[4]?+b[4]:null}}!d.func&&d.line&&(d.func=h(d.url,d.line)),d.line&&(d.context=i(d.url,d.line)),l.push(d)}return l.length?(l[0]&&l[0].line&&!l[0].column&&n?l[0].column=m(n[1],l[0].url,l[0].line):l[0].column||c(a.columnNumber)||(l[0].column=a.columnNumber+1),{mode:"stack",name:a.name,message:a.message,url:document.location.href,stack:l,useragent:navigator.userAgent}):null}function p(a){for(var b,c=a.stacktrace,d=/ line (\d+), column (\d+) in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\) in (.*):\s*$/i,e=c.split("\n"),f=[],g=0,j=e.length;j>g;g+=2)if(b=d.exec(e[g])){var k={line:+b[1],column:+b[2],func:b[3]||b[4],args:b[5]?b[5].split(","):[],url:b[6]};if(!k.func&&k.line&&(k.func=h(k.url,k.line)),k.line)try{k.context=i(k.url,k.line)}catch(l){}k.context||(k.context=[e[g+1]]),f.push(k)}return f.length?{mode:"stacktrace",name:a.name,message:a.message,url:document.location.href,stack:f,useragent:navigator.userAgent}:null}function q(c){var d=c.message.split("\n");if(d.length<4)return null;var e,g,j,m,n=/^\s*Line (\d+) of linked script ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i,o=/^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i,p=/^\s*Line (\d+) of function script\s*$/i,q=[],r=document.getElementsByTagName("script"),s=[];for(g in r)b(r,g)&&!r[g].src&&s.push(r[g]);for(g=2,j=d.length;j>g;g+=2){var t=null;if(e=n.exec(d[g]))t={url:e[2],func:e[3],line:+e[1]};else if(e=o.exec(d[g])){t={url:e[3],func:e[4]};var u=+e[1],v=s[e[2]-1];if(v&&(m=f(t.url))){m=m.join("\n");var w=m.indexOf(v.innerText);w>=0&&(t.line=u+m.substring(0,w).split("\n").length)}}else if(e=p.exec(d[g])){var x=a.location.href.replace(/#.*$/,""),y=e[1],z=new RegExp(k(d[g+1]));m=l(z,[x]),t={url:x,line:m?m.line:y,func:""}}if(t){t.func||(t.func=h(t.url,t.line));var A=i(t.url,t.line),B=A?A[Math.floor(A.length/2)]:null;t.context=A&&B.replace(/^\s*/,"")===d[g+1].replace(/^\s*/,"")?A:[d[g+1]],q.push(t)}}return q.length?{mode:"multiline",name:c.name,message:d[0],url:document.location.href,stack:q,useragent:navigator.userAgent}:null}function r(a,b,c,d){var e={url:b,line:c};if(e.url&&e.line){a.incomplete=!1,e.func||(e.func=h(e.url,e.line)),e.context||(e.context=i(e.url,e.line));var f=/ '([^']+)' /.exec(d);if(f&&(e.column=m(f[1],e.url,e.line)),a.stack.length>0&&a.stack[0].url===e.url){if(a.stack[0].line===e.line)return!1;if(!a.stack[0].line&&a.stack[0].func===e.func)return a.stack[0].line=e.line,a.stack[0].context=e.context,!1}return a.stack.unshift(e),a.partial=!0,!0}return a.incomplete=!0,!1}function s(a,b){for(var c,e,f,i=/function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i,j=[],k={},l=!1,o=s.caller;o&&!l;o=o.caller)if(o!==t&&o!==d.report){if(e={url:null,func:g,line:null,column:null},o.name?e.func=o.name:(c=i.exec(o.toString()))&&(e.func=c[1]),"undefined"==typeof e.func)try{e.func=c.input.substring(0,c.input.indexOf("{"))}catch(p){}if(f=n(o)){e.url=f.url,e.line=f.line,e.func===g&&(e.func=h(e.url,e.line));var q=/ '([^']+)' /.exec(a.message||a.description);q&&(e.column=m(q[1],f.url,f.line))}k[""+o]?l=!0:k[""+o]=!0,j.push(e)}b&&j.splice(0,b);var u={mode:"callers",name:a.name,message:a.message,url:document.location.href,stack:j,useragent:navigator.userAgent};return r(u,a.sourceURL||a.fileName,a.line||a.lineNumber,a.message||a.description),u}function t(a,b){var c=null;b=null==b?0:+b;try{if(c=p(a))return c}catch(d){if(v)throw d}try{if(c=o(a))return c}catch(d){if(v)throw d}try{if(c=q(a))return c}catch(d){if(v)throw d}try{if(c=s(a,b+1))return c}catch(d){if(v)throw d}return{mode:"failed"}}function u(a){a=(null==a?0:+a)+1;try{throw new Error}catch(b){return t(b,a+1)}}var v=!1,w={};return t.augmentStackTraceWithInitialElement=r,t.guessFunctionName=h,t.gatherContext=i,t.ofCaller=u,t.getSource=f,t}(),d.extendToAsynchronousCallbacks=function(){var b=function(b){var c=a[b];a[b]=function(){var a=f.call(arguments),b=a[0];return"function"==typeof b&&(a[0]=d.wrap(b)),c.apply?c.apply(this,a):c(a[0],a[1])}};b("setTimeout"),b("setInterval")},d.remoteFetching||(d.remoteFetching=!0),d.collectWindowErrors||(d.collectWindowErrors=!0),(!d.linesOfContext||d.linesOfContext<1)&&(d.linesOfContext=11),a.TraceKit=d}}("undefined"!=typeof window?window:global),function(a,b){"use strict";if(a){var c=a.event.add;a.event.add=function(d,e,f,g,h){if("function"!=typeof f&&"function"!=typeof f.handler)return c.call(this,d,e,f,g,h);var i;return f.handler?(i=f.handler,f.handler=b.wrap(f.handler)):(i=f,f=b.wrap(f)),f.guid=i.guid?i.guid:i.guid=a.guid++,c.call(this,d,e,f,g,h)};var d=a.fn.ready;a.fn.ready=function(a){return d.call(this,b.wrap(a))};var e=a.ajax;a.ajax=function(c,d){"object"==typeof c&&(d=c,c=void 0),d=d||{};for(var f,g=["complete","error","success"];f=g.pop();)a.isFunction(d[f])&&(d[f]=b.wrap(d[f]));try{return c?e.call(this,c,d):e.call(this,d)}catch(h){throw b.report(h),h}}}}(window.jQuery,window.TraceKit),function(a,b,c,d){function e(a){var b=a,c=a.split("//")[1];if(c){var d=c.indexOf("?"),e=c.toString().substring(0,d),f=e.split("/").slice(0,4).join("/"),g=e.substring(0,48);b=f.length<g.length?f:g,b!==e&&(b+="..")}return b}function f(a,b,c,f){if(K&&(L||b.getAllResponseHeaders())){var g="AJAX Error: "+(b.statusText||"unknown")+" "+(c.type||"unknown")+" "+(e(c.url)||"unknown");V.send(f||a.type,{status:b.status,statusText:b.statusText,type:c.type,url:c.url,ajaxErrorMessage:g,contentType:c.contentType,requestData:c.data&&c.data.slice?c.data.slice(0,10240):d,responseData:b.responseText&&b.responseText.slice?b.responseText.slice(0,10240):d,activeTarget:a.target&&a.target.activeElement?a.target.activeElement.outerHTML:d})}}function g(){return o&&""!==o?!0:(R.log("Atatus API key has not been configured, make sure you call atatus.config(yourApiKey)"),!1)}function h(){var c=b.documentElement,d=b.getElementsByTagName("body")[0],e=a.innerWidth||c.clientWidth||d.clientWidth,f=a.innerHeight||c.clientHeight||d.clientHeight;return{width:e,height:f}}function i(a){var b=(new Date).toJSON();try{var c="atatusjs="+b+"="+R.getRandomInt();"undefined"==typeof localStorage[c]&&(localStorage[c]=a)}catch(d){R.log("Atatus: LocalStorage full, cannot save exception")}}function j(){try{return"localStorage"in a&&null!==a.localStorage}catch(b){return!1}}function k(){if(j()&&localStorage.length>0)for(var a in localStorage)if("atatusjs="===a.substring(0,9)){try{var b=JSON.parse(localStorage[a]);"apikey"in b&&m(N,b)}catch(c){R.log("Atatus: Invalid JSON object in LocalStorage")}localStorage.removeItem(a)}}function l(a,c){if(c=c||{},!a.stack||!a.stack.length)return void R.log("Atatus: Canceling send due to no stacktrace.");R.isEmpty(c.customData)&&(c.customData="function"==typeof p?p():p),R.isEmpty(c.tags)&&(c.tags=E);var d=c.customData&&c.customData.ajaxErrorMessage||a.message;if(d&&0===d.indexOf("Uncaught ")&&(d=a.message.substring(9)),d=d||c.status||"Script error.",w&&w.test(d))return void R.log("Atatus: canceling send due to ignore errors");var e=[];a.stack&&a.stack.length&&R.forEach(a.stack,function(a,b){R.endsWith(b.url,"/atatus.js")||e.push({ln:b.line||0,cn:b.column||0,f:b.url||"anonymous",m:b.func||"[anonymous]"})});var f=[a.name,d,JSON.stringify(e)].join("|");if(f===x)return void R.log("Atatus: canceling send due to duplicate errors");x=f;var g=c.customData;try{JSON.stringify(g)}catch(h){var i="Cannot add custom data; may contain circular reference";g={error:i},R.log("Atatus: "+i)}var j=U.getAllEvents();S.clear();var k={"class":a.name,name:d,backTraces:e,userActions:j,net:null,customData:g||null,tags:c.tags,sourcemap:J,request:{url:b.location.href,ua:navigator.userAgent}};if("function"==typeof y&&(k.groupingKey=y(k)),"function"==typeof z){var l=z(k);l&&m(N,k)}else m(N,k)}function m(c,d){if(G&&G.length&&-1===G.indexOf(location.host))return void R.log("Atatus: canceling send due to not a allowed domain");if(g()){if(!d.ts){var e=a.screen||h();d.ts=(new Date).getTime(),d.apikey=o,d.request=d.request||{},d.request.url=d.request.url||b.location.href,d.request.ua=d.request.ua||navigator.userAgent,d.request.w=e.width,d.request.h=e.height,d.v=r||"",d._v=B||""}q&&(d.cid=q.userId||null),R.log("Sending data to Atatus Receiver:",d),n(c,JSON.stringify(d))}}function n(a,b){var c=new Image,d=M+a+"?data="+encodeURIComponent(b);c.crossOrigin="anonymous",c.onload=function(){k()},c.onerror=c.onabort=function(){I&&a===N&&i(b)},c.src=d}var o,p,q,r,s,t,u,v,w,x,y,z,A,B="2.3.12",C=TraceKit.noConflict(),D=a.atatus,E=[],F=!1,G=[],H=!1,I=!1,J=!1,K=!1,L=!1,M="https://br-rx.atatus.com",N="/track/browser/errors",O="/track/browser/perf",P="/track/browser/perf/ajax",Q="/track/browser/perf/txn";c&&(A=c(b));var R={isBoolean:function(a){return"undefined"!=typeof a&&"boolean"==typeof a},isString:function(a){return"string"==typeof a},isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},endsWith:function(a,b){return a&&b?-1!==a.indexOf(b,a.length-b.length):!1},joinRegExp:function(a){for(var b,c=[],d=0,e=a.length;e>d;d++)b=a[d],R.isString(b)?c.push(b.replace(/([.*+?\^=!:${}()|\[\]\/\\])/g,"\\$1")):b&&b.source&&c.push(b.source);return new RegExp(c.join("|"),"i")},getTargetUrl:function(b){return a.XDomainRequest&&H&&(b=b.slice(6)),b},now:function(){return(new Date).getTime()},pad:function(a){return a=String(a),1===a.length&&(a="0"+a),a},merge:function(a,b){var c,d={};for(c in a)d[c]=a[c];for(c in b)d[c]=b[c];return d},mergeArray:function(a,b){return null!=b?a.concat(b):a},forEach:function(a,b){for(var c=0;c<a.length;c++)b.call(null,c,a[c])},isEmpty:function(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0},getRandomInt:function(){return Math.floor(9007199254740992*Math.random())},log:function(b,c){F&&a.console&&a.console.log&&(a.console.log(b),c&&a.console.log(c))},bind:function(a,b){return function(){return a.apply(b,Array.prototype.slice.call(arguments))}},canAllowInsecureSubmissions:function(){var b=a.navigator.userAgent,c=b.match(/Trident\/([\d.]+)/),d=c&&"7.0"===c[1]?11:(b=b.match(/MSIE ([\d.]+)/))?parseInt(b[1],10):!1;return d&&9>=d},uuid4:function(){return"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"===a?b:3&b|8;return c.toString(16)})},addEventListener:function(b,c,d){return"undefined"!=typeof a.attachEvent?a.attachEvent("on"+b,c):a.addEventListener?a.addEventListener(b,c,d):void 0},arrayFromObject:function(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(a[c]);return b}},S={eventObject:{},all:function(a){for(var b=this.getEventObject(a),c=[],d=0;d<b.length;d++)c.push(b[d].value);return c},clear:function(){for(var a in this.eventObject)this.eventObject.hasOwnProperty(a)&&(this.eventObject[a].length=0)},add:function(a,b){var c=this.getEventObject(a),d=R.uuid4();return c.push({key:d,value:b}),this.truncateEventObject(a,10),d},get:function(a,b){for(var c=this.getEventObject(a),d=0;d<c.length;d++)if(c[d].key===b)return c[d].value;return!1},getEventObject:function(a){return this.eventObject[a]||(this.eventObject[a]=[]),this.eventObject[a]},truncateEventObject:function(a,b){var c=this.getEventObject(a);c.length>b&&(this.eventObject[a]=c.slice(c.length-b))}},T={attach:function(b,c,d,e,f){b=b||a.console||{};for(var g=f||["log","debug","info","warn","error"],h=g.pop(),i=function(a,b,d){c&&S.add("user",{ts:R.now(),c:"console",l:a,m:b}),"error"===a&&e&&V.notify(new Error(b),d)};h;)this.wrapConsoleMethod(b,h,d,i),h=g.pop()},wrapConsoleMethod:function(a,b,c,d){var e=a[b],f=a;b in a&&(a[b]=function(){var a=[].slice.call(arguments),g=""+a.join(" "),h={level:b,logger:"console"};d&&d(b,g,h),e&&c&&Function.prototype.apply.call(e,f,a)})}},U={attach:function(){var a=R.bind(this.onDocumentClicked,this),c=R.bind(this.onInputChanged,this);b.addEventListener?(b.addEventListener("click",a,!0),b.addEventListener("blur",c,!0)):b.attachEvent&&(b.attachEvent("onclick",a),b.attachEvent("onfocusout",c))},writeUserEvent:function(a,b,c,d){"password"===this.getElementType(a)&&(c=void 0),S.add("user",{ts:R.now(),a:b,e:this.getOuterHTML(a),v:this.getValueKind(c,d)})},onDocumentClicked:function(a){var b=this.getElementFromEvent(a);b&&b.tagName&&(this.isTarget(b,"a")||this.isTarget(b,"button")||this.isTarget(b,"input",["button","submit"])?this.writeUserEvent(b,"click"):this.isTarget(b,"input",["checkbox","radio"])&&this.writeUserEvent(b,"check",b.value,b.checked))},onInputChanged:function(a){var b=this.getElementFromEvent(a);b&&b.tagName&&(this.isTarget(b,"textarea")?this.writeUserEvent(b,"input",b.value):this.isTarget(b,"select")&&b.options&&b.options.length?this.onSelectInputChanged(b):this.isTarget(b,"input")&&!this.isTarget(b,"input",["button","submit","hidden","checkbox","radio"])&&this.writeUserEvent(b,"input",b.value))},onSelectInputChanged:function(a){if(a.multiple){for(var b=0;b<a.options.length;b++)if(a.options[b].selected){this.writeUserEvent(a,"select",a.options[b].value);break}}else 0<=a.selectedIndex&&a.options[a.selectedIndex]&&this.writeUserEvent(a,"select",a.options[a.selectedIndex].value)},getElementFromEvent:function(a){return a.target||b.elementFromPoint(a.clientX,a.clientY)},isTarget:function(a,b,c){if(a.tagName.toLowerCase()!==b.toLowerCase())return!1;if(!c)return!0;for(var d=this.getElementType(a),e=0;e<c.length;e++)if(c[e]===d)return!0;return!1},getElementType:function(a){return(a.getAttribute("type")||"").toLowerCase()},getOuterHTML:function(a){for(var b="<"+a.tagName.toLowerCase(),c=a.attributes,d=0,e=c.length;e>d;d++){var f=c[d].name;"value"!==f.toLowerCase()&&(b+=" "+f+'="'+c[d].value+'"')}return b+=" >"},getValueKind:function(a,b){return null==a?null:{length:a.length,checked:b,pattern:this.matchInputPattern(a)}},matchInputPattern:function(a){return""===a?"empty":/^[a-z0-9!#$%&'*+=?\^_`{|}~\-]+(?:\.[a-z0-9!#$%&'*+=?\^_`{|}~\-]+)*@(?:[a-z0-9](?:[a-z0-9\-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9\-]*[a-z0-9])?$/.test(a)?"email":/^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/.test(a)||/^(\d{4}[\/\-](0?[1-9]|1[012])[\/\-]0?[1-9]|[12][0-9]|3[01])$/.test(a)?"date":/^(?:(?:\+?1\s*(?:[.\-]\s*)?)?(?:\(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\s*\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.\-]\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.\-]\s*)?([0-9]{4})(?:\s*(?:#|x\.?|ext\.?|extension)\s*(\d+))?$/.test(a)?"phone":/^\s*$/.test(a)?"whitespace":/^\d*$/.test(a)?"numeric":"character"},getAllEvents:function(){return S.all("user")}},V={noConflict:function(){return a.atatus=D,V},isConfigured:function(){return!!o},config:function(b,c){return c=c||{},o=b,C.remoteFetching=!1,w=[],c&&(p=c.customData,E=c.tags||[],J=!(!c.enableSourcemap&&!c.sourcemap),s=!!c.disableUserActions,t=!!c.disableAjaxMonitoring,u=!!c.disableRUM,F=!!c.debugMode,c.ignoreErrors&&R.isArray(c.ignoreErrors)&&(w=c.ignoreErrors),V.setAllowedDomains(c.allowedDomains),V.setVersion(c.version),V.enableOffline(c.enableOffline||c.offline),V.onBeforeErrorSend(c.beforeErrorSend),V.setGroupingKeyCallback(c.groupingKeyCallback)),H=R.canAllowInsecureSubmissions(),w.push(/^Script error\.?$/),w.push(/^Javascript error: Script error\.? on line 0$/),w=R.joinRegExp(w),k(),v={enabled:!0,timeline:!0,display:!0,error:!0,levels:null},R.isBoolean(c.console)&&(v.enabled=c.console),R.isBoolean(c.consoleTimeline)&&(v.timeline=c.consoleTimeline),R.isBoolean(c.consoleDisplay)&&(v.display=c.consoleDisplay),R.isBoolean(c.consoleErrorNotify)&&(v.error=c.consoleErrorNotify),R.isArray(c.consoleTimelineLevels)&&(v.levels=c.consoleTimelineLevels),v.enabled&&"console"in a&&a.console.log&&T.attach(a.console,v.timeline,v.display,v.error,v.levels),s||U.attach(),t||u||V.__attachAjaxHooks(),V},install:function(){return g()?(C.report.subscribe(l),C.extendToAsynchronousCallbacks(),A&&K&&A.ajaxError(f),V):void 0},uninstall:function(){return o=null,C.report.unsubscribe(l),A&&K&&A.unbind("ajaxError",f),V},setCustomData:function(a){return p=a,V},setTags:function(a){return E=a,V},setAllowedDomains:function(a){return a&&R.isArray(a)&&(G=a),V},getAllowedDomains:function(){return G},setUser:function(a,b,c,d){return q={},a&&(q.userId=""+a),b&&(q.email=""+b),c&&(q.firstName=""+c),d&&(q.lastName=""+d),V},setVersion:function(a){return a&&(r=""+a),V},enableOffline:function(a){return R.isBoolean(a)&&(I=a),V},onBeforeErrorSend:function(a){return"function"==typeof a&&(z=a),V},setGroupingKeyCallback:function(a){return"function"==typeof a&&(y=a),V},setAPIEndpoint:function(a){return M=a,V},init:function(a,b,c){return c&&(b=b||{},b.customData=c),V.config(a,b)},withCustomData:function(a){return V.setCustomData(a)},withTags:function(a){return V.setTags(a)},attach:function(){return V.install()},detach:function(){return V.uninstall()},notify:function(a,b,c){return V.send(a,b,c)},sendPerf:function(a){return u?void R.log("RUM is disabled. Please enable it in the config options."):m(O,a)},sendAjaxPerf:function(a){return u?void R.log("RUM is disabled. Please enable it in the config options."):m(P,a)},sendTxnPerf:function(a){return m(Q,a)},send:function(a,b,c){try{l(C.computeStackTrace(a),{customData:R.merge(p,b),tags:R.mergeArray(E,c)})}catch(d){if(a!==d)throw d}return V},_helper:R};a.atatus=V}(window,document,window.jQuery),function(a,b,c){function d(a){a.pl<=0||atatus.sendPerf(a)}function e(){var b=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance,c=b.timing,e=b.navigation;if(0===c.loadEventEnd)return!1;clearInterval(i),i=null;var f=c.navigationStart;0>=f&&(f=c.fetchStart);var g={};for(var h in j)g[j[h]]=-1,h in c&&(c[h]<=0||(g[j[h]]=c[h]-f));var k={nty:e.type,rc:e.redirectCount,nt:g.rps-g.ns,dp:g.dce-g.rps,pr:g.le-g.dce,fe:g.le-g.rps,pl:g.le-g.ns};d(k)}function f(){if(!h||!h.bDone)return!1;clearInterval(i),i=!1;var a=h.getMeasures();if(null!=a&&null!=a.backend&&null!=a.frontend&&null!=a["page load time"]&&null!=a["total load time"]){var b=a.backend,c=a.backend+a.frontend,e={nty:0,rc:0,nt:b,dp:c-b,pr:a["total load time"]-c,fe:a["total load time"]-b,pl:a["total load time"]};d(e)}}var g=(new Date).getTime(),h=h||{};h.q=h.q||[],h.version="0.3",h.targetOrigin=b.location.protocol+"//"+b.location.hostname,h.bPostMessage=!1,h.beaconUrl=h.beaconUrl||"/images/beacon.gif",h.autorun=!1,h.init=function(){if(h.bDone=!1,h.bUnloaded=!1,h.marks={},h.measures={},h.starts={},h.findStartTime(),h.addEventListener("beforeunload",h.beforeUnload,!1),h.addEventListener("pagehide",h.beforeUnload,!1),h.addEventListener("unload",h.beforeUnload,!1),h.processQ(),"complete"===b.readyState){var c=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance;c&&"undefined"!=typeof c.timing&&"undefined"!=typeof c.timing.loadEventEnd&&(h.mark("firstbyte",c.timing.responseStart),h.mark("onload",c.timing.loadEventEnd)),h.done()}else h.addEventListener("load",h.onload,!1)},h.processQ=function(){for(var a=h.q.length,b=0;a>b;b++){var c=h.q[b],d=c[0];"mark"===d?h.mark(c[1],c[2]):"measure"===d?h.measure(c[1],c[2],c[3]):"done"===d&&h.done(c[1])}},h.mark=function(b,c){return h.dprint("RUM_EPISODES.mark: "+b+", "+c),b?(h.marks[b]=parseInt(c||(new Date).getTime()),h.bPostMessage&&a.postMessage("RUM_EPISODES:mark:"+b+":"+c,h.targetOrigin),void("firstbyte"===b?h.measure("backend","starttime","firstbyte"):"onload"===b?(h.measure("frontend","firstbyte","onload"),h.measure("page load time","starttime","onload")):"done"===b&&h.measure("total load time","starttime","done"))):void h.dprint("Error: markName is undefined in RUM_EPISODES.mark.")},h.measure=function(b,c,d){if(h.dprint("RUM_EPISODES.measure: "+b+", "+c+", "+d),!b)return void h.dprint("Error: episodeName is undefined in RUM_EPISODES.measure.");var e;if("undefined"==typeof c)e="number"==typeof h.marks[b]?h.marks[b]:(new Date).getTime();else if("number"==typeof h.marks[c])e=h.marks[c];else{if("number"!=typeof c)return void h.dprint("Error: unexpected startNameOrTime in RUM_EPISODES.measure: "+c);e=c}var f;if("undefined"==typeof d)f=(new Date).getTime();else if("number"==typeof h.marks[d])f=h.marks[d];else{if("number"!=typeof d)return void h.dprint("Error: unexpected endNameOrTime in RUM_EPISODES.measure: "+d);f=d}h.starts[b]=parseInt(e),h.measures[b]=parseInt(f-e),h.bPostMessage&&a.postMessage("RUM_EPISODES:measure:"+b+":"+e+":"+f,h.targetOrigin)},h.done=function(b){h.bDone=!0,h.mark("done"),h.bPostMessage&&a.postMessage("RUM_EPISODES:done",h.targetOrigin),"function"==typeof b&&b()},h.getMarks=function(){return h.marks},h.getMeasures=function(){return h.measures},h.getStarts=function(){return h.starts},h.findStartTime=function(){var a=h.findStartWebTiming()||h.findStartCookie();a&&h.mark("starttime",a)},h.findStartWebTiming=function(){var b,c=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance;return c&&"undefined"!=typeof c.timing&&"undefined"!=typeof c.timing.navigationStart&&(b=c.timing.navigationStart,h.dprint("RUM_EPISODES.findStartWebTiming: startTime = "+b)),b},h.findStartCookie=function(){for(var d=b.cookie.split(" "),e=0;e<d.length;e++)if(0===d[e].indexOf("RUM_EPISODES=")){for(var f,g,i=d[e].substring("RUM_EPISODES=".length).split("&"),j=0;j<i.length;j++)if(0===i[j].indexOf("s="))f=i[j].substring(2);else if(0===i[j].indexOf("r=")){var k=i[j].substring(2);k=k.replace(/;$/,""),g=a.escape(b.referrer)===k}if(g&&f)return h.dprint("RUM_EPISODES.findStartCookie: startTime = "+f),f}return c},h.beforeUnload=function(){h.bUnloaded||(b.cookie="RUM_EPISODES=s="+Number(new Date)+"&r="+a.escape(b.location)+"; path=/",h.bUnloaded=!0)},h.onload=function(){h.mark("onload"),h.done()},h.addEventListener=function(b,c,d){return"undefined"!=typeof a.attachEvent?a.attachEvent("on"+b,c):a.addEventListener?a.addEventListener(b,c,d):void 0},h.dprint=function(){},h.init();var i=null,j={navigationStart:"ns",redirectStart:"rds",redirectEnd:"rde",unloadEventStart:"us",unloadEventEnd:"ue",fetchStart:"fs",domainLookupStart:"dls",domainLookupEnd:"dle",connectStart:"cs",secureConnectionStart:"scs",connectEnd:"ce",handshakeStart:"hs",requestStart:"rqs",responseStart:"rps",responseEnd:"rpe",domLoading:"dl",domInteractive:"di",domContentLoadedEventStart:"dcs",domContentLoadedEventEnd:"dce",domComplete:"dc",loadEventStart:"ls",loadEventEnd:"le"},k=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance;k&&"undefined"!=typeof k.timing&&"undefined"!=typeof k.navigation?i=setInterval(e,100):(h.mark("firstbyte",g),i=setInterval(f,100))}(window,document),atatus.__attachAjaxHooks=function(){!function(a,b){var c=atatus._helper,d={queue:[],batchSize:25,processing:!1,bUnloaded:!1,push:function(a){"string"==typeof a.url&&a.url.indexOf(".html")>0||(this.queue.push(a),this.queue.length>=this.batchSize&&this._processQueue())},_processQueue:function(){if(!this.processing&&this.queue.length){this.processing=!0;try{for(var a={},b={},d=0;d<this.queue.length;d++){var e,f=this.queue[d];if(f.status<400){e=f.method+f.url;var g=f.respAvailTime-f.sendTime,h=f.respProcTime-f.respAvailTime,i=f.receivedSize,j=f.sendSize,k=a[e];if(k){k.c++;var l=k.re;l.t=l.t+g,l.lo=l.lo<g?l.lo:g,l.hi=l.hi>g?l.hi:g,l.ssq=l.ssq+g*g;var m=k.cb;m.t=m.t+h,m.lo=m.lo<h?m.lo:h,m.hi=m.hi>h?m.hi:h,m.ssq=m.ssq+h*h;var n=k.rs;n.t=n.t+i,n.lo=n.lo<i?n.lo:i,n.hi=n.hi>i?n.hi:i,n.ssq=n.ssq+i*i;var o=k.ss;o.t=o.t+j,o.lo=o.lo<j?o.lo:j,o.hi=o.hi>j?o.hi:j,o.ssq=o.ssq+j*j}else a[e]={m:f.method,url:f.url,c:1,re:{t:g,lo:g,hi:g,ssq:g*g},cb:{t:h,lo:h,hi:h,ssq:h*h},rs:{t:f.receivedSize,lo:f.receivedSize,hi:f.receivedSize,ssq:f.receivedSize*f.receivedSize},ss:{t:f.sendSize,lo:f.sendSize,hi:f.sendSize,ssq:f.sendSize*f.sendSize}}}else e=f.method+f.status+f.url,b[e]?b[e].c++:b[e]={m:f.method,url:f.url,st:f.status,c:1}}var p={xhr:c.arrayFromObject(a),xhrError:c.arrayFromObject(b)};atatus.sendAjaxPerf(p)}catch(q){c.log("Error while processing queue: ",q)}finally{this.queue=[],this.processing=!1}}},beforeUnload:function(){d.bUnloaded||(d._processQueue(),d.bUnloaded=!0)}};c.addEventListener("beforeunload",d.beforeUnload,!1);var e={support:function(a){return!a||"apply"in a},around:function(a,b,d,e){return a=a||function(){},function(){var f,g=Array.prototype.slice.call(arguments);try{b&&(f=b.apply(this,g))}catch(h){c.log(e,h)}var i;try{i=a.apply(this,f||g)}finally{try{d&&d.apply(this,g)}catch(h){c.log(e,h)}}return i}},before:function(a,b){return e.around(a,b)},after:function(a,b){return e.around(a,null,b)},timeout:function(a){setTimeout(a,0)},wrapAddEventListener:function(){return function(a,b){if(("load"===a||"error"===a)&&b&&this._atrumXhrData){var c;b.__atrumInterceptor?c=b.__atrumInterceptor:e.support(b)?(c=g.wrapXHR(b,this,"XHR.invokeEventListener"),b.__atrumInterceptor=c):c=null;var d;return c&&(d=Array.prototype.slice.call(arguments),d[1]=c),d}}},wrapRemoveEventListener:function(){return function(a,b){if(this._atrumXhrData){var c=Array.prototype.slice.call(arguments);return b.__atrumInterceptor&&(c[1]=b.__atrumInterceptor),c}}},aroundWithHandleEvent:function(a,b,c,d){var f=a;return a&&"object"==typeof a&&"toString"in a&&"[xpconnect wrapped nsIDOMEventListener]"===a.toString()&&"handleEvent"in a&&(f=function(){a.handleEvent.apply(this,Array.prototype.slice.call(arguments))}),e.around(f,b,c,d)},getFullyQualifiedUrl:function(a){var c=b.createElement("a");return c.href=a,c.href}};if(a.XMLHttpRequest&&a.XMLHttpRequest.prototype){var f=a.XMLHttpRequest.prototype;if(!("open"in f&&"send"in f))return;if(!e.support(f.open)||!e.support(f.send))return;var g={};g.captureAjaxTimings=function(a){var b=a._atrumXhrData;if(b){var c=(new Date).getTime();2===a.readyState?b.firstByteTime=b.firstByteTime||c:4===a.readyState&&(b.respAvailTime=b.respAvailTime||c,b.firstByteTime=b.firstByteTime||c)}},g.sendPayload=function(a,b){b.receivedSize=0,a.responseType&&"text"!==a.responseType||"string"==typeof a.responseText&&(b.receivedSize=a.responseText.length),b.status=a.status,d.push(b)},g.wrapXHR=function(a,b,c){return e.aroundWithHandleEvent(a,function(){g.captureAjaxTimings(this)},function(){var a=b._atrumXhrData;if(a&&4===b.readyState){var c=(new Date).getTime();a.respProcTime=a.respProcTime||c,g.sendPayload(b,a),delete b._atrumXhrData}},c)},g.ajaxDone=function(a){if(a._atrumXhrData){var b=(new Date).getTime()+3e4,c=function(){g.captureAjaxTimings(a);var d=a._atrumXhrData;if(d){var e=(new Date).getTime();4===a.readyState?(d.respProcTime=d.respProcTime||e,g.sendPayload(a,d),delete a._atrumXhrData):b>e?setTimeout(c,50):delete a._atrumXhrData}};c()}},f.open=e.around(f.open,function(){var a=1<=arguments.length?String(arguments[0]):"",b=2<=arguments.length?String(arguments[1]):"",c=atatus.getAllowedDomains(),d=!0;if(b=e.getFullyQualifiedUrl(b),b&&c&&c.length){d=!1;for(var f=0;f<c.length;f++){var g=c[f];if(g&&b.indexOf(g)>-1){d=!0;break}}}d&&(b=b&&b.split("?")[0],this._atrumXhrData={method:a,url:b,sendTime:null,sendSize:null,firstByteTime:null,respAvailTime:null,respProcTime:null,receivedSize:null,parentPhase:null})},null,"XHR.open"),f.send=e.around(f.send,function(){var a=this,b=a._atrumXhrData;if(b){var c=(new Date).getTime();b.sendTime=b.sendTime||c,b.sendSize=1<=arguments.length&&arguments[0]?arguments[0].length||0:0;var d=0,f=function(){if(4===a.readyState)g.ajaxDone(a);else{var b=null;try{b=a.onreadystatechange}catch(c){return void g.ajaxDone(a)}d++,b?e.support(b)?a.onreadystatechange=g.wrapXHR(b,a,"XHR.onReadyStateChange"):g.ajaxDone(a):5>d?e.timeout(f):g.ajaxDone(a)}};f()}},null,"XHR.send"),"addEventListener"in f&&"removeEventListener"in f&&e.support(f.addEventListener)&&e.support(f.removeEventListener)&&(f.addEventListener=e.around(f.addEventListener,e.wrapAddEventListener(),null,"XHR.addEventListener"),f.removeEventListener=e.around(f.removeEventListener,e.wrapRemoveEventListener(),null,"XHR.removeEventListener"))}}(window,document)},function(a){function b(a,b,c){if(!(0>=b)){var d={name:a,dur:b,st:c};atatus.sendTxnPerf(d)}}function c(a){return h+" "+a}function d(){try{return"localStorage"in a&&null!==a.localStorage;}catch(b){return!1}}function e(a){var b=i.now();try{localStorage.setItem(c(a),b)}catch(d){}}function f(a){var b=null,d=c(a);try{b=localStorage.getItem(d),localStorage.removeItem(d)}catch(e){}var f=0;return b&&(f=i.now()-b),f}function g(a){try{var b=c(a);localStorage.removeItem(b)}catch(d){}}var h="atatus.com/",i=atatus._helper,j=1,k=0;atatus.beginTransaction=function(a){d()&&e(a)},atatus.endTransaction=function(a){if(d()){var c=f(a);b(a,c,j)}},atatus.failTransaction=function(a){if(d()){var c=f(a);b(a,c,k)}},atatus.cancelTransaction=function(a){d()&&g(a)}}(window,document);
/*! https://github.com/ttaubert/node-arraybuffer-slice
 * (c) 2014 Tim Taubert <tim@timtaubert.de>
 * arraybuffer-slice may be freely distributed under the MIT license.*/
!function(r){"use strict";function t(r,t){return r=0|r||0,r<0?Math.max(r+t,0):Math.min(r,t)}ArrayBuffer.prototype.slice||(ArrayBuffer.prototype.slice=function(e,n){var f=this.byteLength,i=t(e,f),a=f;if(n!==r&&(a=t(n,f)),i>a)return new ArrayBuffer(0);var u=a-i,y=new ArrayBuffer(u),o=new Uint8Array(y),s=new Uint8Array(this,i,u);return o.set(s),y})}();
!function(e){function t(i){if(r[i])return r[i].i;var n=r[i]={s:i,o:!1,i:{}};return e[i].call(n.i,n,n.i,t),n.o=!0,n.i}var r={};t.h=e,t.c=r,t.d=function(e,r,i){t.u(e,r)||Object.defineProperty(e,r,{l:!1,p:!0,get:i})},t.n=function(e){var r=e&&e.g?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.u=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.v="",t(t.T=99)}([function(e,t,r){"use strict";var i,n=r(40),s=r(3);!function(e){function t(t){N&&console.log("Framework already initialized"),e.m(),A=new Date,t.apply(L),N=L.resolve(C.I),k=L.resolve(C.R),F=N.C()}function r(){D=L.resolve(C._),D.init()}function i(){return D}function o(){return L}function a(){return k}function h(){return N}function c(e){return M.get(e)}function u(e,t){var r=new _(e);return r.apply(t),M.set(e,r),r}function l(t){P=e.P(t)}function p(e){return null!=P?P.context.resolve(e):(console.warn("undefined context"),null)}function d(){return P}function f(){return N.time()}function g(e,t){return N.setTimeout(e,t)}function E(e){return N.clearTimeout(e)}function v(e,t){return N.setInterval(e,t)}function y(e){return N.clearInterval(e)}function T(){N.A()}function m(){N&&N.O(),L.N(),L=new n.D,M=new s,P=null,A=null,F=!1,O=null,N=null,D=null,k=null}function I(e){O=e}function S(){return O||(O=(new Date).getTime()),(O=(9301*O+49297)%233280)/233280}function R(){return A}function w(){return F}var b=function(){function e(){}return e}();b.k="ws://127.0.0.1:8000/hive",e.L=b;var C=function(){function e(){}return e}();C.I="TimerScheduler",C.M="identityProvider",C._="NetworkComponent",C.F="rtcManager",C.U="transport",C.B="httpManager",C.H="httpRequest",C.R="logger",C.q="serverManager",C.G="servicesClient",e.V=C;var _=function(){function e(e){this.id=e,this.context=new n.D}return e.prototype.apply=function(e){e.apply(this.context)},e}();e.j=_;!function(e){e[e.K=0]="HTTP",e[e.Y=1]="RTC",e[e.W=2]="UDP"}(e.J||(e.J={}));!function(t){function r(){return"["+f()+"] ["+e.X().id+"]"}t.getId=r}(e.Z||(e.Z={}));var P,A,O,N,D,k,L=new n.D,M=new s,F=!1;e.$=t,e.ee=r,e.te=i,e.system=o,e.logger=a,e.re=h,e.P=c,e.ie=u,e.ne=l,e.resolve=p,e.X=d,e.time=f,e.setTimeout=g,e.clearTimeout=E,e.setInterval=v,e.clearInterval=y,e.A=T,e.m=m,e.se=I,e.random=S,e.oe=R,e.C=w}(i=t.Framework||(t.Framework={})),"undefined"!=typeof global&&(global.Framework=i)},function(e,t,r){"use strict";var i=r(106),n=r(20),s=r(6),o=s.he.ae,a=(s.he.ce,s.he.ue),h=s.he.le,c=function(){function e(t){var r=this;if(this.isActive=!1,this.pe="undefined"!=typeof atatus&&null!=atatus,this.de={},e.fe)throw new Error("Error: Instantiation failed: Use AtatusLogger.getInstance() instead of new.");var i,s=void 0!=n.HiveConfig.ErrorMonitor.key?n.HiveConfig.ErrorMonitor.key:o,c=1==n.HiveConfig.ErrorMonitor.enabledRUM,u=1==n.HiveConfig.ErrorMonitor.enableKeyCombination,l=1==n.HiveConfig.ErrorMonitor.enabledErrorFilter;l&&(i=this.ge()),this.version=t,this.pe&&(void 0==n.HiveConfig.ErrorMonitor.enabled&&a||void 0!=n.HiveConfig.ErrorMonitor.enabled&&1==n.HiveConfig.ErrorMonitor.enabled)&&(atatus.config(s,{enableSourcemap:!0,disableRUM:!c,console:!1,version:t,beforeErrorSend:function(e){var t=!1;e&&e.customData&&void 0!==e.customData.forceSend&&(t=e.customData.forceSend,delete e.customData.forceSend,0===Object.keys(e.customData).length&&(e.customData=null));for(var n in r.de)e.customData[n]=r.de[n];if(!l||t)return!0;if(!i)return!1;try{var s=!1;if(e.backTraces){for(var o=0,a=e.backTraces;o<a.length;o++){var c=a[o];if(c.f.indexOf(i)>-1&&c.ln>h){s=!0;break}}s&&(e.name=e.name.replace(/%s \[[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]+] /,""),e.name.indexOf("Status Code Error:")>=0&&(e.tags=["Plugin Error Code",e.name.split(":")[1].trim()]))}return s}catch(e){return!1}}}).install(),u&&this.Ee(),this.isActive=!0,window.console&&console.log("[HiveComm] Error Monitor installed [RUM:"+c+", KeyHandler:"+u+"]"),l&&!i&&this.logError("Could not extract error filter"))}return e.ve=function(t){return void 0===t&&(t="3.0.0"),void 0===this.fe&&(this.fe=new e(t)),this.fe},e.prototype.Ee=function(){i.Te.ve().ye([16,17,88],function(){try{throw new Error("Upload console logs")}catch(e){atatus.notify(e),window.console&&console.log("[HiveComm] console log uploaded for debugging")}})},e.prototype.ge=function(){try{throw new Error("test")}catch(t){var e=t.stack.match(/(\/\/.*\.js)/i);if(e&&e.length>0)return e[0]}},e.prototype.setUser=function(e){this.pe&&this.isActive&&atatus.setUser(e)},e.prototype.me=function(e){this.logger=e},e.prototype.setCustomData=function(e){this.pe&&this.isActive&&atatus.setCustomData(e)},e.prototype.Ie=function(e){for(var t in e)this.de[t]=e[t]},e.prototype.logError=function(e,t,r,i,n){var s="";if("string"==typeof t?s=t.trim():void 0!==t&&(i=t),(i instanceof Error||i&&"object"!=typeof i)&&(i={error:i.toString()}),i||(i={}),i.errorCode=r,this.logger&&(Object.keys(i).length>0?this.logger.warn(s+" "+e,i):this.logger.warn(s+" "+e)),s&&(n=n?n.concat([s]):[s]),i.forceSend=!0,this.pe&&this.isActive)try{throw new Error(e)}catch(e){atatus.notify(e,i,n)}},e.prototype.setTags=function(e){this.pe&&this.isActive&&atatus.setTags(e)},e.prototype.notify=function(e,t){this.pe&&this.isActive&&(t||(t={}),t.forceSend=!0,atatus.notify(e,t))},e}();t.ErrorMonitor=c},function(e,t,r){"use strict";!function(e){!function(e){e[e.Se=268435456]="BASE_CODE",e[e.Re=268435457]="FIRE_SERVER_CONNECTED_WITH_SWARM",e[e.we=268435458]="FIRE_SERVER_CONNECTED_WITHOUT_SWARM",e[e.be=268435459]="CONNECTION_NOT_ESTABLISHED",e[e.Ce=268435460]="SEND_MESSAGE_TO_NON_EXISTING_CHANNEL",e[e._e=268435461]="RECEIVED_MESSAGE_FROM_NON_EXISTING_CONNECTION"}(e.Pe||(e.Pe={}));!function(e){e[e.Se=536870912]="BASE_CODE",e[e.Ae=536870913]="CREATE_OFFER",e[e.Oe=536870914]="CREATE_ANSWER",e[e.Ne=536870915]="SIGNALING_STATE_CLOSED",e[e.De=536870916]="SET_LOCAL_DESCRIPTION_FAILED",e[e.ke=536870917]="NEGOTIATION_FAILURE",e[e.Le=536870918]="SETUP_CHANNEL_ERROR",e[e.Me=536870919]="ICE_CONNECTION_FAILED",e[e.Fe=536870920]="SET_REMOTE_DESCRIPTION",e[e.Ue=536870921]="UPDATE_ICE_CANDIDATES",e[e.Be=536870922]="ANSWER_RECEIVED",e[e.He=536870923]="OFFER_RECEIVED",e[e.xe=536870924]="SEND_CANDIDATES",e[e.qe=536870925]="CLOSE_CONNECTION"}(e.Ge||(e.Ge={}));!function(e){e[e.Se=805306368]="BASE_CODE",e[e.Ve=805306369]="SEND_MSG_WITHOUT_CHANNEL",e[e.je=805306370]="MSG_TRIGGER_ERROR",e[e.Qe=805306371]="CONNECTION_TIMEOUT"}(e.Ke||(e.Ke={}));!function(e){e[e.Se=1073741824]="BASE_CODE",e[e.qe=1073741825]="CLOSE_CONNECTION",e[e.Ye=1073741826]="P2P_DISPATCHER_ERROR"}(e.We||(e.We={}));!function(e){e[e.Se=1342177280]="BASE_CODE",e[e.ze=1342177281]="CONSTRUCT_MESSAGE",e[e.Je=1342177282]="DROPPED_MESSAGE",e[e.Xe=1342177283]="SEND_MESSAGE",e[e.Ze=1342177284]="RECEIVE_MESSAGE"}(e.$e||(e.$e={}));!function(e){e[e.Se=1610612736]="BASE_CODE",e[e.et=1610612737]="NEW_DISPATCHER"}(e.tt||(e.tt={}));!function(e){e[e.Se=1879048192]="BASE_CODE",e[e.rt=1879048193]="INIT_CACHE",e[e.it=1879048194]="PUT_OPERATION",e[e.nt=1879048195]="GET_OPERATION",e[e.st=1879048196]="CONTAINS_OPERATION",e[e.ot=1879048197]="GET_KEYS_OPERATION",e[e.at=1879048198]="GET_ELEMENTS_OPERATION"}(e.ht||(e.ht={}));!function(e){e[e.Se=2147483648]="BASE_CODE",e[e.it=2147483649]="PUT_OPERATION",e[e.nt=2147483650]="GET_OPERATION",e[e.st=2147483651]="CONTAINS_OPERATION",e[e.ot=2147483652]="GET_KEYS_OPERATION",e[e.at=2147483653]="GET_ELEMENTS_OPERATION",e[e.ct=2147483654]="PURGE_CACHE_OPERATION"}(e.ut||(e.ut={}));!function(e){e[e.Se=2415919104]="BASE_CODE"}(e.lt||(e.lt={}));!function(e){e[e.Se=2684354560]="BASE_CODE",e[e.pt=2684354561]="DISCOVERED_PEERS",e[e.dt=2684354562]="LEADER_ELECTION",e[e.ft=2684354563]="GC_MEMBERS",e[e.gt=2684354564]="ADD_LAN_MEMBER",e[e.Et=2684354565]="ADD_RANDOM_MEMBER",e[e.vt=2684354566]="SAMPLE_MEMBERSHIP"}(e.yt||(e.yt={}));!function(e){e[e.Se=2952790016]="BASE_CODE",e[e.Tt=2952790017]="SEND_ALL_HAVES",e[e.It=2952790018]="SEND_HAVE",e[e.St=2952790019]="UNKNOWN_HAVE",e[e.Rt=2952790020]="UNKNOWN_HAVES",e[e.wt=2952790021]="RECEIVED_HAVE",e[e.bt=2952790022]="RECEIVED_HAVES",e[e.Ct=2952790023]="NO_OUT_PARTNER",e[e._t=2952790024]="CREATE_RANDOM_BUFFER",e[e.Pt=2952790025]="REQUEST_PING",e[e.At=2952790026]="RECEIVED_PING",e[e.Ot=2952790027]="UNKNOWN_PING",e[e.Nt=2952790028]="SEND_PONG",e[e.Dt=2952790029]="UNKOWN_PONG",e[e.kt=2952790030]="WRONG_PONG_SIZE",e[e.Lt=2952790031]="WRONG_TIMESTAMP",e[e.Mt=2952790032]="RECEIVED_PONG",e[e.Ft=2952790033]="COLLECT_PARTNER_SNAPSHOTS"}(e.Ut||(e.Ut={}));!function(e){e[e.Se=3221225472]="BASE_CODE",e[e.Bt=3221225473]="START_PARTNERSHIP",e[e.Ht=3221225474]="NEW_LAN_MEMBER",e[e.xt=3221225475]="IN_PARTNER_CHOICE",e[e.qt=3221225476]="IN_PARTNER_ADD_PROCESS",e[e.Gt=3221225477]="IN_PARTNER_CONNECT",e[e.Vt=3221225478]="IN_PARTNERSHIP_REQUEST",e[e.jt=3221225479]="OUT_PARNTERSHIP_REQUEST_PROCESS",e[e.Qt=3221225480]="CONSTRUCT_DISCOVER_PEER_INFO",e[e.Kt=3221225481]="SEND_PARTN_RESP",e[e.Yt=3221225482]="NEW_IN_PARTNER_TO_LIST",e[e.Wt=3221225483]="REMOVE_DISCONNECTED_PEER",e[e.zt=3221225484]="REMOVE_IN_PARTNER",e[e.Jt=3221225485]="CLOSE_RECEIVED",e[e.Xt=3221225486]="SEND_PART_REQUEST",e[e.Zt=3221225487]="PART_REQUEST_EXPIRED",e[e.$t=3221225488]="UNKNOWN_PARTNERSHIP_REQUEST_EXPIRED",e[e.er=3221225489]="UNKNOWN_OUT_PART_RESP",e[e.tr=3221225490]="CLOSE_PARTNERSHIP",e[e.rr=3221225491]="ANNOUNCE_BITRATE",e[e.ir=3221225492]="CONSTRUCT_ANNOUNCE_BITRATE_MSG",e[e.nr=3221225493]="RECEIVE_BITRATE_INFO",e[e.sr=3221225494]="PEER_INFO_RECEIVED",e[e.ar=3221225495]="PEER_INFO_ANNOUNCED",e[e.hr=3221225496]="COLLECT_ALL_PARTNERS"}(e.cr||(e.cr={}));!function(e){e[e.Se=3489660928]="BASE_CODE",e[e.ur=3489660929]="UPDATE_IN_PARTNERS"}(e.lr||(e.lr={}));!function(e){e[e.Se=3758096384]="BASE_CODE",e[e.pr=3758096385]="SELECT_PARTNERS_TO_REMOVE",e[e.dr=3758096386]="SELECT_PARTNERS_TO_ADD",e[e.gr=3758096387]="SELECT_UPDATE_OUT"}(e.Er||(e.Er={}));!function(e){e[e.Se=4026531840]="BASE_CODE",e[e.pr=4026531841]="SELECT_PARTNERS_TO_REMOVE",e[e.dr=4026531842]="SELECT_PARTNERS_TO_ADD",e[e.gr=4026531843]="SELECT_UPDATE_OUT"}(e.vr||(e.vr={}));!function(e){e[e.Se=4294967296]="BASE_CODE",e[e.ur=4294967297]="UPDATE_IN_PARTNERS",e[e.pr=4294967298]="SELECT_PARTNERS_TO_REMOVE",e[e.dr=4294967299]="SELECT_PARTNERS_TO_ADD",e[e.gr=4294967300]="SELECT_UPDATE_OUT",e[e.yr=4294967301]="GROUP_PARTNERS",e[e.Tr=4294967302]="IDENTIFY_MEMBER_AS_LEADER_OR_SAME_SITE",e[e.mr=4294967303]="AHEAD_BUT_BEHIND_DELTA",e[e.Ir=4294967304]="BEHIND_OR_NOT_RETRIEVING_BITRATE",e[e.Sr=4294967305]="GET_DELTA_FOR_BITRATE"}(e.Rr||(e.Rr={}));!function(e){e[e.Se=4563402752]="BASE_CODE",e[e.wr=4563402753]="UPDATE_OUT_PARTNERS"}(e.br||(e.br={}));!function(e){e[e.Se=4831838208]="BASE_CODE",e[e.Cr=4831838209]="ADD_FRAGMENT_TO_MAP",e[e.Pr=4831838210]="WRAP_CHUNK",e[e.Ar=4831838211]="GENERATE_HASHMAPS"}(e.Or||(e.Or={}));!function(e){e[e.Se=5100273664]="BASE_CODE",e[e.Nr=5100273665]="INIT_AES_MANAGER",e[e.Dr=5100273666]="INIT_KEY",e[e.kr=5100273667]="INIT_IV",e[e.Lr=5100273668]="DECRYPT_BUFFER",e[e.Mr=5100273669]="DOWNLOAD_KEY_ONLOAD",e[e.Fr=5100273670]="DOWNLOAD_KEY"}(e.Ur||(e.Ur={}));!function(e){e[e.Se=5368709120]="BASE_CODE",e[e.Br=5368709121]="GET_ENTITY_TYPE",e[e.Hr=5368709122]="GET_ENTITY_CHARACTERISTICS",e[e.xr=5368709123]="GET_NEXT_ENTITY",e[e.qr=5368709124]="IS_CURRENT_CONTEXT",e[e.Gr=5368709125]="PARSED_METADATA",e[e.Vr=5368709126]="PREFETCH_METADATA_RECEIVED",e[e.jr=5368709127]="FRAGMENT_RECEIVED",e[e.Qr=5368709128]="EVALUATE_PROTECTION",e[e.Kr=5368709129]="GET_DISTANCE_DURATION"}(e.Yr||(e.Yr={}));!function(e){e[e.Se=5637144576]="BASE_CODE",e[e.Wr=5637144577]="PARSE_METADATA",e[e.zr=5637144578]="EXTRACT_SEGMENT_MAPS",e[e.Jr=5637144579]="INIT_PROTECTION",e[e.Xr=5637144580]="GET_SEGMENT_INFO",e[e.Zr=5637144581]="GET_SEGMENT_DISTANCE",e[e.$r=5637144582]="EXTRACT_DURATION",e[e.ei=5637144583]="EXTRACT_DURATION_OR_DECRYPT",e[e.ti=5637144584]="EXTRACT_DURATION_CANNOT_DECRYPT",e[e.ri=5637144585]="EXTRACT_DURATION_NON_ENCRYPTED",e[e.ii=5637144586]="GENERATE_MISSING_SEGMENTS",e[e.ni=5637144587]="REGENERATE_MANIFEST",e[e.si=5637144588]="TRIM_MANIFEST",e[e.oi=5637144589]="PARSE_BITRATES_TO_FILTER",e[e.ai=5637144590]="FILTER_BITRATES",e[e.hi=5637144591]="GET_DISTANCE_DURATION_BETWEEN_SEGMENTS",e[e.ci=5637144592]="GET_SEGMENT"}(e.ui||(e.ui={}));!function(e){e[e.Se=5905580032]="BASE_CODE",e[e.qr=5905580033]="IS_CURRENT_CONTEXT",e[e.Br=5905580034]="GET_ENTITY_TYPE",e[e.Hr=5905580035]="GET_ENTITY_CHARACTERISTICS",e[e.li=5905580036]="METADATA_RECEIVED",e[e.pi=5905580037]="SCHEDULE_METADATA_PREFETCH",e[e.xr=5905580038]="GET_NEXT_ENTITY",e[e.Kr=5905580039]="GET_DISTANCE_DURATION"}(e.di||(e.di={}));!function(e){e[e.Se=6174015488]="BASE_CODE",e[e.fi=6174015489]="PLAYLIST_MISMATCH",e[e.gi=6174015490]="FLOAT_BITRATE",e[e.Wr=6174015491]="PARSE_METADATA",e[e.Xr=6174015492]="GET_SEGMENT_INFO",e[e.Ei=6174015493]="UPDATE_PLAYLIST",e[e.vi=6174015494]="TRIM_PLAYLIST"}(e.yi||(e.yi={}));!function(e){e[e.Se=6442450944]="BASE_CODE",e[e.Ti=6442450945]="GET_P2P_TIMEOUT",e[e.mi=6442450946]="DELIVER_DELAY"}(e.Ii||(e.Ii={}));!function(e){e[e.Se=6710886400]="BASE_CODE",e[e.Si=6710886401]="IS_PLAYER_BUFFERING_BASE",e[e.Ri=6710886402]="CONFIGURE_REQUEST_DIRECTIVE",e[e.wi=6710886403]="ATTEMPT_TO_UPGRADE_PREFETCH"}(e.bi||(e.bi={}));!function(e){e[e.Se=6979321856]="BASE_CODE",e[e.Ci=6979321857]="PREPARE_REQUEST",e[e._i=6979321858]="GET_CONNECTIVITY_INFO",e[e.Pi=6979321859]="COLLECT_TRACKER_REQUEST_INFO",e[e.Ai=6979321860]="PREPARE_QUERY",e[e.Oi=6979321861]="PREPARE_BITRATE_QUERY",e[e.Ni=6979321862]="PREPARE_TRACKER_INFO",e[e.Di=6979321863]="SEND_REQUEST",e[e.ki=6979321864]="HANDLE_RESPONSE"}(e.Li||(e.Li={}));!function(e){e[e.Se=7247757312]="BASE_CODE",e[e.Mi=7247757313]="NEW_TRACKER_CLIENT",e[e.Fi=7247757314]="SERIALIZE_REQUEST",e[e.Ui=7247757315]="DESERIALIZE_RESPONSE",e[e.Bi=7247757316]="SERVICE_CONNECTION_DOWN",e[e.Di=7247757317]="SEND_REQUEST",e[e.Hi=7247757318]="TRACKER_MANAGER_INIT"}(e.xi||(e.xi={}));!function(e){e[e.Se=7516192768]="BASE_CODE",e[e.qi=7516192769]="SORT_PARTNERS"}(e.Gi||(e.Gi={}));!function(e){e[e.Se=7784628224]="BASE_CODE",e[e.Vi=7784628225]="CHOOSE_PARTNER"}(e.ji||(e.ji={}));!function(e){e[e.Se=8053063680]="BASE_CODE",e[e.Qi=8053063681]="CONSTRUCT_FRAGMENT_REQUEST_MESSAGE",e[e.Ki=8053063682]="SEND_FRAGMENT_REQUEST",e[e.Yi=8053063683]="RECEIVE_CHUNK",e[e.Wi=8053063684]="SEND_ACK",e[e.zi=8053063685]="CLEAN_UP_NOT_PENDING",e[e.Ji=8053063686]="STOP_TRANSFER",e[e.Xi=8053063687]="RECEIVE_EXPIRED_CHUNK"}(e.Zi||(e.Zi={}));!function(e){e[e.Se=8321499136]="BASE_CODE",e[e.$i=8321499137]="CONSTRUCT_CHUNK_RESPONSE",e[e.en=8321499138]="START_SENDING_CHUNK",e[e.tn=8321499139]="SEND_CHUNK",e[e.rn=8321499140]="UNKNOWN_ACK"}(e.in||(e.in={}));!function(e){e[e.Se=8589934592]="BASE_CODE",e[e.nn=8589934593]="NO_PARTNER_FOUND",e[e.sn=8589934594]="FILTER_IN_PARTNERS",e[e.an=8589934595]="SET_REQUEST_TIMEOUT",e[e.hn=8589934596]="REMOVE_REQUEST",e[e.cn=8589934597]="CANCEL_ON_NON_EXISTING_SESSION",e[e.un=8589934598]="DO_NOT_HAVE",e[e.pn=8589934599]="REQUESTED_TO_NON_PARTNER"}(e.dn||(e.dn={}));!function(e){e[e.Se=8858370048]="BASE_CODE",e[e.fn=8858370049]="RESPOND_TO_PEER",e[e.gn=8858370050]="REQUEST_SATISFIED",e[e.En=8858370051]="REQUEST_PARTIALLY_SATISFIED",e[e.vn=8858370052]="REQUEST_NOT_SATISFIED",e[e.yn=8858370053]="SEND_DO_NOT_HAVE",e[e.Tn=8858370054]="SEND_NO_PARTNERS"}(e.mn||(e.mn={}));!function(e){e[e.Se=9126805504]="BASE_CODE",e[e.In=9126805505]="VIOLATE_SPOOFING_HANDLER",e[e.Sn=9126805506]="VIOLATE_SPOOFING_RULES",e[e.Rn=9126805507]="ADD_OR_UPDATE_SPOOFING_MAPS",e[e.wn=9126805508]="PERIODIC_CHECK_IP_SPOOFING"}(e.bn||(e.bn={}));!function(e){e[e.Se=9395240960]="BASE_CODE",e[e.Cn=9395240961]="REQUEST_COMPLETED",e[e._n=9395240962]="REQUEST_NOT_EXISTING_COMPLETED",e[e.Pn=9395240963]="REQUEST_PARTIALLY_FAILED",e[e.An=9395240964]="REQUEST_NOT_EXISTING_PARTIALLY_FAILED",e[e.On=9395240965]="REQUEST_FAILED",e[e.Nn=9395240966]="REQUEST_NOT_EXISTING_FAILED"}(e.Dn||(e.Dn={}));!function(e){e[e.Se=9663676416]="BASE_CODE",e[e.kn=9663676417]="UPDATE_WANTED_SESSIONS",e[e.Ln=9663676418]="CONFIGURE_PREFETCHING",e[e.Mn=9663676419]="START_PREFETCHING",e[e.Fn=9663676420]="FRAGMENT_RETRIEVED_SESSION_NOT_EXISTING",e[e.Un=9663676421]="ATTEMPT_PREFETCH_BEFORE_PLAYER_REQUEST",e[e.Bn=9663676422]="FORWARD_IF_NECESSARY",e[e.Hn=9663676423]="IS_ALLOWED_TO_PREFETCH",e[e.xn=9663676424]="PREFETCH_PROCESS",e[e.qn=9663676425]="CHECK_PLAYER_DISTANCE",e[e.Gn=9663676426]="OFFLOAD_LEADER",e[e.Vn=9663676427]="UPGRADE_PREFETCH"}(e.jn||(e.jn={}));!function(e){e[e.Se=9932111872]="BASE_CODE",e[e.Qn=9932111873]="REQUEST_TIMEOUT"}(e.Kn||(e.Kn={}));!function(e){e[e.Se=10200547328]="BASE_CODE",e[e.Yn=10200547329]="PLAYER_REQUEST_ERROR"}(e.Wn||(e.Wn={}));!function(e){e[e.Se=10468982784]="BASE_CODE",e[e.zn=10468982785]="ADD_HAVE",e[e.Jn=10468982786]="REMOVE_PEER"}(e.Xn||(e.Xn={}));!function(e){e[e.Se=10737418240]="BASE_CODE",e[e.Zn=10737418241]="CONSTRUCT_SWARM",e[e.$n=10737418242]="INIT_SWARM",e[e.es=10737418243]="SWITCH_STATE",e[e.Qn=10737418244]="REQUEST_TIMEOUT"}(e.rs||(e.rs={}));!function(e){e[e.Se=11005853696]="BASE_CODE",e[e.ns=11005853697]="SERIALIZE_MESSAGE",e[e.ss=11005853698]="EXTRACT_MESSAGE"}(e.as||(e.as={}))}(t.hs||(t.hs={}))},function(e,t,r){"use strict";function i(e,t,r,s){if(!(this instanceof i))return new i(e,t,r,s);t=t||Object.cs,r=r||Object.hash,s=s||Function.us,this.ls=t,this.ps=r,this.ds=s,this.fs=new n(void 0,function(e,r){return t(e.key,r.key)},function(e){return r(e.key)}),this.length=0,this.addEach(e)}var n=(r(11),r(68)),s=r(12),o=r(52),a=r(13);e.i=i,i.Map=i,Object.addEach(i.prototype,s.prototype),Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.defineProperty(i.prototype,"size",s.gs),i.prototype.Es=function(e){return new this.constructor(e,this.ls,this.ps,this.ds)},i.prototype.log=function(e,t,r,i){t=t||this.vs,this.fs.log(e,function(e,r,i){t(e.value.value,r,i)},r,i)},i.prototype.vs=function(e,t){t(" key: "+e.key),t(" value: "+e.value)}},function(e,t,r){/*!
 *
 * Copyright 2009-2016 Kris Kowal under the terms of the MIT
 * license found at https://github.com/kriskowal/q/blob/v1/LICENSE
 *
 * With parts by Tyler Close
 * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found
 * at http://www.opensource.org/licenses/mit-license.html
 * Forked at ref_send.js version: 2009-05-11
 *
 * With parts by Mark Miller
 * Copyright (C) 2011 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
!function(t){"use strict";if("function"==typeof bootstrap)bootstrap("promise",t);else{e.i=t()}}(function(){"use strict";function e(e){return function(){return K.apply(e,arguments)}}function t(e){return e===Object(e)}function r(e){return"[object StopIteration]"===ee(e)||e instanceof G}function i(e,t){if(x&&t.stack&&"object"==typeof e&&null!==e&&e.stack&&-1===e.stack.indexOf(te)){for(var r=[],i=t;i;i=i.source)i.stack&&r.unshift(i.stack);r.unshift(e.stack);var s=r.join("\n"+te+"\n");e.stack=n(s)}}function n(e){for(var t=e.split("\n"),r=[],i=0;i<t.length;++i){var n=t[i];a(n)||s(n)||!n||r.push(n)}return r.join("\n")}function s(e){return-1!==e.indexOf("(module.js:")||-1!==e.indexOf("(node.js:")}function o(e){var t=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(e);if(t)return[t[1],Number(t[2])];var r=/at ([^ ]+):(\d+):(?:\d+)$/.exec(e);if(r)return[r[1],Number(r[2])];var i=/.*@(.+):(\d+)$/.exec(e);return i?[i[1],Number(i[2])]:void 0}function a(e){var t=o(e);if(!t)return!1;var r=t[0],i=t[1];return r===q&&i>=V&&i<=oe}function h(){if(x)try{throw new Error}catch(i){var e=i.stack.split("\n"),t=e[0].indexOf("@")>0?e[1]:e[2],r=o(t);if(!r)return;return q=r[0],r[1]}}function c(e){return e instanceof d?e:v(e)?C(e):b(e)}function u(){function e(e){t=e,c.ys&&x&&(s.source=e),W(r,function(t,r){c.Ts(function(){e.ms.apply(e,r)})},void 0),r=void 0,i=void 0}var t,r=[],i=[],n=X(u.prototype),s=X(d.prototype);if(s.ms=function(e,n,s){var o=Y(arguments);r?(r.push(o),"when"===n&&s[1]&&i.push(s[1])):c.Ts(function(){t.ms.apply(t,o)})},s.valueOf=function(){if(r)return s;var e=g(t);return E(e)&&(t=e),e},s.Is=function(){return t?t.Is():{state:"pending"}},c.ys&&x)try{throw new Error}catch(e){s.stack=e.stack.substring(e.stack.indexOf("\n")+1)}return n.Ss=s,n.resolve=function(r){t||e(c(r))},n.Rs=function(r){t||e(b(r))},n.reject=function(r){t||e(w(r))},n.notify=function(e){t||W(i,function(t,r){c.Ts(function(){r(e)})},void 0)},n}function l(e){if("function"!=typeof e)throw new TypeError("resolver must be a function.");var t=u();try{e(t.resolve,t.reject,t.notify)}catch(e){t.reject(e)}return t.Ss}function p(e){return l(function(t,r){for(var i=0,n=e.length;i<n;i++)c(e[i]).then(t,r)})}function d(e,t,r){void 0===t&&(t=function(e){return w(new Error("Promise does not support operation: "+e))}),void 0===r&&(r=function(){return{state:"unknown"}});var i=X(d.prototype);if(i.ms=function(r,n,s){var o;try{o=e[n]?e[n].apply(i,s):t.call(i,n,s)}catch(e){o=w(e)}r&&r(o)},i.Is=r,r){var n=r();"rejected"===n.state&&(i.exception=n.reason),i.valueOf=function(){var e=r();return"pending"===e.state||"rejected"===e.state?i:e.value}}return i}function f(e,t,r,i){return c(e).then(t,r,i)}function g(e){if(E(e)){var t=e.Is();if("fulfilled"===t.state)return t.value}return e}function E(e){return e instanceof d}function v(e){return t(e)&&"function"==typeof e.then}function y(e){return E(e)&&"pending"===e.Is().state}function T(e){return!E(e)||"fulfilled"===e.Is().state}function m(e){return E(e)&&"rejected"===e.Is().state}function I(){re.length=0,ie.length=0,se||(se=!0)}function S(e,t){se&&("object"==typeof process&&process&&"function"==typeof process.ws&&c.Ts.bs(function(){-1!==z(ie,e)&&(process.ws("unhandledRejection",t,e),ne.push(e))}),ie.push(e),t&&void 0!==t.stack?re.push(t.stack):re.push("(no stack) "+t))}function R(e){if(se){var t=z(ie,e);-1!==t&&("object"==typeof process&&process&&"function"==typeof process.ws&&c.Ts.bs(function(){var r=z(ne,e);-1!==r&&(process.ws("rejectionHandled",re[t],e),ne.splice(r,1))}),ie.splice(t,1),re.splice(t,1))}}function w(e){var t=d({when:function(t){return t&&R(this),t?t(e):this}},function(){return this},function(){return{state:"rejected",reason:e}});return S(t,e),t}function b(e){return d({when:function(){return e},get:function(t){return e[t]},set:function(t,r){e[t]=r},delete:function(t){delete e[t]},Cs:function(t,r){return null===t||void 0===t?e.apply(void 0,r):e[t].apply(e,r)},apply:function(t,r){return e.apply(t,r)},keys:function(){return $(e)}},void 0,function(){return{state:"fulfilled",value:e}})}function C(e){var t=u();return c.Ts(function(){try{e.then(t.resolve,t.reject,t.notify)}catch(e){t.reject(e)}}),t.Ss}function _(e){return d({_s:function(){}},function(t,r){return k(e,t,r)},function(){return c(e).Is()})}function P(e,t,r){return c(e).Ps(t,r)}function A(e){return function(){function t(e,t){var o;if("undefined"==typeof StopIteration){try{o=i[e](t)}catch(e){return w(e)}return o.done?c(o.value):f(o.value,n,s)}try{o=i[e](t)}catch(e){return r(e)?c(e.value):w(e)}return f(o,n,s)}var i=e.apply(this,arguments),n=t.bind(t,"next"),s=t.bind(t,"throw");return n()}}function O(e){c.done(c.async(e)())}function N(e){throw new G(e)}function D(e){return function(){return P([this,L(arguments)],function(t,r){return e.apply(t,r)})}}function k(e,t,r){return c(e).As(t,r)}function L(e){return f(e,function(e){var t=0,r=u();return W(e,function(i,n,s){var o;E(n)&&"fulfilled"===(o=n.Is()).state?e[s]=o.value:(++t,f(n,function(i){e[s]=i,0==--t&&r.resolve(e)},r.reject,function(e){r.notify({index:s,value:e})}))},void 0),0===t&&r.resolve(e),r.Ss})}function M(e){if(0===e.length)return c.resolve();var t=c.defer(),r=0;return W(e,function(i,n,s){function o(e){t.resolve(e)}function a(e){0===--r&&(e.message="Q can't get fulfillment value from any promise, all promises were rejected. Last error message: "+e.message,t.reject(e))}function h(e){t.notify({index:s,value:e})}var c=e[s];r++,f(c,o,a,h)},void 0),t.Ss}function F(e){return f(e,function(e){return e=J(e,c),f(L(J(e,function(e){return f(e,j,j)})),function(){return e})})}function U(e){return c(e).Os()}function B(e,t){return c(e).then(void 0,void 0,t)}function H(e,t){return c(e).Ns(t)}var x=!1;try{throw new Error}catch(e){x=!!e.stack}var q,G,V=h(),j=function(){},Q=function(){function e(){for(var e,i;r.next;)r=r.next,e=r.Ds,r.Ds=void 0,i=r.domain,i&&(r.domain=void 0,i.ks()),t(e,i);for(;h.length;)e=h.pop(),t(e);n=!1}function t(t,r){try{t()}catch(t){if(o)throw r&&r.Ls(),setTimeout(e,0),r&&r.ks(),t;setTimeout(function(){throw t},0)}r&&r.Ls()}var r={Ds:void 0,next:null},i=r,n=!1,s=void 0,o=!1,a=!1;try{a=navigator&&("Microsoft Internet Explorer"===navigator.appName||null!=navigator.appVersion.match(/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i))}catch(e){}var h=[];if(Q=function(e){"undefined"!=typeof Framework&&Framework.C()?Framework.setTimeout(e,0):(i=i.next={Ds:e,domain:o&&process.domain,next:null},n||(n=!0,s()))},"object"==typeof process&&process&&"[object process]"===process.toString()&&process.Ts)o=!0,s=function(){process.Ts(e)};else if("function"!=typeof setImmediate||a)if("undefined"==typeof MessageChannel||a)s=function(){setTimeout(e,0)};else{var c=new MessageChannel;c.port1.onmessage=function(){s=u,c.port1.onmessage=e,e()};var u=function(){c.port2.postMessage(0)};s=function(){setTimeout(e,0),u()}}else s="undefined"!=typeof window?setImmediate.bind(window,e):function(){setImmediate(e)};return Q.bs=function(e){h.push(e),n||(n=!0,s())},Q}(),K=Function.call,Y=e(Array.prototype.slice),W=e(Array.prototype.reduce||function(e,t){var r=0,i=this.length;if(1===arguments.length)for(;;){if(r in this){t=this[r++];break}if(++r>=i)throw new TypeError}for(;r<i;r++)r in this&&(t=e(t,this[r],r));return t}),z=e(Array.prototype.indexOf||function(e){for(var t=0;t<this.length;t++)if(this[t]===e)return t;return-1}),J=e(Array.prototype.map||function(e,t){var r=this,i=[];return W(r,function(n,s,o){i.push(e.call(t,s,o,r))},void 0),i}),X=Object.create||function(e){function t(){}return t.prototype=e,new t},Z=e(Object.prototype.hasOwnProperty),$=Object.keys||function(e){var t=[];for(var r in e)Z(e,r)&&t.push(r);return t},ee=e(Object.prototype.toString);G="undefined"!=typeof ReturnValue?ReturnValue:function(e){this.value=e};var te="From previous event:";c.resolve=c,c.Ts=Q,c.ys=!1,"object"==typeof process&&process&&process.Ms&&process.Ms.Fs&&(c.ys=!0),c.defer=u,u.prototype.Us=function(){var e=this;return function(t,r){t?e.reject(t):arguments.length>2?e.resolve(Y(arguments,1)):e.resolve(r)}},c.Promise=l,c.Ss=l,l.race=p,l.all=L,l.reject=w,l.resolve=c,c.Bs=function(e){return e},d.prototype.Bs=function(){return this},c.join=function(e,t){return c(e).join(t)},d.prototype.join=function(e){return c([this,e]).Ps(function(e,t){if(e===t)return e;throw new Error("Q can't join: not the same: "+e+" "+t)})},c.race=p,d.prototype.race=function(){return this.then(c.race)},c.Hs=d,d.prototype.toString=function(){return"[object Promise]"},d.prototype.then=function(e,t,r){function n(t){try{return"function"==typeof e?e(t):t}catch(e){return w(e)}}function s(e){if("function"==typeof t){i(e,a);try{return t(e)}catch(e){return w(e)}}return w(e)}function o(e){return"function"==typeof r?r(e):e}var a=this,h=u(),l=!1;return c.Ts(function(){a.ms(function(e){l||(l=!0,h.resolve(n(e)))},"when",[function(e){l||(l=!0,h.resolve(s(e)))}])}),a.ms(void 0,"when",[void 0,function(e){var t,r=!1;try{t=o(e)}catch(e){if(r=!0,!c.onerror)throw e;c.onerror(e)}r||h.notify(t)}]),h.Ss},c.xs=function(e,t){return c(e).xs(t)},d.prototype.xs=function(e){return e=c(e),this.then(function(t){return e.Gs(t).qs(t)})},c.when=f,d.prototype.qs=function(e){return this.then(function(){return e})},c.qs=function(e,t){return c(e).qs(t)},d.prototype.Vs=function(e){return this.then(function(){throw e})},c.Vs=function(e,t){return c(e).Vs(t)},c.js=g,c.Qs=E,c.Ks=v,c.Ys=y,d.prototype.Ys=function(){return"pending"===this.Is().state},c.Ws=T,d.prototype.Ws=function(){return"fulfilled"===this.Is().state},c.zs=m,d.prototype.zs=function(){return"rejected"===this.Is().state};var re=[],ie=[],ne=[],se=!0;c.Js=I,c.Xs=function(){return re.slice()},c.Zs=function(){I(),se=!1},I(),c.reject=w,c.Rs=b,c.$s=_,c.Ps=P,d.prototype.Ps=function(e,t){return this.all().then(function(t){return e.apply(void 0,t)},t)},c.async=A,c.eo=O,c.to=N,c.ro=D,c.As=k,d.prototype.As=function(e,t){var r=this,i=u();return c.Ts(function(){r.ms(i.resolve,e,t)}),i.Ss},c.get=function(e,t){return c(e).As("get",[t])},d.prototype.get=function(e){return this.As("get",[e])},c.set=function(e,t,r){return c(e).As("set",[t,r])},d.prototype.set=function(e,t){return this.As("set",[e,t])},c.io=c.delete=function(e,t){return c(e).As("delete",[t])},d.prototype.io=d.prototype.delete=function(e){return this.As("delete",[e])},c.no=c.Cs=function(e,t,r){return c(e).As("post",[t,r])},d.prototype.no=d.prototype.Cs=function(e,t){return this.As("post",[e,t])},c.send=c.so=c.oo=function(e,t){return c(e).As("post",[t,Y(arguments,2)])},d.prototype.send=d.prototype.so=d.prototype.oo=function(e){return this.As("post",[e,Y(arguments,1)])},c.ao=function(e,t){return c(e).As("apply",[void 0,t])},d.prototype.ao=function(e){return this.As("apply",[void 0,e])},c.ho=c.Gs=function(e){return c(e).As("apply",[void 0,Y(arguments,1)])},d.prototype.Gs=function(){return this.As("apply",[void 0,Y(arguments)])},c.co=function(e){var t=c(e),r=Y(arguments,1);return function(){return t.As("apply",[this,r.concat(Y(arguments))])}},d.prototype.co=function(){var e=this,t=Y(arguments);return function(){return e.As("apply",[this,t.concat(Y(arguments))])}},c.keys=function(e){return c(e).As("keys",[])},d.prototype.keys=function(){return this.As("keys",[])},c.all=L,d.prototype.all=function(){return L(this)},c.uo=M,d.prototype.uo=function(){return M(this)},c.lo=function(e,t,r){return function(){return"undefined"!=typeof console&&"function"==typeof console.warn&&console.warn(t+" is deprecated, use "+r+" instead.",new Error("").stack),e.apply(e,arguments)}}(F,"allResolved","allSettled"),d.prototype.lo=function(){return F(this)},c.Os=U,d.prototype.Os=function(){return this.then(function(e){return L(J(e,function(e){function t(){return e.Is()}return e=c(e),e.then(t,t)}))})},c.fail=c.catch=function(e,t){return c(e).then(void 0,t)},d.prototype.fail=d.prototype.catch=function(e){return this.then(void 0,e)},c.progress=B,d.prototype.progress=function(e){return this.then(void 0,void 0,e)},c.po=c.finally=function(e,t){return c(e).finally(t)},d.prototype.po=d.prototype.finally=function(e){if(!e||"function"!=typeof e.apply)throw new Error("Q can't apply finally callback");return e=c(e),this.then(function(t){return e.Gs().then(function(){return t})},function(t){return e.Gs().then(function(){throw t})})},c.done=function(e,t,r,i){return c(e).done(t,r,i)},d.prototype.done=function(e,t,r){var n=function(e){c.Ts(function(){if(i(e,s),!c.onerror)throw e;c.onerror(e)})},s=e||t||r?this.then(e,t,r):this;"object"==typeof process&&process&&process.domain&&(n=process.domain.bind(n)),s.then(void 0,n)},c.timeout=function(e,t,r){return c(e).timeout(t,r)},d.prototype.timeout=function(e,t){var r=u(),i=setTimeout(function(){t&&"string"!=typeof t||(t=new Error(t||"Timed out after "+e+" ms"),t.code="ETIMEDOUT"),r.reject(t)},e);return this.then(function(e){clearTimeout(i),r.resolve(e)},function(e){clearTimeout(i),r.reject(e)},r.notify),r.Ss},c.delay=function(e,t){return void 0===t&&(t=e,e=void 0),c(e).delay(t)},d.prototype.delay=function(e){return this.then(function(t){var r=u();return setTimeout(function(){r.resolve(t)},e),r.Ss})},c.do=function(e,t){return c(e).do(t)},d.prototype.do=function(e){var t=u(),r=Y(e);return r.push(t.Us()),this.ao(r).fail(t.reject),t.Ss},c.fo=function(e){var t=Y(arguments,1);return c(e).do(t)},d.prototype.fo=function(){var e=Y(arguments),t=u();return e.push(t.Us()),this.ao(e).fail(t.reject),t.Ss},c.Eo=c.vo=function(e){if(void 0===e)throw new Error("Q can't wrap an undefined function");var t=Y(arguments,1);return function(){var r=t.concat(Y(arguments)),i=u();return r.push(i.Us()),c(e).ao(r).fail(i.reject),i.Ss}},d.prototype.Eo=d.prototype.vo=function(){var e=Y(arguments);return e.unshift(this),c.vo.apply(void 0,e)},c.yo=function(e,t){var r=Y(arguments,2);return function(){function i(){return e.apply(t,arguments)}var n=r.concat(Y(arguments)),s=u();return n.push(s.Us()),c(i).ao(n).fail(s.reject),s.Ss}},d.prototype.yo=function(){var e=Y(arguments,0);return e.unshift(this),c.yo.apply(void 0,e)},c.To=c.mo=function(e,t,r){return c(e).mo(t,r)},d.prototype.To=d.prototype.mo=function(e,t){var r=Y(t||[]),i=u();return r.push(i.Us()),this.As("post",[e,r]).fail(i.reject),i.Ss},c.Io=c.So=c.Ro=function(e,t){var r=Y(arguments,2),i=u();return r.push(i.Us()),c(e).As("post",[t,r]).fail(i.reject),i.Ss},d.prototype.Io=d.prototype.So=d.prototype.Ro=function(e){var t=Y(arguments,1),r=u();return t.push(r.Us()),this.As("post",[e,t]).fail(r.reject),r.Ss},c.Ns=H,d.prototype.Ns=function(e){if(!e)return this;this.then(function(t){c.Ts(function(){e(null,t)})},function(t){c.Ts(function(){e(t)})})},c.wo=function(){throw new Error("Q.noConflict only works when Q is used as a global")};var oe=h();return c})},function(e,t,r){"use strict";var i=r(6),n=i.he.bo;!function(e){var t=function(){function e(){}return e}();t.Co=5e3,t._o=6,t.Po=1e4,t.Ao=.2,t.Oo=10,e.No=t;var r=function(){function e(){}return e}();r.Do="0.0.1",r.ko=3e4,r.Lo=4e7,r.Mo=1,r.Fo=.8,r.Uo=!1,r.Bo=2e4,e.Ho=r;var i=function(){function e(){}return e}();i.xo=!0,i.qo=3,i.Go=1e4,e.Vo=i;var s=function(){function e(){}return e}();s.jo=1.1,e.Qo=s;var o=function(){function e(){}return e}();o.Ko=n,o.Yo=2e4,o.Wo=5e3,e.zo=o;var a=function(){function e(){}return e}();a.Jo=[412],e.Xo=a;var h=function(){function e(){}return e}();h.Zo=2e3,h.$o=!0,h.ea=!1,h.ta=1,h.ra=.02,h.ia=!0,h.na=!1,h.sa=!1,h.oa=1e4,h.aa=4e4,h.ha=3700,h.ca=2e4,h.ua=1,h.la=5,h.pa=.4,h.da=1,e.fa=h;var c=function(){function e(){}return e}();c.ga=30,c.Ea=2e4,c.va=3e4,e.ya=c;var u=function(){function e(){}return e}();u.Ta=3e7,u.ma=3e4,u.Ia=!1,u.Sa=10,e.Ra=u;var l=function(){function e(){}return e}();l.wa=3,l.ba=!1,l.Ca=3e4,l._a=.2,l.Pa=.2,l.Aa=1e4,e.Oa=l;var p=function(){function e(){}return e}();p.Na=!1,e.K=p;var d=function(){function e(){}return e}();d.Da=64e3,d.ka=5e3,d.La=1,d.Ma=1,e.Fa=d;var f=function(){function e(){}return e}();f.Ua=4e3,f.Ba=3e4,f.Ha=4096,f.xa=!0,f.qa=5e3,f.Ga=1e4,e.UDPBroadcast=f;var g=function(){function e(){}return e}();g.Va=100,g.ja=1e3,e.Qa=g;var E=function(){function e(){}return e}();E.Ka=20,E.Ya=20,E.Wa=20,E.za=5,e.Ja=E;var v=function(){function e(){}return e}();v.Xa="site",v.Za="externalAs",v.$a="availableSendRate",v.eh="remoteAddress",v.th="localAddress",v.rh=2e4,e.ih=v;var y=function(){function e(){}return e}();y.nh=3e4,e.sh=y;var T=function(){function e(){}return e}();T.oh=300,e.ah=T}(t.hh||(t.hh={}))},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.uh=!1,i.lh=!0,i.ph=!1,i.dh="4.1.0",i.fh="undefined"!=typeof core?core:"undefined",i.gh=!1,i.Eh=!0,i.vh="undefined"!=typeof INCLUDE_VOD_CACHE&&INCLUDE_VOD_CACHE,i.yh="undefined"!=typeof INCLUDE_UDP_BROADCAST&&INCLUDE_UDP_BROADCAST,i.Th="undefined"!=typeof INCLUDE_UDP_LEADER_ELECTION&&INCLUDE_UDP_LEADER_ELECTION,i.mh="undefined"!=typeof LEADER_SCORE_EQUALITY&&LEADER_SCORE_EQUALITY,i.Ih="undefined"!=typeof INCLUDE_DEFAULT_NETWORK&&INCLUDE_DEFAULT_NETWORK,i.Sh="undefined"!=typeof HIVE_RESTRICTED_CONNINFO&&HIVE_RESTRICTED_CONNINFO,i.bo="undefined"!=typeof HIVE_DISCOVERY?HIVE_DISCOVERY:"ws://127.0.0.1:8000/hive",i.Rh="undefined"!=typeof P2PDispatcherDetailedLog&&P2PDispatcherDetailedLog,i.wh="undefined"!=typeof NetworkManagerDetailedLog&&NetworkManagerDetailedLog,i.ae="undefined"!=typeof ATATUS_KEY?ATATUS_KEY:"592835a6b4204dd197c00488610003e0",i.ce="undefined"!=typeof ATATUS_VERSION?ATATUS_VERSION:"0.8",i.ue="undefined"==typeof ATATUS_DEFAULT_ENABLED||ATATUS_DEFAULT_ENABLED,i.le=5,i.bh="undefined"!=typeof HIVE_PLUGIN_TIMEOUT?HIVE_PLUGIN_TIMEOUT:-1,i.Ch="undefined"==typeof HIVE_DETECT_PRIVATEIP||HIVE_DETECT_PRIVATEIP,i._h=!0,t.he=i},function(e,t,r){"use strict";var i=r(0),n=r(43),s=r(30);!function(e){function t(e,t){return t?e+"-"+t:e}function r(e,t){var r=new Uint8Array(e.byteLength+t.byteLength);return r.set(new Uint8Array(e),0),r.set(new Uint8Array(t),e.byteLength),r.buffer}function o(e){var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e),0),t.buffer}function a(e,t,r){void 0===r&&(r=!0);for(var i=0;i<e.length;)if(e[i]===t){if(e.splice(i,1),r)break}else i++}function h(e){return String.fromCharCode.apply(null,new Uint16Array(e))}function c(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var t=new RegExp("[\\?&]"+e+"=([^&#]*)"),r=t.exec(location.search);return null==r?"":decodeURIComponent(r[1].replace(/\+/g," "))}function u(e){for(var t=e.length-1;t>0;t--){var r=Math.floor(i.Framework.random()*(t+1)),n=e[t];e[t]=e[r],e[r]=n}return e}function l(e){var t=new Array;for(var r in e)e.hasOwnProperty(r)&&!/^\d+$/.test(r)&&t.push(r);return t}function p(e){return Object.keys(e).map(function(e){return parseInt(e,10)}).filter(function(e){return!isNaN(e)})}function d(e,t){return e[t]?e[t]:null}function f(e,t){return new s(t).Ph(e).toString()}function g(e){return 0==e.length?0:e.reduce(function(e,t){return e+t})/e.length}function E(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),i=0,n=e.length;i<n;i++)r[i]=e.charCodeAt(i);return t}function v(e,t,r,i){var n=new e(t,r),s=i||r.currentTarget;return s&&Object.defineProperties(n,{currentTarget:{value:s,p:!0,Ah:!1},target:{value:s,p:!0,Ah:!1}}),n}e.Oh=new n.Counter;var y=function(){function e(){this.ALPHA=.25,this.Nh=1e8,this.Dh=1e4}return e.prototype.kh=function(){return void 0!==this.Lh},e.prototype.Mh=function(e,t){return this.Lh=Math.min(this.Nh,t/e*8e3),this},e.prototype.Fh=function(e){return this.Lh=Math.max(this.Nh,e),this},e.prototype.Uh=function(e){e.kh()&&(this.kh()?this.Lh=this.Lh*(1-this.ALPHA)+e.Lh*this.ALPHA:this.Lh=e.Lh)},e.prototype.Bh=function(e){return this.kh()?Math.round(8e3*e/this.Lh):NaN},e.prototype.Hh=function(){return this.kh()?this.Lh:NaN},e.prototype.xh=function(){return this.kh()?this.Lh/1e3:NaN},e.prototype.qh=function(){return this.kh()?this.Lh/1e6:NaN},e.prototype.Gh=function(){return this.kh()?this.Lh>1e6?(this.Lh/1e6).toFixed(2)+"Mb/s":this.Lh>1e3?(this.Lh/1e3).toFixed(2)+"Kb/s":this.Lh+"b/s":"NaN"},e}();e.Vh=y,e.jh=t,e.appendBuffer=r,e.Qh=o,e.Kh=a,e.Yh=h,e.Wh=c,e.zh=u,e.Jh=l,e.Xh=p,e.Zh=d,e.$h=f,e.ec=g,e.tc=E,e.createEvent=v}(t.rc||(t.rc={}))},function(e,t,r){"use strict";!function(e){e.ic="statsClient",e.G="servicesClient",e.nc="ticketResolver",e.M="identityProvider",e.sc="connInfoProvider",e.oc="peerInfo",e.ac="streamInfoProvider",e.hc="reporting",e.cc="statsStore",e.uc="trackManager",e.lc="trackClient"}(t.pc||(t.pc={}))},function(e,t,r){"use strict";!function(e){e[e.dc=0]="AUDIO",e[e.fc=1]="VIDEO",e[e.gc=2]="METADATA",e[e.Ec=3]="OTHER"}(t.vc||(t.vc={}))},function(e,t,r){"use strict";r(60);!function(e){e[e.yc=0]="TRACKER",e[e.W=1]="UDP"}(t.Tc||(t.Tc={}));!function(e){e[e.mc=1]="PLAYER",e[e.Ic=2]="P2P_AGENT",e[e.Sc=3]="PREFETCHER_FIRST_TIER",e[e.Rc=4]="PREFETCHER_SECOND_TIER"}(t.wc||(t.wc={}));var i=function(){function e(){}return e}();t.TrackerPeerStreamInfo=i;var n=function(){function e(e,t,r){this.isLeader=r,this.internalAs=0,this.externalAs=0,this.type=e,r||(this.isLeader=!1),t&&(this.guid=t.guid,this.internalAs=t.internalAs,this.externalAs=t.externalAs,this.nat=t.nat,this.bandwidth=t.bandwidth,this.watchingBitrate=t.watchingBitrate,this.streams=t.streams,this.rankValue=t.rankValue,this.timestamp=t.timestamp,this.privateIpString=t.privateIpString,this.publicIpString=t.publicIpString)}return e}();t.bc=n},function(e,t,r){r(65),r(36),r(66),r(100)},function(e,t,r){"use strict";function i(){throw new Error("Can't construct. GenericCollection is a mixin.")}e.i=i,i.Cc=Object.freeze([]),i.prototype.addEach=function(e){if(e&&Object(e)===e)if("function"==typeof e.forEach)e.forEach(this.add,this);else if("number"==typeof e.length)for(var t=0;t<e.length;t++)this.add(e[t],t);else Object.keys(e).forEach(function(t){this.add(e[t],t)},this);else if(e&&"number"==typeof e.length)for(var t=0;t<e.length;t++)this.add(e[t],t);return this},i.prototype._c=function(e,t){return e.forEach(function(e){this.delete(e,t)},this),this},i.prototype.forEach=function(e){var t=arguments[1];return this.reduce(function(r,i,n,s,o){e.call(t,i,n,s,o)},void 0)},i.prototype.map=function(e){var t=arguments[1],r=[];return this.reduce(function(i,n,s,o,a){r.push(e.call(t,n,s,o,a))},void 0),r},i.prototype.enumerate=function(e){null==e&&(e=0);var t=[];return this.reduce(function(r,i){t.push([e++,i])},void 0),t},i.prototype.group=function(e,t,r){r=r||Object.cs;var i=[],n=[];return this.forEach(function(s,o,a){var h,o=e.call(t,s,o,a),c=n.indexOf(o,r);-1===c?(h=[],i.push([o,h]),n.push(o)):h=i[c][1],h.push(s)}),i},i.prototype.toArray=function(){return this.map(Function.identity)},i.prototype.Pc=function(){var e={};return this.reduce(function(t,r,i){e[i]=r},void 0),e},i.prototype.filter=function(e){var t=arguments[1],r=this.Es();return this.reduce(function(i,n,s,o,a){e.call(t,n,s,o,a)&&r.add(n,s)},void 0),r},i.prototype.every=function(e){var t=arguments[1];return this.reduce(function(r,i,n,s,o){return r&&e.call(t,i,n,s,o)},!0)},i.prototype.some=function(e){var t=arguments[1];return this.reduce(function(r,i,n,s,o){return r||e.call(t,i,n,s,o)},!1)},i.prototype.all=function(){return this.every(Boolean)},i.prototype.uo=function(){return this.some(Boolean)},i.prototype.min=function(e){e=e||this.Ac||Object.Oc;var t=!0;return this.reduce(function(r,i){return t?(t=!1,i):e(i,r)<0?i:r},void 0)},i.prototype.max=function(e){e=e||this.Ac||Object.Oc;var t=!0;return this.reduce(function(r,i){return t?(t=!1,i):e(i,r)>0?i:r},void 0)},i.prototype.Nc=function(e){return e=void 0===e?0:e,this.reduce(function(e,t){return e+t},e)},i.prototype.Dc=function(e){var t=void 0===e?0:e,r=void 0===e?0:e;return this.reduce(function(e,i){t+=i,r+=1},void 0),t/r},i.prototype.concat=function(){for(var e=this.Es(this),t=0;t<arguments.length;t++)e.addEach(arguments[t]);return e},i.prototype.kc=function(){var e=this;return this.reduce(function(t,r){return r.forEach(function(e){this.push(e)},t,e),t},[])},i.prototype.Lc=function(){var e=Array.prototype.slice.call(arguments);return e.unshift(this),Array.Mc(e)},i.prototype.join=function(e){return this.reduce(function(t,r){return void 0===t?r:t+e+r},void 0)},i.prototype.Fc=function(e,t,r){return e=e||this.Ac||Object.Oc,e.Uc?(t=e.Uc,e=e.Oc||this.Ac||Object.Oc):t=t||Function.identity,void 0===r&&(r=1),this.map(function(e){return{Uc:t(e),value:e}}).sort(function(t,i){return e(t.Uc,i.Uc)*r}).map(function(e){return e.value})},i.prototype.reversed=function(){return this.Es(this).reverse()},i.prototype.clone=function(e,t){if(void 0===e)e=1/0;else if(0===e)return this;var r=this.Es();return this.forEach(function(i,n){r.add(Object.clone(i,e-1,t),n)},this),r},i.prototype.only=function(){if(1===this.length)return this.Bc()},i.prototype.iterator=function(){return this.Hc.apply(this,arguments)},i.gs={get:function(){return this.length},p:!1,l:!0},Object.defineProperty(i.prototype,"size",i.gs),r(65)},function(e,t,r){function i(){throw new Error("This is an abstract interface. Mix it. Don't construct it")}function n(e,t,r,i){var n,s,o,a=e.active,h=e.xc,c=h.length,u=c;for(a.length>c&&(a.length=c);c--;)a[c]=h[c];for(s=0;s<u;s++)if(o=a[s],!s||h.indexOf(o)>=0){if(n=o[e.qc]||o[e.Gc]||o,!n.call)throw new Error("No event listener for "+e.Vc+" or "+e.jc+" or call on "+n);n.call(o,r,t,i)}}r(11);var s=Object.prototype.hasOwnProperty;e.i=i,i.debug=!0,i.prototype.Qc=function(e){this.Kc||Object.defineProperty(this,"__propertyChangeListeners__",{value:{},p:!1,l:!0,Ah:!0});var t=this.Kc;if(!s.call(t,e)){var r=String(e);r=r&&r[0].toUpperCase()+r.slice(1),t[e]={Yc:{xc:[],active:[],qc:"handle"+r+"WillChange",Gc:"handlePropertyWillChange"},Wc:{xc:[],active:[],qc:"handle"+r+"Change",Gc:"handlePropertyChange"}}}return t[e]},i.prototype.zc=function(e){if(!this.Kc)return!1;if(!e)return!0;var t=this.Kc;return!!s.call(t,e)},i.prototype.Jc=function(e,t,r){this.Xc&&!this.Zc&&this.Xc();var n,s=i.Qc(this,e);n=r?s.Yc:s.Wc,i.$c(this,e),n.xc.push(t);var o=this;return function(){i.eu(o,e,t,r),o=null}},i.prototype.tu=function(e,t){return i.Jc(this,e,t,!0)},i.prototype.eu=function(e,t,r){var n,s=i.Qc(this,e);n=r?s.Yc:s.Wc;var o=n.xc.lastIndexOf(t);if(-1===o)throw new Error("Can't remove property change listener: does not exist: property name"+JSON.stringify(e));n.xc.splice(o,1)},i.prototype.ru=function(e,t){return i.eu(this,e,t,!0)},i.prototype.iu=function(e,t,r){var s,o=i.Qc(this,e);if(!o.isActive){o.isActive=!0,s=r?o.Yc:o.Wc;try{n(s,e,t,this)}finally{o.isActive=!1}}},i.prototype.nu=function(e,t){return i.iu(this,e,t,!0)},i.prototype.$c=function(e){var t=this.su;if(t){if(s.call(t,e))return}else{if(Array.isArray(this))return;if(!Object.isExtensible(this))throw new Error("Can't make property "+JSON.stringify(e)+" observable on "+this+" because object is not extensible");t={},Object.defineProperty(this,"__overriddenPropertyDescriptors__",{value:t,p:!1,Ah:!0,l:!0})}var r;"object"==typeof this.ou?r=this.ou:(r={},Object.defineProperty(this,"__state__",{value:r,Ah:!0,p:!1})),r[e]=this[e];var i,o=this;do{if(i=Object.getOwnPropertyDescriptor(o,e))break;o=Object.getPrototypeOf(o)}while(o);if(i){if(!i.l)return;if(!i.Ah&&!i.set)return}else i={value:void 0,p:!0,Ah:!0,l:!0};t[e]=i;var a;a="value"in i?{get:function(){return i.value},set:function(t){var s,o;if(t!==i.value){if(s=this.Kc[e],!(o=s.isActive)){s.isActive=!0;try{n(s.Yc,e,i.value,this)}finally{}}if(i.value=t,r[e]=t,!o)try{n(s.Wc,e,t,this)}finally{s.isActive=!1}}},p:i.p,l:!0}:{get:i.get,set:function(t){var s,o,a=this[e];if(i.set.call(this,t),(t=this[e])!==a){if(s=this.Kc[e],!(o=s.isActive)){s.isActive=!0;try{n(s.Yc,e,a,this)}finally{}}if(r[e]=t,!o)try{n(s.Wc,e,t,this)}finally{s.isActive=!1}}},p:i.p,l:!0},Object.defineProperty(this,e,a)},i.Qc=function(e,t){return e.Qc?e.Qc(t):i.prototype.Qc.call(e,t)},i.zc=function(e,t){return e.zc?e.zc(t):i.prototype.zc.call(e,t)},i.Jc=function(e,t,r,n){if(Object.au(e))return e.Jc?e.Jc(t,r,n):i.prototype.Jc.call(e,t,r,n)},i.eu=function(e,t,r,n){if(Object.au(e))return e.eu?e.eu(t,r,n):i.prototype.eu.call(e,t,r,n)},i.iu=function(e,t,r,n){if(Object.au(e))return e.iu?e.iu(t,r,n):i.prototype.iu.call(e,t,r,n)},i.tu=function(e,t,r){return i.Jc(e,t,r,!0)},i.ru=function(e,t,r){return i.eu(e,t,r,!0)},i.nu=function(e,t,r){return i.iu(e,t,r,!0)},i.$c=function(e,t){return e.$c?e.$c(t):i.prototype.$c.call(e,t)}},function(e,t,r){"use strict";var i,n=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},s=r(41),o=r(6),a=o.he.Sh,h=o.he.Ch;!function(e){var t=function(){function e(){}return e}();t.DashFilterBitrates=null,t.DashRemoveBitrateSize=!1,e.Dash=t;var r=function(){function e(){}return e}();r.AudioAccounting=!0,e.Stats=r;var i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t}(s.HiveConfig.DebugLogs);i.TrackerLogs=0,e.DebugLogs=i;var o=function(){function e(){}return e}();o.usiz=null,e.UDPBroadcast=o;var c=function(){function e(){}return e}();c.restrictedConnectivityInfo=a,c.hiddenHostnameValue="[Hidden]",e.SensitiveInfo=c;var u=function(){function e(){}return e}();u.cu=null,u.uu=null,e.ClientInfo=u;var l=function(){function e(){}return e}();l.detectPrivateIP=h,e.ConnInfo=l}(i=t.HiveConfig||(t.HiveConfig={})),"undefined"!=typeof window&&(void 0===window.HiveConfig&&(window.HiveConfig={}),window.HiveConfig.Dash=i.Dash,window.HiveConfig.Stats=i.Stats,window.HiveConfig.UDPBroadcast=i.UDPBroadcast,window.HiveConfig.DebugLogs=i.DebugLogs,window.HiveConfig.SensitiveInfo=i.SensitiveInfo,window.HiveConfig.ClientInfo=i.ClientInfo,window.HiveConfig.ConnInfo=i.ConnInfo)},function(e,t,r){"use strict";!function(e){e.lu="snapAccountingManager",e.pu="membership",e.du="partnership",e.fu="inPartnership",e.gu="outPartnership",e.Eu="inPrefetcherPartnership",e.vu="outPrefetcherPartnership",e.yu="cache",e.Tu="livecache",e.mu="vodcache",e.Iu="objIndex",e.Su="centrFragment",e.Ru="hcache",e.wu="responder",e.bu="requester",e.Cu="p2pRequester",e._u="peer",e.Pu="contextResolver",e.Au="videoPrefetcher",e.Ou="prefetchManager",e.Nu="picker",e.Du="trackerClient",e.ku="scoreUpdater",e.q="serverManager",e.Lu="requestTracker",e.Mu="trackerManager",e.Fu="renderStats",e.Uu="udpBroadcaster",e.Bu="udpDiscovery",e.Th="udpLeaderElection",e.Hu="nodeInfo",e.xu="ipspoofing"}(t.qu||(t.qu={}))},function(e,t){e.i=function(){return new Function}},function(e,t,r){"use strict";var i=!0,n={Gu:function(e){return"boolean"!=typeof e?new Error("Argument type: "+typeof e+". Please use a boolean."):(i=e,e?"adapter.js logging disabled":"adapter.js logging enabled")},log:function(){if("object"==typeof window){if(i)return;"undefined"!=typeof console&&"function"==typeof console.log&&console.log.apply(console,arguments)}},Vu:function(e,t,r){var i=e.match(t);return i&&i.length>=r&&parseInt(i[r],10)},ju:function(){var e={};if(e.Qu=null,e.version=null,"undefined"==typeof window||!window.navigator)return e.Qu="Not a browser.",e;if(navigator.mozGetUserMedia)e.Qu="firefox",e.version=this.Vu(navigator.userAgent,/Firefox\/(\d+)\./,1);else if(navigator.webkitGetUserMedia)if(window.webkitRTCPeerConnection)e.Qu="chrome",e.version=this.Vu(navigator.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else{if(!navigator.userAgent.match(/Version\/(\d+).(\d+)/))return e.Qu="Unsupported webkit-based browser with GUM support but no WebRTC support.",e;e.Qu="safari",e.version=this.Vu(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}else if(navigator.mediaDevices&&navigator.userAgent.match(/Edge\/(\d+).(\d+)$/))e.Qu="edge",e.version=this.Vu(navigator.userAgent,/Edge\/(\d+).(\d+)$/,2);else{if(!navigator.mediaDevices||!navigator.userAgent.match(/AppleWebKit\/(\d+)\./))return e.Qu="Not a supported browser.",e;e.Qu="safari",e.version=this.Vu(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}return e},Ku:function(){if("object"==typeof window&&window.HTMLMediaElement&&"srcObject"in window.HTMLMediaElement.prototype){var e=URL.createObjectURL.bind(URL),t=URL.revokeObjectURL.bind(URL),r=new Map,i=0;URL.createObjectURL=function(t){if("getTracks"in t){var n="polyblob:"+ ++i;return r.set(n,t),console.log("URL.createObjectURL(stream) is deprecated! Use elem.srcObject = stream instead!"),n}return e(t)},URL.revokeObjectURL=function(e){t(e),r.delete(e)};var n=Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,"src");Object.defineProperty(window.HTMLMediaElement.prototype,"src",{get:function(){return n.get.apply(this)},set:function(e){return this.Yu=r.get(e)||null,n.set.apply(this,[e])}});var s=HTMLMediaElement.prototype.setAttribute;HTMLMediaElement.prototype.setAttribute=function(){return 2===arguments.length&&"src"===(""+arguments[0]).toLowerCase()&&(this.Yu=r.get(arguments[1])||null),s.apply(this,arguments)}}}};e.i={log:n.log,Gu:n.Gu,Wu:n.ju(),Vu:n.Vu,Ku:n.Ku,ju:n.ju.bind(n)}},function(e,t,r){"use strict";function i(e,t,r){return void 0===t&&(t=""),void 0===r&&(r=[]),n(e,t,r,!0)}function n(e,t,r,i){void 0===t&&(t=""),void 0===r&&(r=[]),void 0===i&&(i=!1);for(var s in e)!function(s){if(e.hasOwnProperty(s)){var o=e[s];Array.isArray(o)?o.forEach(function(e,o){"object"==typeof e&&n(e,t+"."+s+"["+o+"]",r,i)}):"object"==typeof o?n(o,t+"."+s,r,i):"number"==typeof o&&isNaN(o)&&(r.push(t+"."+s),i||(e[s]=null))}}(s);return r}function s(e,t,r){var i=new c;return i.ticketUrl=e,i.code=t,i.message=u(t),i.detailedMessage=r,i}var o=r(3),a=r(4),h=r(26),c=h.HiveComm.HiveSessionError,u=h.HiveComm.getHiveSessionErrorMessage,l=h.HiveComm.HiveSession,p=r(53),d=r(72),f=r(14),g=r(6),E=r(1),v=g.he.uh;if(v)var y=r(31).HiveRequest,T=r(54).zu;var m=function(){function e(t){if(!t){if(0==Object.keys(e.mapping).length&&!e.Ju)return E.ErrorMonitor.ve().logError("No registered default HiveRequestFactory tech",e.loggerId),e.Ju=!0,e.getOriginalXhr();t=Object.keys(e.mapping)[0]}if(!(t in e.mapping))return e.Ju||(E.ErrorMonitor.ve().logError("no registered HiveRequestFactory tech for session",{sessionId:t}),e.Ju=!0),e.getOriginalXhr();var r=e.mapping[t];switch(r.tech){case"HiveJS":return v?r.Xu?new y(t):(r.Xu=!0,new T(t)):e.getOriginalXhr();case"HiveJsProxy":return r.Xu?new p.Zu(t):(r.Xu=!0,new d.$u(t));case"HiveJava":case"StatsJS":return e.getOriginalXhr()}}return e.getOriginalXhr=function(){return"undefined"!=typeof OriginalXMLHttpRequest?new OriginalXMLHttpRequest:new XMLHttpRequest},e.clear=function(){e.mapping={}},e.clearSessionState=function(t){if(t in e.mapping){var r=e.mapping[t];for(var i in r)"tech"!==i&&delete r[i]}},e.clearSession=function(t){t in e.mapping&&delete e.mapping[t]},e.registerTech=function(t,r){t in e.mapping||(e.mapping[t]={}),e.mapping[t].tech=r},e}();m.mapping={},m.Ju=!1,m.loggerId="[HiveRequestFactory]",t.HiveRequestFactory=m;var I=function(){function e(e,t,r,i){this.el=!1,this.ticketUrl=e,this.ticket=t,this.manifest=r,this.tl=a.defer(),this.rl=i,this.rl&&this.tl.resolve(this.rl)}return e.prototype.isActive=function(e){return null!==this.tech&&this.tech.isActive(e,this)},e.prototype.il=function(e){this.el!=e&&(this.el=e,this.tech&&this.tech.nl(this,e))},e.prototype.getTechName=function(){return this.tech&&this.tech.getName()||void 0},e.prototype.sl=function(){return this.el},e.prototype.close=function(e,t){if(void 0===t&&(t=!0),this.el=!0,null!=this.tech)return this.tech.ol(this,e,t)},e.prototype.toString=function(){return this.ticket.toString()},e.prototype.toHiveSession=function(){var e=new l;return e.id=this.id,e.ticketUrl=this.ticketUrl,e.manifest=this.manifest,e.tech=this.tech.getName(),e},e.prototype.al=function(){return this.tl.Ss},e.prototype.hl=function(e){this.rl=e,this.tl.resolve(this.rl)},e}();t.cl=I;var S=function(){function e(){}return e}();t.ul=S;var R=function(){function e(){this.success=0,this.ll=0,this.bytes=0}return e}();t.pl=R;var w=function(){function e(){this.dl=0,this.fl=0,this.gl=new o,this.El=new o}return e.prototype.accountCompleted=function(e,t,r,i){void 0===i&&(i=!0);var n=e?this.gl:this.El;n.has(t)||n.set(t,new R);var s=n.get(t);s.bytes+=r,i&&s.success++},e.prototype.accountFailed=function(e,t){var r=e?this.gl:this.El;r.has(t)||r.set(t,new R),r.get(t).ll++},e.prototype.updateBandwidth=function(e){this.bandwidth=e},e.prototype.bitrateSwitchUp=function(){this.dl++},e.prototype.bitrateSwitchDown=function(){this.fl++},e.prototype.getBandwidth=function(){return this.bandwidth},e.prototype.getVideoBitrates=function(){return this.gl},e.prototype.getAudioBitrates=function(){return this.El},e.prototype.getBitrateSwitchUp=function(){return this.dl},e.prototype.getBitrateSwitchDown=function(){return this.fl},e}();t.HivePlayerExtendedStats=w;var b=function(){function e(){var t=this;if(e.fe)throw new Error("Error: Instantiation failed: Use VisibilityChangeListener.getInstance() instead of new.");var r,i;void 0!==document.hidden?(r="hidden",i="visibilitychange"):void 0!==document.msHidden?(r="msHidden",i="msvisibilitychange"):void 0!==document.webkitHidden&&(r="webkitHidden",i="webkitvisibilitychange"),void 0!==document.addEventListener&&void 0!==document[r]?document.addEventListener(i,function(){var e=!document[r];t.vl.forEach(function(r){r.call(t,e)})},!1):e.logger&&e.logger.debug("warn - visibilityChange listener not supported"),this.vl=new Array}return e.ve=function(t){return t&&(this.logger=t),void 0===this.fe&&(this.fe=new e),this.fe},e.prototype.yl=function(e){this.vl.push(e)},e}();t.Tl=b,t.ml=i,t.Il=n,t.Sl=s;var C=function(){function e(){}return e.getItem=function(e){try{return window.sessionStorage?window.sessionStorage.getItem(e):null}catch(e){return null}},e.setItem=function(e,t){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(e,t),!0)}catch(e){return!1}},e.removeItem=function(e){try{window.sessionStorage&&window.sessionStorage.removeItem(e)}catch(e){return null}},e}();t.Rl=C;var _=function(){function e(e){this.wl=e}return e.prototype.bl=function(e){var t=Date.now();return this.isEqual(this.Cl,e)||(this._l=t),this.Cl=e,t-this._l>=this.wl},e.prototype.isEqual=function(e,t){if(e&&t){return[t.Pl-e.Pl,t.Al-e.Al,t.Ol-e.Ol].reduce(function(e,t){return e&&Math.abs(t)<10},!0)}return!1},e}();t.Nl=_;var P=function(){function e(){}return e.getPrivateIp=function(e){var t=e.getPrivateIp();return f.HiveConfig.SensitiveInfo.restrictedConnectivityInfo&&t&&(t=t.replace(/[0-9]*$/,"0")),t},e.Dl=function(e){return f.HiveConfig.SensitiveInfo.restrictedConnectivityInfo?f.HiveConfig.SensitiveInfo.hiddenHostnameValue:e.getHostName()},e}();t.kl=P},function(e,t,r){"use strict";var i=r(3),n=r(4),s=r(0),o=r(22),a=r(8),h=r(32);!function(e){e[e.STOP=0]="STOP",e[e.IDLE=1]="IDLE",e[e.Ll=2]="PLAY"}(t.Ml||(t.Ml={}));var c=function(){function e(e,t,r,i){this.ticket=e,this.Fl=t,this.app=r,this.identity=i,this.Ul=s.Framework.resolve(a.pc.cc),this.Bl=s.Framework.resolve(a.pc.ic),this.Hl=s.Framework.resolve(a.pc.uc),this.xl=new o.Gl.ql(this.Hl)}return e.prototype.Vl=function(e,t,r){this.app=new u(e,t),this.Ul.Vl(this.app),this.Hl.Vl(this.app,r)},e.prototype.nl=function(e){this.Bl.nl(e)},e.prototype.jl=function(){return this.renderStatsCallback},e.prototype.Ql=function(e){this.renderStatsCallback=e},e}();t.Kl=c;var u=function(){function e(e,t){this.app=e,this.version=t}return e}();t.Yl=u;var l=function(){function e(){this.p2pId=null,this.Wl=null,this.zl=new i,this.logger=s.Framework.resolve(s.Framework.V.R).log(),this.logger.debug("INIT REPORTING"),this.Fl=s.Framework.resolve(a.pc.G),this.Jl=s.Framework.resolve(a.pc.M),this.Xl=s.Framework.resolve(a.pc.nc)}return e.prototype.initSession=function(e,t,r){var i=this,s=n.defer(),o=this.Jl.Zl(),a=this.Xl.$l(e);return null!=r&&(a.testId=r),null!=a?o.then(function(e){return i.ep(e,a,s,t)}).fail(s.reject):s.reject("Ticket URL not valid"),s.Ss},e.prototype.close=function(e){e?(this.zl.delete(e),0==this.zl.length&&this.Fl.close()):(this.zl.clear(),this.Fl.close())},e.prototype.ep=function(e,t,r,i){var n=this;this.p2pId=e.tp(),this.Wl=e.rp();var s=this.Fl.init(this.p2pId,t),o=this.Xl.resolve(s.np,t,i);s.Ss.then(function(t){o.then(function(t){var i=t.sessionId;if(n.zl.has(i)){var s=n.zl.get(i);n.logger.warn("SESSION ALREADY EXISTING "+s.Ul.ticket)}else{var o=new u(h.Hive.sp(),h.Hive.getVersion()),a=new c(t,n.Fl,o,e);a.Ul.init(n.Wl,t,o,i),a.Hl.init(n.Wl,o),a.Hl.op(t),n.zl.set(i,a),n.logger.debug("SESSION SET ",i),r.resolve(a)}}).fail(function(e){return r.reject(e||"Error resolving the ticket")}),t.onerror(function(e){r.reject("Error establishing connection to Hive Services")})}).fail(function(e){return r.reject(e)}),this.Fl.connect()},e.prototype.ap=function(e,t){return e.hp()===t.hp()&&e.cp()===t.cp()&&e.up()===t.up()},e}();t.lp=l},function(e,t,r){"use strict";var i=r(41),n=r(29),s=r(42),o=r(6);o.he.lh,o.he.uh,o.he.ph;if(void 0===a)var a=3e4;!function(e){!function(e){var t=function(){function e(){this.monitorPort=n.L.pp?s.fp.dp:s.fp.gp,this.playerPort=n.L.pp?s.fp.Ep:s.fp.vp,this.feedbackPeriod=2e3,this.idleTimePeriod=6e4,this.useSessionCheck=n.L.yp,this.debugLevel="notice",this.hiveTechOrder=[],this.telemetryId=null,this.silent=!1,this.loggerTimestamp=i.HiveConfig.Framework.LoggerTimestamp,this.testId=null,this.pluginTimeout=a,this.onSourceSetCompleted=function(e){},this.onLoadingCompleted=function(e){},this.detectPrivateIP=o.he.Ch,this.onActiveSession=function(e){}}return e}();e.Options=t;var r=function(){function e(){this.initTimeout=3e4,this.onError=function(e){return!0},this.onActiveSession=function(e){}}return e}();e.Tp=r;var h=function(){function e(){this.hivePlayerPort="playerPort",this.hiveMonitorPort="monitorPort",this.hiveSilent="silent",this.hiveDebugLevel="debugLevel",this.hiveDebugTimestamp="loggerTimestamp",this.hiveSetupTimeout="setupTimeout",this.hiveJavaTimeout="initTimeout",this.hiveWarnJavaTimeout="warnSlowRespTimeout",this.hiveTestId="testId",this.hiveDetectPrivateIP="detectPrivateIP"}return e}();e.mp=h}(e.Options||(e.Options={}))}(t.HiveComm||(t.HiveComm={}));var h;!function(e){var t=function(){function e(){}return e}();t.enabledRUM=!1,t.enableKeyCombination=!0,t.enabledErrorFilter=!0,e.ErrorMonitor=t}(h=t.HiveConfig||(t.HiveConfig={})),"undefined"!=typeof window&&(void 0===window.HiveConfig&&(window.HiveConfig={}),window.HiveConfig.ErrorMonitor=h.ErrorMonitor)},function(e,t,r){"use strict";function i(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r=e[0],i=1;i<e.length;i++){var n=new RegExp("\\{"+(i-1)+"\\}","gm");r=r.replace(n,e[i])}return r}function n(e,t){for(var r in e)e.hasOwnProperty(r)&&t.hasOwnProperty(r)&&(t[r]=e[r])}function s(e,t,r){var i=new d(e).query(!0);for(var n in i)try{if(i.hasOwnProperty(n)&&t.hasOwnProperty(n)&&r.hasOwnProperty(t[n])){var s=t[n],a=i[n];r[s]=o(a,r[s])}}catch(e){}}function o(e,t){var r;switch(typeof t){case"number":r=parseInt(e);break;case"boolean":r="true"===e;break;default:r=e}return r}function a(e,t){function r(){if(!e())return i.resolve(!0);p.when(t(),r,i.reject)}var i=p.defer();return p.Ts(r),i.Ss}function h(e,t,r,i){return void 0===r&&(r=!0),void 0===i&&(i={}),c("GET",e,t,r,i)}function c(e,t,r,i,n){void 0===i&&(i=!0),void 0===n&&(n={});var s=p.defer();try{var o=new XMLHttpRequest;if(o.open(e,t,i),void 0!=r&&null!=r&&o.setRequestHeader("Content-Type",r),n)for(var a in n)n.hasOwnProperty(a)&&null!==n[a]&&o.setRequestHeader(a,n[a]);o.onload=function(){200==o.status?s.resolve(o.response):s.reject({status:o.status,reason:o.statusText,body:o.responseText})},o.onerror=function(e){s.reject({status:-1,reason:"Network Error"})},o.send()}catch(e){s.reject({status:-1,reason:e})}return s.Ss}function u(e,t,r,i,n){void 0===n&&(n=!0);var s=p.defer();try{var o=new XMLHttpRequest;if(o.open("POST",e,n),void 0!=r&&null!=r&&o.setRequestHeader("Content-Type",r),void 0!=i&&null!=i)for(var a in i)i.hasOwnProperty(a)&&null!==i[a]&&o.setRequestHeader(a,i[a]);o.onload=function(){200==o.status?s.resolve(o.response):s.reject({status:o.status,reason:o.statusText})},o.onerror=function(e){s.reject({status:-1,reason:"Network Error"})},o.send(t)}catch(e){s.reject({status:-1,reason:e})}return s.Ss}function l(e,t){var r,i,n=document.querySelector("base"),s=document.querySelector("head"),o=document.createElement("a"),a=n;return n?r=n.href:a=s.appendChild(document.createElement("base")),a.href=e,o.href=t,i=o.href,n?n.href=r:s.removeChild(a),i}var p=r(4),d=r(30);t.Ip=i,t.Sp=n,t.Rp=s,t.wp=a,t.bp=h,t.Cp=c,t._p=u,t.$h=l},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(18),s=r(44).Pp,o=r(4),a=r(0),h=r(8),c=r(27),u=r(23),l=r(14);!function(e){e.Ap="hive-client-track",e.Op="trackevent",e.Np="NULLID",e.Dp="";var t=function(){function e(){}return e}();t.kp=0,t.Lp=1,t.Mp=2,t.Fp=100,t.Up=200,e.Bp=t;!function(e){e[e.Hp=0]="PLAYING",e[e.xp=1]="BUFFERING",e[e.qp=2]="PAUSED",e[e.Gp=3]="SKIP",e[e.Vp=4]="STOPPED",e[e.ERROR=5]="ERROR",e[e.jp=6]="WINDOW_SIZE",e[e.Qp=7]="FULLSCREEN",e[e.Kp=8]="VISIBLE",e[e.HIDDEN=9]="HIDDEN"}(e.Yp||(e.Yp={}));!function(e){e[e.Wp=0]="JAVA_NOT_REACHABLE",e[e.zp=1]="JAVA_NOT_READY",e[e.Jp=2]="JAVA_WRONG_VERSION",e[e.Xp=3]="JAVA_SESSION_BUSY",e[e.Zp=4]="JAVA_SESSION_ERROR",e[e.$p=5]="JAVA_TICKET_TIMEOUT"}(e.td||(e.td={}));var r=function(){function e(){}return e}();e.rd=r;var p=function(){function e(){}return e}();e.nd=p;var d=function(){function e(){}return e}();e.sd=d;var f=function(){function e(){this.type=t.Mp}return e}(),g=function(){function e(){this.sessions=new Array}return e.prototype.od=function(e,t){var r;this.sessions.forEach(function(t){t.sessionId==e&&(r=t)}),r||(r=new E,r.sessionId=e,this.sessions.push(r)),r.events.push(t)},e}();e.ad=g;var E=function(){function e(){this.events=new Array}return e}();e.hd=E;var v=function(){function t(){this.logger=a.Framework.resolve(a.Framework.V.R).log(),this.ud=a.Framework.resolve(h.pc.sc),this.ld=new Array,this.pd=new Array,this.dd=new Array}return t.prototype.fd=function(e){this.client=e},t.prototype.init=function(e,t){this.gd=e,this.Vl(t),this.logger.debug("[TRACK] INIT ID: "+e)},t.prototype.Vl=function(e,t){this.app=e,t&&(this.Ed=t)},t.prototype.updatePlayerInfo=function(e){this.vd=e},t.prototype.op=function(e){var t=new T(e,this);this.ld.push(t),this.yd=null,this.client.Td(!0)},t.prototype.Xu=function(e,t,r){if(!this.yd)for(var i=0;i<this.ld.length;i++){var n=this.ld[i];if(n.ticket.sessionId===e){this.logger.debug("[TRACK] Activating Track for session "+e),this.yd=n;break}}if(this.yd){if(this.yd.ticket.sessionId!=e)return void this.logger.warn("[TRACK] ignoring manifest not matching event "+this.yd.ticket.sessionId+" != "+e);if(!this.yd.md){var s=new m(e,t,r);this.yd.Id(s),this.client.Td()}}},t.prototype.Sd=function(e,t,r){null!=this.yd&&(this.yd.md||this.yd.Rd.push(new w(e,t,r)))},t.prototype.wd=function(e,t,r){this.pd.push(new S(e,t,r)),this.client.Td()},t.prototype.bd=function(e,t,r){this.dd.push(new R(e,t,r)),this.client.Td()},t.prototype.Cd=function(e){var t=this;e&&e.forEach(function(e){t.dd.push(e)})},t.prototype.Pd=function(){var e=new p;this.Ed?(e.partnerId=this.Ed.partnerId,e.customerId=this.Ed.customerId):l.HiveConfig.ClientInfo.cu&&l.HiveConfig.ClientInfo.uu?(e.partnerId=l.HiveConfig.ClientInfo.cu,e.customerId=l.HiveConfig.ClientInfo.uu):this.yd&&(e.partnerId=this.yd.ticket.up(),e.customerId=this.yd.ticket.cp()),e.version=this.app.app+"_"+(this.Ed?this.Ed.version:this.app.version),this.Ed&&(e.installVersion=this.Ed.installVersion,e.installTs=this.Ed.installTs);var t=new s;return t.Ad(navigator.userAgent),e.os=t.Od().name+" "+t.Od().version,this.vd&&(e.commVersion=this.vd.commVersion,e.pluginName=this.vd.pluginName,e.pluginVersion=this.vd.pluginVersion,e.playerTech=this.vd.playerTech,e.playerVersion=this.vd.playerVersion,this.vd.telemetryId&&(e.telemetryId=this.vd.telemetryId)),e},t.prototype.Nd=function(){return this.yd?this.yd:this.ld&&this.ld.length>0?this.ld[this.ld.length-1]:void 0},t.prototype.Dd=function(t){var i=this;if(void 0===t&&(t=!0),0==this.ld.length&&0==this.pd.length)return t?o.reject("nothing to send"):(this.logger.debug("[TRACK]  NOTHING TO SEND"),null);var n=new r;n.app=e.Ap,n.createdAt=a.Framework.time(),n.guid=this.gd,n.name=e.Op;var s=this.Nd();if(s){var h=s.ticket.kd().replace(/[\[\]]/g,"");n.tags=[h],n.tags.push(s.ticket.up()),n.tags.push(s.ticket.cp())}else n.tags=new Array;var c=new g;if(c.peer=this.Pd(),this.ld.forEach(function(e){e.md||c.od(e.ticket.sessionId,e)}),this.pd.forEach(function(e){c.od(e.sessionId,e)}),this.dd.forEach(function(e){c.od(e.sessionId,e)}),n.data=c,t)return this.ud.getConnectivityInfo().then(function(e){var t=i.Ld(e);return c.od("null",t),n}).fail(function(e){return n});var u=this.Ld(this.ud.Md());return c.od("null",u),n},t.prototype.Ld=function(e){var t=new f;t.ts=a.Framework.time();var r=e.getNetworkChanged();return r.getPublicIp()&&(t.pubIp=r.getPublicIp()),r.getPrivateIp()&&(t.privIp=n.kl.getPrivateIp(r)),e.getHostName()&&(t.hostname=n.kl.Dl(e)),r.getCidr()&&(t.netmask=r.getCidr()),r.getNic()&&(t.nic=r.getNic()),r.getNicName()&&(t.nicName=r.getNicName()),r.getMacAddress()&&(t.mac=r.getMacAddress()),t},t.prototype.Fd=function(){return this.Ed?this.Ed.userAgent:navigator.userAgent},t.prototype.reset=function(){this.ld=new Array,this.pd=new Array,this.dd=new Array},t.prototype.Ud=function(e){},t}();e.Bd=v;var y=function(){function e(e){this.Hd=isNaN(l.HiveConfig.DebugLogs.TrackSnapshotLogs)?0:l.HiveConfig.DebugLogs.TrackSnapshotLogs,this.Hl=e,this.logger=a.Framework.resolve(a.Framework.V.R).log(),this.client=a.Framework.resolve(h.pc.G),this.Hl.fd(this)}return e.prototype.Td=function(e){void 0===e&&(e=!1);var t=e?c.Gd.qd.xd:c.Gd.qd.Vd;if(this.jd){this.Qd-(new Date).getTime()>t&&(a.Framework.clearTimeout(this.jd),this.Qd=null,this.Kd(t))}else this.Kd(t)},e.prototype.Yd=function(){this.jd&&(a.Framework.clearTimeout(this.jd),this.Qd=this.jd=null)},e.prototype.Kd=function(e){var t=this;this.jd=a.Framework.setTimeout(function(){t.Wd()},e),this.Qd=(new Date).getTime()+e},e.prototype.Wd=function(e){var t=this;void 0===e&&(e=!0),this.jd=null,this.Qd=null;var r=this.Hl.Dd(e);e?(this.logger.debug("[TRACK] TAKING A TRACK SNAPSHOT"),r.then(function(e){return t.forward(e)}).fail(function(e){t.logger.debug("[TRACK]  ERROR GENERATING/SENDING THE TRACK SNAPSHOT: ",e)}).finally(function(){return t.Hl.reset()}).done()):(this.logger.debug("[TRACK] FLUSHING TRACK SNAPSHOT"),this.forward(r),this.Hl.reset())},e.prototype.forward=function(e){if(this.client&&this.client.zd()&&e){var t=JSON.stringify(e);switch(this.Hd){case 0:default:this.logger.debug("[TRACK] TRACK EVENT");break;case 1:this.logger.debug("[TRACK] TRACK EVENT:"+t)}var r=new u.Jd(Services.Xd,2,t);this.client.zd().send(r)}},e.prototype.Zd=function(e){void 0===e&&(e=!0),e?(this.Yd(),this.Kd(c.Gd.qd.$d)):this.Wd(!1)},e}();e.ql=y;var T=function(){function e(e,t){this.createdAt=(new Date).getTime(),this.md=!1,this.ticket=e,this.manifests=new Array,this.Rd=new Array,this.Hl=t}return e.prototype.Id=function(e){this.manifests.push(e)},e.prototype.toJSON=function(){var e={};e.type=t.kp,e.ticket={},e.ticket.url=this.ticket.ticketUrl,e.ticket.reqTs=this.ticket.ef,e.ticket.respTs=this.ticket.rf,e.ticket.userAgent=this.Hl.Fd(),null!=this.ticket.testId&&(e.ticket.testId=this.ticket.testId),e.manifests=[],this.manifests.forEach(function(t){var r={};r.url=t.url,r.respTs=t.rf,r.respCode=t.respCode,e.manifests.push(r)});var r=-1,i=-1,n=-1;return this.Rd.forEach(function(e){e.if>0&&(-1==r&&(r=e.ts,i=e.if),n=e.if)}),-1!=r&&(e.playTs=r),-1!=n&&(e.buffTime=n),-1!=i&&(e.initBuffTime=i),e},e}();e.nf=T;var m=function(){function e(e,t,r){this.eventId=e,this.url=t,this.rf=(new Date).getTime(),this.respCode=r}return e}();e.sf=m;var I=function(){function e(e,t,r,i){this.ts=(new Date).getTime(),this.sessionId=e,this.sessionId||(this.sessionId="null"),this.event=t,this.af=r,i&&(this.ts=i)}return e.prototype.toJSON=function(){var e={};return e.type=this.hf+this.event,e.ts=this.ts,this.af&&(e.parameters=this.af),e},e}();e.cf=I;var S=function(e){function r(r,i,n,s){var o=e.call(this,r,i,n,s)||this;return o.hf=t.Fp,o}return i(r,e),r}(I);e.uf=S;var R=function(e){function r(r,i,n,s){var o=e.call(this,r,i,n,s)||this;return o.hf=t.Up,o}return i(r,e),r}(I);e.lf=R;var w=function(){function e(e,t,r){this.ts=(new Date).getTime(),this.Pl=e,this.pf=t,this.if=r}return e}();e.df=w}(t.Gl||(t.Gl={}))},function(e,t,r){"use strict";function i(){if(this.ff)return this.ff;var e=window&&window.window?window.window.gf:void 0;if(void 0!==e&&e.log&&e.debug&&e.info&&e.warn&&e.error&&(this.ff=e),!this.ff){var t=!(void 0===window.console),r=t?console.log.bind(console):function(){};this.ff={log:r,debug:t&&window.console.debug?window.console.debug.bind(console):r,info:t&&window.console.info?window.console.info.bind(console):r,warn:t&&window.console.warn?window.console.warn.bind(console):r,error:t&&window.console.error?window.console.error.bind(console):r}}return this.ff}var n=r(1),s=r(2);t.loggerId="[HiveServices] ";var o=function(){function e(){}return e}();o.Ef=250,t.L=o;var a=function(){function e(e,t,r){this.msgId=t,this.service=e,this.msg=r}return e.prototype.vf=function(){try{var t=new Uint8Array([this.service>>8,255&this.service]),r=new Uint8Array([this.msgId]),i=[t,r,this.msg];return new Blob(i,{type:"application/octet-binary"})}catch(t){throw n.ErrorMonitor.ve().logError("Error serializing message to send to the services",e.loggerId,s.hs.as.ns,t),new Error(t)}},e.yf=function(t){try{var r=(String.fromCharCode.apply(null,new Uint8Array(t)),String.fromCharCode.apply(null,new Uint8Array(t.slice(3)))),i=new Uint8Array(t.slice(0,2)),o=new Uint8Array(t.slice(2,3));return new e((i[0]<<8)+i[1],o[0],r)}catch(e){throw n.ErrorMonitor.ve().logError("Error extracting message from the services",this.loggerId,s.hs.as.ss,e),new Error(e)}},e}();a.loggerId="[Message] ",t.Jd=a,t.logger=i},function(e,t,r){"use strict";var i=r(0),n=r(7);!function(e){e[e.Tf=0]="UPPER_LAYER",e[e.mf=1]="CDN",e[e.If=2]="CDN_PREFETCH",e[e.Sf=3]="CDN_COMPENSATION",e[e.Rf=4]="P2P",e[e.wf=5]="P2P_PREFETCH"}(t.bf||(t.bf={}));var s=function(){function e(){this.Cf=!1,this._f=!1,this.Pf=0,this.Af=0,this.Of=0,this.Nf=0,this.Df=0,this.p2pAgenTrafficSuccessQt=0,this.kf=0,this.srcOtherRespQt=0,this.Lf=0,this.Mf=0,this.Ff=0,this.Uf=0,this.Bf=0}return e}();t.Hf=s;var o=function(){function e(e,t,r,n,o){this.xf=!1,this.type=void 0,this.qf=new s,this.Gf=!1,this.Vf=!1,this.responseHeaders="",this.jf=new ArrayBuffer(0),this.Qf=0,this.type=r,this.Kf=e,this.Yf=t,this.Wf=o,this.zf=n,this.qf.Lf=i.Framework.time()}return e.prototype.Jf=function(){return this.type},e.prototype.Xf=function(){return this.zf.Xf()},e.prototype.Zf=function(){return this.zf.Zf()},e.prototype.$f=function(){return this.Zf()+"-"+this.Yf},e.prototype.eg=function(){return this.zf.tg()},e.prototype.rg=function(){return this.zf.ig()},e.prototype.loaded=function(){this.ng=i.Framework.time()},e.prototype.sg=function(){return this.ng?Math.max(1,this.ng-this.qf.Ff):Math.max(1,this.qf.Uf-this.qf.Ff)},e.prototype.og=function(){return this.ng?Math.max(1,this.ng-this.qf.Mf):Math.max(1,this.qf.Uf-this.qf.Mf)},e.prototype.ag=function(){return 0!=this.qf.Df?(new n.rc.Vh).Mh(this.sg(),this.qf.Df):(new n.rc.Vh).Mh(this.og(),this.qf.Af)},e}();t.hg=o},function(e,t,r){"use strict";var i=r(161),n=r(35),s=r(28),o=s.cg,a=r(4),h=r(0),c=r(163),u=r(169),l=r(5),p=r(7),d=r(3),f=r(15),g=r(1),E=r(2);!function(e){e.ug=!1;var t;!function(e){e[e.Have=1]="Have",e[e.Chunk=2]="Chunk",e[e.Request=3]="Request",e[e.Cancel=4]="Cancel",e[e.Ack=5]="Ack",e[e.Close=6]="Close",e[e.DoNotHave=7]="DoNotHave",e[e.lg=8]="OutPartRequest",e[e.pg=9]="OutPartResp",e[e.dg=10]="UDPHandshakeReq",e[e.UDPHandshakeResponse=11]="UDPHandshakeResponse",e[e.UDPSwitchLeadershipRequest=12]="UDPSwitchLeadershipRequest",e[e.fg=13]="UDPSwitchAck",e[e.Bitrate=14]="Bitrate",e[e.Haves=15]="Haves",e[e.nd=16]="PeerInfo",e[e.Ping=17]="Ping",e[e.Pong=18]="Pong",e[e.gg=19]="NoPartnerResp"}(t=e.Eg||(e.Eg={}));var s=function(){function e(e){this.loggerId="[DispatcherManager] ",this.vg=new d,this.logger=h.Framework.resolve(h.Framework.V.R).log(),this.yg=e}return e.prototype.Tg=function(e){try{var t=null,r=h.Framework.resolve(f.qu._u),i=r.mg(e);return null==i?(this.logger.warn("MSG RECEIVED FROM UNKNOWN SWARM"),null):(t=new c.Ig(i,this.yg.Sg,this.yg.otherGuid,this.yg),this.vg.has(e)||this.vg.set(e,t),this.vg.get(e))}catch(e){g.ErrorMonitor.ve().logError("Error creating new dispatcher",this.loggerId,E.hs.tt.et,e)}},e.prototype.Rg=function(e){this.vg.delete(e)},e.prototype.wg=function(e){return this.vg.get(e)},e}();e.bg=s;var v=function(){function r(){this.loggerId="[Transport] ",this.Cg=null,this._g=h.Framework.resolve(h.Framework.V.R),this.Pg=new s(this),this.fe=r.Ag++,this.Og=h.Framework.time()}return r.prototype.init=function(e,t){this.Sg=e,this.otherGuid=t,this.Ng=h.Framework.resolve(h.Framework.V.F)},r.prototype.Dg=function(){var e=!1;return this.Pg.vg.forEach(function(t,r){(t.sender.Dg()||t.receiver.Dg())&&(e=!0)}),e},r.prototype.reset=function(){this.Pg.vg.forEach(function(e,t){e.sender.kg()})},r.prototype.close=function(e){return this.Pg.Rg(e),0==this.Pg.vg.length&&this.Ng.disconnect(this.otherGuid),a("ok")},r.prototype.Lg=function(r,i,s){try{this.Og=h.Framework.time();var a=s.tc(),c=a.byteLength,u=o.Fg.Mg.create(a),p=o.Ug(u),d=new n;d.Bg(r),d.Hg(i),d.Bg(c),d.Hg(p.toString()),d.append(a),d.xg();var f=d.tc(),v=r===t.Chunk&&h.Framework.C()?f.byteLength+l.hh.Fa.Da:f.byteLength;e.ug&&this._g.log(i).debug(this.fe+" SEND MSG ID "+r+","+v+" HASH "+p.toString()+" TO "+this.otherGuid)}catch(t){g.ErrorMonitor.ve().logError("Error constructing message",this.loggerId,E.hs.$e.ze,{qg:e.Eg[r]})}try{this.Ng.send(this.otherGuid,f,v)||g.ErrorMonitor.ve().logError("Error message dropped",this.loggerId,E.hs.$e.Je,{qg:e.Eg[r],otherGuid:this.otherGuid})}catch(t){g.ErrorMonitor.ve().logError("Error sending message",this.loggerId,E.hs.$e.Xe,{qg:e.Eg[r],otherGuid:this.otherGuid}),this._g.log(i).warn("ERROR SENDING MESSAGE TO "+this.otherGuid+" "+t.stack)}},r.prototype.Gg=function(i){var s=this;e.ug&&this._g.log().debug(this.fe+" GOT MSG "+i.byteLength);try{var a=h.Framework.time();this.Og=a,this.Vg(i).then(function(c){if(e.ug&&s._g.log().debug(s.fe+" RECEIVING "+c.byteLength+" after "+(h.Framework.time()-a)),c.byteLength>r.jg)throw new RangeError("P2P Message too big to be processed");var l=s.Cg;if(null===l){var d=n.wrap(c),f=d.Qg();if(e.ug&&s._g.log().debug("MSG ID "+f),f>Object.keys(t).length)return s._g.log().warn("MSG OF WRONG ID RECEIVED: "+f),void(s.Cg=null);if(l=s.Cg=new u.Kg,l.msgId=f,l.swarmId=d.Yg(),l.length=d.Qg(),l.hash=d.Yg(),l.Wg=d.tc(),l.length>r.jg)throw new RangeError("P2P Message too big to be processed");e.ug&&s._g.log(l.swarmId).debug("MSG ID "+l.msgId+" L "+l.length+" SWID "+l.swarmId+" H "+l.hash+" TR "+l.Wg.byteLength)}else{if(e.ug&&s._g.log().debug("APPENDING TO P2P MESSAGE "+l.msgId),null!=l.Wg.byteLength&&l.Wg.byteLength>r.jg)throw new RangeError("P2P Message too big to be processed");l.Wg=p.rc.appendBuffer(l.Wg,i)}if(l.Wg.byteLength===l.length){var g=o.Fg.Mg.create(l.Wg);if(o.Ug(g).toString()!==l.hash){return void s._g.log(l.swarmId).warn(" INTEGRITY CHECK FAILED ")}var E=s.Pg.wg(l.swarmId);E||(E=s.Pg.Tg(l.swarmId),s._g.log(l.swarmId).debug("CREATED NEW DISPATCHER FOR "+s.otherGuid)),E&&E.As(l),l.Wg=null,s.Cg=null}})}catch(e){g.ErrorMonitor.ve().logError("Error receiving message",this.loggerId,E.hs.$e.Ze,e),this.Cg=null}},r.prototype.Vg=function(e){var t=!h.Framework.C()&&navigator.userAgent.toLowerCase().indexOf("firefox")>-1,r=a.defer();if(t){var i=new FileReader;i.onload=function(t){e=this.result,r.resolve(e)},i.onerror=r.reject,i.readAsArrayBuffer(e)}else r.resolve(e);return r.Ss},r.prototype.zg=function(){return this.Og},r}();v.Jg=i.Zg(r(170)).Xg("HiveMsgs"),v.Ag=0,v.jg=136+Math.ceil(1.2*l.hh.Fa.Da),e.Fa=v}(t.Rf||(t.Rf={}))},function(e,t,r){"use strict";var i;!function(e){function t(e){return o[e]}function r(e,r,i){var n=new a;return n.ticketUrl=e,n.code=r,n.message=t(r),n.detailedMessage=i,n}var i=function(){function e(){this.savings=0,this.cdnRequests=0,this.cdnResponses=0,this.cdnResponseErrors=0,this.cdnResponseBytes=0,this.p2pRequests=0,this.p2pResponses=0,this.p2pResponseErrors=0,this.p2pResponseBytes=0,this.partners={}}return e}();e.$g=i;var n=function(){function e(){this.uuid="",this.sentBytes=0,this.receivedBytes=0,this.successTransfers=0,this.failedTransfers=0}return e}();e.eE=n;var s=function(){function e(){}return e}();e.HiveSession=s;!function(e){e[e.tE=0]="GENERIC_ERROR",e[e.rE=1]="NO_TECH_AVAILABLE",e[e.iE=2]="NO_TECH_RESOLVED",e[e.nE=3]="TECH_ERROR",e[e.sE=4]="TICKET_ERROR"}(e.oE||(e.oE={}));var o;!function(e){e[e["aE"]=0]="Generic Undefined Error",e[e["hE"]=1]="No Tech available to resolve the ticket",e[e["cE"]=2]="No available Tech could resolved the ticket",e[e["uE"]=3]="Stopped resolving session on last tech onError",e[e["lE"]=4]="The ticket could not be resolved"}(o||(o={}));var a=function(){function e(){}return e}();e.HiveSessionError=a;var h=function(){function e(e,t){this.code=e,this.message=t}return e}();e.HiveTechError=h;!function(e){e[e.pE=0]="NOT_READY",e[e.dE=1]="PLUGIN_ERROR",e[e.fE=2]="SESSION_ERROR",e[e.sE=3]="TICKET_ERROR",e[e.gE=4]="VERSION_ERROR",e[e.EE=5]="TIMEOUT_ERROR"}(e.vE||(e.vE={}));!function(e){e[e.yE=0]="OK",e[e.TE=1]="HIVE_NOT_ALLOWED",e[e.mE=2]="TICKET_NOT_RESOLVED",e[e.IE=3]="TIMEOUT_RESOLVING_TICKET"}(e.SE||(e.SE={})),e.getHiveSessionErrorMessage=t,e.Sl=r;var c=function(){function e(e){this.RE=e}return e.prototype.getPluginStatusCode=function(){return this.RE.getStatusCode()},e}();e.wE=c}(i=t.HiveComm||(t.HiveComm={})),"undefined"!=typeof window&&(void 0===window.HiveComm&&(window.HiveComm={}),window.HiveComm.getHiveSessionErrorMessage=i.getHiveSessionErrorMessage)},function(e,t,r){"use strict";var i=r(6);!function(e){e.Eh=i.he.Eh,e._h=i.he._h;var t=function(){function e(){}return e}();t.bE="wss://bee.hivestreaming.com:443/v1/hivejs",t.CE="wss://bee-test.hivestreaming.com:443/v1/hivejs",t._E={iceServers:[{url:"stun:stun.hivestreaming.com:3478"}]},t.PE=3e4,t.Vd=3e5,t.xd=8e4,t.$d=1e3,t.AE=3e4,t.OE=100,t.NE=1e4,e.qd=t}(t.Gd||(t.Gd={}))},function(e,t){function r(e,t,r){null!=e&&("number"==typeof e?this.DE(e,t,r):null==t&&"string"!=typeof e?this.kE(e,256):this.kE(e,t))}function i(){return new r(null)}function n(e,t,r,i,n,s){for(;--s>=0;){var o=t*this[e++]+r[i]+n;n=Math.floor(o/67108864),r[i++]=67108863&o}return n}function s(e,t,r,i,n,s){for(var o=32767&t,a=t>>15;--s>=0;){var h=32767&this[e],c=this[e++]>>15,u=a*h+c*o;h=o*h+((32767&u)<<15)+r[i]+(1073741823&n),n=(h>>>30)+(u>>>15)+a*c+(n>>>30),r[i++]=1073741823&h}return n}function o(e,t,r,i,n,s){for(var o=16383&t,a=t>>14;--s>=0;){var h=16383&this[e],c=this[e++]>>14,u=a*h+c*o;h=o*h+((16383&u)<<14)+r[i]+n,n=(h>>28)+(u>>14)+a*c,r[i++]=268435455&h}return n}function a(e){return Ce.charAt(e)}function h(e,t){var r=_e[e.charCodeAt(t)];return null==r?-1:r}function c(e){for(var t=this.t-1;t>=0;--t)e[t]=this[t];e.t=this.t,e.T=this.T}function u(e){this.t=1,this.T=e<0?-1:0,e>0?this[0]=e:e<-1?this[0]=e+this.LE:this.t=0}function l(e){var t=i();return t.ME(e),t}function p(e,t){var i;if(16==t)i=4;else if(8==t)i=3;else if(256==t)i=8;else if(2==t)i=1;else if(32==t)i=5;else{if(4!=t)return void this.FE(e,t);i=2}this.t=0,this.T=0;for(var n=e.length,s=!1,o=0;--n>=0;){var a=8==i?255&e[n]:h(e,n);a<0?"-"==e.charAt(n)&&(s=!0):(s=!1,0==o?this[this.t++]=a:o+i>this.UE?(this[this.t-1]|=(a&(1<<this.UE-o)-1)<<o,this[this.t++]=a>>this.UE-o):this[this.t-1]|=a<<o,(o+=i)>=this.UE&&(o-=this.UE))}8==i&&0!=(128&e[0])&&(this.T=-1,o>0&&(this[this.t-1]|=(1<<this.UE-o)-1<<o)),this.BE(),s&&r.ZERO.HE(this,this)}function d(){for(var e=this.T&this.xE;this.t>0&&this[this.t-1]==e;)--this.t}function f(e){if(this.T<0)return"-"+this.qE().toString(e);var t;if(16==e)t=4;else if(8==e)t=3;else if(2==e)t=1;else if(32==e)t=5;else{if(4!=e)return this.GE(e);t=2}var r,i=(1<<t)-1,n=!1,s="",o=this.t,h=this.UE-o*this.UE%t;if(o-- >0)for(h<this.UE&&(r=this[o]>>h)>0&&(n=!0,s=a(r));o>=0;)h<t?(r=(this[o]&(1<<h)-1)<<t-h,r|=this[--o]>>(h+=this.UE-t)):(r=this[o]>>(h-=t)&i,h<=0&&(h+=this.UE,--o)),r>0&&(n=!0),n&&(s+=a(r));return n?s:"0"}function g(){var e=i();return r.ZERO.HE(this,e),e}function E(){return this.T<0?this.qE():this}function v(e){var t=this.T-e.T;if(0!=t)return t;var r=this.t;if(0!=(t=r-e.t))return this.T<0?-t:t;for(;--r>=0;)if(0!=(t=this[r]-e[r]))return t;return 0}function y(e){var t,r=1;return 0!=(t=e>>>16)&&(e=t,r+=16),0!=(t=e>>8)&&(e=t,r+=8),0!=(t=e>>4)&&(e=t,r+=4),0!=(t=e>>2)&&(e=t,r+=2),0!=(t=e>>1)&&(e=t,r+=1),r}function T(){return this.t<=0?0:this.UE*(this.t-1)+y(this[this.t-1]^this.T&this.xE)}function m(e,t){var r;for(r=this.t-1;r>=0;--r)t[r+e]=this[r];for(r=e-1;r>=0;--r)t[r]=0;t.t=this.t+e,t.T=this.T}function I(e,t){for(var r=e;r<this.t;++r)t[r-e]=this[r];t.t=Math.max(this.t-e,0),t.T=this.T}function S(e,t){var r,i=e%this.UE,n=this.UE-i,s=(1<<n)-1,o=Math.floor(e/this.UE),a=this.T<<i&this.xE;for(r=this.t-1;r>=0;--r)t[r+o+1]=this[r]>>n|a,a=(this[r]&s)<<i;for(r=o-1;r>=0;--r)t[r]=0;t[o]=a,t.t=this.t+o+1,t.T=this.T,t.BE()}function R(e,t){t.T=this.T;var r=Math.floor(e/this.UE);if(r>=this.t)return void(t.t=0);var i=e%this.UE,n=this.UE-i,s=(1<<i)-1;t[0]=this[r]>>i;for(var o=r+1;o<this.t;++o)t[o-r-1]|=(this[o]&s)<<n,t[o-r]=this[o]>>i;i>0&&(t[this.t-r-1]|=(this.T&s)<<n),t.t=this.t-r,t.BE()}function w(e,t){for(var r=0,i=0,n=Math.min(e.t,this.t);r<n;)i+=this[r]-e[r],t[r++]=i&this.xE,i>>=this.UE;if(e.t<this.t){for(i-=e.T;r<this.t;)i+=this[r],t[r++]=i&this.xE,i>>=this.UE;i+=this.T}else{for(i+=this.T;r<e.t;)i-=e[r],t[r++]=i&this.xE,i>>=this.UE;i-=e.T}t.T=i<0?-1:0,i<-1?t[r++]=this.LE+i:i>0&&(t[r++]=i),t.t=r,t.BE()}function b(e,t){var i=this.abs(),n=e.abs(),s=i.t;for(t.t=s+n.t;--s>=0;)t[s]=0;for(s=0;s<n.t;++s)t[s+i.t]=i.VE(0,n[s],t,s,0,i.t);t.T=0,t.BE(),this.T!=e.T&&r.ZERO.HE(t,t)}function C(e){for(var t=this.abs(),r=e.t=2*t.t;--r>=0;)e[r]=0;for(r=0;r<t.t-1;++r){var i=t.VE(r,t[r],e,2*r,0,1);(e[r+t.t]+=t.VE(r+1,2*t[r],e,2*r+1,i,t.t-r-1))>=t.LE&&(e[r+t.t]-=t.LE,e[r+t.t+1]=1)}e.t>0&&(e[e.t-1]+=t.VE(r,t[r],e,2*r,0,1)),e.T=0,e.BE()}function _(e,t,n){var s=e.abs();if(!(s.t<=0)){var o=this.abs();if(o.t<s.t)return null!=t&&t.ME(0),void(null!=n&&this.jE(n));null==n&&(n=i());var a=i(),h=this.T,c=e.T,u=this.UE-y(s[s.t-1]);u>0?(s.QE(u,a),o.QE(u,n)):(s.jE(a),o.jE(n));var l=a.t,p=a[l-1];if(0!=p){var d=p*(1<<this.KE)+(l>1?a[l-2]>>this.YE:0),f=this.WE/d,g=(1<<this.KE)/d,E=1<<this.YE,v=n.t,T=v-l,m=null==t?i():t;for(a.zE(T,m),n.JE(m)>=0&&(n[n.t++]=1,n.HE(m,n)),r.ONE.zE(l,m),m.HE(a,a);a.t<l;)a[a.t++]=0;for(;--T>=0;){var I=n[--v]==p?this.xE:Math.floor(n[v]*f+(n[v-1]+E)*g);if((n[v]+=a.VE(0,I,n,T,0,l))<I)for(a.zE(T,m),n.HE(m,n);n[v]<--I;)n.HE(m,n)}null!=t&&(n.XE(l,t),h!=c&&r.ZERO.HE(t,t)),n.t=l,n.BE(),u>0&&n.ZE(u,n),h<0&&r.ZERO.HE(n,n)}}}function P(e){var t=i();return this.abs().$E(e,null,t),this.T<0&&t.JE(r.ZERO)>0&&e.HE(t,t),t}function A(e){this.h=e}function O(e){return e.T<0||e.JE(this.h)>=0?e.ev(this.h):e}function N(e){return e}function D(e){e.$E(this.h,null,e)}function k(e,t,r){e.tv(t,r),this.reduce(r)}function L(e,t){e.rv(t),this.reduce(t)}function M(){if(this.t<1)return 0;var e=this[0];if(0==(1&e))return 0;var t=3&e;return t=t*(2-(15&e)*t)&15,t=t*(2-(255&e)*t)&255,t=t*(2-((65535&e)*t&65535))&65535,t=t*(2-e*t%this.LE)%this.LE,t>0?this.LE-t:-t}function F(e){this.h=e,this.nv=e.sv(),this.ov=32767&this.nv,this.av=this.nv>>15,this.hv=(1<<e.UE-15)-1,this.cv=2*e.t}function U(e){var t=i();return e.abs().zE(this.h.t,t),t.$E(this.h,null,t),e.T<0&&t.JE(r.ZERO)>0&&this.h.HE(t,t),t}function B(e){var t=i();return e.jE(t),this.reduce(t),t}function H(e){for(;e.t<=this.cv;)e[e.t++]=0;for(var t=0;t<this.h.t;++t){var r=32767&e[t],i=r*this.ov+((r*this.av+(e[t]>>15)*this.ov&this.hv)<<15)&e.xE;for(r=t+this.h.t,e[r]+=this.h.VE(0,i,e,t,0,this.h.t);e[r]>=e.LE;)e[r]-=e.LE,e[++r]++}e.BE(),e.XE(this.h.t,e),e.JE(this.h)>=0&&e.HE(this.h,e)}function x(e,t){e.rv(t),this.reduce(t)}function q(e,t,r){e.tv(t,r),this.reduce(r)}function G(){return 0==(this.t>0?1&this[0]:this.T)}function V(e,t){if(e>4294967295||e<1)return r.ONE;var n=i(),s=i(),o=t.uv(this),a=y(e)-1;for(o.jE(n);--a>=0;)if(t.lv(n,s),(e&1<<a)>0)t.pv(s,o,n);else{var h=n;n=s,s=h}return t.dv(n)}function j(e,t){var r;return r=e<256||t.fv()?new A(t):new F(t),this.exp(e,r)}function Q(e){var t,r,i,n="",s=0;for(t=0;t<e.length&&e.charAt(t)!=Ae;++t)(i=Pe.indexOf(e.charAt(t)))<0||(0==s?(n+=a(i>>2),r=3&i,s=1):1==s?(n+=a(r<<2|i>>4),r=15&i,s=2):2==s?(n+=a(r),n+=a(i>>2),r=3&i,s=3):(n+=a(r<<2|i>>4),n+=a(15&i),s=0));return 1==s&&(n+=a(r<<2)),n}function K(e){var t,r=Q(e),i=new Array;for(t=0;2*t<r.length;++t)i[t]=parseInt(r.substring(2*t,2*t+2),16);return i}/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/
 */
function Y(e,t){return new r(e,t)}function W(e,t){if(t<e.length+11)return alert("Message too long for RSA"),null;for(var i=new Array,n=e.length-1;n>=0&&t>0;){var s=e.charCodeAt(n--);s<128?i[--t]=s:s>127&&s<2048?(i[--t]=63&s|128,i[--t]=s>>6|192):(i[--t]=63&s|128,i[--t]=s>>6&63|128,i[--t]=s>>12|224)}i[--t]=0;for(var o=new SecureRandom,a=new Array;t>2;){for(a[0]=0;0==a[0];)o.gv(a);i[--t]=a[0]}return i[--t]=2,i[--t]=0,new r(i)}function z(e,t,r){for(var i="",n=0;i.length<t;)i+=r(String.fromCharCode.apply(String,e.concat([(4278190080&n)>>24,(16711680&n)>>16,(65280&n)>>8,255&n]))),n+=1;return i}function J(e,t,i){if(e.length+2*Oe+2>t)throw"Message too long for RSA";var n,s="";for(n=0;n<t-e.length-2*Oe-2;n+=1)s+="\0";var o=rstr_sha1("")+s+""+e,a=new Array(Oe);(new SecureRandom).gv(a);var h=z(a,o.length,i||rstr_sha1),c=[];for(n=0;n<o.length;n+=1)c[n]=o.charCodeAt(n)^h.charCodeAt(n);var u=z(c,a.length,rstr_sha1),l=[0];for(n=0;n<a.length;n+=1)l[n+1]=a[n]^u.charCodeAt(n);return new r(l.concat(c))}function X(){this.n=null,this.e=0,this.d=null,this.v=null,this.Ev=null,this.vv=null,this.yv=null,this.Tv=null}function Z(e,t){this.mv=!0,"string"!=typeof e?(this.n=e,this.e=t):null!=e&&null!=t&&e.length>0&&t.length>0?(this.n=Y(e,16),this.e=parseInt(t,16)):alert("Invalid RSA public key")}function $(e){return e.Iv(this.e,this.n)}function ee(e){var t=W(e,this.n.Sv()+7>>3);if(null==t)return null;var r=this.Rv(t);if(null==r)return null;var i=r.toString(16);return 0==(1&i.length)?i:"0"+i}function te(e,t){var r=J(e,this.n.Sv()+7>>3,t);if(null==r)return null;var i=this.Rv(r);if(null==i)return null;var n=i.toString(16);return 0==(1&n.length)?n:"0"+n}function re(e,t){for(var r="",i=t/4-e.length,n=0;n<i;n++)r+="0";return r+e}function ie(e,t){var r=function(e){return KJUR.crypto.bv.wv(e,t)}(e);return this.Cv(r,t)}function ne(e,t){var r=KJUR.crypto.bv._v(e,t,this.n.Sv()),i=Y(r,16);return re(this.Pv(i).toString(16),this.n.Sv())}function se(e){return ie.call(this,e,"sha1")}function oe(e){return ie.call(this,e,"sha256")}function ae(e,t,r){for(var i="",n=0;i.length<t;)i+=hextorstr(r(rstrtohex(e+String.fromCharCode.apply(String,[(4278190080&n)>>24,(16711680&n)>>16,(65280&n)>>8,255&n])))),n+=1;return i}function he(e,t,r){var i=function(e){return KJUR.crypto.bv.Av(e,t)}(rstrtohex(e));return void 0===r&&(r=-1),this.Ov(i,t,r)}function ce(e,t,i){var n,s=hextorstr(e),o=s.length,a=this.n.Sv()-1,h=Math.ceil(a/8),c=function(e){return KJUR.crypto.bv.Av(e,t)};if(-1===i||void 0===i)i=o;else if(-2===i)i=h-o-2;else if(i<-2)throw"invalid salt length";if(h<o+i+2)throw"data too long";var u="";i>0&&(u=new Array(i),(new SecureRandom).gv(u),u=String.fromCharCode.apply(String,u));var l=hextorstr(c(rstrtohex("\0\0\0\0\0\0\0\0"+s+u))),p=[];for(n=0;n<h-i-o-2;n+=1)p[n]=0;var d=String.fromCharCode.apply(String,p)+""+u,f=ae(l,d.length,c),g=[];for(n=0;n<d.length;n+=1)g[n]=d.charCodeAt(n)^f.charCodeAt(n);var E=65280>>8*h-a&255;for(g[0]&=~E,n=0;n<o;n++)g.push(l.charCodeAt(n));return g.push(188),re(this.Pv(new r(g)).toString(16),this.n.Sv())}function ue(e,t,r){var i=new X;return i.Nv(t,r),i.Rv(e)}function le(e,t,r){return ue(e,t,r).toString(16).replace(/^1f+00/,"")}function pe(e){for(var t in KJUR.crypto.bv.Dv){var r=KJUR.crypto.bv.Dv[t],i=r.length;if(e.substring(0,i)==r){return[t,e.substring(i)]}}return[]}function de(e,t,r,i){var n=le(t,r,i),s=pe(n);if(0==s.length)return!1;var o=s[0],a=s[1];return a==function(e){return KJUR.crypto.bv.wv(e,o)}(e)}function fe(e,t){return de(t,Y(e,16),this.n.toString(16),this.e.toString(16))}function ge(e,t){t=t.replace(Ne,""),t=t.replace(/[ \n]+/g,"");var r=Y(t,16);if(r.Sv()>this.n.Sv())return 0;var i=this.Rv(r),n=i.toString(16).replace(/^1f+00/,""),s=pe(n);if(0==s.length)return!1;var o=s[0],a=s[1];return a==function(e){return KJUR.crypto.bv.wv(e,o)}(e)}function Ee(e,t){t=t.replace(Ne,""),t=t.replace(/[ \n]+/g,"");var r=Y(t,16);if(r.Sv()>this.n.Sv())return 0;var i=this.Rv(r),n=i.toString(16).replace(/^1f+00/,""),s=pe(n);if(0==s.length)return!1;s[0];return s[1]==e}function ve(e,t,r,i){var n=function(e){return KJUR.crypto.bv.Av(e,r)}(rstrtohex(e));return void 0===i&&(i=-1),this.kv(n,t,r,i)}function ye(e,t,i,n){var s=new r(t,16);if(s.Sv()>this.n.Sv())return!1;var o,a=function(e){return KJUR.crypto.bv.Av(e,i)},h=hextorstr(e),c=h.length,u=this.n.Sv()-1,l=Math.ceil(u/8);if(-1===n||void 0===n)n=c;else if(-2===n)n=l-c-2;else if(n<-2)throw"invalid salt length";if(l<c+n+2)throw"data too long";var p=this.Rv(s).Lv();for(o=0;o<p.length;o+=1)p[o]&=255;for(;p.length<l;)p.unshift(0);if(188!==p[l-1])throw"encoded message does not end in 0xbc";p=String.fromCharCode.apply(String,p);var d=p.substr(0,l-c-1),f=p.substr(d.length,c),g=65280>>8*l-u&255;if(0!=(d.charCodeAt(0)&g))throw"bits beyond keysize not zero";var E=ae(f,d.length,a),v=[];for(o=0;o<d.length;o+=1)v[o]=d.charCodeAt(o)^E.charCodeAt(o);v[0]&=~g;var y=l-c-n-2;for(o=0;o<y;o+=1)if(0!==v[o])throw"leftmost octets not zero";if(1!==v[y])throw"0x01 marker not found";return f===hextorstr(a(rstrtohex("\0\0\0\0\0\0\0\0"+h+String.fromCharCode.apply(String,v.slice(-n)))))}var Te={};Te.userAgent=!1;var me={};if(void 0===Ie||!Ie)var Ie={};Ie.Mv=function(){var e,t,r,i=arguments,n=null;for(e=0;e<i.length;e+=1)for(r=(""+i[e]).split("."),n=Ie,t="YAHOO"==r[0]?1:0;t<r.length;t+=1)n[r[t]]=n[r[t]]||{},n=n[r[t]];return n},Ie.log=function(e,t,r){var i=Ie.Uv.Fv;return!(!i||!i.log)&&i.log(e,t,r)},Ie.register=function(e,t,r){var i,n,s,o,a,h=Ie.Ms.Bv;for(h[e]||(h[e]={Hv:[],xv:[]}),i=h[e],n=r.version,s=r.Xg,o=Ie.Ms.vl,i.name=e,i.version=n,i.Xg=s,i.Hv.push(n),i.xv.push(s),i.qv=t,a=0;a<o.length;a+=1)o[a](i);t?(t.VERSION=n,t.Gv=s):Ie.log("mainClass is undefined for module "+e,"warn")},Ie.Ms=Ie.Ms||{Bv:[],vl:[]},Ie.Ms.getVersion=function(e){return Ie.Ms.Bv[e]||null},Ie.Ms.Vv=function(e){var t,r=function(e){var t=0;return parseFloat(e.replace(/\./g,function(){return 1==t++?"":"."}))},i=Te,n={jv:0,opera:0,Qv:0,Kv:0,chrome:0,Yv:null,Wv:0,zv:0,Jv:0,Xv:0,Zv:null,$v:0,ey:0,ty:i&&i.iy,ny:!1,os:null},s=e||Te&&Te.userAgent,o=me&&me.location,a=o&&o.href;return n.ny=a&&0===a.toLowerCase().indexOf("https"),s&&(/windows|win32/i.test(s)?n.os="windows":/macintosh/i.test(s)?n.os="macintosh":/rhino/i.test(s)&&(n.os="rhino"),/KHTML/.test(s)&&(n.Kv=1),t=s.match(/AppleWebKit\/([^\s]*)/),t&&t[1]&&(n.Kv=r(t[1]),/ Mobile\//.test(s)?(n.Yv="Apple",t=s.match(/OS ([^\s]*)/),t&&t[1]&&(t=r(t[1].replace("_","."))),n.Zv=t,n.zv=n.Xv=n.Jv=0,(t=s.match(/iPad|iPod|iPhone/))&&t[0]&&(n[t[0].toLowerCase()]=n.Zv)):(t=s.match(/NokiaN[^\/]*|Android \d\.\d|webOS\/\d\.\d/),t&&(n.Yv=t[0]),/webOS/.test(s)&&(n.Yv="WebOS",(t=s.match(/webOS\/([^\s]*);/))&&t[1]&&(n.ey=r(t[1]))),/ Android/.test(s)&&(n.Yv="Android",(t=s.match(/Android ([^\s]*);/))&&t[1]&&(n.$v=r(t[1])))),t=s.match(/Chrome\/([^\s]*)/),t&&t[1]?n.chrome=r(t[1]):(t=s.match(/AdobeAIR\/([^\s]*)/))&&(n.Wv=t[0])),n.Kv||(t=s.match(/Opera[\s\/]([^\s]*)/),t&&t[1]?(n.opera=r(t[1]),t=s.match(/Version\/([^\s]*)/),t&&t[1]&&(n.opera=r(t[1])),(t=s.match(/Opera Mini[^;]*/))&&(n.Yv=t[0])):(t=s.match(/MSIE\s([^;]*)/),t&&t[1]?n.jv=r(t[1]):(t=s.match(/Gecko\/([^\s]*)/))&&(n.Qv=1,(t=s.match(/rv:([^\s\)]*)/))&&t[1]&&(n.Qv=r(t[1])))))),n},Ie.Ms.sy=Ie.Ms.Vv(),function(){if(Ie.Mv("util","widget","example"),"undefined"!=typeof YAHOO_config){var e,t=YAHOO_config.listener,r=Ie.Ms.vl,i=!0;if(t){for(e=0;e<r.length;e++)if(r[e]==t){i=!1;break}i&&r.push(t)}}}(),Ie.lang=Ie.lang||{},function(){var e=Ie.lang,t=Object.prototype,r=[],i={oy:"&amp;",ay:"&lt;",hy:"&gt;",uy:"&quot;",ly:"&#x27;",py:"&#x2F;",gy:"&#x60;"},n=["toString","valueOf"],s={isArray:function(e){return"[object Array]"===t.toString.apply(e)},Ey:function(e){return"boolean"==typeof e},vy:function(e){return"function"==typeof e||"[object Function]"===t.toString.apply(e)},yy:function(e){return null===e},Ty:function(e){return"number"==typeof e&&isFinite(e)},au:function(t){return t&&("object"==typeof t||e.vy(t))||!1},my:function(e){return"string"==typeof e},Iy:function(e){return void 0===e},Sy:Ie.Ms.sy.jv?function(r,i){var s,o,a;for(s=0;s<n.length;s+=1)o=n[s],a=i[o],e.vy(a)&&a!=t[o]&&(r[o]=a)}:function(){},Ry:function(e){return e.replace(/[&<>"'\/`]/g,function(e){return i[e]})},extend:function(r,i,n){if(!i||!r)throw new Error("extend failed, please check that all dependencies are included.");var s,o=function(){};if(o.prototype=i.prototype,r.prototype=new o,r.prototype.constructor=r,r.wy=i.prototype,i.prototype.constructor==t.constructor&&(i.prototype.constructor=i),n){for(s in n)e.hasOwnProperty(n,s)&&(r.prototype[s]=n[s]);e.Sy(r.prototype,n)}},by:function(t,r){if(!r||!t)throw new Error("Absorb failed, verify dependencies.");var i,n,s=arguments,o=s[2];if(o&&!0!==o)for(i=2;i<s.length;i+=1)t[s[i]]=r[s[i]];else{for(n in r)!o&&n in t||(t[n]=r[n]);e.Sy(t,r)}return t},Cy:function(t,r){if(!r||!t)throw new Error("Augment failed, verify dependencies.");var i,n=[t.prototype,r.prototype];for(i=2;i<arguments.length;i+=1)n.push(arguments[i]);return e.by.apply(this,n),t},dump:function(t,r){var i,n,s=[],o="{...}";if(!e.au(t))return t+"";if(t instanceof Date||"nodeType"in t&&"tagName"in t)return t;if(e.vy(t))return"f(){...}";if(r=e.Ty(r)?r:3,e.isArray(t)){for(s.push("["),i=0,n=t.length;i<n;i+=1)e.au(t[i])?s.push(r>0?e.dump(t[i],r-1):o):s.push(t[i]),s.push(", ");s.length>1&&s.pop(),s.push("]")}else{s.push("{");for(i in t)e.hasOwnProperty(t,i)&&(s.push(i+" => "),e.au(t[i])?s.push(r>0?e.dump(t[i],r-1):o):s.push(t[i]),s.push(", "));s.length>1&&s.pop(),s.push("}")}return s.join("")},_y:function(t,r,i,n){for(var s,o,a,h,c,u,l,p,d,f=[],g=t.length;!((s=t.lastIndexOf("{",g))<0)&&(o=t.indexOf("}",s),!(s+1>o));)l=t.substring(s+1,o),h=l,u=null,a=h.indexOf(" "),a>-1&&(u=h.substring(a+1),h=h.substring(0,a)),c=r[h],i&&(c=i(h,c,u)),e.au(c)?e.isArray(c)?c=e.dump(c,parseInt(u,10)):(u=u||"",p=u.indexOf("dump"),p>-1&&(u=u.substring(4)),d=c.toString(),c="[object Object]"===d||p>-1?e.dump(c,parseInt(u,10)):d):e.my(c)||e.Ty(c)||(c="~-"+f.length+"-~",f[f.length]=l),t=t.substring(0,s)+c+t.substring(o+1),!1===n&&(g=s-1);for(s=f.length-1;s>=0;s-=1)t=t.replace(new RegExp("~-"+s+"-~"),"{"+f[s]+"}","g");return t},trim:function(e){try{return e.replace(/^\s+|\s+$/g,"")}catch(t){return e}},Py:function(){var t,r={},i=arguments,n=i.length;for(t=0;t<n;t+=1)e.by(r,i[t],!0);return r},Ay:function(t,i,n,s,o){t=t||0,i=i||{};var a,h,c=n,u=s;if(e.my(n)&&(c=i[n]),!c)throw new TypeError("method undefined");return e.Iy(s)||e.isArray(u)||(u=[s]),a=function(){c.apply(i,u||r)},h=o?setInterval(a,t):setTimeout(a,t),{interval:o,cancel:function(){this.interval?clearInterval(h):clearTimeout(h)}}},Oy:function(t){return e.au(t)||e.my(t)||e.Ty(t)||e.Ey(t)}};e.hasOwnProperty=t.hasOwnProperty?function(e,t){return e&&e.hasOwnProperty&&e.hasOwnProperty(t)}:function(t,r){return!e.Iy(t[r])&&t.constructor.prototype[r]!==t[r]},s.by(e,s,!0),Ie.util.Lang=e,e.Ny=e.Cy,Ie.Ny=e.Cy,Ie.extend=e.extend}(),Ie.register("yahoo",Ie,{version:"2.9.0",Xg:"2800"});/*! CryptoJS v3.1.2 core-fix.js
 * code.google.com/p/crypto-js
 * (c) 2009-2013 by Jeff Mott. All rights reserved.
 * code.google.com/p/crypto-js/wiki/License
 * THIS IS FIX of 'core.js' to fix Hmac issue.
 * https://code.google.com/p/crypto-js/issues/detail?id=84
 * https://crypto-js.googlecode.com/svn-history/r667/branches/3.x/src/core.js
 */
var Se=Se||function(e,t){var r={},i=r.Fg={},n=i.Dy=function(){function e(){}return{extend:function(t){e.prototype=this;var r=new e;return t&&r.ky(t),r.hasOwnProperty("init")||(r.init=function(){r.Ly.init.apply(this,arguments)}),r.init.prototype=r,r.Ly=this,r},create:function(){var e=this.extend();return e.init.apply(e,arguments),e},init:function(){},ky:function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);e.hasOwnProperty("toString")&&(this.toString=e.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),s=i.Mg=n.extend({init:function(e,t){e=this.My=e||[],this.Fy=void 0!=t?t:4*e.length},toString:function(e){return(e||a).stringify(this)},concat:function(e){var t=this.My,r=e.My,i=this.Fy,n=e.Fy;if(this.BE(),i%4)for(var s=0;s<n;s++){var o=r[s>>>2]>>>24-s%4*8&255;t[i+s>>>2]|=o<<24-(i+s)%4*8}else for(var s=0;s<n;s+=4)t[i+s>>>2]=r[s>>>2];return this.Fy+=n,this},BE:function(){var t=this.My,r=this.Fy;t[r>>>2]&=4294967295<<32-r%4*8,t.length=e.ceil(r/4)},clone:function(){var e=n.clone.call(this);return e.My=this.My.slice(0),e},random:function(t){for(var r=[],i=0;i<t;i+=4)r.push(4294967296*e.random()|0);return new s.init(r,t)}}),o=r.Uy={},a=o.By={stringify:function(e){for(var t=e.My,r=e.Fy,i=[],n=0;n<r;n++){var s=t[n>>>2]>>>24-n%4*8&255;i.push((s>>>4).toString(16)),i.push((15&s).toString(16))}return i.join("")},parse:function(e){for(var t=e.length,r=[],i=0;i<t;i+=2)r[i>>>3]|=parseInt(e.substr(i,2),16)<<24-i%8*4;return new s.init(r,t/2)}},h=o.Hy={stringify:function(e){for(var t=e.My,r=e.Fy,i=[],n=0;n<r;n++){var s=t[n>>>2]>>>24-n%4*8&255;i.push(String.fromCharCode(s))}return i.join("")},parse:function(e){for(var t=e.length,r=[],i=0;i<t;i++)r[i>>>2]|=(255&e.charCodeAt(i))<<24-i%4*8;return new s.init(r,t)}},c=o.xy={stringify:function(e){try{return decodeURIComponent(escape(h.stringify(e)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:function(e){return h.parse(unescape(encodeURIComponent(e)))}},u=i.qy=n.extend({reset:function(){this.Gy=new s.init,this.Vy=0},jy:function(e){"string"==typeof e&&(e=c.parse(e)),this.Gy.concat(e),this.Vy+=e.Fy},Qy:function(t){var r=this.Gy,i=r.My,n=r.Fy,o=this.Ky,a=4*o,h=n/a;h=t?e.ceil(h):e.max((0|h)-this.Yy,0);var c=h*o,u=e.min(4*c,n);if(c){for(var l=0;l<c;l+=o)this.Wy(i,l);var p=i.splice(0,c);r.Fy-=u}return new s.init(p,u)},clone:function(){var e=n.clone.call(this);return e.Gy=this.Gy.clone(),e},Yy:0}),l=(i.zy=u.extend({Jy:n.extend(),init:function(e){this.Jy=this.Jy.extend(e),this.reset()},reset:function(){u.reset.call(this),this.Xy()},update:function(e){return this.jy(e),this.Qy(),this},Zy:function(e){return e&&this.jy(e),this.$y()},Ky:16,eT:function(e){return function(t,r){return new e.init(r).Zy(t)}},tT:function(e){return function(t,r){return new l.rT.init(e,r).Zy(t)}}}),r.iT={});return r}(Math);!function(e){function t(e,t,r,i,n,s,o){return((e=e+(t&r|~t&i)+n+o)<<s|e>>>32-s)+t}function r(e,t,r,i,n,s,o){return((e=e+(t&i|r&~i)+n+o)<<s|e>>>32-s)+t}function i(e,t,r,i,n,s,o){return((e=e+(t^r^i)+n+o)<<s|e>>>32-s)+t}function n(e,t,r,i,n,s,o){return((e=e+(r^(t|~i))+n+o)<<s|e>>>32-s)+t}for(var s=Se,o=s.Fg,a=o.Mg,h=o.zy,o=s.iT,c=[],u=0;64>u;u++)c[u]=4294967296*e.abs(e.sin(u+1))|0;o=o.Ug=h.extend({Xy:function(){this.nT=new a.init([1732584193,4023233417,2562383102,271733878])},Wy:function(e,s){for(var o=0;16>o;o++){var a=s+o,h=e[a];e[a]=16711935&(h<<8|h>>>24)|4278255360&(h<<24|h>>>8)}var o=this.nT.My,a=e[s+0],h=e[s+1],u=e[s+2],l=e[s+3],p=e[s+4],d=e[s+5],f=e[s+6],g=e[s+7],E=e[s+8],v=e[s+9],y=e[s+10],T=e[s+11],m=e[s+12],I=e[s+13],S=e[s+14],R=e[s+15],w=o[0],b=o[1],C=o[2],_=o[3],w=t(w,b,C,_,a,7,c[0]),_=t(_,w,b,C,h,12,c[1]),C=t(C,_,w,b,u,17,c[2]),b=t(b,C,_,w,l,22,c[3]),w=t(w,b,C,_,p,7,c[4]),_=t(_,w,b,C,d,12,c[5]),C=t(C,_,w,b,f,17,c[6]),b=t(b,C,_,w,g,22,c[7]),w=t(w,b,C,_,E,7,c[8]),_=t(_,w,b,C,v,12,c[9]),C=t(C,_,w,b,y,17,c[10]),b=t(b,C,_,w,T,22,c[11]),w=t(w,b,C,_,m,7,c[12]),_=t(_,w,b,C,I,12,c[13]),C=t(C,_,w,b,S,17,c[14]),b=t(b,C,_,w,R,22,c[15]),w=r(w,b,C,_,h,5,c[16]),_=r(_,w,b,C,f,9,c[17]),C=r(C,_,w,b,T,14,c[18]),b=r(b,C,_,w,a,20,c[19]),w=r(w,b,C,_,d,5,c[20]),_=r(_,w,b,C,y,9,c[21]),C=r(C,_,w,b,R,14,c[22]),b=r(b,C,_,w,p,20,c[23]),w=r(w,b,C,_,v,5,c[24]),_=r(_,w,b,C,S,9,c[25]),C=r(C,_,w,b,l,14,c[26]),b=r(b,C,_,w,E,20,c[27]),w=r(w,b,C,_,I,5,c[28]),_=r(_,w,b,C,u,9,c[29]),C=r(C,_,w,b,g,14,c[30]),b=r(b,C,_,w,m,20,c[31]),w=i(w,b,C,_,d,4,c[32]),_=i(_,w,b,C,E,11,c[33]),C=i(C,_,w,b,T,16,c[34]),b=i(b,C,_,w,S,23,c[35]),w=i(w,b,C,_,h,4,c[36]),_=i(_,w,b,C,p,11,c[37]),C=i(C,_,w,b,g,16,c[38]),b=i(b,C,_,w,y,23,c[39]),w=i(w,b,C,_,I,4,c[40]),_=i(_,w,b,C,a,11,c[41]),C=i(C,_,w,b,l,16,c[42]),b=i(b,C,_,w,f,23,c[43]),w=i(w,b,C,_,v,4,c[44]),_=i(_,w,b,C,m,11,c[45]),C=i(C,_,w,b,R,16,c[46]),b=i(b,C,_,w,u,23,c[47]),w=n(w,b,C,_,a,6,c[48]),_=n(_,w,b,C,g,10,c[49]),C=n(C,_,w,b,S,15,c[50]),b=n(b,C,_,w,d,21,c[51]),w=n(w,b,C,_,m,6,c[52]),_=n(_,w,b,C,l,10,c[53]),C=n(C,_,w,b,y,15,c[54]),b=n(b,C,_,w,h,21,c[55]),w=n(w,b,C,_,E,6,c[56]),_=n(_,w,b,C,R,10,c[57]),C=n(C,_,w,b,f,15,c[58]),b=n(b,C,_,w,I,21,c[59]),w=n(w,b,C,_,p,6,c[60]),_=n(_,w,b,C,T,10,c[61]),C=n(C,_,w,b,u,15,c[62]),b=n(b,C,_,w,v,21,c[63]);o[0]=o[0]+w|0,o[1]=o[1]+b|0,o[2]=o[2]+C|0,o[3]=o[3]+_|0},$y:function(){var t=this.Gy,r=t.My,i=8*this.Vy,n=8*t.Fy;r[n>>>5]|=128<<24-n%32;var s=e.floor(i/4294967296);for(r[15+(n+64>>>9<<4)]=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8),r[14+(n+64>>>9<<4)]=16711935&(i<<8|i>>>24)|4278255360&(i<<24|i>>>8),t.Fy=4*(r.length+1),this.Qy(),t=this.nT,r=t.My,i=0;4>i;i++)n=r[i],r[i]=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8);return t},clone:function(){var e=h.clone.call(this);return e.nT=this.nT.clone(),e}}),s.Ug=h.eT(o),s.sT=h.tT(o)}(Math),function(){var e=Se,t=e.Fg,r=t.Mg,i=t.zy,n=[],t=e.iT.oT=i.extend({Xy:function(){this.nT=new r.init([1732584193,4023233417,2562383102,271733878,3285377520])},Wy:function(e,t){for(var r=this.nT.My,i=r[0],s=r[1],o=r[2],a=r[3],h=r[4],c=0;80>c;c++){if(16>c)n[c]=0|e[t+c];else{var u=n[c-3]^n[c-8]^n[c-14]^n[c-16];n[c]=u<<1|u>>>31}u=(i<<5|i>>>27)+h+n[c],u=20>c?u+(1518500249+(s&o|~s&a)):40>c?u+(1859775393+(s^o^a)):60>c?u+((s&o|s&a|o&a)-1894007588):u+((s^o^a)-899497514),h=a,a=o,o=s<<30|s>>>2,s=i,i=u}r[0]=r[0]+i|0,r[1]=r[1]+s|0,r[2]=r[2]+o|0,r[3]=r[3]+a|0,r[4]=r[4]+h|0},$y:function(){var e=this.Gy,t=e.My,r=8*this.Vy,i=8*e.Fy;return t[i>>>5]|=128<<24-i%32,t[14+(i+64>>>9<<4)]=Math.floor(r/4294967296),t[15+(i+64>>>9<<4)]=r,e.Fy=4*t.length,this.Qy(),this.nT},clone:function(){var e=i.clone.call(this);return e.nT=this.nT.clone(),e}});e.oT=i.eT(t),e.aT=i.tT(t)}();/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/ */
var Re;"Microsoft Internet Explorer"==Te.appName?(r.prototype.VE=s,Re=30):"Netscape"!=Te.appName?(r.prototype.VE=n,Re=26):(r.prototype.VE=o,Re=28),r.prototype.UE=Re,r.prototype.xE=(1<<Re)-1,r.prototype.LE=1<<Re;r.prototype.WE=Math.pow(2,52),r.prototype.KE=52-Re,r.prototype.YE=2*Re-52;var we,be,Ce="0123456789abcdefghijklmnopqrstuvwxyz",_e=new Array;for(we="0".charCodeAt(0),be=0;be<=9;++be)_e[we++]=be;for(we="a".charCodeAt(0),be=10;be<36;++be)_e[we++]=be;for(we="A".charCodeAt(0),be=10;be<36;++be)_e[we++]=be;A.prototype.uv=O,A.prototype.dv=N,A.prototype.reduce=D,A.prototype.pv=k,A.prototype.lv=L,F.prototype.uv=U,F.prototype.dv=B,F.prototype.reduce=H,F.prototype.pv=q,F.prototype.lv=x,r.prototype.jE=c,r.prototype.ME=u,r.prototype.kE=p,r.prototype.BE=d,r.prototype.zE=m,r.prototype.XE=I,r.prototype.QE=S,r.prototype.ZE=R,r.prototype.HE=w,r.prototype.tv=b,r.prototype.rv=C,r.prototype.$E=_,r.prototype.sv=M,r.prototype.fv=G,r.prototype.exp=V,r.prototype.toString=f,r.prototype.qE=g,r.prototype.abs=E,r.prototype.JE=v,r.prototype.Sv=T,r.prototype.ev=P,r.prototype.Iv=j,r.ZERO=l(0),r.ONE=l(1),/*! asn1-1.0.9.js (c) 2013-2015 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
"undefined"!=typeof KJUR&&KJUR||(KJUR={}),void 0!==KJUR.hT&&KJUR.hT||(KJUR.hT={}),KJUR.hT.cT=new function(){this.uT=function(e){var t=e.toString(16);return t.length%2==1&&(t="0"+t),t},this.lT=function(e){var t=e.toString(16);if("-"!=t.substr(0,1))t.length%2==1?t="0"+t:t.match(/^[0-7]/)||(t="00"+t);else{var i=t.substr(1),n=i.length;n%2==1?n+=1:t.match(/^[0-7]/)||(n+=2);for(var s="",o=0;o<n;o++)s+="f";t=new r(s,16).pT(e).add(r.ONE).toString(16).replace(/^-/,"")}return t},this.dT=function(e,t){var r=(KJUR.hT,Se.Uy.By.parse(e)),i=Se.Uy.fT.stringify(r),n=i.replace(/(.{64})/g,"$1\r\n");return n=n.replace(/\r\n$/,""),"-----BEGIN "+t+"-----\r\n"+n+"\r\n-----END "+t+"-----\r\n"},this.gT=function(e){var t=KJUR.hT,r=Object.keys(e);if(1!=r.length)throw"key of param shall be only one.";var i=r[0];if(-1==":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":"+i+":"))throw"undefined key: "+i;if("bool"==i)return new t.ET(e[i]);if("int"==i)return new t.vT(e[i]);if("bitstr"==i)return new t.yT(e[i]);if("octstr"==i)return new t.TT(e[i]);if("null"==i)return new t.mT(e[i]);if("oid"==i)return new t.IT(e[i]);if("enum"==i)return new t.ST(e[i]);if("utf8str"==i)return new t.RT(e[i]);if("numstr"==i)return new t.wT(e[i]);if("prnstr"==i)return new t.bT(e[i]);if("telstr"==i)return new t.CT(e[i]);if("ia5str"==i)return new t._T(e[i]);if("utctime"==i)return new t.PT(e[i]);if("gentime"==i)return new t.AT(e[i]);if("seq"==i){for(var n=e[i],s=[],o=0;o<n.length;o++){var a=t.cT.gT(n[o]);s.push(a)}return new t.OT({NT:s})}if("set"==i){for(var n=e[i],s=[],o=0;o<n.length;o++){var a=t.cT.gT(n[o]);s.push(a)}return new t.DT({NT:s})}if("tag"==i){var h=e[i];if("[object Array]"===Object.prototype.toString.call(h)&&3==h.length){var c=t.cT.gT(h[2]);return new t.kT({tag:h[0],LT:h[1],MT:c})}var u={};if(void 0!==h.LT&&(u.LT=h.LT),void 0!==h.tag&&(u.tag=h.tag),void 0===h.MT)throw"obj shall be specified for 'tag'.";return u.MT=t.cT.gT(h.MT),new t.kT(u)}},this.FT=function(e){return this.gT(e).UT()}},KJUR.hT.cT.BT=function(e){for(var t="",i=parseInt(e.substr(0,2),16),n=Math.floor(i/40),s=i%40,t=n+"."+s,o="",a=2;a<e.length;a+=2){var h=parseInt(e.substr(a,2),16),c=("00000000"+h.toString(2)).slice(-8);if(o+=c.substr(1,7),"0"==c.substr(0,1)){t=t+"."+new r(o,2).toString(10),o=""}}return t},KJUR.hT.cT.HT=function(e){var t=function(e){var t=e.toString(16);return 1==t.length&&(t="0"+t),t};if(!e.match(/^[0-9.]+$/))throw"malformed oid string: "+e;var i="",n=e.split("."),s=40*parseInt(n[0])+parseInt(n[1]);i+=t(s),n.splice(0,2);for(var o=0;o<n.length;o++)i+=function(e){var i="",n=new r(e,10),s=n.toString(2),o=7-s.length%7;7==o&&(o=0);for(var a="",h=0;h<o;h++)a+="0";s=a+s;for(var h=0;h<s.length-1;h+=7){var c=s.substr(h,7);h!=s.length-7&&(c="1"+c),i+=t(parseInt(c,2))}return i}(n[o]);return i},KJUR.hT.xT=function(){this.qT=function(){if(void 0===this.GT||null==this.GT)throw"this.hV is null or undefined.";if(this.GT.length%2==1)throw"value hex must be even length: n="+"".length+",v="+this.GT;var e=this.GT.length/2,t=e.toString(16);if(t.length%2==1&&(t="0"+t),e<128)return t;var r=t.length/2;if(r>15)throw"ASN.1 length too long to represent by 8x: n = "+e.toString(16);return(128+r).toString(16)+t},this.UT=function(){return(null==this.VT||this.jT)&&(this.GT=this.QT(),this.KT=this.qT(),this.VT=this.YT+this.KT+this.GT,this.jT=!1),this.VT},this.WT=function(){return this.UT(),this.GT},this.QT=function(){return""}},KJUR.hT.zT=function(e){KJUR.hT.zT.wy.constructor.call(this);this.JT=function(){return this.T},this.XT=function(e){this.VT=null,this.jT=!0,this.T=e,this.GT=stohex(this.T)},this.ZT=function(e){this.VT=null,this.jT=!0,this.T=null,this.GT=e},this.QT=function(){return this.GT},void 0!==e&&("string"==typeof e?this.XT(e):void 0!==e.str?this.XT(e.str):void 0!==e.$T&&this.ZT(e.$T))},Ie.lang.extend(KJUR.hT.zT,KJUR.hT.xT),KJUR.hT.em=function(e){KJUR.hT.em.wy.constructor.call(this);this.tm=function(e){return utc=e.getTime()+6e4*e.getTimezoneOffset(),new Date(utc)},this.rm=function(e,t,r){var i=this.im,n=this.tm(e),s=String(n.getFullYear());"utc"==t&&(s=s.substr(2,2));var o=i(String(n.getMonth()+1),2),a=i(String(n.getDate()),2),h=i(String(n.getHours()),2),c=i(String(n.getMinutes()),2),u=i(String(n.getSeconds()),2),l=s+o+a+h+c+u;if(!0===r){var p=n.getMilliseconds();if(0!=p){var d=i(String(p),3);d=d.replace(/[0]+$/,""),l=l+"."+d}}return l+"Z"},this.im=function(e,t){return e.length>=t?e:new Array(t-e.length+1).join("0")+e},this.JT=function(){return this.T},this.XT=function(e){this.VT=null,this.jT=!0,this.T=e,this.GT=stohex(e)},this.nm=function(e,t,r,i,n,s){var o=new Date(Date.UTC(e,t-1,r,i,n,s,0));this.sm(o)},this.QT=function(){return this.GT}},Ie.lang.extend(KJUR.hT.em,KJUR.hT.xT),KJUR.hT.om=function(e){KJUR.hT.zT.wy.constructor.call(this);this.am=function(e){this.VT=null,this.jT=!0,this.hm=e},this.cm=function(e){this.VT=null,this.jT=!0,this.hm.push(e)},this.hm=new Array,void 0!==e&&void 0!==e.NT&&(this.hm=e.NT)},Ie.lang.extend(KJUR.hT.om,KJUR.hT.xT),KJUR.hT.ET=function(){KJUR.hT.ET.wy.constructor.call(this),this.YT="01",this.VT="0101ff"},Ie.lang.extend(KJUR.hT.ET,KJUR.hT.xT),KJUR.hT.vT=function(e){KJUR.hT.vT.wy.constructor.call(this),this.YT="02",this.um=function(e){this.VT=null,this.jT=!0,this.GT=KJUR.hT.cT.lT(e)},this.lm=function(e){var t=new r(String(e),10);this.um(t)},this.pm=function(e){this.GT=e},this.QT=function(){return this.GT},void 0!==e&&(void 0!==e.dm?this.um(e.dm):void 0!==e.fm?this.lm(e.fm):"number"==typeof e?this.lm(e):void 0!==e.$T&&this.pm(e.$T))},Ie.lang.extend(KJUR.hT.vT,KJUR.hT.xT),KJUR.hT.yT=function(e){KJUR.hT.yT.wy.constructor.call(this),this.YT="03",this.gm=function(e){this.VT=null,this.jT=!0,this.GT=e},this.Em=function(e,t){if(e<0||7<e)throw"unused bits shall be from 0 to 7: u = "+e;var r="0"+e;this.VT=null,this.jT=!0,this.GT=r+t},this.vm=function(e){e=e.replace(/0+$/,"");var t=8-e.length%8;8==t&&(t=0);for(var r=0;r<=t;r++)e+="0";for(var i="",r=0;r<e.length-1;r+=8){var n=e.substr(r,8),s=parseInt(n,2).toString(16);1==s.length&&(s="0"+s),i+=s}this.VT=null,this.jT=!0,this.GT="0"+t+i},this.ym=function(e){for(var t="",r=0;r<e.length;r++)1==e[r]?t+="1":t+="0";this.vm(t)},this.Tm=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=!1;return t},this.QT=function(){return this.GT},void 0!==e&&("string"==typeof e&&e.toLowerCase().match(/^[0-9a-f]+$/)?this.gm(e):void 0!==e.$T?this.gm(e.$T):void 0!==e.mm?this.vm(e.mm):void 0!==e.NT&&this.ym(e.NT))},Ie.lang.extend(KJUR.hT.yT,KJUR.hT.xT),KJUR.hT.TT=function(e){KJUR.hT.TT.wy.constructor.call(this,e),this.YT="04"},Ie.lang.extend(KJUR.hT.TT,KJUR.hT.zT),KJUR.hT.mT=function(){KJUR.hT.mT.wy.constructor.call(this),this.YT="05",this.VT="0500"},Ie.lang.extend(KJUR.hT.mT,KJUR.hT.xT),KJUR.hT.IT=function(e){var t=function(e){var t=e.toString(16);return 1==t.length&&(t="0"+t),t},i=function(e){var i="",n=new r(e,10),s=n.toString(2),o=7-s.length%7;7==o&&(o=0);for(var a="",h=0;h<o;h++)a+="0";s=a+s;for(var h=0;h<s.length-1;h+=7){var c=s.substr(h,7);h!=s.length-7&&(c="1"+c),i+=t(parseInt(c,2))}return i};KJUR.hT.IT.wy.constructor.call(this),this.YT="06",this.pm=function(e){this.VT=null,this.jT=!0,this.T=null,this.GT=e},this.Im=function(e){if(!e.match(/^[0-9.]+$/))throw"malformed oid string: "+e;var r="",n=e.split("."),s=40*parseInt(n[0])+parseInt(n[1]);r+=t(s),n.splice(0,2);for(var o=0;o<n.length;o++)r+=i(n[o]);this.VT=null,this.jT=!0,this.T=null,this.GT=r},this.Sm=function(e){if(void 0===KJUR.hT.bm.wm.Rm[e])throw"DERObjectIdentifier oidName undefined: "+e;var t=KJUR.hT.bm.wm.Rm[e];this.Im(t)},this.QT=function(){return this.GT},void 0!==e&&("string"==typeof e&&e.match(/^[0-2].[0-9.]+$/)?this.Im(e):void 0!==KJUR.hT.bm.wm.Rm[e]?this.Im(KJUR.hT.bm.wm.Rm[e]):void 0!==e.Cm?this.Im(e.Cm):void 0!==e.$T?this.pm(e.$T):void 0!==e.name&&this.Sm(e.name))},Ie.lang.extend(KJUR.hT.IT,KJUR.hT.xT),KJUR.hT.ST=function(e){KJUR.hT.ST.wy.constructor.call(this),this.YT="0a",this.um=function(e){this.VT=null,this.jT=!0,this.GT=KJUR.hT.cT.lT(e)},this.lm=function(e){var t=new r(String(e),10);this.um(t)},this.pm=function(e){this.GT=e},this.QT=function(){return this.GT},void 0!==e&&(void 0!==e.fm?this.lm(e.fm):"number"==typeof e?this.lm(e):void 0!==e.$T&&this.pm(e.$T))},Ie.lang.extend(KJUR.hT.ST,KJUR.hT.xT),KJUR.hT.RT=function(e){KJUR.hT.RT.wy.constructor.call(this,e),this.YT="0c"},Ie.lang.extend(KJUR.hT.RT,KJUR.hT.zT),KJUR.hT.wT=function(e){KJUR.hT.wT.wy.constructor.call(this,e),this.YT="12"},Ie.lang.extend(KJUR.hT.wT,KJUR.hT.zT),KJUR.hT.bT=function(e){KJUR.hT.bT.wy.constructor.call(this,e),this.YT="13"},Ie.lang.extend(KJUR.hT.bT,KJUR.hT.zT),KJUR.hT.CT=function(e){KJUR.hT.CT.wy.constructor.call(this,e),this.YT="14"},Ie.lang.extend(KJUR.hT.CT,KJUR.hT.zT),KJUR.hT._T=function(e){KJUR.hT._T.wy.constructor.call(this,e),this.YT="16"},Ie.lang.extend(KJUR.hT._T,KJUR.hT.zT),KJUR.hT.PT=function(e){KJUR.hT.PT.wy.constructor.call(this,e),this.YT="17",this.sm=function(e){this.VT=null,this.jT=!0,this._m=e,this.T=this.rm(this._m,"utc"),this.GT=stohex(this.T)},this.QT=function(){return void 0===this._m&&void 0===this.T&&(this._m=new Date,this.T=this.rm(this._m,"utc"),this.GT=stohex(this.T)),this.GT},void 0!==e&&(void 0!==e.str?this.XT(e.str):"string"==typeof e&&e.match(/^[0-9]{12}Z$/)?this.XT(e):void 0!==e.$T?this.ZT(e.$T):void 0!==e._m&&this.sm(e._m))},Ie.lang.extend(KJUR.hT.PT,KJUR.hT.em),KJUR.hT.AT=function(e){KJUR.hT.AT.wy.constructor.call(this,e),this.YT="18",this.Pm=!1,this.sm=function(e){this.VT=null,this.jT=!0,this._m=e,this.T=this.rm(this._m,"gen",this.Pm),this.GT=stohex(this.T)},this.QT=function(){return void 0===this._m&&void 0===this.T&&(this._m=new Date,this.T=this.rm(this._m,"gen",this.Pm),this.GT=stohex(this.T)),this.GT},void 0!==e&&(void 0!==e.str?this.XT(e.str):"string"==typeof e&&e.match(/^[0-9]{14}Z$/)?this.XT(e):void 0!==e.$T?this.ZT(e.$T):void 0!==e._m&&this.sm(e._m),!0===e.Am&&(this.Pm=!0))},Ie.lang.extend(KJUR.hT.AT,KJUR.hT.em),KJUR.hT.OT=function(e){KJUR.hT.OT.wy.constructor.call(this,e),this.YT="30",this.QT=function(){for(var e="",t=0;t<this.hm.length;t++){e+=this.hm[t].UT()}return this.GT=e,this.GT}},Ie.lang.extend(KJUR.hT.OT,KJUR.hT.om),KJUR.hT.DT=function(e){KJUR.hT.DT.wy.constructor.call(this,e),this.YT="31",this.Om=!0,this.QT=function(){for(var e=new Array,t=0;t<this.hm.length;t++){var r=this.hm[t];e.push(r.UT())}return 1==this.Om&&e.sort(),this.GT=e.join(""),this.GT},void 0!==e&&void 0!==e.Nm&&0==e.Nm&&(this.Om=!1)},Ie.lang.extend(KJUR.hT.DT,KJUR.hT.om),KJUR.hT.kT=function(e){KJUR.hT.kT.wy.constructor.call(this),this.YT="a0",this.GT="",this.Dm=!0,this.km=null,this.Lm=function(e,t,r){this.YT=t,this.Dm=e,this.km=r,this.Dm?(this.GT=this.km.UT(),this.VT=null,this.jT=!0):(this.GT=null,this.VT=r.UT(),this.VT=this.VT.replace(/^../,t),this.jT=!1)},this.QT=function(){return this.GT},void 0!==e&&(void 0!==e.tag&&(this.YT=e.tag),void 0!==e.LT&&(this.Dm=e.LT),void 0!==e.MT&&(this.km=e.MT,this.Lm(this.Dm,this.YT,this.km)))},Ie.lang.extend(KJUR.hT.kT,KJUR.hT.xT);/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/ */
var Pe="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Ae="=";/*! crypto-1.1.8.js (c) 2013-2016 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
"undefined"!=typeof KJUR&&KJUR||(KJUR={}),void 0!==KJUR.crypto&&KJUR.crypto||(KJUR.crypto={}),KJUR.crypto.bv=new function(){this.Dv={sha1:"3021300906052b0e03021a05000414",Mm:"302d300d06096086480165030402040500041c",sha256:"3031300d060960864801650304020105000420",Fm:"3041300d060960864801650304020205000430",Um:"3051300d060960864801650304020305000440",Bm:"3020300c06082a864886f70d020205000410",Hm:"3020300c06082a864886f70d020505000410",xm:"3021300906052b2403020105000414"},this.qm={Hm:"cryptojs",sha1:"cryptojs",Mm:"cryptojs",sha256:"cryptojs",Fm:"cryptojs",Um:"cryptojs",xm:"cryptojs",Gm:"cryptojs",Vm:"cryptojs",jm:"cryptojs",Qm:"cryptojs",Km:"cryptojs",Ym:"cryptojs",Wm:"cryptojs",zm:"cryptojs/jsrsa",Jm:"cryptojs/jsrsa",Xm:"cryptojs/jsrsa",Zm:"cryptojs/jsrsa",$m:"cryptojs/jsrsa",eI:"cryptojs/jsrsa",tI:"cryptojs/jsrsa",rI:"cryptojs/jsrsa",iI:"cryptojs/jsrsa",nI:"cryptojs/jsrsa",sI:"cryptojs/jsrsa",oI:"cryptojs/jsrsa",aI:"cryptojs/jsrsa",hI:"cryptojs/jsrsa",cI:"cryptojs/jsrsa",uI:"cryptojs/jsrsa",lI:"cryptojs/jsrsa",pI:"cryptojs/jsrsa",dI:"cryptojs/jsrsa",fI:"cryptojs/jsrsa",gI:"cryptojs/jsrsa",EI:"cryptojs/jsrsa",vI:"cryptojs/jsrsa",yI:"cryptojs/jsrsa"},this.TI={Hm:Se.iT.Ug,sha1:Se.iT.oT,Mm:Se.iT.mI,sha256:Se.iT.II,Fm:Se.iT.SI,Um:Se.iT.RI,xm:Se.iT.wI},this.bI=function(e,t){if(void 0===this.Dv[t])throw"alg not supported in Util.DIGESTINFOHEAD: "+t;return this.Dv[t]+e},this._v=function(e,t,r){var i=this.bI(e,t),n=r/4;if(i.length+22>n)throw"key is too short for SigAlg: keylen="+r+","+t;for(var s="0001",o="00"+i,a="",h=n-s.length-o.length,c=0;c<h;c+=2)a+="ff";return s+a+o},this.wv=function(e,t){return new KJUR.crypto._I({AI:t}).CI(e)},this.Av=function(e,t){return new KJUR.crypto._I({AI:t}).OI(e)},this.sha1=function(e){return new KJUR.crypto._I({AI:"sha1",NI:"cryptojs"}).CI(e)},this.sha256=function(e){return new KJUR.crypto._I({AI:"sha256",NI:"cryptojs"}).CI(e)},this.DI=function(e){return new KJUR.crypto._I({AI:"sha256",NI:"cryptojs"}).OI(e)},this.Um=function(e){return new KJUR.crypto._I({AI:"sha512",NI:"cryptojs"}).CI(e)},this.kI=function(e){return new KJUR.crypto._I({AI:"sha512",NI:"cryptojs"}).OI(e)},this.Hm=function(e){return new KJUR.crypto._I({AI:"md5",NI:"cryptojs"}).CI(e)},this.xm=function(e){return new KJUR.crypto._I({AI:"ripemd160",NI:"cryptojs"}).CI(e)},this.LI=function(e){}},KJUR.crypto._I=function(e){this.MI=function(e,t){if(null!=e&&void 0===t&&(t=KJUR.crypto.bv.qm[e]),-1!=":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(e)&&"cryptojs"==t){try{this.FI=KJUR.crypto.bv.TI[e].create()}catch(t){throw"setAlgAndProvider hash alg set fail alg="+e+"/"+t}this.UI=function(e){this.FI.update(e)},this.BI=function(e){var t=Se.Uy.By.parse(e);this.FI.update(t)},this.digest=function(){return this.FI.Zy().toString(Se.Uy.By)},this.CI=function(e){return this.UI(e),this.digest()},this.OI=function(e){return this.BI(e),this.digest()}}if(-1!=":sha256:".indexOf(e)&&"sjcl"==t){try{this.FI=new sjcl.hash.sha256}catch(t){throw"setAlgAndProvider hash alg set fail alg="+e+"/"+t}this.UI=function(e){this.FI.update(e)},this.BI=function(e){var t=sjcl.xI.$T.HI(e);this.FI.update(t)},this.digest=function(){var e=this.FI.Zy();return sjcl.xI.$T.qI(e)},this.CI=function(e){return this.UI(e),this.digest()},this.OI=function(e){return this.BI(e),this.digest()}}},this.UI=function(e){throw"updateString(str) not supported for this alg/prov: "+this.GI+"/"+this.VI},this.BI=function(e){throw"updateHex(hex) not supported for this alg/prov: "+this.GI+"/"+this.VI},this.digest=function(){throw"digest() not supported for this alg/prov: "+this.GI+"/"+this.VI},this.CI=function(e){throw"digestString(str) not supported for this alg/prov: "+this.GI+"/"+this.VI},this.OI=function(e){throw"digestHex(hex) not supported for this alg/prov: "+this.GI+"/"+this.VI},void 0!==e&&void 0!==e.AI&&(this.GI=e.AI,void 0===e.NI&&(this.VI=KJUR.crypto.bv.qm[this.GI]),this.MI(this.GI,this.VI))},KJUR.crypto.jI=function(e){this.MI=function(e,t){if(e=e.toLowerCase(),null==e&&(e="hmacsha1"),e=e.toLowerCase(),"hmac"!=e.substr(0,4))throw"setAlgAndProvider unsupported HMAC alg: "+e;void 0===t&&(t=KJUR.crypto.bv.qm[e]),this.QI=e+"/"+t;var r=e.substr(4);if(-1!=":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(r)&&"cryptojs"==t){try{var i=KJUR.crypto.bv.TI[r];this.mac=Se.iT.rT.create(i,this.KI)}catch(e){throw"setAlgAndProvider hash alg set fail hashAlg="+r+"/"+e}this.UI=function(e){this.mac.update(e)},this.BI=function(e){var t=Se.Uy.By.parse(e);this.mac.update(t)},this.YI=function(){return this.mac.Zy().toString(Se.Uy.By)},this.WI=function(e){return this.UI(e),this.YI()},this.zI=function(e){return this.BI(e),this.YI()}}},this.UI=function(e){throw"updateString(str) not supported for this alg/prov: "+this.QI},this.BI=function(e){throw"updateHex(hex) not supported for this alg/prov: "+this.QI},this.YI=function(){throw"digest() not supported for this alg/prov: "+this.QI},this.WI=function(e){throw"digestString(str) not supported for this alg/prov: "+this.QI},this.zI=function(e){throw"digestHex(hex) not supported for this alg/prov: "+this.QI},this.JI=function(e){if("string"==typeof e){var t=e;return e.length%2!=1&&e.match(/^[0-9A-Fa-f]+$/)||(t=rstrtohex(e)),void(this.KI=Se.Uy.By.parse(t))}if("object"!=typeof e)throw"KJUR.crypto.Mac unsupported password type: "+e;var t=null;if(void 0!==e.$T){if(e.$T.length%2!=0||!e.$T.match(/^[0-9A-Fa-f]+$/))throw"Mac: wrong hex password: "+e.$T;t=e.$T}if(void 0!==e.XI&&(t=utf8tohex(e.XI)),void 0!==e.ZI&&(t=rstrtohex(e.ZI)),void 0!==e.$I&&(t=Q(e.$I)),void 0!==e.eS&&(t=b64utohex(e.eS)),null==t)throw"KJUR.crypto.Mac unsupported password type: "+e;this.KI=Se.Uy.By.parse(t)},void 0!==e&&(void 0!==e.KI&&this.JI(e.KI),void 0!==e.AI&&(this.GI=e.AI,void 0===e.NI&&(this.VI=KJUR.crypto.bv.qm[this.GI]),this.MI(this.GI,this.VI)))},KJUR.crypto.Signature=function(e){var t=null;if(this.tS=function(){this.GI.match(/^(.+)with(.+)$/)&&(this.rS=RegExp.$1.toLowerCase(),this.iS=RegExp.$2.toLowerCase())},this.nS=function(e,t){for(var r="",i=t/4-e.length,n=0;n<i;n++)r+="0";return r+e},this.MI=function(e,t){if(this.tS(),"cryptojs/jsrsa"!=t)throw"provider not supported: "+t;if(-1!=":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(this.rS)){try{this.FI=new KJUR.crypto._I({AI:this.rS})}catch(e){throw"setAlgAndProvider hash alg set fail alg="+this.rS+"/"+e}this.init=function(e,t){var r=null;try{r=void 0===t?KEYUTIL.getKey(e):KEYUTIL.getKey(e,t)}catch(e){throw"init failed:"+e}if(!0===r.sS)this.oS=r,this.state="SIGN";else{if(!0!==r.mv)throw"init failed.:"+r;this.aS=r,this.state="VERIFY"}},this.hS=function(e){"string"==typeof e.cS&&"string"==typeof e.uS?(this.cS=e.cS,this.uS=e.uS):this.oS=e,this.state="SIGN"},this.lS=function(e){"string"==typeof e.pS&&"string"==typeof e.uS?(this.pS=e.pS,this.uS=e.uS):e instanceof KJUR.crypto.dS?this.aS=e:e instanceof X&&(this.aS=e),this.state="VERIFY"},this.fS=function(e){var t=new X509;t.gS(e),this.aS=t.ES,this.state="VERIFY"},this.UI=function(e){this.FI.UI(e)},this.BI=function(e){this.FI.BI(e)},this.sign=function(){if(this.vS=this.FI.digest(),void 0!==this.cS&&void 0!==this.uS){var e=new KJUR.crypto.dS({curve:this.uS});this.yS=e.TS(this.vS,this.cS)}else if(this.oS instanceof X&&"rsaandmgf1"==this.iS)this.yS=this.oS.Ov(this.vS,this.rS,this.mS);else if(this.oS instanceof X&&"rsa"==this.iS)this.yS=this.oS.Cv(this.vS,this.rS);else if(this.oS instanceof KJUR.crypto.dS)this.yS=this.oS.Cv(this.vS);else{if(!(this.oS instanceof KJUR.crypto.IS))throw"Signature: unsupported public key alg: "+this.iS;this.yS=this.oS.Cv(this.vS)}return this.yS},this.SS=function(e){return this.UI(e),this.sign()},this.TS=function(e){return this.BI(e),this.sign()},this.verify=function(e){if(this.vS=this.FI.digest(),void 0!==this.pS&&void 0!==this.uS){return new KJUR.crypto.dS({curve:this.uS}).RS(this.vS,e,this.pS)}if(this.aS instanceof X&&"rsaandmgf1"==this.iS)return this.aS.kv(this.vS,e,this.rS,this.mS);if(this.aS instanceof X&&"rsa"==this.iS)return this.aS.wS(this.vS,e);if(this.aS instanceof KJUR.crypto.dS)return this.aS.wS(this.vS,e);if(this.aS instanceof KJUR.crypto.IS)return this.aS.wS(this.vS,e);throw"Signature: unsupported public key alg: "+this.iS}}},this.init=function(e,t){throw"init(key, pass) not supported for this alg:prov="+this.bS},this.lS=function(e){throw"initVerifyByPublicKey(rsaPubKeyy) not supported for this alg:prov="+this.bS},this.fS=function(e){throw"initVerifyByCertificatePEM(certPEM) not supported for this alg:prov="+this.bS},this.hS=function(e){throw"initSign(prvKey) not supported for this alg:prov="+this.bS},this.UI=function(e){throw"updateString(str) not supported for this alg:prov="+this.bS},this.BI=function(e){throw"updateHex(hex) not supported for this alg:prov="+this.bS},this.sign=function(){throw"sign() not supported for this alg:prov="+this.bS},this.SS=function(e){throw"digestString(str) not supported for this alg:prov="+this.bS},this.TS=function(e){throw"digestHex(hex) not supported for this alg:prov="+this.bS},this.verify=function(e){throw"verify(hSigVal) not supported for this alg:prov="+this.bS},this.CS=e,void 0!==e&&(void 0!==e.AI&&(this.GI=e.AI,void 0===e.NI?this.VI=KJUR.crypto.bv.qm[this.GI]:this.VI=e.NI,this.bS=this.GI+":"+this.VI,this.MI(this.GI,this.VI),this.tS()),void 0!==e._S&&(this.mS=e._S),void 0!==e.PS)){if(void 0!==e.OS)throw"both prvkeypem and prvkeypas parameters not supported";try{var t=new X;t.NS(e.PS),this.hS(t)}catch(e){throw"fatal error to load pem private key: "+e}}},KJUR.crypto.wm=new function(){this.DS={kS:"rsaEncryption",LS:"ecPublicKey",MS:"dsa",FS:"secp256r1",US:"secp192k1",BS:"secp224r1",HS:"secp256k1",xS:"secp521r1",qS:"secp384r1",GS:"SHA1withDSA","608648016503040301":"SHA224withDSA","608648016503040302":"SHA256withDSA"}};var Oe=20;X.prototype.Rv=$,X.prototype.Nv=Z,X.prototype.encrypt=ee,X.prototype.VS=te,X.prototype.type="RSA";/*! rsasign-1.2.7.js (c) 2012 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
var Ne=new RegExp("");Ne.compile("[^0-9a-f]","gi"),X.prototype.Cv=ne,X.prototype.SS=ie,X.prototype.jS=se,X.prototype.QS=oe,X.prototype.sign=ie,X.prototype.KS=se,X.prototype.YS=oe,X.prototype.Ov=ce,X.prototype.WS=he,X.prototype.zS=he,X.JS=-1,X.XS=-2,X.prototype.wS=Ee,X.prototype.ZS=ge,X.prototype.$S=fe,X.prototype.verify=ge,X.prototype.eR=fe,X.prototype.kv=ye,X.prototype.tR=ve,X.prototype.rR=ve,X.iR=-2,t.nR=r,t.sR=X,t.Signature=KJUR.crypto.Signature,t._I=KJUR.crypto._I,t.cg=Se,t.oR=Q,t.aR=K},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.pp="https:"===location.protocol,i.yp=!0,i.hR=1e4,i.nh=6e4,i.cR="X-Hive-TestId",t.L=i},function(e,t,r){var i,n,s;/*!
 * URI.js - Mutating URLs
 *
 * Version: 1.18.10
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
!function(o,a){"use strict";"object"==typeof e&&e.i?e.i=a(r(16),r(16),r(16)):(n=[r(16),r(16),r(16)],i=a,void 0!==(s="function"==typeof i?i.apply(t,n):i)&&(e.i=s))}(0,function(e,t,r,i){"use strict";function n(e,t){var r=arguments.length>=1,i=arguments.length>=2;if(!(this instanceof n))return r?i?new n(e,t):new n(e):new n;if(void 0===e){if(r)throw new TypeError("undefined is not a valid argument for URI");e="undefined"!=typeof location?location.href+"":""}if(null===e&&r)throw new TypeError("null is not a valid argument for URI");return this.href(e),void 0!==t?this.Ph(t):this}function s(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function o(e){return void 0===e?"Undefined":String(Object.prototype.toString.call(e)).slice(8,-1)}function a(e){return"Array"===o(e)}function h(e,t){var r,i,n={};if("RegExp"===o(t))n=null;else if(a(t))for(r=0,i=t.length;r<i;r++)n[t[r]]=!0;else n[t]=!0;for(r=0,i=e.length;r<i;r++){(n&&void 0!==n[e[r]]||!n&&t.test(e[r]))&&(e.splice(r,1),i--,r--)}return e}function c(e,t){var r,i;if(a(t)){for(r=0,i=t.length;r<i;r++)if(!c(e,t[r]))return!1;return!0}var n=o(t);for(r=0,i=e.length;r<i;r++)if("RegExp"===n){if("string"==typeof e[r]&&e[r].match(t))return!0}else if(e[r]===t)return!0;return!1}function u(e,t){if(!a(e)||!a(t))return!1;if(e.length!==t.length)return!1;e.sort(),t.sort();for(var r=0,i=e.length;r<i;r++)if(e[r]!==t[r])return!1;return!0}function l(e){var t=/^\/+|\/+$/g;return e.replace(t,"")}function p(e){return escape(e)}function d(e){return encodeURIComponent(e).replace(/[!'()*]/g,p).replace(/\*/g,"%2A")}function f(e){return function(t,r){return void 0===t?this.uR[e]||"":(this.uR[e]=t||null,this.Xg(!r),this)}}function g(e,t){return function(r,i){return void 0===r?this.uR[e]||"":(null!==r&&(r+="",r.charAt(0)===t&&(r=r.substring(1))),this.uR[e]=r,this.Xg(!i),this)}}var E=i&&i.lR;n.version="1.18.10";var v=n.prototype,y=Object.prototype.hasOwnProperty;n.uR=function(){return{protocol:null,username:null,password:null,hostname:null,urn:null,port:null,path:null,query:null,pR:null,dR:n.dR,fR:n.fR}},n.dR=!1,n.fR=!0,n.gR=/^[a-z][a-z0-9.+-]*$/i,n.ER=/[^a-z0-9\.-]/i,n.vR=/(xn--)/i,n.yR=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,n.TR=/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,n.mR=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/gi,n.IR={start:/\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,end:/[\s\r\n]|$/,trim:/[`!()\[\]{};:'".,<>?«»“”„‘’]+$/,SR:/(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g},n.RR={wR:"80",bR:"443",CR:"21",_R:"70",PR:"80",AR:"443"},n.OR=/[^a-zA-Z0-9\.-]/,n.NR={a:"href",DR:"cite",link:"href",kR:"href",LR:"src",form:"action",MR:"src",FR:"href",UR:"src",BR:"src",source:"src",track:"src",input:"src",HR:"src",video:"src"},n.xR=function(e){if(e&&e.nodeName){var t=e.nodeName.toLowerCase();if("input"!==t||"image"===e.type)return n.NR[t]}},n.encode=d,n.decode=decodeURIComponent,n.qR=function(){n.encode=escape,n.decode=unescape},n.GR=function(){n.encode=d,n.decode=decodeURIComponent},n.VR={pathname:{encode:{jR:/%(24|26|2B|2C|3B|3D|3A|40)/gi,map:{"%24":"$","%26":"&","%2B":"+","%2C":",","%3B":";","%3D":"=","%3A":":","%40":"@"}},decode:{jR:/[\/\?#]/g,map:{py:"%2F",QR:"%3F",KR:"%23"}}},YR:{encode:{jR:/%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi,map:{"%3A":":",WR:"/",zR:"?",JR:"#",XR:"[",ZR:"]","%40":"@",$R:"!","%24":"$","%26":"&",ew:"'",tw:"(",rw:")",iw:"*","%2B":"+","%2C":",","%3B":";","%3D":"="}}},nw:{encode:{jR:/%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi,map:{$R:"!","%24":"$",ew:"'",tw:"(",rw:")",iw:"*","%2B":"+","%2C":",","%3B":";","%3D":"=","%40":"@"}},decode:{jR:/[\/\?#:]/g,map:{py:"%2F",QR:"%3F",KR:"%23",sw:"%3A"}}}},n.ow=function(e,t){var r=n.encode(e+"");return void 0===t&&(t=n.fR),t?r.replace(/%20/g,"+"):r},n.aw=function(e,t){e+="",void 0===t&&(t=n.fR);try{return n.decode(t?e.replace(/\+/g,"%20"):e)}catch(t){return e}};var T,m={encode:"encode",decode:"decode"},I=function(e,t){return function(r){try{return n[t](r+"").replace(n.VR[e][t].jR,function(r){return n.VR[e][t].map[r]})}catch(e){return r}}};for(T in m)n[T+"PathSegment"]=I("pathname",m[T]),n[T+"UrnPathSegment"]=I("urnpath",m[T]);var S=function(e,t,r){return function(i){var s;s=r?function(e){return n[t](n[r](e))}:n[t];for(var o=(i+"").split(e),a=0,h=o.length;a<h;a++)o[a]=s(o[a]);return o.join(e)}};n.hw=S("/","decodePathSegment"),n.cw=S(":","decodeUrnPathSegment"),n.uw=S("/","encodePathSegment","decode"),n.lw=S(":","encodeUrnPathSegment","decode"),n.pw=I("reserved","encode"),n.parse=function(e,t){var r;return t||(t={}),r=e.indexOf("#"),r>-1&&(t.pR=e.substring(r+1)||null,e=e.substring(0,r)),r=e.indexOf("?"),r>-1&&(t.query=e.substring(r+1)||null,e=e.substring(0,r)),"//"===e.substring(0,2)?(t.protocol=null,e=e.substring(2),e=n.dw(e,t)):(r=e.indexOf(":"))>-1&&(t.protocol=e.substring(0,r)||null,t.protocol&&!t.protocol.match(n.gR)?t.protocol=void 0:"//"===e.substring(r+1,r+3)?(e=e.substring(r+3),e=n.dw(e,t)):(e=e.substring(r+1),t.urn=!0)),t.path=e,t},n.fw=function(e,t){e=e.replace(/\\/g,"/");var r,i,n=e.indexOf("/");if(-1===n&&(n=e.length),"["===e.charAt(0))r=e.indexOf("]"),t.hostname=e.substring(1,r)||null,t.port=e.substring(r+2,n)||null,"/"===t.port&&(t.port=null);else{var s=e.indexOf(":"),o=e.indexOf("/"),a=e.indexOf(":",s+1);-1!==a&&(-1===o||a<o)?(t.hostname=e.substring(0,n)||null,t.port=null):(i=e.substring(0,n).split(":"),t.hostname=i[0]||null,t.port=i[1]||null)}return t.hostname&&"/"!==e.substring(n).charAt(0)&&(n++,e="/"+e),e.substring(n)||"/"},n.dw=function(e,t){return e=n.gw(e,t),n.fw(e,t)},n.gw=function(e,t){var r,i=e.indexOf("/"),s=e.lastIndexOf("@",i>-1?i:e.length-1);return s>-1&&(-1===i||s<i)?(r=e.substring(0,s).split(":"),t.username=r[0]?n.decode(r[0]):null,r.shift(),t.password=r[0]?n.decode(r.join(":")):null,e=e.substring(s+1)):(t.username=null,t.password=null),e},n.Ew=function(e,t){if(!e)return{};if(!(e=e.replace(/&+/g,"&").replace(/^\?*&*|&+$/g,"")))return{};for(var r,i,s,o={},a=e.split("&"),h=a.length,c=0;c<h;c++)r=a[c].split("="),i=n.aw(r.shift(),t),s=r.length?n.aw(r.join("="),t):null,y.call(o,i)?("string"!=typeof o[i]&&null!==o[i]||(o[i]=[o[i]]),o[i].push(s)):o[i]=s;return o},n.Xg=function(e){var t="";return e.protocol&&(t+=e.protocol+":"),e.urn||!t&&!e.hostname||(t+="//"),t+=n.vw(e)||"","string"==typeof e.path&&("/"!==e.path.charAt(0)&&"string"==typeof e.hostname&&(t+="/"),t+=e.path),"string"==typeof e.query&&e.query&&(t+="?"+e.query),"string"==typeof e.pR&&e.pR&&(t+="#"+e.pR),t},n.yw=function(e){var t="";return e.hostname?(n.TR.test(e.hostname)?t+="["+e.hostname+"]":t+=e.hostname,e.port&&(t+=":"+e.port),t):""},n.vw=function(e){return n.Tw(e)+n.yw(e)},n.Tw=function(e){var t="";return e.username&&(t+=n.encode(e.username)),e.password&&(t+=":"+n.encode(e.password)),t&&(t+="@"),t},n.mw=function(e,t,r){var i,s,o,h,c="";for(s in e)if(y.call(e,s)&&s)if(a(e[s]))for(i={},o=0,h=e[s].length;o<h;o++)void 0!==e[s][o]&&void 0===i[e[s][o]+""]&&(c+="&"+n.Iw(s,e[s][o],r),!0!==t&&(i[e[s][o]+""]=!0));else void 0!==e[s]&&(c+="&"+n.Iw(s,e[s],r));return c.substring(1)},n.Iw=function(e,t,r){return n.ow(e,r)+(null!==t?"="+n.ow(t,r):"")},n.Sw=function(e,t,r){if("object"==typeof t)for(var i in t)y.call(t,i)&&n.Sw(e,i,t[i]);else{if("string"!=typeof t)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");if(void 0===e[t])return void(e[t]=r);"string"==typeof e[t]&&(e[t]=[e[t]]),a(r)||(r=[r]),e[t]=(e[t]||[]).concat(r)}},n.Rw=function(e,t,r){var i,s,c;if(a(t))for(i=0,s=t.length;i<s;i++)e[t[i]]=void 0;else if("RegExp"===o(t))for(c in e)t.test(c)&&(e[c]=void 0);else if("object"==typeof t)for(c in t)y.call(t,c)&&n.Rw(e,c,t[c]);else{if("string"!=typeof t)throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");void 0!==r?"RegExp"===o(r)?!a(e[t])&&r.test(e[t])?e[t]=void 0:e[t]=h(e[t],r):e[t]!==String(r)||a(r)&&1!==r.length?a(e[t])&&(e[t]=h(e[t],r)):e[t]=void 0:e[t]=void 0}},n.ww=function(e,t,r,i){switch(o(t)){case"String":break;case"RegExp":for(var s in e)if(y.call(e,s)&&t.test(s)&&(void 0===r||n.ww(e,s,r)))return!0;return!1;case"Object":for(var h in t)if(y.call(t,h)&&!n.ww(e,h,t[h]))return!1;return!0;default:throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter")}switch(o(r)){case"Undefined":return t in e;case"Boolean":return r===Boolean(a(e[t])?e[t].length:e[t]);case"Function":return!!r(e[t],t,e);case"Array":if(!a(e[t]))return!1;return(i?c:u)(e[t],r);case"RegExp":return a(e[t])?!!i&&c(e[t],r):Boolean(e[t]&&e[t].match(r));case"Number":r=String(r);case"String":return a(e[t])?!!i&&c(e[t],r):e[t]===r;default:throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter")}},n.bw=function(){for(var e=[],t=[],r=0,i=0;i<arguments.length;i++){var s=new n(arguments[i]);e.push(s);for(var o=s.Cw(),a=0;a<o.length;a++)"string"==typeof o[a]&&t.push(o[a]),o[a]&&r++}if(!t.length||!r)return new n("");var h=new n("").Cw(t);return""!==e[0].path()&&"/"!==e[0].path().slice(0,1)||h.path("/"+h.path()),h.normalize()},n._w=function(e,t){var r,i=Math.min(e.length,t.length);for(r=0;r<i;r++)if(e.charAt(r)!==t.charAt(r)){r--;break}return r<1?e.charAt(0)===t.charAt(0)&&"/"===e.charAt(0)?"/":"":("/"===e.charAt(r)&&"/"===t.charAt(r)||(r=e.substring(0,r).lastIndexOf("/")),e.substring(0,r+1))},n.Pw=function(e,t,r){r||(r={});var i=r.start||n.IR.start,s=r.end||n.IR.end,o=r.trim||n.IR.trim,a=r.SR||n.IR.SR,h=/[a-z0-9-]=["']?$/i;for(i.lastIndex=0;;){var c=i.exec(e);if(!c)break;var u=c.index;if(r.Aw){var l=e.slice(Math.max(u-3,0),u);if(l&&h.test(l))continue}for(var p=u+e.slice(u).search(s),d=e.slice(u,p),f=-1;;){var g=a.exec(d);if(!g)break;var E=g.index+g[0].length;f=Math.max(f,E)}if(d=f>-1?d.slice(0,f)+d.slice(f).replace(o,""):d.replace(o,""),!(d.length<=c[0].length||r.Ow&&r.Ow.test(d))){p=u+d.length;var v=t(d,u,p,e);void 0!==v?(v=String(v),e=e.slice(0,u)+v+e.slice(p),i.lastIndex=u+v.length):i.lastIndex=p}}return i.lastIndex=0,e},n.Nw=function(t){if(t.match(n.OR)){if(!e)throw new TypeError('Hostname "'+t+'" contains characters other than [A-Z0-9.-] and Punycode.js is not available');if(e.Dw(t).match(n.OR))throw new TypeError('Hostname "'+t+'" contains characters other than [A-Z0-9.-]')}},n.wo=function(e){if(e){var t={lR:this.wo()};return i.kw&&"function"==typeof i.kw.wo&&(t.kw=i.kw.wo()),i.Lw&&"function"==typeof i.Lw.wo&&(t.Lw=i.Lw.wo()),i.Mw&&"function"==typeof i.Mw.wo&&(t.Mw=i.Mw.wo()),t}return i.lR===this&&(i.lR=E),this},v.Xg=function(e){return!0===e?this.Fw=!0:(void 0===e||this.Fw)&&(this.Uw=n.Xg(this.uR),this.Fw=!1),this},v.clone=function(){return new n(this)},v.valueOf=v.toString=function(){return this.Xg(!1).Uw},v.protocol=f("protocol"),v.username=f("username"),v.password=f("password"),v.hostname=f("hostname"),v.port=f("port"),v.query=g("query","?"),v.pR=g("fragment","#"),v.search=function(e,t){var r=this.query(e,t);return"string"==typeof r&&r.length?"?"+r:r},v.hash=function(e,t){var r=this.pR(e,t);return"string"==typeof r&&r.length?"#"+r:r},v.pathname=function(e,t){if(void 0===e||!0===e){var r=this.uR.path||(this.uR.hostname?"/":"");return e?(this.uR.urn?n.cw:n.hw)(r):r}return this.uR.urn?this.uR.path=e?n.lw(e):"":this.uR.path=e?n.uw(e):"/",this.Xg(!t),this},v.path=v.pathname,v.href=function(e,t){var r;if(void 0===e)return this.toString();this.Uw="",this.uR=n.uR();var i=e instanceof n,s="object"==typeof e&&(e.hostname||e.path||e.pathname);if(e.nodeName){e=e[n.xR(e)]||"",s=!1}if(!i&&s&&void 0!==e.pathname&&(e=e.toString()),"string"==typeof e||e instanceof String)this.uR=n.parse(String(e),this.uR);else{if(!i&&!s)throw new TypeError("invalid input");var o=i?e.uR:e;for(r in o)y.call(this.uR,r)&&(this.uR[r]=o[r])}return this.Xg(!t),this},v.is=function(e){var t=!1,i=!1,s=!1,o=!1,a=!1,h=!1,c=!1,u=!this.uR.urn;switch(this.uR.hostname&&(u=!1,i=n.yR.test(this.uR.hostname),s=n.TR.test(this.uR.hostname),t=i||s,o=!t,a=o&&r&&r.has(this.uR.hostname),h=o&&n.ER.test(this.uR.hostname),c=o&&n.vR.test(this.uR.hostname)),e.toLowerCase()){case"relative":return u;case"absolute":return!u;case"domain":case"name":return o;case"sld":return a;case"ip":return t;case"ip4":case"ipv4":case"inet4":return i;case"ip6":case"ipv6":case"inet6":return s;case"idn":return h;case"url":return!this.uR.urn;case"urn":return!!this.uR.urn;case"punycode":return c}return null};var R=v.protocol,w=v.port,b=v.hostname;v.protocol=function(e,t){if(void 0!==e&&e&&(e=e.replace(/:(\/\/)?$/,""),!e.match(n.gR)))throw new TypeError('Protocol "'+e+"\" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]");return R.call(this,e,t)},v.scheme=v.protocol,v.port=function(e,t){if(this.uR.urn)return void 0===e?"":this;if(void 0!==e&&(0===e&&(e=null),e&&(e+="",":"===e.charAt(0)&&(e=e.substring(1)),e.match(/[^0-9]/))))throw new TypeError('Port "'+e+'" contains characters other than [0-9]');return w.call(this,e,t)},v.hostname=function(e,t){if(this.uR.urn)return void 0===e?"":this;if(void 0!==e){var r={};if("/"!==n.fw(e,r))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');e=r.hostname}return b.call(this,e,t)},v.origin=function(e,t){if(this.uR.urn)return void 0===e?"":this;if(void 0===e){var r=this.protocol();return this.Bw()?(r?r+"://":"")+this.Bw():""}var i=n(e);return this.protocol(i.protocol()).Bw(i.Bw()).Xg(!t),this},v.host=function(e,t){if(this.uR.urn)return void 0===e?"":this;if(void 0===e)return this.uR.hostname?n.yw(this.uR):"";if("/"!==n.fw(e,this.uR))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');return this.Xg(!t),this},v.Bw=function(e,t){if(this.uR.urn)return void 0===e?"":this;if(void 0===e)return this.uR.hostname?n.vw(this.uR):"";if("/"!==n.dw(e,this.uR))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');return this.Xg(!t),this},v.Hw=function(e,t){if(this.uR.urn)return void 0===e?"":this;if(void 0===e){var r=n.Tw(this.uR);return r?r.substring(0,r.length-1):r}return"@"!==e[e.length-1]&&(e+="@"),n.gw(e,this.uR),this.Xg(!t),this},v.xw=function(e,t){var r;return void 0===e?this.path()+this.search()+this.hash():(r=n.parse(e),this.uR.path=r.path,this.uR.query=r.query,this.uR.pR=r.pR,this.Xg(!t),this)},v.qw=function(e,t){if(this.uR.urn)return void 0===e?"":this;if(void 0===e){if(!this.uR.hostname||this.is("IP"))return"";var r=this.uR.hostname.length-this.domain().length-1;return this.uR.hostname.substring(0,r)||""}var i=this.uR.hostname.length-this.domain().length,o=this.uR.hostname.substring(0,i),a=new RegExp("^"+s(o));return e&&"."!==e.charAt(e.length-1)&&(e+="."),e&&n.Nw(e),this.uR.hostname=this.uR.hostname.replace(a,e),this.Xg(!t),this},v.domain=function(e,t){if(this.uR.urn)return void 0===e?"":this;if("boolean"==typeof e&&(t=e,e=void 0),void 0===e){if(!this.uR.hostname||this.is("IP"))return"";var r=this.uR.hostname.match(/\./g);if(r&&r.length<2)return this.uR.hostname;var i=this.uR.hostname.length-this.Gw(t).length-1;return i=this.uR.hostname.lastIndexOf(".",i-1)+1,this.uR.hostname.substring(i)||""}if(!e)throw new TypeError("cannot set domain empty");if(n.Nw(e),!this.uR.hostname||this.is("IP"))this.uR.hostname=e;else{var o=new RegExp(s(this.domain())+"$");this.uR.hostname=this.uR.hostname.replace(o,e)}return this.Xg(!t),this},v.Gw=function(e,t){if(this.uR.urn)return void 0===e?"":this;if("boolean"==typeof e&&(t=e,e=void 0),void 0===e){if(!this.uR.hostname||this.is("IP"))return"";var i=this.uR.hostname.lastIndexOf("."),n=this.uR.hostname.substring(i+1);return!0!==t&&r&&r.list[n.toLowerCase()]?r.get(this.uR.hostname)||n:n}var o;if(!e)throw new TypeError("cannot set TLD empty");if(e.match(/[^a-zA-Z0-9-]/)){if(!r||!r.is(e))throw new TypeError('TLD "'+e+'" contains characters other than [A-Z0-9]');o=new RegExp(s(this.Gw())+"$"),this.uR.hostname=this.uR.hostname.replace(o,e)}else{if(!this.uR.hostname||this.is("IP"))throw new ReferenceError("cannot set TLD on non-domain host");o=new RegExp(s(this.Gw())+"$"),this.uR.hostname=this.uR.hostname.replace(o,e)}return this.Xg(!t),this},v.Vw=function(e,t){if(this.uR.urn)return void 0===e?"":this;if(void 0===e||!0===e){if(!this.uR.path&&!this.uR.hostname)return"";if("/"===this.uR.path)return"/";var r=this.uR.path.length-this.filename().length-1,i=this.uR.path.substring(0,r)||(this.uR.hostname?"/":"");return e?n.hw(i):i}var o=this.uR.path.length-this.filename().length,a=this.uR.path.substring(0,o),h=new RegExp("^"+s(a));return this.is("relative")||(e||(e="/"),"/"!==e.charAt(0)&&(e="/"+e)),e&&"/"!==e.charAt(e.length-1)&&(e+="/"),e=n.uw(e),this.uR.path=this.uR.path.replace(h,e),this.Xg(!t),this},v.filename=function(e,t){if(this.uR.urn)return void 0===e?"":this;if("string"!=typeof e){if(!this.uR.path||"/"===this.uR.path)return"";var r=this.uR.path.lastIndexOf("/"),i=this.uR.path.substring(r+1);return e?n.jw(i):i}var o=!1;"/"===e.charAt(0)&&(e=e.substring(1)),e.match(/\.?\//)&&(o=!0);var a=new RegExp(s(this.filename())+"$");return e=n.uw(e),this.uR.path=this.uR.path.replace(a,e),o?this.Qw(t):this.Xg(!t),this},v.suffix=function(e,t){if(this.uR.urn)return void 0===e?"":this;if(void 0===e||!0===e){if(!this.uR.path||"/"===this.uR.path)return"";var r,i,o=this.filename(),a=o.lastIndexOf(".");return-1===a?"":(r=o.substring(a+1),i=/^[a-z0-9%]+$/i.test(r)?r:"",e?n.jw(i):i)}"."===e.charAt(0)&&(e=e.substring(1));var h,c=this.suffix();if(c)h=e?new RegExp(s(c)+"$"):new RegExp(s("."+c)+"$");else{if(!e)return this;this.uR.path+="."+n.uw(e)}return h&&(e=n.uw(e),this.uR.path=this.uR.path.replace(h,e)),this.Xg(!t),this},v.Cw=function(e,t,r){var i=this.uR.urn?":":"/",n=this.path(),s="/"===n.substring(0,1),o=n.split(i);if(void 0!==e&&"number"!=typeof e&&(r=t,t=e,e=void 0),void 0!==e&&"number"!=typeof e)throw new Error('Bad segment "'+e+'", must be 0-based integer');if(s&&o.shift(),e<0&&(e=Math.max(o.length+e,0)),void 0===t)return void 0===e?o:o[e];if(null===e||void 0===o[e])if(a(t)){o=[];for(var h=0,c=t.length;h<c;h++)(t[h].length||o.length&&o[o.length-1].length)&&(o.length&&!o[o.length-1].length&&o.pop(),o.push(l(t[h])))}else(t||"string"==typeof t)&&(t=l(t),""===o[o.length-1]?o[o.length-1]=t:o.push(t));else t?o[e]=l(t):o.splice(e,1);return s&&o.unshift(""),this.path(o.join(i),r)},v.Kw=function(e,t,r){var i,s,o;if("number"!=typeof e&&(r=t,t=e,e=void 0),void 0===t){if(i=this.Cw(e,t,r),a(i))for(s=0,o=i.length;s<o;s++)i[s]=n.decode(i[s]);else i=void 0!==i?n.decode(i):void 0;return i}if(a(t))for(s=0,o=t.length;s<o;s++)t[s]=n.encode(t[s]);else t="string"==typeof t||t instanceof String?n.encode(t):t;return this.Cw(e,t,r)};var C=v.query;return v.query=function(e,t){if(!0===e)return n.Ew(this.uR.query,this.uR.fR);if("function"==typeof e){var r=n.Ew(this.uR.query,this.uR.fR),i=e.call(this,r);return this.uR.query=n.mw(i||r,this.uR.dR,this.uR.fR),this.Xg(!t),this}return void 0!==e&&"string"!=typeof e?(this.uR.query=n.mw(e,this.uR.dR,this.uR.fR),this.Xg(!t),this):C.call(this,e,t)},v.Yw=function(e,t,r){var i=n.Ew(this.uR.query,this.uR.fR);if("string"==typeof e||e instanceof String)i[e]=void 0!==t?t:null;else{if("object"!=typeof e)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");for(var s in e)y.call(e,s)&&(i[s]=e[s])}return this.uR.query=n.mw(i,this.uR.dR,this.uR.fR),"string"!=typeof e&&(r=t),this.Xg(!r),this},v.Sw=function(e,t,r){var i=n.Ew(this.uR.query,this.uR.fR);return n.Sw(i,e,void 0===t?null:t),this.uR.query=n.mw(i,this.uR.dR,this.uR.fR),"string"!=typeof e&&(r=t),this.Xg(!r),this},v.Rw=function(e,t,r){var i=n.Ew(this.uR.query,this.uR.fR);return n.Rw(i,e,t),this.uR.query=n.mw(i,this.uR.dR,this.uR.fR),"string"!=typeof e&&(r=t),this.Xg(!r),this},v.ww=function(e,t,r){var i=n.Ew(this.uR.query,this.uR.fR);return n.ww(i,e,t,r)},v.Ww=v.Yw,v.zw=v.Sw,v.Jw=v.Rw,v.Xw=v.ww,v.normalize=function(){return this.uR.urn?this.eb(!1).Qw(!1).$w(!1).Zw(!1).Xg():this.eb(!1).rb(!1).tb(!1).Qw(!1).$w(!1).Zw(!1).Xg()},v.eb=function(e){return"string"==typeof this.uR.protocol&&(this.uR.protocol=this.uR.protocol.toLowerCase(),this.Xg(!e)),this},v.rb=function(r){return this.uR.hostname&&(this.is("IDN")&&e?this.uR.hostname=e.Dw(this.uR.hostname):this.is("IPv6")&&t&&(this.uR.hostname=t.ib(this.uR.hostname)),this.uR.hostname=this.uR.hostname.toLowerCase(),this.Xg(!r)),this},v.tb=function(e){return"string"==typeof this.uR.protocol&&this.uR.port===n.RR[this.uR.protocol]&&(this.uR.port=null,this.Xg(!e)),this},v.Qw=function(e){var t=this.uR.path;if(!t)return this;if(this.uR.urn)return this.uR.path=n.lw(this.uR.path),this.Xg(!e),this;if("/"===this.uR.path)return this;t=n.uw(t);var r,i,s,o="";for("/"!==t.charAt(0)&&(r=!0,t="/"+t),"/.."!==t.slice(-3)&&"/."!==t.slice(-2)||(t+="/"),t=t.replace(/(\/(\.\/)+)|(\/\.$)/g,"/").replace(/\/{2,}/g,"/"),r&&(o=t.substring(1).match(/^(\.\.\/)+/)||"")&&(o=o[0]);;){if(-1===(i=t.search(/\/\.\.(\/|$)/)))break;0!==i?(s=t.substring(0,i).lastIndexOf("/"),-1===s&&(s=i),t=t.substring(0,s)+t.substring(i+3)):t=t.substring(3)}return r&&this.is("relative")&&(t=o+t.substring(1)),this.uR.path=t,this.Xg(!e),this},v.nb=v.Qw,v.$w=function(e){return"string"==typeof this.uR.query&&(this.uR.query.length?this.query(n.Ew(this.uR.query,this.uR.fR)):this.uR.query=null,this.Xg(!e)),this},v.Zw=function(e){return this.uR.pR||(this.uR.pR=null,this.Xg(!e)),this},v.sb=v.$w,v.ob=v.Zw,v.qR=function(){var e=n.encode,t=n.decode;n.encode=escape,n.decode=decodeURIComponent;try{this.normalize()}finally{n.encode=e,n.decode=t}return this},v.GR=function(){var e=n.encode,t=n.decode;n.encode=d,n.decode=unescape;try{this.normalize()}finally{n.encode=e,n.decode=t}return this},v.ab=function(){var t=this.clone();t.username("").password("").normalize();var r="";if(t.uR.protocol&&(r+=t.uR.protocol+"://"),t.uR.hostname&&(t.is("punycode")&&e?(r+=e.hb(t.uR.hostname),t.uR.port&&(r+=":"+t.uR.port)):r+=t.host()),t.uR.hostname&&t.uR.path&&"/"!==t.uR.path.charAt(0)&&(r+="/"),r+=t.path(!0),t.uR.query){for(var i="",s=0,o=t.uR.query.split("&"),a=o.length;s<a;s++){var h=(o[s]||"").split("=");i+="&"+n.aw(h[0],this.uR.fR).replace(/&/g,"%26"),void 0!==h[1]&&(i+="="+n.aw(h[1],this.uR.fR).replace(/&/g,"%26"))}r+="?"+i.substring(1)}return r+=n.aw(t.hash(),!0)},v.Ph=function(e){var t,r,i,s=this.clone(),o=["protocol","username","password","hostname","port"];if(this.uR.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(e instanceof n||(e=new n(e)),s.uR.protocol)return s;if(s.uR.protocol=e.uR.protocol,this.uR.hostname)return s;for(r=0;i=o[r];r++)s.uR[i]=e.uR[i];return s.uR.path?(".."===s.uR.path.substring(-2)&&(s.uR.path+="/"),"/"!==s.path().charAt(0)&&(t=e.Vw(),t=t||(0===e.path().indexOf("/")?"/":""),s.uR.path=(t?t+"/":"")+s.uR.path,s.Qw())):(s.uR.path=e.uR.path,s.uR.query||(s.uR.query=e.uR.query)),s.Xg(),s},v.cb=function(e){var t,r,i,s,o,a=this.clone().normalize();if(a.uR.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(e=new n(e).normalize(),t=a.uR,r=e.uR,s=a.path(),o=e.path(),"/"!==s.charAt(0))throw new Error("URI is already relative");if("/"!==o.charAt(0))throw new Error("Cannot calculate a URI relative to another relative URI");if(t.protocol===r.protocol&&(t.protocol=null),t.username!==r.username||t.password!==r.password)return a.Xg();if(null!==t.protocol||null!==t.username||null!==t.password)return a.Xg();if(t.hostname!==r.hostname||t.port!==r.port)return a.Xg();if(t.hostname=null,t.port=null,s===o)return t.path="",a.Xg();if(!(i=n._w(s,o)))return a.Xg();var h=r.path.substring(i.length).replace(/[^\/]*$/,"").replace(/.*?\//g,"../");return t.path=h+t.path.substring(i.length)||"./",a.Xg()},v.cs=function(e){var t,r,i,s=this.clone(),o=new n(e),h={},c={},l={};if(s.normalize(),o.normalize(),s.toString()===o.toString())return!0;if(t=s.query(),r=o.query(),s.query(""),o.query(""),s.toString()!==o.toString())return!1;if(t.length!==r.length)return!1;h=n.Ew(t,this.uR.fR),c=n.Ew(r,this.uR.fR);for(i in h)if(y.call(h,i)){if(a(h[i])){if(!u(h[i],c[i]))return!1}else if(h[i]!==c[i])return!1;l[i]=!0}for(i in c)if(y.call(c,i)&&!l[i])return!1;return!0},v.dR=function(e){return this.uR.dR=!!e,this},v.fR=function(e){return this.uR.fR=!!e,this},n})},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(73),s=r(71),o=function(e){function t(r){var i=e.call(this,r)||this;return i.DONE=4,i.LOADING=3,i.HEADERS_RECEIVED=2,i.OPENED=1,i.UNSENT=0,i.internal=!1,i.id=t.Ag++,i}return i(t,e),t.prototype.send=function(){if(this.readyState!==this.OPENED)throw new Error("The object's state must be OPENED.");if(!this.sessionId){var e=Object.keys(t.ub);e.length>0&&(this.sessionId=t.ub[e[0]])}n.lb.Api().request(this,this.sessionId)},t.prototype.abort=function(){n.lb.Api().abort(this,this.sessionId)},t}(s.pb);o.ub={},o.Ag=0,t.HiveRequest=o},function(e,t,r){"use strict";var i=r(0),n=r(8),s=r(6),o=s.he.dh,a=function(){function e(){}return e.Reporting=function(){return e.app="STATS",i.Framework.resolve(n.pc.hc)},e.sp=function(){return this.app},e.getVersion=function(){return this.version},e}();a.version=o,t.Hive=a},function(module,exports,__webpack_require__){var Thrift={fb:"0.9.2",Type:{STOP:0,VOID:1,BOOL:2,BYTE:3,I08:3,DOUBLE:4,I16:6,I32:8,I64:10,STRING:11,UTF7:11,STRUCT:12,MAP:13,SET:14,LIST:15,UTF8:16,UTF16:17},gb:{CALL:1,REPLY:2,EXCEPTION:3,ONEWAY:4},Eb:function(e){var t=0;for(var r in e)e.hasOwnProperty(r)&&t++;return t},vb:function(e,t,r){function i(){}i.prototype=t.prototype,e.prototype=new i,e.prototype.name=r||""}};Thrift.yb=function(e){this.message=e},Thrift.vb(Thrift.yb,Error,"TException"),Thrift.yb.prototype.Tb=function(){return this.message},Thrift.mb={Ib:0,Sb:1,Rb:2,wb:3,bb:4,Cb:5,_b:6,Pb:7,Ab:8,Ob:9,Nb:10},Thrift.Db=function(e,t){this.message=e,this.code="number"==typeof t?t:0},Thrift.vb(Thrift.Db,Thrift.yb,"TApplicationException"),Thrift.Db.prototype.read=function(e){for(;;){var t=e.kb();if(t.ftype==Thrift.Type.STOP)break;switch(t.fid){case 1:t.ftype==Thrift.Type.STRING?(t=e.Lb(),this.message=t.value):t=e.Mb(t.ftype);break;case 2:t.ftype==Thrift.Type.I32?(t=e.Fb(),this.code=t.value):t=e.Mb(t.ftype);break;default:t=e.Mb(t.ftype)}e.Ub()}e.Bb()},Thrift.Db.prototype.write=function(e){e.Hb("TApplicationException"),this.message&&(e.xb("message",Thrift.Type.STRING,1),e.qb(this.Tb()),e.Gb()),this.code&&(e.xb("type",Thrift.Type.I32,2),e.Vb(this.code),e.Gb()),e.jb(),e.Qb()},Thrift.Db.prototype.Kb=function(){return this.code},Thrift.Fa=Thrift.Yb=function(e,t){this.url=e,this.Wb=0,this.zb=0,this.Jb=t&&t.Jb,this.Xb="",this.Zb=""},Thrift.Yb.prototype={$b:function(){try{return new XMLHttpRequest}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}throw"Your browser doesn't support XHR."},flush:function(e,t){var r=this;if(e&&!t||void 0===this.url||""===this.url)return this.Xb;var i=this.$b();if(i.overrideMimeType&&i.overrideMimeType("application/json"),t&&(i.onreadystatechange=function(){var e=t;return function(){4==this.readyState&&200==this.status&&(r.eC(this.responseText),e())}}()),i.open("POST",this.url,!!e),i.send(this.Xb),!e||!t){if(4!=i.readyState)throw"encountered an unknown ajax ready state: "+i.readyState;if(200!=i.status)throw"encountered a unknown request status: "+i.status;this.Zb=i.responseText,this.tC=this.Zb.length,this.Wb=this.Zb.length,this.zb=0}},rC:function(e,t,r,i){if("undefined"==typeof jQuery||void 0===jQuery.iC)throw"Thrift.js requires jQuery 1.5+ to use asynchronous requests";var n=this;return jQuery.nC({url:this.url,data:t,type:"POST",sC:!1,contentType:"application/json",oC:"text thrift",aC:{hC:function(t){return n.eC(t),i.call(e)}},context:e,success:jQuery.cC(r).pop()})},eC:function(e){this.Zb=e,this.tC=this.Zb.length,this.Wb=this.Zb.length,this.zb=0},isOpen:function(){return!0},open:function(){},close:function(){},read:function(e){var t=this.Wb-this.zb;if(0===t)return"";var r=e;t<e&&(r=t);var i=this.uC.substr(this.zb,r);return this.zb+=r,i},lC:function(){return this.Zb},write:function(e){this.Xb=e},pC:function(){return this.Xb}},Thrift.dC=function(e){this.fC(e)},Thrift.dC.prototype={fC:function(e){this.url=e,this.gC=null,this.callbacks=[],this.EC=[],this.Xb="",this.Zb="",this.vC=0,this.yC=0},flush:function(e,t){var r=this;this.isOpen()?(this.gC.send(this.Xb),this.callbacks.push(function(){var e=t;return function(t){r.eC(t),e()}}())):this.EC.push({TC:this.Xb,mC:t})},IC:function(){var e=this;this.EC.length>0&&(this.EC.forEach(function(t){this.gC.send(t.TC),this.callbacks.push(function(){var r=t.mC;return function(t){e.eC(t),r()}}())}),this.EC=[])},SC:function(e){this.fC(this.url)},RC:function(e){this.callbacks.length&&this.callbacks.shift()(e.data)},wC:function(e){console.log("Thrift WebSocket Error: "+e.toString()),this.gC.close()},eC:function(e){this.Zb=e,this.tC=this.Zb.length,this.Wb=this.Zb.length,this.zb=0},isOpen:function(){return this.gC&&this.gC.readyState==this.gC.OPEN},open:function(){this.gC&&this.gC.readyState!=this.gC.CLOSED||(this.gC=new WebSocket(this.url),this.gC.onopen=this.IC.bind(this),this.gC.onmessage=this.RC.bind(this),this.gC.onerror=this.wC.bind(this),this.gC.onclose=this.SC.bind(this))},close:function(){this.gC.close()},read:function(e){var t=this.Wb-this.zb;if(0===t)return"";var r=e;t<e&&(r=t);var i=this.uC.substr(this.zb,r);return this.zb+=r,i},lC:function(){return this.Zb},write:function(e){this.Xb=e},pC:function(){return this.Xb}},Thrift.bC=Thrift.CC=function(e){this.yg=e},Thrift.CC.Type={},Thrift.CC.Type[Thrift.Type.BOOL]='"tf"',Thrift.CC.Type[Thrift.Type.BYTE]='"i8"',Thrift.CC.Type[Thrift.Type.I16]='"i16"',Thrift.CC.Type[Thrift.Type.I32]='"i32"',Thrift.CC.Type[Thrift.Type.I64]='"i64"',Thrift.CC.Type[Thrift.Type.DOUBLE]='"dbl"',Thrift.CC.Type[Thrift.Type.STRUCT]='"rec"',Thrift.CC.Type[Thrift.Type.STRING]='"str"',Thrift.CC.Type[Thrift.Type.MAP]='"map"',Thrift.CC.Type[Thrift.Type.LIST]='"lst"',Thrift.CC.Type[Thrift.Type.SET]='"set"',Thrift.CC._C={},Thrift.CC._C.tf=Thrift.Type.BOOL,Thrift.CC._C.i8=Thrift.Type.BYTE,Thrift.CC._C.i16=Thrift.Type.I16,Thrift.CC._C.i32=Thrift.Type.I32,Thrift.CC._C.i64=Thrift.Type.I64,Thrift.CC._C.dbl=Thrift.Type.DOUBLE,Thrift.CC._C.rec=Thrift.Type.STRUCT,Thrift.CC._C.str=Thrift.Type.STRING,Thrift.CC._C.map=Thrift.Type.MAP,Thrift.CC._C.lst=Thrift.Type.LIST,Thrift.CC._C.set=Thrift.Type.SET,Thrift.CC.fb=1,Thrift.CC.prototype={PC:function(){return this.yg},AC:function(e,t,r){this.OC=[],this.NC=[],this.OC.push([Thrift.CC.fb,'"'+e+'"',t,r])},DC:function(){var e=this.OC.pop();this.kC=this.OC.pop(),this.kC.push(e),this.LC="["+this.kC.join(",")+"]",this.yg.write(this.LC)},Hb:function(e){this.NC.push(this.OC.length),this.OC.push({})},Qb:function(){var e=this.NC.pop(),t=this.OC[e],r="{",i=!0;for(var n in t)i?i=!1:r+=",",r+=n+":"+t[n];r+="}",this.OC[e]=r},xb:function(e,t,r){this.NC.push(this.OC.length),this.OC.push({MC:'"'+r+'"',FC:Thrift.CC.Type[t]})},Gb:function(){var e=this.OC.pop(),t=this.OC.pop();this.OC[this.OC.length-1][t.MC]="{"+t.FC+":"+e+"}",this.NC.pop()},jb:function(){},UC:function(e,t,r){this.NC.push(this.OC.length),this.OC.push([Thrift.CC.Type[e],Thrift.CC.Type[t],0])},BC:function(){var e=this.NC.pop();if(e!=this.OC.length){(this.OC.length-e-1)%2!=0&&this.OC.push("");var t=(this.OC.length-e-1)/2;this.OC[e][this.OC[e].length-1]=t;for(var r="}",i=!0;this.OC.length>e+1;){var n=this.OC.pop(),s=this.OC.pop();i?i=!1:r=","+r,isNaN(s)||(s='"'+s+'"'),r=s+":"+n+r}r="{"+r,this.OC[e].push(r),this.OC[e]="["+this.OC[e].join(",")+"]"}},HC:function(e,t){this.NC.push(this.OC.length),this.OC.push([Thrift.CC.Type[e],t])},xC:function(){for(var e=this.NC.pop();this.OC.length>e+1;){var t=this.OC[e+1];this.OC.splice(e+1,1),this.OC[e].push(t)}this.OC[e]="["+this.OC[e].join(",")+"]"},qC:function(e,t){this.NC.push(this.OC.length),this.OC.push([Thrift.CC.Type[e],t])},GC:function(){for(var e=this.NC.pop();this.OC.length>e+1;){var t=this.OC[e+1];this.OC.splice(e+1,1),this.OC[e].push(t)}this.OC[e]="["+this.OC[e].join(",")+"]"},VC:function(e){this.OC.push(e?1:0)},jC:function(e){this.OC.push(e)},QC:function(e){this.OC.push(e)},Vb:function(e){this.OC.push(e)},KC:function(e){this.OC.push(e)},YC:function(e){this.OC.push(e)},qb:function(e){if(null===e)this.OC.push(null);else{for(var t="",r=0;r<e.length;r++){var i=e.charAt(r);t+='"'===i?'\\"':"\\"===i?"\\\\":"\b"===i?"\\b":"\f"===i?"\\f":"\n"===i?"\\n":"\r"===i?"\\r":"\t"===i?"\\t":i}this.OC.push('"'+t+'"')}},WC:function(e){this.qb(e)},zC:function(){this.JC=[],this.zb=[],"undefined"!=typeof JSON&&"function"==typeof JSON.parse?this.XC=JSON.parse(this.yg.lC()):"undefined"!=typeof jQuery?this.XC=jQuery.ZC(this.yg.lC()):this.XC=eval(this.yg.lC());var r={},version=this.XC.shift();if(version!=Thrift.CC.fb)throw"Wrong thrift protocol version: "+version;return r.fname=this.XC.shift(),r.$C=this.XC.shift(),r.e_=this.XC.shift(),this.JC.push(this.XC.shift()),r},t_:function(){},r_:function(e){var t={};return t.fname="",this.JC[this.JC.length-1]instanceof Array&&this.JC.push(this.JC[this.JC.length-1].shift()),t},Bb:function(){this.JC[this.JC.length-2]instanceof Array&&this.JC.pop()},kb:function(){var e={},t=-1,r=Thrift.Type.STOP;for(var i in this.JC[this.JC.length-1])if(null!==i){t=parseInt(i,10),this.zb.push(this.JC.length);var n=this.JC[this.JC.length-1][t];delete this.JC[this.JC.length-1][t],this.JC.push(n);break}if(-1!=t)for(var s in this.JC[this.JC.length-1])null!==Thrift.CC._C[s]&&(r=Thrift.CC._C[s],this.JC[this.JC.length-1]=this.JC[this.JC.length-1][s]);return e.fname="",e.ftype=r,e.fid=t,e},Ub:function(){for(var e=this.zb.pop();this.JC.length>e;)this.JC.pop()},i_:function(){var e=this.JC.pop(),t=e.shift();t instanceof Array&&(this.JC.push(e),e=t,t=e.shift());var r={};return r.n_=Thrift.CC._C[t],r.s_=Thrift.CC._C[e.shift()],r.size=e.shift(),this.zb.push(this.JC.length),this.JC.push(e.shift()),r},o_:function(){this.Ub()},a_:function(){var e=this.JC[this.JC.length-1],t={};return t.h_=Thrift.CC._C[e.shift()],t.size=e.shift(),this.zb.push(this.JC.length),this.JC.push(e),t},c_:function(){this.Ub()},u_:function(e,t){return this.a_(e,t)},l_:function(){return this.c_()},p_:function(){var e=this.Fb();return null!==e&&"1"==e.value?e.value=!0:e.value=!1,e},d_:function(){return this.Fb()},f_:function(){return this.Fb()},Fb:function(e){void 0===e&&(e=this.JC[this.JC.length-1]);var t={};if(e instanceof Array)0===e.length?t.value=void 0:t.value=e.shift();else if(e instanceof Object){for(var r in e)if(null!==r){this.JC.push(e[r]),delete e[r],t.value=r;break}}else t.value=e,this.JC.pop();return t},g_:function(){return this.Fb()},E_:function(){return this.Fb()},Lb:function(){return this.Fb()},v_:function(){return this.Lb()},Mb:function(e){var t,r;switch(e){case Thrift.Type.STOP:return null;case Thrift.Type.BOOL:return this.p_();case Thrift.Type.BYTE:return this.d_();case Thrift.Type.I16:return this.f_();case Thrift.Type.I32:return this.Fb();case Thrift.Type.I64:return this.g_();case Thrift.Type.DOUBLE:return this.E_();case Thrift.Type.STRING:return this.Lb();case Thrift.Type.STRUCT:for(this.r_();;){if(t=this.kb(),t.ftype==Thrift.Type.STOP)break;this.Mb(t.ftype),this.Ub()}return this.Bb(),null;case Thrift.Type.MAP:for(t=this.i_(),r=0;r<t.size;r++)r>0&&this.JC.length>this.zb[this.zb.length-1]+1&&this.JC.pop(),this.Mb(t.n_),this.Mb(t.s_);return this.o_(),null;case Thrift.Type.SET:for(t=this.u_(),r=0;r<t.size;r++)this.Mb(t.h_);return this.l_(),null;case Thrift.Type.LIST:for(t=this.a_(),r=0;r<t.size;r++)this.Mb(t.h_);return this.c_(),null}}},Thrift.y_=function(e,t,r,i){Thrift.CC.call(this,t,r,i),this.T_=e},Thrift.vb(Thrift.y_,Thrift.CC,"multiplexProtocol"),Thrift.y_.prototype.AC=function(e,t,r){t===Thrift.gb.CALL||t===Thrift.gb.ONEWAY?Thrift.CC.prototype.AC.call(this,this.T_+":"+e,t,r):Thrift.CC.prototype.AC.call(this,e,t,r)},Thrift.m_=function(){this.I_=0},Thrift.m_.prototype.S_=function(e,t,r){t.ql&&(t=t.ql);var i=this;return t.prototype.R_=function(){return i.I_+=1,i.I_},new t(new Thrift.y_(e,r))},module.i=Thrift},function(e,t,r){"use strict";var i=r(9),n=r(28),s=n.cg,o=function(){function e(e,t,r,i,n,o,a,h){this.contextId=h,this.url=e,this.w_=r,this.b_=t,this.C_=i,this.duration=n,this.bitrate=o,this.__=a;var c=(this.contextId?this.contextId:this.url).replace(/http(s)?:\/\//,""),u=s.oT(c).toString(s.Uy.By);this.P_=u+"-"+this.C_+"-"+this.bitrate}return e.prototype.Xf=function(){return this.b_},e.prototype.A_=function(){return this.C_},e.prototype.getDuration=function(){return this.duration},e.prototype.getBitrate=function(){return this.bitrate},e.prototype.ig=function(){return this.__},e.prototype.O_=function(){return this.w_},e.prototype.Zf=function(){return this.P_},e.prototype.tg=function(){return this.url},e.prototype.toString=function(){return i.vc[this.Xf()]+"-"+this.Zf()},e}();t.N_=o},function(e,t,r){(function(e){var n,s;/**
 * @license ByteBuffer.js (c) 2013-2014 Daniel Wirtz <dcode@dcode.io>
 * This version of ByteBuffer.js uses an ArrayBuffer as its backing buffer which is accessed through a DataView and is
 * compatible with modern browsers.
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/ByteBuffer.js for details
 */
!function(o){"use strict";function a(e){function t(e){var t=0;return function(){return t<e.length?e.charCodeAt(t++):null}}function r(){var e=[],t=[];return function(){if(0===arguments.length)return t.join("")+a.apply(String,e);e.length+arguments.length>1024&&(t.push(a.apply(String,e)),e.length=0),Array.prototype.push.apply(e,arguments)}}var n=function(e,t,r){if(void 0===e&&(e=n.D_),void 0===t&&(t=n.k_),void 0===r&&(r=n.L_),!r){if((e|=0)<0)throw RangeError("Illegal capacity");t=!!t,r=!!r}this.buffer=0===e?o:new ArrayBuffer(e),this.view=0===e?null:new DataView(this.buffer),this.offset=0,this.M_=-1,this.F_=e,this.U_=void 0!==t&&!!t,this.B_=!!r};n.VERSION="3.5.5",n.H_=!0,n.x_=!1,n.D_=16,n.k_=n.x_,n.L_=!1,n.q_=e||null;var s=n.prototype,o=new ArrayBuffer(0),a=String.fromCharCode;n.G_=function(e,t,r){return new n(e,t,r)},n.concat=function(e,t,r,i){"boolean"!=typeof t&&"string"==typeof t||(i=r,r=t,t=void 0);for(var s,o=0,a=0,h=e.length;a<h;++a)n.V_(e[a])||(e[a]=n.wrap(e[a],t)),(s=e[a].F_-e[a].offset)>0&&(o+=s);if(0===o)return new n(0,r,i);var c,u=new n(o,r,i),l=new Uint8Array(u.buffer);for(a=0;a<h;)c=e[a++],(s=c.F_-c.offset)<=0||(l.set(new Uint8Array(c.buffer).subarray(c.offset,c.F_),u.offset),u.offset+=s);return u.F_=u.offset,u.offset=0,u},n.V_=function(e){return!0===(e&&e instanceof n)},n.type=function(){return ArrayBuffer},n.wrap=function(e,t,r,o){if("string"!=typeof t&&(o=r,r=t,t=void 0),"string"==typeof e)switch(void 0===t&&(t="utf8"),t){case"base64":return n.j_(e,r);case"hex":return n.Q_(e,r);case"binary":return n.K_(e,r);case"utf8":return n.Y_(e,r);case"debug":return n.W_(e,r);default:throw Error("Unsupported encoding: "+t)}if(null===e||"object"!=typeof e)throw TypeError("Illegal buffer");var a;if(n.V_(e))return a=s.clone.call(e),a.M_=-1,a;if(e instanceof Uint8Array)a=new n(0,r,o),e.length>0&&(a.buffer=e.buffer,a.offset=e.byteOffset,a.F_=e.byteOffset+e.length,a.view=e.length>0?new DataView(e.buffer):null);else if(e instanceof ArrayBuffer)a=new n(0,r,o),e.byteLength>0&&(a.buffer=e,a.offset=0,a.F_=e.byteLength,a.view=e.byteLength>0?new DataView(e):null);else{if("[object Array]"!==Object.prototype.toString.call(e))throw TypeError("Illegal buffer");for(a=new n(e.length,r,o),a.F_=e.length,i=0;i<e.length;++i)a.view.setUint8(i,e[i])}return a},s.z_=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=1,this.view.setInt8(t,e),r&&(this.offset+=1),this},s.jC=s.z_,s.J_=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view.getInt8(e);return t&&(this.offset+=1),r},s.d_=s.J_,s.X_=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=1,this.view.setUint8(t,e),r&&(this.offset+=1),this},s.Z_=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view.getUint8(e);return t&&(this.offset+=1),r},s.eP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=2,this.view.setInt16(t,e,this.U_),r&&(this.offset+=2),this},s.tP=s.eP,s.rP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=this.view.getInt16(e,this.U_);return t&&(this.offset+=2),r},s.iP=s.rP,s.nP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=2,this.view.setUint16(t,e,this.U_),r&&(this.offset+=2),this},s.sP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=this.view.getUint16(e,this.U_);return t&&(this.offset+=2),r},s.oP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setInt32(t,e,this.U_),r&&(this.offset+=4),this},s.Bg=s.oP,s.aP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getInt32(e,this.U_);return t&&(this.offset+=4),r},s.Qg=s.aP,s.hP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setUint32(t,e,this.U_),r&&(this.offset+=4),this},s.cP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getUint32(e,this.U_);return t&&(this.offset+=4),r},e&&(s.uP=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"==typeof t)t=e.DE(t);else if("string"==typeof t)t=e.kE(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.DE(t):"string"==typeof t&&(t=e.kE(t)),r+=8;var n=this.buffer.byteLength;return r>n&&this.resize((n*=2)>r?n:r),r-=8,this.U_?(this.view.setInt32(r,t.low,!0),this.view.setInt32(r+4,t.high,!0)):(this.view.setInt32(r,t.high,!1),this.view.setInt32(r+4,t.low,!1)),i&&(this.offset+=8),this},s.lP=s.uP,s.pP=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+8) <= "+this.buffer.byteLength)}var i=this.U_?new e(this.view.getInt32(t,!0),this.view.getInt32(t+4,!0),!1):new e(this.view.getInt32(t+4,!1),this.view.getInt32(t,!1),!1);return r&&(this.offset+=8),i},s.dP=s.pP,s.fP=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"==typeof t)t=e.DE(t);else if("string"==typeof t)t=e.kE(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.DE(t):"string"==typeof t&&(t=e.kE(t)),r+=8;var n=this.buffer.byteLength;return r>n&&this.resize((n*=2)>r?n:r),r-=8,this.U_?(this.view.setInt32(r,t.low,!0),this.view.setInt32(r+4,t.high,!0)):(this.view.setInt32(r,t.high,!1),this.view.setInt32(r+4,t.low,!1)),i&&(this.offset+=8),this},s.gP=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+8) <= "+this.buffer.byteLength)}var i=this.U_?new e(this.view.getInt32(t,!0),this.view.getInt32(t+4,!0),!0):new e(this.view.getInt32(t+4,!1),this.view.getInt32(t,!1),!0);return r&&(this.offset+=8),i}),s.EP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setFloat32(t,e,this.U_),r&&(this.offset+=4),this},s.vP=s.EP,s.yP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getFloat32(e,this.U_);return t&&(this.offset+=4),r},s.TP=s.yP,s.mP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=8;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=8,this.view.setFloat64(t,e,this.U_),r&&(this.offset+=8),this},s.YC=s.mP,s.IP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+8) <= "+this.buffer.byteLength)}var r=this.view.getFloat64(e,this.U_);return t&&(this.offset+=8),r},s.E_=s.IP,n.SP=5,n.RP=function(e){return e>>>=0,e<128?1:e<16384?2:e<1<<21?3:e<1<<28?4:5},n.wP=function(e){return((e|=0)<<1^e>>31)>>>0},n.bP=function(e){return e>>>1^-(1&e)|0},s.CP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}var i,s=n.RP(e);t+=s;var o=this.buffer.byteLength;return t>o&&this.resize((o*=2)>t?o:t),t-=s,this.view.setUint8(t,i=128|e),e>>>=0,e>=128?(i=e>>7|128,this.view.setUint8(t+1,i),e>=16384?(i=e>>14|128,this.view.setUint8(t+2,i),e>=1<<21?(i=e>>21|128,this.view.setUint8(t+3,i),e>=1<<28?(this.view.setUint8(t+4,e>>28&15),s=5):(this.view.setUint8(t+3,127&i),s=4)):(this.view.setUint8(t+2,127&i),s=3)):(this.view.setUint8(t+1,127&i),s=2)):(this.view.setUint8(t,127&i),s=1),r?(this.offset+=s,this):s},s._P=function(e,t){return this.CP(n.wP(e),t)},s.PP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r,i,n=0,s=0;do{if(i=e+n,!this.B_&&i>this.F_){var o=Error("Truncated");throw o.AP=!0,o}r=this.view.getUint8(i),n<5&&(s|=(127&r)<<7*n>>>0),++n}while(128==(128&r));return s|=0,t?(this.offset+=n,s):{value:s,length:n}},s.OP=function(e){var t=this.PP(e);return"object"==typeof t?t.value=n.bP(t.value):t=n.bP(t),t},e&&(n.NP=10,n.DP=function(t){"number"==typeof t?t=e.DE(t):"string"==typeof t&&(t=e.kE(t));var r=t.kP()>>>0,i=t.LP(28).kP()>>>0,n=t.LP(56).kP()>>>0;return 0==n?0==i?r<16384?r<128?1:2:r<1<<21?3:4:i<16384?i<128?5:6:i<1<<21?7:8:n<128?9:10},n.MP=function(t){return"number"==typeof t?t=e.DE(t,!1):"string"==typeof t?t=e.kE(t,!1):!1!==t.FP&&(t=t.UP()),t.shiftLeft(1).pT(t.HP(63)).BP()},n.xP=function(t){return"number"==typeof t?t=e.DE(t,!1):"string"==typeof t?t=e.kE(t,!1):!1!==t.FP&&(t=t.UP()),t.LP(1).pT(t.qP(e.ONE).UP().qE()).UP()},s.GP=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"==typeof t)t=e.DE(t);else if("string"==typeof t)t=e.kE(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.DE(t,!1):"string"==typeof t?t=e.kE(t,!1):!1!==t.FP&&(t=t.UP());var s=n.DP(t),o=t.kP()>>>0,a=t.LP(28).kP()>>>0,h=t.LP(56).kP()>>>0;r+=s;var c=this.buffer.byteLength;switch(r>c&&this.resize((c*=2)>r?c:r),r-=s,s){case 10:this.view.setUint8(r+9,h>>>7&1);case 9:this.view.setUint8(r+8,9!==s?128|h:127&h);case 8:this.view.setUint8(r+7,8!==s?a>>>21|128:a>>>21&127);case 7:this.view.setUint8(r+6,7!==s?a>>>14|128:a>>>14&127);case 6:this.view.setUint8(r+5,6!==s?a>>>7|128:a>>>7&127);case 5:this.view.setUint8(r+4,5!==s?128|a:127&a);case 4:this.view.setUint8(r+3,4!==s?o>>>21|128:o>>>21&127);case 3:this.view.setUint8(r+2,3!==s?o>>>14|128:o>>>14&127);case 2:this.view.setUint8(r+1,2!==s?o>>>7|128:o>>>7&127);case 1:this.view.setUint8(r,1!==s?128|o:127&o)}return i?(this.offset+=s,this):s},s.VP=function(e,t){return this.GP(n.MP(e),t)},s.jP=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+1) <= "+this.buffer.byteLength)}var i=t,n=0,s=0,o=0,a=0;if(a=this.view.getUint8(t++),n=127&a,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<7,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<14,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<21,128&a&&(a=this.view.getUint8(t++),s=127&a,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<7,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<14,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<21,128&a&&(a=this.view.getUint8(t++),o=127&a,128&a&&(a=this.view.getUint8(t++),o|=(127&a)<<7,128&a))))))))))throw Error("Buffer overrun");var h=e.qI(n|s<<28,s>>>4|o<<24,!1);return r?(this.offset=t,h):{value:h,length:t-i}},s.QP=function(t){var r=this.jP(t);return r&&r.value instanceof e?r.value=n.xP(r.value):r=n.xP(r),r}),s.Hg=function(e,r){var i=void 0===r;i&&(r=this.offset);var n,s=e.length;if(!this.B_){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");for(n=0;n<s;++n)if(0===e.charCodeAt(n))throw RangeError("Illegal str: Contains NULL-characters");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}s=c.KP(t(e))[1],r+=s+1;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=s+1,c.YP(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),this.view.setUint8(r++,0),i?(this.offset=r,this):s},s.Yg=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var i,n=e,s=-1;return c.WP(function(){if(0===s)return null;if(e>=this.F_)throw RangeError("Illegal range: Truncated data, "+e+" < "+this.F_);return 0===(s=this.view.getUint8(e++))?null:s}.bind(this),i=r(),!0),t?(this.offset=e,i()):{string:i(),length:e-n}},s.zP=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var n,s=r;n=c.KP(t(e),this.B_)[1],r+=4+n;var o=this.buffer.byteLength;if(r>o&&this.resize((o*=2)>r?o:r),r-=4+n,this.view.setUint32(r,n,this.U_),r+=4,c.YP(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),r!==s+4+n)throw RangeError("Illegal range: Truncated data, "+r+" == "+(r+4+n));return i?(this.offset=r,this):r-s},s.JP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var i,n=0,s=e;n=this.view.getUint32(e,this.U_),e+=4;var o,a=e+n;return c.WP(function(){return e<a?this.view.getUint8(e++):null}.bind(this),o=r(),this.B_),i=o(),t?(this.offset=e,i):{string:i,length:e-s}},n.XP="c",n.ZP="b",s.$P=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var n,s=r;n=c.KP(t(e))[1],r+=n;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=n,c.YP(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),i?(this.offset=r,this):r-s},s.qb=s.$P,n.eA=function(e){return c.KP(t(e))[0]},n.tA=function(e){return c.KP(t(e))[1]},s.rA=function(e,t,i){"number"==typeof t&&(i=t,t=void 0);var s=void 0===i;if(s&&(i=this.offset),void 0===t&&(t=n.XP),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal length: "+e+" (not an integer)");if(e|=0,"number"!=typeof i||i%1!=0)throw TypeError("Illegal offset: "+i+" (not an integer)");if((i>>>=0)<0||i+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+i+" (+0) <= "+this.buffer.byteLength)}var o,a=0,h=i;if(t===n.XP){if(o=r(),c.iA(function(){return a<e&&i<this.F_?this.view.getUint8(i++):null}.bind(this),function(e){++a,c.nA(e,o)}.bind(this)),a!==e)throw RangeError("Illegal range: Truncated data, "+a+" == "+e);return s?(this.offset=i,o()):{string:o(),length:i-h}}if(t===n.ZP){if(!this.B_){if("number"!=typeof i||i%1!=0)throw TypeError("Illegal offset: "+i+" (not an integer)");if((i>>>=0)<0||i+e>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+i+" (+"+e+") <= "+this.buffer.byteLength)}var u=i+e;if(c.WP(function(){return i<u?this.view.getUint8(i++):null}.bind(this),o=r(),this.B_),i!==u)throw RangeError("Illegal range: Truncated data, "+i+" == "+u);return s?(this.offset=i,o()):{string:o(),length:i-h}}throw TypeError("Unsupported metrics: "+t)},s.Lb=s.rA,s.sA=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var s,o,a=r;s=c.KP(t(e),this.B_)[1],o=n.RP(s),r+=o+s;var h=this.buffer.byteLength;if(r>h&&this.resize((h*=2)>r?h:r),r-=o+s,r+=this.CP(s,r),c.YP(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),r!==a+s+o)throw RangeError("Illegal range: Truncated data, "+r+" == "+(r+s+o));return i?(this.offset=r,this):r-a},s.oA=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var i,n=this.PP(e),s=e;e+=n.length,n=n.value;var o=e+n,a=r();return c.WP(function(){return e<o?this.view.getUint8(e++):null}.bind(this),a,this.B_),i=a(),t?(this.offset=e,i):{string:i,length:e-s}},s.append=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof n||(e=n.wrap(e,t));var s=e.F_-e.offset;if(s<=0)return this;r+=s;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=s,new Uint8Array(this.buffer,r).set(new Uint8Array(e.buffer).subarray(e.offset,e.F_)),e.offset+=s,i&&(this.offset+=s),this},s.aA=function(e,t){return e.append(this,t),this},s.assert=function(e){return this.B_=!e,this},s.hA=function(){return this.buffer.byteLength},s.clear=function(){return this.offset=0,this.F_=this.buffer.byteLength,this.M_=-1,this},s.clone=function(e){var t=new n(0,this.U_,this.B_);if(e){var r=new ArrayBuffer(this.buffer.byteLength);new Uint8Array(r).set(this.buffer),t.buffer=r,t.view=new DataView(r)}else t.buffer=this.buffer,t.view=this.view;return t.offset=this.offset,t.M_=this.M_,t.F_=this.F_,t},s.compact=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(0===e&&t===this.buffer.byteLength)return this;var r=t-e;if(0===r)return this.buffer=o,this.view=null,this.M_>=0&&(this.M_-=e),this.offset=0,this.F_=0,this;var i=new ArrayBuffer(r);return new Uint8Array(i).set(new Uint8Array(this.buffer).subarray(e,t)),this.buffer=i,this.view=new DataView(i),this.M_>=0&&(this.M_-=e),this.offset=0,this.F_=r,this},s.cA=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(e===t)return new n(0,this.U_,this.B_);var r=t-e,i=new n(r,this.U_,this.B_);return i.offset=0,i.F_=r,i.M_>=0&&(i.M_-=e),this.jE(i,0,e,t),i},s.jE=function(e,t,r,i){var s,o;if(!this.B_&&!n.V_(e))throw TypeError("Illegal target: Not a ByteBuffer");if(t=(o=void 0===t)?e.offset:0|t,r=(s=void 0===r)?this.offset:0|r,i=void 0===i?this.F_:0|i,t<0||t>e.buffer.byteLength)throw RangeError("Illegal target range: 0 <= "+t+" <= "+e.buffer.byteLength);if(r<0||i>this.buffer.byteLength)throw RangeError("Illegal source range: 0 <= "+r+" <= "+this.buffer.byteLength);var a=i-r;return 0===a?e:(e.uA(t+a),new Uint8Array(e.buffer).set(new Uint8Array(this.buffer).subarray(r,i),t),s&&(this.offset+=a),o&&(e.offset+=a),this)},s.uA=function(e){var t=this.buffer.byteLength;return t<e?this.resize((t*=2)>e?t:e):this},s.fill=function(e,t,r){var i=void 0===t;if(i&&(t=this.offset),"string"==typeof e&&e.length>0&&(e=e.charCodeAt(0)),void 0===t&&(t=this.offset),void 0===r&&(r=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!=0)throw TypeError("Illegal end: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(t>=r)return this;for(;t<r;)this.view.setUint8(t++,e);return i&&(this.offset=t),this},s.xg=function(){return this.F_=this.offset,this.offset=0,this},s.mark=function(e){if(e=void 0===e?this.offset:e,!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}return this.M_=e,this},s.order=function(e){if(!this.B_&&"boolean"!=typeof e)throw TypeError("Illegal littleEndian: Not a boolean");return this.U_=!!e,this},s.lA=function(e){return this.U_=void 0===e||!!e,this},s.pA=function(e){return this.U_=void 0!==e&&!e,this},s.dA=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof n||(e=n.wrap(e,t));var s=e.F_-e.offset;if(s<=0)return this;var o,a=s-r;if(a>0){var h=new ArrayBuffer(this.buffer.byteLength+a);o=new Uint8Array(h),o.set(new Uint8Array(this.buffer).subarray(r,this.buffer.byteLength),s),this.buffer=h,this.view=new DataView(h),this.offset+=a,this.M_>=0&&(this.M_+=a),this.F_+=a,r+=a}else o=new Uint8Array(this.buffer);return o.set(new Uint8Array(e.buffer).subarray(e.offset,e.F_),r-s),e.offset=e.F_,i&&(this.offset-=s),this},s.fA=function(e,t){return e.dA(this,t),this},s.gA=function(e){"function"!=typeof e&&(e=console.log.bind(console)),e(this.toString()+"\n-------------------------------------------------------------------\n"+this.EA(!0))},s.vA=function(){return this.F_-this.offset},s.reset=function(){return this.M_>=0?(this.offset=this.M_,this.M_=-1):this.offset=0,this},s.resize=function(e){if(!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal capacity: "+e+" (not an integer)");if((e|=0)<0)throw RangeError("Illegal capacity: 0 <= "+e)}if(this.buffer.byteLength<e){var t=new ArrayBuffer(e);new Uint8Array(t).set(new Uint8Array(this.buffer)),this.buffer=t,this.view=new DataView(t)}return this},s.reverse=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}return e===t?this:(Array.prototype.reverse.call(new Uint8Array(this.buffer).subarray(e,t)),this.view=new DataView(this.buffer),this)},s.Mb=function(e){if(!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal length: "+e+" (not an integer)");e|=0}var t=this.offset+e;if(!this.B_&&(t<0||t>this.buffer.byteLength))throw RangeError("Illegal length: 0 <= "+this.offset+" + "+e+" <= "+this.buffer.byteLength);return this.offset=t,this},s.slice=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var r=this.clone();return r.offset=e,r.F_=t,r},s.yA=function(e){var t=this.offset,r=this.F_;if(t>r){var i=t;t=r,r=i}if(!this.B_){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!=0)throw TypeError("Illegal limit: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(!e&&0===t&&r===this.buffer.byteLength)return this.buffer;if(t===r)return o;var n=new ArrayBuffer(r-t);return new Uint8Array(n).set(new Uint8Array(this.buffer).subarray(t,r),0),n},s.tc=s.yA,s.toString=function(e,t,r){if(void 0===e)return"ByteBufferAB(offset="+this.offset+",markedOffset="+this.M_+",limit="+this.F_+",capacity="+this.hA()+")";switch("number"==typeof e&&(e="utf8",t=e,r=t),e){case"utf8":return this.TA(t,r);case"base64":return this.mA(t,r);case"hex":return this.IA(t,r);case"binary":return this.SA(t,r);case"debug":return this.EA();case"columns":return this.RA();default:throw Error("Unsupported encoding: "+e)}};var h=function(){for(var e={},t=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47],r=[],i=0,n=t.length;i<n;++i)r[t[i]]=i;return e.encode=function(e,r){for(var i,n;null!==(i=e());)r(t[i>>2&63]),n=(3&i)<<4,null!==(i=e())?(n|=i>>4&15,r(t[63&(n|i>>4&15)]),n=(15&i)<<2,null!==(i=e())?(r(t[63&(n|i>>6&3)]),r(t[63&i])):(r(t[63&n]),r(61))):(r(t[63&n]),r(61),r(61))},e.decode=function(e,t){function i(e){throw Error("Illegal character code: "+e)}for(var n,s,o;null!==(n=e());)if(s=r[n],void 0===s&&i(n),null!==(n=e())&&(o=r[n],void 0===o&&i(n),t(s<<2>>>0|(48&o)>>4),null!==(n=e()))){if(void 0===(s=r[n])){if(61===n)break;i(n)}if(t((15&o)<<4>>>0|(60&s)>>2),null!==(n=e())){if(void 0===(o=r[n])){if(61===n)break;i(n)}t((3&s)<<6>>>0|o)}}},e.test=function(e){return/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(e)},e}();s.mA=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var i;return h.encode(function(){return e<t?this.view.getUint8(e++):null}.bind(this),i=r()),i()},n.j_=function(e,r,i){if(!i){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if(e.length%4!=0)throw TypeError("Illegal str: Length not a multiple of 4")}var s=new n(e.length/4*3,r,i),o=0;return h.decode(t(e),function(e){s.view.setUint8(o++,e)}),s.F_=o,s},n.btoa=function(e){return n.K_(e).mA()},n.atob=function(e){return n.j_(e).SA()},s.SA=function(e,t){if(e=void 0===e?this.offset:e,t=void 0===t?this.F_:t,!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(e===t)return"";for(var r=[],i=[];e<t;)r.push(this.view.getUint8(e++)),r.length>=1024&&(i.push(String.fromCharCode.apply(String,r)),r=[]);return i.join("")+String.fromCharCode.apply(String,r)},n.K_=function(e,t,r){if(!r&&"string"!=typeof e)throw TypeError("Illegal str: Not a string");for(var i,s=0,o=e.length,a=new n(o,t,r);s<o;){if(i=e.charCodeAt(s),!r&&i>255)throw RangeError("Illegal charCode at "+s+": 0 <= "+i+" <= 255");a.view.setUint8(s++,i)}return a.F_=o,a},s.EA=function(e){for(var t,r=-1,i=this.buffer.byteLength,n="",s="",o="";r<i;){if(-1!==r&&(t=this.view.getUint8(r),n+=t<16?"0"+t.toString(16).toUpperCase():t.toString(16).toUpperCase(),e&&(s+=t>32&&t<127?String.fromCharCode(t):".")),++r,e&&r>0&&r%16==0&&r!==i){for(;n.length<51;)n+=" ";o+=n+s+"\n",n=s=""}r===this.offset&&r===this.F_?n+=r===this.M_?"!":"|":r===this.offset?n+=r===this.M_?"[":"<":r===this.F_?n+=r===this.M_?"]":">":n+=r===this.M_?"'":e||0!==r&&r!==i?" ":""}if(e&&" "!==n){for(;n.length<51;)n+=" ";o+=n+s+"\n"}return e?o:n},n.W_=function(e,t,r){for(var i,s,o=e.length,a=new n((o+1)/3|0,t,r),h=0,c=0,u=!1,l=!1,p=!1,d=!1,f=!1;h<o;){switch(i=e.charAt(h++)){case"!":if(!r){if(l||p||d){f=!0;break}l=p=d=!0}a.offset=a.M_=a.F_=c,u=!1;break;case"|":if(!r){if(l||d){f=!0;break}l=d=!0}a.offset=a.F_=c,u=!1;break;case"[":if(!r){if(l||p){f=!0;break}l=p=!0}a.offset=a.M_=c,u=!1;break;case"<":if(!r){if(l){f=!0;break}l=!0}a.offset=c,u=!1;break;case"]":if(!r){if(d||p){f=!0;break}d=p=!0}a.F_=a.M_=c,u=!1;break;case">":if(!r){if(d){f=!0;break}d=!0}a.F_=c,u=!1;break;case"'":if(!r){if(p){f=!0;break}p=!0}a.M_=c,u=!1;break;case" ":u=!1;break;default:if(!r&&u){f=!0;break}if(s=parseInt(i+e.charAt(h++),16),!r&&(isNaN(s)||s<0||s>255))throw TypeError("Illegal str: Not a debug encoded string");a.view.setUint8(c++,s),u=!0}if(f)throw TypeError("Illegal str: Invalid symbol at "+h)}if(!r){if(!l||!d)throw TypeError("Illegal str: Missing offset or limit");if(c<a.buffer.byteLength)throw TypeError("Illegal str: Not a debug encoded string (is it hex?) "+c+" < "+o)}return a},s.IA=function(e,t){if(e=void 0===e?this.offset:e,t=void 0===t?this.F_:t,!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}for(var r,i=new Array(t-e);e<t;)r=this.view.getUint8(e++),r<16?i.push("0",r.toString(16)):i.push(r.toString(16));return i.join("")},n.Q_=function(e,t,r){if(!r){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if(e.length%2!=0)throw TypeError("Illegal str: Length not a multiple of 2")}for(var i,s=e.length,o=new n(s/2|0,t),a=0,h=0;a<s;a+=2){if(i=parseInt(e.substring(a,a+2),16),!r&&(!isFinite(i)||i<0||i>255))throw TypeError("Illegal str: Contains non-hex characters");o.view.setUint8(h++,i)}return o.F_=h,o};var c=function(){var e={};return e.wA=1114111,e.bA=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<128?t(127&r):r<2048?(t(r>>6&31|192),t(63&r|128)):r<65536?(t(r>>12&15|224),t(r>>6&63|128),t(63&r|128)):(t(r>>18&7|240),t(r>>12&63|128),t(r>>6&63|128),t(63&r|128)),r=null},e.iA=function(e,t){for(var r,i,n,s,o=function(e){e=e.slice(0,e.indexOf(null));var t=Error(e.toString());throw t.name="TruncatedError",t.bytes=e,t};null!==(r=e());)if(0==(128&r))t(r);else if(192==(224&r))null===(i=e())&&o([r,i]),t((31&r)<<6|63&i);else if(224==(240&r))(null===(i=e())||null===(n=e()))&&o([r,i,n]),t((15&r)<<12|(63&i)<<6|63&n);else{if(240!=(248&r))throw RangeError("Illegal starting byte: "+r);(null===(i=e())||null===(n=e())||null===(s=e()))&&o([r,i,n,s]),t((7&r)<<18|(63&i)<<12|(63&n)<<6|63&s)}},e.CA=function(e,t){for(var r,i=null;;){if(null===(r=null!==i?i:e()))break;r>=55296&&r<=57343&&null!==(i=e())&&i>=56320&&i<=57343?(t(1024*(r-55296)+i-56320+65536),i=null):t(r)}null!==i&&t(i)},e.nA=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<=65535?t(r):(r-=65536,t(55296+(r>>10)),t(r%1024+56320)),r=null},e.YP=function(t,r){e.CA(t,function(t){e.bA(t,r)})},e.WP=function(t,r){e.iA(t,function(t){e.nA(t,r)})},e._A=function(e){return e<128?1:e<2048?2:e<65536?3:4},e.PA=function(t){for(var r,i=0;null!==(r=t());)i+=e._A(r);return i},e.KP=function(t){var r=0,i=0;return e.CA(t,function(t){++r,i+=e._A(t)}),[r,i]},e}();return s.TA=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var i;try{c.WP(function(){return e<t?this.view.getUint8(e++):null}.bind(this),i=r())}catch(r){if(e!==t)throw RangeError("Illegal range: Truncated data, "+e+" != "+t)}return i()},n.Y_=function(e,r,i){if(!i&&"string"!=typeof e)throw TypeError("Illegal str: Not a string");var s=new n(c.KP(t(e),!0)[1],r,i),o=0;return c.YP(t(e),function(e){s.view.setUint8(o++,e)}),s.F_=o,s},n}"object"==typeof e&&e&&"object"==typeof t&&t?e.i=function(){var e;try{e=r(93)}catch(e){}return a(e)}():(n=[r(94)],void 0!==(s=function(e){return a(e)}.apply(t,n))&&(e.i=s))}()}).call(t,r(63)(e))},function(e,t,r){"use strict";var i=r(37);e.i=Object,Object.empty=Object.freeze(Object.create(null)),Object.au=function(e){return Object(e)===e},Object.AA=function(e){return e&&"function"==typeof e.valueOf&&(e=e.valueOf()),e};var n=new i;Object.hash=function(e){return e&&"function"==typeof e.hash?""+e.hash():Object(e)===e?(n.has(e)||n.set(e,Math.random().toString(36).slice(2)),n.get(e)):""+e};var s=Object.prototype.hasOwnProperty;Object.OA=function(e,t){return s.call(e,t)},Object.has=function(e,t){if("object"!=typeof e)throw new Error("Object.has can't accept non-object: "+typeof e);if(e&&"function"==typeof e.has)return e.has(t);if("string"==typeof t)return t in e&&e[t]!==Object.prototype[t];throw new Error("Key must be a string for Object.has on plain objects")},Object.get=function(e,t,r){if("object"!=typeof e)throw new Error("Object.get can't accept non-object: "+typeof e);return e&&"function"==typeof e.get?e.get(t,r):Object.has(e,t)?e[t]:r},Object.set=function(e,t,r){e&&"function"==typeof e.set?e.set(t,r):e[t]=r},Object.addEach=function(e,t){if(t)if("function"!=typeof t.forEach||t.hasOwnProperty("forEach"))if("number"==typeof t.length)for(var r=0;r<t.length;r++)e[r]=t[r];else Object.keys(t).forEach(function(r){e[r]=t[r]});else!0===t.isMap?t.forEach(function(t,r){e[r]=t}):t.forEach(function(t){e[t[0]]=t[1]});else;return e},Object.forEach=function(e,t,r){for(var i,n=Object.keys(e),s=0;i=n[s];s++)t.call(r,e[i],i,e)},Object.map=function(e,t,r){for(var i,n=Object.keys(e),s=0,o=[];i=n[s];s++)o.push(t.call(r,e[i],i,e));return o},Object.values=function(e){return Object.map(e,Function.identity)},Object.concat=function(){for(var e={},t=0;t<arguments.length;t++)Object.addEach(e,arguments[t]);return e},Object.from=Object.concat,Object.is=function(e,t){return e===t?0!==e||1/e==1/t:e!==e&&t!==t},Object.cs=function(e,t,r,n){if(r=r||Object.cs,e=Object.AA(e),t=Object.AA(t),e===t)return!0;if(Object.au(e)){if(n=n||new i,n.has(e))return!0;n.set(e,!0)}if(Object.au(e)&&"function"==typeof e.cs)return e.cs(t,r,n);if(Object.au(t)&&"function"==typeof t.cs)return t.cs(e,r,n);if(Object.au(e)&&Object.au(t)&&Object.getPrototypeOf(e)===Object.prototype&&Object.getPrototypeOf(t)===Object.prototype){for(var s in e)if(!r(e[s],t[s],r,n))return!1;for(var s in t)if(!(s in e&&r(t[s],e[s],r,n)))return!1;return!0}return e!==e&&t!==t||(!e||!t)&&e===t},Object.Oc=function(e,t){if(e=Object.AA(e),t=Object.AA(t),e===t)return 0;var r=typeof e,i=typeof t;return"number"===r&&"number"===i?e-t:"string"===r&&"string"===i?e<t?-1/0:1/0:e&&"function"==typeof e.Oc?e.Oc(t):t&&"function"==typeof t.Oc?-t.Oc(e):0},Object.clone=function(e,t,r){if(e=Object.AA(e),r=r||new i,void 0===t)t=1/0;else if(0===t)return e;if(Object.au(e)){if(!r.has(e))if(e&&"function"==typeof e.clone)r.set(e,e.clone(t,r));else{var n=Object.getPrototypeOf(e);if(null!==n&&n!==Object.prototype)throw new Error("Can't clone "+e);var s=Object.create(n);r.set(e,s);for(var o in e)s[o]=Object.clone(e[o],t-1,r)}return r.get(e)}return e},Object.clear=function(e){if(e&&"function"==typeof e.clear)e.clear();else for(var t=Object.keys(e),r=t.length;r;)r--,delete e[t[r]];return e}},function(e,t){!function(){"use strict";function t(e){e.NA&&e.NA(t)}function r(e){return!(e.substr(0,d.length)==d&&"___"===e.substr(e.length-3))}function i(e){if(e!==Object(e))throw new TypeError("Not an object: "+e);var t=e[f];if(t&&t.key===e)return t;if(p(e)){t={key:e};try{return l(e,f,{value:t,Ah:!1,p:!1,l:!1}),t}catch(e){return}}}function n(e){return e.prototype=null,Object.freeze(e)}function s(){y||"undefined"==typeof console||(y=!0,console.warn("WeakMap should be invoked as new WeakMap(), not WeakMap(). This will be an error in the future."))}if("undefined"==typeof ses||!ses.ok||ses.ok()){"undefined"!=typeof ses&&(ses.DA=t);var o=!1;if("function"==typeof WeakMap){var a=WeakMap;if("undefined"!=typeof navigator&&/Firefox/.test(navigator.userAgent));else{var h=new a,c=Object.freeze({});if(h.set(c,1),1===h.get(c))return void(e.i=WeakMap);o=!0}}var u=(Object.prototype.hasOwnProperty,Object.getOwnPropertyNames),l=Object.defineProperty,p=Object.isExtensible,d="weakmap:",f=d+"ident:"+Math.random()+"___";if("undefined"!=typeof crypto&&"function"==typeof crypto.getRandomValues&&"function"==typeof ArrayBuffer&&"function"==typeof Uint8Array){var g=new ArrayBuffer(25),E=new Uint8Array(g);crypto.getRandomValues(E),f=d+"rand:"+Array.prototype.map.call(E,function(e){return(e%36).toString(36)}).join("")+"___"}if(l(Object,"getOwnPropertyNames",{value:function(e){return u(e).filter(r)}}),"getPropertyNames"in Object){var v=Object.kA;l(Object,"getPropertyNames",{value:function(e){return v(e).filter(r)}})}!function(){var e=Object.freeze;l(Object,"freeze",{value:function(t){return i(t),e(t)}});var t=Object.seal;l(Object,"seal",{value:function(e){return i(e),t(e)}});var r=Object.preventExtensions;l(Object,"preventExtensions",{value:function(e){return i(e),r(e)}})}();var y=!1,T=0,m=function(){function e(e,t){var r,n=i(e);return n?c in n?n[c]:t:(r=a.indexOf(e),r>=0?h[r]:t)}function t(e){var t=i(e);return t?c in t:a.indexOf(e)>=0}function r(e,t){var r,n=i(e);return n?n[c]=t:(r=a.indexOf(e),r>=0?h[r]=t:(r=a.length,h[r]=t,a[r]=e)),this}function o(e){var t,r,n=i(e);return n?c in n&&delete n[c]:!((t=a.indexOf(e))<0)&&(r=a.length-1,a[t]=void 0,h[t]=h[r],a[t]=a[r],a.length=r,h.length=r,!0)}this instanceof m||s();var a=[],h=[],c=T++;return Object.create(m.prototype,{LA:{value:n(e)},MA:{value:n(t)},FA:{value:n(r)},UA:{value:n(o)}})};m.prototype=Object.create(Object.prototype,{get:{value:function(e,t){return this.LA(e,t)},Ah:!0,l:!0},has:{value:function(e){return this.MA(e)},Ah:!0,l:!0},set:{value:function(e,t){return this.FA(e,t)},Ah:!0,l:!0},delete:{value:function(e){return this.UA(e)},Ah:!0,l:!0}}),"function"==typeof a?function(){function r(){function e(e,t){return u?c.has(e)?c.get(e):u.LA(e,t):c.get(e,t)}function r(e){return c.has(e)||!!u&&u.MA(e)}function i(e){var t=!!c.delete(e);return u?u.UA(e)||t:t}this instanceof m||s();var h,c=new a,u=void 0,l=!1;return h=o?function(e,t){return c.set(e,t),c.has(e)||(u||(u=new m),u.set(e,t)),this}:function(e,t){if(l)try{c.set(e,t)}catch(r){u||(u=new m),u.FA(e,t)}else c.set(e,t);return this},Object.create(m.prototype,{LA:{value:n(e)},MA:{value:n(r)},FA:{value:n(h)},UA:{value:n(i)},NA:{value:n(function(e){if(e!==t)throw new Error("bogus call to permitHostObjects___");l=!0})}})}o&&"undefined"!=typeof Proxy&&(Proxy=void 0),r.prototype=m.prototype,e.i=r,Object.defineProperty(WeakMap.prototype,"constructor",{value:WeakMap,p:!1,l:!0,Ah:!0})}():("undefined"!=typeof Proxy&&(Proxy=void 0),e.i=m)}}()},function(e,t,r){"use strict";function i(){throw new Error("Can't construct. RangeChanges is a mixin.")}var n=r(37),s=r(51),o=new n;e.i=i,i.prototype.BA=function(){return o.has(this)||o.set(this,s()),o.get(this)},i.prototype.HA=function(e){var t=this.BA();return e=e||"",t.has(e)||t.set(e,{isActive:!1,Wc:[],Yc:[]}),t.get(e)},i.prototype.xA=function(e,t,r){!this.Zc&&this.Xc&&this.Xc();var i,n=this.HA(t);i=r?n.Yc:n.Wc,i.push(e),Object.defineProperty(this,"dispatchesRangeChanges",{value:!0,Ah:!0,l:!0,p:!1});var s=this;return function(){s&&(s.qA(e,t,r),s=null)}},i.prototype.qA=function(e,t,r){var i,n=this.HA(t);i=r?n.Yc:n.Wc;var s=i.lastIndexOf(e);if(-1===s)throw new Error("Can't remove range change listener: does not exist: token "+JSON.stringify(t));i.splice(s,1)},i.prototype.GA=function(e,t,r,i){var n="Range"+(i?"WillChange":"Change");this.BA().forEach(function(s,o){if(!s.isActive){s.isActive=!0;var a;a=i?s.Yc:s.Wc;var h="handle"+(o.slice(0,1).toUpperCase()+o.slice(1))+n;try{a.slice().forEach(function(n){if(!(a.indexOf(n)<0))if(n[h])n[h](e,t,r,this,i);else{if(!n.call)throw new Error("Handler "+n+" has no method "+h+" and is not callable");n.call(this,e,t,r,this,i)}},this)}finally{s.isActive=!1}}},this)},i.prototype.VA=function(e,t){return this.xA(e,t,!0)},i.prototype.jA=function(e,t){return this.qA(e,t,!0)},i.prototype.QA=function(e,t,r){return this.GA(e,t,r,!0)}},function(e,t){function r(){throw new Error("Can't construct. GenericSet is a mixin.")}e.i=r,r.prototype.KA=!0,r.prototype.YA=function(e){var t=this.Es(this);return t.addEach(e),t},r.prototype.WA=function(e){return this.Es(this.filter(function(t){return e.has(t)}))},r.prototype.zA=function(e){var t=this.Es(this);return t._c(e),t},r.prototype.JA=function(e){var t=this.YA(e),r=this.WA(e);return t.zA(r)},r.prototype.XA=function(e){return+this.delete(e)},r.prototype.cs=function(e,t){var r=this;return e&&"function"==typeof e.reduce&&this.length===e.length&&e.reduce(function(e,i){return e&&r.has(i,t)},!0)},r.prototype.toJSON=function(){return this.toArray()},r.prototype.contains=function(e){return this.has(e)},r.prototype.remove=function(e){return this.delete(e)},r.prototype.toggle=function(e){this.has(e)?this.delete(e):this.add(e)}},function(e,t,r){var i,i;!function(t){e.i=t()}(function(){return function e(t,r,n){function s(a,h){if(!r[a]){if(!t[a]){var c="function"==typeof i&&i;if(!h&&c)return i(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var l=r[a]={i:{}};t[a][0].call(l.i,function(e){var r=t[a][1][e];return s(r||e)},l,l.i,e,t,r,n)}return r[a].i}for(var o="function"==typeof i&&i,a=0;a<n.length;a++)s(n[a]);return s}({1:[function(e,t,r){var i=e("./kernel");r.D=i.D;var n=e("./type_binding");r.ZA=n.ZA;var s=e("./type_binding_scope");r.$A=s.$A},{"./kernel":2,"./type_binding":4,"./type_binding_scope":5}],2:[function(e,t,r){var i=e("./type_binding_scope"),n=e("./lookup"),s=function(){function e(){this.eO=new n.tO}return e.prototype.bind=function(e){this.eO.add(e.rO,e)},e.prototype.iO=function(e){try{this.eO.remove(e)}catch(t){throw new Error("Could not resolve service "+e)}},e.prototype.N=function(){this.eO=new n.tO},e.prototype.resolve=function(e){var t;if(!this.eO.nO(e))return null;t=this.eO.get(e);var r=t[0];if(r.scope===i.$A.sO&&null!==r.sC)return r.sC;var n=this.oO(r.aO);return r.sC=n,n},e.prototype.hO=function(e){var t,r,i,n,s,o;return s=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,o=/([^\s,]+)/g,t=e.toString().replace(s,""),r=t.indexOf("(")+1,i=t.indexOf(")"),n="function"==typeof Map&&-1!==t.indexOf("class")&&-1===t.indexOf("constructor")?null:t.slice(r,i).match(o),null===n&&(n=[]),n},e.prototype.oO=function(e){var t=this.hO(e);if(0===t.length)return new e;for(var r=[],i=null,n=0;n<t.length;n++){var s=t[n];i=this.resolve(s),r.push(i)}return this.cO(e,r)},e.prototype.cO=function(e,t){return new(Function.prototype.bind.apply(e,[null].concat(t)))},e}();r.D=s},{"./lookup":3,"./type_binding_scope":5}],3:[function(e,t,r){var i=function(){function e(e,t){this.key=e,this.value=new Array,this.value.push(t)}return e}(),n=function(){function e(){this.uO=new Array}return e.prototype.lO=function(e){for(var t=-1,r=0;r<this.uO.length;r++){this.uO[r].key===e&&(t=r)}return t},e.prototype.add=function(e,t){if(null===e||void 0===e)throw new Error("Argument Null");if(null===t||void 0===t)throw new Error("Argument Null");var r=this.lO(e);if(-1!==r){var n=this.uO[r];n.key===e&&n.value.push(t)}else this.uO.push(new i(e,t))},e.prototype.get=function(e){if(null===e||void 0===e)throw new Error("Argument Null");var t=this.lO(e);if(-1===t)throw new Error("Key Not Found");var r=this.uO[t];return r.key===e?r.value:void 0},e.prototype.remove=function(e){if(null===e||void 0===e)throw new Error("Argument Null");var t=this.lO(e);if(-1===t)throw new Error("Key Not Found");this.uO.splice(t,1)},e.prototype.nO=function(e){if(null===e||void 0===e)throw new Error("Argument Null");return-1!==this.lO(e)},e}();r.tO=n},{}],4:[function(e,t,r){var i=e("./type_binding_scope"),n=function(){function e(e,t,r){if(this.rO=e,this.aO=t,this.sC=null,void 0===r)this.scope=i.$A.pO;else{if(!i.$A[r]){var n="Invalid scope type "+r;throw new Error(n)}this.scope=r}}return e}();r.ZA=n},{"./type_binding_scope":5}],5:[function(e,t,r){var i;!function(e){e[e.pO=0]="Transient",e[e.sO=1]="Singleton"}(i||(i={})),r.$A=i},{}]},{},[1])(1)})},function(e,t,r){"use strict";var i;!function(e){var t=function(){function e(){}return e}();t.LoggerTimestamp=!0,e.Framework=t;var r=function(){function e(){}return e}();r.MetricSnapshotLogs=0,r.TrackSnapshotLogs=0,e.DebugLogs=r}(i=t.HiveConfig||(t.HiveConfig={})),"undefined"!=typeof window&&(void 0===window.HiveConfig&&(window.HiveConfig={}),window.HiveConfig.Framework=i.Framework,window.HiveConfig.DebugLogs=i.DebugLogs)},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.dO="127.0.0.1",i.vp=8999,i.Ep=8998,i.gp=8899,i.dp=8898,i.fO="//{0}:{1}/?callback={2}{3}hivePluginId={4}",i.gO="//{0}:{1}/?callback={2}",i.yp=!0,i.EO=/((http|https):\/\/(.*):([0-9]*)\/([0-9a-z-]*).ism\/)(.*)/,i.vO="2013.1.1",i.yO="2018.1",t.fp=i},function(e,t,r){"use strict";var i=function(){function e(){this.count=0}return e.prototype.next=function(){return++this.count},e}();t.Counter=i;var n=function(){function e(){this.reset()}return e.prototype.add=function(e){e<=0||(this.TO+=e,this.mO++,e>this.IO&&(this.IO=e),e<this.SO&&(this.SO=e))},e.prototype.min=function(e){void 0===e&&(e=!0);var t=this.SO==Number.POSITIVE_INFINITY?0:this.SO;return e&&this.reset(),t},e.prototype.max=function(e){void 0===e&&(e=!0);var t=this.IO==Number.NEGATIVE_INFINITY?0:this.IO;return e&&this.reset(),t},e.prototype.Nc=function(e){void 0===e&&(e=!0);var t=this.TO;return e&&this.reset(),t},e.prototype.ec=function(e){void 0===e&&(e=!0);var t=this.mO>0?this.TO/this.mO:0;return e&&this.reset(),t},e.prototype.reset=function(){this.SO=Number.POSITIVE_INFINITY,this.IO=Number.NEGATIVE_INFINITY,this.TO=0,this.mO=0},e}();t.RO=n},function(e,t,r){var i;!function(n,s){"use strict";var o="model",a="name",h="type",c="vendor",u="version",l="mobile",p="tablet",d={extend:function(e,t){var r={};for(var i in e)t[i]&&t[i].length%2==0?r[i]=t[i].concat(e[i]):r[i]=e[i];return r},has:function(e,t){return"string"==typeof e&&-1!==t.toLowerCase().indexOf(e.toLowerCase())},wO:function(e){return e.toLowerCase()},bO:function(e){return"string"==typeof e?e.replace(/[^\d\.]/g,"").split(".")[0]:void 0},trim:function(e){return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}},f={CO:function(){for(var e,t,r,i,n,s,o,a=0,h=arguments;a<h.length&&!s;){var c=h[a],u=h[a+1];if(void 0===e){e={};for(i in u)u.hasOwnProperty(i)&&(n=u[i],"object"==typeof n?e[n[0]]=void 0:e[n]=void 0)}for(t=r=0;t<c.length&&!s;)if(s=c[t++].exec(this._O()))for(i=0;i<u.length;i++)o=s[++r],n=u[i],"object"==typeof n&&n.length>0?2==n.length?"function"==typeof n[1]?e[n[0]]=n[1].call(this,o):e[n[0]]=n[1]:3==n.length?"function"!=typeof n[1]||n[1].exec&&n[1].test?e[n[0]]=o?o.replace(n[1],n[2]):void 0:e[n[0]]=o?n[1].call(this,o,n[2]):void 0:4==n.length&&(e[n[0]]=o?n[3].call(this,o.replace(n[1],n[2])):void 0):e[n]=o||void 0;a+=2}return e},str:function(e,t){for(var r in t)if("object"==typeof t[r]&&t[r].length>0){for(var i=0;i<t[r].length;i++)if(d.has(t[r][i],e))return"?"===r?void 0:r}else if(d.has(t[r],e))return"?"===r?void 0:r;return e}},g={Qu:{PO:{version:{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419",QR:"/"}}},AO:{OO:{NO:{DO:["SD","KF"]}},kO:{NO:{LO:"7373KT"},vendor:{MO:"APA",FO:"Sprint"}}},os:{UO:{version:{BO:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2000:"NT 5.0",HO:["NT 5.1","NT 5.2"],xO:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],qO:"ARM"}}}},E={Qu:[[/(opera\smini)\/([\w\.-]+)/i,/(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,/(opera).+version\/([\w\.]+)/i,/(opera)[\/\s]+([\w\.]+)/i],[a,u],[/(opios)[\/\s]+([\w\.]+)/i],[[a,"Opera Mini"],u],[/\s(opr)\/([\w\.]+)/i],[[a,"Opera"],u],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i,/(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,/(?:ms|\()(ie)\s([\w\.]+)/i,/(rekonq)\/([\w\.]+)*/i,/(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs)\/([\w\.-]+)/i],[a,u],[/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i],[[a,"IE"],u],[/(edge)\/((\d+)?[\w\.]+)/i],[a,u],[/(yabrowser)\/([\w\.]+)/i],[[a,"Yandex"],u],[/(comodo_dragon)\/([\w\.]+)/i],[[a,/_/g," "],u],[/(micromessenger)\/([\w\.]+)/i],[[a,"WeChat"],u],[/xiaomi\/miuibrowser\/([\w\.]+)/i],[u,[a,"MIUI Browser"]],[/\swv\).+(chrome)\/([\w\.]+)/i],[[a,/(.+)/,"$1 WebView"],u],[/android.+samsungbrowser\/([\w\.]+)/i,/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i],[u,[a,"Android Browser"]],[/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i,/(qqbrowser)[\/\s]?([\w\.]+)/i],[a,u],[/(uc\s?browser)[\/\s]?([\w\.]+)/i,/ucweb.+(ucbrowser)[\/\s]?([\w\.]+)/i,/juc.+(ucweb)[\/\s]?([\w\.]+)/i],[[a,"UCBrowser"],u],[/(dolfin)\/([\w\.]+)/i],[[a,"Dolphin"],u],[/((?:android.+)crmo|crios)\/([\w\.]+)/i],[[a,"Chrome"],u],[/;fbav\/([\w\.]+);/i],[u,[a,"Facebook"]],[/fxios\/([\w\.-]+)/i],[u,[a,"Firefox"]],[/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i],[u,[a,"Mobile Safari"]],[/version\/([\w\.]+).+?(mobile\s?safari|safari)/i],[u,a],[/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[a,[u,f.str,g.Qu.PO.version]],[/(konqueror)\/([\w\.]+)/i,/(webkit|khtml)\/([\w\.]+)/i],[a,u],[/(navigator|netscape)\/([\w\.-]+)/i],[[a,"Netscape"],u],[/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i,/(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,/(links)\s\(([\w\.]+)/i,/(gobrowser)\/?([\w\.]+)*/i,/(ice\s?browser)\/v?([\w\._]+)/i,/(mosaic)[\/\s]([\w\.]+)/i],[a,u]],GO:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],[["architecture","amd64"]],[/(ia32(?=;))/i],[["architecture",d.wO]],[/((?:i[346]|x)86)[;\)]/i],[["architecture","ia32"]],[/windows\s(ce|mobile);\sppc;/i],[["architecture","arm"]],[/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],[["architecture",/ower/,"",d.wO]],[/(sun4\w)[;\)]/i],[["architecture","sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i],[["architecture",d.wO]]],AO:[[/\((ipad|playbook);[\w\s\);-]+(rim|apple)/i],[o,c,[h,p]],[/applecoremedia\/[\w\.]+ \((ipad)/],[o,[c,"Apple"],[h,p]],[/(apple\s{0,1}tv)/i],[[o,"Apple TV"],[c,"Apple"]],[/(archos)\s(gamepad2?)/i,/(hp).+(touchpad)/i,/(hp).+(tablet)/i,/(kindle)\/([\w\.]+)/i,/\s(nook)[\w\s]+build\/(\w+)/i,/(dell)\s(strea[kpr\s\d]*[\dko])/i],[c,o,[h,p]],[/(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i],[o,[c,"Amazon"],[h,p]],[/(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i],[[o,f.str,g.AO.OO.NO],[c,"Amazon"],[h,l]],[/\((ip[honed|\s\w*]+);.+(apple)/i],[o,c,[h,l]],[/\((ip[honed|\s\w*]+);/i],[o,[c,"Apple"],[h,l]],[/(blackberry)[\s-]?(\w+)/i,/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|huawei|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i,/(hp)\s([\w\s]+\w)/i,/(asus)-?(\w+)/i],[c,o,[h,l]],[/\(bb10;\s(\w+)/i],[o,[c,"BlackBerry"],[h,l]],[/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)/i],[o,[c,"Asus"],[h,p]],[/(sony)\s(tablet\s[ps])\sbuild\//i,/(sony)?(?:sgp.+)\sbuild\//i],[[c,"Sony"],[o,"Xperia Tablet"],[h,p]],[/(?:sony)?(?:(?:(?:c|d)\d{4})|(?:so[-l].+))\sbuild\//i],[[c,"Sony"],[o,"Xperia Phone"],[h,l]],[/\s(ouya)\s/i,/(nintendo)\s([wids3u]+)/i],[c,o,[h,"console"]],[/android.+;\s(shield)\sbuild/i],[o,[c,"Nvidia"],[h,"console"]],[/(playstation\s[34portablevi]+)/i],[o,[c,"Sony"],[h,"console"]],[/(sprint\s(\w+))/i],[[c,f.str,g.AO.kO.vendor],[o,f.str,g.AO.kO.NO],[h,l]],[/(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i],[c,o,[h,p]],[/(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i,/(zte)-(\w+)*/i,/(alcatel|geeksphone|huawei|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i],[c,[o,/_/g," "],[h,l]],[/(nexus\s9)/i],[o,[c,"HTC"],[h,p]],[/(nexus\s6p)/i],[o,[c,"Huawei"],[h,l]],[/(microsoft);\s(lumia[\s\w]+)/i],[c,o,[h,l]],[/[\s\(;](xbox(?:\sone)?)[\s\);]/i],[o,[c,"Microsoft"],[h,"console"]],[/(kin\.[onetw]{3})/i],[[o,/\./g," "],[c,"Microsoft"],[h,l]],[/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i,/mot[\s-]?(\w+)*/i,/(XT\d{3,4}) build\//i,/(nexus\s6)/i],[o,[c,"Motorola"],[h,l]],[/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],[o,[c,"Motorola"],[h,p]],[/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],[[c,d.trim],[o,d.trim],[h,"smarttv"]],[/hbbtv.+maple;(\d+)/i],[[o,/^/,"SmartTV"],[c,"Samsung"],[h,"smarttv"]],[/\(dtv[\);].+(aquos)/i],[o,[c,"Sharp"],[h,"smarttv"]],[/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i,/((SM-T\w+))/i],[[c,"Samsung"],o,[h,p]],[/smart-tv.+(samsung)/i],[c,[h,"smarttv"],o],[/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i,/(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i,/sec-((sgh\w+))/i],[[c,"Samsung"],o,[h,l]],[/sie-(\w+)*/i],[o,[c,"Siemens"],[h,l]],[/(maemo|nokia).*(n900|lumia\s\d+)/i,/(nokia)[\s_-]?([\w-]+)*/i],[[c,"Nokia"],o,[h,l]],[/android\s3\.[\s\w;-]{10}(a\d{3})/i],[o,[c,"Acer"],[h,p]],[/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i],[[c,"LG"],o,[h,p]],[/(lg) netcast\.tv/i],[c,o,[h,"smarttv"]],[/(nexus\s[45])/i,/lg[e;\s\/-]+(\w+)*/i],[o,[c,"LG"],[h,l]],[/android.+(ideatab[a-z0-9\-\s]+)/i],[o,[c,"Lenovo"],[h,p]],[/linux;.+((jolla));/i],[c,o,[h,l]],[/((pebble))app\/[\d\.]+\s/i],[c,o,[h,"wearable"]],[/android.+;\s(glass)\s\d/i],[o,[c,"Google"],[h,"wearable"]],[/android.+(\w+)\s+build\/hm\1/i,/android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,/android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d\w)?)\s+build/i],[[o,/_/g," "],[c,"Xiaomi"],[h,l]],[/android.+a000(1)\s+build/i],[o,[c,"OnePlus"],[h,l]],[/\s(tablet)[;\/]/i,/\s(mobile)(?:[;\/]|\ssafari)/i],[[h,d.wO],c,o]],engine:[[/windows.+\sedge\/([\w\.]+)/i],[u,[a,"EdgeHTML"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i,/(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,/(icab)[\/\s]([23]\.[\d\.]+)/i],[a,u],[/rv\:([\w\.]+).*(gecko)/i],[u,a]],os:[[/microsoft\s(windows)\s(vista|xp)/i],[a,u],[/(windows)\snt\s6\.2;\s(arm)/i,/(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s]+\w)*/i,/(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i],[a,[u,f.str,g.os.UO.version]],[/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],[[a,"Windows"],[u,f.str,g.os.UO.version]],[/\((bb)(10);/i],[[a,"BlackBerry"],u],[/(blackberry)\w*\/?([\w\.]+)*/i,/(tizen)[\/\s]([\w\.]+)/i,/(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i,/linux;.+(sailfish);/i],[a,u],[/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i],[[a,"Symbian"],u],[/\((series40);/i],[a],[/mozilla.+\(mobile;.+gecko.+firefox/i],[[a,"Firefox OS"],u],[/(nintendo|playstation)\s([wids34portablevu]+)/i,/(mint)[\/\s\(]?(\w+)*/i,/(mageia|vectorlinux)[;\s]/i,/(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]+)*/i,/(hurd|linux)\s?([\w\.]+)*/i,/(gnu)\s?([\w\.]+)*/i],[a,u],[/(cros)\s[\w]+\s([\w\.]+\w)/i],[[a,"Chromium OS"],u],[/(sunos)\s?([\w\.]+\d)*/i],[[a,"Solaris"],u],[/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i],[a,u],[/(haiku)\s(\w+)/i],[a,u],[/(ip[honead]+)(?:.*os\s([\w]+)*\slike\smac|;\sopera)/i],[[a,"iOS"],[u,/_/g,"."]],[/(mac\sos\sx)\s?([\w\s\.]+\w)*/i,/(macintosh|mac(?=_powerpc)\s)/i],[[a,"Mac OS"],[u,/_/g,"."]],[/((?:open)?solaris)[\/\s-]?([\w\.]+)*/i,/(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i,/(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i,/(unix)\s?([\w\.]+)*/i],[a,u]]},v=function(e,t){if(!(this instanceof v))return new v(e,t).VO();var r=e||(n&&n.navigator&&n.navigator.userAgent?n.navigator.userAgent:""),i=t?d.extend(E,t):E;return this.jO=function(){var e=f.CO.apply(this,i.Qu);return e.bO=d.bO(e.version),e},this.QO=function(){return f.CO.apply(this,i.GO)},this.KO=function(){return f.CO.apply(this,i.AO)},this.YO=function(){return f.CO.apply(this,i.engine)},this.Od=function(){return f.CO.apply(this,i.os)},this.VO=function(){return{sy:this._O(),Qu:this.jO(),engine:this.YO(),os:this.Od(),AO:this.KO(),GO:this.QO()}},this._O=function(){return r},this.Ad=function(e){return r=e,this},this};v.VERSION="0.7.12",v.WO={zO:a,JO:"major",VERSION:u},v.XO={ZO:"architecture"},v.$O={eN:o,VENDOR:c,tN:h,rN:"console",iN:l,nN:"smarttv",sN:p,oN:"wearable",aN:"embedded"},v.hN={zO:a,VERSION:u},v.cN={zO:a,VERSION:u},void 0!==t?(void 0!==e&&e.i&&(t=e.i=v),t.Pp=v):r(110)?void 0!==(i=function(){return v}.call(t,r,t,e))&&(e.i=i):n.Pp=v;var y=n.uN||n.lN;if(void 0!==y){var T=new v;y.sy=T.VO(),y.sy.get=function(){return T._O()},y.sy.set=function(e){T.Ad(e);var t=T.VO();for(var r in t)y.sy[r]=t[r]}}}("object"==typeof window?window:this)},function(e,t,r){"use strict";var i=r(41),n=r(3);!function(e){var t;!function(e){e[e.off=0]="off",e[e.error=1]="error",e[e.warn=2]="warn",e[e.notice=3]="notice",e[e.info=4]="info",e[e.debug=5]="debug",e[e.trace=6]="trace"}(t=e.pN||(e.pN={}));var r=function(){function e(){this.timestamp=function(){},this.dN=new n,this.level=t.debug,this.timestamp.toString=function(){var e=new Date;return"["+("0"+e.getUTCHours()).slice(-2)+":"+("0"+e.getUTCMinutes()).slice(-2)+":"+("0"+e.getUTCSeconds()).slice(-2)+":"+("00"+e.getUTCMilliseconds()).slice(-3)+"]"},this.logger="undefined"==typeof console?{log:function(){}}:console,this.logger.trace||(this.logger.trace=this.logger.log),this.logger.debug||(this.logger.debug=this.logger.log),this.logger.info||(this.logger.info=this.logger.log),this.logger.warn||(this.logger.warn=this.logger.log),this.logger.error||(this.logger.error=this.logger.log),this.fN(t[this.level])}return e.prototype.fN=function(e,r){i.HiveConfig.Framework.HiveDebugLevel&&void 0!=t[i.HiveConfig.Framework.HiveDebugLevel]?this.level=t[i.HiveConfig.Framework.HiveDebugLevel]:void 0!=t[e]?this.level=t[e]:console.log("Wrong logging level: "+e,t),this.gN(r)},e.prototype.gN=function(e){var r={log:this.EN(this.logger.log,t.error,e),error:this.EN(this.logger.error,t.error,e),warn:this.EN(this.logger.warn,t.warn,e),notice:this.EN(this.logger.info,t.notice,e),info:this.EN(this.logger.info,t.info,e),debug:this.EN(this.logger.debug,t.debug,e),trace:this.EN(this.logger.trace,t.trace,e)};e?this.dN.set(e,r):this.vN=r},e.prototype.EN=function(e,t,r){if(!(this.level>=t))return function(){};try{return i.HiveConfig.Framework.LoggerTimestamp?r?Function.prototype.bind.call(e,console,"S["+r+"] %s",this.timestamp):Function.prototype.bind.call(e,console,"%s",this.timestamp):r?Function.prototype.bind.call(e,console,"S["+r+"]"):Function.prototype.bind.call(e,console)}catch(e){}},e.prototype.log=function(e){return e?(this.dN.has(e)||this.fN(t[this.level],e),this.dN.get(e)):this.vN},e}();e.yN=r}(t.TN||(t.TN={}))},function(e,t,r){"use strict";var i=r(30),n=r(28),s=n.sR,o=n.oR,a=function(){function e(){this.SourceURLParams={},this.testId=null}return e.prototype.mN=function(e){for(var t in e)if("SourceURLParams"===t)for(var r in e[t])this[t][r]=e[t][r];else this[t]=e[t];this.IN()},e.prototype.SN=function(){var e=this.ContentId+this.SiteId+this.CROId+this.SourceURL,t=new s;t.Nv("b6614c3e4cd1d14eed6b39ef2bf6b9a3e3d6dfcd26699d7270d887923bcbf83efb3dadb717c0bafb1d48dce361eb369b7cc46e57405ebfbdd86c3175532fe56cc77f473d345b2cb6feafb5ab0e24f364a3d259f27e4a2fd97468265bddfd3ddd3ac64251db650ca0280af2b2c45e8b1c8f040f2c433ac0a157d2b3fd91517253","010001");var r=o(this.Signature);return t.ZS(e,r)},e.prototype.RN=function(e){this.ticketUrl=e;var t=i.parse(e),r=t.path.split("/").slice(3);if(this.SiteId=r[0],this.CROId=r[1],this.ContentId=r[2],this.wN=r[3],t.query)try{var n=t.query.split("&");for(var s in n){var o=n[s].split(/=(.+)/);this.SourceURLParams[o[0]]=o[1]}}catch(e){}this.bN=e.indexOf("api-test")>-1},e.prototype.up=function(){return this.SiteId},e.prototype.cp=function(){return this.CROId},e.prototype.hp=function(){return this.ContentId},e.prototype.CN=function(){return this.wN},e.prototype._N=function(){return this.SourceURL},e.prototype.PN=function(){if(this.AN=this.SourceURL,void 0!=this.SourceURLParams){var e=new Array;for(var t in this.SourceURLParams)e.push(t+"="+this.SourceURLParams[t]);e.length>0&&this.AN&&(this.AN+=(this.AN.indexOf("?")>0?"&":"?")+e.join("&"))}},e.prototype.IN=function(){var e=r(78);this.sessionId=e.ON()},e.prototype.NN=function(){return this.AN||this.PN(),this.AN},e.prototype.kd=function(){return"["+this.SiteId+"/"+this.CROId+"/"+this.ContentId+"]"},e.prototype.DN=function(){return[this.SiteId,this.CROId,this.ContentId]},e.prototype.kN=function(){return this.SourceURL+"-["+this.SiteId+"/"+this.CROId+"/"+this.ContentId+"]"},e.prototype.toString=function(){return this.kd()},e}();a.LN="^https?://api(?:-test)?.hivestreaming.com/v1/events/(?:wildcard/)?",a.MN="CROId",a.FN="SiteId",a.UN="ContentId",t.BN=a},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.HN=55,i.xN=6e5,i.qN=5,i.GN=5,i.VN=5,i.jN=10,i.QN="dist",i.KN="./scenarios/BrokenUdp",i.YN=null,i.WN=null,i.zN=null,i.JN=!0,i.XN=!0,i.ZN=6e4,t.$N=i;var n=function(){function e(){}return e}();n.eD="BwEmulation",t.tD=n},function(e,t,r){"use strict";function i(e,t,r,s){if(!(this instanceof i))return new i(e,t,r,s);t=t||Object.cs,r=r||Object.Oc,s=s||Function.us,this.ls=t,this.Ac=r,this.ds=s,this.fs=new n(null,function(e,r){return t(e.key,r.key)},function(e,t){return r(e.key,t.key)}),this.length=0,this.addEach(e)}var n=(r(11),r(139)),s=r(12),o=r(52),a=r(13);e.i=i,i.rD=i,Object.addEach(i.prototype,s.prototype),Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),i.prototype.Es=function(e){return new this.constructor(e,this.ls,this.Ac,this.ds)},i.prototype.log=function(e,t,r,i){t=t||this.vs,this.fs.log(e,function(e,r,i){t(e.value,r,i)},r,i)},i.prototype.vs=function(e,t){t(" key: "+e.key),t(" value: "+e.value)}},function(e,t,r){"use strict";var i,n=r(59),s=r(3),o=r(24),a=r(0),h=r(5),c=r(9),u=r(31),l=r(10),p=r(1),d=r(2);!function(e){e[e.mc=0]="PLAYER",e[e.iD=1]="LAN",e[e.nD=2]="SITE"}(i=t.sD||(t.sD={}));var f=function(){function e(){this.oD=!1,this.b_=null,this.aD=-1,this.hD=0}return e}();t.cD=f;var g=function(){function e(){this.loggerId="[Prefetcher] ",this.uD=!0,this.lD=0,this.isActive=!0,this.pD=new s,this.dD=new s}return e.prototype.init=function(e){this.logger=a.Framework.resolve(a.Framework.V.R).log(e.sessionId),this.fD=e.gD,this.ED=e.ED,this.vD=e.vD,this.sC=e.sC,this.yD=e.yD,this.TD=e.TD,this.mD=e.mD,this.ID=e.ID},e.prototype.SD=function(){this.isActive=!0},e.prototype.RD=function(e,t){this.context=e,this.wD=t,this.mD.RD(t)},e.prototype.bD=function(e){return this.dD.has(e)},e.prototype.CD=function(){return this.wD},e.prototype._D=function(e,t,r){var o=this;try{var a=new n;this.dD.forEach(function(e,t){a.add(t)});var h=new n;if(h.addEach(e.keys()),this.wD.PD()){var c=this.wD.PD().bitrate;if(h.add(c),h.forEach(function(e){a.delete(e)}),r){var u=[];a.forEach(function(e){o.dD.has(e)&&o.dD.get(e).AD==i.nD&&(u.push(e),h.add(e))}),u.forEach(function(e){a.delete(e)})}var l=new s;h.forEach(function(t){o.dD.has(t)&&o.dD.get(t).AD==i.nD?l.set(t,i.nD):l.set(t,e.get(t))}),this.OD(a),this.ND(l,t)}}catch(e){p.ErrorMonitor.ve().logError("Error updating the prefetch sessions",this.loggerId,d.hs.jn.kn,e)}},e.prototype.ND=function(e,t){var r=this;e.forEach(function(e,i){0!=i&&r.DD(i,e,t)})},e.prototype.OD=function(e){var t=this;e.forEach(function(e){t.yD.kD(e),t.logger.debug(t.loggerId+"Remove unwanted bitrate "+e),t.dD.delete(e)})},e.prototype.DD=function(e,t,r){this.dD.has(e)?this.LD(e,r):this.dD.has(e)||this.MD(e,t,r)},e.prototype.LD=function(e,t){try{var r=this.dD.get(e);r.type=t,r.type!=i.nD&&(r.aD=-1),this.yD.FD(e,r)}catch(e){p.ErrorMonitor.ve().logError("Error configuring already existing prefetch sessions",this.loggerId,d.hs.jn.Ln,e)}},e.prototype.MD=function(e,t,r){var n=this;try{var s=new f;s.b_=null,s.type=r,s.bitrate=e,s.AD=t,this.dD.set(e,s),this.dD.forEach(function(e,t){n.logger.debug(n.loggerId+"ABT "+t+" S "+i[e.type]+" PREF REASON "+i[e.AD])}),this.yD.FD(e,s)}catch(e){p.ErrorMonitor.ve().logError("Error constructing a new prefetch session",this.loggerId,d.hs.jn.Mn,e)}},e.prototype.UD=function(e){var t=this;if(this.dD.has(e.getBitrate())){var r=this.dD.get(e.getBitrate());r.aD>0&&r.BD&&(r.aD=e.duration-(a.Framework.time()-r.BD)-r.hD,r.hD=50),r.b_=e,this.HD(e.getBitrate()),this.dD.forEach(function(r,n){r&&r.type!=i.mc&&n!=e.getBitrate()&&t.xD(r,n)})}else p.ErrorMonitor.ve().logError("Error retrieving a fragment without having a prefetch session",this.loggerId,d.hs.jn.Fn)},e.prototype.qD=function(e){var t=this.dD.keys(),r=t.indexOf(e);return-1!=r&&t.splice(r,1),t},e.prototype.GD=function(e){var t=this;e.forEach(function(e){var r=t.dD.get(e);r&&r.type!=i.mc&&t.xD(r,r.bitrate)})},e.prototype.xD=function(e,t){if(e.type!=i.mc){var r=this.wD.PD();if(null!=r){var n=this.wD.VD(r.C_,t,c.vc.fc);null==n?(this.logger.debug(this.loggerId+"PREFETCHING "+t+" MISSING METADATA "),this.oD(t)):(e.b_=n,this.HD(n.getBitrate()))}else this.logger.debug(this.loggerId+"PLAYER NOT PLAYING "),this.oD(t)}},e.prototype.jD=function(e){var t=this.dD.get(e);t&&t.oD&&(null!=t.b_?(this.logger.debug(this.loggerId+"RESTART PREFETCHING ON AVAILABLE METADATA"),t.oD=!1,this.HD(t.bitrate)):(t.oD=!1,this.xD(t,e)))},e.prototype.QD=function(e){var t=this;e?this.jD(e):this.dD.forEach(function(e,r){t.jD(r)})},e.prototype.HD=function(e){var t=this.wD.PD();if(t){var r=this.dD.get(e);if(r){if(r.b_&&t.getBitrate()==e){var i=this.KD(r.b_.A_(),e);this.yD.setDelta(i)}this.YD(r)}}else p.ErrorMonitor.ve().logError("Error attempting prefetch before having a player request",this.loggerId,d.hs.jn.Un)},e.prototype.YD=function(e){if(e.b_){var t=this.WD(e.b_);if(null!=t)this.zD(t,e);else{var r=e.bitrate;this.logger.debug(this.loggerId+"PREFETCHING "+r+" STOPPED BECAUSE OF MISSING METADATA "),this.dD.get(r).oD=!0,this.oD(r)}}else e.oD=!0,this.oD(e.bitrate)},e.prototype.zD=function(e,t){var r=this,n=this.JD(e.Zf(),e.getBitrate(),e.A_(),t.type);if(n.XD)try{this.pD.has(e.Zf())&&a.Framework.clearTimeout(this.pD.get(e.Zf()));var s=n.type==o.bf.If,c=1;if(s){var l=Math.max(0,t.aD);c=this.mD.ZD(t.type,e.getBitrate(),e.A_(),l)}this.logger.debug(this.loggerId+"PREFETCHING "+e.url+" CDN PREFETCH "+s+" IN "+c+" MSECS");var f=this.dD.get(e.getBitrate());f.b_=e;var g=a.Framework.setTimeout(function(){r.pD.delete(e.Zf());var s=new u.HiveRequest(r.ED.sessionId);s.url=e.url,f.BD=a.Framework.time(),r.lD=0;var c=r.ED.$D(s,e,r.context,n.type);c&&(c.Gf=t.type==i.nD||t.type==i.iD,s.onerror=s.onload=function(){if(c.Jf()==o.bf.If&&(!s.status||s.status<200||s.status>299)){var t=r.dD.get(e.getBitrate());s=null;var i=t.b_.duration,n=t.b_.duration+h.hh.fa.Zo,u=Math.floor(Math.random()*(n-i))+i;t.aD=u-(a.Framework.time()-t.BD),t.hD=0,r.HD(t.b_.bitrate)}})},c);this.pD.set(e.Zf(),g)}catch(e){p.ErrorMonitor.ve().logError("Error requesting for prefetch",this.loggerId,d.hs.jn.xn,e)}},e.prototype.ek=function(){var e=this;this.pD.forEach(function(t,r){e.logger.debug(e.loggerId+"Clearing delayed prefetch timer id "+t),a.Framework.clearTimeout(t),e.pD.delete(r)}),this.isActive=!1},e.prototype.oD=function(e){this.dD.has(e)&&(this.dD.get(e).oD=!0,this.wD.tk(e))},e.prototype.WD=function(e){try{var t=this.dD.get(e.getBitrate()),r=e,i=this.rk(r);return i&&i.Zf()!=e.Zf()?i:i&&i.Zf()==t.b_.Zf()?e:null}catch(e){return p.ErrorMonitor.ve().logError("Error forwarding to next segment",this.loggerId,d.hs.jn.Bn,e),null}},e.prototype.rk=function(e){if(null==e)return null;var t=this.sC.ik(!0),r=e;if(t)for(;null!=r&&-1!=t.indexOf(r.Zf());)if(!(r=this.wD.nk(r)))return r;return r},e.prototype.JD=function(e,t,r,n){try{var s=this.sk(e),a=s?o.bf.wf:o.bf.If,h=!1;h=n!=i.mc?!this.pD.has(e)||a!=o.bf.If:a==o.bf.wf;var c=this.wD.ak(),u=this.hk(r,t,a),l=n==i.nD;return this.logger.debug(this.loggerId+"PREFETCHING "+o.bf[a]+" (LAN LEADER: "+this.yD.ck()+" SITE LEADER: "+l+") CHECKS FOR "+e+" [HAVES:"+s+" NOTBUFFERING:"+c+" DISTANCE:"+u.valid+"("+u.uk+")]"),{XD:h&&c&&u.valid&&this.isActive,type:a}}catch(e){return p.ErrorMonitor.ve().logError("Error checking if allowed to prefetch",this.loggerId,d.hs.jn.Hn,e),{XD:!1,type:o.bf.If}}},e.prototype.hk=function(e,t,r){try{var i=this.wD.lk(e,t);return i<=this.wD.pk()?{uk:i,valid:!0}:{uk:i,valid:!1}}catch(e){return p.ErrorMonitor.ve().logError("Error checking the player distance",this.loggerId,d.hs.jn.qn,e),{uk:0,valid:!1}}},e.prototype.KD=function(e,t){var r=this.wD.PD();if(null!=r){var i=r.A_();return this.wD.dk(i,t,e,t)}return-1},e.prototype.sk=function(e){if(this.fD.contains(e)){var t=this.fD.fk(e);if(t.length>=h.hh.fa.ta){if(h.hh.fa.ia){var r=[],i=[],n=[],s=this.yD.gk();return t.forEach(function(e){e.Ek.peerInfo.type==l.Tc.W&&r.push(e);var t=e.Ek.peerInfo.internalAs;0!=s&&t&&s==t&&i.push(e),e.Ek.peerInfo.type==l.Tc.yc&&n.push(e)}),r.length>0?!this.uD||!this.vk(r,e):!(!this.yD.ck()&&this.yD.yk()||!(i.length>0))||!(!(n.length>0)||!this.yD.Tk()&&this.yD.mk())}return!0}}return!1},e.prototype.vk=function(e,t){try{if(this.yD.Ik().length>h.hh.fa.la){this.yD.Sk();return e.length==h.hh.fa.ua&&e[0].guid==this.yD.Rk().uuid&&(a.Framework.random()>h.hh.fa.pa&&this.lD<h.hh.fa.da&&(this.logger.debug("SKIP PREFETCH CYCLE "+this.lD+" TO OFFLOAD LEADER"),this.lD++,!0))}return!1}catch(e){return p.ErrorMonitor.ve().logError("Error deciding to offload the leader",this.loggerId,d.hs.jn.Gn,e),!1}},e.prototype.wk=function(e,t){try{e.bk=e.Kf.id,e.Kf=t,this.logger.debug(this.loggerId+"UPGRADE "+o.bf[e.Jf()]+" REQ "+e.Yf+" FOR "+e.zf.Zf()),e.Jf()==o.bf.wf?(e.qf.p2pAgenTrafficSuccessQt=e.Qf,e.Vf?(e.type=o.bf.Rf,this.vD.Ck(e)||(this.logger.debug(this.loggerId+"SET REQUEST TIMED-OUT WAS 0. CDN COMPENSATION"),this.vD._k(e.Pk,"TIMED-OUT"))):(e.type=o.bf.Tf,this.logger.debug(this.loggerId+"THE HIVE REQ "+e.Zf()+" ARRIVED BEFORE THE P2P_PREFETCH INITIALIZED. CHANGE REQUEST TYPE TO "+o.bf[e.Jf()]))):e.Jf()==o.bf.If&&(e.type=o.bf.Tf)}catch(e){p.ErrorMonitor.ve().logError("Error upgrading prefetch",this.loggerId,d.hs.jn.Vn,e)}},e}();t.Ak=g},function(e,t,r){"use strict";function i(e,t,r){if(!(this instanceof i))return new i(e,t,r);var n=this.head=new this.Node;n.next=n,n.Ok=n,this.ls=t||Object.cs,this.ds=r||Function.us,this.length=0,this.addEach(e)}function n(e){this.head=e,this.Nk=e.next}function s(e){this.value=e,this.Ok=null,this.next=null}e.i=i;var o=(r(11),r(12)),a=r(67),h=r(13),c=r(38);i.Dk=i,Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.addEach(i.prototype,h.prototype),Object.addEach(i.prototype,c.prototype),i.prototype.Es=function(e){return new this.constructor(e,this.ls,this.ds)},i.prototype.find=function(e,t,r){t=t||this.ls;for(var i=this.head,n=this.kk(r,i.next);n!==i;){if(t(n.value,e))return n;n=n.next}},i.prototype.Lk=function(e,t,r){t=t||this.ls;for(var i=this.head,n=this.kk(r,i.Ok);n!==i;){if(t(n.value,e))return n;n=n.Ok}},i.prototype.has=function(e,t){return!!this.find(e,t)},i.prototype.get=function(e,t){var r=this.find(e,t);return r?r.value:this.ds(e)},i.prototype.delete=function(e,t){var r=this.Lk(e,t);if(r){if(this.Mk){var i=[],n=[e];this.QA(i,n,r.index)}return r.delete(),this.length--,this.Mk&&(this.Fk(r.next,r.index),this.GA(i,n,r.index)),!0}return!1},i.prototype.XA=function(e,t){t=t||this.ls;for(var r=this.head,i=r.next,n=0;i!==r;)t(e,i.value)&&(i.delete(),n++),i=i.next;return this.length-=n,n},i.prototype.clear=function(){var e,t;this.Mk&&(t=this.toArray(),e=[],this.QA(e,t,0)),this.head.next=this.head.Ok=this.head,this.length=0,this.Mk&&this.GA(e,t,0)},i.prototype.add=function(e){var t=new this.Node(e);return this.Mk&&(t.index=this.length,this.QA([e],[],t.index)),this.head.Uk(t),this.length++,this.Mk&&this.GA([e],[],t.index),!0},i.prototype.push=function(){var e=this.head;if(this.Mk){var t=Array.prototype.slice.call(arguments),r=[],i=this.length;this.QA(t,r,i);var n=this.head.Ok}for(var s=0;s<arguments.length;s++){var o=arguments[s],a=new this.Node(o);e.Uk(a)}this.length+=arguments.length,this.Mk&&(this.Fk(n.next,void 0===n.index?0:n.index+1),this.GA(t,r,i))},i.prototype.unshift=function(){if(this.Mk){var e=Array.prototype.slice.call(arguments),t=[];this.QA(e,t,0)}for(var r=this.head,i=0;i<arguments.length;i++){var n=arguments[i],s=new this.Node(n);r.Bk(s),r=s}this.length+=arguments.length,this.Mk&&(this.Fk(this.head.next,0),this.GA(e,t,0))},i.prototype.pop=function(){var e,t=this.head;if(t.Ok!==t){if(e=t.Ok.value,this.Mk){var r=[],i=[e],n=this.length-1;this.QA(r,i,n)}t.Ok.delete(),this.length--,this.Mk&&this.GA(r,i,n)}return e},i.prototype.shift=function(){var e,t=this.head;if(t.Ok!==t){if(e=t.next.value,this.Mk){var r=[],i=[e];this.QA(r,i,0)}t.next.delete(),this.length--,this.Mk&&(this.Fk(this.head.next,0),this.GA(r,i,0))}return e},i.prototype.Hk=function(){if(this.head!==this.head.next)return this.head.next.value},i.prototype.xk=function(e){this.head!==this.head.next?this.head.next.value=e:this.push(e)},i.prototype.Bc=function(){return this.Hk()},i.prototype.kk=function(e,t){var r=this.head;if("number"==typeof e){var i=e;if(i>=0)for(e=r.next;i&&(i--,(e=e.next)!=r););else for(e=r;i<0&&(i++,(e=e.Ok)!=r););return e}return e||t},i.prototype.slice=function(e,t){var r=[],i=this.head;for(e=this.kk(e,i.next),t=this.kk(t,i);e!==t&&e!==i;)r.push(e.value),e=e.next;return r},i.prototype.splice=function(e,t){return this.qk(e,t,Array.prototype.slice.call(arguments,2))},i.prototype.qk=function(e,t,r){var i=e;e=this.kk(e,this.head),null==t&&(t=1/0),r=Array.from(r);for(var n=[],s=e;t--&&t>=0&&s!==this.head;)n.push(s.value),s=s.next;var o,a;this.Mk&&(o=e===this.head?this.length:e.Ok===this.head?0:e.index,a=e.Ok,this.QA(r,n,o));for(var s=e,h=0,s=e;h<n.length;h++,s=s.next)s.delete();null==i&&s===this.head&&(s=this.head.next);for(var h=0;h<r.length;h++){var c=new this.Node(r[h]);s.Uk(c)}return this.length+=r.length-n.length,this.Mk&&(e===this.head?this.Fk(this.head.next,0):this.Fk(a.next,a.index+1),this.GA(r,n,o)),n},i.prototype.reverse=function(){if(this.Mk){var e=this.toArray(),t=e.reversed();this.QA(t,e,0)}var r=this.head;do{var i=r.next;r.next=r.Ok,r.Ok=i,r=r.next}while(r!==this.head);return this.Mk&&this.GA(t,e,0),this},i.prototype.sort=function(){this.qk(0,this.length,this.Fc())},i.prototype.reduce=function(e,t){for(var r=arguments[2],i=this.head,n=i.next;n!==i;)t=e.call(r,t,n.value,n,this),n=n.next;return t},i.prototype.reduceRight=function(e,t){for(var r=arguments[2],i=this.head,n=i.Ok;n!==i;)t=e.call(r,t,n.value,n,this),n=n.Ok;return t},i.prototype.Fk=function(e,t){for(;e!==this.head;)e.index=t++,e=e.next},i.prototype.Xc=function(){this.head.index=-1,this.Fk(this.head.next,0),this.Mk=!0},i.prototype.Hc=function(){return new n(this.head)},n.prototype.Gk=null,Object.defineProperty(n.prototype,"_iterationObject",{get:function(){return this.Gk||(this.Gk={done:!1,value:null})}}),n.prototype.next=function(){if(this.Nk===this.head)this.Vk.done=!0,this.Vk.value=void 0;else{var e=this.Nk.value;this.Nk=this.Nk.next,this.Vk.value=e}return this.Vk},i.prototype.Node=s,s.prototype.delete=function(){this.Ok.next=this.next,this.next.Ok=this.Ok},s.prototype.Uk=function(e){var t=this.Ok;this.Ok=e,e.Ok=t,t.next=e,e.next=this},s.prototype.Bk=function(e){var t=this.next;this.next=e,e.next=t,t.Ok=e,e.Ok=this}},function(e,t,r){"use strict";function i(e,t){if(!(this instanceof i))return new i(e,t);t=t||Function.us,this.ds=t,this.fs=Object.create(null),this.length=0,this.addEach(e)}var n=(r(11),r(12)),s=r(52),o=r(13);e.i=i,i.jk=i,Object.addEach(i.prototype,n.prototype),Object.addEach(i.prototype,s.prototype),Object.addEach(i.prototype,o.prototype),i.prototype.Es=function(e){return new this.constructor(e,this.ds)},i.prototype.Qk=function(e){if("string"!=typeof e)throw new TypeError("key must be a string but Got "+e)},Object.defineProperty(i.prototype,"$__proto__",{Ah:!0}),Object.defineProperty(i.prototype,"_hasProto",{get:function(){return this.hasOwnProperty("$__proto__")&&void 0!==this.Kk}}),Object.defineProperty(i.prototype,"_protoValue",{get:function(){return this.Yk},set:function(e){this.Yk=e}}),i.prototype.get=function(e,t){return this.Qk(e),"__proto__"===e?this.Wk?this.Kk:arguments.length>1?t:this.ds(e):e in this.fs?this.fs[e]:arguments.length>1?t:this.ds(e)},i.prototype.set=function(e,t){this.Qk(e);var r="__proto__"===e;return(r?this.Wk:e in this.fs)?(this.zk&&this.Jk(e,r?this.Kk:this.fs[e]),r?this.Kk=t:this.fs[e]=t,this.zk&&this.Xk(e,t),!1):(this.zk&&this.Jk(e,void 0),this.length++,r?this.Kk=t:this.fs[e]=t,this.zk&&this.Xk(e,t),!0)},i.prototype.has=function(e){return this.Qk(e),"__proto__"===e?this.Wk:e in this.fs},i.prototype.delete=function(e){return this.Qk(e),"__proto__"===e?!!this.Wk&&(this.zk&&this.Jk(e,this.Kk),this.Kk=void 0,this.length--,this.zk&&this.Xk(e,void 0),!0):e in this.fs&&(this.zk&&this.Jk(e,this.fs[e]),delete this.fs[e],this.length--,this.zk&&this.Xk(e,void 0),!0)},i.prototype.clear=function(){var e;this.Wk&&(this.zk&&this.Jk("__proto__",this.Kk),this.Kk=void 0,this.zk&&this.Xk("__proto__",void 0));for(e in this.fs)this.zk&&this.Jk(e,this.fs[e]),delete this.fs[e],this.zk&&this.Xk(e,void 0);this.length=0},i.prototype.reduce=function(e,t,r){this.Wk&&(t=e.call(r,t,"$__proto__","__proto__",this));var i=this.fs;for(var n in this.fs)t=e.call(r,t,i[n],n,this);return t},i.prototype.reduceRight=function(e,t,r){var i=this,n=this.fs;return t=Object.keys(this.fs).reduceRight(function(t,s){return e.call(r,t,n[s],s,i)},t),this.Wk?e.call(r,t,this.Kk,"__proto__",i):t},i.prototype.Bc=function(){var e;for(e in this.fs)return this.fs[e];return this.Kk},i.prototype.toJSON=function(){return this.Pc()}},function(e,t,r){"use strict";function i(){throw new Error("Can't construct. GenericMap is a mixin.")}function n(e,t){this.key=e,this.value=t}var s=r(36),o=r(101),a=r(13);e.i=i,s.addEach(i.prototype,o.prototype),s.addEach(i.prototype,a.prototype),i.prototype.isMap=!0,i.prototype.addEach=function(e){if(e&&s(e)===e)if("function"==typeof e.forEach)!0===e.isMap?e.forEach(function(e,t){this.set(t,e)},this):e.forEach(function(e){this.set(e[0],e[1])},this);else if("number"==typeof e.length)for(var t=0;t<e.length;t++)this.add(e[t],t);else s.keys(e).forEach(function(t){this.set(t,e[t])},this);else if(e&&"number"==typeof e.length)for(var t=0;t<e.length;t++)this.add(e[t],t);return this},i.prototype.get=function(e,t){var r=this.fs.get(new this.Zk(e));return r?r.value:arguments.length>1?t:this.ds(e)},i.prototype.set=function(e,t){var r=new this.Zk(e,t),i=this.fs.get(r),n=!1;return i?(this.zk&&this.Jk(e,i.value),i.value=t,this.zk&&this.Xk(e,t)):(this.zk&&this.Jk(e,void 0),this.fs.add(r)&&(this.length++,n=!0),this.zk&&this.Xk(e,t)),n},i.prototype.add=function(e,t){return this.set(t,e)},i.prototype.has=function(e){return this.fs.has(new this.Zk(e))},i.prototype.delete=function(e){var t=new this.Zk(e);if(this.fs.has(t)){var r=this.fs.get(t).value;return this.zk&&this.Jk(e,r),this.fs.delete(t),this.length--,this.zk&&this.Xk(e,void 0),!0}return!1},i.prototype.clear=function(){var e;this.zk&&(this.forEach(function(e,t){this.Jk(t,e)},this),e=this.keys()),this.fs.clear(),this.length=0,this.zk&&e.forEach(function(e){this.Xk(e)},this)},i.prototype.reduce=function(e,t,r){return this.fs.reduce(function(t,i){return e.call(r,t,i.value,i.key,this)},t,this)},i.prototype.reduceRight=function(e,t,r){return this.fs.reduceRight(function(t,i){return e.call(r,t,i.value,i.key,this)},t,this)},i.prototype.keys=function(){return this.map(function(e,t){return t})},i.prototype.values=function(){return this.map(Function.identity)},i.prototype.entries=function(){return this.map(function(e,t){return[t,e]})},i.prototype.$k=function(){return this.entries()},i.prototype.cs=function(e,t){return t=t||s.cs,this===e||(e&&"function"==typeof e.every?e.length===this.length&&e.every(function(e,r){return t(this.get(r),e)},this):s.keys(e).length===this.length&&s.keys(e).every(function(r){return t(this.get(r),e[r])},this))},i.prototype.toJSON=function(){return this.entries()},i.prototype.Zk=n,n.prototype.cs=function(e){return s.cs(this.key,e.key)&&s.cs(this.value,e.value)},n.prototype.Oc=function(e){return s.Oc(this.key,e.key)}},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(70),s=r(21),o=r(71),a=r(7),h=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.me=function(e){t.logger=e},t.prototype.send=function(){if(t.logger&&t.logger.debug(this.method+" "+this.url),!this.sessionId){var e=Object.keys(t.ub);e.length>0&&(this.sessionId=t.ub[e[0]])}var r=this,i=new XMLHttpRequest;0===this.url.indexOf("//")&&(this.url=location.protocol+this.url);var o=s.Ip(n.tL.eL,n.tL.dO,n.tL.rL,this.sessionId,encodeURIComponent(this.url));i.open("GET",o),this.responseType&&(i.responseType=this.responseType),i.onreadystatechange=function(){},i.onload=function(){if(4===i.readyState)try{r.responseHeaders=i.getAllResponseHeaders(),r.response=i.response;var e=i.response.byteLength;"arraybuffer"!==i.responseType&&(r.responseText=i.response),r.readyState=4,r.status=i.status,r.dispatchEvent(a.rc.createEvent(ProgressEvent,"progress",{lengthComputable:!0,loaded:e,total:e,currentTarget:r})),r.dispatchEvent(a.rc.createEvent(Event,"readystatechange",{currentTarget:r,bubbles:!1,cancelable:!1})),r.dispatchEvent(a.rc.createEvent(ProgressEvent,"load",{currentTarget:r,bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:e,total:0})),r.dispatchEvent(a.rc.createEvent(ProgressEvent,"loadend",{currentTarget:r,bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:e,total:0}))}catch(e){t.logger&&t.logger.warn(e)}},i.onerror=function(e){t.logger&&t.logger.warn("onError: "+JSON.stringify(e)),r.dispatchEvent(a.rc.createEvent(ErrorEvent,"error",e,r))},i.onabort=function(e){t.logger&&t.logger.warn("onAbort: "+JSON.stringify(e)),r.dispatchEvent(a.rc.createEvent(ProgressEvent,"abort",e,r))},i.send()},t.prototype.abort=function(){},t}(o.pb);t.Zu=h},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(31),s=r(74),o=r(1),a=r(7),h=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.loggerId="[HiveRequestManifest]",t}return i(t,e),t.registerTech=function(e,r){t.iL[r]=e},t.registerComm=function(e,r){t.nL[r]=e},t.prototype.send=function(){if(!this.sessionId){var e=Object.keys(t.nL);e.length>0&&(this.sessionId=t.nL[e[0]])}var r=t.iL[this.sessionId],i=t.nL[this.sessionId];s.sL(r)||s.sL(i)?(o.ErrorMonitor.ve().logError("HiveJS Tech or Comm are not defined",this.loggerId),this.resolve()):(i.logger().debug("Intercepted Manifest Request "+this.url),r.oL(this),i.onActivateSession(this.url))},t.prototype.resolve=function(){var e=this,t=new XMLHttpRequest;t.open("GET",this.url),t.onreadystatechange=function(){4===t.readyState&&(e.response=t.responseText,e.responseText=t.responseText,e.readyState=4,e.status=t.status,e.dispatchEvent(a.rc.createEvent(Event,"readystatechange",{currentTarget:e})),e.dispatchEvent(a.rc.createEvent(ProgressEvent,"onload",{currentTarget:e})),console.debug("Returned Manifest Request "+e.url))},t.send()},t}(n.HiveRequest);h.nL={},h.iL={},t.zu=h},function(e,t,r){"use strict";!function(){var t=r(17),i=t.log,n=t.Wu;e.i.Wu=n,e.i.Vu=t.Vu,e.i.Gu=t.Gu;var s=r(122)||null,o=r(124)||null,a=r(127)||null,h=r(129)||null;switch(n.Qu){case"chrome":if(!s||!s.aL)return void i("Chrome shim is not included in this adapter release.");i("adapter.js shimming chrome."),e.i.hL=s,s.cL(),s.uL(),t.Ku(),s.lL(),s.aL(),s.pL(),s.dL();break;case"firefox":if(!a||!a.aL)return void i("Firefox shim is not included in this adapter release.");i("adapter.js shimming firefox."),e.i.hL=a,a.cL(),t.Ku(),a.lL(),a.aL(),a.pL();break;case"edge":if(!o||!o.aL)return void i("MS edge shim is not included in this adapter release.");i("adapter.js shimming edge."),e.i.hL=o,o.cL(),t.Ku(),o.aL();break;case"safari":if(!h)return void i("Safari shim is not included in this adapter release.");i("adapter.js shimming safari."),e.i.hL=h,h.cL();break;default:i("Unsupported browser!")}}()},function(e,t,r){"use strict";var i=r(32),n=r(4),s=r(18),o=r(21),a=r(130),h=a.HiveComm.Options.fL,c=r(19),u=r(131),l=r(1),p=function(){function e(t,r){this.gL=t,this.options_=new h,void 0!==r[e.EL]&&o.Sp(r[e.EL],this.options_)}return e.prototype.getName=function(){return e.EL},e.prototype.id=function(){return"["+e.EL+"] "},e.prototype.getVersion=function(){return this.gL.getPluginVersion()},e.prototype.vL=function(){return!0},e.prototype.yL=function(){return n.resolve(!0)},e.prototype.initSession=function(e,t){var r=this.TL(e,t.ticket,t.ticket.NN(),t);return s.HiveRequestFactory.registerTech(r.id,this.getName()),n.resolve(r)},e.prototype.mL=function(){return this.options().initTimeout},e.prototype.isActive=function(e,t){var r=t.manifest.toLowerCase().indexOf("/manifest");if(r>-1){var i=t.manifest.substring(0,r);if(e.indexOf(i)>-1)return!0}else if(e==t.manifest)return!0;return!1},e.prototype.ol=function(e,t,r){void 0===r&&(r=!0),e.rl&&(this.gL.logger().debug("[StatsJS] stopping session ["+e.id+"] complete close: "+t),e.rl.xl.Zd(r),e.rl.Bl.IL(),e.rl.Bl.reset(t)),t?i.Hive.Reporting().close(e.id):this.nl(e,!0)},e.prototype.nl=function(e,t){var r=t?c.Ml.IDLE:c.Ml.Ll;this.gL.logger().notice("[HiveComm] client state: "+c.Ml[r]),e.rl&&e.rl.nl(r)},e.prototype.SL=function(e,t){var r=this,i=0;return this.RL<t.Ol&&(i=t.Ol-this.RL,this.RL=t.Ol),e.al().then(function(){e.rl.Ul.wL(i,t.Al),e.rl.Hl.Sd(t.Pl,t.Al,t.Ol),r.bL()}).done(),n.resolve(!0)},e.prototype.CL=function(e,t,r){return e.al().then(function(){e.rl.Hl.wd(e.ticket.sessionId,t,r)}).done(),n.resolve(!0)},e.prototype.bd=function(e,t){return e.al().then(function(){e.rl.Hl.Cd([t])}).done(),n.resolve(!0)},e.prototype.onError=function(e){var t=!0;if(void 0!=this.options().onError)try{t=this.options().onError(e)}catch(e){l.ErrorMonitor.ve().logError("exception in user-defined onError callback",this.id(),e)}return t},e.prototype.onActiveSession=function(e){var t=this;this._L(),e.al().then(function(r){t.PL=r;var i=new u.AL(t.gL.isLive(),t.gL.getStreamProtocol(),e.ticket.NN());t.PL.OL=i,t.PL.Ul.OL=i,t.gL.updatePlayerInfo(t.PL),t.PL.Bl.init(t.PL.Ul,e.id),t.gL.options().testId&&t.PL.Ul.NL(t.gL.options().testId),t.PL.Hl.Xu(e.ticket.sessionId,t.gL.getPlayerSource(),200);var n=t.gL.flushTechEvents();if(n&&n.length>0&&t.PL.Hl.Cd(n),void 0!=t.options_.onActiveSession)try{t.options_.onActiveSession(e.toHiveSession())}catch(e){l.ErrorMonitor.ve().logError("exception in user-defined onActiveSession callback",t.id(),e)}}).done()},e.prototype.DL=function(){},e.prototype.kL=function(){},e.prototype.LL=function(e){this.gL=e},e.prototype.options=function(){return this.options_},e.prototype._L=function(){this.RL=0},e.prototype.TL=function(e,t,r,i){var n=new s.cl(e,t,r,i);return n.ML=!1,n.id=t.sessionId,n},e.prototype.bL=function(){try{var e=this.gL.getExtendedStats();void 0!=e&&(this.PL.Ul.FL.metrics.bitrateUpN+=e.getBitrateSwitchUp(),this.PL.Ul.FL.metrics.bitrateDwnN+=e.getBitrateSwitchDown(),null!=e.getBandwidth()&&(this.PL.Ul.FL.metrics.srcThroughput=e.getBandwidth()),null!=e.getVideoBitrates()&&this.UL(!0,e.getVideoBitrates()),null!=e.getAudioBitrates()&&this.UL(!1,e.getAudioBitrates()))}catch(e){l.ErrorMonitor.ve().logError("Error accounting extended stats",this.id(),e)}},e.prototype.UL=function(e,t){var r=this,i=0,n=0,s=0,o=0;t.forEach(function(t,a){var h=t.success+t.ll;if(i+=h,o+=t.bytes,n+=t.success,s+=t.ll,e){var c=r.PL.Ul.BL(Number(a));r.HL(c,h,t.success,t.ll,t.bytes)}});var a=this.PL.Ul.xL();this.HL(a,i,n,s,o)},e.prototype.HL=function(e,t,r,i,n){e.srcReqN+=t,e.srcRespN+=r,e.srcRespErrN+=i,e.srcRespQt+=n,e.respFallbackN+=r,e.respFallbackErrN+=i},e}();p.EL="StatsJS",t.StatsJS=p},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(58),s=r(142),o=r(9),a=r(34),h=r(31),c=r(0),u=r(1),l=r(2),p=r(143),d=r(150);!function(e){function t(t){return this.qL(t)||-1!=t.indexOf(e.GL)}function r(t){return-1!=t.toLowerCase().indexOf(e.VL.toLowerCase())||-1!=t.toLowerCase().indexOf(e.jL.toLowerCase())}function f(t,r){var i=r.replace("_definst_/","").match(new RegExp(t.replace(".mpd","")+e.QL));return i&&i.length>0}e.KL=1,e.YL=2,e.WL=2e3,e.zL=3e4,e.JL=1e4,e.XL=!0,e.ZL=!0,e.$L=500,e.eM=10,e.DASH_METADATA_MIN_FRAGMENTS=3,e.VL="(format=mpd-time-csf)",e.jL=".mpd",e.QL="_.*.mpd",e.GL=".m4s",e.tM=".ism/",e.rM=t,e.qL=r;var g=function(t){function n(r,i){var n=t.call(this,i)||this;return n.Ag=0,n.iM=!0,n.loggerId="[Dash Context] ",n.ticket=r,n.nM=r._N(),n.sM=new s.oM,n.nM.indexOf(e.jL)>0?n.aM=new p.hM(i.sessionId):n.aM=new d.cM(i.sessionId),n}return i(n,t),n.prototype.Sk=function(){return this.ticket},n.prototype.getStreamProtocol=function(){return StreamProtocol.DASH},n.prototype.uM=function(){return this.nM},n.prototype.lM=function(){return this.aM.lM()},n.prototype.isLive=function(){return this.aM.pM()},n.prototype.dM=function(){return this.sM},n.prototype.ig=function(e){var t=this.Xf(e);if(t==o.vc.fc||t==o.vc.dc)return!0},n.prototype.Xf=function(e){try{if(r(e))return o.vc.gc;if(this.fM(e))return o.vc.Ec;var t=this.aM.gM(e);return null!=t?t.type:-1!=e.indexOf("audio")?o.vc.dc:o.vc.Ec}catch(t){return u.ErrorMonitor.ve().logError("Error getting the entity type based on a url",this.loggerId,l.hs.Yr.Br,{detailedError:t,url:e}),o.vc.Ec}},n.prototype.EM=function(e){var t=o.vc.Ec,r=0,i=0,n=0,s=!0,h=!1,c=0;try{if(t=this.Xf(e),this.fM(e))s=!0;else if(t!=o.vc.gc){var p=this.aM.gM(e);null!=p?(r=p.duration,i=p.bitrate,n=p.id,h=this.ig(e)):(this.tk(),this.logger.warn("could not extract segment info for "+e))}else s=!1;return c=Math.round(r/1e4),new a.N_(e,t,s,n,c,i,h,this.getContextId())}catch(t){return u.ErrorMonitor.ve().logError("Error getting the entity characteristics based on a url",this.loggerId,l.hs.Yr.Hr,{detailedError:t,url:e}),new a.N_(e,o.vc.Ec,!1,0,0,0,!1,this.getContextId())}},n.prototype.nk=function(e){try{var t=e.url,r=this.aM.vM(t);return null!=r?this.EM(r.yM):null}catch(t){return u.ErrorMonitor.ve().logError("Error getting the next entity",this.loggerId,l.hs.Yr.xr,{detailedError:t,url:e.url}),null}},n.prototype.ak=function(){return t.prototype.TM.call(this,e.KL,e.YL)},n.prototype.mM=function(e){try{var t=e.url;t.toLowerCase();return t===this.nM||(!(null==this.aM||!this.aM.fM(t))||!(r(t)&&this.aM.IM!==t&&!f(this.aM.IM,t)))}catch(t){return u.ErrorMonitor.ve().logError("Error identifying if is current context",this.loggerId,l.hs.Yr.qr,{detailedError:t,url:e.url}),!1}},n.prototype.SM=function(e){try{var t=e.RM,r=e.Kf.url,i=this.aM.parse(r,t,e.Kf.internal);e.Kf.responseText=i,e.Kf.response=i}catch(t){u.ErrorMonitor.ve().logError("Error parsing received metadata",this.loggerId,l.hs.Yr.Gr,{detailedError:t,url:e.Kf.url}),e.RM&&(e.Kf.responseText=e.RM,e.Kf.response=e.RM)}try{this.wM.QD()}catch(t){u.ErrorMonitor.ve().logError("Error starting prefetcher after fetching metadata",this.loggerId,l.hs.Yr.Vr,{detailedError:t,url:e.Kf.url})}this.bM()},n.prototype.CM=function(e){var r=this;try{t.prototype.CM.call(this,e),e.Xf()!==o.vc.fc&&e.Xf()!==o.vc.dc||(e.Xf()===o.vc.fc&&this.sM._M(e),this.aM.CM(e).then(function(t){t&&r.bM(),e.Xf()==o.vc.fc&&r.wM.UD(e.zf)}).done())}catch(e){u.ErrorMonitor.ve().logError("Error when received a fragment",this.loggerId,l.hs.Yr.jr,e)}},n.prototype.getContextId=function(){return this.ticket.kN()},n.prototype.PM=function(e,r){var i=e;return i.AM=c.Framework.time(),t.prototype.PM.call(this,i,r)},n.prototype.dk=function(e,t,r,i){return this.aM.dk(e,t,r,i)},n.prototype.fM=function(e){return this.aM.fM(e)},n.prototype.bM=function(){var t=this;try{this.aM.OM?this.aM.OM.NM().then(function(r){if(r)t.iM=!0,t.logger.debug("Protection evaluation: can decrypt");else{var i="Protection evaluation: cannot decrypt ["+(e.XL?"error":"disabled")+"]";e.ZL?(t.iM=!0,t.logger.debug(i+", metadata prefetch enabled")):t.logger.warn(i+", metadata prefetch DISABLED")}}).done():this.logger.debug("Protection evaluation: not encrypted")}catch(t){if(u.ErrorMonitor.ve().logError("Error evaluating the protection",this.loggerId,l.hs.Yr.Qr,t),e.ZL){var r="Protection evaluation: cannot decrypt ["+(e.XL?"error":"disabled")+"]";this.iM=!0,this.logger.debug(r+", metadata prefetch enabled")}}},n.prototype.tk=function(){this.iM&&(null==this.DM&&this.aM.pM()?this.kM():this.logger.debug("DASH PRE-FETCHING METADATA ALREADY SCHEDULED OR NOT LIVE"))},n.prototype.LM=function(){this.iM&&null!=this.DM&&c.Framework.clearTimeout(this.DM)},n.prototype.kM=function(){var t=this,r=void 0!=this.MM?this.MM:0,i=e.WL,n=r+i,s=Math.max(1,n-c.Framework.time()+e.$L);this.logger.debug("DASH PREFETCHING METADATA "+this.aM.IM+" IN "+s),this.DM=c.Framework.setTimeout(function(){t.FM(t.aM.IM,c.Framework.time())},s)},n.prototype.FM=function(e,t){var r=this.MM;if(null==r&&(r=0),r>t)this.kM();else{var i=new h.HiveRequest(this.ticket.sessionId);i.open("GET",e),i.internal=!0,i.send(),this.DM=null,this.MM=c.Framework.time()}},n.prototype.UM=function(e){this.aM.authenticationToken=e},n.prototype.lk=function(e,t){try{var r=this.PD(),i=this.BM(),n=r.A_(),s=this.aM.HM(n,r.getBitrate(),e,t),o=c.Framework.time()-i;return Math.max(0,s-o)}catch(e){return u.ErrorMonitor.ve().logError("Error calculating the distance duration",this.loggerId,l.hs.Yr.Kr,e),0}},n.prototype.xM=function(){return e.JL},n.prototype.VD=function(e,t,r){var i=this.aM.qM(e,t);return null!=i?new a.N_(i.yM,r,!0,e,i.duration,t,!0,this.getContextId()):null},n.prototype.pk=function(){return e.zL},n}(n.GM);e.VM=g}(t.DASH||(t.DASH={}))},function(e,t,r){"use strict";var i=r(48),n=r(34),s=r(0),o=r(140),a=r(9),h=r(24),c=r(49),u=r(5),l=r(2),p=r(1),d=function(){function e(e){this.jM="[VideoContext] ",this.QM=new i,this.logger=s.Framework.resolve(s.Framework.V.R).log(e.sessionId),this.yD=e.yD,this.KM=e.YM,this.WM=e.WM,this.wM=e.zM,this.wM.RD(this,this)}return e.prototype.Sk=function(){return null},e.prototype.JM=function(){return this.wM},e.prototype.TM=function(e,t){try{var r=0,i=0;if(this.QM.length<t)return!0;for(var n=this.QM.keys().reverse(),s=n[0],o=this.QM.get(s).bitrate,a=n.slice(1),h=0;h<a.length;h++){var c=a[h],u=this.QM.get(c),d=u.AM,f=u.bitrate,g=Math.abs(u.AM-s);if(f!=o)return!1;if(g<e){if(++i>=t)return!1}else{if(++r>t)return!0;i=Math.max(0,i-1),s=d,o=f}}return!1}catch(e){return p.ErrorMonitor.ve().logError("Error calculating if the player is in buffering mode",this.jM,l.hs.bi.Si,e),!1}},e.prototype.getContextId=function(){return null},e.prototype.PM=function(e,t){if(this.XM(t)){var r=this.PD();if(r){var i=e.getBitrate(),n=r.getBitrate();i>n?this.KM.ZM(!0):i<n&&this.KM.ZM(!1)}else this.KM.ZM(!0);if(this.QM.length>u.hh.ya.ga){var o=this.QM.keys()[0];this.QM.delete(o)}this.QM.set(s.Framework.time(),e)}return this.$M(e,t)},e.prototype.$M=function(e,t){var r=new o.eF;try{if(this.wM.bD(e.bitrate)){if(this.WM.tF(e.Zf())){r.rF=!0;var i=this.WM.iF(e.Zf());this.nF(t,i,r)}if(this.WM.sF(e.Zf()))for(var n=this.WM.oF(e.Zf()),s=0,a=n;s<a.length;s++){var h=a[s];this.nF(t,h.Jf(),r),r.aF=!0}}else{var u=c.sD.mc;this.yD.ck()&&(u=c.sD.iD),this.wM.DD(e.bitrate,u,u)}return r}catch(e){return p.ErrorMonitor.ve().logError("Error configuring the request directive",this.jM,l.hs.bi.Ri,e),new o.eF}},e.prototype.nF=function(e,t,r){e!=h.bf.If&&e!=h.bf.wf||t!=h.bf.Tf&&t!=h.bf.wf&&t!=h.bf.If||(r.hF=!0)},e.prototype.XM=function(e){return e!=h.bf.wf&&e!=h.bf.If},e.prototype.cF=function(e,t,r){var i=[];try{for(var n=this.WM.oF(t.Zf()),s=0,o=n;s<o.length;s++){var a=o[s];a.Jf()!=h.bf.Tf&&(this.wM.wk(a,e),i.push(a.bk))}return i}catch(e){return p.ErrorMonitor.ve().logError("Error attempting to upgrade prefetch",this.jM,l.hs.bi.wi,e),[]}},e.prototype.uF=function(e){this.WM.uF(e)},e.prototype.lF=function(e,t){this.WM.lF(e,t)},e.prototype.pF=function(e){this.WM.pF(e)},e.prototype.dF=function(e){this.WM.fF(e)},e.prototype.gF=function(e){this.WM.EF()||this.wM.HD(e)},e.prototype.PD=function(){var e=this.QM.keys();return e.length>0?this.QM.get(e[e.length-1]):null},e.prototype.BM=function(){var e=this.QM.keys();if(e.length>0)return e[e.length-1]},e.prototype.vF=function(e){var t=this.yF(e);null!=t&&this.gF(t.bitrate)},e.prototype.yF=function(e){var t=e.fragmentId,r=t.slice(0,t.lastIndexOf("-")),i=r.slice(0,r.lastIndexOf("-")),s=e.getType();return new n.N_(i,s,!0,e.id,e.duration,e.bitrate,!0,this.getContextId())},e.prototype.ak=function(){return!1},e.prototype.dk=function(e,t,r,i){return 0},e.prototype.pk=function(){return 3e4},e.prototype.xM=function(){return 1e4},e.prototype.nk=function(e){return null},e.prototype.VD=function(e,t,r){return null},e.prototype.getStreamProtocol=function(){return null},e.prototype.isLive=function(){return!1},e.prototype.tk=function(e){},e.prototype.LM=function(){},e.prototype.lM=function(){return null},e.prototype.mM=function(e){},e.prototype.dM=function(){},e.prototype.EM=function(e){},e.prototype.SM=function(e){},e.prototype.CM=function(e){e.Xf()===a.vc.fc&&this.lF(e.Zf(),e.$f())},e.prototype.uM=function(){return null},e.prototype.UM=function(e){},e.prototype.lk=function(e,t){return 0},e}();t.GM=d},function(e,t,r){"use strict";function i(e,t,r,s){if(!(this instanceof i))return new i(e,t,r,s);n.call(this,e,t,r,s)}e.i=i;var n=(r(11),r(141)),s=r(39),o=r(13);i.TF=i,i.prototype=Object.create(n.prototype),i.prototype.constructor=i,Object.addEach(i.prototype,s.prototype),Object.addEach(i.prototype,o.prototype),i.prototype.mF=!0,i.prototype.add=function(e){return!this.has(e)&&(n.prototype.add.call(this,e),!0)},i.prototype.reduce=function(e,t){var r=this,i=arguments[2];return this.NT.reduce(function(t,n,s){return e.call(i,t,n,s,r)},t)},i.prototype.reduceRight=function(e,t){var r=this,i=arguments[2];return this.NT.reduceRight(function(t,n,s){return e.call(i,t,n,s,r)},t)}},function(e,t,r){var i=r(33);"undefined"==typeof hive&&(hive={}),void 0===hive.services&&(hive.services={}),void 0===hive.services.protocol&&(hive.services.protocol={}),void 0===hive.services.protocol.IF&&(hive.services.protocol.IF={}),hive.services.protocol.IF.wc={1:"PLAYER",mc:1,2:"P2P_AGENT",Ic:2,3:"PREFETCHER_FIRST_TIER",Sc:3,4:"PREFETCHER_SECOND_TIER",Rc:4},hive.services.protocol.IF.SF={1:"Global",RF:1,2:"InternalAs",wF:2,3:"ExternalAs",bF:3},hive.services.protocol.IF.CF={1:"Internal",_F:1,2:"External",External:2},hive.services.protocol.IF.TrackerPeerStreamInfo=function(e){this.state=null,this.bitrate=null,this.delta=null,e&&(void 0!==e.state&&(this.state=e.state),void 0!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.delta&&(this.delta=e.delta))},hive.services.protocol.IF.TrackerPeerStreamInfo.prototype={},hive.services.protocol.IF.TrackerPeerStreamInfo.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.state=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.I32?this.bitrate=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.I32?this.delta=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerPeerStreamInfo.prototype.write=function(e){e.Hb("TrackerPeerStreamInfo"),null!==this.state&&void 0!==this.state&&(e.xb("state",i.Type.I32,1),e.Vb(this.state),e.Gb()),null!==this.bitrate&&void 0!==this.bitrate&&(e.xb("bitrate",i.Type.I32,2),e.Vb(this.bitrate),e.Gb()),null!==this.delta&&void 0!==this.delta&&(e.xb("delta",i.Type.I32,3),e.Vb(this.delta),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.TrackerPeerInfo=function(e){this.guid=null,this.internalAs=null,this.externalAs=null,this.nat=null,this.bandwidth=null,this.watchingBitrate=null,this.privateIp=null,this.publicIp=null,this.streams=null,this.rankValue=null,this.timestamp=null,this.publicIpString=null,this.privateIpString=null,e&&(void 0!==e.guid&&(this.guid=e.guid),void 0!==e.internalAs&&(this.internalAs=e.internalAs),void 0!==e.externalAs&&(this.externalAs=e.externalAs),void 0!==e.nat&&(this.nat=e.nat),void 0!==e.bandwidth&&(this.bandwidth=e.bandwidth),void 0!==e.watchingBitrate&&(this.watchingBitrate=e.watchingBitrate),void 0!==e.privateIp&&(this.privateIp=e.privateIp),void 0!==e.publicIp&&(this.publicIp=e.publicIp),void 0!==e.streams&&(this.streams=e.streams),void 0!==e.rankValue&&(this.rankValue=e.rankValue),void 0!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.publicIpString&&(this.publicIpString=e.publicIpString),void 0!==e.privateIpString&&(this.privateIpString=e.privateIpString))},hive.services.protocol.IF.TrackerPeerInfo.prototype={},hive.services.protocol.IF.TrackerPeerInfo.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRING?this.guid=e.v_().value:e.Mb(r);break;case 2:r==i.Type.I32?this.internalAs=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.I32?this.externalAs=e.Fb().value:e.Mb(r);break;case 4:r==i.Type.I32?this.nat=e.Fb().value:e.Mb(r);break;case 5:r==i.Type.I32?this.bandwidth=e.Fb().value:e.Mb(r);break;case 6:r==i.Type.I32?this.watchingBitrate=e.Fb().value:e.Mb(r);break;case 7:r==i.Type.STRUCT?(this.privateIp=new InetAddress,this.privateIp.read(e)):e.Mb(r);break;case 8:r==i.Type.STRUCT?(this.publicIp=new InetAddress,this.publicIp.read(e)):e.Mb(r);break;case 9:if(r==i.Type.LIST){var s,o=0;this.streams=[];s=e.a_(),s.h_,o=s.size;for(var a=0;a<o;++a){var h=null;h=new hive.services.protocol.IF.TrackerPeerStreamInfo,h.read(e),this.streams.push(h)}e.c_()}else e.Mb(r);break;case 10:r==i.Type.DOUBLE?this.rankValue=e.E_().value:e.Mb(r);break;case 11:r==i.Type.I64?this.timestamp=e.g_().value:e.Mb(r);break;case 12:r==i.Type.STRING?this.publicIpString=e.Lb().value:e.Mb(r);break;case 13:r==i.Type.STRING?this.privateIpString=e.Lb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerPeerInfo.prototype.write=function(e){if(e.Hb("TrackerPeerInfo"),null!==this.guid&&void 0!==this.guid&&(e.xb("guid",i.Type.STRING,1),e.WC(this.guid),e.Gb()),null!==this.internalAs&&void 0!==this.internalAs&&(e.xb("internalAs",i.Type.I32,2),e.Vb(this.internalAs),e.Gb()),null!==this.externalAs&&void 0!==this.externalAs&&(e.xb("externalAs",i.Type.I32,3),e.Vb(this.externalAs),e.Gb()),null!==this.nat&&void 0!==this.nat&&(e.xb("nat",i.Type.I32,4),e.Vb(this.nat),e.Gb()),null!==this.bandwidth&&void 0!==this.bandwidth&&(e.xb("bandwidth",i.Type.I32,5),e.Vb(this.bandwidth),e.Gb()),null!==this.watchingBitrate&&void 0!==this.watchingBitrate&&(e.xb("watchingBitrate",i.Type.I32,6),e.Vb(this.watchingBitrate),e.Gb()),null!==this.privateIp&&void 0!==this.privateIp&&(e.xb("privateIp",i.Type.STRUCT,7),this.privateIp.write(e),e.Gb()),null!==this.publicIp&&void 0!==this.publicIp&&(e.xb("publicIp",i.Type.STRUCT,8),this.publicIp.write(e),e.Gb()),null!==this.streams&&void 0!==this.streams){e.xb("streams",i.Type.LIST,9),e.HC(i.Type.STRUCT,this.streams.length);for(var t in this.streams)this.streams.hasOwnProperty(t)&&(t=this.streams[t],t.write(e));e.xC(),e.Gb()}null!==this.rankValue&&void 0!==this.rankValue&&(e.xb("rankValue",i.Type.DOUBLE,10),e.YC(this.rankValue),e.Gb()),null!==this.timestamp&&void 0!==this.timestamp&&(e.xb("timestamp",i.Type.I64,11),e.KC(this.timestamp),e.Gb()),null!==this.publicIpString&&void 0!==this.publicIpString&&(e.xb("publicIpString",i.Type.STRING,12),e.qb(this.publicIpString),e.Gb()),null!==this.privateIpString&&void 0!==this.privateIpString&&(e.xb("privateIpString",i.Type.STRING,13),e.qb(this.privateIpString),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.CustomerKey=function(e){this.partnerId=null,this.customerId=null,e&&(void 0!==e.partnerId&&(this.partnerId=e.partnerId),void 0!==e.customerId&&(this.customerId=e.customerId))},hive.services.protocol.IF.CustomerKey.prototype={},hive.services.protocol.IF.CustomerKey.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRING?this.partnerId=e.Lb().value:e.Mb(r);break;case 2:r==i.Type.STRING?this.customerId=e.Lb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.CustomerKey.prototype.write=function(e){e.Hb("CustomerKey"),null!==this.partnerId&&void 0!==this.partnerId&&(e.xb("partnerId",i.Type.STRING,1),e.qb(this.partnerId),e.Gb()),null!==this.customerId&&void 0!==this.customerId&&(e.xb("customerId",i.Type.STRING,2),e.qb(this.customerId),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.TrackerAsQuery=function(e){this.asType=null,this.asn=null,e&&(void 0!==e.asType&&(this.asType=e.asType),void 0!==e.asn&&(this.asn=e.asn))},hive.services.protocol.IF.TrackerAsQuery.prototype={},hive.services.protocol.IF.TrackerAsQuery.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.asType=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.I32?this.asn=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerAsQuery.prototype.write=function(e){e.Hb("TrackerAsQuery"),null!==this.asType&&void 0!==this.asType&&(e.xb("asType",i.Type.I32,1),e.Vb(this.asType),e.Gb()),null!==this.asn&&void 0!==this.asn&&(e.xb("asn",i.Type.I32,2),e.Vb(this.asn),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.TrackerBitrateQuery=function(e){this.bitrate=null,this.asn=null,this.streamState=null,e&&(void 0!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.asn&&(this.asn=e.asn),void 0!==e.streamState&&(this.streamState=e.streamState))},hive.services.protocol.IF.TrackerBitrateQuery.prototype={},hive.services.protocol.IF.TrackerBitrateQuery.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.bitrate=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.STRUCT?(this.asn=new hive.services.protocol.IF.TrackerAsQuery,this.asn.read(e)):e.Mb(r);break;case 3:r==i.Type.I32?this.streamState=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerBitrateQuery.prototype.write=function(e){e.Hb("TrackerBitrateQuery"),null!==this.bitrate&&void 0!==this.bitrate&&(e.xb("bitrate",i.Type.I32,1),e.Vb(this.bitrate),e.Gb()),null!==this.asn&&void 0!==this.asn&&(e.xb("asn",i.Type.STRUCT,2),this.asn.write(e),e.Gb()),null!==this.streamState&&void 0!==this.streamState&&(e.xb("streamState",i.Type.I32,3),e.Vb(this.streamState),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.TrackerRankQuery=function(e){this.rankType=null,this.asQuery=null,e&&(void 0!==e.rankType&&(this.rankType=e.rankType),void 0!==e.asQuery&&(this.asQuery=e.asQuery))},hive.services.protocol.IF.TrackerRankQuery.prototype={},hive.services.protocol.IF.TrackerRankQuery.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.rankType=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.STRUCT?(this.asQuery=new hive.services.protocol.IF.TrackerAsQuery,this.asQuery.read(e)):e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerRankQuery.prototype.write=function(e){e.Hb("TrackerRankQuery"),null!==this.rankType&&void 0!==this.rankType&&(e.xb("rankType",i.Type.I32,1),e.Vb(this.rankType),e.Gb()),null!==this.asQuery&&void 0!==this.asQuery&&(e.xb("asQuery",i.Type.STRUCT,2),this.asQuery.write(e),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.TrackerQuery=function(e){this.random=null,this.asns=null,this.watchers=null,this.streamers=null,this.rankings=null,e&&(void 0!==e.random&&(this.random=e.random),void 0!==e.asns&&(this.asns=e.asns),void 0!==e.watchers&&(this.watchers=e.watchers),void 0!==e.streamers&&(this.streamers=e.streamers),void 0!==e.rankings&&(this.rankings=e.rankings))},hive.services.protocol.IF.TrackerQuery.prototype={},hive.services.protocol.IF.TrackerQuery.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.random=e.Fb().value:e.Mb(r);break;case 2:if(r==i.Type.MAP){var s,o=0;this.asns={};s=e.i_(),s.n_,s.s_,o=s.size;for(var a=0;a<o;++a){a>0&&e.JC.length>e.zb[e.zb.length-1]+1&&e.JC.pop();var h=null,c=null;h=new hive.services.protocol.IF.TrackerAsQuery,h.read(e),c=e.Fb().value,this.asns[h]=c}e.o_()}else e.Mb(r);break;case 3:if(r==i.Type.MAP){var u,l=0;this.watchers={};u=e.i_(),u.n_,u.s_,l=u.size;for(var p=0;p<l;++p){p>0&&e.JC.length>e.zb[e.zb.length-1]+1&&e.JC.pop();var d=null,f=null;d=new hive.services.protocol.IF.TrackerBitrateQuery,d.read(e),f=e.Fb().value,this.watchers[d]=f}e.o_()}else e.Mb(r);break;case 4:if(r==i.Type.MAP){var g,E=0;this.streamers={};g=e.i_(),g.n_,g.s_,E=g.size;for(var v=0;v<E;++v){v>0&&e.JC.length>e.zb[e.zb.length-1]+1&&e.JC.pop();var y=null,T=null;y=new hive.services.protocol.IF.TrackerBitrateQuery,y.read(e),T=e.Fb().value,this.streamers[y]=T}e.o_()}else e.Mb(r);break;case 5:if(r==i.Type.LIST){var m,I=0;this.rankings=[];m=e.a_(),m.h_,I=m.size;for(var S=0;S<I;++S){var R=null;R=e.Fb().value,this.rankings.push(R)}e.c_()}else e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerQuery.prototype.write=function(e){if(e.Hb("TrackerQuery"),null!==this.random&&void 0!==this.random&&(e.xb("random",i.Type.I32,1),e.Vb(this.random),e.Gb()),null!==this.asns&&void 0!==this.asns){e.xb("asns",i.Type.MAP,2),e.UC(i.Type.STRUCT,i.Type.I32,i.Eb(this.asns));for(var t=0;t<this.asns.length;t++){var r=this.asns[t],n=r.key,s=r.value;n.write(e),e.Vb(s)}e.BC(),e.Gb()}if(null!==this.watchers&&void 0!==this.watchers){e.xb("watchers",i.Type.MAP,3),e.UC(i.Type.STRUCT,i.Type.I32,i.Eb(this.watchers));for(var t=0;t<this.watchers.length;t++){var r=this.watchers[t],o=r.key,a=r.value;o.write(e),e.Vb(a)}e.BC(),e.Gb()}if(null!==this.streamers&&void 0!==this.streamers){e.xb("streamers",i.Type.MAP,4),e.UC(i.Type.STRUCT,i.Type.I32,i.Eb(this.streamers));for(var t=0;t<this.streamers.length;t++){var r=this.streamers[t],h=r.key,c=r.value;h.write(e),e.Vb(c)}e.BC(),e.Gb()}if(null!==this.rankings&&void 0!==this.rankings){e.xb("rankings",i.Type.LIST,5),e.HC(i.Type.I32,this.rankings.length);for(var u in this.rankings)this.rankings.hasOwnProperty(u)&&(u=this.rankings[u],e.Vb(u));e.xC(),e.Gb()}e.jb(),e.Qb()},hive.services.protocol.IF.TrackerPeerRankingKey=function(e){this.rankType=null,this.internalAs=null,this.externalAs=null,e&&(void 0!==e.rankType&&(this.rankType=e.rankType),void 0!==e.internalAs&&(this.internalAs=e.internalAs),void 0!==e.externalAs&&(this.externalAs=e.externalAs))},hive.services.protocol.IF.TrackerPeerRankingKey.prototype={},hive.services.protocol.IF.TrackerPeerRankingKey.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.rankType=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.I32?this.internalAs=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.I32?this.externalAs=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerPeerRankingKey.prototype.write=function(e){e.Hb("TrackerPeerRankingKey"),null!==this.rankType&&void 0!==this.rankType&&(e.xb("rankType",i.Type.I32,1),e.Vb(this.rankType),e.Gb()),null!==this.internalAs&&void 0!==this.internalAs&&(e.xb("internalAs",i.Type.I32,2),e.Vb(this.internalAs),e.Gb()),null!==this.externalAs&&void 0!==this.externalAs&&(e.xb("externalAs",i.Type.I32,3),e.Vb(this.externalAs),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.TrackerPeerRanking=function(e){this.key=null,this.ranking=null,this.groupSize=null,this.cumulatedRankValue=null,this.totalOfRankValues=null,e&&(void 0!==e.key&&(this.key=e.key),void 0!==e.ranking&&(this.ranking=e.ranking),void 0!==e.groupSize&&(this.groupSize=e.groupSize),void 0!==e.cumulatedRankValue&&(this.cumulatedRankValue=e.cumulatedRankValue),void 0!==e.totalOfRankValues&&(this.totalOfRankValues=e.totalOfRankValues))},hive.services.protocol.IF.TrackerPeerRanking.prototype={},hive.services.protocol.IF.TrackerPeerRanking.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRUCT?(this.key=new hive.services.protocol.IF.TrackerPeerRankingKey,this.key.read(e)):e.Mb(r);break;case 2:r==i.Type.I32?this.ranking=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.I32?this.groupSize=e.Fb().value:e.Mb(r);break;case 4:r==i.Type.DOUBLE?this.cumulatedRankValue=e.E_().value:e.Mb(r);break;case 5:r==i.Type.DOUBLE?this.totalOfRankValues=e.E_().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerPeerRanking.prototype.write=function(e){e.Hb("TrackerPeerRanking"),null!==this.key&&void 0!==this.key&&(e.xb("key",i.Type.STRUCT,1),this.key.write(e),e.Gb()),null!==this.ranking&&void 0!==this.ranking&&(e.xb("ranking",i.Type.I32,2),e.Vb(this.ranking),e.Gb()),null!==this.groupSize&&void 0!==this.groupSize&&(e.xb("groupSize",i.Type.I32,3),e.Vb(this.groupSize),e.Gb()),null!==this.cumulatedRankValue&&void 0!==this.cumulatedRankValue&&(e.xb("cumulatedRankValue",i.Type.DOUBLE,4),e.YC(this.cumulatedRankValue),e.Gb()),null!==this.totalOfRankValues&&void 0!==this.totalOfRankValues&&(e.xb("totalOfRankValues",i.Type.DOUBLE,5),e.YC(this.totalOfRankValues),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.TrackerRequest=function(e){this.info=null,this.contentId=null,this.query=null,this.streamType=null,this.sessionId=null,this.customerKey=null,e&&(void 0!==e.info&&(this.info=e.info),void 0!==e.contentId&&(this.contentId=e.contentId),void 0!==e.query&&(this.query=e.query),void 0!==e.streamType&&(this.streamType=e.streamType),void 0!==e.sessionId&&(this.sessionId=e.sessionId),void 0!==e.customerKey&&(this.customerKey=e.customerKey))},hive.services.protocol.IF.TrackerRequest.prototype={},hive.services.protocol.IF.TrackerRequest.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRUCT?(this.info=new hive.services.protocol.IF.TrackerPeerInfo,this.info.read(e)):e.Mb(r);break;case 2:r==i.Type.STRING?this.contentId=e.Lb().value:e.Mb(r);break;case 3:r==i.Type.STRUCT?(this.query=new hive.services.protocol.IF.TrackerQuery,this.query.read(e)):e.Mb(r);break;case 4:r==i.Type.I32?this.streamType=e.Fb().value:e.Mb(r);break;case 5:r==i.Type.STRING?this.sessionId=e.Lb().value:e.Mb(r);break;case 6:r==i.Type.STRUCT?(this.customerKey=new hive.services.protocol.IF.CustomerKey,this.customerKey.read(e)):e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerRequest.prototype.write=function(e){e.Hb("TrackerRequest"),null!==this.info&&void 0!==this.info&&(e.xb("info",i.Type.STRUCT,1),this.info.write(e),e.Gb()),null!==this.contentId&&void 0!==this.contentId&&(e.xb("contentId",i.Type.STRING,2),e.qb(this.contentId),e.Gb()),null!==this.query&&void 0!==this.query&&(e.xb("query",i.Type.STRUCT,3),this.query.write(e),e.Gb()),null!==this.streamType&&void 0!==this.streamType&&(e.xb("streamType",i.Type.I32,4),e.Vb(this.streamType),e.Gb()),null!==this.sessionId&&void 0!==this.sessionId&&(e.xb("sessionId",i.Type.STRING,5),e.qb(this.sessionId),e.Gb()),null!==this.customerKey&&void 0!==this.customerKey&&(e.xb("customerKey",i.Type.STRUCT,6),this.customerKey.write(e),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.TrackerResponse=function(e){this.infos=null,this.rankings=null,this.peerInfo=null,this.sessionId=null,e&&(void 0!==e.infos&&(this.infos=e.infos),void 0!==e.rankings&&(this.rankings=e.rankings),void 0!==e.peerInfo&&(this.peerInfo=e.peerInfo),void 0!==e.sessionId&&(this.sessionId=e.sessionId))},hive.services.protocol.IF.TrackerResponse.prototype={},hive.services.protocol.IF.TrackerResponse.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:if(r==i.Type.LIST){var s,o=0;this.infos=[];s=e.a_(),s.h_,o=s.size;for(var a=0;a<o;++a){var h=null;h=new hive.services.protocol.IF.TrackerPeerInfo,h.read(e),this.infos.push(h)}e.c_()}else e.Mb(r);break;case 2:if(r==i.Type.LIST){var c,u=0;this.rankings=[];c=e.a_(),c.h_,u=c.size;for(var l=0;l<u;++l){var p=null;p=new hive.services.protocol.IF.TrackerPeerRanking,p.read(e),this.rankings.push(p)}e.c_()}else e.Mb(r);break;case 3:r==i.Type.STRUCT?(this.peerInfo=new hive.services.protocol.IF.TrackerPeerInfo,this.peerInfo.read(e)):e.Mb(r);break;case 4:r==i.Type.STRING?this.sessionId=e.Lb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.TrackerResponse.prototype.write=function(e){if(e.Hb("TrackerResponse"),null!==this.infos&&void 0!==this.infos){e.xb("infos",i.Type.LIST,1),e.HC(i.Type.STRUCT,this.infos.length);for(var t in this.infos)this.infos.hasOwnProperty(t)&&(t=this.infos[t],t.write(e));e.xC(),e.Gb()}if(null!==this.rankings&&void 0!==this.rankings){e.xb("rankings",i.Type.LIST,2),e.HC(i.Type.STRUCT,this.rankings.length);for(var r in this.rankings)this.rankings.hasOwnProperty(r)&&(r=this.rankings[r],r.write(e));e.xC(),e.Gb()}null!==this.peerInfo&&void 0!==this.peerInfo&&(e.xb("peerInfo",i.Type.STRUCT,3),this.peerInfo.write(e),e.Gb()),null!==this.sessionId&&void 0!==this.sessionId&&(e.xb("sessionId",i.Type.STRING,4),e.qb(this.sessionId),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.PF=function(e){this.timestamp=null,this.contentId=null,this.asType=null,this.asn=null,this.bitrate=null,this.streamState=null,this.rankType=null,e&&(void 0!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.contentId&&(this.contentId=e.contentId),void 0!==e.asType&&(this.asType=e.asType),void 0!==e.asn&&(this.asn=e.asn),void 0!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.streamState&&(this.streamState=e.streamState),void 0!==e.rankType&&(this.rankType=e.rankType))},hive.services.protocol.IF.PF.prototype={},hive.services.protocol.IF.PF.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.timestamp=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.STRING?this.contentId=e.Lb().value:e.Mb(r);break;case 3:r==i.Type.I32?this.asType=e.Fb().value:e.Mb(r);break;case 4:r==i.Type.I32?this.asn=e.Fb().value:e.Mb(r);break;case 5:r==i.Type.I32?this.bitrate=e.Fb().value:e.Mb(r);break;case 6:r==i.Type.I32?this.streamState=e.Fb().value:e.Mb(r);break;case 7:r==i.Type.I32?this.rankType=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.PF.prototype.write=function(e){e.Hb("TrackerStoreIndexKey"),null!==this.timestamp&&void 0!==this.timestamp&&(e.xb("timestamp",i.Type.I32,1),e.Vb(this.timestamp),e.Gb()),null!==this.contentId&&void 0!==this.contentId&&(e.xb("contentId",i.Type.STRING,2),e.qb(this.contentId),e.Gb()),null!==this.asType&&void 0!==this.asType&&(e.xb("asType",i.Type.I32,3),e.Vb(this.asType),e.Gb()),null!==this.asn&&void 0!==this.asn&&(e.xb("asn",i.Type.I32,4),e.Vb(this.asn),e.Gb()),null!==this.bitrate&&void 0!==this.bitrate&&(e.xb("bitrate",i.Type.I32,5),e.Vb(this.bitrate),e.Gb()),null!==this.streamState&&void 0!==this.streamState&&(e.xb("streamState",i.Type.I32,6),e.Vb(this.streamState),e.Gb()),null!==this.rankType&&void 0!==this.rankType&&(e.xb("rankType",i.Type.I32,7),e.Vb(this.rankType),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.AF=function(e){this.guid=null,this.OF=null,this.key=null,e&&(void 0!==e.guid&&(this.guid=e.guid),void 0!==e.OF&&(this.OF=e.OF),void 0!==e.key&&(this.key=e.key))},hive.services.protocol.IF.AF.prototype={},hive.services.protocol.IF.AF.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRING?this.guid=e.v_().value:e.Mb(r);break;case 2:r==i.Type.DOUBLE?this.OF=e.E_().value:e.Mb(r);break;case 3:r==i.Type.STRUCT?(this.key=new hive.services.protocol.IF.TrackerPeerRankingKey,this.key.read(e)):e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.AF.prototype.write=function(e){e.Hb("TrackerStoreRankPeer"),null!==this.guid&&void 0!==this.guid&&(e.xb("guid",i.Type.STRING,1),e.WC(this.guid),e.Gb()),null!==this.OF&&void 0!==this.OF&&(e.xb("rank",i.Type.DOUBLE,2),e.YC(this.OF),e.Gb()),null!==this.key&&void 0!==this.key&&(e.xb("key",i.Type.STRUCT,3),this.key.write(e),e.Gb()),e.jb(),e.Qb()},hive.services.protocol.IF.NF=function(e){this.timestamp=null,this.request=null,e&&(void 0!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.request&&(this.request=e.request))},hive.services.protocol.IF.NF.prototype={},hive.services.protocol.IF.NF.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I64?this.timestamp=e.g_().value:e.Mb(r);break;case 2:r==i.Type.STRUCT?(this.request=new hive.services.protocol.IF.TrackerRequest,this.request.read(e)):e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.services.protocol.IF.NF.prototype.write=function(e){e.Hb("TrackerRequestQueueMessage"),null!==this.timestamp&&void 0!==this.timestamp&&(e.xb("timestamp",i.Type.I64,1),e.KC(this.timestamp),e.Gb()),null!==this.request&&void 0!==this.request&&(e.xb("request",i.Type.STRUCT,2),this.request.write(e),e.Gb()),e.jb(),e.Qb()}},function(e,t,r){"use strict";var i=function(){function e(e,t,r,i,n){this.id=e,this.bitrate=t,this.duration=r,this.uri=i,this.yM=n}return e}();t.DF=i},function(e,t,r){"use strict";var i=r(1),n=function(){function e(e,t,r){this.start=e,this.end=t,this.total=r}return e.prototype.size=function(){var e=this.end-this.start+1;return Number.isInteger(e)||(i.ErrorMonitor.ve().logError("Segment Size is a Float",{size:e}),e=Math.round(e)),0==this.end&&0==this.start?0:e},e.prototype.kF=function(){return 0==this.start&&(this.end==this.total-1||this.end==this.total&&0==this.total)},e.prototype.LF=function(){return this.end==this.total-1||this.end==this.total&&0==this.total},e.prototype.MF=function(e){return e.start<=this.start&&this.start<=e.end},e.prototype.toString=function(){return"R[S="+this.start+",E="+this.end+",T="+this.total+"]"},e}();t.FF=n;var s=function(){function e(){}return e.UF=function(e){return e.split("-")},e.BF=function(e){var t=e.split("=",4),r=t[1].substr(0,t[1].indexOf(",")),i=t[2].substr(0,t[2].indexOf(",")),s=t[3].substr(0,t[3].indexOf("]"));return new n(+r,+i,+s)},e}();t.HF=s},function(e,t){e.i=function(e){return e.xF||(e.qF=function(){},e.GF=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{p:!0,get:function(){return e.o}}),Object.defineProperty(e,"id",{p:!0,get:function(){return e.s}}),e.xF=1),e}},function(e,t){function r(e,t){for(var r=0,i=e.length-1;i>=0;i--){var n=e[i];"."===n?e.splice(i,1):".."===n?(e.splice(i,1),r++):r&&(e.splice(i,1),r--)}if(t)for(;r--;r)e.unshift("..");return e}function i(e,t){if(e.filter)return e.filter(t);for(var r=[],i=0;i<e.length;i++)t(e[i],i,e)&&r.push(e[i]);return r}var n=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,s=function(e){return n.exec(e).slice(1)};t.resolve=function(){for(var e="",t=!1,n=arguments.length-1;n>=-1&&!t;n--){var s=n>=0?arguments[n]:process.VF();if("string"!=typeof s)throw new TypeError("Arguments to path.resolve must be strings");s&&(e=s+"/"+e,t="/"===s.charAt(0))}return e=r(i(e.split("/"),function(e){return!!e}),!t).join("/"),(t?"/":"")+e||"."},t.normalize=function(e){var n=t.jF(e),s="/"===o(e,-1);return e=r(i(e.split("/"),function(e){return!!e}),!n).join("/"),e||n||(e="."),e&&s&&(e+="/"),(n?"/":"")+e},t.jF=function(e){return"/"===e.charAt(0)},t.join=function(){var e=Array.prototype.slice.call(arguments,0);return t.normalize(i(e,function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e}).join("/"))},t.QF=function(e,r){function i(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;r>=0&&""===e[r];r--);return t>r?[]:e.slice(t,r-t+1)}e=t.resolve(e).substr(1),r=t.resolve(r).substr(1);for(var n=i(e.split("/")),s=i(r.split("/")),o=Math.min(n.length,s.length),a=o,h=0;h<o;h++)if(n[h]!==s[h]){a=h;break}for(var c=[],h=a;h<n.length;h++)c.push("..");return c=c.concat(s.slice(a)),c.join("/")},t.KF="/",t.YF=":",t.WF=function(e){var t=s(e),r=t[0],i=t[1];return r||i?(i&&(i=i.substr(0,i.length-1)),r+i):"."},t.zF=function(e,t){var r=s(e)[2];return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},t.JF=function(e){return s(e)[3]};var o="b"==="ab".substr(-1)?function(e,t,r){return e.substr(t,r)}:function(e,t,r){return t<0&&(t=e.length+t),e.substr(t,r)}},function(e,t,r){"use strict";function i(e,t){Array.prototype[e]||Object.defineProperty(Array.prototype,e,{value:t,Ah:!0,l:!0,p:!1})}function n(e,t,r){this.NT=e,this.start=null==t?0:t,this.end=r}var s=(r(66),r(12)),o=r(67),a=r(37);e.i=Array;var h=Array.prototype.splice,c=Array.prototype.slice;Array.empty=[],Object.freeze&&Object.freeze(Array.empty),Array.from=Array.from||function(e){var t=[];return t.addEach(e),t},Array.Mc=function(e){for(var t=[],r=1/0,i=0;i<e.length;i++){var n=e[i];e[i]=n.toArray(),n.length<r&&(r=n.length)}for(var i=0;i<e.length;i++)for(var n=e[i],s=0;s<n.length;s++)s<r&&s in n&&(t[s]=t[s]||[],t[s][i]=n[s]);return t},i("addEach",s.prototype.addEach),i("deleteEach",s.prototype._c),i("toArray",s.prototype.toArray),i("toObject",s.prototype.Pc),i("all",s.prototype.all),i("any",s.prototype.uo),i("min",s.prototype.min),i("max",s.prototype.max),i("sum",s.prototype.Nc),i("average",s.prototype.Dc),i("only",s.prototype.only),i("flatten",s.prototype.kc),i("zip",s.prototype.Lc),i("enumerate",s.prototype.enumerate),i("group",s.prototype.group),i("sorted",s.prototype.Fc),i("reversed",s.prototype.reversed),i("constructClone",function(e){var t=new this.constructor;return t.addEach(e),t}),i("has",function(e,t){return-1!==this.find(e,t)}),i("set",function(e,t){return this[e]=t,!0}),i("add",function(e){return this.push(e),!0}),i("delete",function(e,t){var r=this.find(e,t);return-1!==r&&(this.splice(r,1),!0)}),i("deleteAll",function(e,t){t=t||this.ls||Object.cs;for(var r=0,i=0;i<this.length;)t(e,this[i])?(this.qk(i,1),r++):i++;return r}),i("find",function(e,t){t=t||this.ls||Object.cs;for(var r=0;r<this.length;r++)if(r in this&&t(e,this[r]))return r;return-1}),i("findLast",function(e,t){t=t||this.ls||Object.cs;var r=this.length;do{if(--r in this&&t(this[r],e))return r}while(r>0);return-1}),i("swap",function(e,t,r){var i,n,s,o,a;if(e>this.length&&(this.length=e),void 0!==r){if(i=[e,t],Array.isArray(r)||(r=c.call(r)),s=0,(n=r.length)<1e3){for(s;s<n;s++)i[s+2]=r[s];return h.apply(this,i)}for(a=h.apply(this,i),s;s<n;){for(i=[e+s,0],o=2;o<1002&&s<n;o++,s++)i[o]=r[s];h.apply(this,i)}return a}return void 0!==t?h.call(this,e,t):void 0!==e?h.call(this,e):[]}),i("peek",function(){return this[0]}),i("poke",function(e){this.length>0&&(this[0]=e)}),i("peekBack",function(){if(this.length>0)return this[this.length-1]}),i("pokeBack",function(e){this.length>0&&(this[this.length-1]=e)}),i("one",function(){for(var e in this)if(Object.OA(this,e))return this[e]}),Array.prototype.clear||i("clear",function(){return this.length=0,this}),i("compare",function(e,t){t=t||Object.Oc;var r,i,n,s,a;if(this===e)return 0;if(!e||!Array.isArray(e))return o.prototype.Oc.call(this,e,t);for(i=Math.min(this.length,e.length),r=0;r<i;r++)if(r in this){if(!(r in e))return-1;if(n=this[r],s=e[r],a=t(n,s))return a}else if(r in e)return 1;return this.length-e.length}),i("equals",function(e,t){t=t||Object.cs;var r,i,n=0,s=this.length;if(this===e)return!0;if(!e||!Array.isArray(e))return o.prototype.cs.call(this,e);if(s!==e.length)return!1;for(;n<s;++n)if(n in this){if(!(n in e))return!1;if(r=this[n],i=e[n],!t(r,i))return!1}else if(n in e)return!1;return!0}),i("clone",function(e,t){if(null==e)e=1/0;else if(0===e)return this;if(t=t||new a,t.has(this))return t.get(this);var r=new Array(this.length);t.set(this,r);for(var i in this)r[i]=Object.clone(this[i],e-1,t);return r}),i("iterate",function(e,t){return new n(this,e,t)}),i("Iterator",n),n.prototype.Gk=null,Object.defineProperty(n.prototype,"_iterationObject",{get:function(){return this.Gk||(this.Gk={done:!1,value:null})}}),n.prototype.next=function(){return this.start===(null==this.end?this.NT.length:this.end)?(this.Vk.done=!0,this.Vk.value=void 0):this.Vk.value=this.NT[this.start++],this.Vk}},function(e,t){e.i=Function,Function.us=function(){},Function.identity=function(e){return e},Function.Uc=function(e,t){t=t||Object.Oc,e=e||Function.identity;var r=function(r,i){return t(e(r),e(i))};return r.Oc=t,r.Uc=e,r},Function.get=function(e){return function(t){return Object.get(t,e)}}},function(e,t,r){function i(){throw new Error("Can't construct. GenericOrder is a mixin.")}var n=r(36);e.i=i,i.prototype.cs=function(e,t){if(t=t||this.ls||n.cs,this===e)return!0;if(!e)return!1;return this.length===e.length&&this.Lc(e).every(function(e){return t(e[0],e[1])})},i.prototype.Oc=function(e,t){if(t=t||this.Ac||n.Oc,this===e)return 0;if(!e)return 1;var r=Math.min(this.length,e.length),i=this.Lc(e).reduce(function(e,i,n){return 0===e?n>=r?e:t(i[0],i[1]):e},0);return 0===i?this.length-e.length:i},i.prototype.toJSON=function(){return this.toArray()}},function(e,t,r){"use strict";function i(e,t,r,n){if(!(this instanceof i))return new i(e,t,r,n);t=t||Object.cs,r=r||Object.hash,n=n||Function.us,this.ls=t,this.ps=r,this.ds=n,this.order=new this.XF(void 0,t),this.fs=new this.ZF(void 0,function(e,r){return t(e.value,r.value)},function(e){return r(e.value)}),this.length=0,this.addEach(e)}var n=(r(11),r(50)),s=r(102),o=r(12),a=r(39),h=r(13),c=r(38),u=r(103);e.i=i,i.Set=i,Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.addEach(i.prototype,h.prototype),Object.addEach(i.prototype,c.prototype),Object.defineProperty(i.prototype,"size",o.gs),i.prototype.XF=n,i.prototype.ZF=s,i.prototype.Es=function(e){return new this.constructor(e,this.ls,this.ps,this.ds)},i.prototype.has=function(e){var t=new this.order.Node(e);return this.fs.has(t)},i.prototype.get=function(e,t){if(t)throw new Error("Set#get does not support second argument: equals");var r=new this.order.Node(e);return r=this.fs.get(r),r?r.value:this.ds(e)},i.prototype.add=function(e){var t=new this.order.Node(e);if(!this.fs.has(t)){var r=this.length;return this.Mk&&this.QA([e],[],r),this.order.add(e),t=this.order.head.Ok,this.fs.add(t),this.length++,this.Mk&&this.GA([e],[],r),!0}return!1},i.prototype.delete=function(e,t){if(t)throw new Error("Set#delete does not support second argument: equals");var r=new this.order.Node(e);return!!this.fs.has(r)&&(r=this.fs.get(r),this.Mk&&this.QA([],[e],r.index),this.fs.delete(r),this.order.splice(r,1),this.length--,this.Mk&&this.GA([],[e],r.index),!0)},i.prototype.pop=function(){if(this.length){var e=this.order.head.Ok.value;return this.delete(e),e}},i.prototype.shift=function(){if(this.length){var e=this.order.head.next.value;return this.delete(e),e}},i.prototype.Bc=function(){if(this.length>0)return this.fs.Bc().value},i.prototype.clear=function(){var e;this.Mk&&(e=this.toArray(),this.QA([],e,0)),this.fs.clear(),this.order.clear(),this.length=0,this.Mk&&this.GA([],e,0)},i.prototype.reduce=function(e,t){var r=arguments[2],i=0;return this.order.reduce(function(t,n){return e.call(r,t,n,i++,this)},t,this)},i.prototype.reduceRight=function(e,t){var r=arguments[2],i=this.order,n=this.length-1;return i.reduceRight(function(t,i){return e.call(r,t,i,n--,this)},t,this)},i.prototype.Hc=function(){return this.order.Hc()},i.prototype.values=function(){return new u(this)},i.prototype.log=function(){var e=this.fs;return e.log.apply(e,arguments)},i.prototype.Xc=function(){this.order.Xc()}},function(e,t,r){"use strict";function i(){}e.i=i,i.$F={WA:"+",eU:"-",tU:"+",rU:"+",iU:".",nU:"'",sU:"+",oU:"|"},i.aU={WA:"╋",eU:"━",tU:"┻",rU:"┳",iU:"╭",nU:"╰",sU:"┣",oU:"┃"},i.hU={WA:"╋",eU:"━",tU:"┻",rU:"┳",iU:"┏",nU:"┗",sU:"┣",oU:"┃"}},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.dO="127.0.0.1",i.rL=11983,i.fO="//{0}:{1}/proxy/?callback={2}{3}hivePluginId={4}",i.cU="//{0}:{1}/proxy/{2}/session?manifest={3}",i.eL="//{0}:{1}/proxy/{2}/player?req={3}",i.uU="//{0}:{1}/proxy/{2}/info?{3}",t.tL=i},function(e,t,r){"use strict";var i=r(7),n=r(1),s=function(){function e(e){this.loggerId="[HiveXHR] ",this.DONE=4,this.LOADING=3,this.HEADERS_RECEIVED=2,this.OPENED=1,this.UNSENT=0,this.username=null,this.password=null,this.lU=[],this.responseType="",this.readyState=this.UNSENT,this.status=0,this.async=!0,this.timeout=0,this.events={},e&&(this.sessionId=e)}return e.prototype.addEventListener=function(e,t,r){this.events[e]=this.events[e]||[],this.events[e].push(t)},e.prototype.removeEventListener=function(e,t,r){this.events[e]&&(this.events[e]=this.events[e].filter(function(e){return e!==t}))},e.prototype.dispatchEvent=function(e){var t=this;this.events[e.type]&&this.events[e.type].forEach(function(r){try{"function"==typeof r?r.call(t,e):"function"==typeof r.CL&&r.CL(e)}catch(r){n.ErrorMonitor.ve().logError(t.loggerId+"Error in callback handler '"+e.type+"'",{error:r})}});var r=this["on"+e.type];if("function"==typeof r)try{r.call(this,e)}catch(t){n.ErrorMonitor.ve().logError(this.loggerId+"Error in callback handler '"+e.type+"'",{error:t})}return!1},e.prototype.msCachingEnabled=function(){return void 0!==this.msCaching},e.prototype.overrideMimeType=function(e){this.mimeType=e},e.register=function(t,r){e.ub[t]=r},e.prototype.pU=function(t){this.sessionId||(this.sessionId=e.ub[t])},e.prototype.open=function(e,t,r,n,s){void 0===r&&(r=!0),void 0===n&&(n=null),void 0===s&&(s=null),this.url=t.trim(),this.method=e,this.username=n,this.password=s,this.async=r,this.readyState=this.OPENED;var o=i.rc.createEvent(Event,"readystatechange",{currentTarget:this});this.dispatchEvent(o)},e.prototype.setRequestHeader=function(e,t){if(this.readyState!==this.OPENED)throw new Error("The object's state must be OPENED.");this.lU.push({key:e,value:t})},e.prototype.getResponseHeader=function(e){var t=this.getAllResponseHeaders();if(t){var r=[];return t.split(/[\r\n]+/).forEach(function(e){var t=e.match(/^([^:]+): ?(.+)$/);t&&(r[t[1]]=t[2])}),r[e.toLowerCase()]}return null},e.prototype.getAllResponseHeaders=function(){return this.responseHeaders},e.prototype.onload=function(e){},e.prototype.onloadend=function(e){},e.prototype.onerror=function(e){},e.prototype.onprogress=function(e){},e.prototype.onreadystatechange=function(e){},e.prototype.onabort=function(e){},e.prototype.onloadstart=function(e){},e.prototype.ontimeout=function(e){},e}();s.ub={},s.Ag=0,t.pb=s},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(53),s=r(7),o=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.registerTech=function(e,r){t.iL[r]=e},t.registerComm=function(e,r){t.nL[r]=e},t.prototype.send=function(){if(!this.sessionId){var e=Object.keys(t.nL);e.length>0&&(this.sessionId=t.nL[e[0]])}var r=t.iL[this.sessionId],i=t.nL[this.sessionId];i.logger().debug("Intercepted Manifest Request "+this.url),r.oL(this),i.onActivateSession(this.url)},t.prototype.dU=function(){var e=this,t=new XMLHttpRequest;t.open("GET",this.url),t.onreadystatechange=function(r){4===t.readyState&&(e.response=t.responseText,e.responseText=t.responseText,e.readyState=4,e.status=t.status,e.onreadystatechange(s.rc.createEvent(Event,"readystatechange",r,e)),e.onload(s.rc.createEvent(ProgressEvent,"load",r,e)),console.debug("Returned Manifest Request "+e.url))},t.send()},t.prototype.fU=function(){e.prototype.send.call(this)},t}(n.Zu);o.nL={},o.iL={},t.$u=o},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(15),s=r(0),o=r(32),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.Api=function(){return t.app="JS",s.Framework.resolve(n.qu._u)},t}(o.Hive);t.lb=a},function(e,t,r){function i(e,r){var i={gU:[],EU:s};return arguments.length>=3&&(i.vU=arguments[2]),arguments.length>=4&&(i.yU=arguments[3]),f(r)?i.TU=r:r&&t.mU(i,r),m(i.TU)&&(i.TU=!1),m(i.vU)&&(i.vU=2),m(i.yU)&&(i.yU=!1),m(i.IU)&&(i.IU=!0),i.yU&&(i.EU=n),a(i,e,i.vU)}function n(e,t){var r=i.SU[t];return r?"["+i.yU[r][0]+"m"+e+"["+i.yU[r][1]+"m":e}function s(e,t){return e}function o(e){var t={};return e.forEach(function(e,r){t[e]=!0}),t}function a(e,r,i){if(e.IU&&r&&b(r.Is)&&r.Is!==t.Is&&(!r.constructor||r.constructor.prototype!==r)){var n=r.Is(i,e);return y(n)||(n=a(e,n,i)),n}var s=h(e,r);if(s)return s;var f=Object.keys(r),g=o(f);if(e.TU&&(f=Object.getOwnPropertyNames(r)),w(r)&&(f.indexOf("message")>=0||f.indexOf("description")>=0))return c(r);if(0===f.length){if(b(r)){var E=r.name?": "+r.name:"";return e.EU("[Function"+E+"]","special")}if(I(r))return e.EU(RegExp.prototype.toString.call(r),"regexp");if(R(r))return e.EU(Date.prototype.toString.call(r),"date");if(w(r))return c(r)}var v="",T=!1,m=["{","}"];if(d(r)&&(T=!0,m=["[","]"]),b(r)){v=" [Function"+(r.name?": "+r.name:"")+"]"}if(I(r)&&(v=" "+RegExp.prototype.toString.call(r)),R(r)&&(v=" "+Date.prototype.toUTCString.call(r)),w(r)&&(v=" "+c(r)),0===f.length&&(!T||0==r.length))return m[0]+v+m[1];if(i<0)return I(r)?e.EU(RegExp.prototype.toString.call(r),"regexp"):e.EU("[Object]","special");e.gU.push(r);var S;return S=T?u(e,r,i,g,f):f.map(function(t){return l(e,r,i,g,t,T)}),e.gU.pop(),p(S,v,m)}function h(e,t){if(m(t))return e.EU("undefined","undefined");if(y(t)){var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.EU(r,"string")}return v(t)?e.EU(""+t,"number"):f(t)?e.EU(""+t,"boolean"):g(t)?e.EU("null","null"):void 0}function c(e){return"["+Error.prototype.toString.call(e)+"]"}function u(e,t,r,i,n){for(var s=[],o=0,a=t.length;o<a;++o)O(t,String(o))?s.push(l(e,t,r,i,String(o),!0)):s.push("");return n.forEach(function(n){n.match(/^\d+$/)||s.push(l(e,t,r,i,n,!0))}),s}function l(e,t,r,i,n,s){var o,h,c;if(c=Object.getOwnPropertyDescriptor(t,n)||{value:t[n]},c.get?h=c.set?e.EU("[Getter/Setter]","special"):e.EU("[Getter]","special"):c.set&&(h=e.EU("[Setter]","special")),O(i,n)||(o="["+n+"]"),h||(e.gU.indexOf(c.value)<0?(h=g(r)?a(e,c.value,null):a(e,c.value,r-1),h.indexOf("\n")>-1&&(h=s?h.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+h.split("\n").map(function(e){return"   "+e}).join("\n"))):h=e.EU("[Circular]","special")),m(o)){if(s&&n.match(/^\d+$/))return h;o=JSON.stringify(""+n),o.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=e.EU(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=e.EU(o,"string"))}return o+": "+h}function p(e,t,r){var i=0;return e.reduce(function(e,t){return i++,t.indexOf("\n")>=0&&i++,e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1]:r[0]+t+" "+e.join(", ")+" "+r[1]}function d(e){return Array.isArray(e)}function f(e){return"boolean"==typeof e}function g(e){return null===e}function E(e){return null==e}function v(e){return"number"==typeof e}function y(e){return"string"==typeof e}function T(e){return"symbol"==typeof e}function m(e){return void 0===e}function I(e){return S(e)&&"[object RegExp]"===_(e)}function S(e){return"object"==typeof e&&null!==e}function R(e){return S(e)&&"[object Date]"===_(e)}function w(e){return S(e)&&("[object Error]"===_(e)||e instanceof Error)}function b(e){return"function"==typeof e}function C(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function _(e){return Object.prototype.toString.call(e)}function P(e){return e<10?"0"+e.toString(10):e.toString(10)}function A(){var e=new Date,t=[P(e.getHours()),P(e.getMinutes()),P(e.getSeconds())].join(":");return[e.getDate(),L[e.getMonth()],t].join(" ")}function O(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var N=/%[sdj%]/g;t.format=function(e){if(!y(e)){for(var t=[],r=0;r<arguments.length;r++)t.push(i(arguments[r]));return t.join(" ")}for(var r=1,n=arguments,s=n.length,o=String(e).replace(N,function(e){if("%%"===e)return"%";if(r>=s)return e;switch(e){case"%s":return String(n[r++]);case"%d":return Number(n[r++]);case"%j":try{return JSON.stringify(n[r++])}catch(e){return"[Circular]"}default:return e}}),a=n[r];r<s;a=n[++r])g(a)||!S(a)?o+=" "+a:o+=" "+i(a);return o},t.qF=function(e,r){function i(){if(!n){if(process.RU)throw new Error(r);process.wU?console.trace(r):console.error(r),n=!0}return e.apply(this,arguments)}if(m(global.process))return function(){return t.qF(e,r).apply(this,arguments)};if(!0===process.bU)return e;var n=!1;return i};var D,k={};t.CU=function(e){if(m(D)&&(D=process.Ms._U||""),e=e.toUpperCase(),!k[e])if(new RegExp("\\b"+e+"\\b","i").test(D)){var r=process.PU;k[e]=function(){var i=t.format.apply(t,arguments);console.error("%s %d: %s",e,r,i)}}else k[e]=function(){};return k[e]},t.Is=i,i.yU={bold:[1,22],AU:[3,23],OU:[4,24],inverse:[7,27],NU:[37,39],DU:[90,39],kU:[30,39],blue:[34,39],LU:[36,39],green:[32,39],MU:[35,39],red:[31,39],FU:[33,39]},i.SU={UU:"cyan",number:"yellow",BU:"yellow",undefined:"grey",HU:"bold",string:"green",_m:"magenta",xU:"red"},t.isArray=d,t.Ey=f,t.yy=g,t.sL=E,t.Ty=v,t.my=y,t.qU=T,t.Iy=m,t.GU=I,t.au=S,t.VU=R,t.jU=w,t.vy=b,t.QU=C,t.isBuffer=r(107);var L=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];t.log=function(){console.log("%s - %s",A(),t.format.apply(t,arguments))},t.vb=r(108),t.mU=function(e,t){if(!t||!S(t))return e;for(var r=Object.keys(t),i=r.length;i--;)e[r[i]]=t[r[i]];return e}},function(e,t,r){"use strict";var i=r(18),n=r(3),s=r(33);r(114),r(115);var o=r(0),a=r(8),h=r(27),c=r(23),u=r(19),l=r(14),p=r(1),d=r(18);!function(e){var t=function(){function e(){this.metrics=new hive.snapshots.Metrics,this.KU=new hive.snapshots.Traffic,this.YU=new n,this.WU=new n,this.zU=new n,this.player=new hive.snapshots.Player}return e}();e.JU=t;var r=function(){function t(){this.ticket=null,this.XU=0,this.ZU=0,this.testId=null,this.$U()}return t.prototype.init=function(e,t,r,i){this.logger=o.Framework.resolve(o.Framework.V.R).log(i),this.ud=o.Framework.resolve(a.pc.sc),this.logger.debug("[SNAP] INIT STATS STORE - ID: "+e),this.gd=e,this.ticket=t,this.Vl(r)},t.prototype.NL=function(e){this.testId=e},t.prototype.eB=function(e){this.tB=e},t.prototype.Vl=function(e){this.app=e},t.prototype.rB=function(e){this.yD=e},t.prototype.$U=function(){this.iB=new e.JU,this.gd=null,this.ticket=null,this.reset()},t.prototype.reset=function(){this.FL=new e.JU,this.nB(this.FL.KU),this.sB(this.FL)},t.prototype.nB=function(e){e.reqN=0,e.respFallbackN=0,e.respFallbackErrN=0,e.respP2pN=0,e.reqOtherN=0,e.respFallbackOtherN=0,e.respFallbackOthertErrN=0,e.srcReqN=0,e.srcRespN=0,e.srcRespErrN=0,e.srcReqQt=0,e.srcRespQt=0,e.srcOverQt=0,e.srcOtherReqN=0,e.srcOtherRespN=0,e.srcOtherRespErrN=0,e.srcOtherReqQt=0,e.srcOtherRespQt=0,e.srcOtherOverQt=0,e.p2pSubReqN=0,e.p2pSubRespN=0,e.p2pSubRespPartN=0,e.p2pSubRespErrN=0,e.p2pSubRespExpN=0,e.p2pSubReqQt=0,e.p2pSubRespQt=0,e.p2pDirectQt=0,e.p2pRelayQt=0,e.p2pNatQt=0,e.p2pUdpbQt=0,e.fallAgentRespN=0,e.fallAgentPredHitN=0,e.fallAgentFailedRespN=0,e.fallAgenTrafficSuccessQt=0,e.p2pAgentPredHitN=0,e.p2pAgentPredMissN=0,e.p2pAgentPredPartialHitN=0,e.p2pAgenTrafficSuccessQt=0,e.p2pAgenTrafficFailureQt=0},t.prototype.sB=function(e){e.metrics.videoBufN=0,e.metrics.videoBufQt=0,e.metrics.clientBufferMs=0,e.metrics.lookupNotFound=0,e.metrics.lookupTotal=0,e.metrics.lookupLatency=0,e.metrics.lookupReqAccept=0,e.metrics.lookupReqEstablished=0,e.metrics.lookupFailed=0,e.player.bufferingN=0,e.player.bufferingMs=0},t.prototype.xc=function(e){var t=this;void 0===e&&(e=!0);var r=new hive.snapshots.MetricSnapshot;r.timestamp=o.Framework.time(),r.guid=this.gd,r.sessionId=this.ticket.sessionId,r.eventId=new EventId,r.eventId.partnerId=this.ticket.up(),r.eventId.customerId=this.ticket.cp(),r.eventId.contentId=this.ticket.hp();try{var n=new hive.snapshots.ClientInfo;n.clientType=this.oB();var s=this.app.version.split(".");if(n.majorVersion=parseInt(s[0]),n.minorVersion=parseInt(s[1]),n.patchVersion=parseInt(s[2]),r.client=n,null!=this.testId){var a=new TestInfo;a.testId=this.testId,r.aB=a}}catch(e){this.logger.warn("[SNAP] error setting Snapshot ClientInfo",e)}if(this.yD){var h=new hive.snapshots.AgentInfo;h.firstTierBitrates=this.yD.hB(),h.secondTierBitrates=this.yD.cB(),r.agentInfo=h}r.streamInfo=this.OL.uB(),r.traffic=[];var c=new hive.snapshots.TrafficKey;if(r.traffic.push({key:c,value:this.FL.KU}),this.FL.YU.forEach(function(e,t){var i=new hive.snapshots.TrafficKey;i.bitrate=t,r.traffic.push({key:i,value:e})}),r.metrics=this.FL.metrics,this.tB&&(r.metrics.clientBufferMs=this.tB.min()),r.player=this.FL.player,this.lB){var u=this.lB.pB();this.FL.metrics.prtOutN=u.dB+u.fB,this.FL.metrics.prtInN=u.gB+u.EB;var l=this.lB.vB();l.forEach(function(e,i){t.yB(i,e,r)}),this.FL.zU.filter(function(e,t){return!l.has(t)}).forEach(function(e,i){t.yB(i,e,r)})}return r.connInfo=new hive.snapshots.ConnectivityInfo,e?this.ud.getConnectivityInfo().then(function(e){return r.connInfo.privateIp=i.kl.getPrivateIp(e.getNetworkChanged()),t.TB(t.mB(r))}).fail(function(e){return t.TB(t.mB(r))}):(r.connInfo.privateIp=i.kl.getPrivateIp(this.ud.Md().getNetworkChanged()),this.TB(r))},t.prototype.mB=function(e){return e.connInfo.internalAs=this.XU,e.connInfo.externalAs=this.ZU,e.connInfo.publicIp=this.IB,e},t.prototype.TB=function(e,t){void 0===t&&(t=[]);var r=d.ml(e,"snapshot");return r.length&&p.ErrorMonitor.ve().logError("NaN found in MetricSnapshot","[SNAP]",{keysWithNaN:r,snapshot:e}),t.length=0,t.push.apply(t,r),e},t.prototype.oB=function(){var e;switch(this.app.app){case"JS":e=ClientType.SB;break;case"PROXY":e=ClientType.RB;break;default:e=ClientType.wB}return e},t.prototype.yB=function(e,t,r){var i=this.FL.WU.get(e);t.traffic=i,r.partners||(r.partners=[]);var n=new hive.snapshots.PartnerKey;n.partnerGuid=e,r.partners.push({key:n,value:t})},t.prototype.wL=function(e,t){e>0&&(this.FL.metrics.videoBufN++,this.FL.metrics.videoBufQt+=e,this.FL.player.bufferingN++,this.FL.player.bufferingMs+=e),this.FL.player.playerBufferMs=t},t.prototype.xL=function(){return this.FL.KU},t.prototype.bB=function(){return this.iB.KU},t.prototype.CB=function(e){return this.iB.YU.has(e)||this.iB.YU.set(e,new hive.snapshots.Traffic),this.iB.YU.get(e)},t.prototype.BL=function(e){if(!this.FL.YU.has(e)){var t=new hive.snapshots.Traffic;this.nB(t),this.FL.YU.set(e,t)}return this.FL.YU.get(e)},t.prototype._B=function(){var e=new hive.snapshots.PartnerTraffic;return e.p2pSuccReq=0,e.p2pFailReq=0,e.p2pPartReq=0,e.p2pSuccReceived=0,e.p2pSuccReceivedLow=0,e.p2pFailReceived=0,e.p2pSuccResp=0,e.p2pFailResp=0,e.p2pPartResp=0,e.p2pSuccSent=0,e.p2pSuccSentLow=0,e.p2pFailSent=0,e},t.prototype.PB=function(e,t){return t.WU.has(e)||t.WU.set(e,this._B()),t.WU.get(e)},t.prototype.AB=function(e){return this.PB(e,this.FL)},t.prototype.OB=function(e){return this.PB(e,this.iB)},t.prototype.NB=function(e){this.ud=e},t.prototype.DB=function(e){this.lB=e},t.prototype.Ud=function(e){},t}();e.ZF=r;var f=function(){function e(){this.kB=isNaN(l.HiveConfig.DebugLogs.MetricSnapshotLogs)?0:l.HiveConfig.DebugLogs.MetricSnapshotLogs,this.state=u.Ml.Ll,this.client=o.Framework.resolve(a.pc.G),this.yg=new s.Yb,this.protocol=new s.bC(this.yg)}return e.prototype.init=function(e,t){this.logger=o.Framework.resolve(o.Framework.V.R).log(t),this.logger.debug("[SNAP] INIT CLIENT STATS"),this.fs=e,this.LB()},e.prototype.LB=function(){var e=this;this.MB>-1&&o.Framework.clearInterval(this.MB),this.MB=o.Framework.setInterval(function(){e.snapshot()},h.Gd.qd.PE)},e.prototype.nl=function(e){this.state=e},e.prototype.IL=function(){if(this.fs)return this.snapshot(!1)},e.prototype.reset=function(e){o.Framework.clearInterval(this.MB),this.fs&&(!1===e?this.fs.reset():this.fs.$U())},e.prototype.snapshot=function(e){var t=this;void 0===e&&(e=!0);var r=this.fs.xc(e);e?(this.logger.debug("[SNAP] TAKING SNAPSHOT"),r.then(function(e){return t.forward(e)}).fail(function(e){t.logger.warn("[SNAP] ERROR FORWARDING SNAPSHOT",e)}).finally(function(){t.fs.reset()})):(this.logger.debug("[SNAP] FLUSHING SNAPSHOT"),this.forward(r))},e.prototype.forward=function(e){var t=this;if(this.state===u.Ml.IDLE||this.state===u.Ml.STOP)return void this.logger.debug("[SNAP] not send - state "+u.Ml[this.state]);if(this.client&&this.client.zd()){switch(this.kB){case 0:default:this.logger.debug("[SNAP] SENDING SNAPSHOT");break;case 1:this.logger.debug("[SNAP] SENDING SNAPSHOT "+JSON.stringify(e));break;case 2:this.logger.debug("[SNAP] SENDING SNAPSHOT",e);break;case 3:this.logger.debug("[SNAP] SENDING SNAPSHOT "+JSON.stringify(e),e)}this.protocol.AC("SNAPSHOT",s.gb.ONEWAY,0),e.write(this.protocol),this.protocol.DC();var r=this.yg.pC(),i=this.FB(r,",",4),n=r.slice(i+1,r.length-1),o=new c.Jd(Services.Xd,1,n);this.client.zd().send(o).fail(function(e){t.logger.warn("[SNAP] PROBLEM: ",e)})}},e.prototype.FB=function(e,t,r){return e.split(t,r).join(t).length},e}();e.ql=f}(t.Stats||(t.Stats={}))},function(e,t,r){"use strict";var i=r(4),n=r(30),s=r(116),o=r(0),a=r(27),h=r(23),c=r(6),u=c.he.gh,l=function(){function e(){this.logger=o.Framework.resolve(o.Framework.V.R).log(),this.logger.debug("INIT SERVICE CLIENT")}return e.prototype.init=function(e,t){var r=this;if(this.UB)this.UB.then(function(){var e={partnerId:t.up(),customerId:t.cp(),contentId:t.hp(),secret:t.CN()},i=new h.Jd(Services.BB,1,JSON.stringify(e));r.connection.send(i)});else{var o=i.defer(),c=a.Gd.qd.bE;t.bN&&(u?c=a.Gd.qd.CE:(this.logger.warn("[HiveComm] Error trying to resolve test ticket against production services - use production ticket or test plugin"),o.reject(new Error("test ticket in production"))));var l=new n(c),p=l.Sw({"connection-id":e,partner_id:t.up(),customer_id:t.cp(),content_id:t.hp(),ticket:t.CN()}).toString();this.connection=new s.HB(p,a.Gd.qd.AE,a.Gd.qd.OE,a.Gd.qd.NE),this.connection.xB(function(){r.logger.debug("HIVE SERVICES CONNECTED"),o.resolve(r.connection)}),this.connection.onerror(function(){r.logger.warn("Hive Services Connection failed"),o.reject(r.connection)}),this.UB=o.Ss}return{np:this.connection,Ss:this.UB}},e.prototype.connect=function(){this.connection&&this.connection.connect(!0)},e.prototype.SD=function(e){},e.prototype.zd=function(){return this.connection},e.prototype.close=function(){this.connection&&(this.UB=null,this.connection.close(!1))},e}();t.qB=l},function(e,t,r){"use strict";r(117);var i=r(4),n=r(3),s=r(0),o=r(46),a=function(){function e(e){this.ef=(new Date).getTime(),this.GB=e}return e}(),h=function(){function e(){this.VB=new n,this.logger=(s.Framework.resolve(s.Framework.V.R)||console).log(),this.logger.debug("INIT TICKET RESOLVER")}return e.prototype.resolve=function(e,t,r){var n=this,s=i.defer();return e&&(e.on(Services.BB,0,function(e){n.jB(e)}),e.on(Services.BB,2,function(e){n.jB(e)}),this.VB.set(t,new a(s))),s.Ss},e.prototype.jB=function(e){var t=this,r=(new Date).getTime(),i=JSON.parse(e.msg),n=!1;this.VB.forEach(function(e,s){if(t.QB(s,i)){n=!0;var o=t.KB(s,i);o?(o.ef=e.ef,o.rf=r,e.GB.resolve(o)):e.GB.reject("Ticket verification failed"),t.VB.delete(o)}}),n||this.logger.warn("no pending ticket matching: "+e.msg)},e.prototype.$l=function(e){if(new RegExp("^https?://api(?:-test)?.hivestreaming.com/v1/events/(?:wildcard/)?").test(e)){var t=this.YB();return t.RN(e),t}return null},e.prototype.YB=function(){return new o.BN},e.prototype.QB=function(e,t){return e.up()===t[o.BN.FN]&&e.cp()===t[o.BN.MN]&&e.hp()===t[o.BN.UN]},e.prototype.KB=function(e,t){return e.mN(t),e.SN()?e:null},e}();t.WB=h},function(e,t,r){/*! uuid.js
 * Copyright (c) 2010-2012 Robert Kieffer
 * MIT License - http://opensource.org/licenses/mit-license.php
 */
!function(t){"use strict";function i(e,t,r){var i=t&&r||0,n=0;for(t=t||[],e.toLowerCase().replace(/[0-9a-f]{2}/g,function(e){n<16&&(t[i+n++]=f[e])});n<16;)t[i+n++]=0;return t}function n(e,t){var r=t||0,i=d;return i[e[r++]]+i[e[r++]]+i[e[r++]]+i[e[r++]]+"-"+i[e[r++]]+i[e[r++]]+"-"+i[e[r++]]+i[e[r++]]+"-"+i[e[r++]]+i[e[r++]]+"-"+i[e[r++]]+i[e[r++]]+i[e[r++]]+i[e[r++]]+i[e[r++]]+i[e[r++]]}function s(e,t,r){var i=t&&r||0,s=t||[];e=e||{};var o=null!=e.zB?e.zB:y,a=null!=e.JB?e.JB:(new Date).getTime(),h=null!=e.XB?e.XB:m+1,c=a-T+(h-m)/1e4;if(c<0&&null==e.zB&&(o=o+1&16383),(c<0||a>T)&&null==e.XB&&(h=0),h>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");T=a,m=h,y=o,a+=122192928e5;var u=(1e4*(268435455&a)+h)%4294967296;s[i++]=u>>>24&255,s[i++]=u>>>16&255,s[i++]=u>>>8&255,s[i++]=255&u;var l=a/4294967296*1e4&268435455;s[i++]=l>>>8&255,s[i++]=255&l,s[i++]=l>>>24&15|16,s[i++]=l>>>16&255,s[i++]=o>>>8|128,s[i++]=255&o;for(var p=e.ZB||v,d=0;d<6;d++)s[i+d]=p[d];return t||n(s)}function o(e,t,r){var i=t&&r||0;"string"==typeof e&&(t="binary"===e?new p(16):null,e=null),e=e||{};var s=e.random||(e.$B||a)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,t)for(var o=0;o<16;o++)t[i+o]=s[o];return t||n(s)}var a,h,c,u,l;t?function(){var e=t.crypto||t.msCrypto;if(!a&&e&&e.getRandomValues)try{var r=new Uint8Array(16);u=a=function(){return e.getRandomValues(r),r},a()}catch(e){}if(!a){var i=new Array(16);h=a=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),i[t]=e>>>((3&t)<<3)&255;return i},"undefined"!=typeof console&&console.warn&&console.warn("[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()")}}():function(){try{var e=r(118).eH;c=a=e&&function(){return e(16)},a()}catch(e){}}();for(var p="function"==typeof Buffer?Buffer:Array,d=[],f={},g=0;g<256;g++)d[g]=(g+256).toString(16).substr(1),f[d[g]]=g;var E=a(),v=[1|E[0],E[1],E[2],E[3],E[4],E[5]],y=16383&(E[6]<<8|E[7]),T=0,m=0,I=o;I.tH=s,I.ON=o,I.parse=i,I.rH=n,I.iH=p,I.nH=a,I.sH=h,I.oH=c,I.aH=u,void 0!==e&&e.i?e.i=I:(l=t.uuid,I.wo=function(){return t.uuid=l,I},t.uuid=I)}("undefined"!=typeof window?window:null)},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(4),s=r(78),o=r(0),a=r(27),h=r(119),c=function(){function e(){this.hH="IdentityStore",this.cH="IdentityDB",this.gd=null,this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,o.Framework&&o.Framework.resolve(o.Framework.V.R)?this.logger=o.Framework.resolve(o.Framework.V.R).log():this.logger=console}return e.prototype.uH=function(){var e=this,t=n.defer(),r=indexedDB.open(this.cH);return r.onupgradeneeded=function(){var t=r.result;t.createObjectStore(e.hH,{keyPath:"id"})},r.onsuccess=function(){var e=r.result;t.resolve(e)},r.onerror=function(e){t.reject(e)},t.Ss},e.prototype.Zl=function(){var e=this;if(this.lH)return this.lH;var t=n.defer();if(this.gd)t.resolve(new h.pH(this.gd));else if(a.Gd.Eh&&this.indexedDB){var r=setTimeout(function(){e.logger.warn("[HiveComm] timeout retrieving persistent ID - generating random one"),e.gd=e.dH(),e.logger.debug("[HiveComm] Generated UUID: "+e.gd),t.resolve(new h.pH(e.gd))},4e3);try{var i=this.uH();i.then(function(i){var n=i.transaction(e.hH,"readwrite"),s=n.objectStore(e.hH),o=s.get("MYID");o.onsuccess=function(){if(clearTimeout(r),e.gd)t.resolve(new h.pH(e.gd));else if(null!=o.result&&a.Gd.Eh){var n=o.result.value;e.logger.debug("[HiveComm] Retrieved persistent UUID: "+n),e.gd=n,i.close(),t.resolve(new h.pH(e.gd))}else{var s=e.dH();e.fH(i,s),t.resolve(new h.pH(e.gd))}},o.onerror=function(i){clearTimeout(r),e.gd||(e.logger.warn("[HiveComm] error retrieving persistent UUID: "+i),e.gd=e.dH(),e.logger.debug("[HiveComm] Generated UUID: "+e.gd)),t.resolve(new h.pH(e.gd))}}).fail(function(i){clearTimeout(r),e.gd||(e.logger.warn("[HiveComm] error opening indexedDB - generating random id. Error: "+i),e.gd=e.dH(),e.logger.debug("[HiveComm] Generated UUID: "+e.gd)),t.resolve(new h.pH(e.gd))})}catch(e){this.gd=this.dH(),this.logger.debug("[HiveComm] Persistence error - Generate UUID: "+this.gd,e),t.resolve(new h.pH(this.gd))}}else this.gd=this.dH(),this.logger.debug("[HiveComm] Persistence disabled - Generate UUID: "+this.gd),t.resolve(new h.pH(this.gd));return this.lH=t.Ss,this.lH},e.prototype.fH=function(e,t){var r=this,i=e.transaction(this.hH,"readwrite");i.objectStore(this.hH).put({id:"MYID",value:t}),i.oncomplete=function(){r.logger.debug("[HiveComm] completed UUID persistence"),e.close()},this.logger.debug("[HiveComm] Generated UUID: "+t),this.gd=t},e.prototype.dH=function(){return s.ON()},e}();t.gH=c;var u=function(e){function t(){return e.call(this)||this}return i(t,e),t.prototype.Zl=function(){var t=this;if(this.EH)return this.EH;var r=n.defer();return e.prototype.Zl.call(this).then(function(e){var i=t.dH(),n=e.rp(),s=new h.pH(i,n);r.resolve(s)}).fail(function(e){var i=t.dH(),n=new h.pH(i);r.resolve(n)}),this.EH=r.Ss,this.EH},t}(c);t.vH=u},function(e,t,r){"use strict";var i=function(){function e(){}return e.prototype.yH=function(e){this.hostname=e},e.prototype.getHostName=function(){return this.hostname},e.prototype.TH=function(e){this.mH=e},e.prototype.getNetworkChanged=function(){return this.mH},e}();t.IH=i},function(e,t,r){"use strict";var i=r(4),n=r(0),s=r(8),o=r(120),a=r(1),h=function(){function e(){this.loggerId="[PreloadConnectivityInfoProvider] ",this.connInfo=window.myConnInfo,this.logger=n.Framework.resolve(n.Framework.V.R).log(),this.SH=n.Framework.resolve(s.pc.oc),this.connInfo||a.ErrorMonitor.ve().logError("helper undefined",this.loggerId),this.RH()}return e.prototype.RH=function(){var e=new o.wH;this.SH.TH(e)},e.prototype.Md=function(){return this.SH},e.prototype.getConnectivityInfo=function(){var e=this;if(!this.connInfo)return i.reject("ConnInfo helper undefined");var t=setTimeout(function(){return e.logger.warn(e.loggerId+"Get connectivity info expired"),e.SH?i.resolve(e.SH):i.reject("expired")},2e3);try{return this.connInfo.getConnectivityInfo().then(function(r){return clearTimeout(t),e.SH=r,r}).fail(function(t){return e.logger.debug(e.loggerId+" get connectivity info failed with error 1: ",t),e.SH?e.SH:i.reject(t)})}catch(e){return this.logger.debug(this.loggerId+" get connectivity info failed with error 2:",e),i.reject(e)}},e.prototype.bH=function(e,t,r){},e}();t.CH=h},function(e,t,r){"use strict";var i=function(){function e(){}return e.prototype._H=function(e){this.publicIp=e},e.prototype.getPublicIp=function(){return this.publicIp},e.prototype.PH=function(e){this.AH=e},e.prototype.getMacAddress=function(){return this.AH},e.prototype.OH=function(e){this.nic=e},e.prototype.getNic=function(){return this.nic},e.prototype.NH=function(e){this.nicName=e},e.prototype.getNicName=function(){return this.nicName},e.prototype.DH=function(e){this.privateIp=e},e.prototype.getPrivateIp=function(){return this.privateIp},e.prototype.kH=function(e){this.netmask=e},e.prototype.getNetmask=function(){return this.netmask},e.prototype.LH=function(e){this.MH=e},e.prototype.getCidr=function(){return null},e}();t.FH=i},function(e,t,r){"use strict";var i=r(4),n=r(3),s=r(0),o=r(8),a=r(82),h=r(121),c=r(14),u=r(27),l=r(55),p=function(){function e(){this.UH=null,this.BH=null,this.HH=null,this.xH=null,this.qH=new n,this.publicIp=null,this.GH=[],this.ll=!1,this.VH=null,this.logger=s.Framework.resolve(s.Framework.V.R).log(),this.SH=s.Framework.resolve(o.pc.oc),this.jH=new h.QH,this.KH=[],this.RH(),this.YH()}return e.prototype.RH=function(){var e=new a.FH;this.SH.TH(e)},e.prototype.YH=function(){var e=this;s.Framework.setInterval(function(){e.GH=[],e.KH=[],e.qH=new n,e.publicIp=null,e.WH=null},12e4)},e.prototype.getConnectivityInfo=function(){return this.WH||(this.WH=this.zH()),this.WH},e.prototype.Md=function(){return this.SH},e.prototype.zH=function(){var e=this,t=i.defer();if(this.VH=s.Framework.setTimeout(function(){t.reject({JH:!0,message:"expired"})},4e3),c.HiveConfig.ConnInfo.detectPrivateIP&&this.XH())try{this.UH=new RTCPeerConnection(null),this.HH=this.UH.createDataChannel("sendChannel",{reliable:!1}),this.BH=new RTCPeerConnection(null),this.BH.ondatachannel=function(r){e.xH=r.channel,e.xH.onopen=function(r){"open"===e.xH.readyState&&(e.logger.debug("Collected ips ["+e.qH.keys().join(", ")+"]"),e.BH.close(),e.jH.ZH().then(function(t){e.KH=t,e.logger.debug("Already known matching ips ["+e.KH.join(",")+"]");var r=e.qH.keys();e.KH.forEach(function(t){r.indexOf(t)>0&&(e.GH.push(t),e.qH.delete(t))}),e.qH.keys().forEach(function(t){e.GH.push(t)})}).fail(function(t){e.logger.warn("Get Previous working ips failed with error "+t.message),e.qH.keys().forEach(function(t){e.GH.push(t)})}).finally(function(){e.logger.debug("Final private ip list ["+e.GH.join(",")+"]"),t.resolve(e.$H())}))}},this.UH.onicecandidate=function(r){r.candidate&&e.ex(r.candidate.candidate),!r.candidate||e.BH.addIceCandidate(r.candidate).catch(function(r){t.reject({JH:!0,message:r.message}),s.Framework.clearTimeout(e.VH),console.log("Error: Failure during addIceCandidate()")})},this.BH.onicecandidate=function(r){r.candidate&&e.ex(r.candidate.candidate),!r.candidate||e.UH.addIceCandidate(r.candidate).catch(function(r){t.reject({JH:!0,message:r.message}),s.Framework.clearTimeout(e.VH),console.log("Error: Failure during addIceCandidate()")})},this.UH.createOffer().then(function(t){return e.UH.setLocalDescription(t)}).then(function(){return e.BH.setRemoteDescription(e.UH.localDescription)}).then(function(){return e.BH.createAnswer()}).then(function(t){return e.BH.setLocalDescription(t)}).then(function(){return e.UH.setRemoteDescription(e.BH.localDescription)}).catch(function(r){t.reject({JH:!0,message:r.message}),s.Framework.clearTimeout(e.VH),console.log("Error: Failure creating offer")})}catch(e){t.reject({JH:!0,message:e.message})}else{s.Framework.clearTimeout(this.VH);var r=c.HiveConfig.ConnInfo.detectPrivateIP?"webrtc datachannel not supported":"private IP detection disabled";t.reject({JH:!1,message:r})}return t.Ss},e.prototype.XH=function(){try{return null!=l.Vu&&null!=l.hL&&"function"==typeof new RTCPeerConnection(null,null).createDataChannel}catch(e){return!1}},e.prototype.ex=function(e){var t=/([0-9]{1,3}(\.[0-9]{1,3}){3})/,r=t.exec(e);if(r){var i=r[0];this.qH.set(i,!0)}},e.prototype.$H=function(){var e=new a.FH;return this.GH.length>0&&e.DH(this.GH[0]),this.publicIp&&e._H(this.publicIp),this.SH.TH(e),this.SH},e.prototype.bH=function(e,t,r){if(this.publicIp=e,this.tx(),0===r&&this.GH.length>1)this.GH.shift();else if(u.Gd._h&&0!==r&&-1==this.KH.indexOf(this.GH[0]))this.KH.unshift(this.GH[0]),this.jH.ix(this.KH.slice(0,2));else if(u.Gd._h&&0!==r&&this.KH.indexOf(this.GH[0])>0){var i=this.KH.indexOf(this.GH[0]);this.KH=this.KH.splice(i,1),this.KH.unshift(this.GH[0]),this.jH.ix(this.KH.slice(0,2))}this.$H()},e.prototype.tx=function(){var e=this.GH.indexOf(this.publicIp);e>-1&&this.GH.splice(e,1)},e}();t.nx=p},function(e,t,r){"use strict";var i=r(7),n=r(24),s=r(9),o=r(0),a=r(5),h=r(2),c=r(1),u=function(){function e(){this.loggerId="[TIMER HANDLER] ",this.sx=new i.rc.Vh,this.ox=new i.rc.Vh,this.logger=o.Framework.resolve(o.Framework.V.R).log()}return e.prototype.ax=function(e,t){try{var r=0,i=-1,s=e.zf.duration;this.sx.kh()?i=Math.max(10,this.sx.Bh(t)):this.ox.kh()&&(i=Math.max(10,this.ox.Bh(t))),r=i>-1?Math.max(0,s-i*a.hh.Qo.jo):s/2,e.type==n.bf.wf&&(r*=2);var o=Math.max(this.hx(),r);return this.logger.debug("TIMER DETAILS duration: "+s+" left: "+t+" downTime: "+i+" fallAvg: "+this.sx.Gh()+" timer: "+o),o}catch(e){return c.ErrorMonitor.ve().logError("Error calculating the p2p timeout",this.loggerId,h.hs.Ii.Ti,e),0}},e.prototype.ux=function(e,t){return 5e3},e.prototype.lx=function(e){try{return this.sx.kh()?Math.min(this.sx.Bh(e),this.px()):this.gx()}catch(e){return c.ErrorMonitor.ve().logError("Error calculating the delivery delay",this.loggerId,h.hs.Ii.mi,e),this.gx()}},e.prototype._M=function(e){if(e.Xf()===s.vc.fc)switch(e.Jf()){case n.bf.mf:case n.bf.Tf:case n.bf.If:this.sx.Uh(e.ag());break;case n.bf.Rf:case n.bf.wf:this.ox.Uh(e.ag())}},e.prototype.hx=function(){return e.Ex},e.prototype.gx=function(){return e.vx},e.prototype.px=function(){return e.yx},e}();u.Ex=500,u.yx=1500,u.vx=500,t.Tx=u},function(e,t,r){"use strict";var i=r(3),n=r(48);r(144),r(146);var s=r(86),o=r(0),a=r(147),h=r(9),c=r(61),u=r(148),l=r(149),p=r(57),d=r(14),f=r(1),g=r(2),E=function(){function e(e){this.loggerId="[DASH METADATA] ",this.isLive=!1,this.logger=o.Framework&&o.Framework.resolve(o.Framework.V.R)?o.Framework.resolve(o.Framework.V.R).log(e):console,this.mx=new DashParser,this.reset()}return e.prototype.Ix=function(e){var t="";return-1!==e.indexOf("/")&&(-1!==e.indexOf("?")&&(e=e.substring(0,e.indexOf("?"))),t=e.substring(0,e.lastIndexOf("/")+1)),t},e.prototype.pM=function(){return this.isLive},e.prototype.lM=function(){return this.Sx.values().map(function(e){return e.bandwidth})},e.prototype.reset=function(){this.Sx=new i},e.prototype.Rx=function(){return this.wx},e.prototype.parse=function(t,r,i){try{this.reset(),this.IM=t,this.bx(t,r),this.isLive="static"!==this.manifest.type;for(var n=this.manifest.BaseURL,s=this.manifest.Period_asArray[0],o=s.AdaptationSet_asArray,c=0;c<o.length;c++){var u=s.AdaptationSet[c],l=-1!=u.mimeType.indexOf("audio")?h.vc.dc:h.vc.fc;l===h.vc.fc&&u.ContentProtection&&this.Cx(u.ContentProtection);for(var p=u.SegmentTemplate.initialization,d=u.SegmentTemplate.media,E=parseInt(u.SegmentTemplate.timescale),v=0;v<u.Representation_asArray.length;v++){var y=u.Representation_asArray[v],T=new a._x;T.type=l,T.bandwidth=parseInt(y.bandwidth),T.timescale=E,T.Px=y.id,T.initialization=n+""+p,T.initialization=T.initialization.replace(e.Ax,""+T.bandwidth),T.initialization=T.initialization.replace(e.Ox,""+T.Px),i||this.logger.debug("QualityLevel "+h.vc[l]+" "+T.bandwidth);var m=n+""+d;m=m.replace(e.Ax,""+T.bandwidth),m=m.replace(e.Ox,""+T.Px),T.Nx=m;var I=parseInt(T.bandwidth+""),S=this.Dx(u.SegmentTemplate.SegmentTimeline_asArray[0].S_asArray,m,I,l);T.kx=S.Lx,T.Mx=S.Fx;var R=this.Ux(m);this.Sx.set(R,T)}}return this.wx=!0,this.Bx(r,i)}catch(e){throw f.ErrorMonitor.ve().logError("Error parsing the metadata",this.loggerId,g.hs.ui.Wr,e),this.wx=!1,new Error(e)}},e.prototype.Dx=function(t,r,i,s){try{var o,a=new n,h=new n,u=0,l=0;return t.forEach(function(t){if(t.d){t.t?u=parseInt(t.t):u+=l;var n=parseInt(t.d),p=r.replace(e.Hx,u+""),d=new c.DF(u,i,n,p,p);d.type=s,o&&(o.next=d),a.set(p,d),h.set(u,d),o=d;var f=0;t.r&&(f=parseInt(t.r));for(var g=0;g<f;g++){u+=n;var p=r.replace(e.Hx,u+""),d=new c.DF(u,i,n,p,p);d.type=s,o&&(o.next=d),a.set(p,d),h.set(u,d),o=d}l=n}}),{Lx:a,Fx:h}}catch(e){throw f.ErrorMonitor.ve().logError("Error extracting segment maps",this.loggerId,g.hs.ui.zr,e),new Error(e)}},e.prototype.Cx=function(e){try{if(e){if(e.CryptoPeriod){var t=e.CryptoPeriod;this.OM&&!this.OM.xx()&&this.OM instanceof u.qx||(this.OM=new u.qx(t.keyUriTemplate,t.IV,this.authenticationToken))}else this.OM&&this.OM instanceof l.Gx||(this.OM=new l.Gx);this.OM&&p.DASH.XL&&this.OM.init()}}catch(e){throw f.ErrorMonitor.ve().logError("Error initializing the protection",this.loggerId,g.hs.ui.Jr,e),new Error(e)}},e.prototype.Vx=function(e){var t=this.Ux(e);return this.Sx.get(t)},e.prototype.gM=function(e){try{return this.Vx(e).kx.get(e)}catch(e){return f.ErrorMonitor.ve().logError("Error getting the segment info",this.loggerId,g.hs.ui.Xr,e),null}},e.prototype.fM=function(e){var t=!1;return this.Sx.forEach(function(r,i){r.initialization===e&&(t=!0)}),t},e.prototype.vM=function(e){var t=this.gM(e);return null!=t?t.next:null},e.prototype.dk=function(e,t,r,i){try{var n;if(this.Sx.forEach(function(e,t){e.bandwidth===i&&(n=e)}),n&&n.Mx.has(e)&&n.Mx.has(r)){for(var s=n.Mx.get(e),o=n.Mx.get(r),a=0,h=s;h&&h!=o;)a+=h.duration,h=h.next;return Math.round(a/(n.timescale/1e3))}return 0}catch(e){return f.ErrorMonitor.ve().logError("Error extracting the segment distance",this.loggerId,g.hs.ui.Zr,e),0}},e.prototype.jx=function(e){try{e instanceof Uint8Array&&(e=e.buffer);var t=ISOBoxer.Qx(e),r=t.fetch("tfhd"),i=t.fetch("trun"),n=r?r.default_sample_duration:0;if(i){var s=0;return i.Kx.forEach(function(e){s+=e.sample_duration}),isNaN(s)&&n>0&&(s=n*i.Kx.length),s}}catch(e){return f.ErrorMonitor.ve().logError("Error extracting duration from the buffer",this.loggerId,g.hs.ui.$r,e),0}},e.prototype.Bx=function(e,t){var r=this.Yx();if(!t&&(this.isLive||r||d.HiveConfig.Dash.DashRemoveBitrateSize))try{var i=new s({}),n=i.Wx(e);this.isLive&&this.zx(n),(r||d.HiveConfig.Dash.DashRemoveBitrateSize)&&this.Jx(n,r,d.HiveConfig.Dash.DashRemoveBitrateSize);return i.Xx(n)}catch(e){this.logger.error(e)}return e},e.prototype.zx=function(e){var t=this;try{var r=Math.max(1,p.DASH.DASH_METADATA_MIN_FRAGMENTS),i=Math.max(1,p.DASH.eM),n=0,s=0;return e.MPD&&e.MPD.Period&&e.MPD.Period.AdaptationSet.forEach(function(e){if(t.Zx(e)){for(var o=e.SegmentTemplate.SegmentTimeline.S_asArray,a=parseInt(e.SegmentTemplate._timescale),h=i*a,c=0,u=0,l=0;l<o.length&&r>0;l++){var p=o[l];c=l;var d=p._r?parseInt(p._r):1;d>r?(u=r,r=0):(r-=d,u=d)}for(var f=o.length-1;f>=0&&(h>0&&f>=c);f--){var p=o[f],d=p._r?parseInt(p._r):1,g=0;if(!p._d)throw new Error("missing segment duration");g=parseInt(p._d);var E=d*g;if((f>c||f==c&&0==u)&&h>=E)h-=E,o.splice(f,1),n+=d,s+=E;else{var v=Math.ceil(h/g);f==c&&(v=Math.min(v,d-u));var y=g*v;p._r=d-v+"",h-=y,n+=v,s+=y}}t.logger.debug("DASH trimmed "+n+" segments for total duration: "+s)}}),e}catch(e){throw f.ErrorMonitor.ve().logError("Error trimming the manifest",this.loggerId,g.hs.ui.si,e),new Error(e)}},e.prototype.Zx=function(e){return!!e&&(!!("video/mp4"===e._mimeType||"video"===e._contentType||e.SegmentTemplate._media&&e.SegmentTemplate._media.indexOf("video")>-1)&&(e.SegmentTemplate&&e.SegmentTemplate.SegmentTimeline))},e.prototype.Yx=function(){if(d.HiveConfig.Dash.DashFilterBitrates)try{var e=null;e="string"==typeof d.HiveConfig.Dash.DashFilterBitrates?d.HiveConfig.Dash.DashFilterBitrates.split(","):d.HiveConfig.Dash.DashFilterBitrates;var t=[];return e.forEach(function(e){var r=parseInt(e);isNaN(r)||t.push(r)}),t}catch(e){f.ErrorMonitor.ve().logError("Error parsing DashFilterBitrates",this.loggerId,g.hs.ui.oi,e)}},e.prototype.Jx=function(e,t,r){var i=this;if(e.MPD&&e.MPD.Period){var n=[];e.MPD.Period.AdaptationSet.forEach(function(e){if(i.Zx(e)){var s=e.Representation_asArray;s.sort(function(e,t){return isNaN(e._bandwidth)&&(e._bandwidth=parseInt(e._bandwidth)),isNaN(t._bandwidth)&&(t._bandwidth=parseInt(t._bandwidth)),e._bandwidth-t._bandwidth});for(var o=s.length-1;o>=0;o--)r&&(delete s[o]._width,delete s[o]._height),t&&-1==t.indexOf(o)?s.splice(o,1):n.push(s[o]._bandwidth);i.logger.debug("DASH filtered-in bitrates: "+n.reverse().join(" ")+" - removed size: "+r)}})}},e.prototype.HM=function(e,t,r,i){try{var n;if(this.Sx.forEach(function(e,t){e.bandwidth===i&&(n=e)}),n&&n.Mx.has(e)&&n.Mx.has(r)){for(var s=n.Mx.get(e),o=n.Mx.get(r),a=0,h=s;h&&h!=o;)a+=h.duration,h=h.next;return Math.round(a/(n.timescale/1e3))}return 0}catch(e){return f.ErrorMonitor.ve().logError("Error getting the duration between two segments",this.loggerId,g.hs.ui.hi,e),0}},e.prototype.qM=function(e,t){try{var r;return this.Sx.forEach(function(e,i){e.bandwidth===t&&(r=e)}),r&&r.Mx.has(e)?r.Mx.get(e):null}catch(e){return f.ErrorMonitor.ve().logError("Error getting the segment",this.loggerId,g.hs.ui.ci,e),null}},e}();E.Ax="$Bandwidth$",E.Hx="$Time$",E.Ox="$RepresentationID$",t.$x=E},function(e,t,r){var i=function(e,t,r){function i(e){var t=e.localName;return null==t&&(t=e.eq),null!=t&&""!=t||(t=e.nodeName),t}function n(e){return e.prefix}function s(e){return"string"==typeof e?e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/\//g,"&#x2F;"):e}function o(e){return e.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#x27;/g,"'").replace(/&#x2F;/g,"/")}function a(s){if(s.nodeType==T.DOCUMENT_NODE){var h,c,u,l=s.firstChild;for(c=0,u=s.childNodes.length;c<u;c+=1)if(s.childNodes[c].nodeType!==T.COMMENT_NODE){l=s.childNodes[c];break}if(r)h=a(l);else{h={};var p=i(l);h[p]=a(l)}return h}if(s.nodeType==T.ELEMENT_NODE){var h=new Object;h.__cnt=0;for(var d=s.childNodes,f=0;f<d.length;f++){var l=d.item(f),p=i(l);if(h.__cnt++,null==h[p])h[p]=a(l),h[p+"_asArray"]=new Array(1),h[p+"_asArray"][0]=h[p];else{if(null!=h[p]&&!(h[p]instanceof Array)){var g=h[p];h[p]=new Array,h[p][0]=g,h[p+"_asArray"]=h[p]}for(var E=0;null!=h[p][E];)E++;h[p][E]=a(l)}}for(var v=0;v<s.attributes.length;v++){var m=s.attributes.item(v);h.__cnt++;for(var I=m.value,S=0,R=e.length;S<R;S++){var w=e[S];try{w.test.call(this,m)&&(I=w.tq.call(this,m.value))}catch(e){w.test.call(this,m),console.error(e)}}h[t+m.name]=I}var b=n(s);return null!=b&&""!=b&&(h.__cnt++,h.__prefix=b),1==h.__cnt&&null!=h["#text"]&&(h=h["#text"]),null!=h["#text"]&&(h.__text=h["#text"],h.__text instanceof Array&&(h.__text=h.__text.join("\n")),y&&(h.__text=o(h.__text)),delete h["#text"],delete h["#text_asArray"],""===h.__text.trim()&&delete h.__text),null!=h["#cdata-section"]&&(h.__cdata=h["#cdata-section"],delete h["#cdata-section"],delete h["#cdata-section_asArray"]),null==h.__text&&null==h.__cdata||(h.toString=function(){return(null!=this.__text?this.__text:"")+(null!=this.__cdata?this.__cdata:"")}),h}return s.nodeType==T.TEXT_NODE||s.nodeType==T.CDATA_SECTION_NODE?s.nodeValue:s.nodeType==T.COMMENT_NODE?null:void 0}function h(e,t,r,i){var n="<"+(null!=e&&null!=e.__prefix?e.__prefix+":":"")+t;if(null!=r)for(var s=0;s<r.length;s++){var o=r[s],a=e[o];n+=" "+o.substr(1)+"='"+a+"'"}return n+=i?"/>":">"}function c(e,t){return"</"+(null!=e.__prefix?e.__prefix+":":"")+t+">"}function u(e,t){return-1!==e.indexOf(t,e.length-t.length)}function l(e,t){return!!(u(t.toString(),"_asArray")||0==t.toString().indexOf("_")||e[t]instanceof Function)}function p(e){var t=0;if(e instanceof Object)for(var r in e)l(e,r)||t++;return t}function d(e){var t=[];if(e instanceof Object)for(var r in e)-1==r.toString().indexOf("__")&&0==r.toString().indexOf("_")&&t.push(r);return t}function f(e){var t="";return null!=e.__cdata&&(t+="<![CDATA["+e.__cdata+"]]>"),null!=e.__text&&(t+=y?s(e.__text):e.__text),t}function g(e){var t="";return e instanceof Object?t+=f(e):null!=e&&(t+=y?s(e):e),t}function E(e,t,r){var i="";if(0==e.length)i+=h(e,t,r,!0);else for(var n=0;n<e.length;n++)i+=h(e[n],t,d(e[n]),!1),i+=v(e[n]),i+=c(e[n],t);return i}function v(e){var t="";if(p(e)>0)for(var r in e)if(!l(e,r)){var i=e[r],n=d(i);if(null==i||void 0==i)t+=h(i,r,n,!0);else if(i instanceof Object)if(i instanceof Array)t+=E(i,r,n);else{var s=p(i);s>0||null!=i.__text||null!=i.__cdata?(t+=h(i,r,n,!1),t+=v(i),t+=c(i,r)):t+=h(i,r,n,!0)}else t+=h(i,r,n,!1),t+=g(i),t+=c(i,r)}return t+=g(e)}null!==t&&void 0!==t||(t="_"),null!==r&&void 0!==r||(r=!1);var y=!1,T={ELEMENT_NODE:1,TEXT_NODE:3,CDATA_SECTION_NODE:4,COMMENT_NODE:8,DOCUMENT_NODE:9};this.rq=function(e){var t;if(window.DOMParser){t=(new window.DOMParser).parseFromString(e,"text/xml")}else 0==e.indexOf("<?")&&(e=e.substr(e.indexOf("?>")+2)),t=new ActiveXObject("Microsoft.XMLDOM"),t.async="false",t.iq(e);return t},this.nq=function(e){return a(e)},this.Wx=function(e){var t=this.rq(e);return this.nq(t)},this.Xx=function(e){return v(e)},this.sq=function(e){var t=this.Xx(e);return this.rq(t)},this.getVersion=function(){return"1.0.11"},this.oq=function(e){y=e}};e.i=i},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(3),s=r(58),o=r(151),a=r(154),h=r(0),c=r(31),u=r(9),l=r(34),p=r(30),d=r(1),f=r(2);!function(e){function t(t){return this.qL(t)||-1!=t.indexOf(e.GL)}function r(t){return-1!=t.toLowerCase().indexOf(e.VL.toLowerCase())||-1!=t.toLowerCase().indexOf(e.aq.toLowerCase())||-1!=t.toLowerCase().indexOf(e.hq.toLowerCase())}e.cq=1,e.uq=2,e.lq=3e4,e.pq=4e3,e.dq=500,e.fq=!0,e.gq=1e4,e.Eq=16,e.vq=3,e.VL=".m3u8",e.aq="(format=m3u8-aapl-v3)",e.hq="(video,format=m3u8-aapl-v3,audiotrack=audio)",e.GL=".ts",e.rM=t,e.qL=r;var g=function(t){function s(e,r,i){var s=t.call(this,i)||this;return s.yq=!1,s.loggerId="[HLS Context] ",s.Ag=0,s.MM=new n,s.DM=new n,s.ticket=e,s.Tq=r,r&&(s.mq=s.Iq(e._N())),s.nM=e.NN(),s.sM=new a.Sq,s.Rq=new o.wq,s}return i(s,t),s.prototype.getStreamProtocol=function(){return StreamProtocol.bq},s.prototype.Iq=function(e){var t=e.lastIndexOf("/");return e.substr(0,t)},s.prototype.Sk=function(){return this.ticket},s.prototype.lM=function(){return this.Rq.lM()},s.prototype.isLive=function(){return this.Rq.isLive()},s.prototype.dM=function(){return this.sM},s.prototype.getContextId=function(){return this.ticket.kN()},s.prototype.uM=function(){return this.nM},s.prototype.mM=function(e){try{var t=e.url=this.Cq(e.url);return t===this.nM?(this.yq&&this.logger.debug("SAME MANIFEST "+t+","+this.nM),!0):null!=this.Rq&&this.Rq._q(t)?(this.yq&&this.logger.debug("CORRECT PLAYLIST "+t+","+this.nM),!0):null!=this.Rq&&null!=this.Rq.gM(t)?(this.yq&&this.logger.debug("CORRECT SEGMENT "+t+","+this.nM),!0):!(!r(t)||this.Rq.Pq()===t)&&(this.yq&&this.logger.debug("FIRST REQUEST FOR MANIFEST "+t+","+this.nM),!1)}catch(t){return d.ErrorMonitor.ve().logError("Error getting the current context of the HiveRequest",this.loggerId,f.hs.di.qr,{detailedError:t,url:e.url}),!1}},s.prototype.Cq=function(e){return p(e).nb().toString()},s.prototype.Xf=function(e){try{if(r(e))return u.vc.gc;return null!=this.Rq.gM(e)?u.vc.fc:u.vc.Ec}catch(t){return d.ErrorMonitor.ve().logError("Error getting the entityType",this.loggerId,f.hs.di.Br,{detailedError:t,url:e}),u.vc.Ec}},s.prototype.ig=function(e){var t=this.Xf(e);if(t==u.vc.fc||t==u.vc.dc)return!0},s.prototype.EM=function(e){var t=0,r=0,i=0,n=!0,s=!1;try{var o=this.Xf(e);if(o!=u.vc.gc){var a=this.Rq.gM(e);null!=a&&(t=a.duration,r=a.bitrate,i=a.id,s=this.ig(e))}else n=!1,null!=this.Rq&&this.Rq.Aq.has(e)&&(r=this.Rq.Aq.get(e).bitrate,this.MM.set(r,h.Framework.time()));return new l.N_(e,o,n,i,t,r,s,this.getContextId())}catch(t){return d.ErrorMonitor.ve().logError("Error getting the entityCharacteristics from the url",this.loggerId,f.hs.di.Hr,{detailedError:t,url:e}),new l.N_(e,u.vc.Ec,!1,0,0,0,!1,this.getContextId())}},s.prototype.VD=function(e,t,r){var i=this.Rq.qM(e,t);return null!=i?new l.N_(i.yM,r,!0,e,i.duration,t,!0,this.getContextId()):null},s.prototype.SM=function(e){try{var t=e.RM,r=e.eg(),i=this.Rq.parse(r,t);if(this.Rq.Aq.has(r)){var n=this.Rq.Aq.get(r);this.wM.QD(n.bitrate)}e.Kf.response=i,e.Kf.responseText=i}catch(t){d.ErrorMonitor.ve().logError("Error receiving the metadata",this.loggerId,f.hs.di.li,{detailedError:t,url:e.eg()}),e.RM&&(e.Kf.responseText=e.RM,e.Kf.response=e.RM)}},s.prototype.CM=function(e){t.prototype.CM.call(this,e),e.Xf()!=u.vc.gc&&e.Xf()!=u.vc.Ec&&(this.sM._M(e),e.Xf()==u.vc.fc&&this.wM.UD(e.zf))},s.prototype.PM=function(e,r){var i=e;return i.AM=h.Framework.time(),t.prototype.PM.call(this,i,r)},s.prototype.tk=function(t){if(e.fq){null==this.DM.get(t)&&this.Rq.isLive()?this.kM(t):this.logger.debug("HLS PRE-FETCHING METADATA ALREADY SCHEDULED OR MISSING HLS INFO")}},s.prototype.kM=function(t){var r=this;try{var i=this.Rq.Oq.get(t);if(null!=i){var n=this.MM.has(t),s=this.MM.get(t),o=n?s:0,a=null!=i.Nq?i.Nq[i.Nq.length-1].duration:e.pq,c=o+a,u=Math.max(1,c-h.Framework.time()+e.dq);this.logger.info("HLS PREFETCHING METADATA "+i.yM+" BITRATE "+t+" IN "+u);var l=h.Framework.setTimeout(function(){r.FM(t,i.yM,h.Framework.time())},u);this.DM.set(t,l)}else this.logger.warn("NO STREAM WITH BT "+t)}catch(e){d.ErrorMonitor.ve().logError("Error scheduling metadata prefetch",this.loggerId,f.hs.di.pi,e)}},s.prototype.FM=function(e,t,r){var i=this.MM.get(e);if(null==i&&(i=0),i>r)this.kM(e);else{var n=new c.HiveRequest(this.ticket.sessionId);n.open("GET",t),n.internal=!0,n.send(),this.DM.delete(e),this.MM.set(e,h.Framework.time())}},s.prototype.LM=function(){var e=this;this.DM.keys().forEach(function(t){var r=e.DM.get(t);h.Framework.clearTimeout(r),e.DM.delete(t)})},s.prototype.ak=function(){return t.prototype.TM.call(this,e.cq,e.uq)},s.prototype.nk=function(e){try{var t=e.url,r=this.Rq.vM(t);return null!=r?this.EM(r.yM):null}catch(e){return d.ErrorMonitor.ve().logError("Error getting the next entity",this.loggerId,f.hs.di.xr,e),null}},s.prototype.dk=function(e,t,r,i){return r-e},s.prototype.pk=function(){return e.lq},s.prototype.xM=function(){return e.gq},s.prototype.lk=function(e,t){try{var r=this.PD(),i=this.BM(),n=r.A_(),s=0;if(e>n)for(var o=this.Rq.qM(n,t);o&&o.id<e;)s+=o.duration,this.logger.debug("Segment duration "+o.duration+" total msec "+s+"segment id "+o.id),o=o.next;var a=h.Framework.time()-i;return Math.max(0,s-a)}catch(e){return d.ErrorMonitor.ve().logError("Error getting the distance duration",this.loggerId,f.hs.di.Kr,e),0}},s}(s.GM);e.Dq=g}(t.bq||(t.bq={}))},function(e,t,r){"use strict";var i=r(3),n=r(4),s=r(0),o=r(89),a=r(62),h=r(90),c=r(1),u=r(2),l=function(){function e(){this.loggerId="[LIVE CACHE] ",this.kq=new i,this.Lq=-1,this.Mq=[],this.logger=s.Framework.resolve(s.Framework.V.R).log()}return e.prototype.init=function(e,t){this.Fq=e,this.Uq=t},e.prototype.put=function(e){var t=n.defer();try{var r=e.Zf(),i=e.responseHeaders,s=e.jf,l=e.qf.Pf-1,p=e.qf.Pf;-1==this.Lq&&this.Bq();var d=null,f=!1;if(this.kq.has(r)){d=this.kq.get(r);var g=new a.FF(0,l,p);f=!0,d.content.forEach(function(e,t){if(a.HF.BF(t).MF(g))return void(f=!1)})}else{var E=new a.FF(0,l,p).toString();d=new h.Hq(e.zf),e.xq&&(d.qq=e.xq.Ek.peerInfo),d.content.set(E,new o.Gq(p,s,e.qf,e.Jf())),this.kq.set(r,d),f=!0,this.Mq.unshift(r)}null==d.headers&&null!=i&&(d.headers=i),t.resolve(f)}catch(e){c.ErrorMonitor.ve().logError("Error adding fragment in LiveCache",this.loggerId,u.hs.ut.it,e),t.reject("CACHE PUT ERROR "+e)}return t.Ss},e.prototype.get=function(e){var t=n.defer();try{var r=this.kq.get(e);if(null!=r){var i=null;r.content.forEach(function(e,t){if(a.HF.BF(t).kF())return i=e,i.headers=r.headers,void(i.qq=r.qq)}),t.resolve(i)}else t.resolve(null)}catch(e){c.ErrorMonitor.ve().logError("Error getting fragment from LiveCache",this.loggerId,u.hs.ut.nt,e),t.reject("CACHE GET ERROR "+e)}return t.Ss},e.prototype.ik=function(e){try{return this.kq.keys()}catch(e){return c.ErrorMonitor.ve().logError("Error getting keys from LiveCache",this.loggerId,u.hs.ut.ot,e),[]}},e.prototype.Vq=function(e){var t=n.defer();try{t.resolve(this.kq.values())}catch(e){c.ErrorMonitor.ve().logError("Error getting elements from LiveCache",this.loggerId,u.hs.ut.at,e),t.reject("CACHE GET ELEMENTS ERROR "+e)}return t.Ss},e.prototype.contains=function(e){var t=n.defer();try{this.kq.has(e)?t.resolve(!0):t.resolve(!1)}catch(e){c.ErrorMonitor.ve().logError("Error checking if LiveCache contains the fragment",this.loggerId,u.hs.ut.st,e),t.reject("CACHE CONTAINS ERROR "+e)}return t.Ss},e.prototype.Bq=function(){var e=this;this.jq(),this.logger.debug(this.loggerId+"Starting cache periodic purge"),this.Lq=s.Framework.setInterval(function(){e.m()},this.Uq)},e.prototype.jq=function(){-1!=this.Lq&&(this.logger.debug(this.loggerId+" Stopping cache periodic purge"),s.Framework.clearInterval(this.Lq),this.Lq=-1)},e.prototype.m=function(){var e=this;try{var t=0,r=0,i=0;this.logger.debug(this.loggerId+" RUNNING GC"),this.Mq.every(function(i,n){var s=e.kq.get(i).size();return t+s>e.Fq?(r=n,!1):(t+=s,!0)})||(i=this.Mq.length-r,this.Mq.splice(r,this.Mq.length-1).forEach(function(t){e.kq.delete(t)})),this.logger.debug(this.loggerId+" GC DONE - REMOVED: "+i+" - CURRENT ITEMS: "+this.kq.length+" SIZE: "+t+" "),0===this.kq.length&&(this.logger.debug(this.loggerId+" Cache contains no items, stopping purge timer"),this.jq())}catch(e){c.ErrorMonitor.ve().logError("Error purging LiveCache",this.loggerId,u.hs.ut.ct,e)}},e.prototype.Qq=function(){this.kq=new i,this.Mq=[]},e.prototype.Kq=function(){var e=this;this.kq.forEach(function(t,r){e.logger.debug("EID="+r),t.content.forEach(function(t,r){e.logger.debug("\tRANGE ",r)})})},e}();t.Yq=l},function(e,t,r){"use strict";var i=function(){function e(e,t,r,i){this.length=e,this.data=t,this.qf=r,this.Wq=i}return e}();t.Gq=i},function(e,t,r){"use strict";var i=r(62),n=r(3),s=function(){function e(e){this.headers=null,this.qq=null,this.totalSize=0,this.zq=!1,this.zf=e,this.content=new n}return e.prototype.size=function(){var e=0;return this.content.forEach(function(t,r){e+=i.HF.BF(r).size()}),e},e}();t.Hq=s},function(e,t,r){"use strict";!function(e){e[e.Jq=0]="ALL",e[e.AS=1]="AS",e[e.nD=2]="SITE"}(t.Xq||(t.Xq={}))},function(e,t,r){"use strict";var i=r(0),n=r(25),s=r(5),o=r(10),a=r(4),h=r(3),c=r(59),u=r(171),l=r(1),p=function(){function e(){this.Zq=!1,this.loggerId="[UDPLeaderElection] ",this.Ng=i.Framework.resolve(i.Framework.V.F),this.$q=new h,this.eG=new h,this.tG=new h,this.rG=new h,this.iG=new h,this.nG=[]}return e.prototype.init=function(e){this.sG=e,this.logger=i.Framework.resolve(i.Framework.V.R).log(e.sessionId),this.yD=e.yD,this.oG=e.oG,this.mD=e.mD},e.prototype.aG=function(e,t){var r=this,i=a.defer();try{if(this.Zq){var n=null;e.privateIpString&&(n=e.privateIpString);var s=new u.hG(e.guid,e.rankValue,n,e.isLeader);if(this.$q.has(s.uuid)){var o=this.$q.get(s.uuid);o.udpScore==s.udpScore&&o.cG==s.cG?i.resolve():(this.$q.set(s.uuid,s),this.uG(),this.lG(s).then(function(){i.resolve()}).fail(function(e){r.$q.delete(s.uuid),r.uG(),i.reject(e)}))}else t?(s.pG=t,this.logger.info(this.loggerId+" NEW MEMBER GUID "+s.uuid+" RANKING "+s.udpScore+" LEADER "+s.cG),this.$q.set(s.uuid,s),this.uG(),this.lG(s).then(function(){r.dG(r.$q.get(s.uuid)),i.resolve()}).fail(function(e){r.$q.delete(s.uuid),r.uG(),i.reject(e)})):this.fG(s).then(function(e){s.pG=e,r.logger.info(r.loggerId+" NEW MEMBER GUID "+s.uuid+" RANKING "+s.udpScore+" LEADER "+s.cG),r.$q.set(s.uuid,s),r.uG(),r.lG(s).then(function(){i.resolve()}).fail(function(e){r.$q.delete(s.uuid),r.uG(),i.reject(e)})}).fail(function(e){i.reject(e)})}else i.reject("LEADER ELECTION NOT STARTED YET")}catch(e){i.reject("TRIGGER LEADER ELECTION ERROR "+e)}return i.Ss},e.prototype.dG=function(e){var t=new o.bc(o.Tc.W,null);t.guid=e.uuid,t.isLeader=e.cG,t.rankValue=e.udpScore;var r=[t];this.oG.gG(r,!1)},e.prototype.fG=function(e){var t=this,r=a.defer();return this.rG.has(e.uuid)||this.tG.has(e.uuid)?r.reject(d.EG):(this.rG.set(e.uuid,Date.now()),this.Ng.connect(e.uuid).then(function(i){var n=i.Pg.wg(t.sG.swarmId);null==n?(n=i.Pg.Tg(t.sG.swarmId),t.vG(n).then(function(){r.resolve(i)}).fail(function(e){r.reject(e)}).done()):t.iG.get(e.uuid)?r.resolve(i):(t.rG.delete(e.uuid),t.vG(n).then(function(){r.resolve(i)}).fail(function(e){r.reject(e)}).done())}).fail(function(i){t.rG.delete(e.uuid),r.reject(i)}).done()),r.Ss},e.prototype.vG=function(e){var t=this,r=a.defer(),o=new n.Rf.Fa.Jg.UDPHandshakeMessage;o.uuid=this.yG.uuid,o.udpScore=this.yG.udpScore,o.isLeader=this.yG.cG,o.streamId=this.yG.streamId,this.logger.debug(this.loggerId+"MSG uuid "+o.uuid+" rankValue "+o.udpScore+" isLeader "+o.isLeader+" stream id "+o.streamId);var h=i.Framework.setTimeout(function(){t.TG(e.otherGuid)},s.hh.UDPBroadcast.Ga);return this.tG.set(e.otherGuid,{mG:h,defer:r}),e.Lg(n.Rf.Eg.dg,o),r.Ss},e.prototype.TG=function(e){if(this.tG.has(e)){this.logger.debug(this.loggerId+" HANDSHAKE REQ EXPIRED TO "+e);var t=this.tG.get(e);this.tG.delete(e),t.defer.reject("EXPIRED")}},e.prototype.IG=function(e,t){try{this.logger.debug(this.loggerId+"HANDSHAKE RESP RECEIVED FROM "+t.otherGuid);var r=t.otherGuid,n=this.tG.get(r);i.Framework.clearTimeout(n.mG),this.tG.delete(r),n.defer.resolve(t)}catch(e){l.ErrorMonitor.ve().logError("HANDSHAKE RESPONSE RECEIVED FAILED",this.loggerId,e)}},e.prototype.SG=function(e,t){var r=this;try{var i=new o.bc(o.Tc.W,null,e.isLeader);if(i.guid=e.uuid,i.rankValue=e.udpScore,e.streamId===this.yD.getContextId()){var n=t.Pg.wg(this.sG.swarmId);this.iG.set(e.uuid,e.uuid),this.RG(n,"OK"),this.aG(i,t).then(function(){}).fail(function(e){l.ErrorMonitor.ve().logError("LEADER ELECTION FAILED",r.loggerId,e)})}}catch(e){l.ErrorMonitor.ve().logError("HANDSHAKE REQUEST FAILED",this.loggerId,e)}},e.prototype.RG=function(e,t){var r=new n.Rf.Fa.Jg.UDPHandshakeResponse;r.accept=t,e.Lg(n.Rf.Eg.UDPHandshakeResponse,r),this.logger.debug(this.loggerId+"SEND HANDSHAKE RESPONSE TO "+e.otherGuid)},e.prototype.lG=function(e){var t=this,r=a.defer();if(this.wG()){var i=!1;this.logger.info(this.loggerId+"I HAVE THE HIGHEST SCORE"),e.cG&&!this.eG.has(e.uuid)&&(i=!0,this.logger.info(this.loggerId+"SEND SWITCH REQUEST TO "+e.uuid),this.bG(e).then(function(){r.resolve()}).fail(function(e){3==e.CG?(t.logger.debug(t.loggerId+" SWITCH REQUEST WAS CANCELED."),r.resolve()):(e.CG=2)&&r.reject(e)})),this.yG.cG||null==this._G||this._G.uuid==e.uuid||this.eG.has(this._G.uuid)||(this.logger.info("SEND SWITCH REQUEST TO THE ALREADY KNOWN LEADER"),i=!0,this.bG(this._G).then(function(){r.resolve()}).fail(function(e){3==e.CG?(t.logger.debug(t.loggerId+" SWITCH REQUEST WAS CANCELED."),r.resolve()):(e.CG=2)&&r.reject(e)})),null!=this._G||e.cG||this.yG.cG||0!=this.eG.length||(this.logger.info(this.loggerId+"BECOME LEADER"),this.PG()),i||r.resolve()}else this.AG(e)?(this.logger.info(this.loggerId+"PEER "+e.uuid+" HAS THE HIGHEST SCORE"),this.OG(),this.yG.cG&&e.cG&&this.stepDown(),this.NG(e),r.resolve()):r.resolve();return r.Ss},e.prototype.NG=function(e){try{this.logger.info(this.loggerId+"UPDATE THE LEADERSHIP"),null!=this._G&&this.$q.has(this._G.uuid)&&(this.$q.get(this._G.uuid).cG=!1),this.$q.has(e.uuid)?(this.$q.get(e.uuid).udpScore=e.udpScore,this._G=e,this.$q.get(e.uuid).cG=!0):(this.logger.warn(this.loggerId+"SET A LEADER THAT IS NOT A LAN MEMBER LIST. SHOULD NEVER HAPPEN"),this.$q.set(e.uuid,e),this._G=e),this.yD.DG(e),this.logger.info(this.loggerId+"NEW KNOWN LEADER "+this.yD.Rk().uuid)}catch(e){l.ErrorMonitor.ve().logError(e,this.loggerId)}},e.prototype.stepDown=function(){this.logger.info(this.loggerId+"STEP DOWN"),this.yG.cG=!1,this.yD.kG(!1),s.hh.fa.ia&&(this.mD.LG(),this.mD.MG(!1))},e.prototype.OG=function(){for(var e=this.eG.keys(),t=0,r=e;t<r.length;t++){var n=r[t],s=this.eG.get(n);this.eG.delete(n),i.Framework.clearTimeout(s.mG),s.defer.reject({CG:3,message:"CANCELED PENDING RESPONSES"})}},e.prototype.AG=function(e){return e.uuid==this.nG[0].uuid},e.prototype.wG=function(){return u.hG.JE(this.yG,this.nG[0])<0},e.prototype.uG=function(){var e=new c(this.$q.values()),t=e.Fc(u.hG.JE);e.push(this.yG),this.yD.FG(t);var r=new c(this.$q.values());this.nG=r.Fc(u.hG.JE)},e.prototype.UG=function(e){this.BG(e)},e.prototype.BG=function(e){this.logger.info(this.loggerId+"EVALUATE THE SWITCH REQUEST FROM "+e.uuid);var t=void 0;this.$q.has(e.uuid)?t=this.$q.get(e.uuid):this.logger.warn("I RECEIVED A SWITCH REQUEST FROM AN UNKNOWN MEMBER. THIS SHOULD NEVER HAPPEN"),t&&(this.yG.cG?this.wG()?this.HG(t,!1):(this.stepDown(),this.OG(),this.NG(t),this.HG(t,!0)):this.AG(t)?(this.NG(t),this.HG(t,!0)):this.HG(t,!1))},e.prototype.HG=function(e,t){var r=this;this.xG(e.pG,t).then(function(){}).fail(function(e){l.ErrorMonitor.ve().logError("SEND SWITCH RESPONSE ERROR",r.loggerId,e)}).done()},e.prototype.xG=function(e,t){var r=a.defer(),i=new n.Rf.Fa.Jg.UDPSwitchLeadershipAck;return i.ok=t,e.Pg.wg(this.sG.swarmId).Lg(n.Rf.Eg.fg,i),r.Ss},e.prototype.bG=function(e){var t=this,r=a.defer();return this.qG(e.pG).then(function(i){t.GG(i,e),r.resolve()}).fail(function(e){r.reject(e)}).done(),r.Ss},e.prototype.GG=function(e,t){try{e?(this.$q.get(t.uuid).cG=!1,this._G=this.yG,this.PG()):(this.OG(),this.$q.get(t.uuid).cG=!0,this.stepDown(),this.NG(t))}catch(e){l.ErrorMonitor.ve().logError("HANDLE LEADERSHIP SWITCH RESPONSE ERROR",this.loggerId,e)}},e.prototype.VG=function(e,t){if(this.eG.has(t)){var r=this.eG.get(t);i.Framework.clearTimeout(r.mG),this.eG.delete(t),r.defer.resolve(e.ok)}else this.logger.warn(this.loggerId+" SWITCH LEADERSHIP RESPONSE RECEIVED FROM UNKNOWN PEER "+t)},e.prototype.qG=function(e){var t=this,r=a.defer(),o=new n.Rf.Fa.Jg.UDPSwitchLeadershipRequest;o.uuid=this.yG.uuid,o.udpScore=this.yG.udpScore,this.logger.debug(this.loggerId+"SWITCH LEADERSHIP REQUEST TO "+e.otherGuid);var h=i.Framework.setTimeout(function(){t.jG(e.otherGuid)},s.hh.UDPBroadcast.qa);this.eG.set(e.otherGuid,{mG:h,defer:r});var c=e.Pg.wg(this.sG.swarmId);return i.Framework.setTimeout(function(){c.Lg(n.Rf.Eg.UDPSwitchLeadershipRequest,o)},1),r.Ss},e.prototype.jG=function(e){if(this.eG.has(e)){this.logger.info(this.loggerId+" SWITCH LEADERSHIP EXPIRED TO "+e);var t=this.eG.get(e);this.eG.delete(e),t.defer.reject({CG:2,message:"EXPIRED"})}},e.prototype.PG=function(){this.logger.info(this.loggerId+"BECOMING LAN LEADER"),null!=this._G&&this.$q.has(this._G.uuid)&&(this.$q.get(this._G.uuid).cG=!1),this.yG.cG=!0,this._G=this.yG,this.yD.kG(!0),this.yD.DG(this.yG),s.hh.fa.ia&&(this.mD.LG(),this.mD.MG(!0))},e.prototype.Ud=function(e){this.yG=new u.hG(this.yD.getId(),this.yD.QG(),"",!1,this.yD.getContextId()),this.Zq=!0,this.logger.info(this.loggerId+" UDP LEADER ELECTION STARTED")},e.prototype.KG=function(e){this.$q.delete(e),this.uG(),0==this.$q.length?(this.yG.cG=!1,this._G=null,this.yD.kG(!1),this.yD.YG(!1),this.mD.LG(),this.mD.MG(!1)):this.wG()?this.PG():this.nG.length>0&&this.NG(this.nG[0])},e}();t.WG=p;var d;!function(e){e[e.zG=0]="FAILURE",e[e.EG=1]="ALREADY_PENDING"}(d=t.JG||(t.JG={}))},function(e,t,r){var i,n,s;/**
 * @license Long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/Long.js for details
 */
!function(r,o){n=[],i=o,void 0!==(s="function"==typeof i?i.apply(t,n):i)&&(e.i=s)}(0,function(){"use strict";function e(e,t,r){this.low=0|e,this.high=0|t,this.FP=!!r}e.XG,Object.defineProperty(e.prototype,"__isLong__",{value:!0,p:!1,l:!1}),e.ZG=function(e){return!0===(e&&e.XG)};var t={},r={};e.ME=function(i,n){var s,o;return n?0<=(i>>>=0)&&i<256&&(o=r[i])?o:(s=new e(i,(0|i)<0?-1:0,!0),0<=i&&i<256&&(r[i]=s),s):-128<=(i|=0)&&i<128&&(o=t[i])?o:(s=new e(i,i<0?-1:0,!1),-128<=i&&i<128&&(t[i]=s),s)},e.DE=function(t,r){return r=!!r,isNaN(t)||!isFinite(t)?e.ZERO:!r&&t<=-s?e.MIN_VALUE:!r&&t+1>=s?e.MAX_VALUE:r&&t>=n?e.$G:t<0?e.DE(-t,r).qE():new e(t%i|0,t/i|0,r)},e.qI=function(t,r,i){return new e(t,r,i)},e.kE=function(t,r,i){if(0===t.length)throw Error("number format error: empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return e.ZERO;if("number"==typeof r&&(i=r,r=!1),(i=i||10)<2||36<i)throw Error("radix out of range: "+i);var n;if((n=t.indexOf("-"))>0)throw Error('number format error: interior "-" character: '+t);if(0===n)return e.kE(t.substring(1),r,i).qE();for(var s=e.DE(Math.pow(i,8)),o=e.ZERO,a=0;a<t.length;a+=8){var h=Math.min(8,t.length-a),c=parseInt(t.substring(a,a+h),i);if(h<8){var u=e.DE(Math.pow(i,h));o=o.multiply(u).add(e.DE(c))}else o=o.multiply(s),o=o.add(e.DE(c))}return o.FP=r,o},e.eV=function(t){return t instanceof e?t:"number"==typeof t?e.DE(t):"string"==typeof t?e.kE(t):new e(t.low,t.high,t.FP)};var i=4294967296,n=i*i,s=n/2,o=e.ME(1<<24);return e.ZERO=e.ME(0),e.tV=e.ME(0,!0),e.ONE=e.ME(1),e.rV=e.ME(1,!0),e.iV=e.ME(-1),e.MAX_VALUE=e.qI(-1,2147483647,!1),e.$G=e.qI(-1,-1,!0),e.MIN_VALUE=e.qI(0,-2147483648,!1),e.prototype.kP=function(){return this.FP?this.low>>>0:this.low},e.prototype.nV=function(){return this.FP?(this.high>>>0)*i+(this.low>>>0):this.high*i+(this.low>>>0)},e.prototype.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix out of range: "+t);if(this.sV())return"0";var r;if(this.oV()){if(this.cs(e.MIN_VALUE)){var i=e.DE(t),n=this.aV(i);return r=n.multiply(i).hV(this),n.toString(t)+r.kP().toString(t)}return"-"+this.qE().toString(t)}var s=e.DE(Math.pow(t,6),this.FP);r=this;for(var o="";;){var a=r.aV(s),h=r.hV(a.multiply(s)).kP()>>>0,c=h.toString(t);if(r=a,r.sV())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},e.prototype.cV=function(){return this.high},e.prototype.uV=function(){return this.high>>>0},e.prototype.lV=function(){return this.low},e.prototype.pV=function(){return this.low>>>0},e.prototype.dV=function(){if(this.oV())return this.cs(e.MIN_VALUE)?64:this.qE().dV();for(var t=0!=this.high?this.high:this.low,r=31;r>0&&0==(t&1<<r);r--);return 0!=this.high?r+33:r+1},e.prototype.sV=function(){return 0===this.high&&0===this.low},e.prototype.oV=function(){return!this.FP&&this.high<0},e.prototype.fV=function(){return this.FP||this.high>=0},e.prototype.gV=function(){return 1==(1&this.low)},e.prototype.fv=function(){return 0==(1&this.low)},e.prototype.cs=function(t){return e.ZG(t)||(t=e.eV(t)),(this.FP===t.FP||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},e.EV=e.prototype.cs,e.prototype.vV=function(e){return!this.cs(e)},e.yV=e.prototype.vV,e.prototype.TV=function(e){return this.Oc(e)<0},e.prototype.mV=e.prototype.TV,e.prototype.SV=function(e){return this.Oc(e)<=0},e.prototype.RV=e.prototype.SV,e.prototype.wV=function(e){return this.Oc(e)>0},e.prototype.bV=e.prototype.wV,e.prototype.CV=function(e){return this.Oc(e)>=0},e.prototype._V=e.prototype.CV,e.prototype.Oc=function(t){if(e.ZG(t)||(t=e.eV(t)),this.cs(t))return 0;var r=this.oV(),i=t.oV();return r&&!i?-1:!r&&i?1:this.FP?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.hV(t).oV()?-1:1},e.prototype.qE=function(){return!this.FP&&this.cs(e.MIN_VALUE)?e.MIN_VALUE:this.not().add(e.ONE)},e.prototype.PV=e.prototype.qE,e.prototype.add=function(t){e.ZG(t)||(t=e.eV(t));var r=this.high>>>16,i=65535&this.high,n=this.low>>>16,s=65535&this.low,o=t.high>>>16,a=65535&t.high,h=t.low>>>16,c=65535&t.low,u=0,l=0,p=0,d=0;return d+=s+c,p+=d>>>16,d&=65535,p+=n+h,l+=p>>>16,p&=65535,l+=i+a,u+=l>>>16,l&=65535,u+=r+o,u&=65535,e.qI(p<<16|d,u<<16|l,this.FP)},e.prototype.hV=function(t){return e.ZG(t)||(t=e.eV(t)),this.add(t.qE())},e.prototype.sub=e.prototype.hV,e.prototype.multiply=function(t){if(this.sV())return e.ZERO;if(e.ZG(t)||(t=e.eV(t)),t.sV())return e.ZERO;if(this.cs(e.MIN_VALUE))return t.gV()?e.MIN_VALUE:e.ZERO;if(t.cs(e.MIN_VALUE))return this.gV()?e.MIN_VALUE:e.ZERO;if(this.oV())return t.oV()?this.qE().multiply(t.qE()):this.qE().multiply(t).qE();if(t.oV())return this.multiply(t.qE()).qE();if(this.TV(o)&&t.TV(o))return e.DE(this.nV()*t.nV(),this.FP);var r=this.high>>>16,i=65535&this.high,n=this.low>>>16,s=65535&this.low,a=t.high>>>16,h=65535&t.high,c=t.low>>>16,u=65535&t.low,l=0,p=0,d=0,f=0;return f+=s*u,d+=f>>>16,f&=65535,d+=n*u,p+=d>>>16,d&=65535,d+=s*c,p+=d>>>16,d&=65535,p+=i*u,l+=p>>>16,p&=65535,p+=n*c,l+=p>>>16,p&=65535,p+=s*h,l+=p>>>16,p&=65535,l+=r*u+i*c+n*h+s*a,l&=65535,e.qI(d<<16|f,l<<16|p,this.FP)},e.prototype.AV=e.prototype.multiply,e.prototype.aV=function(t){if(e.ZG(t)||(t=e.eV(t)),t.sV())throw new Error("division by zero");if(this.sV())return this.FP?e.tV:e.ZERO;var r,i,n;if(this.cs(e.MIN_VALUE)){if(t.cs(e.ONE)||t.cs(e.iV))return e.MIN_VALUE;if(t.cs(e.MIN_VALUE))return e.ONE;return r=this.HP(1).aV(t).shiftLeft(1),r.cs(e.ZERO)?t.oV()?e.ONE:e.iV:(i=this.hV(t.multiply(r)),n=r.add(i.aV(t)))}if(t.cs(e.MIN_VALUE))return this.FP?e.tV:e.ZERO;if(this.oV())return t.oV()?this.qE().aV(t.qE()):this.qE().aV(t).qE();if(t.oV())return this.aV(t.qE()).qE();for(n=e.ZERO,i=this;i.CV(t);){r=Math.max(1,Math.floor(i.nV()/t.nV()));for(var s=Math.ceil(Math.log(r)/Math.LN2),o=s<=48?1:Math.pow(2,s-48),a=e.DE(r),h=a.multiply(t);h.oV()||h.wV(i);)r-=o,a=e.DE(r,this.FP),h=a.multiply(t);a.sV()&&(a=e.ONE),n=n.add(a),i=i.hV(h)}return n},e.prototype.OV=e.prototype.aV,e.prototype.NV=function(t){return e.ZG(t)||(t=e.eV(t)),this.hV(this.aV(t).multiply(t))},e.prototype.ev=e.prototype.NV,e.prototype.not=function(){return e.qI(~this.low,~this.high,this.FP)},e.prototype.qP=function(t){return e.ZG(t)||(t=e.eV(t)),e.qI(this.low&t.low,this.high&t.high,this.FP)},e.prototype.or=function(t){return e.ZG(t)||(t=e.eV(t)),e.qI(this.low|t.low,this.high|t.high,this.FP)},e.prototype.pT=function(t){return e.ZG(t)||(t=e.eV(t)),e.qI(this.low^t.low,this.high^t.high,this.FP)},e.prototype.shiftLeft=function(t){return e.ZG(t)&&(t=t.kP()),0==(t&=63)?this:t<32?e.qI(this.low<<t,this.high<<t|this.low>>>32-t,this.FP):e.qI(0,this.low<<t-32,this.FP)},e.prototype.DV=e.prototype.shiftLeft,e.prototype.HP=function(t){return e.ZG(t)&&(t=t.kP()),0==(t&=63)?this:t<32?e.qI(this.low>>>t|this.high<<32-t,this.high>>t,this.FP):e.qI(this.high>>t-32,this.high>=0?0:-1,this.FP)},e.prototype.kV=e.prototype.HP,e.prototype.LP=function(t){if(e.ZG(t)&&(t=t.kP()),0===(t&=63))return this;var r=this.high;if(t<32){var i=this.low;return e.qI(i>>>t|r<<32-t,r>>>t,this.FP)}return 32===t?e.qI(r,0,this.FP):e.qI(r>>>t-32,0,this.FP)},e.prototype.LV=e.prototype.LP,e.prototype.UP=function(){return this.FP?new e(this.low,this.high,!1):this},e.prototype.BP=function(){return this.FP?this:new e(this.low,this.high,!0)},e})},function(e,t,r){var i,n,s;/**
 * @license Long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/Long.js for details
 */
!function(r,o){n=[],i=o,void 0!==(s="function"==typeof i?i.apply(t,n):i)&&(e.i=s)}(0,function(){"use strict";function e(e,t,r){this.low=0|e,this.high=0|t,this.FP=!!r}e.XG,Object.defineProperty(e.prototype,"__isLong__",{value:!0,p:!1,l:!1}),e.ZG=function(e){return!0===(e&&e.XG)};var t={},r={};e.ME=function(i,n){var s,o;return n?0<=(i>>>=0)&&i<256&&(o=r[i])?o:(s=new e(i,(0|i)<0?-1:0,!0),0<=i&&i<256&&(r[i]=s),s):-128<=(i|=0)&&i<128&&(o=t[i])?o:(s=new e(i,i<0?-1:0,!1),-128<=i&&i<128&&(t[i]=s),s)},e.DE=function(t,r){return r=!!r,isNaN(t)||!isFinite(t)?e.ZERO:!r&&t<=-s?e.MIN_VALUE:!r&&t+1>=s?e.MAX_VALUE:r&&t>=n?e.$G:t<0?e.DE(-t,r).qE():new e(t%i|0,t/i|0,r)},e.qI=function(t,r,i){return new e(t,r,i)},e.kE=function(t,r,i){if(0===t.length)throw Error("number format error: empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return e.ZERO;if("number"==typeof r&&(i=r,r=!1),(i=i||10)<2||36<i)throw Error("radix out of range: "+i);var n;if((n=t.indexOf("-"))>0)throw Error('number format error: interior "-" character: '+t);if(0===n)return e.kE(t.substring(1),r,i).qE();for(var s=e.DE(Math.pow(i,8)),o=e.ZERO,a=0;a<t.length;a+=8){var h=Math.min(8,t.length-a),c=parseInt(t.substring(a,a+h),i);if(h<8){var u=e.DE(Math.pow(i,h));o=o.multiply(u).add(e.DE(c))}else o=o.multiply(s),o=o.add(e.DE(c))}return o.FP=r,o},e.eV=function(t){return t instanceof e?t:"number"==typeof t?e.DE(t):"string"==typeof t?e.kE(t):new e(t.low,t.high,t.FP)};var i=4294967296,n=i*i,s=n/2,o=e.ME(1<<24);return e.ZERO=e.ME(0),e.tV=e.ME(0,!0),e.ONE=e.ME(1),e.rV=e.ME(1,!0),e.iV=e.ME(-1),e.MAX_VALUE=e.qI(-1,2147483647,!1),e.$G=e.qI(-1,-1,!0),e.MIN_VALUE=e.qI(0,-2147483648,!1),e.prototype.kP=function(){return this.FP?this.low>>>0:this.low},e.prototype.nV=function(){return this.FP?(this.high>>>0)*i+(this.low>>>0):this.high*i+(this.low>>>0)},e.prototype.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix out of range: "+t);if(this.sV())return"0";var r;if(this.oV()){if(this.cs(e.MIN_VALUE)){var i=e.DE(t),n=this.aV(i);return r=n.multiply(i).hV(this),n.toString(t)+r.kP().toString(t)}return"-"+this.qE().toString(t)}var s=e.DE(Math.pow(t,6),this.FP);r=this;for(var o="";;){var a=r.aV(s),h=r.hV(a.multiply(s)).kP()>>>0,c=h.toString(t);if(r=a,r.sV())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},e.prototype.cV=function(){return this.high},e.prototype.uV=function(){return this.high>>>0},e.prototype.lV=function(){return this.low},e.prototype.pV=function(){return this.low>>>0},e.prototype.dV=function(){if(this.oV())return this.cs(e.MIN_VALUE)?64:this.qE().dV();for(var t=0!=this.high?this.high:this.low,r=31;r>0&&0==(t&1<<r);r--);return 0!=this.high?r+33:r+1},e.prototype.sV=function(){return 0===this.high&&0===this.low},e.prototype.oV=function(){return!this.FP&&this.high<0},e.prototype.fV=function(){return this.FP||this.high>=0},e.prototype.gV=function(){return 1==(1&this.low)},e.prototype.fv=function(){return 0==(1&this.low)},e.prototype.cs=function(t){return e.ZG(t)||(t=e.eV(t)),(this.FP===t.FP||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},e.EV=e.prototype.cs,e.prototype.vV=function(e){return!this.cs(e)},e.yV=e.prototype.vV,e.prototype.TV=function(e){return this.Oc(e)<0},e.prototype.mV=e.prototype.TV,e.prototype.SV=function(e){return this.Oc(e)<=0},e.prototype.RV=e.prototype.SV,e.prototype.wV=function(e){return this.Oc(e)>0},e.prototype.bV=e.prototype.wV,e.prototype.CV=function(e){return this.Oc(e)>=0},e.prototype._V=e.prototype.CV,e.prototype.Oc=function(t){if(e.ZG(t)||(t=e.eV(t)),this.cs(t))return 0;var r=this.oV(),i=t.oV();return r&&!i?-1:!r&&i?1:this.FP?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.hV(t).oV()?-1:1},e.prototype.qE=function(){return!this.FP&&this.cs(e.MIN_VALUE)?e.MIN_VALUE:this.not().add(e.ONE)},e.prototype.PV=e.prototype.qE,e.prototype.add=function(t){e.ZG(t)||(t=e.eV(t));var r=this.high>>>16,i=65535&this.high,n=this.low>>>16,s=65535&this.low,o=t.high>>>16,a=65535&t.high,h=t.low>>>16,c=65535&t.low,u=0,l=0,p=0,d=0;return d+=s+c,p+=d>>>16,d&=65535,p+=n+h,l+=p>>>16,p&=65535,l+=i+a,u+=l>>>16,l&=65535,u+=r+o,u&=65535,e.qI(p<<16|d,u<<16|l,this.FP)},e.prototype.hV=function(t){return e.ZG(t)||(t=e.eV(t)),this.add(t.qE())},e.prototype.sub=e.prototype.hV,e.prototype.multiply=function(t){if(this.sV())return e.ZERO;if(e.ZG(t)||(t=e.eV(t)),t.sV())return e.ZERO;if(this.cs(e.MIN_VALUE))return t.gV()?e.MIN_VALUE:e.ZERO;if(t.cs(e.MIN_VALUE))return this.gV()?e.MIN_VALUE:e.ZERO;if(this.oV())return t.oV()?this.qE().multiply(t.qE()):this.qE().multiply(t).qE();if(t.oV())return this.multiply(t.qE()).qE();if(this.TV(o)&&t.TV(o))return e.DE(this.nV()*t.nV(),this.FP);var r=this.high>>>16,i=65535&this.high,n=this.low>>>16,s=65535&this.low,a=t.high>>>16,h=65535&t.high,c=t.low>>>16,u=65535&t.low,l=0,p=0,d=0,f=0;return f+=s*u,d+=f>>>16,f&=65535,d+=n*u,p+=d>>>16,d&=65535,d+=s*c,p+=d>>>16,d&=65535,p+=i*u,l+=p>>>16,p&=65535,p+=n*c,l+=p>>>16,p&=65535,p+=s*h,l+=p>>>16,p&=65535,l+=r*u+i*c+n*h+s*a,l&=65535,e.qI(d<<16|f,l<<16|p,this.FP)},e.prototype.AV=e.prototype.multiply,e.prototype.aV=function(t){if(e.ZG(t)||(t=e.eV(t)),t.sV())throw new Error("division by zero");if(this.sV())return this.FP?e.tV:e.ZERO;var r,i,n;if(this.cs(e.MIN_VALUE)){if(t.cs(e.ONE)||t.cs(e.iV))return e.MIN_VALUE;if(t.cs(e.MIN_VALUE))return e.ONE;return r=this.HP(1).aV(t).shiftLeft(1),r.cs(e.ZERO)?t.oV()?e.ONE:e.iV:(i=this.hV(t.multiply(r)),n=r.add(i.aV(t)))}if(t.cs(e.MIN_VALUE))return this.FP?e.tV:e.ZERO;if(this.oV())return t.oV()?this.qE().aV(t.qE()):this.qE().aV(t).qE();if(t.oV())return this.aV(t.qE()).qE();for(n=e.ZERO,i=this;i.CV(t);){r=Math.max(1,Math.floor(i.nV()/t.nV()));for(var s=Math.ceil(Math.log(r)/Math.LN2),o=s<=48?1:Math.pow(2,s-48),a=e.DE(r),h=a.multiply(t);h.oV()||h.wV(i);)r-=o,a=e.DE(r,this.FP),h=a.multiply(t);a.sV()&&(a=e.ONE),n=n.add(a),i=i.hV(h)}return n},e.prototype.OV=e.prototype.aV,e.prototype.NV=function(t){return e.ZG(t)||(t=e.eV(t)),this.hV(this.aV(t).multiply(t))},e.prototype.ev=e.prototype.NV,e.prototype.not=function(){return e.qI(~this.low,~this.high,this.FP)},e.prototype.qP=function(t){return e.ZG(t)||(t=e.eV(t)),e.qI(this.low&t.low,this.high&t.high,this.FP)},e.prototype.or=function(t){return e.ZG(t)||(t=e.eV(t)),e.qI(this.low|t.low,this.high|t.high,this.FP)},e.prototype.pT=function(t){return e.ZG(t)||(t=e.eV(t)),e.qI(this.low^t.low,this.high^t.high,this.FP)},e.prototype.shiftLeft=function(t){return e.ZG(t)&&(t=t.kP()),0==(t&=63)?this:t<32?e.qI(this.low<<t,this.high<<t|this.low>>>32-t,this.FP):e.qI(0,this.low<<t-32,this.FP)},e.prototype.DV=e.prototype.shiftLeft,e.prototype.HP=function(t){return e.ZG(t)&&(t=t.kP()),0==(t&=63)?this:t<32?e.qI(this.low>>>t|this.high<<32-t,this.high>>t,this.FP):e.qI(this.high>>t-32,this.high>=0?0:-1,this.FP)},e.prototype.kV=e.prototype.HP,e.prototype.LP=function(t){if(e.ZG(t)&&(t=t.kP()),0===(t&=63))return this;var r=this.high;if(t<32){var i=this.low;return e.qI(i>>>t|r<<32-t,r>>>t,this.FP)}return 32===t?e.qI(r,0,this.FP):e.qI(r>>>t-32,0,this.FP)},e.prototype.LV=e.prototype.LP,e.prototype.UP=function(){return this.FP?new e(this.low,this.high,!1):this},e.prototype.BP=function(){return this.FP?this:new e(this.low,this.high,!0)},e})},function(e,t,r){"use strict";var i,n=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},s=r(4),o=r(3),a=r(0),h=r(166),c=r(5),u=r(25),l=r(10),p=r(167),d=r(15),f=hive.services.protocol.IF.TrackerPeerInfo,g=r(6),E=r(1),v=r(2),y=g.he.Th;!function(e){e[e.MV=1]="ACCEPT",e[e.FV=2]="REJECT"}(i=t.UV||(t.UV={}));var T;!function(e){e[e.Jq=0]="ALL",e[e.BV=1]="IN",e[e.HV=2]="OUT"}(T=t.xV||(t.xV={}));var m=function(e){function t(){var t=e.call(this)||this;return t.loggerId="[Partnership] ",t.qV=new o,t.rG=new o,t.GV=-1,t.VV=-1,t.jV=-1,t.connected=!1,t.Ng=a.Framework.resolve(a.Framework.V.F),t.QV=a.Framework.resolve(d.qu.fu),t.KV=a.Framework.resolve(d.qu.gu),t.YV=a.Framework.resolve(d.qu.Eu),t.WV=a.Framework.resolve(d.qu.vu),t}return n(t,e),t.prototype.init=function(t){e.prototype.init.call(this,t),this.sG=t,this.ticket=t.rl.ticket,this.oG=t.oG,this.mD=t.mD,this.zV=t.zV},t.prototype.start=function(e){try{this.logger.info(this.loggerId+"PARTNERSHIP STARTED "+e.getContextId()),this.context=e,this.contextId=e.getContextId(),this.JV(c.hh.No.Po),this.XV(c.hh.fa.aa),this.ZV(c.hh.Ho.ko),this.active=!0}catch(e){E.ErrorMonitor.ve().logError("Error in partnership initialization",this.loggerId,v.hs.cr.Bt,e)}},t.prototype.stop=function(){return a.Framework.clearInterval(this.GV),a.Framework.clearInterval(this.VV),a.Framework.clearInterval(this.jV),this.context=null,this.contextId=null,this.active=!1,this.$V()},t.prototype.Ud=function(e){this.logger.info("PARTNERSHIP SERVER CONNECTED"),this.gd=e,this.connected=!0,null==this.yD.getId()&&this.yD.setId(this.gd)},t.prototype.ej=function(){this.connected=!1},t.prototype.tj=function(e){try{this.rj(e)||this.qV.has(e.peerInfo.guid)||this.rG.has(e.peerInfo.guid)||e.peerInfo.guid==this.gd?this.ij(e):this.nj(e),this.sj(e)&&this.oj(e)}catch(t){E.ErrorMonitor.ve().logError("Error in discoering new lan peer",this.loggerId,v.hs.cr.Ht,{detailedError:t,otherGuid:e.peerInfo.guid})}},t.prototype.ij=function(e){if(this.aj.has(e.peerInfo.guid)){var t=this.aj.get(e.peerInfo.guid);this.aj.delete(e.peerInfo.guid),this.gB.set(e.peerInfo.guid,t),this.yD.YG(!0)}},t.prototype.oj=function(e){if(this.dB.has(e.peerInfo.guid)){var t=this.dB.get(e.peerInfo.guid);this.dB.delete(e.peerInfo.guid),this.fB.set(e.peerInfo.guid,t)}},t.prototype.JV=function(e){var t=this;-1!=this.GV&&a.Framework.clearInterval(this.GV),this.GV=a.Framework.setInterval(function(){t.hj(!1)},e)},t.prototype.hj=function(e){var t=this;e&&this.GV&&(a.Framework.clearInterval(this.GV),this.JV(c.hh.No.Po));try{if(this.connected){this.logger.debug(this.loggerId+"ADDING NEW PEERS IF POSSIBLE, NOW "+this.aj.length+"/"+c.hh.No._o+","+this.gB.length+"/infinity OUT RND "+this.dB.length+" OUT LAN "+this.fB.length);var r=[].concat(this.qV.keys()).concat(this.rG.keys()),i=this.oG.cj(!0),n=void 0;n=this.yD.ck()||this.yD.Tk()?this.YV.uj(this.yD,c.hh.No._o,this.aj.values(),r,i):this.QV.uj(c.hh.No._o,this.aj.values(),r,i),this.lj=n.pj(),n.dj().forEach(function(e){t.nj(e)})}else this.logger.warn(this.loggerId+"NOT RUNNING IN PARTNER CHOICE, SRV DISCONNECTED")}catch(e){E.ErrorMonitor.ve().logError("Error in choosing in partners",this.loggerId,v.hs.cr.xt,e)}},t.prototype.nj=function(e){var t=this,r=e.peerInfo.guid,i=e.peerInfo.privateIpString,n=e.peerInfo.publicIpString;this.logger.debug(this.loggerId+"IN PARTNER ADD PROCESS "+r),this.rj(e)||this.qV.has(r)||this.rG.has(r)||this.zV.fj(r,i,n)||(this.rG.set(r,Date.now()),this.Ng.connect(r).then(function(i){var n=i.Pg.wg(t.sG.swarmId);if(null==n&&(n=i.Pg.Tg(t.sG.swarmId)),n){t.rG.get(r);t.rG.delete(r),t.active&&t.gj(n).then(function(i){if(t.Ej(n,e,i.msg),t.yj.vj(!1,!1),t.zV.Tj(r,e.peerInfo.privateIpString,e.peerInfo.publicIpString),t.mj(n),t.lj.length>0&&!e.Ij()){var s=t.lj[0];t.Sj(s.guid),s.wj.Rj(T.HV),t.lj.splice(0,1)}}).fail(function(e){E.ErrorMonitor.ve().logError("Error in requesting partnership",t.loggerId,v.hs.cr.Vt,{otherGuid:r}),t.yj.vj(!1,!0),t.bj(r)})}}).fail(function(e){E.ErrorMonitor.ve().logError("Error in creating new p2p connection",t.loggerId,v.hs.cr.Gt,{otherGuid:r}),t.yj.vj(!0,!0),t.rG.delete(r),t.oG.KG(r)}).done())},t.prototype.Cj=function(e,t){var r=this;try{var n=e.guid,s=null,o=null;if(e.privateIpString&&(o=e.privateIpString),e.publicIpString&&(s=e.publicIpString),this._j(n))this.logger.info(this.loggerId+"ALREADY OUT PARTNER "+n);else{var u=e.contextId,l=t.Pg.wg(this.sG.swarmId);if(this.contextId!==u||c.hh.Ho.Do!==e.p2pProtocolVersion||this.zV.fj(n,o,s))this.logger.info(this.loggerId+"PARTNERSHIP CANNOT BE ESTABLISHED WITH "+n+" CONTEXT ID "+u+" protocol version "+e.p2pProtocolVersion),this.Pj(l,i.FV);else{var p=this.Aj(e),d=void 0,f=void 0;if(p){if(this.oG.gG([p],!1),f=this.oG.Oj(n),!(d=f.Ij()||this.dB.length<c.hh.No.Oo)){this.logger.debug(this.loggerId+" got out part req from "+n+" - reached max "+this.dB.length+"/"+c.hh.No.Oo);var g=void 0;g=this.yD.ck()||this.yD.Tk()?this.WV.Nj(this.yD,p,this.dB.values()):this.KV.Nj(this.dB.values()),g&&(this.logger.debug(this.loggerId+" chocking "+g.guid),this.dB.delete(g.guid),g.wj.Rj(T.BV),d=!0)}}else d=!1;if(d){var y=new h.Partner(n,this.yj,l,this.logger,!1,f);e.reportingGuid&&y.Dj(e.reportingGuid),this.oG.kj.has(n)?this.fB.set(n,y):this.dB.set(n,y),this.logger.info(this.loggerId+"ADDED OUT PART "+n),this.Pj(l,i.MV),this.zV.Tj(n,o,s),a.Framework.setTimeout(function(){r.Lj(n)},500),this.yj.Mj()}else this.logger.info(this.loggerId+" cannot establish partnership to "+n+" - reached max "+this.dB.length+"/"+c.hh.No.Oo),this.Pj(l,i.FV)}}}catch(t){E.ErrorMonitor.ve().logError("Error receiving out partnership request",this.loggerId,v.hs.cr.jt,{detailedError:t,otherGuid:e.guid})}},t.prototype.Aj=function(e){try{var t=new f;t.guid=e.guid,e.internalAs&&(t.internalAs=e.internalAs),e.externalAs&&(t.externalAs=e.externalAs),e.publicIpString&&(t.publicIpString=e.publicIpString),e.privateIpString&&(t.privateIpString=e.privateIpString);var r=!1,i=this.oG.Oj(e.guid);if(i&&(r=i.peerInfo.isLeader),e.streamCharacteristics){var n=[];e.streamCharacteristics.forEach(function(e){var t=new l.TrackerPeerStreamInfo;t.state=e.streamState,t.bitrate=e.bitrate,t.delta=e.delta,n.push(t)}),t.streams=n}return new l.bc(l.Tc.yc,t,r)}catch(t){return E.ErrorMonitor.ve().logError("Error constructing discovered peer info",this.loggerId,v.hs.cr.Qt,{detailedError:t,otherGuid:e.guid}),null}},t.prototype.Pj=function(e,t){var r=this;this.logger.debug(this.loggerId+"SEND PART RESPONSE TO "+e.otherGuid);try{var n=new u.Rf.Fa.Jg.OutPartnershipResponse;if(n.accept=t,n.accept===i.MV){this.yD.gk()&&(n.internalAs=this.yD.gk()),this.yD.Fj()&&(n.externalAs=this.yD.Fj()),this.yD.getPublicIp()&&(n.publicIpString=this.yD.getPublicIp()),this.yD.getPrivateIp()&&(n.privateIpString=this.yD.getPrivateIp()),n.reportingGuid=this.yD.getReportingGuid();var s=this.yD.Uj(),o=[];s.forEach(function(e,t){var i=new u.Rf.Fa.Jg.StreamCharacteristics;i.bitrate=t,i.streamState=e.type,i.delta=null!=r.yD.getDelta()?r.yD.getDelta():-1,o.push(i)}),o.length>0&&n.setStreamCharacteristics(o)}e.Lg(u.Rf.Eg.pg,n)}catch(t){E.ErrorMonitor.ve().logError("Error constructing partnership response message",this.loggerId,v.hs.cr.Kt,{detailedError:t,otherGuid:e.otherGuid})}},t.prototype.Bj=function(e){this.logger.warn(this.loggerId+e)},t.prototype.Ej=function(e,t,r){var i=e.otherGuid;if(r.externalAs&&(t.peerInfo.externalAs=r.externalAs),r.internalAs&&(t.peerInfo.internalAs=r.internalAs),r.publicIpString&&(t.peerInfo.publicIpString=r.publicIpString),r.privateIpString&&(t.peerInfo.privateIpString=r.privateIpString),r.streamCharacteristics){var n=[];r.streamCharacteristics.forEach(function(e){var t=new l.TrackerPeerStreamInfo;t.state=e.streamState,t.bitrate=e.bitrate,t.delta=e.delta,n.push(t)}),t.peerInfo.streams=n}try{var s=new h.Partner(i,this.yj,e,this.logger,!0,t);return r.reportingGuid&&(s.reportingGuid=r.reportingGuid,e.receiver.setReportingGuid(r.reportingGuid),e.sender.setReportingGuid(r.reportingGuid)),t.peerInfo.type==l.Tc.W?(this.gB.set(i,s),this.yD.Hj(!0),this.yD.YG(!0)):(0!=this.yD.gk()&&this.yD.gk()===t.peerInfo.internalAs&&this.yD.Hj(!0),this.aj.set(i,s)),this.logger.debug(this.loggerId+i+" IS NOW IN PARTNER"),s}catch(e){E.ErrorMonitor.ve().logError("Error adding a new partner object in the list",this.loggerId,v.hs.cr.Yt,{detailedError:e,otherGuid:i})}},t.prototype.KG=function(e){try{this.logger.info(this.loggerId+"GOT PEER DISC "+e),this.xj(e)&&(this.logger.info(this.loggerId+"IN PRT DISC "+e),this.Sj(e)),this._j(e)&&(this.logger.info(this.loggerId+"OUT PRT DISC "+e),this.dB.delete(e),this.fB.delete(e))}catch(t){E.ErrorMonitor.ve().logError("Error removing disconected partner from the list",this.loggerId,v.hs.cr.Wt,{detailedError:t,otherGuid:e})}},t.prototype.Sj=function(e){var t=this;try{this.logger.debug(this.loggerId+"IN PARTNER REMOVE "+e);var r=this.qj(e);if(this.gD.Gj(r),this.aj.delete(e),this.gB.delete(e),this.gB.length>0)this.yD.Hj(!0);else if(0!=this.yD.gk()){var i=!1;this.aj.forEach(function(e){t.yD.gk()===e.Ek.peerInfo.internalAs&&(i=!0)}),this.yD.Hj(i)}else this.yD.Hj(!1)}catch(t){E.ErrorMonitor.ve().logError("Error removing the in partner",this.loggerId,v.hs.cr.zt,{detailedError:t,otherGuid:e})}},t.prototype.Vj=function(e,t){try{this.logger.debug(this.loggerId+"CLOSE RECEIVED FROM "+e+" TYPE "+T[t.getType()]),t.getType()!=T.Jq&&t.getType()!=T.HV||(this.dB.has(e)&&this.dB.delete(e),this.fB.has(e)&&this.fB.delete(e)),t.getType()!=T.Jq&&t.getType()!=T.BV||this.Sj(e)}catch(t){E.ErrorMonitor.ve().logError("Error when close received",this.loggerId,v.hs.cr.Jt,{detailedError:t,otherGuid:e})}},t.prototype.gj=function(e){var t=this,r=s.defer();try{var i=new u.Rf.Fa.Jg.OutPartnershipRequest;i.guid=this.gd,i.contextId=this.contextId,i.p2pProtocolVersion=c.hh.Ho.Do,i.reportingGuid=this.yD.getReportingGuid(),this.yD.gk()&&(i.internalAs=this.yD.gk()),this.yD.Fj()&&(i.externalAs=this.yD.Fj()),this.yD.getPrivateIp()&&(i.privateIpString=this.yD.getPrivateIp()),this.yD.getPublicIp()&&(i.publicIpString=this.yD.getPublicIp());var n=this.yD.Uj(),o=[];n.forEach(function(e,r){var i=new u.Rf.Fa.Jg.StreamCharacteristics;i.bitrate=r,i.streamState=e.type,i.delta=null!=t.yD.getDelta()?t.yD.getDelta():-1,o.push(i)}),o.length>0&&i.setStreamCharacteristics(o),this.logger.debug(this.loggerId+"SEND PART REQ TO "+e.otherGuid+" WITH ID "+i.contextId+" internalAS "+i.internalAs+" externalAs "+i.externalAs+" private ip "+i.privateIpString+" public ip "+i.publicIpString+" rGuid "+this.yD.getReportingGuid());var h=a.Framework.setTimeout(function(){t.jj(r,e.otherGuid)},c.hh.No.Co);this.qV.set(e.otherGuid,{mG:h,defer:r}),e.Lg(u.Rf.Eg.lg,i)}catch(t){E.ErrorMonitor.ve().logError("Error sending partnership request",this.loggerId,v.hs.cr.Xt,{detailedError:t,otherGuid:e.otherGuid}),r.reject(t)}return r.Ss},t.prototype.Qj=function(e,t){var r=t.otherGuid,n=this.qV.get(r);n?(a.Framework.clearTimeout(n.mG),this.qV.delete(r),e.accept===i.MV?n.defer.resolve({yg:t,msg:e}):n.defer.reject("NOT ACCEPTED")):E.ErrorMonitor.ve().logError("Error receiving out partnership response from an unknown peer",this.loggerId,v.hs.cr.er,{otherGuid:r})},t.prototype.jj=function(e,t){if(this.qV.has(t)){E.ErrorMonitor.ve().logError("Error partnership request expired",this.loggerId,v.hs.cr.Zt,{otherGuid:t});var r=this.qV.get(t);this.qV.delete(t),r.defer.reject("EXPIRED")}else E.ErrorMonitor.ve().logError("Error partnership request expired for unknown peer",this.loggerId,v.hs.cr.$t,{otherGuid:t})},t.prototype.$V=function(){var e=this,t=s.defer(),r=this.aj.values();this.gB.forEach(function(e,t){r.push(e)});var i=r.slice().map(function(e){return e.wj.close()});return s.all(i).then(function(e){t.resolve("resolved")}).fail(function(r){E.ErrorMonitor.ve().logError("Error closing partnership",e.loggerId,v.hs.cr.tr),t.reject("could not close")}),t.Ss},t.prototype.bj=function(e){this.Ng.disconnect(e)},t.prototype.XV=function(e){var t=this;-1!=this.VV&&a.Framework.clearInterval(this.VV),this.VV=a.Framework.setInterval(function(){t.Kj()},e)},t.prototype.Kj=function(){try{if(this.yD.yk()&&!this.yD.ck()&&y){var e=this.yD.Rk(),t=this.context.PD().bitrate;if(t&&this.xj(e.uuid)){var r=this.qj(e.uuid);this.Yj(r.wj,t)}}}catch(e){E.ErrorMonitor.ve().logError("Error announcing bitrate",this.loggerId,v.hs.cr.rr,e)}},t.prototype.Yj=function(e,t){try{var r=new u.Rf.Fa.Jg.Bitrate;r.guid=this.gd,r.bitrate=t,this.logger.debug(this.loggerId+"ANNOUNCE BITRATE "+r.bitrate+" TO PEER GUID "+e.otherGuid),e.Lg(u.Rf.Eg.Bitrate,r)}catch(t){E.ErrorMonitor.ve().logError("Error constructing bitrate announcement",this.loggerId,v.hs.cr.ir,{detailedError:t,otherGuid:e.otherGuid})}},t.prototype.Wj=function(e){try{this.logger.debug(this.loggerId+"RECEIVED BITRATE "+e.bitrate+" FROM PEER GUID "+e.guid),this.oG.kj.has(e.getGuid())&&(this.oG.kj.get(e.guid).zj(e.bitrate),this.mD.Jj())}catch(t){E.ErrorMonitor.ve().logError("Error receiving bitrate info",this.loggerId,v.hs.cr.nr,{detailedError:t,otherGuid:e.guid})}},t.prototype.Xj=function(e){try{var t=e.guid,r=this.qj(t);r&&this.Zj(r,e),r=this.$j(t),r&&this.Zj(r,e),this.zV.Tj(t,e.privateIpString,e.publicIpString)}catch(t){E.ErrorMonitor.ve().logError("Error receiving peer info",this.loggerId,v.hs.cr.sr,{detailedError:t,otherGuid:e.guid})}},t.prototype.Zj=function(e,t){var r=e.Ek.peerInfo;if(t.privateIpString&&(r.privateIpString=t.privateIpString),t.publicIpString&&(r.publicIpString=t.publicIpString),t.externalAs&&(r.externalAs=t.externalAs),t.internalAs&&(r.internalAs=t.internalAs),t.streamCharacteristics){var i=[];t.streamCharacteristics.forEach(function(e){var t=new l.TrackerPeerStreamInfo;t.bitrate=e.bitrate,t.delta=e.delta,t.state=e.streamState,i.push(t)}),r.streams=i}},t.prototype.ZV=function(e){var t=this;this.jV&&a.Framework.clearInterval(this.jV),this.jV=a.Framework.setInterval(function(){t.eQ()},e)},t.prototype.eQ=function(){var e=this;try{if(this.yD.getPrivateIp()||this.yD.getPublicIp()||this.yD.gk()||this.yD.Fj()){var t=this.tQ(),r=new u.Rf.Fa.Jg.PeerInfoMessage;r.guid=this.yD.getId(),this.yD.getPrivateIp()&&(r.privateIpString=this.yD.getPrivateIp()),this.yD.getPublicIp()&&(r.publicIpString=this.yD.getPublicIp()),this.yD.Fj()&&(r.externalAs=this.yD.Fj()),this.yD.gk()&&(r.internalAs=this.yD.gk());var i=this.yD.Uj(),n=[];i.forEach(function(t,r){var i=new u.Rf.Fa.Jg.StreamCharacteristics;i.bitrate=r,i.streamState=t.type,i.delta=null!=e.yD.getDelta()?e.yD.getDelta():-1,n.push(i)}),n.length>0&&r.setStreamCharacteristics(n),t.forEach(function(e,t){e.wj.Lg(u.Rf.Eg.nd,r)})}}catch(e){E.ErrorMonitor.ve().logError("Error announcing peer info to all partners",this.loggerId,v.hs.cr.ar,e)}},t.prototype.tQ=function(){try{var e=new o;return this.dB.forEach(function(t,r){e.has(r)||e.set(r,t)}),this.fB.forEach(function(t,r){e.has(r)||e.set(r,t)}),this.gB.forEach(function(t,r){e.has(r)||e.set(r,t)}),this.aj.forEach(function(t,r){e.has(r)||e.set(r,t)}),e}catch(e){return E.ErrorMonitor.ve().logError("Error collecting all partners",this.loggerId,v.hs.cr.hr,e),new o}},t}(p.rQ);t.iQ=m},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.nQ=!0,i.sQ=3e4,i.oQ=6e4,i.aQ=3e4,t.hQ=i;var n=function(){function e(){}return e}();n.Xa="site",n.Za="externalAs",n.$a="availableSendRate",n.eh="remoteAddress",n.th="localAddress",t.cQ=n},function(e,t,r){"use strict";var i=function(){function e(e,t){this.uQ=e,this.lQ=t}return e.prototype.pj=function(){return this.lQ},e.prototype.dj=function(){return this.uQ},e}();t.pQ=i},function(e,t,r){"use strict";var i=function(){function e(){}return e.dQ=function(e,t){var r=e.gQ.fQ(!1),i=t.gQ.fQ(!1);return r>i?1:r<i?0:-1},e}();t.EQ=i;var n=function(){function e(){}return e.dQ=function(e,t){var r=e.vQ.fQ(!1),i=t.vQ.fQ(!1);return r>i?1:r<i?0:-1},e}();t.yQ=n},function(e,t,r){"use strict";var i=r(3),n=r(4),s=r(0),o=r(104),a=r(105),h=r(26),c=r(41),u=r(18),l=r(21),p=r(109),d=r(22),f=r(111),g=r(8),E=r(113),v=r(56),y=r(32),T=r(1),m=r(46),I=r(29),S=r(6),R=o.HiveComm.Options,w=a.HiveComm.TQ,b=h.HiveComm.oE,C=h.HiveComm.SE,_=h.HiveComm.HiveTechError,P=h.HiveComm.vE,A=h.HiveComm.wE,O=r(54),N=S.he.dh,D=S.he.lh,k=S.he.uh,L=S.he.ph;(k||L)&&r(14).HiveConfig,t.version=N;var M;!function(e){var a=function(){function e(e){this.mQ=[w[w.HiveJava],w[w.HiveJsProxy],w[w.HiveJS],w[w.StatsJS]],this.IQ=new i,this.SQ=new Array,this.RQ=new Array,this.wQ=null,this.bQ=0,this.CQ=0,this.loggerId="[HiveComm] ",this._Q=0,this.PQ=u.Rl.getItem("hivePluginId"),this.PQ||(this.PQ=Math.abs(Math.floor(68719476736*Math.random())).toString(16),u.Rl.setItem("hivePluginId",this.PQ)),T.ErrorMonitor.ve(t.version),this.options_=new R.AQ,this.OQ(e),l.Sp(e,this.options_),l.Rp(window.location.href,new R.NQ,this.options_),o.kQ.DQ(this.options_),this.ff=s.Framework.resolve(s.Framework.V.R),c.HiveConfig.Framework.LoggerTimestamp=this.options().loggerTimestamp,this.ff.fN(this.options().debugLevel),T.ErrorMonitor.ve().me(this.ff.log());var r=s.Framework.resolve(g.pc.M),n=s.Framework.resolve(g.pc.sc);r.Zl().then(function(e){T.ErrorMonitor.ve().setUser(e.tp()),T.ErrorMonitor.ve().Ie({reportingGuid:e.rp()}),T.ErrorMonitor.ve().Ie({p2pId:e.tp()})});var a={};new p.LQ(this),n.getConnectivityInfo().then(function(e){a={pIPAddr:e.getNetworkChanged().getPrivateIp()},T.ErrorMonitor.ve().Ie({privateIp:a.pIPAddr})}),window.gf=this.ff.log(),this.MQ(),this.pluginReference=new A(this);var h=this.options().idleTimePeriod>this.options().feedbackPeriod?this.options().idleTimePeriod:I.L.nh;this.FQ=new u.Nl(h)}return e.prototype.options=function(){return this.options_},e.prototype.logger=function(){return this.wQ?this.ff.log(this.wQ.id):this.ff.log()},e.prototype.loggerLevel=function(){if(this.logger)return this.ff.level},e.prototype.getPluginId=function(){return this.PQ},e.prototype.getCommVersion=function(){return t.version},e.prototype.updateCommsForInitSessions=function(){for(var e=0,t=this.RQ;e<t.length;e++){var r=t[e];r.tech.LL(this),"HiveJS"===r.tech.getName()&&r.tech.UQ&&r.tech.UQ.LL(this)}},e.prototype.OQ=function(e){var t=new v.StatsJS(this,e);if(this.IQ.set(v.StatsJS.EL,t),k){var i=r(132).HiveJS;this.IQ.set(i.EL,new i(this,e,t))}if(L){var n=r(199).HiveJsProxy;this.IQ.set(n.EL,new n(this,e,t))}if(D){var s=r(201).HiveJava;this.IQ.set(s.EL,new s(this,e))}var o=e.hiveTechOrder;if(!o||o instanceof Array)if(o&&o.length>0)for(var a=o.length;a--;){var h=o[a];"string"!=typeof h||-1==this.mQ.indexOf(h)?(console.warn(this.loggerId+'The "'+h+'" Hive tech is undefined'),o.splice(a,1)):"string"==typeof h&&this.IQ.has(h)||console.warn(this.loggerId+'The "'+h+'" Hive tech is not enabled on this plugin')}else o=this.mQ;else console.warn(this.loggerId+"hiveTechOrder value not accepted. It must be an array of strings"),o=this.mQ;e.hiveTechOrder=o},e.prototype.resolveTicketPromise=function(e){var t=this;this.logger().notice(this.loggerId+"resolving "+e);var r=n.defer();if(!e)return r.reject(u.Sl("",b.sE,"No ticket provided.")),r.Ss;this.BQ(e);var i=this.HQ().values();0==i.length&&r.reject(u.Sl(e,b.rE));var s,o,a=!1,h=!1,c=0,p=null;return l.wp(function(){return!a&&!h&&c<i.length&&!s},function(){var r=i[c++];r.kL();var u;return u=r.vL()&&!o?t.KB(e,t.options().testId):n.resolve(null),u.then(function(i){null!=i&&(o=i);var s=r.mL();return r.initSession(e,o).timeout(s,"["+r.getName()+"] Error: initialization timed out after "+s+"ms").then(function(e){p=e,t.xQ(p,r),a=!0,!r.vL()&&o&&o.Hl.reset(),T.ErrorMonitor.ve().Ie({sessionId:p.id}),t.logger().notice(t.loggerId+"initializing Session:["+p.id+"] Ticket:"+p.ticket.toString()+" HiveTech:["+p.tech.getName()+"]"),n.resolve(!0)},function(i){i instanceof Error&&(i=new _(P.EE,i.message),r.DL(i)),i.ticketUrl=e,h=!r.onError(i),t.logger().debug(t.loggerId+"tech "+r.getName()+": "+i.message),n.resolve(!0)})},function(e){s=e,n.resolve(!0)})}).then(function(){s?r.reject(u.Sl(e,b.sE,s)):h?r.reject(u.Sl(e,b.nE)):a?r.resolve(p):r.reject(u.Sl(e,b.rE))}).catch(function(i){T.ErrorMonitor.ve().logError("Error resolving ticket promise",t.loggerId,i),r.reject(u.Sl(e,b.tE,i.toString()))}).done(),r.Ss},e.prototype.KB=function(e,t){var r=this;return y.Hive.Reporting().initSession(e,!1,t).then(function(t){return r.logger().debug(r.loggerId+"verified ticket "+e),r.updatePlayerInfo(t),t}).catch(function(e){return n.reject("Ticket not verified, error: "+e.message)})},e.prototype.HQ=function(){var e=JSON.parse(JSON.stringify(this.options().hiveTechOrder)),t=new i;for(var r in e)this.IQ.has(e[r])&&t.set(e[r],this.IQ.get(e[r]));return t},e.prototype.BQ=function(e){var t=T.ErrorMonitor.ve();try{var r=new m.BN;r.RN(e),r.up()&&r.cp()&&r.hp()?t.setTags([r.up(),r.cp(),r.hp()]):t.logError("Ticket not valid, we could not resolve the triple partnerId/CustomerId/ContentId",this.loggerId,{partnerId:r.up(),customerId:r.cp(),contentId:r.hp()})}catch(e){this.logger().warn(this.loggerId+" "+e.message,e),t.notify(e)}},e.prototype.updatePlayerInfo=function(e){var r={commVersion:t.version,pluginName:this.getPluginName(),pluginVersion:this.getPluginVersion(),playerTech:this.getPlayerTech(),playerVersion:this.getPlayerVersion(),telemetryId:this.getTelemetryId()};e.Hl.updatePlayerInfo(r)},e.prototype.onSetupTimeout=function(){window.HiveRequest=XMLHttpRequest,u.HiveRequestFactory.clear(),y.Hive.Reporting().close()},e.prototype.addTechEvent=function(e){this.wQ&&this.wQ.tech?(e.sessionId=this.wQ.id,this.wQ.tech.bd(this.wQ,e)):this.SQ.push(e)},e.prototype.flushTechEvents=function(){var e=this.SQ;return this.SQ=new Array,e},e.prototype.MQ=function(){var e=this,t=window;t.addEventListener?t.addEventListener("beforeunload",function(){e.qQ(!0,!1)},!1):t.attachEvent("onbeforeunload",function(){e.qQ(!0,!1)})},e.prototype.closeHiveSession=function(e){this.logger().debug("Manually Closing Session"+(e?" because: "+e:""));var t=this.getActiveSession();t&&u.HiveRequestFactory.clearSessionState(t.id),this.resetSession(!0)},e.prototype.resetSession=function(e){var t=this;this.qQ(e),!1===e?this.wQ&&this.RQ.every(function(e){return e.id!==t.wQ.id})&&this.RQ.unshift(this.wQ):this.RQ.length=0,this.GQ(),this.wQ=null,this.bQ=0,this.CQ=0},e.prototype.xQ=function(e,t){e.tech=t,this.RQ.push(e)},e.prototype.onActivateSession=function(e){if(null==this.wQ){for(var t=e||this.getPlayerSource(),r=0;r<this.RQ.length;r++){var i=this.RQ[r];if(i.isActive(t)){if(this.wQ=i,this.wQ.rl?this.wQ.rl.Fl.SD(this.wQ.ticket):this.VQ(),this.RQ.length=0,this.wQ.tech.onActiveSession(this.wQ),this.logger().notice(this.loggerId+"activating Session:["+this.wQ.id+"] Ticket:"+this.wQ.ticket.toString()+" HiveTech:["+this.wQ.tech.getName()+"]"),this.jQ(),this.options().onActiveSession)try{this.options().onActiveSession(i.toHiveSession())}catch(e){T.ErrorMonitor.ve().logError(this.loggerId+" exception in user-defined Generic onActiveSession callback: "+e)}return!0}}this.logger().warn(this.loggerId+"Closing sessions - the active stream doesn't match any initialized sessions"),this.logger().warn(this.loggerId+"Active:"+t+" - initialized: "+this.RQ.length),this.resetSession()}return!1},e.prototype.getActiveSession=function(){if(this.wQ)return this.wQ.toHiveSession()},e.prototype.VQ=function(){var e=!1;this.RQ.forEach(function(t){t.rl&&(e=!0)}),e&&y.Hive.Reporting().close()},e.prototype.isSessionActive=function(){if(null!=this.wQ){if(this.wQ.isActive(this.getPlayerSource()))return!0;this.logger().warn(this.loggerId+"Session src mismatch: "+this.getPlayerSource()+" != "+this.wQ.manifest),this.resetSession()}return!1},e.prototype.qQ=function(e,t){if(void 0===t&&(t=!0),null!=this.wQ)this.logger().notice(this.loggerId+"Stopping session ["+this.wQ.id+"]"),this.wQ.close(e,t);else if(this.RQ.length>0){var r=this.RQ[0];this.logger().notice(this.loggerId+"Attempt to stopping session ["+r.id+"]"),r.close(e,t)}},e.prototype.jQ=function(){var e=this;null==this.QQ&&(this.QQ=setInterval(function(){e.KQ()},this.options().feedbackPeriod),this.KQ())},e.prototype.GQ=function(){clearInterval(this.QQ),this.QQ=null},e.prototype.KQ=function(){var e=this;if(this.isSessionActive()){if(!this.isActive())return void this.resetSession();var t=new u.ul;t.Pl=this.getCurrentTime(),t.Al=this.getBufferLen(),t.Ol=this.bQ,t.width=this.getWindowSize().width,t.height=this.getWindowSize().height,t.YQ=this.isFullscreen(),this.wQ.il(this.FQ.bl(t)),this.wQ.tech.SL(this.wQ,t).fail(function(t){e.logger().warn(e.loggerId+"stats handling failed",t),e.GQ()})}},e.prototype.registerGenericEvents=function(){var e=this;try{u.Tl.ve(this.logger()).yl(function(t){var r=e.getPotentialSession();r&&!r.sl()&&(e.onEventFeedback(t?d.Gl.Yp.Kp:d.Gl.Yp.HIDDEN),e.logger().debug(t?"visible":"hidden"))})}catch(e){T.ErrorMonitor.ve().logError("error setting up the visibilityChange listener",this.loggerId,{error:e})}},e.prototype.onStartBuffering=function(e){this.isSessionActive()&&this.CQ<=0&&(this.CQ=Date.now(),(void 0==e||e)&&this.onEventFeedback(d.Gl.Yp.xp))},e.prototype.onEndBuffering=function(){var e=0==this.bQ;if(this.CQ>0){var t=Date.now()-this.CQ;return this.bQ+=t,this.logger().debug(this.loggerId+"reporting new buffering event of "+t),this.CQ=0,e&&this.KQ(),!0}return!1},e.prototype.onError=function(e,t,r){void 0===r&&(r=!0),this.onEventFeedback(d.Gl.Yp.ERROR,{code:-1,"player-code":e}),r&&this.resetSession()},e.prototype.onEventFeedback=function(e,t){var r=this,i=this.getPotentialSession();null==i||i!=this.wQ&&i.tech.getName()===w[w.HiveJava]||i.tech.CL(i,e,t).fail(function(e){r.logger().warn(r.loggerId+"error in forwarding player event to tech",e)})},e.prototype.getPotentialSession=function(){return this.wQ?this.wQ:this.RQ&&this.RQ.length>0?this.RQ[0]:void 0},e.prototype.initStatusCode=function(){this._Q=0},e.prototype.setStatusCode=function(e,t){this.initStatusCode();this._Q+=e<<28,t&&0===e&&(this._Q+=1<<4*(6-w[t.getName()])),e>0&&T.ErrorMonitor.ve().logError("Status Code Error",this.loggerId,{code:C[e]},["Plugin Error Code",C[e]])},e.prototype.getStatusCode=function(){return this._Q},e.prototype.getTelemetryId=function(){return this.options().telemetryId},e.logError=function(e,t,r,i){var n=T.ErrorMonitor.ve();n.logError.apply(n,arguments)},e.prototype.registerComm=function(e){O.zu.registerComm(this,e)},e}();e.Plugin=a}(M=t.HiveComm||(t.HiveComm={})),s.Framework.$(new f.WQ),s.Framework.ie("peer0",new E.zQ),s.Framework.ne("peer0"),"undefined"!=typeof window&&(window.HiveRequestFactory=u.HiveRequestFactory,void 0===window.HiveComm&&(window.HiveComm={}),window.HiveComm.Plugin=M.Plugin,window.HiveComm.Options=R.AQ,window.HiveComm.HiveRequestFactory=u.HiveRequestFactory,window.HiveComm.zu=O.zu,window.HiveComm.HivePlayerExtendedStats=u.HivePlayerExtendedStats,window.HiveComm.TechName=a.HiveComm.TechName,window.HiveComm.logError=M.Plugin.logError)},function(e,t){if(!RegExp.escape){var r=/[-[\]{}()*+?.\\^$|,#\s]/g;RegExp.escape=function(e){return e.replace(r,"\\$&")}}},function(e,t,r){"use strict";function i(){throw new Error("Can't construct. MapChanges is a mixin.")}var n=r(37),s=r(50);e.i=i;var o=(Object.prototype.hasOwnProperty,new n),a=null;i.prototype.JQ=function(){return o.has(this)||(a||(a=r(51)),o.set(this,a())),o.get(this)},i.prototype.XQ=function(e){var t=this.JQ();return e=e||"",t.has(e)||t.set(e,{Yc:new s,Wc:new s}),t.get(e)},i.prototype.ZQ=function(e,t,r){!this.Zc&&this.Xc&&this.Xc();var i,n=this.XQ(t);i=r?n.Yc:n.Wc,i.push(e),Object.defineProperty(this,"dispatchesMapChanges",{value:!0,Ah:!0,l:!0,p:!1});var s=this;return function(){s&&(s.$Q(e,t,r),s=null)}},i.prototype.$Q=function(e,t,r){var i,n=this.XQ(t);i=r?n.Yc:n.Wc;var s=i.Lk(e);if(!s)throw new Error("Can't remove map change listener: does not exist: token "+JSON.stringify(t));s.delete()},i.prototype.Xk=function(e,t,r){var i="Map"+(r?"WillChange":"Change");this.JQ().forEach(function(n,s){if(!n.isActive){n.isActive=!0;var o;o=r?n.Yc:n.Wc;var a="handle"+(s.slice(0,1).toUpperCase()+s.slice(1))+i;try{o.forEach(function(r){if(r[a])r[a](t,e,this);else{if(!r.call)throw new Error("Handler "+r+" has no method "+a+" and is not callable");r.call(r,t,e,this)}},this)}finally{n.isActive=!1}}},this)},i.prototype.eK=function(e,t){return this.ZQ(e,t,!0)},i.prototype.tK=function(e,t){return this.$Q(e,t,!0)},i.prototype.Jk=function(e,t){return this.Xk(e,t,!0)}},function(e,t,r){"use strict";function i(e,t,r,n){if(!(this instanceof i))return new i(e,t,r,n);t=t||Object.cs,r=r||Object.hash,n=n||Function.us,this.ls=t,this.ps=r,this.ds=n;var s=this;this.rK=new this.iK(null,function(){return new s.nK}),this.length=0,this.addEach(e)}var n=(r(11),r(51)),s=r(50),o=r(12),a=r(39),h=r(69),c=r(13);Object.prototype.hasOwnProperty;e.i=i,i.sK=i,Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.addEach(i.prototype,c.prototype),i.prototype.iK=n,i.prototype.nK=s,i.prototype.Es=function(e){return new this.constructor(e,this.ls,this.ps,this.ds)},i.prototype.has=function(e){var t=this.ps(e);return this.rK.get(t).has(e)},i.prototype.get=function(e,t){if(t)throw new Error("FastSet#get does not support second argument: equals");var r=this.ps(e),i=this.rK;return i.has(r)?i.get(r).get(e):this.ds(e)},i.prototype.delete=function(e,t){if(t)throw new Error("FastSet#delete does not support second argument: equals");var r=this.ps(e),i=this.rK;if(i.has(r)){var n=i.get(r);if(n.delete(e))return this.length--,0===n.length&&i.delete(r),!0}return!1},i.prototype.clear=function(){this.rK.clear(),this.length=0},i.prototype.add=function(e){var t=this.ps(e),r=this.rK;return r.has(t)||r.set(t,new this.nK(null,this.ls)),!r.get(t).has(e)&&(r.get(t).add(e),this.length++,!0)},i.prototype.reduce=function(e,t){var r=arguments[2],i=0;return this.rK.reduce(function(t,n){return n.reduce(function(t,n){return e.call(r,t,n,i++,this)},t,this)},t,this)},i.prototype.Bc=function(){if(this.length>0)return this.rK.Bc().Bc()},i.prototype.Hc=function(){return this.rK.values().kc().Hc()},i.prototype.log=function(e,t,r,i){e=e||h.hU,t=t||this.vs,r||(r=console.log,i=console),r=r.bind(i);var n=this.rK,s=n.keys();s.forEach(function(o,a){var h,c;a===s.length-1?(h=e.nU,c=" "):0===a?(h=e.rU,c=e.oU):(h=e.sU,c=e.oU);var u=n.get(o);r.call(i,h+e.eU+e.rU+" "+o),u.forEach(function(n,s){var o,a;s===u.head.Ok?(o=e.nU,a=" "):(o=e.sU,a=e.oU);var h;t(s,function(t){h?r.call(i,c+" "+a+"  "+t):(r.call(i,c+" "+o+e.eU+e.eU+t),h=!0)},function(t){r.call(i,c+" "+e.oU+"  "+t)})})})},i.prototype.vs=function(e,t){var r=e.value;Object(r)===r?JSON.stringify(r,null,4).split("\n").forEach(function(e){t(" "+e)}):t(" "+r)}},function(e,t,r){"use strict";function i(e){if(!(this instanceof i))return new i(e);if(Array.isArray(e)||"string"==typeof e)return i.Hc(e);if((e=n(e))instanceof i)return e;if(e.next)this.next=function(){return e.next()};else if(e.Hc){var t=e.Hc();this.next=function(){return t.next()}}else{if("[object Function]"!==n.prototype.toString.call(e))throw new TypeError("Can't iterate "+e);this.next=e}}e.i=i;var n=r(36),s=r(12);i.prototype.forEach=s.prototype.forEach,i.prototype.map=s.prototype.map,i.prototype.filter=s.prototype.filter,i.prototype.every=s.prototype.every,i.prototype.some=s.prototype.some,i.prototype.uo=s.prototype.uo,i.prototype.all=s.prototype.all,i.prototype.min=s.prototype.min,i.prototype.max=s.prototype.max,i.prototype.Nc=s.prototype.Nc,i.prototype.Dc=s.prototype.Dc,i.prototype.kc=s.prototype.kc,i.prototype.Lc=s.prototype.Lc,i.prototype.enumerate=s.prototype.enumerate,i.prototype.Fc=s.prototype.Fc,i.prototype.group=s.prototype.group,i.prototype.reversed=s.prototype.reversed,i.prototype.toArray=s.prototype.toArray,i.prototype.Pc=s.prototype.Pc,i.prototype.iterator=s.prototype.iterator,i.prototype.Gk=null,n.defineProperty(i.prototype,"_iterationObject",{get:function(){return this.Gk||(this.Gk={done:!1,value:void 0})}}),i.prototype.Es=function(e){var t=[];return t.addEach(e),t},i.prototype.oK=function(e){var t=i(this),r=arguments[1],s=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;return new t.constructor(function(){if(!0!==t.Vk.done){var i=e.call(r,t.next().value,s++,t);t.Vk.value=i}return t.Vk})},i.prototype.aK=function(e){var t=i(this),r=arguments[1],s=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;return new t.constructor(function(){for(var i;;){if(i=t.next(),!0===i.done)return i;if(e.call(r,i.value,s++,t))return i}})},i.prototype.reduce=function(e){var t,r=i(this),s=arguments[1],o=arguments[2],a=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;if(t=r.next(),!0===t.done){if(arguments.length>1)return arguments[1];throw TypeError("cannot reduce a value from an empty iterator with no initial value")}for(s=arguments.length>1?e.call(o,s,t.value,a,r):t.value,a++;;){if(t=r.next(),!0===t.done)return s;s=e.call(o,s,t.value,a,r),a++}},i.prototype.concat=function(){return i.concat(Array.prototype.concat.apply(this,arguments))},i.prototype.hK=function(e){var t,r,s=i(this),o=arguments[1],a=!1,h=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;for(;;){if(r=s.next(),!0===r.done)break;if(!e.call(o,r.value,h,s)){a=!0,t=r.value;break}h++}return a?s.constructor([t]).concat(s):s.constructor([])},i.prototype.cK=function(e){var t=i(this),r=arguments[1],s=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;return new t.constructor(function(){if(!0!==t.Vk.done){var i=t.next().value;e.call(r,i,s++,t)?t.Vk.value=i:(t.Vk.done=!0,t.Vk.value=void 0)}return t.Vk})},i.prototype.uK=function(){return i.Mc(Array.prototype.concat.apply(this,arguments))},i.prototype.lK=function(e){return i.count(e).uK(this)},i.Hc=function(e){var t;return t=0,new i(function(){if("object"==typeof e)for(;!(t in e);){if(t>=e.length){this.Vk.done=!0,this.Vk.value=void 0;break}t+=1}else t>=e.length&&(this.Vk.done=!0,this.Vk.value=void 0);return this.Vk.done||(this.Vk.value=e[t],t+=1),this.Vk})},i.pK=function(e,t){var r;return arguments.length<2&&(t=1/0),new i(function(){var n,s;return r&&(s=r()),r&&!0!==s.done||(t>0?(t--,n=i.Hc(e),s=(r=n.next.bind(n))()):(this.Vk.done=!0,s=this.Vk)),s})},i.concat=function(e){e=i(e);var t;return new i(function(){var r,n;return t&&(n=t()),n&&!0!==n.done?n:(n=e.next(),!1===n.done?(r=i(n.value),(t=r.next.bind(r))()):n)})},i.Mc=function(e){return e=i(e).map(i),new i(0===e.length?[]:function(){var t,r,i=e.map(function(e){return r=e.next(),!0===r.done&&(t=!0),r.value});return t?(this.Vk.done=!0,this.Vk.value=void 0):this.Vk.value=i,this.Vk})},i.Lc=function(){return i.Mc(Array.prototype.slice.call(arguments))},i.chain=function(){return i.concat(Array.prototype.slice.call(arguments))},i.range=function(e,t,r){return arguments.length<3&&(r=1),arguments.length<2&&(t=e,e=0),e=e||0,r=r||1,new i(function(){e>=t&&(this.Vk.done=!0,this.Vk.value=void 0);var i=e;return e+=r,this.Vk.value=i,this.Vk})},i.count=function(e,t){return i.range(e,1/0,t)},i.repeat=function(e,t){return new i.range(t).oK(function(){return e})}},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20),s=n.HiveComm.Options.Options,o=n.HiveComm.Options.mp;!function(e){!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.authTokenEnabled=!0,t.dashRemoveBitrateSize=!1,t.dashFilterBitrates=null,t.staticPartnerId=null,t.staticCustomerId=null,t.audioMetrics=!0,t.logJsonSnapshots=void 0,t}return i(t,e),t}(s);e.AQ=t;var r=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.hiveAuthTokenEnabled="authTokenEnabled",t.hiveDashRemoveBitrateSize="dashRemoveBitrateSize",t.hiveDashFilterBitrates="dashFilterBitrates",t.hiveLogJsonSnapshots="logJsonSnapshots",t.hiveStaticPartnerId="staticPartnerId",t.hiveStaticCustomerId="staticCustomerId",t.hiveAudioMetrics="audioMetrics",t}return i(t,e),t}(o);e.NQ=r}(e.Options||(e.Options={}))}(t.HiveComm||(t.HiveComm={}));var a=function(){function e(){}return e.DQ=function(e){"dashRemoveBitrateSize"in e&&e.dashRemoveBitrateSize&&window.HiveConfig&&window.HiveConfig.Dash&&(window.HiveConfig.Dash.DashRemoveBitrateSize=e.dashRemoveBitrateSize),"dashFilterBitrates"in e&&e.dashFilterBitrates&&window.HiveConfig&&window.HiveConfig.Dash&&(window.HiveConfig.Dash.DashFilterBitrates=e.dashFilterBitrates),"staticCustomerId"in e&&e.staticCustomerId&&window.HiveConfig&&window.HiveConfig.ClientInfo&&(window.HiveConfig.ClientInfo.uu=e.staticCustomerId),"staticPartnerId"in e&&e.staticPartnerId&&window.HiveConfig&&window.HiveConfig.ClientInfo&&(window.HiveConfig.ClientInfo.cu=e.staticPartnerId),"audioMetrics"in e&&!e.audioMetrics&&window.HiveConfig&&window.HiveConfig.Stats&&(window.HiveConfig.Stats.AudioAccounting=e.audioMetrics),"detectPrivateIP"in e&&"boolean"==typeof e.detectPrivateIP&&window.HiveConfig&&window.HiveConfig.ConnInfo&&(window.HiveConfig.ConnInfo.detectPrivateIP=e.detectPrivateIP),"logJsonSnapshots"in e&&e.logJsonSnapshots&&window.HiveConfig&&window.HiveConfig.DebugLogs&&(window.HiveConfig.DebugLogs.MetricSnapshotLogs=1,window.HiveConfig.DebugLogs.TrackSnapshotLogs=1,window.HiveConfig.DebugLogs.TrackerLogs=1)},e}();t.kQ=a},function(e,t,r){"use strict";!function(e){!function(e){e[e.HiveJS=0]="HiveJS",e[e.HiveJava=1]="HiveJava",e[e.StatsJS=2]="StatsJS",e[e.HiveJsProxy=3]="HiveJsProxy"}(e.TQ||(e.TQ={}));!function(e){e.StatsJS="StatsJS",e.HiveJsProxy="HiveJsProxy",e.HiveJava="HiveJava",e.HiveJS="HiveJS"}(e.TechName||(e.TechName={}))}(t.HiveComm||(t.HiveComm={}))},function(e,t,r){"use strict";var i=function(){function e(){var t=this;if(this.dK=new Array,this.callbacks=new Array,e.fe)throw new Error("Error: Instantiation failed: Use KeyHandlerHiveComm.getInstance() instead of new.");var r={};document.addEventListener("keydown",function(e){r[e.keyCode]=!0,t.fK(r)},!0),document.addEventListener("keyup",function(e){r={}},!0)}return e.ve=function(){return void 0===this.fe&&(this.fe=new e),this.fe},e.prototype.ye=function(e,t){this.dK.push(e),this.callbacks.push(t)},e.prototype.fK=function(e){for(var t=this,r=0;r<this.dK.length;r++)!function(r){var i=!0;t.dK[r].forEach(function(t){void 0!=e[t]&&e[t]||(i=!1)}),i&&t.callbacks[r]()}(r)},e}();t.Te=i},function(e,t){e.i=function(e){return e&&"object"==typeof e&&"function"==typeof e.cA&&"function"==typeof e.fill&&"function"==typeof e.gK}},function(e,t){"function"==typeof Object.create?e.i=function(e,t){e.EK=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,p:!1,Ah:!0,l:!0}})}:e.i=function(e,t){e.EK=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}},function(e,t,r){"use strict";var i=r(42),n=r(29),s=r(21),o=r(1),a=function(){function e(e){this.vK=n.L.pp?9989:9988,this.yK=-1,this.gL=e,this.TK()}return e.prototype.TK=function(){var e=this;this.gL.options().silent&&(HiveConfig&&(HiveConfig.ConnInfo.detectPrivateIP=!0),void 0===this.mK&&(this.url="//"+i.fp.dO+":"+this.vK+"/feedback",this.gL.logger().info("starting periodic alive ping to hive tester ["+this.url+"]"),this.mK=setInterval(function(){e.IK()},n.L.hR)))},e.prototype.IK=function(){var e=this,t=this.gL.getActiveSession(),r=void 0;t&&(r="S["+t.id+"]");var i=this.gL.getCurrentTime();i>this.yK?(this.gL.logger().info("sending hive tester ping ["+i+" > "+this.yK+"]"),s.bp(this.url).then(function(e){},function(t){o.ErrorMonitor.ve().logError("error sending hive tester ping",r,{error:t}),clearInterval(e.mK)})):this.gL.logger().warn("not sending hive tester ping ["+i+" <= "+this.yK+"]"),this.yK=i},e}();t.LQ=a},function(e,t){(function(t){e.i=t}).call(t,{})},function(e,t,r){"use strict";var i=r(40),n=r(112),s=r(45),o=r(0),a=function(){function e(){}return e.prototype.apply=function(e){e.bind(new i.ZA(o.Framework.V.I,n.SK,i.$A.sO)),e.bind(new i.ZA(o.Framework.V.R,s.TN.yN))},e}();t.WQ=a},function(e,t,r){"use strict";var i=r(68),n=function(){function e(){this.RK=new i,this.wK=new i,"undefined"!=typeof global?this.bK=global:this.bK=window}return e.prototype.C=function(){return!1},e.prototype.CK=function(e,t,r){},e.prototype.A=function(){},e.prototype.time=function(){return+new Date},e.prototype.setTimeout=function(e,t){var r=this,i=this.bK.setTimeout(function(){r.RK.delete(i),e()},t);return this.RK.add(i),i},e.prototype.clearTimeout=function(e){return this.RK.delete(e),this.bK.clearTimeout(e),!0},e.prototype.setInterval=function(e,t){var r=this.bK.setInterval(function(){e()},t);return this.wK.add(r),r},e.prototype.clearInterval=function(e){return this.wK.delete(e),this.bK.clearInterval(e),!0},e.prototype.O=function(){var e=this;this.RK.forEach(function(t){return e.clearTimeout(t)}),this.wK.forEach(function(t){return e.clearInterval(t)})},e}();t.SK=n},function(e,t,r){"use strict";var i=r(40),n=r(0),s=r(45),o=r(19),a=r(8),h=r(22),c=r(75),u=r(76),l=r(77),p=r(79),d=r(80),f=r(6),g=f.he.Ih;if(g)var E=r(81).CH;else var v=r(83).nx;var y=function(){function e(){}return e.prototype.apply=function(e){e.bind(new i.ZA(a.pc.hc,o.lp,i.$A.sO)),e.bind(new i.ZA(a.pc.G,u.qB,i.$A.sO)),e.bind(new i.ZA(a.pc.nc,l.WB,i.$A.sO)),e.bind(new i.ZA(a.pc.M,p.vH,i.$A.sO)),e.bind(new i.ZA(n.Framework.V.R,s.TN.yN,i.$A.sO)),g?e.bind(new i.ZA(a.pc.sc,E,i.$A.sO)):e.bind(new i.ZA(a.pc.sc,v,i.$A.sO)),e.bind(new i.ZA(a.pc.oc,d.IH,i.$A.sO)),e.bind(new i.ZA(a.pc.cc,c.Stats.ZF,i.$A.pO)),e.bind(new i.ZA(a.pc.ic,c.Stats.ql,i.$A.pO)),e.bind(new i.ZA(a.pc.uc,h.Gl.Bd,i.$A.pO)),e.bind(new i.ZA(a.pc.lc,h.Gl.ql,i.$A.pO))},e}();t.zQ=y},function(e,t,r){var i=r(33);"undefined"==typeof hive&&(hive={}),void 0===hive.snapshots&&(hive.snapshots={}),hive.snapshots.Traffic=function(e){this.reqN=null,this.respFallbackN=null,this.respFallbackErrN=null,this.respP2pN=null,this.reqOtherN=null,this.respFallbackOtherN=null,this.respFallbackOthertErrN=null,this.srcReqN=null,this.srcRespN=null,this.srcRespErrN=null,this.srcReqQt=null,this.srcRespQt=null,this.srcOverQt=null,this.srcOtherReqN=null,this.srcOtherRespN=null,this.srcOtherRespErrN=null,this.srcOtherReqQt=null,this.srcOtherRespQt=null,this.srcOtherOverQt=null,this.p2pSubReqN=null,this.p2pSubRespN=null,this.p2pSubRespPartN=null,this.p2pSubRespErrN=null,this.p2pSubRespExpN=null,this.p2pSubReqQt=null,this.p2pSubRespQt=null,this.p2pDirectQt=null,this.p2pRelayQt=null,this.p2pNatQt=null,this.p2pUdpbQt=null,this.fallAgentRespN=null,this.fallAgentPredHitN=null,this.fallAgentFailedRespN=null,this.fallAgentPredMissN=null,this.fallAgentPredPartialHitN=null,this.fallAgenTrafficSuccessQt=null,this.fallAgenTrafficFailureQt=null,this.p2pAgentPredHitN=null,this.p2pAgentPredMissN=null,this.p2pAgentPredPartialHitN=null,this.p2pAgenTrafficSuccessQt=null,this.p2pAgenTrafficFailureQt=null,this.respP2pOtherN=null,this.lCacheRespN=null,this.lCacheRespQt=null,this.p2pOutSiteLowPrio=null,e&&(void 0!==e.reqN&&null!==e.reqN&&(this.reqN=e.reqN),void 0!==e.respFallbackN&&null!==e.respFallbackN&&(this.respFallbackN=e.respFallbackN),void 0!==e.respFallbackErrN&&null!==e.respFallbackErrN&&(this.respFallbackErrN=e.respFallbackErrN),void 0!==e.respP2pN&&null!==e.respP2pN&&(this.respP2pN=e.respP2pN),void 0!==e.reqOtherN&&null!==e.reqOtherN&&(this.reqOtherN=e.reqOtherN),void 0!==e.respFallbackOtherN&&null!==e.respFallbackOtherN&&(this.respFallbackOtherN=e.respFallbackOtherN),void 0!==e.respFallbackOthertErrN&&null!==e.respFallbackOthertErrN&&(this.respFallbackOthertErrN=e.respFallbackOthertErrN),void 0!==e.srcReqN&&null!==e.srcReqN&&(this.srcReqN=e.srcReqN),void 0!==e.srcRespN&&null!==e.srcRespN&&(this.srcRespN=e.srcRespN),void 0!==e.srcRespErrN&&null!==e.srcRespErrN&&(this.srcRespErrN=e.srcRespErrN),void 0!==e.srcReqQt&&null!==e.srcReqQt&&(this.srcReqQt=e.srcReqQt),void 0!==e.srcRespQt&&null!==e.srcRespQt&&(this.srcRespQt=e.srcRespQt),void 0!==e.srcOverQt&&null!==e.srcOverQt&&(this.srcOverQt=e.srcOverQt),void 0!==e.srcOtherReqN&&null!==e.srcOtherReqN&&(this.srcOtherReqN=e.srcOtherReqN),void 0!==e.srcOtherRespN&&null!==e.srcOtherRespN&&(this.srcOtherRespN=e.srcOtherRespN),void 0!==e.srcOtherRespErrN&&null!==e.srcOtherRespErrN&&(this.srcOtherRespErrN=e.srcOtherRespErrN),void 0!==e.srcOtherReqQt&&null!==e.srcOtherReqQt&&(this.srcOtherReqQt=e.srcOtherReqQt),void 0!==e.srcOtherRespQt&&null!==e.srcOtherRespQt&&(this.srcOtherRespQt=e.srcOtherRespQt),void 0!==e.srcOtherOverQt&&null!==e.srcOtherOverQt&&(this.srcOtherOverQt=e.srcOtherOverQt),void 0!==e.p2pSubReqN&&null!==e.p2pSubReqN&&(this.p2pSubReqN=e.p2pSubReqN),void 0!==e.p2pSubRespN&&null!==e.p2pSubRespN&&(this.p2pSubRespN=e.p2pSubRespN),void 0!==e.p2pSubRespPartN&&null!==e.p2pSubRespPartN&&(this.p2pSubRespPartN=e.p2pSubRespPartN),void 0!==e.p2pSubRespErrN&&null!==e.p2pSubRespErrN&&(this.p2pSubRespErrN=e.p2pSubRespErrN),void 0!==e.p2pSubRespExpN&&null!==e.p2pSubRespExpN&&(this.p2pSubRespExpN=e.p2pSubRespExpN),void 0!==e.p2pSubReqQt&&null!==e.p2pSubReqQt&&(this.p2pSubReqQt=e.p2pSubReqQt),void 0!==e.p2pSubRespQt&&null!==e.p2pSubRespQt&&(this.p2pSubRespQt=e.p2pSubRespQt),void 0!==e.p2pDirectQt&&null!==e.p2pDirectQt&&(this.p2pDirectQt=e.p2pDirectQt),void 0!==e.p2pRelayQt&&null!==e.p2pRelayQt&&(this.p2pRelayQt=e.p2pRelayQt),void 0!==e.p2pNatQt&&null!==e.p2pNatQt&&(this.p2pNatQt=e.p2pNatQt),void 0!==e.p2pUdpbQt&&null!==e.p2pUdpbQt&&(this.p2pUdpbQt=e.p2pUdpbQt),void 0!==e.fallAgentRespN&&null!==e.fallAgentRespN&&(this.fallAgentRespN=e.fallAgentRespN),void 0!==e.fallAgentPredHitN&&null!==e.fallAgentPredHitN&&(this.fallAgentPredHitN=e.fallAgentPredHitN),void 0!==e.fallAgentFailedRespN&&null!==e.fallAgentFailedRespN&&(this.fallAgentFailedRespN=e.fallAgentFailedRespN),void 0!==e.fallAgentPredMissN&&null!==e.fallAgentPredMissN&&(this.fallAgentPredMissN=e.fallAgentPredMissN),void 0!==e.fallAgentPredPartialHitN&&null!==e.fallAgentPredPartialHitN&&(this.fallAgentPredPartialHitN=e.fallAgentPredPartialHitN),void 0!==e.fallAgenTrafficSuccessQt&&null!==e.fallAgenTrafficSuccessQt&&(this.fallAgenTrafficSuccessQt=e.fallAgenTrafficSuccessQt),void 0!==e.fallAgenTrafficFailureQt&&null!==e.fallAgenTrafficFailureQt&&(this.fallAgenTrafficFailureQt=e.fallAgenTrafficFailureQt),void 0!==e.p2pAgentPredHitN&&null!==e.p2pAgentPredHitN&&(this.p2pAgentPredHitN=e.p2pAgentPredHitN),void 0!==e.p2pAgentPredMissN&&null!==e.p2pAgentPredMissN&&(this.p2pAgentPredMissN=e.p2pAgentPredMissN),void 0!==e.p2pAgentPredPartialHitN&&null!==e.p2pAgentPredPartialHitN&&(this.p2pAgentPredPartialHitN=e.p2pAgentPredPartialHitN),void 0!==e.p2pAgenTrafficSuccessQt&&null!==e.p2pAgenTrafficSuccessQt&&(this.p2pAgenTrafficSuccessQt=e.p2pAgenTrafficSuccessQt),void 0!==e.p2pAgenTrafficFailureQt&&null!==e.p2pAgenTrafficFailureQt&&(this.p2pAgenTrafficFailureQt=e.p2pAgenTrafficFailureQt),void 0!==e.respP2pOtherN&&null!==e.respP2pOtherN&&(this.respP2pOtherN=e.respP2pOtherN),void 0!==e.lCacheRespN&&null!==e.lCacheRespN&&(this.lCacheRespN=e.lCacheRespN),void 0!==e.lCacheRespQt&&null!==e.lCacheRespQt&&(this.lCacheRespQt=e.lCacheRespQt),void 0!==e.p2pOutSiteLowPrio&&null!==e.p2pOutSiteLowPrio&&(this.p2pOutSiteLowPrio=e.p2pOutSiteLowPrio))},hive.snapshots.Traffic.prototype={},hive.snapshots.Traffic.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.reqN=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.DOUBLE?this.respFallbackN=e.E_().value:e.Mb(r);break;case 3:r==i.Type.I32?this.respFallbackErrN=e.Fb().value:e.Mb(r);break;case 4:r==i.Type.DOUBLE?this.respP2pN=e.E_().value:e.Mb(r);break;case 5:r==i.Type.I32?this.reqOtherN=e.Fb().value:e.Mb(r);break;case 6:r==i.Type.I32?this.respFallbackOtherN=e.Fb().value:e.Mb(r);break;case 7:r==i.Type.I32?this.respFallbackOthertErrN=e.Fb().value:e.Mb(r);break;case 8:r==i.Type.I32?this.srcReqN=e.Fb().value:e.Mb(r);break;case 9:r==i.Type.I32?this.srcRespN=e.Fb().value:e.Mb(r);break;case 10:r==i.Type.I32?this.srcRespErrN=e.Fb().value:e.Mb(r);break;case 11:r==i.Type.I64?this.srcReqQt=e.g_().value:e.Mb(r);break;case 12:r==i.Type.I64?this.srcRespQt=e.g_().value:e.Mb(r);break;case 13:r==i.Type.I64?this.srcOverQt=e.g_().value:e.Mb(r);break;case 14:r==i.Type.I32?this.srcOtherReqN=e.Fb().value:e.Mb(r);break;case 15:r==i.Type.I32?this.srcOtherRespN=e.Fb().value:e.Mb(r);break;case 16:r==i.Type.I32?this.srcOtherRespErrN=e.Fb().value:e.Mb(r);break;case 17:r==i.Type.I64?this.srcOtherReqQt=e.g_().value:e.Mb(r);break;case 18:r==i.Type.I64?this.srcOtherRespQt=e.g_().value:e.Mb(r);break;case 19:r==i.Type.I64?this.srcOtherOverQt=e.g_().value:e.Mb(r);break;case 20:r==i.Type.I32?this.p2pSubReqN=e.Fb().value:e.Mb(r);break;case 21:r==i.Type.I32?this.p2pSubRespN=e.Fb().value:e.Mb(r);break;case 22:r==i.Type.DOUBLE?this.p2pSubRespPartN=e.E_().value:e.Mb(r);break;case 23:r==i.Type.DOUBLE?this.p2pSubRespErrN=e.E_().value:e.Mb(r);break;case 24:r==i.Type.I32?this.p2pSubRespExpN=e.Fb().value:e.Mb(r);break;case 25:r==i.Type.I64?this.p2pSubReqQt=e.g_().value:e.Mb(r);break;case 26:r==i.Type.I64?this.p2pSubRespQt=e.g_().value:e.Mb(r);break;case 27:r==i.Type.I64?this.p2pDirectQt=e.g_().value:e.Mb(r);break;case 28:r==i.Type.I64?this.p2pRelayQt=e.g_().value:e.Mb(r);break;case 29:r==i.Type.I64?this.p2pNatQt=e.g_().value:e.Mb(r);break;case 30:r==i.Type.I64?this.p2pUdpbQt=e.g_().value:e.Mb(r);break;case 31:r==i.Type.I32?this.fallAgentRespN=e.Fb().value:e.Mb(r);break;case 32:r==i.Type.I32?this.fallAgentPredHitN=e.Fb().value:e.Mb(r);break;case 33:r==i.Type.I32?this.fallAgentFailedRespN=e.Fb().value:e.Mb(r);break;case 34:r==i.Type.I32?this.fallAgentPredMissN=e.Fb().value:e.Mb(r);break;case 35:r==i.Type.I32?this.fallAgentPredPartialHitN=e.Fb().value:e.Mb(r);break;case 36:r==i.Type.I64?this.fallAgenTrafficSuccessQt=e.g_().value:e.Mb(r);break;case 37:r==i.Type.I64?this.fallAgenTrafficFailureQt=e.g_().value:e.Mb(r);break;case 38:r==i.Type.I32?this.p2pAgentPredHitN=e.Fb().value:e.Mb(r);break;case 39:r==i.Type.I32?this.p2pAgentPredMissN=e.Fb().value:e.Mb(r);break;case 40:r==i.Type.I32?this.p2pAgentPredPartialHitN=e.Fb().value:e.Mb(r);break;case 41:r==i.Type.I64?this.p2pAgenTrafficSuccessQt=e.g_().value:e.Mb(r);break;case 42:r==i.Type.I64?this.p2pAgenTrafficFailureQt=e.g_().value:e.Mb(r);break;case 43:r==i.Type.I32?this.respP2pOtherN=e.Fb().value:e.Mb(r);break;case 44:r==i.Type.I32?this.lCacheRespN=e.Fb().value:e.Mb(r);break;case 45:r==i.Type.I64?this.lCacheRespQt=e.g_().value:e.Mb(r);break;case 46:r==i.Type.I64?this.p2pOutSiteLowPrio=e.g_().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.Traffic.prototype.write=function(e){e.Hb("Traffic"),null!==this.reqN&&void 0!==this.reqN&&(e.xb("reqN",i.Type.I32,1),e.Vb(this.reqN),e.Gb()),null!==this.respFallbackN&&void 0!==this.respFallbackN&&(e.xb("respFallbackN",i.Type.DOUBLE,2),e.YC(this.respFallbackN),e.Gb()),null!==this.respFallbackErrN&&void 0!==this.respFallbackErrN&&(e.xb("respFallbackErrN",i.Type.I32,3),e.Vb(this.respFallbackErrN),e.Gb()),null!==this.respP2pN&&void 0!==this.respP2pN&&(e.xb("respP2pN",i.Type.DOUBLE,4),e.YC(this.respP2pN),e.Gb()),null!==this.reqOtherN&&void 0!==this.reqOtherN&&(e.xb("reqOtherN",i.Type.I32,5),e.Vb(this.reqOtherN),e.Gb()),null!==this.respFallbackOtherN&&void 0!==this.respFallbackOtherN&&(e.xb("respFallbackOtherN",i.Type.I32,6),e.Vb(this.respFallbackOtherN),e.Gb()),null!==this.respFallbackOthertErrN&&void 0!==this.respFallbackOthertErrN&&(e.xb("respFallbackOthertErrN",i.Type.I32,7),e.Vb(this.respFallbackOthertErrN),e.Gb()),null!==this.srcReqN&&void 0!==this.srcReqN&&(e.xb("srcReqN",i.Type.I32,8),e.Vb(this.srcReqN),e.Gb()),null!==this.srcRespN&&void 0!==this.srcRespN&&(e.xb("srcRespN",i.Type.I32,9),e.Vb(this.srcRespN),e.Gb()),null!==this.srcRespErrN&&void 0!==this.srcRespErrN&&(e.xb("srcRespErrN",i.Type.I32,10),e.Vb(this.srcRespErrN),e.Gb()),null!==this.srcReqQt&&void 0!==this.srcReqQt&&(e.xb("srcReqQt",i.Type.I64,11),e.KC(this.srcReqQt),e.Gb()),null!==this.srcRespQt&&void 0!==this.srcRespQt&&(e.xb("srcRespQt",i.Type.I64,12),e.KC(this.srcRespQt),e.Gb()),null!==this.srcOverQt&&void 0!==this.srcOverQt&&(e.xb("srcOverQt",i.Type.I64,13),e.KC(this.srcOverQt),e.Gb()),null!==this.srcOtherReqN&&void 0!==this.srcOtherReqN&&(e.xb("srcOtherReqN",i.Type.I32,14),e.Vb(this.srcOtherReqN),e.Gb()),null!==this.srcOtherRespN&&void 0!==this.srcOtherRespN&&(e.xb("srcOtherRespN",i.Type.I32,15),e.Vb(this.srcOtherRespN),e.Gb()),null!==this.srcOtherRespErrN&&void 0!==this.srcOtherRespErrN&&(e.xb("srcOtherRespErrN",i.Type.I32,16),e.Vb(this.srcOtherRespErrN),e.Gb()),null!==this.srcOtherReqQt&&void 0!==this.srcOtherReqQt&&(e.xb("srcOtherReqQt",i.Type.I64,17),e.KC(this.srcOtherReqQt),e.Gb()),null!==this.srcOtherRespQt&&void 0!==this.srcOtherRespQt&&(e.xb("srcOtherRespQt",i.Type.I64,18),e.KC(this.srcOtherRespQt),e.Gb()),null!==this.srcOtherOverQt&&void 0!==this.srcOtherOverQt&&(e.xb("srcOtherOverQt",i.Type.I64,19),e.KC(this.srcOtherOverQt),e.Gb()),null!==this.p2pSubReqN&&void 0!==this.p2pSubReqN&&(e.xb("p2pSubReqN",i.Type.I32,20),e.Vb(this.p2pSubReqN),e.Gb()),null!==this.p2pSubRespN&&void 0!==this.p2pSubRespN&&(e.xb("p2pSubRespN",i.Type.I32,21),e.Vb(this.p2pSubRespN),e.Gb()),null!==this.p2pSubRespPartN&&void 0!==this.p2pSubRespPartN&&(e.xb("p2pSubRespPartN",i.Type.DOUBLE,22),e.YC(this.p2pSubRespPartN),e.Gb()),null!==this.p2pSubRespErrN&&void 0!==this.p2pSubRespErrN&&(e.xb("p2pSubRespErrN",i.Type.DOUBLE,23),e.YC(this.p2pSubRespErrN),e.Gb()),null!==this.p2pSubRespExpN&&void 0!==this.p2pSubRespExpN&&(e.xb("p2pSubRespExpN",i.Type.I32,24),e.Vb(this.p2pSubRespExpN),e.Gb()),null!==this.p2pSubReqQt&&void 0!==this.p2pSubReqQt&&(e.xb("p2pSubReqQt",i.Type.I64,25),e.KC(this.p2pSubReqQt),e.Gb()),null!==this.p2pSubRespQt&&void 0!==this.p2pSubRespQt&&(e.xb("p2pSubRespQt",i.Type.I64,26),e.KC(this.p2pSubRespQt),e.Gb()),null!==this.p2pDirectQt&&void 0!==this.p2pDirectQt&&(e.xb("p2pDirectQt",i.Type.I64,27),e.KC(this.p2pDirectQt),e.Gb()),null!==this.p2pRelayQt&&void 0!==this.p2pRelayQt&&(e.xb("p2pRelayQt",i.Type.I64,28),e.KC(this.p2pRelayQt),e.Gb()),null!==this.p2pNatQt&&void 0!==this.p2pNatQt&&(e.xb("p2pNatQt",i.Type.I64,29),e.KC(this.p2pNatQt),e.Gb()),null!==this.p2pUdpbQt&&void 0!==this.p2pUdpbQt&&(e.xb("p2pUdpbQt",i.Type.I64,30),e.KC(this.p2pUdpbQt),e.Gb()),null!==this.fallAgentRespN&&void 0!==this.fallAgentRespN&&(e.xb("fallAgentRespN",i.Type.I32,31),e.Vb(this.fallAgentRespN),e.Gb()),null!==this.fallAgentPredHitN&&void 0!==this.fallAgentPredHitN&&(e.xb("fallAgentPredHitN",i.Type.I32,32),e.Vb(this.fallAgentPredHitN),e.Gb()),null!==this.fallAgentFailedRespN&&void 0!==this.fallAgentFailedRespN&&(e.xb("fallAgentFailedRespN",i.Type.I32,33),e.Vb(this.fallAgentFailedRespN),e.Gb()),null!==this.fallAgentPredMissN&&void 0!==this.fallAgentPredMissN&&(e.xb("fallAgentPredMissN",i.Type.I32,34),e.Vb(this.fallAgentPredMissN),e.Gb()),null!==this.fallAgentPredPartialHitN&&void 0!==this.fallAgentPredPartialHitN&&(e.xb("fallAgentPredPartialHitN",i.Type.I32,35),e.Vb(this.fallAgentPredPartialHitN),e.Gb()),null!==this.fallAgenTrafficSuccessQt&&void 0!==this.fallAgenTrafficSuccessQt&&(e.xb("fallAgenTrafficSuccessQt",i.Type.I64,36),e.KC(this.fallAgenTrafficSuccessQt),e.Gb()),null!==this.fallAgenTrafficFailureQt&&void 0!==this.fallAgenTrafficFailureQt&&(e.xb("fallAgenTrafficFailureQt",i.Type.I64,37),e.KC(this.fallAgenTrafficFailureQt),e.Gb()),null!==this.p2pAgentPredHitN&&void 0!==this.p2pAgentPredHitN&&(e.xb("p2pAgentPredHitN",i.Type.I32,38),e.Vb(this.p2pAgentPredHitN),e.Gb()),null!==this.p2pAgentPredMissN&&void 0!==this.p2pAgentPredMissN&&(e.xb("p2pAgentPredMissN",i.Type.I32,39),e.Vb(this.p2pAgentPredMissN),e.Gb()),null!==this.p2pAgentPredPartialHitN&&void 0!==this.p2pAgentPredPartialHitN&&(e.xb("p2pAgentPredPartialHitN",i.Type.I32,40),e.Vb(this.p2pAgentPredPartialHitN),e.Gb()),null!==this.p2pAgenTrafficSuccessQt&&void 0!==this.p2pAgenTrafficSuccessQt&&(e.xb("p2pAgenTrafficSuccessQt",i.Type.I64,41),e.KC(this.p2pAgenTrafficSuccessQt),e.Gb()),null!==this.p2pAgenTrafficFailureQt&&void 0!==this.p2pAgenTrafficFailureQt&&(e.xb("p2pAgenTrafficFailureQt",i.Type.I64,42),e.KC(this.p2pAgenTrafficFailureQt),e.Gb()),null!==this.respP2pOtherN&&void 0!==this.respP2pOtherN&&(e.xb("respP2pOtherN",i.Type.I32,43),e.Vb(this.respP2pOtherN),e.Gb()),null!==this.lCacheRespN&&void 0!==this.lCacheRespN&&(e.xb("lCacheRespN",i.Type.I32,44),e.Vb(this.lCacheRespN),e.Gb()),null!==this.lCacheRespQt&&void 0!==this.lCacheRespQt&&(e.xb("lCacheRespQt",i.Type.I64,45),e.KC(this.lCacheRespQt),e.Gb()),null!==this.p2pOutSiteLowPrio&&void 0!==this.p2pOutSiteLowPrio&&(e.xb("p2pOutSiteLowPrio",i.Type.I64,46),e.KC(this.p2pOutSiteLowPrio),e.Gb()),e.jb(),e.Qb()},hive.snapshots.Metrics=function(e){this.upBW=null,this.downBW=null,this.memN=null,this.prtInN=null,this.prtOutN=null,this.initVideoBufQt=null,this.videoAvgBufQt=null,this.videoBufQt=null,this.videoBufN=null,this.initAudioBufQt=null,this.audioAvgBufQt=null,this.audioBufQt=null,this.audioBufN=null,this.bitrateUpN=null,this.bitrateDwnN=null,this.delay=null,this.delayEnforcement=null,this.lookupReqEstablished=null,this.lookupReqAccept=null,this.fallbackAvgTp=null,this.srcThroughput=null,this.diskReadTimeout=null,this.diskReadRate=null,this.diskStoreRate=null,this.diskRemoveRate=null,this.diskCacheSize=null,this.clientBufferMs=null,this.lookupTotal=null,this.lookupNotFound=null,this.lookupFailed=null,this.lookupLatency=null,this.trackerFailed=null,this.trackerLatency=null,this.snapshotFailed=null,this.snapshotLatency=null,this._K=null,e&&(void 0!==e.upBW&&null!==e.upBW&&(this.upBW=e.upBW),void 0!==e.downBW&&null!==e.downBW&&(this.downBW=e.downBW),void 0!==e.memN&&null!==e.memN&&(this.memN=e.memN),void 0!==e.prtInN&&null!==e.prtInN&&(this.prtInN=e.prtInN),void 0!==e.prtOutN&&null!==e.prtOutN&&(this.prtOutN=e.prtOutN),void 0!==e.initVideoBufQt&&null!==e.initVideoBufQt&&(this.initVideoBufQt=e.initVideoBufQt),void 0!==e.videoAvgBufQt&&null!==e.videoAvgBufQt&&(this.videoAvgBufQt=e.videoAvgBufQt),void 0!==e.videoBufQt&&null!==e.videoBufQt&&(this.videoBufQt=e.videoBufQt),void 0!==e.videoBufN&&null!==e.videoBufN&&(this.videoBufN=e.videoBufN),void 0!==e.initAudioBufQt&&null!==e.initAudioBufQt&&(this.initAudioBufQt=e.initAudioBufQt),void 0!==e.audioAvgBufQt&&null!==e.audioAvgBufQt&&(this.audioAvgBufQt=e.audioAvgBufQt),void 0!==e.audioBufQt&&null!==e.audioBufQt&&(this.audioBufQt=e.audioBufQt),void 0!==e.audioBufN&&null!==e.audioBufN&&(this.audioBufN=e.audioBufN),void 0!==e.bitrateUpN&&null!==e.bitrateUpN&&(this.bitrateUpN=e.bitrateUpN),void 0!==e.bitrateDwnN&&null!==e.bitrateDwnN&&(this.bitrateDwnN=e.bitrateDwnN),void 0!==e.delay&&null!==e.delay&&(this.delay=e.delay),void 0!==e.delayEnforcement&&null!==e.delayEnforcement&&(this.delayEnforcement=e.delayEnforcement),void 0!==e.lookupReqEstablished&&null!==e.lookupReqEstablished&&(this.lookupReqEstablished=e.lookupReqEstablished),void 0!==e.lookupReqAccept&&null!==e.lookupReqAccept&&(this.lookupReqAccept=e.lookupReqAccept),void 0!==e.fallbackAvgTp&&null!==e.fallbackAvgTp&&(this.fallbackAvgTp=e.fallbackAvgTp),void 0!==e.srcThroughput&&null!==e.srcThroughput&&(this.srcThroughput=e.srcThroughput),void 0!==e.diskReadTimeout&&null!==e.diskReadTimeout&&(this.diskReadTimeout=e.diskReadTimeout),void 0!==e.diskReadRate&&null!==e.diskReadRate&&(this.diskReadRate=e.diskReadRate),void 0!==e.diskStoreRate&&null!==e.diskStoreRate&&(this.diskStoreRate=e.diskStoreRate),void 0!==e.diskRemoveRate&&null!==e.diskRemoveRate&&(this.diskRemoveRate=e.diskRemoveRate),void 0!==e.diskCacheSize&&null!==e.diskCacheSize&&(this.diskCacheSize=e.diskCacheSize),void 0!==e.clientBufferMs&&null!==e.clientBufferMs&&(this.clientBufferMs=e.clientBufferMs),void 0!==e.lookupTotal&&null!==e.lookupTotal&&(this.lookupTotal=e.lookupTotal),void 0!==e.lookupNotFound&&null!==e.lookupNotFound&&(this.lookupNotFound=e.lookupNotFound),void 0!==e.lookupFailed&&null!==e.lookupFailed&&(this.lookupFailed=e.lookupFailed),void 0!==e.lookupLatency&&null!==e.lookupLatency&&(this.lookupLatency=e.lookupLatency),void 0!==e.trackerFailed&&null!==e.trackerFailed&&(this.trackerFailed=e.trackerFailed),void 0!==e.trackerLatency&&null!==e.trackerLatency&&(this.trackerLatency=e.trackerLatency),void 0!==e.snapshotFailed&&null!==e.snapshotFailed&&(this.snapshotFailed=e.snapshotFailed),void 0!==e.snapshotLatency&&null!==e.snapshotLatency&&(this.snapshotLatency=e.snapshotLatency),void 0!==e._K&&null!==e._K&&(this._K=e._K))},hive.snapshots.Metrics.prototype={},hive.snapshots.Metrics.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.upBW=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.I32?this.downBW=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.I32?this.memN=e.Fb().value:e.Mb(r);break;case 4:r==i.Type.I32?this.prtInN=e.Fb().value:e.Mb(r);break;case 5:r==i.Type.I32?this.prtOutN=e.Fb().value:e.Mb(r);break;case 6:r==i.Type.I64?this.initVideoBufQt=e.g_().value:e.Mb(r);break;case 7:r==i.Type.DOUBLE?this.videoAvgBufQt=e.E_().value:e.Mb(r);break;case 8:r==i.Type.I64?this.videoBufQt=e.g_().value:e.Mb(r);break;case 9:r==i.Type.I32?this.videoBufN=e.Fb().value:e.Mb(r);break;case 10:r==i.Type.I32?this.initAudioBufQt=e.Fb().value:e.Mb(r);break;case 11:r==i.Type.DOUBLE?this.audioAvgBufQt=e.E_().value:e.Mb(r);break;case 12:r==i.Type.I64?this.audioBufQt=e.g_().value:e.Mb(r);break;case 13:r==i.Type.I32?this.audioBufN=e.Fb().value:e.Mb(r);break;case 14:r==i.Type.I32?this.bitrateUpN=e.Fb().value:e.Mb(r);break;case 15:r==i.Type.I32?this.bitrateDwnN=e.Fb().value:e.Mb(r);break;case 16:r==i.Type.I32?this.delay=e.Fb().value:e.Mb(r);break;case 17:r==i.Type.I32?this.delayEnforcement=e.Fb().value:e.Mb(r);break;case 18:r==i.Type.I32?this.lookupReqEstablished=e.Fb().value:e.Mb(r);break;case 19:r==i.Type.I32?this.lookupReqAccept=e.Fb().value:e.Mb(r);break;case 20:r==i.Type.DOUBLE?this.fallbackAvgTp=e.E_().value:e.Mb(r);break;case 21:r==i.Type.DOUBLE?this.srcThroughput=e.E_().value:e.Mb(r);break;case 22:r==i.Type.I32?this.diskReadTimeout=e.Fb().value:e.Mb(r);break;case 23:r==i.Type.DOUBLE?this.diskReadRate=e.E_().value:e.Mb(r);break;case 24:r==i.Type.DOUBLE?this.diskStoreRate=e.E_().value:e.Mb(r);break;case 25:r==i.Type.DOUBLE?this.diskRemoveRate=e.E_().value:e.Mb(r);break;case 26:r==i.Type.I64?this.diskCacheSize=e.g_().value:e.Mb(r);break;case 27:r==i.Type.I32?this.clientBufferMs=e.Fb().value:e.Mb(r);break;case 28:r==i.Type.I32?this.lookupTotal=e.Fb().value:e.Mb(r);break;case 29:r==i.Type.I32?this.lookupNotFound=e.Fb().value:e.Mb(r);break;case 30:r==i.Type.I32?this.lookupFailed=e.Fb().value:e.Mb(r);break;case 31:r==i.Type.I32?this.lookupLatency=e.Fb().value:e.Mb(r);break;case 32:r==i.Type.I32?this.trackerFailed=e.Fb().value:e.Mb(r);break;case 33:r==i.Type.I32?this.trackerLatency=e.Fb().value:e.Mb(r);break;case 34:r==i.Type.I32?this.snapshotFailed=e.Fb().value:e.Mb(r);break;case 35:r==i.Type.I32?this.snapshotLatency=e.Fb().value:e.Mb(r);break;case 36:r==i.Type.I32?this._K=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.Metrics.prototype.write=function(e){e.Hb("Metrics"),null!==this.upBW&&void 0!==this.upBW&&(e.xb("upBW",i.Type.I32,1),e.Vb(this.upBW),e.Gb()),null!==this.downBW&&void 0!==this.downBW&&(e.xb("downBW",i.Type.I32,2),e.Vb(this.downBW),e.Gb()),null!==this.memN&&void 0!==this.memN&&(e.xb("memN",i.Type.I32,3),e.Vb(this.memN),e.Gb()),null!==this.prtInN&&void 0!==this.prtInN&&(e.xb("prtInN",i.Type.I32,4),e.Vb(this.prtInN),e.Gb()),null!==this.prtOutN&&void 0!==this.prtOutN&&(e.xb("prtOutN",i.Type.I32,5),e.Vb(this.prtOutN),e.Gb()),null!==this.initVideoBufQt&&void 0!==this.initVideoBufQt&&(e.xb("initVideoBufQt",i.Type.I64,6),e.KC(this.initVideoBufQt),e.Gb()),null!==this.videoAvgBufQt&&void 0!==this.videoAvgBufQt&&(e.xb("videoAvgBufQt",i.Type.DOUBLE,7),e.YC(this.videoAvgBufQt),e.Gb()),null!==this.videoBufQt&&void 0!==this.videoBufQt&&(e.xb("videoBufQt",i.Type.I64,8),e.KC(this.videoBufQt),e.Gb()),null!==this.videoBufN&&void 0!==this.videoBufN&&(e.xb("videoBufN",i.Type.I32,9),e.Vb(this.videoBufN),e.Gb()),null!==this.initAudioBufQt&&void 0!==this.initAudioBufQt&&(e.xb("initAudioBufQt",i.Type.I32,10),e.Vb(this.initAudioBufQt),e.Gb()),null!==this.audioAvgBufQt&&void 0!==this.audioAvgBufQt&&(e.xb("audioAvgBufQt",i.Type.DOUBLE,11),e.YC(this.audioAvgBufQt),e.Gb()),null!==this.audioBufQt&&void 0!==this.audioBufQt&&(e.xb("audioBufQt",i.Type.I64,12),e.KC(this.audioBufQt),e.Gb()),null!==this.audioBufN&&void 0!==this.audioBufN&&(e.xb("audioBufN",i.Type.I32,13),e.Vb(this.audioBufN),e.Gb()),null!==this.bitrateUpN&&void 0!==this.bitrateUpN&&(e.xb("bitrateUpN",i.Type.I32,14),e.Vb(this.bitrateUpN),e.Gb()),null!==this.bitrateDwnN&&void 0!==this.bitrateDwnN&&(e.xb("bitrateDwnN",i.Type.I32,15),e.Vb(this.bitrateDwnN),e.Gb()),null!==this.delay&&void 0!==this.delay&&(e.xb("delay",i.Type.I32,16),e.Vb(this.delay),e.Gb()),null!==this.delayEnforcement&&void 0!==this.delayEnforcement&&(e.xb("delayEnforcement",i.Type.I32,17),e.Vb(this.delayEnforcement),e.Gb()),null!==this.lookupReqEstablished&&void 0!==this.lookupReqEstablished&&(e.xb("lookupReqEstablished",i.Type.I32,18),e.Vb(this.lookupReqEstablished),e.Gb()),null!==this.lookupReqAccept&&void 0!==this.lookupReqAccept&&(e.xb("lookupReqAccept",i.Type.I32,19),e.Vb(this.lookupReqAccept),e.Gb()),null!==this.fallbackAvgTp&&void 0!==this.fallbackAvgTp&&(e.xb("fallbackAvgTp",i.Type.DOUBLE,20),e.YC(this.fallbackAvgTp),e.Gb()),null!==this.srcThroughput&&void 0!==this.srcThroughput&&(e.xb("srcThroughput",i.Type.DOUBLE,21),e.YC(this.srcThroughput),e.Gb()),null!==this.diskReadTimeout&&void 0!==this.diskReadTimeout&&(e.xb("diskReadTimeout",i.Type.I32,22),e.Vb(this.diskReadTimeout),e.Gb()),null!==this.diskReadRate&&void 0!==this.diskReadRate&&(e.xb("diskReadRate",i.Type.DOUBLE,23),e.YC(this.diskReadRate),e.Gb()),null!==this.diskStoreRate&&void 0!==this.diskStoreRate&&(e.xb("diskStoreRate",i.Type.DOUBLE,24),e.YC(this.diskStoreRate),e.Gb()),null!==this.diskRemoveRate&&void 0!==this.diskRemoveRate&&(e.xb("diskRemoveRate",i.Type.DOUBLE,25),e.YC(this.diskRemoveRate),e.Gb()),null!==this.diskCacheSize&&void 0!==this.diskCacheSize&&(e.xb("diskCacheSize",i.Type.I64,26),e.KC(this.diskCacheSize),e.Gb()),null!==this.clientBufferMs&&void 0!==this.clientBufferMs&&(e.xb("clientBufferMs",i.Type.I32,27),e.Vb(this.clientBufferMs),e.Gb()),null!==this.lookupTotal&&void 0!==this.lookupTotal&&(e.xb("lookupTotal",i.Type.I32,28),e.Vb(this.lookupTotal),e.Gb()),null!==this.lookupNotFound&&void 0!==this.lookupNotFound&&(e.xb("lookupNotFound",i.Type.I32,29),e.Vb(this.lookupNotFound),e.Gb()),null!==this.lookupFailed&&void 0!==this.lookupFailed&&(e.xb("lookupFailed",i.Type.I32,30),e.Vb(this.lookupFailed),e.Gb()),null!==this.lookupLatency&&void 0!==this.lookupLatency&&(e.xb("lookupLatency",i.Type.I32,31),e.Vb(this.lookupLatency),e.Gb()),null!==this.trackerFailed&&void 0!==this.trackerFailed&&(e.xb("trackerFailed",i.Type.I32,32),e.Vb(this.trackerFailed),e.Gb()),null!==this.trackerLatency&&void 0!==this.trackerLatency&&(e.xb("trackerLatency",i.Type.I32,33),e.Vb(this.trackerLatency),e.Gb()),null!==this.snapshotFailed&&void 0!==this.snapshotFailed&&(e.xb("snapshotFailed",i.Type.I32,34),e.Vb(this.snapshotFailed),e.Gb()),null!==this.snapshotLatency&&void 0!==this.snapshotLatency&&(e.xb("snapshotLatency",i.Type.I32,35),e.Vb(this.snapshotLatency),e.Gb()),null!==this._K&&void 0!==this._K&&(e.xb("sourceLatency",i.Type.I32,36),e.Vb(this._K),e.Gb()),e.jb(),e.Qb()},hive.snapshots.PartnerTraffic=function(e){this.p2pSuccReq=null,this.p2pFailReq=null,this.p2pPartReq=null,this.p2pSuccReceived=null,this.p2pSuccReceivedLow=null,this.p2pFailReceived=null,this.p2pSuccResp=null,this.p2pFailResp=null,this.p2pPartResp=null,this.p2pSuccSent=null,this.p2pSuccSentLow=null,this.p2pFailSent=null,e&&(void 0!==e.p2pSuccReq&&null!==e.p2pSuccReq&&(this.p2pSuccReq=e.p2pSuccReq),void 0!==e.p2pFailReq&&null!==e.p2pFailReq&&(this.p2pFailReq=e.p2pFailReq),void 0!==e.p2pPartReq&&null!==e.p2pPartReq&&(this.p2pPartReq=e.p2pPartReq),void 0!==e.p2pSuccReceived&&null!==e.p2pSuccReceived&&(this.p2pSuccReceived=e.p2pSuccReceived),void 0!==e.p2pSuccReceivedLow&&null!==e.p2pSuccReceivedLow&&(this.p2pSuccReceivedLow=e.p2pSuccReceivedLow),void 0!==e.p2pFailReceived&&null!==e.p2pFailReceived&&(this.p2pFailReceived=e.p2pFailReceived),void 0!==e.p2pSuccResp&&null!==e.p2pSuccResp&&(this.p2pSuccResp=e.p2pSuccResp),void 0!==e.p2pFailResp&&null!==e.p2pFailResp&&(this.p2pFailResp=e.p2pFailResp),void 0!==e.p2pPartResp&&null!==e.p2pPartResp&&(this.p2pPartResp=e.p2pPartResp),void 0!==e.p2pSuccSent&&null!==e.p2pSuccSent&&(this.p2pSuccSent=e.p2pSuccSent),void 0!==e.p2pSuccSentLow&&null!==e.p2pSuccSentLow&&(this.p2pSuccSentLow=e.p2pSuccSentLow),void 0!==e.p2pFailSent&&null!==e.p2pFailSent&&(this.p2pFailSent=e.p2pFailSent))},hive.snapshots.PartnerTraffic.prototype={},hive.snapshots.PartnerTraffic.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I64?this.p2pSuccReq=e.g_().value:e.Mb(r);break;case 2:r==i.Type.I64?this.p2pFailReq=e.g_().value:e.Mb(r);break;case 3:r==i.Type.I64?this.p2pPartReq=e.g_().value:e.Mb(r);break;case 4:r==i.Type.I64?this.p2pSuccReceived=e.g_().value:e.Mb(r);break;case 5:r==i.Type.I64?this.p2pSuccReceivedLow=e.g_().value:e.Mb(r);break;case 10:r==i.Type.I64?this.p2pFailReceived=e.g_().value:e.Mb(r);break;case 6:r==i.Type.I64?this.p2pSuccResp=e.g_().value:e.Mb(r);break;case 11:r==i.Type.I64?this.p2pFailResp=e.g_().value:e.Mb(r);break;case 7:r==i.Type.I64?this.p2pPartResp=e.g_().value:e.Mb(r);break;case 8:r==i.Type.I64?this.p2pSuccSent=e.g_().value:e.Mb(r);break;case 9:r==i.Type.I64?this.p2pSuccSentLow=e.g_().value:e.Mb(r);break;case 12:r==i.Type.I64?this.p2pFailSent=e.g_().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.PartnerTraffic.prototype.write=function(e){e.Hb("PartnerTraffic"),null!==this.p2pSuccReq&&void 0!==this.p2pSuccReq&&(e.xb("p2pSuccReq",i.Type.I64,1),e.KC(this.p2pSuccReq),e.Gb()),null!==this.p2pFailReq&&void 0!==this.p2pFailReq&&(e.xb("p2pFailReq",i.Type.I64,2),e.KC(this.p2pFailReq),e.Gb()),null!==this.p2pPartReq&&void 0!==this.p2pPartReq&&(e.xb("p2pPartReq",i.Type.I64,3),e.KC(this.p2pPartReq),e.Gb()),null!==this.p2pSuccReceived&&void 0!==this.p2pSuccReceived&&(e.xb("p2pSuccReceived",i.Type.I64,4),e.KC(this.p2pSuccReceived),e.Gb()),null!==this.p2pSuccReceivedLow&&void 0!==this.p2pSuccReceivedLow&&(e.xb("p2pSuccReceivedLow",i.Type.I64,5),e.KC(this.p2pSuccReceivedLow),e.Gb()),null!==this.p2pFailReceived&&void 0!==this.p2pFailReceived&&(e.xb("p2pFailReceived",i.Type.I64,10),e.KC(this.p2pFailReceived),e.Gb()),null!==this.p2pSuccResp&&void 0!==this.p2pSuccResp&&(e.xb("p2pSuccResp",i.Type.I64,6),e.KC(this.p2pSuccResp),e.Gb()),null!==this.p2pFailResp&&void 0!==this.p2pFailResp&&(e.xb("p2pFailResp",i.Type.I64,11),e.KC(this.p2pFailResp),e.Gb()),null!==this.p2pPartResp&&void 0!==this.p2pPartResp&&(e.xb("p2pPartResp",i.Type.I64,7),e.KC(this.p2pPartResp),e.Gb()),null!==this.p2pSuccSent&&void 0!==this.p2pSuccSent&&(e.xb("p2pSuccSent",i.Type.I64,8),e.KC(this.p2pSuccSent),e.Gb()),null!==this.p2pSuccSentLow&&void 0!==this.p2pSuccSentLow&&(e.xb("p2pSuccSentLow",i.Type.I64,9),e.KC(this.p2pSuccSentLow),e.Gb()),null!==this.p2pFailSent&&void 0!==this.p2pFailSent&&(e.xb("p2pFailSent",i.Type.I64,12),e.KC(this.p2pFailSent),e.Gb()),e.jb(),e.Qb()},hive.snapshots.PartnerMetrics=function(e){this.rateReceived=null,this.rateSent=null,this.handshakeDelay=null,e&&(void 0!==e.rateReceived&&null!==e.rateReceived&&(this.rateReceived=e.rateReceived),void 0!==e.rateSent&&null!==e.rateSent&&(this.rateSent=e.rateSent),void 0!==e.handshakeDelay&&null!==e.handshakeDelay&&(this.handshakeDelay=e.handshakeDelay))},hive.snapshots.PartnerMetrics.prototype={},hive.snapshots.PartnerMetrics.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.DOUBLE?this.rateReceived=e.E_().value:e.Mb(r);break;case 2:r==i.Type.DOUBLE?this.rateSent=e.E_().value:e.Mb(r);break;case 3:r==i.Type.I64?this.handshakeDelay=e.g_().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.PartnerMetrics.prototype.write=function(e){e.Hb("PartnerMetrics"),null!==this.rateReceived&&void 0!==this.rateReceived&&(e.xb("rateReceived",i.Type.DOUBLE,1),e.YC(this.rateReceived),e.Gb()),null!==this.rateSent&&void 0!==this.rateSent&&(e.xb("rateSent",i.Type.DOUBLE,2),e.YC(this.rateSent),e.Gb()),null!==this.handshakeDelay&&void 0!==this.handshakeDelay&&(e.xb("handshakeDelay",i.Type.I64,3),e.KC(this.handshakeDelay),e.Gb()),e.jb(),e.Qb()},hive.snapshots.ConnectivityInfo=function(e){this.upBW=null,this.downBW=null,this.externalAs=null,this.internalAs=null,this.publicIp=null,this.privateIp=null,e&&(void 0!==e.upBW&&null!==e.upBW&&(this.upBW=e.upBW),void 0!==e.downBW&&null!==e.downBW&&(this.downBW=e.downBW),void 0!==e.externalAs&&null!==e.externalAs&&(this.externalAs=e.externalAs),void 0!==e.internalAs&&null!==e.internalAs&&(this.internalAs=e.internalAs),void 0!==e.publicIp&&null!==e.publicIp&&(this.publicIp=e.publicIp),void 0!==e.privateIp&&null!==e.privateIp&&(this.privateIp=e.privateIp))},hive.snapshots.ConnectivityInfo.prototype={},hive.snapshots.ConnectivityInfo.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.upBW=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.I32?this.downBW=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.I32?this.externalAs=e.Fb().value:e.Mb(r);break;case 4:r==i.Type.I32?this.internalAs=e.Fb().value:e.Mb(r);break;case 5:r==i.Type.STRING?this.publicIp=e.Lb().value:e.Mb(r);break;case 6:r==i.Type.STRING?this.privateIp=e.Lb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.ConnectivityInfo.prototype.write=function(e){e.Hb("ConnectivityInfo"),null!==this.upBW&&void 0!==this.upBW&&(e.xb("upBW",i.Type.I32,1),e.Vb(this.upBW),e.Gb()),null!==this.downBW&&void 0!==this.downBW&&(e.xb("downBW",i.Type.I32,2),e.Vb(this.downBW),e.Gb()),null!==this.externalAs&&void 0!==this.externalAs&&(e.xb("externalAs",i.Type.I32,3),e.Vb(this.externalAs),e.Gb()),null!==this.internalAs&&void 0!==this.internalAs&&(e.xb("internalAs",i.Type.I32,4),e.Vb(this.internalAs),e.Gb()),null!==this.publicIp&&void 0!==this.publicIp&&(e.xb("publicIp",i.Type.STRING,5),e.qb(this.publicIp),e.Gb()),null!==this.privateIp&&void 0!==this.privateIp&&(e.xb("privateIp",i.Type.STRING,6),e.qb(this.privateIp),e.Gb()),e.jb(),e.Qb()},hive.snapshots.Partner=function(e){this.connInfo=null,this.traffic=null,this.metrics=null,this.inPart=null,this.outPart=null,this.udp=null,e&&(void 0!==e.connInfo&&null!==e.connInfo&&(this.connInfo=e.connInfo),void 0!==e.traffic&&null!==e.traffic&&(this.traffic=e.traffic),void 0!==e.metrics&&null!==e.metrics&&(this.metrics=e.metrics),void 0!==e.inPart&&null!==e.inPart&&(this.inPart=e.inPart),void 0!==e.outPart&&null!==e.outPart&&(this.outPart=e.outPart),void 0!==e.udp&&null!==e.udp&&(this.udp=e.udp))},hive.snapshots.Partner.prototype={},hive.snapshots.Partner.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRUCT?(this.connInfo=new hive.snapshots.ConnectivityInfo,this.connInfo.read(e)):e.Mb(r);break;case 2:r==i.Type.STRUCT?(this.traffic=new hive.snapshots.PartnerTraffic,this.traffic.read(e)):e.Mb(r);break;case 3:r==i.Type.STRUCT?(this.metrics=new hive.snapshots.PartnerMetrics,this.metrics.read(e)):e.Mb(r);break;case 4:r==i.Type.BOOL?this.inPart=e.p_().value:e.Mb(r);break;case 5:r==i.Type.BOOL?this.outPart=e.p_().value:e.Mb(r);break;case 6:r==i.Type.BOOL?this.udp=e.p_().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.Partner.prototype.write=function(e){e.Hb("Partner"),null!==this.connInfo&&void 0!==this.connInfo&&(e.xb("connInfo",i.Type.STRUCT,1),this.connInfo.write(e),e.Gb()),null!==this.traffic&&void 0!==this.traffic&&(e.xb("traffic",i.Type.STRUCT,2),this.traffic.write(e),e.Gb()),null!==this.metrics&&void 0!==this.metrics&&(e.xb("metrics",i.Type.STRUCT,3),this.metrics.write(e),e.Gb()),null!==this.inPart&&void 0!==this.inPart&&(e.xb("inPart",i.Type.BOOL,4),e.VC(this.inPart),e.Gb()),null!==this.outPart&&void 0!==this.outPart&&(e.xb("outPart",i.Type.BOOL,5),e.VC(this.outPart),e.Gb()),null!==this.udp&&void 0!==this.udp&&(e.xb("udp",i.Type.BOOL,6),e.VC(this.udp),e.Gb()),e.jb(),e.Qb()},hive.snapshots.StreamInfo=function(e){this.url=null,this.streamType=null,this.streamProtocol=null,e&&(void 0!==e.url&&null!==e.url&&(this.url=e.url),void 0!==e.streamType&&null!==e.streamType&&(this.streamType=e.streamType),void 0!==e.streamProtocol&&null!==e.streamProtocol&&(this.streamProtocol=e.streamProtocol))},hive.snapshots.StreamInfo.prototype={},hive.snapshots.StreamInfo.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRING?this.url=e.Lb().value:e.Mb(r);break;case 2:r==i.Type.I32?this.streamType=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.I32?this.streamProtocol=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.StreamInfo.prototype.write=function(e){e.Hb("StreamInfo"),null!==this.url&&void 0!==this.url&&(e.xb("url",i.Type.STRING,1),e.qb(this.url),e.Gb()),null!==this.streamType&&void 0!==this.streamType&&(e.xb("streamType",i.Type.I32,2),e.Vb(this.streamType),e.Gb()),null!==this.streamProtocol&&void 0!==this.streamProtocol&&(e.xb("streamProtocol",i.Type.I32,3),e.Vb(this.streamProtocol),e.Gb()),e.jb(),e.Qb()},hive.snapshots.ClientInfo=function(e){this.clientType=null,this.majorVersion=null,this.minorVersion=null,this.patchVersion=null,e&&(void 0!==e.clientType&&null!==e.clientType&&(this.clientType=e.clientType),void 0!==e.majorVersion&&null!==e.majorVersion&&(this.majorVersion=e.majorVersion),void 0!==e.minorVersion&&null!==e.minorVersion&&(this.minorVersion=e.minorVersion),void 0!==e.patchVersion&&null!==e.patchVersion&&(this.patchVersion=e.patchVersion))},hive.snapshots.ClientInfo.prototype={},hive.snapshots.ClientInfo.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.clientType=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.BYTE?this.majorVersion=e.d_().value:e.Mb(r);break;case 3:r==i.Type.BYTE?this.minorVersion=e.d_().value:e.Mb(r);break;case 4:r==i.Type.I16?this.patchVersion=e.f_().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.ClientInfo.prototype.write=function(e){e.Hb("ClientInfo"),null!==this.clientType&&void 0!==this.clientType&&(e.xb("clientType",i.Type.I32,1),e.Vb(this.clientType),e.Gb()),null!==this.majorVersion&&void 0!==this.majorVersion&&(e.xb("majorVersion",i.Type.BYTE,2),e.jC(this.majorVersion),e.Gb()),null!==this.minorVersion&&void 0!==this.minorVersion&&(e.xb("minorVersion",i.Type.BYTE,3),e.jC(this.minorVersion),e.Gb()),null!==this.patchVersion&&void 0!==this.patchVersion&&(e.xb("patchVersion",i.Type.I16,4),e.QC(this.patchVersion),e.Gb()),e.jb(),e.Qb()},hive.snapshots.AgentInfo=function(e){this.firstTierBitrates=null,this.secondTierBitrates=null,e&&(void 0!==e.firstTierBitrates&&null!==e.firstTierBitrates&&(this.firstTierBitrates=e.firstTierBitrates),void 0!==e.secondTierBitrates&&null!==e.secondTierBitrates&&(this.secondTierBitrates=e.secondTierBitrates))},hive.snapshots.AgentInfo.prototype={},hive.snapshots.AgentInfo.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:if(r==i.Type.SET){var s,o=0;this.firstTierBitrates=[];s=e.u_(),s.h_,o=s.size;for(var a=0;a<o;++a){var h=null;h=e.Fb().value,this.firstTierBitrates.push(h)}e.l_()}else e.Mb(r);break;case 2:if(r==i.Type.SET){var c,u=0;this.secondTierBitrates=[];c=e.u_(),c.h_,u=c.size;for(var l=0;l<u;++l){var p=null;p=e.Fb().value,this.secondTierBitrates.push(p)}e.l_()}else e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.AgentInfo.prototype.write=function(e){if(e.Hb("AgentInfo"),null!==this.firstTierBitrates&&void 0!==this.firstTierBitrates){e.xb("firstTierBitrates",i.Type.SET,1),e.qC(i.Type.I32,this.firstTierBitrates.length);for(var t in this.firstTierBitrates)this.firstTierBitrates.hasOwnProperty(t)&&(t=this.firstTierBitrates[t],e.Vb(t));e.GC(),e.Gb()}if(null!==this.secondTierBitrates&&void 0!==this.secondTierBitrates){e.xb("secondTierBitrates",i.Type.SET,2),e.qC(i.Type.I32,this.secondTierBitrates.length);for(var r in this.secondTierBitrates)this.secondTierBitrates.hasOwnProperty(r)&&(r=this.secondTierBitrates[r],e.Vb(r));e.GC(),e.Gb()}e.jb(),e.Qb()},hive.snapshots.TrafficKey=function(e){this.bitrate=null,this.AS=null,this.partnerGuid=null,e&&(void 0!==e.bitrate&&null!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.AS&&null!==e.AS&&(this.AS=e.AS),void 0!==e.partnerGuid&&null!==e.partnerGuid&&(this.partnerGuid=e.partnerGuid))},hive.snapshots.TrafficKey.prototype={},hive.snapshots.TrafficKey.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.bitrate=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.I32?this.AS=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.STRING?this.partnerGuid=e.Lb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.TrafficKey.prototype.write=function(e){e.Hb("TrafficKey"),null!==this.bitrate&&void 0!==this.bitrate&&(e.xb("bitrate",i.Type.I32,1),e.Vb(this.bitrate),e.Gb()),null!==this.AS&&void 0!==this.AS&&(e.xb("AS",i.Type.I32,2),e.Vb(this.AS),e.Gb()),null!==this.partnerGuid&&void 0!==this.partnerGuid&&(e.xb("partnerGuid",i.Type.STRING,3),e.qb(this.partnerGuid),e.Gb()),e.jb(),e.Qb()},hive.snapshots.PartnerKey=function(e){this.bitrate=null,this.AS=null,this.partnerGuid=null,e&&(void 0!==e.bitrate&&null!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.AS&&null!==e.AS&&(this.AS=e.AS),void 0!==e.partnerGuid&&null!==e.partnerGuid&&(this.partnerGuid=e.partnerGuid))},hive.snapshots.PartnerKey.prototype={},hive.snapshots.PartnerKey.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I32?this.bitrate=e.Fb().value:e.Mb(r);break;case 2:r==i.Type.I32?this.AS=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.STRING?this.partnerGuid=e.Lb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.PartnerKey.prototype.write=function(e){e.Hb("PartnerKey"),null!==this.bitrate&&void 0!==this.bitrate&&(e.xb("bitrate",i.Type.I32,1),e.Vb(this.bitrate),e.Gb()),null!==this.AS&&void 0!==this.AS&&(e.xb("AS",i.Type.I32,2),e.Vb(this.AS),e.Gb()),null!==this.partnerGuid&&void 0!==this.partnerGuid&&(e.xb("partnerGuid",i.Type.STRING,3),e.qb(this.partnerGuid),e.Gb()),e.jb(),e.Qb()},hive.snapshots.Player=function(e){this.bufferingN=null,this.bufferingMs=null,this.initBufferingN=null,this.initBufferingMs=null,this.seekBufferingN=null,this.seekBufferingMs=null,this.playerBufferMs=null,e&&(void 0!==e.bufferingN&&null!==e.bufferingN&&(this.bufferingN=e.bufferingN),void 0!==e.bufferingMs&&null!==e.bufferingMs&&(this.bufferingMs=e.bufferingMs),void 0!==e.initBufferingN&&null!==e.initBufferingN&&(this.initBufferingN=e.initBufferingN),void 0!==e.initBufferingMs&&null!==e.initBufferingMs&&(this.initBufferingMs=e.initBufferingMs),void 0!==e.seekBufferingN&&null!==e.seekBufferingN&&(this.seekBufferingN=e.seekBufferingN),void 0!==e.seekBufferingMs&&null!==e.seekBufferingMs&&(this.seekBufferingMs=e.seekBufferingMs),void 0!==e.playerBufferMs&&null!==e.playerBufferMs&&(this.playerBufferMs=e.playerBufferMs))},hive.snapshots.Player.prototype={},hive.snapshots.Player.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I16?this.bufferingN=e.f_().value:e.Mb(r);break;case 2:r==i.Type.I32?this.bufferingMs=e.Fb().value:e.Mb(r);break;case 3:r==i.Type.I16?this.initBufferingN=e.f_().value:e.Mb(r);break;case 4:r==i.Type.I32?this.initBufferingMs=e.Fb().value:e.Mb(r);break;case 5:r==i.Type.I16?this.seekBufferingN=e.f_().value:e.Mb(r);break;case 6:r==i.Type.I32?this.seekBufferingMs=e.Fb().value:e.Mb(r);break;case 36:r==i.Type.I32?this.playerBufferMs=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.Player.prototype.write=function(e){e.Hb("Player"),null!==this.bufferingN&&void 0!==this.bufferingN&&(e.xb("bufferingN",i.Type.I16,1),e.QC(this.bufferingN),e.Gb()),null!==this.bufferingMs&&void 0!==this.bufferingMs&&(e.xb("bufferingMs",i.Type.I32,2),e.Vb(this.bufferingMs),e.Gb()),null!==this.initBufferingN&&void 0!==this.initBufferingN&&(e.xb("initBufferingN",i.Type.I16,3),e.QC(this.initBufferingN),e.Gb()),null!==this.initBufferingMs&&void 0!==this.initBufferingMs&&(e.xb("initBufferingMs",i.Type.I32,4),e.Vb(this.initBufferingMs),e.Gb()),null!==this.seekBufferingN&&void 0!==this.seekBufferingN&&(e.xb("seekBufferingN",i.Type.I16,5),e.QC(this.seekBufferingN),e.Gb()),null!==this.seekBufferingMs&&void 0!==this.seekBufferingMs&&(e.xb("seekBufferingMs",i.Type.I32,6),e.Vb(this.seekBufferingMs),e.Gb()),null!==this.playerBufferMs&&void 0!==this.playerBufferMs&&(e.xb("playerBufferMs",i.Type.I32,36),e.Vb(this.playerBufferMs),e.Gb()),e.jb(),e.Qb()},hive.snapshots.PK=function(e){this._Q=null,this.count=null,e&&(void 0!==e._Q&&null!==e._Q&&(this._Q=e._Q),void 0!==e.count&&null!==e.count&&(this.count=e.count))},hive.snapshots.PK.prototype={},hive.snapshots.PK.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I16?this._Q=e.f_().value:e.Mb(r);break;case 2:r==i.Type.I32?this.count=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.PK.prototype.write=function(e){e.Hb("ResponseInfo"),null!==this._Q&&void 0!==this._Q&&(e.xb("statusCode",i.Type.I16,1),e.QC(this._Q),e.Gb()),null!==this.count&&void 0!==this.count&&(e.xb("count",i.Type.I32,2),e.Vb(this.count),e.Gb()),e.jb(),e.Qb()},hive.snapshots.AK=function(e){this.source=null,e&&void 0!==e.source&&null!==e.source&&(this.source=i.OK(e.source,[hive.snapshots.PK]))},hive.snapshots.AK.prototype={},hive.snapshots.AK.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:if(r==i.Type.LIST){var s,o=0;this.source=[];s=e.a_(),s.h_,o=s.size;for(var a=0;a<o;++a){var h=null;h=new hive.snapshots.PK,h.read(e),this.source.push(h)}e.c_()}else e.Mb(r);break;case 0:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.AK.prototype.write=function(e){if(e.Hb("ServiceResponseInfo"),null!==this.source&&void 0!==this.source){e.xb("source",i.Type.LIST,1),e.HC(i.Type.STRUCT,this.source.length);for(var t in this.source)this.source.hasOwnProperty(t)&&(t=this.source[t],t.write(e));e.xC(),e.Gb()}e.jb(),e.Qb()},hive.snapshots.MetricSnapshot=function(e){this.timestamp=null,this.guid=null,this.eventId=null,this.streamInfo=null,this.metrics=null,this.traffic=null,this.snapshotInfo=null,this.agentInfo=null,this.connInfo=null,this.partners=null,this.player=null,this.client=null,this.sessionId=null,this.NK=null,this.aB=null,this.DK=null,e&&(void 0!==e.timestamp&&null!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.guid&&null!==e.guid&&(this.guid=e.guid),void 0!==e.eventId&&null!==e.eventId&&(this.eventId=e.eventId),void 0!==e.streamInfo&&null!==e.streamInfo&&(this.streamInfo=e.streamInfo),void 0!==e.metrics&&null!==e.metrics&&(this.metrics=e.metrics),void 0!==e.traffic&&null!==e.traffic&&(this.traffic=e.traffic),void 0!==e.snapshotInfo&&null!==e.snapshotInfo&&(this.snapshotInfo=e.snapshotInfo),void 0!==e.agentInfo&&null!==e.agentInfo&&(this.agentInfo=e.agentInfo),void 0!==e.connInfo&&null!==e.connInfo&&(this.connInfo=e.connInfo),void 0!==e.partners&&null!==e.partners&&(this.partners=e.partners),void 0!==e.player&&null!==e.player&&(this.player=e.player),void 0!==e.client&&null!==e.client&&(this.client=e.client),void 0!==e.sessionId&&null!==e.sessionId&&(this.sessionId=e.sessionId),void 0!==e.NK&&null!==e.NK&&(this.NK=e.NK),void 0!==e.aB&&null!==e.aB&&(this.aB=e.aB),void 0!==e.DK&&null!==e.DK&&(this.DK=e.DK))},hive.snapshots.MetricSnapshot.prototype={},hive.snapshots.MetricSnapshot.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I64?this.timestamp=e.g_().value:e.Mb(r);break;case 2:r==i.Type.STRING?this.guid=e.Lb().value:e.Mb(r);break;case 3:r==i.Type.STRUCT?(this.eventId=new EventId,this.eventId.read(e)):e.Mb(r);break;case 4:r==i.Type.STRUCT?(this.streamInfo=new hive.snapshots.StreamInfo,this.streamInfo.read(e)):e.Mb(r);break;case 5:r==i.Type.STRUCT?(this.metrics=new hive.snapshots.Metrics,this.metrics.read(e)):e.Mb(r);break;case 6:if(r==i.Type.MAP){var s,o=0;this.traffic={};s=e.i_(),s.n_,s.s_,o=s.size;for(var a=0;a<o;++a){a>0&&e.JC.length>e.zb[e.zb.length-1]+1&&e.JC.pop();var h=null,c=null;h=new hive.snapshots.TrafficKey,h.read(e),c=new hive.snapshots.Traffic,c.read(e),this.traffic[h]=c}e.o_()}else e.Mb(r);break;case 7:r==i.Type.STRUCT?(this.snapshotInfo=new SnapshotInfo,this.snapshotInfo.read(e)):e.Mb(r);break;case 8:r==i.Type.STRUCT?(this.agentInfo=new hive.snapshots.AgentInfo,this.agentInfo.read(e)):e.Mb(r);break;case 9:r==i.Type.STRUCT?(this.connInfo=new hive.snapshots.ConnectivityInfo,this.connInfo.read(e)):e.Mb(r);break;case 10:if(r==i.Type.MAP){var u,l=0;this.partners={};u=e.i_(),u.n_,u.s_,l=u.size;for(var p=0;p<l;++p){p>0&&e.JC.length>e.zb[e.zb.length-1]+1&&e.JC.pop();var d=null,f=null;d=new hive.snapshots.PartnerKey,d.read(e),f=new hive.snapshots.Partner,f.read(e),this.partners[d]=f}e.o_()}else e.Mb(r);break;case 11:r==i.Type.STRUCT?(this.player=new hive.snapshots.Player,this.player.read(e)):e.Mb(r);break;case 12:r==i.Type.STRUCT?(this.client=new hive.snapshots.ClientInfo,this.client.read(e)):e.Mb(r);break;case 13:r==i.Type.STRING?this.sessionId=e.Lb().value:e.Mb(r);break;case 14:r==i.Type.STRUCT?(this.NK=new hive.snapshots.AK,this.NK.read(e)):e.Mb(r);break;case 15:r==i.Type.STRUCT?(this.aB=new TestInfo,this.aB.read(e)):e.Mb(r);break;case 16:r==i.Type.I64?this.DK=e.g_().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.MetricSnapshot.prototype.write=function(e){if(e.Hb("MetricSnapshot"),null!==this.timestamp&&void 0!==this.timestamp&&(e.xb("timestamp",i.Type.I64,1),e.KC(this.timestamp),e.Gb()),null!==this.guid&&void 0!==this.guid&&(e.xb("guid",i.Type.STRING,2),e.qb(this.guid),e.Gb()),null!==this.eventId&&void 0!==this.eventId&&(e.xb("eventId",i.Type.STRUCT,3),this.eventId.write(e),e.Gb()),null!==this.streamInfo&&void 0!==this.streamInfo&&(e.xb("streamInfo",i.Type.STRUCT,4),this.streamInfo.write(e),e.Gb()),null!==this.metrics&&void 0!==this.metrics&&(e.xb("metrics",i.Type.STRUCT,5),this.metrics.write(e),e.Gb()),null!==this.traffic&&void 0!==this.traffic){e.xb("traffic",i.Type.MAP,6),e.UC(i.Type.STRUCT,i.Type.STRUCT,i.Eb(this.traffic));for(var t in this.traffic)if(this.traffic.hasOwnProperty(t)){var r=this.traffic[t];r.key.write(e),r.value.write(e)}e.BC(),e.Gb()}if(null!==this.snapshotInfo&&void 0!==this.snapshotInfo&&(e.xb("snapshotInfo",i.Type.STRUCT,7),this.snapshotInfo.write(e),e.Gb()),null!==this.agentInfo&&void 0!==this.agentInfo&&(e.xb("agentInfo",i.Type.STRUCT,8),this.agentInfo.write(e),e.Gb()),null!==this.connInfo&&void 0!==this.connInfo&&(e.xb("connInfo",i.Type.STRUCT,9),this.connInfo.write(e),e.Gb()),null!==this.partners&&void 0!==this.partners){e.xb("partners",i.Type.MAP,10),e.UC(i.Type.STRUCT,i.Type.STRUCT,i.Eb(this.partners));for(var n in this.partners)if(this.partners.hasOwnProperty(n)){var s=this.partners[n];s.key.write(e),s.value.write(e)}e.BC(),e.Gb()}null!==this.player&&void 0!==this.player&&(e.xb("player",i.Type.STRUCT,11),this.player.write(e),e.Gb()),null!==this.client&&void 0!==this.client&&(e.xb("client",i.Type.STRUCT,12),this.client.write(e),e.Gb()),null!==this.sessionId&&void 0!==this.sessionId&&(e.xb("sessionId",i.Type.STRING,13),e.qb(this.sessionId),e.Gb()),null!==this.NK&&void 0!==this.NK&&(e.xb("responseInfo",i.Type.STRUCT,14),this.NK.write(e),e.Gb()),null!==this.aB&&void 0!==this.aB&&(e.xb("testInfo",i.Type.STRUCT,15),this.aB.write(e),e.Gb()),null!==this.DK&&void 0!==this.DK&&(e.xb("clientId",i.Type.I64,16),e.KC(this.DK),e.Gb()),e.jb(),e.Qb()},hive.snapshots.JsonMetricSnapshot=function(e){this.timestamp=null,this.guid=null,this.eventId=null,this.streamInfo=null,this.metrics=null,this.traffic=null,this.snapshotInfo=null,this.agentInfo=null,this.connInfo=null,this.partners=null,this.player=null,this.client=null,this.sessionId=null,this.NK=null,this.aB=null,this.DK=null,e&&(void 0!==e.timestamp&&null!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.guid&&null!==e.guid&&(this.guid=e.guid),void 0!==e.eventId&&null!==e.eventId&&(this.eventId=e.eventId),void 0!==e.streamInfo&&null!==e.streamInfo&&(this.streamInfo=e.streamInfo),void 0!==e.metrics&&null!==e.metrics&&(this.metrics=e.metrics),void 0!==e.traffic&&null!==e.traffic&&(this.traffic=e.traffic),void 0!==e.snapshotInfo&&null!==e.snapshotInfo&&(this.snapshotInfo=e.snapshotInfo),void 0!==e.agentInfo&&null!==e.agentInfo&&(this.agentInfo=e.agentInfo),void 0!==e.connInfo&&null!==e.connInfo&&(this.connInfo=e.connInfo),void 0!==e.partners&&null!==e.partners&&(this.partners=e.partners),void 0!==e.player&&null!==e.player&&(this.player=e.player),void 0!==e.client&&null!==e.client&&(this.client=e.client),void 0!==e.sessionId&&null!==e.sessionId&&(this.sessionId=e.sessionId),void 0!==e.NK&&null!==e.NK&&(this.NK=e.NK),void 0!==e.aB&&null!==e.aB&&(this.aB=e.aB),void 0!==e.DK&&null!==e.DK&&(this.DK=e.DK))},hive.snapshots.JsonMetricSnapshot.prototype={},hive.snapshots.JsonMetricSnapshot.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I64?this.timestamp=e.g_().value:e.Mb(r);break;case 2:r==i.Type.STRING?this.guid=e.Lb().value:e.Mb(r);break;case 3:r==i.Type.STRUCT?(this.eventId=new EventId,this.eventId.read(e)):e.Mb(r);break;case 4:r==i.Type.STRUCT?(this.streamInfo=new hive.snapshots.StreamInfo,this.streamInfo.read(e)):e.Mb(r);break;case 5:r==i.Type.STRUCT?(this.metrics=new hive.snapshots.Metrics,this.metrics.read(e)):e.Mb(r);break;case 6:if(r==i.Type.MAP){var s,o=0;this.traffic={};s=e.i_(),s.n_,s.s_,o=s.size;for(var a=0;a<o;++a){a>0&&e.JC.length>e.zb[e.zb.length-1]+1&&e.JC.pop();var h=null,c=null;h=e.Lb().value,c=new hive.snapshots.Traffic,c.read(e),this.traffic[h]=c}e.o_()}else e.Mb(r);break;case 7:r==i.Type.STRUCT?(this.snapshotInfo=new SnapshotInfo,this.snapshotInfo.read(e)):e.Mb(r);break;case 8:r==i.Type.STRUCT?(this.agentInfo=new hive.snapshots.AgentInfo,this.agentInfo.read(e)):e.Mb(r);break;case 9:r==i.Type.STRUCT?(this.connInfo=new hive.snapshots.ConnectivityInfo,this.connInfo.read(e)):e.Mb(r);break;case 10:if(r==i.Type.MAP){var u,l=0;this.partners={};u=e.i_(),u.n_,u.s_,l=u.size;for(var p=0;p<l;++p){p>0&&e.JC.length>e.zb[e.zb.length-1]+1&&e.JC.pop();var d=null,f=null;d=e.Lb().value,f=new hive.snapshots.Partner,f.read(e),this.partners[d]=f}e.o_()}else e.Mb(r);break;case 11:r==i.Type.STRUCT?(this.player=new hive.snapshots.Player,this.player.read(e)):e.Mb(r);break;case 12:r==i.Type.STRUCT?(this.client=new hive.snapshots.ClientInfo,this.client.read(e)):e.Mb(r);break;case 13:r==i.Type.STRING?this.sessionId=e.Lb().value:e.Mb(r);break;case 14:r==i.Type.STRUCT?(this.NK=new hive.snapshots.AK,this.NK.read(e)):e.Mb(r);break;case 15:r==i.Type.STRUCT?(this.aB=new TestInfo,this.aB.read(e)):e.Mb(r);break;case 16:r==i.Type.I64?this.DK=e.g_().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},hive.snapshots.JsonMetricSnapshot.prototype.write=function(e){if(e.Hb("JsonMetricSnapshot"),null!==this.timestamp&&void 0!==this.timestamp&&(e.xb("timestamp",i.Type.I64,1),e.KC(this.timestamp),e.Gb()),null!==this.guid&&void 0!==this.guid&&(e.xb("guid",i.Type.STRING,2),e.qb(this.guid),e.Gb()),null!==this.eventId&&void 0!==this.eventId&&(e.xb("eventId",i.Type.STRUCT,3),this.eventId.write(e),e.Gb()),null!==this.streamInfo&&void 0!==this.streamInfo&&(e.xb("streamInfo",i.Type.STRUCT,4),this.streamInfo.write(e),e.Gb()),null!==this.metrics&&void 0!==this.metrics&&(e.xb("metrics",i.Type.STRUCT,5),this.metrics.write(e),e.Gb()),null!==this.traffic&&void 0!==this.traffic){e.xb("traffic",i.Type.MAP,6),e.UC(i.Type.STRING,i.Type.STRUCT,i.Eb(this.traffic));for(var t in this.traffic)if(this.traffic.hasOwnProperty(t)){var r=this.traffic[t];e.qb(t),r.write(e)}e.BC(),e.Gb()}if(null!==this.snapshotInfo&&void 0!==this.snapshotInfo&&(e.xb("snapshotInfo",i.Type.STRUCT,7),this.snapshotInfo.write(e),e.Gb()),null!==this.agentInfo&&void 0!==this.agentInfo&&(e.xb("agentInfo",i.Type.STRUCT,8),this.agentInfo.write(e),e.Gb()),null!==this.connInfo&&void 0!==this.connInfo&&(e.xb("connInfo",i.Type.STRUCT,9),this.connInfo.write(e),e.Gb()),null!==this.partners&&void 0!==this.partners){e.xb("partners",i.Type.MAP,10),e.UC(i.Type.STRING,i.Type.STRUCT,i.Eb(this.partners));for(var n in this.partners)if(this.partners.hasOwnProperty(n)){var s=this.partners[n];e.qb(n),s.write(e)}e.BC(),e.Gb()}null!==this.player&&void 0!==this.player&&(e.xb("player",i.Type.STRUCT,11),this.player.write(e),e.Gb()),null!==this.client&&void 0!==this.client&&(e.xb("client",i.Type.STRUCT,12),this.client.write(e),e.Gb()),null!==this.sessionId&&void 0!==this.sessionId&&(e.xb("sessionId",i.Type.STRING,13),e.qb(this.sessionId),e.Gb()),null!==this.NK&&void 0!==this.NK&&(e.xb("responseInfo",i.Type.STRUCT,14),this.NK.write(e),e.Gb()),null!==this.aB&&void 0!==this.aB&&(e.xb("testInfo",i.Type.STRUCT,15),this.aB.write(e),e.Gb()),null!==this.DK&&void 0!==this.DK&&(e.xb("clientId",i.Type.I64,16),e.KC(this.DK),e.Gb()),e.jb(),e.Qb()}},function(e,t,r){var i=r(33);StreamType={1:"LIVE",LIVE:1,2:"VOD",kK:2},StreamProtocol={1:"DASH",DASH:1,2:"HDS",LK:2,3:"HLS",bq:3,4:"SS",MK:4},ClientType={1:"JAVA",FK:1,2:"STATS_ONLY",wB:2,3:"JS_DIRECT",SB:3,4:"JS_PROXY",RB:4},EventId=function(e){this.partnerId=null,this.customerId=null,this.contentId=null,this.tags=null,e&&(void 0!==e.partnerId&&null!==e.partnerId&&(this.partnerId=e.partnerId),void 0!==e.customerId&&null!==e.customerId&&(this.customerId=e.customerId),void 0!==e.contentId&&null!==e.contentId&&(this.contentId=e.contentId),void 0!==e.tags&&null!==e.tags&&(this.tags=e.tags))},EventId.prototype={},EventId.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRING?this.partnerId=e.Lb().value:e.Mb(r);break;case 2:r==i.Type.STRING?this.customerId=e.Lb().value:e.Mb(r);break;case 3:r==i.Type.STRING?this.contentId=e.Lb().value:e.Mb(r);break;case 4:if(r==i.Type.LIST){var s,o=0;this.tags=[];s=e.a_(),s.h_,o=s.size;for(var a=0;a<o;++a){var h=null;h=e.Lb().value,this.tags.push(h)}e.c_()}else e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},EventId.prototype.write=function(e){if(e.Hb("EventId"),null!==this.partnerId&&void 0!==this.partnerId&&(e.xb("partnerId",i.Type.STRING,1),e.qb(this.partnerId),e.Gb()),null!==this.customerId&&void 0!==this.customerId&&(e.xb("customerId",i.Type.STRING,2),e.qb(this.customerId),e.Gb()),null!==this.contentId&&void 0!==this.contentId&&(e.xb("contentId",i.Type.STRING,3),e.qb(this.contentId),e.Gb()),null!==this.tags&&void 0!==this.tags){e.xb("tags",i.Type.LIST,4),e.HC(i.Type.STRING,this.tags.length);for(var t in this.tags)this.tags.hasOwnProperty(t)&&(t=this.tags[t],e.qb(t));e.xC(),e.Gb()}e.jb(),e.Qb()},SnapshotInfo=function(e){this.timestamp=null,this.apiServer=null,this.clientIp=null,e&&(void 0!==e.timestamp&&null!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.apiServer&&null!==e.apiServer&&(this.apiServer=e.apiServer),void 0!==e.clientIp&&null!==e.clientIp&&(this.clientIp=e.clientIp))},SnapshotInfo.prototype={},SnapshotInfo.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.I64?this.timestamp=e.g_().value:e.Mb(r);break;case 2:r==i.Type.STRING?this.apiServer=e.Lb().value:e.Mb(r);break;case 3:r==i.Type.STRING?this.clientIp=e.Lb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},SnapshotInfo.prototype.write=function(e){e.Hb("SnapshotInfo"),null!==this.timestamp&&void 0!==this.timestamp&&(e.xb("timestamp",i.Type.I64,1),e.KC(this.timestamp),e.Gb()),null!==this.apiServer&&void 0!==this.apiServer&&(e.xb("apiServer",i.Type.STRING,2),e.qb(this.apiServer),e.Gb()),null!==this.clientIp&&void 0!==this.clientIp&&(e.xb("clientIp",i.Type.STRING,3),e.qb(this.clientIp),e.Gb()),e.jb(),e.Qb()},TestInfo=function(e){this.testId=null,e&&void 0!==e.testId&&null!==e.testId&&(this.testId=e.testId)},TestInfo.prototype={},TestInfo.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRING?this.testId=e.Lb().value:e.Mb(r);break;case 0:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},TestInfo.prototype.write=function(e){e.Hb("TestInfo"),null!==this.testId&&void 0!==this.testId&&(e.xb("testId",i.Type.STRING,1),e.qb(this.testId),e.Gb()),e.jb(),e.Qb()},InetAddress=function(e){this.address=null,this.port=null,e&&(void 0!==e.address&&null!==e.address&&(this.address=e.address),void 0!==e.port&&null!==e.port&&(this.port=e.port))},InetAddress.prototype={},InetAddress.prototype.read=function(e){for(e.r_();;){var t=e.kb(),r=(t.fname,t.ftype),n=t.fid;if(r==i.Type.STOP)break;switch(n){case 1:r==i.Type.STRING?this.address=e.v_().value:e.Mb(r);break;case 2:r==i.Type.I32?this.port=e.Fb().value:e.Mb(r);break;default:e.Mb(r)}e.Ub()}e.Bb()},InetAddress.prototype.write=function(e){e.Hb("InetAddress"),null!==this.address&&void 0!==this.address&&(e.xb("address",i.Type.STRING,1),e.WC(this.address),e.Gb()),null!==this.port&&void 0!==this.port&&(e.xb("port",i.Type.I32,2),e.Vb(this.port),e.Gb()),e.jb(),e.Qb()}},function(e,t,r){"use strict";var i=r(4),n=r(23),s=function(){function e(e,t){this.msg=e,this.UK=Date.now()+t,this.BK=i.defer()}return e.prototype.HK=function(){return Date.now()>=this.UK},e}(),o=function(){function e(e,t,r,i,n,s,o){void 0===t&&(t=3e4),void 0===r&&(r=100),void 0===i&&(i=3e4),void 0===n&&(n=15e3),void 0===s&&(s=Date),void 0===o&&(o=!1),this.xK=1,this.qK=-1,this.GK=-1,this.wj={},this.VK=[],this.jK=[],this.QK=!1,this.KK=!0,this.YK=e,this.WK=Array(),this.AE=t,this.OE=r,this.NE=i,this.zK=n,this.JK=s,this.QK=o||/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge./i.test(navigator.userAgent)}return e.prototype.As=function(e){var t=e.service+"_"+e.msgId,r=this.wj[t];null!=r?r(e):n.logger().error(n.loggerId+"Could not find a dispatcher for ",e,t,this.wj)},e.prototype.on=function(e,t,r){this.wj[e+"_"+t]=r},e.prototype.onerror=function(e){this.VK.push(e)},e.prototype.xB=function(e){this.jK.push(e)},e.prototype.XK=function(){var e=this;if(!window.WebSocket)return void this.VK.forEach(function(e){return e("WebSocket not defined")});var t=new WebSocket(this.YK);return t.binaryType="arraybuffer",t.onopen=function(t){e.ZK(),n.logger().debug(n.loggerId+"HiveServicesConnection established to "+e.YK),e.GK=(new e.JK).getTime(),e.$K(),e.jK.forEach(function(t){return t(e)}),e.eY(),e.tY()},t.onclose=function(t){e.close(e.KK),e.connect()},t.onmessage=function(t){e.As(n.Jd.yf(t.data))},t.onerror=function(t){e.close(!0),e.VK.forEach(function(e){return e(t.toString())})},t},e.prototype.isOpen=function(){return null!=this.PR&&this.PR.readyState==this.PR.OPEN},e.prototype.connect=function(e){var t=this;e&&(this.KK=!0),this.KK&&1!=this.isOpen()&&(this.qK>0||(this.GK>-1&&(new this.JK).getTime()-this.GK>this.AE?(this.xK=n.L.Ef,this.GK=-1):this.xK=Math.min(2*this.xK,this.AE),this.qK=window.setTimeout(function(){t.qK=-1,n.logger().debug(n.loggerId+"Connection attempt to "+t.YK+" [t:"+t.xK+" hb:"+t.QK+"]"),t.PR=t.XK(),t.xK=Math.max(t.xK,n.L.Ef)},this.xK)))},e.prototype.ZK=function(){this.qK>-1&&(clearTimeout(this.qK),this.qK=-1)},e.prototype.close=function(e){this.KK=void 0!=e&&e,n.logger().debug(n.loggerId+"Closing connection [reconnect:"+this.KK+"]"),this.ZK(),null!=this.PR&&(this.PR.close(),this.PR=null)},e.prototype.$K=function(){for(;this.WK.length>0;){var e=this.WK.pop();try{e.HK()?e.BK.reject(new Error("Message expired")):(this.eY(),this.PR.send(e.msg.vf()))}catch(t){if(t.code===DOMException.INVALID_STATE_ERR){this.WK.push(e);break}n.logger().error(n.loggerId+"Failed to send the message, dropped: ",t.code,t.name),e.BK.reject(t)}}this.tY()},e.prototype.eY=function(){this.rY&&(clearTimeout(this.rY),this.rY=null)},e.prototype.tY=function(){var e=this;this.QK&&!this.rY&&(this.rY=window.setInterval(function(){e.send(new n.Jd(Services.iY,0,""))},this.zK))},e.prototype.send=function(e,t){if(void 0===t&&(t=this.NE),this.WK.length>=this.OE)throw new Error("HiveServices connection cannot queue more messages");var r=new s(e,t);return this.WK.push(r),this.PR&&this.$K(),r.BK.Ss},e.prototype.nY=function(e){this.QK=e,this.QK&&this.tY()},e.prototype.sY=function(){return null!=this.PR},e}();t.HB=o},function(e,t){Services={1:"REMOTE_EXECUTOR",oY:1,2:"PEER_FORWARDER",aY:2,3:"PEER_INDEX",hY:3,4:"PEER_BROADCAST",cY:4,5:"PEER_FILTER",uY:5,6:"PEER_LOGGING",lY:6,7:"HIVEJS_TRACKER",pY:7,8:"PEER_SYSTEM",dY:8,9:"HIVEJS_SNAPSHOTS",Xd:9,10:"HIVEJS_TICKETS",BB:10,11:"HIVEJS_KEEPALIVE",iY:11,12:"HIVEJS_FORWARDING",fY:12}},function(e,t){e.i=function(){return new Function}},function(e,t,r){"use strict";var i=function(){function e(e,t){this.p2pId=e,this.Wl=t}return e.prototype.tp=function(){return this.p2pId},e.prototype.rp=function(){return this.Wl?this.Wl:this.p2pId},e}();t.pH=i},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(82),s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.getCidr=function(){return this.MH?this.MH:null},t}(n.FH);t.wH=s},function(e,t,r){"use strict";var i=r(74),n=r(4),s=r(0),o=r(27),a=function(){function e(){this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,this.logger=s.Framework.resolve(s.Framework.V.R).log()}return e.prototype.uH=function(){var e=n.defer(),t=this.indexedDB.open("PrivateIPDB");return t.onupgradeneeded=function(){t.result.createObjectStore("PrivateIPStore",{keyPath:"id"})},t.onsuccess=function(){var r=t.result;e.resolve(r)},t.onerror=function(t){e.reject(t)},e.Ss},e.prototype.ZH=function(){var e=this;if(this.gY)return this.gY;var t=setTimeout(function(){e.logger.warn("Private list retrieval timeout"),r.reject("Private list timeout")},4e3),r=n.defer();if(o.Gd._h&&this.indexedDB){this.uH().then(function(n){var s=n.transaction("PrivateIPStore","readwrite"),o=s.objectStore("PrivateIPStore"),a=o.get("iplist");a.onsuccess=function(){clearTimeout(t);var e=[];i.sL(a.result)||i.sL(a.result.value)||(e=a.result.value.split("|")),r.resolve(e),n.close()},a.onerror=function(i){clearTimeout(t),e.logger.warn("I got an error on indexed db "+i.message),r.reject("Error on indexedDB "+i.message)}}).fail(function(i){clearTimeout(t),e.logger.warn("DB is not open with error"+i.message),r.reject("DB is not open with error "+i.message)})}else clearTimeout(t),r.reject({message:"DB is not ready or enabled"});return this.gY=r.Ss,this.gY},e.prototype.ix=function(e){var t=this;if(o.Gd._h&&this.indexedDB){var r=e.join("|");this.uH().then(function(i){var n=i.transaction("PrivateIPStore","readwrite");n.objectStore("PrivateIPStore").put({id:"iplist",value:r}),n.oncomplete=function(){t.logger.debug("Storing site matched ips ["+e.join(",")+"]"),i.close()}}).fail(function(e){t.logger.warn("DB is not open with error "+e.message)})}},e}();t.QH=a},function(e,t,r){"use strict";var i=r(17).log,n=r(17).Wu,s={uL:function(){window.MediaStream=window.MediaStream||window.webkitMediaStream},pL:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this.EY},set:function(e){var t=this;this.EY&&(this.removeEventListener("track",this.EY),this.removeEventListener("addstream",this.vY)),this.addEventListener("track",this.EY=e),this.addEventListener("addstream",this.vY=function(e){e.stream.addEventListener("addtrack",function(r){var i=new Event("track");i.track=r.track,i.receiver={track:r.track},i.streams=[e.stream],t.dispatchEvent(i)}),e.stream.getTracks().forEach(function(t){var r=new Event("track");r.track=t,r.receiver={track:t},r.streams=[e.stream],this.dispatchEvent(r)}.bind(this))}.bind(this))}})},dL:function(){if("object"==typeof window&&window.RTCPeerConnection&&!("getSenders"in RTCPeerConnection.prototype)&&"createDTMFSender"in RTCPeerConnection.prototype){RTCPeerConnection.prototype.getSenders=function(){return this.yY};var e=RTCPeerConnection.prototype.addStream,t=RTCPeerConnection.prototype.removeStream;RTCPeerConnection.prototype.addStream=function(t){var r=this;r.yY=r.yY||[],e.apply(r,[t]),t.getTracks().forEach(function(e){r.yY.push({track:e,get TY(){return void 0===this.mY&&("audio"===e.kind?this.mY=r.createDTMFSender(e):this.mY=null),this.mY}})})},RTCPeerConnection.prototype.removeStream=function(e){var r=this;r.yY=r.yY||[],t.apply(r,[e]),e.getTracks().forEach(function(e){var t=r.yY.find(function(t){return t.track===e});t&&r.yY.splice(r.yY.indexOf(t),1)})}}},lL:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this.IY},set:function(e){var t=this;if(this.IY=e,this.src&&URL.revokeObjectURL(this.src),!e)return void(this.src="");this.src=URL.createObjectURL(e),e.addEventListener("addtrack",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)}),e.addEventListener("removetrack",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)})}}))},aL:function(){window.RTCPeerConnection||(window.RTCPeerConnection=function(e,t){return i("PeerConnection"),e&&e.SY&&(e.RY=e.SY),new webkitRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=webkitRTCPeerConnection.prototype,webkitRTCPeerConnection.wY&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return webkitRTCPeerConnection.wY}}));var e=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(t,r,i){var n=this,s=arguments;if(arguments.length>0&&"function"==typeof t)return e.apply(this,arguments);if(0===e.length&&(0===arguments.length||"function"!=typeof arguments[0]))return e.apply(this,[]);var o=function(e){var t={};return e.result().forEach(function(e){var r={id:e.id,timestamp:e.timestamp,type:{bY:"local-candidate",CY:"remote-candidate"}[e.type]||e.type};e.names().forEach(function(t){r[t]=e._Y(t)}),t[r.id]=r}),t},a=function(e){return new Map(Object.keys(e).map(function(t){return[t,e[t]]}))};if(arguments.length>=2){var h=function(e){s[1](a(o(e)))};return e.apply(this,[h,arguments[0]])}return new Promise(function(t,r){e.apply(n,[function(e){t(a(o(e)))},r])}).then(r,i)},n.version<51&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){var e=arguments,r=this,i=new Promise(function(i,n){t.apply(r,[e[0],i,n])});return e.length<2?i:i.then(function(){e[1].apply(null,[])},function(t){e.length>=3&&e[2].apply(null,[t])})}}),n.version<52&&["createOffer","createAnswer"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){var e=this;if(arguments.length<1||1===arguments.length&&"object"==typeof arguments[0]){var r=1===arguments.length?arguments[0]:void 0;return new Promise(function(i,n){t.apply(e,[i,n,r])})}return t.apply(this,arguments)}}),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){return arguments[0]=new("addIceCandidate"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}});var t=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?t.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}};e.i={uL:s.uL,pL:s.pL,dL:s.dL,lL:s.lL,aL:s.aL,cL:r(123)}},function(e,t,r){"use strict";var i=r(17).log,n=r(17).Wu;e.i=function(){var e=function(e){if("object"!=typeof e||e.PY||e.optional)return e;var t={};return Object.keys(e).forEach(function(r){if("require"!==r&&"advanced"!==r&&"mediaSource"!==r){var i="object"==typeof e[r]?e[r]:{AY:e[r]};void 0!==i.OY&&"number"==typeof i.OY&&(i.min=i.max=i.OY);var n=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):"deviceId"===t?"sourceId":t};if(void 0!==i.AY){t.optional=t.optional||[];var s={};"number"==typeof i.AY?(s[n("min",r)]=i.AY,t.optional.push(s),s={},s[n("max",r)]=i.AY,t.optional.push(s)):(s[n("",r)]=i.AY,t.optional.push(s))}void 0!==i.OY&&"number"!=typeof i.OY?(t.PY=t.PY||{},t.PY[n("",r)]=i.OY):["min","max"].forEach(function(e){void 0!==i[e]&&(t.PY=t.PY||{},t.PY[n(e,r)]=i[e])})}}),e.NY&&(t.optional=(t.optional||[]).concat(e.NY)),t},t=function(t,r){if(t=JSON.parse(JSON.stringify(t)),t&&t.HR&&(t.HR=e(t.HR)),t&&"object"==typeof t.video){var s=t.video.DY;s=s&&("object"==typeof s?s:{AY:s});var o=n.version<59;if(s&&("user"===s.OY||"environment"===s.OY||"user"===s.AY||"environment"===s.AY)&&(!navigator.mediaDevices.kY||!navigator.mediaDevices.kY().DY||o)&&(delete t.video.DY,"environment"===s.OY||"environment"===s.AY))return navigator.mediaDevices.LY().then(function(n){n=n.filter(function(e){return"videoinput"===e.kind});var o=n.find(function(e){return-1!==e.label.toLowerCase().indexOf("back")})||n.length&&n[n.length-1];return o&&(t.video.MY=s.OY?{OY:o.MY}:{AY:o.MY}),t.video=e(t.video),i("chrome: "+JSON.stringify(t)),r(t)});t.video=e(t.video)}return i("chrome: "+JSON.stringify(t)),r(t)},r=function(e){return{name:{FY:"NotAllowedError",UY:"OverconstrainedError"}[e.name]||e.name,message:e.message,BY:e.HY,toString:function(){return this.name+(this.message&&": ")+this.message}}},s=function(e,i,n){t(e,function(e){navigator.webkitGetUserMedia(e,i,function(e){n(r(e))})})};navigator.getUserMedia=s;var o=function(e){return new Promise(function(t,r){navigator.getUserMedia(e,t,r)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:o,LY:function(){return new Promise(function(e){var t={HR:"audioinput",video:"videoinput"};return MediaStreamTrack.getSources(function(r){e(r.map(function(e){return{label:e.label,kind:t[e.kind],MY:e.id,xY:""}}))})})},kY:function(){return{MY:!0,qY:!0,DY:!0,GY:!0,height:!0,width:!0}}}),navigator.mediaDevices.getUserMedia){var a=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(e){return t(e,function(e){return a(e).then(function(t){if(e.HR&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException("","NotFoundError");return t},function(e){return Promise.reject(r(e))})})}}else navigator.mediaDevices.getUserMedia=function(e){return o(e)};void 0===navigator.mediaDevices.addEventListener&&(navigator.mediaDevices.addEventListener=function(){i("Dummy mediaDevices.addEventListener called.")}),void 0===navigator.mediaDevices.removeEventListener&&(navigator.mediaDevices.removeEventListener=function(){i("Dummy mediaDevices.removeEventListener called.")})}},function(e,t,r){"use strict";function i(e){var t=e.filter(function(e){return"audio"===e.kind}),r=e.filter(function(e){return"video"===e.kind});for(e=[];t.length||r.length;)t.length&&e.push(t.shift()),r.length&&e.push(r.shift());return e}function n(e){var t=!1;return e=JSON.parse(JSON.stringify(e)),e.filter(function(e){if(e&&(e.VY||e.url)){var r=e.VY||e.url,i="string"==typeof r;return i&&(r=[r]),r=r.filter(function(e){return 0!==e.indexOf("turn:")||-1===e.indexOf("transport=udp")||-1!==e.indexOf("turn:[")||t?0===e.indexOf("stun:")&&o.version>=14393:(t=!0,!0)}),delete e.url,e.VY=i?r[0]:r,!!r.length}return!1})}var s=r(125),o=r(17).Wu,a={aL:function(){if(window.jY&&(window.RTCIceCandidate||(window.RTCIceCandidate=function(e){return e}),window.RTCSessionDescription||(window.RTCSessionDescription=function(e){return e}),o.version<15025)){var e=Object.getOwnPropertyDescriptor(MediaStreamTrack.prototype,"enabled");Object.defineProperty(MediaStreamTrack.prototype,"enabled",{set:function(t){e.set.call(this,t);var r=new Event("enabled");r.enabled=t,this.dispatchEvent(r)}})}window.RTCPeerConnection=function(e){var t=this,r=document.createDocumentFragment();if(["addEventListener","removeEventListener","dispatchEvent"].forEach(function(e){t[e]=r[e].bind(r)}),this.onicecandidate=null,this.onaddstream=null,this.QY=null,this.onremovestream=null,this.onsignalingstatechange=null,this.oniceconnectionstatechange=null,this.KY=null,this.onnegotiationneeded=null,this.ondatachannel=null,this.YY=[],this.WY=[],this.getLocalStreams=function(){return t.YY},this.getRemoteStreams=function(){return t.WY},this.localDescription=new RTCSessionDescription({type:"",sdp:""}),this.remoteDescription=new RTCSessionDescription({type:"",sdp:""}),this.signalingState="stable",this.iceConnectionState="new",this.iceGatheringState="new",this.zY={JY:"all",iceServers:[]},e&&e.SY)switch(e.SY){case"all":case"relay":this.zY.JY=e.SY}this.XY=e&&"max-bundle"===e.ZY,e&&e.iceServers&&(this.zY.iceServers=n(e.iceServers)),this.$Y=e,this.eW=[],this.tW=[]},window.RTCPeerConnection.prototype.rW=function(){var e=new Event("icegatheringstatechange");this.dispatchEvent(e),null!==this.KY&&this.KY(e)},window.RTCPeerConnection.prototype.iW=function(){var e=this,t=s.nW(e.localDescription.sdp);this.tW.forEach(function(r){if(r.candidate&&0!==Object.keys(r.candidate).length)t[r.candidate.sdpMLineIndex+1]+="a="+r.candidate.candidate+"\r\n";else for(var i=1;i<t.length;i++)-1===t[i].indexOf("\r\na=end-of-candidates\r\n")&&(t[i]+="a=end-of-candidates\r\n");if(e.localDescription.sdp=t.join(""),e.dispatchEvent(r),null!==e.onicecandidate&&e.onicecandidate(r),!r.candidate&&"complete"!==e.iceGatheringState){e.eW.every(function(e){return e.sW&&"completed"===e.sW.state})&&"complete"!==e.oW&&(e.iceGatheringState="complete",e.rW())}}),this.tW=[]},window.RTCPeerConnection.prototype.getConfiguration=function(){return this.$Y},window.RTCPeerConnection.prototype.addStream=function(e){if(o.version>=15025)this.YY.push(e);else{var t=e.clone();e.getTracks().forEach(function(e,r){var i=t.getTracks()[r];e.addEventListener("enabled",function(e){i.enabled=e.enabled})}),this.YY.push(t)}this.aW()},window.RTCPeerConnection.prototype.removeStream=function(e){var t=this.YY.indexOf(e);t>-1&&(this.YY.splice(t,1),this.aW())},window.RTCPeerConnection.prototype.getSenders=function(){return this.eW.filter(function(e){return!!e.hW}).map(function(e){return e.hW})},window.RTCPeerConnection.prototype.getReceivers=function(){return this.eW.filter(function(e){return!!e.cW}).map(function(e){return e.cW})},window.RTCPeerConnection.prototype.uW=function(e,t){var r={lW:[],pW:[],dW:[]},i=function(e,t){e=parseInt(e,10);for(var r=0;r<t.length;r++)if(t[r].fW===e||t[r].gW===e)return t[r]},n=function(e,t,r,n){var s=i(e.parameters.EW,r),o=i(t.parameters.EW,n);return s&&o&&s.name.toLowerCase()===o.name.toLowerCase()};return e.lW.forEach(function(i){for(var s=0;s<t.lW.length;s++){var o=t.lW[s];if(i.name.toLowerCase()===o.name.toLowerCase()&&i.vW===o.vW){if("rtx"===i.name.toLowerCase()&&i.parameters&&o.parameters.EW&&!n(i,o,e.lW,t.lW))continue;o=JSON.parse(JSON.stringify(o)),o.yW=Math.min(i.yW,o.yW),r.lW.push(o),o.TW=o.TW.filter(function(e){for(var t=0;t<i.TW.length;t++)if(i.TW[t].type===e.type&&i.TW[t].mW===e.mW)return!0;return!1});break}}}),e.pW.forEach(function(e){for(var i=0;i<t.pW.length;i++){var n=t.pW[i];if(e.uri===n.uri){r.pW.push(n);break}}}),r},window.RTCPeerConnection.prototype.IW=function(e,t){var r=this,i=new RTCIceGatherer(r.zY),n=new RTCIceTransport(i);i.SW=function(o){var a=new Event("icecandidate");a.candidate={sdpMid:e,sdpMLineIndex:t};var h=o.candidate,c=!h||0===Object.keys(h).length;c?void 0===i.state&&(i.state="completed"):(h.RW="RTCP"===n.RW?2:1,a.candidate.candidate=s.wW(h));var u=s.nW(r.localDescription.sdp);u[a.candidate.sdpMLineIndex+1]+=c?"a=end-of-candidates\r\n":"a="+a.candidate.candidate+"\r\n",r.localDescription.sdp=u.join("");var l=r.bW?r.bW:r.eW,p=l.every(function(e){return e.sW&&"completed"===e.sW.state});switch(r.iceGatheringState){case"new":c||r.tW.push(a),c&&p&&r.tW.push(new Event("icecandidate"));break;case"gathering":r.iW(),c||(r.dispatchEvent(a),null!==r.onicecandidate&&r.onicecandidate(a)),p&&(r.dispatchEvent(new Event("icecandidate")),null!==r.onicecandidate&&r.onicecandidate(new Event("icecandidate")),r.iceGatheringState="complete",r.rW())}},n._W=function(){r.PW()};var o=new RTCDtlsTransport(n);return o.AW=function(){r.PW()},o.onerror=function(){o.state="failed",r.PW()},{sW:i,OW:n,NW:o}},window.RTCPeerConnection.prototype.DW=function(e,t,r){var i=this.uW(e.kW,e.LW);t&&e.hW&&(i.MW=e.FW,i.UW={BW:s.HW},e.xW.length&&(i.UW.qW=e.xW[0].qW),e.hW.send(i)),r&&e.cW&&("video"===e.kind&&e.xW&&o.version<15019&&e.xW.forEach(function(e){delete e.GW}),i.MW=e.xW,i.UW={BW:e.BW},e.FW.length&&(i.UW.qW=e.FW[0].qW),e.cW.VW(i))},window.RTCPeerConnection.prototype.setLocalDescription=function(e){var t,r,i=this;if("offer"===e.type)this.bW&&(t=s.nW(e.sdp),r=t.shift(),t.forEach(function(e,t){var r=s.jW(e);i.bW[t].kW=r}),this.eW=this.bW,delete this.bW);else if("answer"===e.type){t=s.nW(i.remoteDescription.sdp),r=t.shift();var n=s.QW(r,"a=ice-lite").length>0;t.forEach(function(e,t){var o=i.eW[t],a=o.sW,h=o.OW,c=o.NW,u=o.kW,l=o.LW;if("0"!==e.split("\n",1)[0].split(" ",2)[1]&&!o.KW){var p=s.YW(e,r),d=s.WW(e,r);n&&(d.zW="server"),i.XY&&0!==t||(h.start(a,p,n?"controlling":"controlled"),c.start(d));var f=i.uW(u,l);i.DW(o,f.lW.length>0,!1)}})}switch(this.localDescription={type:e.type,sdp:e.sdp},e.type){case"offer":this.JW("have-local-offer");break;case"answer":this.JW("stable");break;default:throw new TypeError('unsupported type "'+e.type+'"')}var o=arguments.length>1&&"function"==typeof arguments[1];if(o){var a=arguments[1];window.setTimeout(function(){a(),"new"===i.iceGatheringState&&(i.iceGatheringState="gathering",i.rW()),i.iW()},0)}var h=Promise.resolve();return h.then(function(){o||("new"===i.iceGatheringState&&(i.iceGatheringState="gathering",i.rW()),window.setTimeout(i.iW.bind(i),500))}),h},window.RTCPeerConnection.prototype.setRemoteDescription=function(e){var t=this,r=new MediaStream,i=[],n=s.nW(e.sdp),a=n.shift(),h=s.QW(a,"a=ice-lite").length>0;switch(this.XY=s.QW(a,"a=group:BUNDLE ").length>0,n.forEach(function(n,c){var u=s.XW(n),l=u[0].substr(2).split(" "),p=l[0],d="0"===l[1],f=s.ZW(n,a),g=s.QW(n,"a=mid:");if(g=g.length?g[0].substr(6):s.$W(),"application"===p&&"DTLS/SCTP"===l[2])return void(t.eW[c]={ez:g,KW:!0});var E,v,y,T,m,I,S,R,w,b,C,_,P=s.jW(n);d||(C=s.YW(n,a),_=s.WW(n,a),_.zW="client"),R=s.tz(n);var A,O=s.QW(n,"a=ssrc:").map(function(e){return s.rz(e)}).filter(function(e){return"cname"===e.iz})[0];O&&(A=O.value);var N=s.QW(n,"a=end-of-candidates",a).length>0,D=s.QW(n,"a=candidate:").map(function(e){return s.ex(e)}).filter(function(e){return"1"===e.RW});if("offer"!==e.type||d)"answer"!==e.type||d||(E=t.eW[c],v=E.sW,y=E.OW,T=E.NW,m=E.hW,I=E.cW,S=E.FW,w=E.kW,t.eW[c].xW=R,t.eW[c].LW=P,t.eW[c].BW=A,(h||N)&&D.length&&y.nz(D),t.XY&&0!==c||(y.start(v,C,"controlling"),T.start(_)),t.DW(E,"sendrecv"===f||"recvonly"===f,"sendrecv"===f||"sendonly"===f),!I||"sendrecv"!==f&&"sendonly"!==f?delete E.cW:(b=I.track,i.push([b,I]),r.addTrack(b)));else{var k=t.XY&&c>0?{sW:t.eW[0].sW,OW:t.eW[0].OW,NW:t.eW[0].NW}:t.IW(g,c);if(!N||t.XY&&0!==c||k.OW.nz(D),w=RTCRtpReceiver.sz(p),o.version<15019&&(w.lW=w.lW.filter(function(e){return"rtx"!==e.name})),S=[{qW:1001*(2*c+2)}],"sendrecv"!==f&&"sendonly"!==f||(I=new RTCRtpReceiver(k.NW,p),b=I.track,i.push([b,I]),r.addTrack(b)),t.YY.length>0&&t.YY[0].getTracks().length>=c){var L;"audio"===p?L=t.YY[0].getAudioTracks()[0]:"video"===p&&(L=t.YY[0].getVideoTracks()[0]),L&&(o.version>=15019&&"video"===p&&(S[0].GW={qW:1001*(2*c+2)+1}),m=new RTCRtpSender(L,k.NW))}t.eW[c]={sW:k.sW,OW:k.OW,NW:k.NW,kW:w,LW:P,hW:m,cW:I,kind:p,ez:g,BW:A,FW:S,xW:R},t.DW(t.eW[c],!1,"sendrecv"===f||"sendonly"===f)}}),this.remoteDescription={type:e.type,sdp:e.sdp},e.type){case"offer":this.JW("have-remote-offer");break;case"answer":this.JW("stable");break;default:throw new TypeError('unsupported type "'+e.type+'"')}return r.getTracks().length&&(t.WY.push(r),window.setTimeout(function(){var e=new Event("addstream");e.stream=r,t.dispatchEvent(e),null!==t.onaddstream&&window.setTimeout(function(){t.onaddstream(e)},0),i.forEach(function(e){var i=e[0],n=e[1],s=new Event("track");s.track=i,s.receiver=n,s.streams=[r],t.dispatchEvent(s),null!==t.QY&&window.setTimeout(function(){t.QY(s)},0)})},0)),arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.close=function(){this.eW.forEach(function(e){e.OW&&e.OW.stop(),e.NW&&e.NW.stop(),e.hW&&e.hW.stop(),e.cW&&e.cW.stop()}),this.JW("closed")},window.RTCPeerConnection.prototype.JW=function(e){this.signalingState=e;var t=new Event("signalingstatechange");this.dispatchEvent(t),null!==this.onsignalingstatechange&&this.onsignalingstatechange(t)},window.RTCPeerConnection.prototype.aW=function(){var e=new Event("negotiationneeded");this.dispatchEvent(e),null!==this.onnegotiationneeded&&this.onnegotiationneeded(e)},window.RTCPeerConnection.prototype.PW=function(){var e,t=this,r={oz:0,closed:0,az:0,hz:0,connected:0,cz:0,ll:0};if(this.eW.forEach(function(e){r[e.OW.state]++,r[e.NW.state]++}),r.connected+=r.cz,e="new",r.ll>0?e="failed":r.az>0||r.hz>0?e="connecting":r.uz>0?e="disconnected":r.oz>0?e="new":(r.connected>0||r.cz>0)&&(e="connected"),e!==t.iceConnectionState){t.iceConnectionState=e;var i=new Event("iceconnectionstatechange");this.dispatchEvent(i),null!==this.oniceconnectionstatechange&&this.oniceconnectionstatechange(i)}},window.RTCPeerConnection.prototype.createOffer=function(){var e=this;if(this.bW)throw new Error("createOffer called while there is a pending offer.");var t;1===arguments.length&&"function"!=typeof arguments[0]?t=arguments[0]:3===arguments.length&&(t=arguments[2]);var r=[],n=0,a=0;if(this.YY.length&&(n=this.YY[0].getAudioTracks().length,a=this.YY[0].getVideoTracks().length),t){if(t.PY||t.optional)throw new TypeError("Legacy mandatory/optional constraints not supported.");void 0!==t.lz&&(n=t.lz),void 0!==t.pz&&(a=t.pz)}for(this.YY.length&&this.YY[0].getTracks().forEach(function(e){r.push({kind:e.kind,track:e,dz:"audio"===e.kind?n>0:a>0}),"audio"===e.kind?n--:"video"===e.kind&&a--});n>0||a>0;)n>0&&(r.push({kind:"audio",dz:!0}),n--),a>0&&(r.push({kind:"video",dz:!0}),a--);r=i(r);var h=s.fz(),c=[];r.forEach(function(t,r){var i=t.track,n=t.kind,a=s.$W(),h=e.XY&&r>0?{sW:c[0].sW,OW:c[0].OW,NW:c[0].NW}:e.IW(a,r),u=RTCRtpSender.sz(n);o.version<15019&&(u.lW=u.lW.filter(function(e){return"rtx"!==e.name})),u.lW.forEach(function(e){"H264"===e.name&&void 0===e.parameters["gz"]&&(e.parameters["gz"]="1")});var l,p,d=[{qW:1001*(2*r+1)}];i&&(o.version>=15019&&"video"===n&&(d[0].GW={qW:1001*(2*r+1)+1}),l=new RTCRtpSender(i,h.NW)),t.dz&&(p=new RTCRtpReceiver(h.NW,n)),c[r]={sW:h.sW,OW:h.OW,NW:h.NW,kW:u,LW:null,hW:l,cW:p,kind:n,ez:a,FW:d,xW:null}}),this.XY&&(h+="a=group:BUNDLE "+c.map(function(e){return e.ez}).join(" ")+"\r\n"),r.forEach(function(t,r){var i=c[r];h+=s.Ez(i,i.kW,"offer",e.YY[0])}),this.bW=c;var u=new RTCSessionDescription({type:"offer",sdp:h});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,u),Promise.resolve(u)},window.RTCPeerConnection.prototype.createAnswer=function(){var e=this,t=s.fz();this.XY&&(t+="a=group:BUNDLE "+this.eW.map(function(e){return e.ez}).join(" ")+"\r\n"),this.eW.forEach(function(r){if(r.KW)return void(t+="m=application 0 DTLS/SCTP 5000\r\nc=IN IP4 0.0.0.0\r\na=mid:"+r.ez+"\r\n");var i=e.uW(r.kW,r.LW);t+=s.Ez(r,i,"answer",e.YY[0])});var r=new RTCSessionDescription({type:"answer",sdp:t});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,r),Promise.resolve(r)},window.RTCPeerConnection.prototype.addIceCandidate=function(e){if(e){var t=e.sdpMLineIndex;if(e.sdpMid)for(var r=0;r<this.eW.length;r++)if(this.eW[r].ez===e.sdpMid){t=r;break}var i=this.eW[t];if(i){var n=Object.keys(e.candidate).length>0?s.ex(e.candidate):{};if("tcp"===n.protocol&&(0===n.port||9===n.port))return Promise.resolve();if("1"!==n.RW)return Promise.resolve();i.OW.vz(n);var o=s.nW(this.remoteDescription.sdp);o[t+1]+=(n.type?e.candidate.trim():"a=end-of-candidates")+"\r\n",this.remoteDescription.sdp=o.join("")}}else for(var a=0;a<this.eW.length;a++)if(this.eW[a].OW.vz({}),this.XY)return Promise.resolve();return arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.getStats=function(){var e=[];this.eW.forEach(function(t){["rtpSender","rtpReceiver","iceGatherer","iceTransport","dtlsTransport"].forEach(function(r){t[r]&&e.push(t[r].getStats())})});var t=arguments.length>1&&"function"==typeof arguments[1]&&arguments[1],r=function(e){return{yz:"inbound-rtp",Tz:"outbound-rtp",mz:"candidate-pair",bY:"local-candidate",CY:"remote-candidate"}[e.type]||e.type};return new Promise(function(i){var n=new Map;Promise.all(e).then(function(e){e.forEach(function(e){Object.keys(e).forEach(function(t){e[t].type=r(e[t]),n.set(t,e[t])})}),t&&window.setTimeout(t,0,n),i(n)})})}}};e.i={aL:a.aL,cL:r(126)}},function(e,t,r){"use strict";var i={};i.$W=function(){return Math.random().toString(36).substr(2,10)},i.HW=i.$W(),i.XW=function(e){return e.trim().split("\n").map(function(e){return e.trim()})},i.nW=function(e){return e.split("\nm=").map(function(e,t){return(t>0?"m="+e:e).trim()+"\r\n"})},i.QW=function(e,t){return i.XW(e).filter(function(e){return 0===e.indexOf(t)})},i.ex=function(e){var t;t=0===e.indexOf("a=candidate:")?e.substring(12).split(" "):e.substring(10).split(" ");for(var r={Iz:t[0],RW:t[1],protocol:t[2].toLowerCase(),Sz:parseInt(t[3],10),ip:t[4],port:parseInt(t[5],10),type:t[7]},i=8;i<t.length;i+=2)switch(t[i]){case"raddr":r.Rz=t[i+1];break;case"rport":r.wz=parseInt(t[i+1],10);break;case"tcptype":r.bz=t[i+1];break;default:r[t[i]]=t[i+1]}return r},i.wW=function(e){var t=[];t.push(e.Iz),t.push(e.RW),t.push(e.protocol.toUpperCase()),t.push(e.Sz),t.push(e.ip),t.push(e.port);var r=e.type;return t.push("typ"),t.push(r),"host"!==r&&e.Rz&&e.wz&&(t.push("raddr"),t.push(e.Rz),t.push("rport"),t.push(e.wz)),e.bz&&"tcp"===e.protocol.toLowerCase()&&(t.push("tcptype"),t.push(e.bz)),"candidate:"+t.join(" ")},i.Cz=function(e){return e.substr(14).split(" ")},i._z=function(e){var t=e.substr(9).split(" "),r={fW:parseInt(t.shift(),10)};return t=t[0].split("/"),r.name=t[0],r.vW=parseInt(t[1],10),r.yW=3===t.length?parseInt(t[2],10):1,r},i.Pz=function(e){var t=e.fW;return void 0!==e.gW&&(t=e.gW),"a=rtpmap:"+t+" "+e.name+"/"+e.vW+(1!==e.yW?"/"+e.yW:"")+"\r\n"},i.Az=function(e){var t=e.substr(9).split(" ");return{id:parseInt(t[0],10),direction:t[0].indexOf("/")>0?t[0].split("/")[1]:"sendrecv",uri:t[1]}},i.Oz=function(e){return"a=extmap:"+(e.id||e.Nz)+(e.direction&&"sendrecv"!==e.direction?"/"+e.direction:"")+" "+e.uri+"\r\n"},i.Dz=function(e){for(var t,r={},i=e.substr(e.indexOf(" ")+1).split(";"),n=0;n<i.length;n++)t=i[n].trim().split("="),r[t[0].trim()]=t[1];return r},i.kz=function(e){var t="",r=e.fW;if(void 0!==e.gW&&(r=e.gW),e.parameters&&Object.keys(e.parameters).length){var i=[];Object.keys(e.parameters).forEach(function(t){i.push(t+"="+e.parameters[t])}),t+="a=fmtp:"+r+" "+i.join(";")+"\r\n"}return t},i.Lz=function(e){var t=e.substr(e.indexOf(" ")+1).split(" ");return{type:t.shift(),mW:t.join(" ")}},i.Mz=function(e){var t="",r=e.fW;return void 0!==e.gW&&(r=e.gW),e.TW&&e.TW.length&&e.TW.forEach(function(e){t+="a=rtcp-fb:"+r+" "+e.type+(e.mW&&e.mW.length?" "+e.mW:"")+"\r\n"}),t},i.rz=function(e){var t=e.indexOf(" "),r={qW:parseInt(e.substr(7,t-7),10)},i=e.indexOf(":",t);return i>-1?(r.iz=e.substr(t+1,i-t-1),r.value=e.substr(i+1)):r.iz=e.substr(t+1),r},i.Fz=function(e){var t=i.QW(e,"a=mid:")[0];if(t)return t.substr(6)},i.Uz=function(e){var t=e.substr(14).split(" ");return{algorithm:t[0].toLowerCase(),value:t[1]}},i.WW=function(e,t){return{zW:"auto",Bz:i.QW(e+t,"a=fingerprint:").map(i.Uz)}},i.Hz=function(e,t){var r="a=setup:"+t+"\r\n";return e.Bz.forEach(function(e){r+="a=fingerprint:"+e.algorithm+" "+e.value+"\r\n"}),r},i.YW=function(e,t){var r=i.XW(e);return r=r.concat(i.XW(t)),{xz:r.filter(function(e){return 0===e.indexOf("a=ice-ufrag:")})[0].substr(12),password:r.filter(function(e){return 0===e.indexOf("a=ice-pwd:")})[0].substr(10)}},i.qz=function(e){return"a=ice-ufrag:"+e.xz+"\r\na=ice-pwd:"+e.password+"\r\n"},i.jW=function(e){for(var t={lW:[],pW:[],dW:[],UW:[]},r=i.XW(e),n=r[0].split(" "),s=3;s<n.length;s++){var o=n[s],a=i.QW(e,"a=rtpmap:"+o+" ")[0];if(a){var h=i._z(a),c=i.QW(e,"a=fmtp:"+o+" ");switch(h.parameters=c.length?i.Dz(c[0]):{},h.TW=i.QW(e,"a=rtcp-fb:"+o+" ").map(i.Lz),t.lW.push(h),h.name.toUpperCase()){case"RED":case"ULPFEC":t.dW.push(h.name.toUpperCase())}}}return i.QW(e,"a=extmap:").forEach(function(e){t.pW.push(i.Az(e))}),t},i.Gz=function(e,t){var r="";r+="m="+e+" ",r+=t.lW.length>0?"9":"0",r+=" UDP/TLS/RTP/SAVPF ",r+=t.lW.map(function(e){return void 0!==e.gW?e.gW:e.fW}).join(" ")+"\r\n",r+="c=IN IP4 0.0.0.0\r\n",r+="a=rtcp:9 IN IP4 0.0.0.0\r\n",t.lW.forEach(function(e){r+=i.Pz(e),r+=i.kz(e),r+=i.Mz(e)});var n=0;return t.lW.forEach(function(e){e.Vz>n&&(n=e.Vz)}),n>0&&(r+="a=maxptime:"+n+"\r\n"),r+="a=rtcp-mux\r\n",t.pW.forEach(function(e){r+=i.Oz(e)}),r},i.tz=function(e){var t,r=[],n=i.jW(e),s=-1!==n.dW.indexOf("RED"),o=-1!==n.dW.indexOf("ULPFEC"),a=i.QW(e,"a=ssrc:").map(function(e){return i.rz(e)}).filter(function(e){return"cname"===e.iz}),h=a.length>0&&a[0].qW,c=i.QW(e,"a=ssrc-group:FID").map(function(e){var t=e.split(" ");return t.shift(),t.map(function(e){return parseInt(e,10)})});c.length>0&&c[0].length>1&&c[0][0]===h&&(t=c[0][1]),n.lW.forEach(function(e){if("RTX"===e.name.toUpperCase()&&e.parameters.EW){var i={qW:h,jz:parseInt(e.parameters.EW,10),GW:{qW:t}};r.push(i),s&&(i=JSON.parse(JSON.stringify(i)),i.Qz={qW:t,Kz:o?"red+ulpfec":"red"},r.push(i))}}),0===r.length&&h&&r.push({qW:h});var u=i.QW(e,"b=");return u.length&&(0===u[0].indexOf("b=TIAS:")?u=parseInt(u[0].substr(7),10):0===u[0].indexOf("b=AS:")&&(u=parseInt(u[0].substr(5),10)),r.forEach(function(e){e.Yz=u})),r},i.Wz=function(e){var t={},r=i.QW(e,"a=ssrc:").map(function(e){return i.rz(e)}).filter(function(e){return"cname"===e.iz})[0];r&&(t.BW=r.value,t.qW=r.qW);var n=i.QW(e,"a=rtcp-rsize");t.zz=n.length>0,t.Jz=0===n.length;var s=i.QW(e,"a=rtcp-mux");return t.Xz=s.length>0,t},i.Zz=function(e){var t,r=i.QW(e,"a=msid:");if(1===r.length)return t=r[0].substr(7).split(" "),{stream:t[0],track:t[1]};var n=i.QW(e,"a=ssrc:").map(function(e){return i.rz(e)}).filter(function(e){return"msid"===e.iz});return n.length>0?(t=n[0].value.split(" "),{stream:t[0],track:t[1]}):void 0},i.fz=function(){return"v=0\r\no=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},i.Ez=function(e,t,r,n){var s=i.Gz(e.kind,t);if(s+=i.qz(e.sW.$z()),s+=i.Hz(e.NW.$z(),"offer"===r?"actpass":"active"),s+="a=mid:"+e.ez+"\r\n",e.direction?s+="a="+e.direction+"\r\n":e.hW&&e.cW?s+="a=sendrecv\r\n":e.hW?s+="a=sendonly\r\n":e.cW?s+="a=recvonly\r\n":s+="a=inactive\r\n",e.hW){var o="msid:"+n.id+" "+e.hW.track.id+"\r\n";s+="a="+o,s+="a=ssrc:"+e.FW[0].qW+" "+o,e.FW[0].GW&&(s+="a=ssrc:"+e.FW[0].GW.qW+" "+o,s+="a=ssrc-group:FID "+e.FW[0].qW+" "+e.FW[0].GW.qW+"\r\n")}return s+="a=ssrc:"+e.FW[0].qW+" cname:"+i.HW+"\r\n",e.hW&&e.FW[0].GW&&(s+="a=ssrc:"+e.FW[0].GW.qW+" cname:"+i.HW+"\r\n"),s},i.ZW=function(e,t){for(var r=i.XW(e),n=0;n<r.length;n++)switch(r[n]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return r[n].substr(2)}return t?i.ZW(t):"sendrecv"},i.eJ=function(e){return i.XW(e)[0].split(" ")[0].substr(2)},i.zs=function(e){return"0"===e.split(" ",2)[1]},e.i=i},function(e,t,r){"use strict";e.i=function(){var e=function(e){return{name:{FY:"NotAllowedError"}[e.name]||e.name,message:e.message,BY:e.BY,toString:function(){return this.name}}},t=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(r){return t(r).catch(function(t){return Promise.reject(e(t))})}}},function(e,t,r){"use strict";var i=r(17).Wu,n={pL:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this.EY},set:function(e){this.EY&&(this.removeEventListener("track",this.EY),this.removeEventListener("addstream",this.vY)),this.addEventListener("track",this.EY=e),this.addEventListener("addstream",this.vY=function(e){e.stream.getTracks().forEach(function(t){var r=new Event("track");r.track=t,r.receiver={track:t},r.streams=[e.stream],this.dispatchEvent(r)}.bind(this))}.bind(this))}})},lL:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this.mozSrcObject},set:function(e){this.mozSrcObject=e}}))},aL:function(){if("object"==typeof window&&(window.RTCPeerConnection||window.mozRTCPeerConnection)){window.RTCPeerConnection||(window.RTCPeerConnection=function(e,t){if(i.version<38&&e&&e.iceServers){for(var r=[],n=0;n<e.iceServers.length;n++){var s=e.iceServers[n];if(s.hasOwnProperty("urls"))for(var o=0;o<s.VY.length;o++){var a={url:s.VY[o]};0===s.VY[o].indexOf("turn")&&(a.username=s.username,a.tJ=s.tJ),r.push(a)}else r.push(e.iceServers[n])}e.iceServers=r}return new mozRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=mozRTCPeerConnection.prototype,mozRTCPeerConnection.wY&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return mozRTCPeerConnection.wY}}),window.RTCSessionDescription=mozRTCSessionDescription,window.RTCIceCandidate=mozRTCIceCandidate),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){return arguments[0]=new("addIceCandidate"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}});var e=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?e.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())};var t=function(e){var t=new Map;return Object.keys(e).forEach(function(r){t.set(r,e[r]),t[r]=e[r]}),t},r={yz:"inbound-rtp",Tz:"outbound-rtp",mz:"candidate-pair",bY:"local-candidate",CY:"remote-candidate"},n=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(e,s,o){return n.apply(this,[e||null]).then(function(e){if(i.version<48&&(e=t(e)),i.version<53&&!s)try{e.forEach(function(e){e.type=r[e.type]||e.type})}catch(t){if("TypeError"!==t.name)throw t;e.forEach(function(t,i){e.set(i,Object.assign({},t,{type:r[t.type]||t.type}))})}return e}).then(s,o)}}}};e.i={pL:n.pL,lL:n.lL,aL:n.aL,cL:r(128)}},function(e,t,r){"use strict";var i=r(17).log,n=r(17).Wu;e.i=function(){var e=function(e){return{name:{rJ:"NotAllowedError",FY:"NotAllowedError"}[e.name]||e.name,message:{"The operation is insecure.":"The request is not allowed by the user agent or the platform in the current context."}[e.message]||e.message,BY:e.BY,toString:function(){return this.name+(this.message&&": ")+this.message}}},t=function(t,r,s){var o=function(e){if("object"!=typeof e||e.iJ)return e;var t=[];return Object.keys(e).forEach(function(r){if("require"!==r&&"advanced"!==r&&"mediaSource"!==r){var i=e[r]="object"==typeof e[r]?e[r]:{AY:e[r]};if(void 0===i.min&&void 0===i.max&&void 0===i.OY||t.push(r),void 0!==i.OY&&("number"==typeof i.OY?i.min=i.max=i.OY:e[r]=i.OY,delete i.OY),void 0!==i.AY){e.NY=e.NY||[];var n={};"number"==typeof i.AY?n[r]={min:i.AY,max:i.AY}:n[r]=i.AY,e.NY.push(n),delete i.AY,Object.keys(i).length||delete e[r]}}}),t.length&&(e.iJ=t),e};return t=JSON.parse(JSON.stringify(t)),n.version<38&&(i("spec: "+JSON.stringify(t)),t.HR&&(t.HR=o(t.HR)),t.video&&(t.video=o(t.video)),i("ff37: "+JSON.stringify(t))),navigator.mozGetUserMedia(t,r,function(t){s(e(t))})},r=function(e){return new Promise(function(r,i){t(e,r,i)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:r,addEventListener:function(){},removeEventListener:function(){}}),navigator.mediaDevices.LY=navigator.mediaDevices.LY||function(){return new Promise(function(e){e([{kind:"audioinput",MY:"default",label:"",xY:""},{kind:"videoinput",MY:"default",label:"",xY:""}])})},n.version<41){var s=navigator.mediaDevices.LY.bind(navigator.mediaDevices);navigator.mediaDevices.LY=function(){return s().then(void 0,function(e){if("NotFoundError"===e.name)return[];throw e})}}if(n.version<49){var o=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(t){return o(t).then(function(e){if(t.HR&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach(function(e){e.stop()}),new DOMException("The object can not be found here.","NotFoundError");return e},function(t){return Promise.reject(e(t))})}}navigator.getUserMedia=function(e,r,i){if(n.version<44)return t(e,r,i);console.warn("navigator.getUserMedia has been replaced by navigator.mediaDevices.getUserMedia"),navigator.mediaDevices.getUserMedia(e).then(r,i)}}},function(e,t,r){"use strict";var i={cL:function(){navigator.getUserMedia||(navigator.webkitGetUserMedia?navigator.getUserMedia=navigator.webkitGetUserMedia.bind(navigator):navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&(navigator.getUserMedia=function(e,t,r){navigator.mediaDevices.getUserMedia(e).then(t,r)}.bind(navigator)))}};e.i={cL:i.cL}},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20);!function(e){!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(n.HiveComm.Options.Tp);e.fL=t}(e.Options||(e.Options={}))}(t.HiveComm||(t.HiveComm={}))},function(e,t,r){"use strict";var i=function(){function e(e,t,r){this.isLive=e,this.protocol=t,this.IM=r}return e.prototype.uB=function(){var e=new hive.snapshots.StreamInfo;return e.streamType=this.isLive?StreamType.LIVE:StreamType.kK,e.streamProtocol=this.protocol,e.url=this.IM,e},e}();t.AL=i},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(4),s=r(55),o=r(44).Pp,a=r(0),h=r(133),c=r(73),u=r(19),l=r(56),p=r(198),d=r(26),f=r(18),g=r(21),E=r(54),v=r(1),y=r(45),T=p.HiveComm.Options,m=d.HiveComm.HiveTechError,I=d.HiveComm.vE,S=function(e){function t(r,i,n){var s=e.call(this,r,i)||this;return s.options_=new T.nJ,void 0!=i[t.EL]&&g.Sp(i[t.EL],s.options_),s.UQ=n,s}return i(t,e),t.prototype.getName=function(){return t.EL},t.prototype.getVersion=function(){return this.gL.getPluginVersion()},t.prototype.vL=function(){return!0},t.prototype.yL=function(){return c.lb.Api?this.sJ()&&this.XH()?n.resolve(!0):n.reject(new m(I.pE,"WebRTC DataChannels not supported by browser")):n.reject(new m(I.pE,"Not included in the page"))},t.prototype.initSession=function(e,t){var r=this;return this.yL().then(function(){var i=t.ticket;r._L();var n=i.NN();0===n.indexOf("//")&&(n=location.protocol+n);var s=r.TL(e,i,n,t);return E.zu.registerTech(r,s.id),E.zu.registerComm(r.gL,s.id),f.HiveRequestFactory.registerTech(s.id,r.getName()),window&&window.activateXHRInterceptor&&window.activateXHRInterceptor(r.gL.loggerLevel()>y.TN.pN.info),s})},t.prototype.isActive=function(e,t){var r=t.manifest.toLowerCase(),i=e.toLowerCase(),n=r.indexOf(".ism/manifest");if(n>-1){var s=r.substring(0,n);if(i.indexOf(s)>-1)return i.indexOf(".ism/manifest(format=mpd-time-csf)")>-1?this.oJ?(t.ticket.SourceURL=e,!0):this.aJ(t,"The player does not use HiveRequest, downgrading to StatsJS"):this.aJ(t,"Protocol not supported by HiveJS tech, downgrading to StatsJS")}else if(i===r)return!!this.oJ||this.aJ(t,"The player does not use HiveRequest, downgrading to StatsJS");return!1},t.prototype.ol=function(t,r){window&&window.deactivateXHRInterceptor&&window.deactivateXHRInterceptor(),e.prototype.ol.call(this,t,r);var i=c.lb.Api();r?(f.HiveRequestFactory.clearSession(t.id),i&&(i.nl(t.id,u.Ml.STOP),i.hJ())):i&&i.nl(t.id,u.Ml.IDLE)},t.prototype.aJ=function(e,t){return e.tech=this.UQ,f.HiveRequestFactory.registerTech(e.id,l.StatsJS.EL),this.oJ&&this.oJ.resolve(),this.oJ=void 0,this.gL.logger().warn("[HiveJS] "+t),this.onError(new m(I.fE,t)),window&&window.deactivateXHRInterceptor&&window.deactivateXHRInterceptor(),!0},t.prototype.oL=function(e){this.oJ=e},t.prototype.onActiveSession=function(e){var t=this;a.Framework.X().apply(new h.cJ(!0));var r=c.lb.Api();if(this.uJ()&&r.lJ(!0),r.start(e.rl,!1).then(function(i){if(t._L(),t.PL=e.rl,t.PL.Ql(t.options_.renderStatsCallback),t.PL.Vl(c.lb.sp(),c.lb.getVersion()),t.PL.Bl.init(t.PL.Ul,e.ticket.sessionId),t.gL.options().testId&&t.PL.Ul.NL(t.gL.options().testId),e.authenticationToken){var n=r.pJ(e.ticket.sessionId);n&&n.fJ.dJ.UM(e.authenticationToken)}t.oJ&&r.request(t.oJ,e.rl.ticket.sessionId),t.PL.Hl.Xu(e.ticket.sessionId,t.gL.getPlayerSource(),200);var s=t.gL.flushTechEvents();s&&s.length>0&&t.PL.Hl.Cd(s),t.gL.updatePlayerInfo(t.PL)}),void 0!=this.options().onActiveSession)try{this.options().onActiveSession(e.toHiveSession())}catch(e){v.ErrorMonitor.ve().logError("exception in user-defined onActiveSession callback","[HiveJS]",e)}},t.prototype.nl=function(e,t){},t.prototype.TL=function(e,t,r,i){var n=new f.cl(e,t,r,i);return n.ML=!0,n.id=n.ticket.sessionId,n},t.prototype.bL=function(){},t.prototype.uJ=function(){var e=new o;return e.Ad(navigator.userAgent),"Android"==e.Od().name},t.prototype.sJ=function(){return"safari"!=s.Wu.Qu},t.prototype.XH=function(){try{return null!=s.Vu&&null!=s.hL&&"function"==typeof new RTCPeerConnection(null,null).createDataChannel}catch(e){return!1}},t}(l.StatsJS);S.EL="HiveJS",t.HiveJS=S},function(e,t,r){"use strict";var i=r(40),n=r(0),s=r(45),o=r(8),a=r(19),h=r(76),c=r(77),u=r(79),l=r(75),p=r(22),d=r(15),f=r(134),g=r(137),E=r(138),v=r(88),y=r(155),T=r(156),m=r(157),I=r(158),S=r(159),R=r(95),w=r(172),b=r(173),C=r(174),_=r(49),P=r(25),A=r(175),O=r(179),N=r(180),D=r(181),k=r(182),L=r(184),M=r(185),F=r(186),U=r(187),B=r(80),H=r(188),x=r(189),q=r(191),G=r(6),V=r(192),j=G.he.vh,Q=G.he.yh,K=G.he.Th,Y=G.he.Ih;if(Q)var W=r(193).gJ,z=r(195).EJ;if(K)var J=r(92).WG;if(j)var X=r(196).vJ;if(Y)var Z=r(81).CH;else var $=r(83).nx;var ee=function(){function e(e){this.yJ=!1,e&&(this.yJ=e)}return e.prototype.apply=function(e){this.yJ?Y&&e.bind(new i.ZA(o.pc.sc,Z,i.$A.sO)):(e.bind(new i.ZA(o.pc.hc,a.lp,i.$A.sO)),e.bind(new i.ZA(o.pc.G,h.qB,i.$A.sO)),e.bind(new i.ZA(o.pc.nc,c.WB,i.$A.sO)),e.bind(new i.ZA(o.pc.M,u.vH,i.$A.sO)),e.bind(new i.ZA(n.Framework.V.R,s.TN.yN,i.$A.sO)),e.bind(new i.ZA(o.pc.ic,l.Stats.ql,i.$A.pO)),e.bind(new i.ZA(o.pc.uc,p.Gl.Bd,i.$A.pO)),e.bind(new i.ZA(o.pc.lc,p.Gl.ql,i.$A.pO)),Y?e.bind(new i.ZA(o.pc.sc,Z,i.$A.sO)):e.bind(new i.ZA(o.pc.sc,$,i.$A.sO))),e.bind(new i.ZA(d.qu.lu,V.TJ,i.$A.pO)),e.bind(new i.ZA(o.pc.oc,B.IH,i.$A.sO)),e.bind(new i.ZA(d.qu.Fu,F.mJ,i.$A.sO)),e.bind(new i.ZA(d.qu._u,f.sh,i.$A.sO)),e.bind(new i.ZA(d.qu.Ru,g.IJ,i.$A.pO)),e.bind(new i.ZA(d.qu.Pu,E.SJ,i.$A.pO)),e.bind(new i.ZA(d.qu.yu,y.Ra,i.$A.pO)),e.bind(new i.ZA(d.qu.Tu,v.Yq,i.$A.pO)),j&&e.bind(new i.ZA(d.qu.mu,X,i.$A.pO)),e.bind(new i.ZA(d.qu.bu,T.RJ,i.$A.pO)),"undefined"!=typeof HiveOriginalXMLHttpRequest?e.bind(new i.ZA(n.Framework.V.H,HiveOriginalXMLHttpRequest)):e.bind(new i.ZA(n.Framework.V.H,XMLHttpRequest)),e.bind(new i.ZA(d.qu.Mu,M.wJ,i.$A.sO)),e.bind(new i.ZA(d.qu.Du,m.bJ,i.$A.pO)),e.bind(new i.ZA(n.Framework.V.F,A.CJ,i.$A.sO)),e.bind(new i.ZA(d.qu.q,O._J,i.$A.sO)),e.bind(new i.ZA(d.qu.Su,U.PJ,i.$A.pO)),e.bind(new i.ZA(d.qu.Iu,I.AJ,i.$A.pO)),e.bind(new i.ZA(d.qu.pu,S.Qa,i.$A.pO)),e.bind(new i.ZA(d.qu.du,R.iQ,i.$A.pO)),e.bind(new i.ZA(d.qu.fu,x.OJ,i.$A.pO)),e.bind(new i.ZA(d.qu.gu,x.NJ,i.$A.pO)),e.bind(new i.ZA(d.qu.Eu,q.DJ,i.$A.pO)),e.bind(new i.ZA(d.qu.vu,q.kJ,i.$A.pO)),e.bind(new i.ZA(d.qu.xu,H.Vo,i.$A.pO)),e.bind(new i.ZA(d.qu.Cu,w.LJ,i.$A.pO)),e.bind(new i.ZA(d.qu.wu,b.MJ,i.$A.pO)),e.bind(new i.ZA(d.qu.ku,C.FJ,i.$A.pO)),e.bind(new i.ZA(d.qu.Nu,k.UJ,i.$A.pO)),e.bind(new i.ZA(d.qu.Au,_.Ak,i.$A.pO)),e.bind(new i.ZA(d.qu.Ou,L.BJ,i.$A.pO)),e.bind(new i.ZA(n.Framework.V.U,P.Rf.Fa,i.$A.pO)),e.bind(new i.ZA(d.qu.Lu,N.ya,i.$A.pO)),Q&&(e.bind(new i.ZA(d.qu.Bu,W,i.$A.pO)),e.bind(new i.ZA(d.qu.Uu,z,i.$A.pO))),K&&e.bind(new i.ZA(d.qu.Th,J,i.$A.pO)),e.bind(new i.ZA(d.qu.Hu,D.HJ,i.$A.pO))},e}();t.cJ=ee},function(e,t,r){"use strict";var i=r(4),n=r(28),s=n.cg,o=r(0),a=r(43),h=r(15),c=r(5),u=r(19),l=r(3),p=r(135),d=r(47),f=r(8),g=r(136),E=r(6),v=r(1),y=r(2),T=E.he.yh,m=E.he.Th,I=E.he.mh,S=function(){function e(e){this.state=u.Ml.Ll,this.requestTimeout=-1;try{this.logger=o.Framework.resolve(o.Framework.V.R).log(e.ticket.sessionId),this.loggerId="[SWARM] ",this.Ng=o.Framework.resolve(o.Framework.V.F),this.sessionId=e.ticket.sessionId,this.rl=e,this.ED=o.Framework.resolve(h.qu.Ru),this.sC=o.Framework.resolve(h.qu.yu),this.oG=o.Framework.resolve(h.qu.pu),this.xJ=o.Framework.resolve(h.qu.bu),this.gD=o.Framework.resolve(h.qu.Iu),this.TD=o.Framework.resolve(h.qu.du),this.uploadScore=o.Framework.resolve(h.qu.ku),this.qJ=o.Framework.resolve(h.qu.wu),this.GJ=o.Framework.resolve(h.qu.Du),this.vD=o.Framework.resolve(h.qu.Cu),this.fJ=o.Framework.resolve(h.qu.Pu),this.WM=o.Framework.resolve(h.qu.Lu),this.yD=o.Framework.resolve(h.qu.Hu),this.zM=o.Framework.resolve(h.qu.Au),this.mD=o.Framework.resolve(h.qu.Ou),this.ID=o.Framework.resolve(h.qu.Su),this.zV=o.Framework.resolve(h.qu.xu),this.YM=o.Framework.resolve(h.qu.lu),(T||o.Framework.C()&&d.$N.JN)&&(this.VJ=o.Framework.resolve(h.qu.Uu),this.jJ=o.Framework.resolve(h.qu.Bu)),(m||o.Framework.C()&&d.$N.XN)&&(this.QJ=o.Framework.resolve(h.qu.Th)),this.swarmId=this.KJ(e.ticket.kd()),this.YM.init(this),this.xJ.init(this),this.ID.init(this),this.zV.init(this),this.TD.init(this),this.qJ.init(this),this.GJ.init(this),this.vD.init(this),this.fJ.init(this),this.ED.init(this),this.oG.init(this),this.zM.init(this),this.mD.init(this),this.WM.init(this),(m||o.Framework.C()&&d.$N.XN)&&this.QJ.init(this),(T||o.Framework.C()&&d.$N.JN)&&this.jJ.init(this)}catch(e){throw v.ErrorMonitor.ve().logError("Error constructing swarm object",this.loggerId,y.hs.rs.Zn,e),new Error(e)}}return e.prototype.init=function(e,t,r){try{I?this.YJ(!1):r?this.YJ(!1):this.YJ(!0),this.yD.setReportingGuid(this.rl.identity.rp()),this.yD.WJ(r),this.sC.init(c.hh.Ra.Ta,c.hh.Ra.ma);var i=this.fJ.RD(e,t);this.yD.setContextId(this.fJ.dJ.getContextId());var n=new p.zJ(i);this.rl.OL=n,this.rl.Ul.OL=n,this.GJ.start(this.fJ,this.oG),(T||o.Framework.C()&&d.$N.JN)&&this.jJ.JJ(this.oG);var s=[this.oG,this.TD,this.GJ,this.rl.Ul,this.rl.Hl,this.zV];(T||o.Framework.C()&&d.$N.JN)&&s.push(this.jJ),(m||o.Framework.C()&&d.$N.XN)&&s.push(this.QJ),(a=this.Ng).start.apply(a,[e.sessionId].concat(s)),this.rl.Ul.DB(this.TD),this.rl.Ul.rB(this.yD),this.yD.XJ(e)}catch(e){throw v.ErrorMonitor.ve().logError("Error initializing swarm object",this.loggerId,y.hs.rs.$n,e),new Error(e)}var a},e.prototype.YJ=function(e){e&&"undefined"!=typeof navigator&&navigator.hardwareConcurrency?(this.yD.ZJ(navigator.hardwareConcurrency),this.yD.$J(navigator.hardwareConcurrency)):(this.yD.ZJ(1),this.yD.$J(1)),this.logger.debug(this.loggerId+"My score "+this.yD.QG())},e.prototype.KJ=function(e){return s.oT(e).toString(s.Uy.By)},e.prototype.request=function(e){this.eX(),this.ED.request(e)},e.prototype.tX=function(){if(this.state===u.Ml.STOP)return void this.logger.debug("Ignoring changing state from Stop to Idle");this.oG.stop(),this.TD.stop(),this.mD.rX(),this.mD.iX(),this.GJ.nX(),this.jJ&&this.jJ.sX(),this.rl.nl(u.Ml.IDLE),this.sC.Qq(),this.ID.oX(),this.ED.aX(),this.YM.hX(),o.Framework.clearTimeout(this.requestTimeout)},e.prototype.nl=function(e,t){try{if(this.state!=e){switch(this.logger.info("Switching state "+u.Ml[this.state]+" -> "+u.Ml[e]),e){case u.Ml.STOP:this.tX(),this.Ng.stop(t);break;case u.Ml.IDLE:this.tX();break;case u.Ml.Ll:this.oG.start(),this.TD.start(this.fJ.dJ),this.mD.cX(),this.GJ.uX(),this.jJ&&this.jJ.lX(),this.rl.nl(u.Ml.Ll),this.YM.pX()}this.state=e}}catch(e){v.ErrorMonitor.ve().logError("Error changing peer status",this.loggerId,y.hs.rs.es,e)}},e.prototype.eX=function(){var e=this;try{o.Framework.clearTimeout(this.requestTimeout),this.nl(u.Ml.Ll),this.requestTimeout=o.Framework.setTimeout(function(){e.nl(u.Ml.IDLE)},c.hh.sh.nh)}catch(e){v.ErrorMonitor.ve().logError("Error requesting timeout",this.loggerId,y.hs.rs.Qn,e)}},e}();t.dX=S;var R=function(){function e(){this.Ag=new a.Counter,this.fX=!1,this.zl=new l,this.gX=new l,this.EX=!1,this.vX=!1,this.yX=o.Framework.resolve(h.qu.Mu),this.TX=o.Framework.resolve(h.qu.Fu),this.ud=o.Framework.resolve(f.pc.sc),this.mX=!1}return e.prototype.start=function(e,t){this.logger=o.Framework.resolve(o.Framework.V.R).log(e.ticket.sessionId);var r=e.ticket;this.TX.init(this,e);var n=r.sessionId;if(this.zl.has(n))this.logger.warn("SESSION ALREADY ACTIVE "+n);else{g.IX.fd(e.xl.client);var s=new S(e);s.init(r,t,this.mX),this.ud.getConnectivityInfo().then(function(e){var t=e.getNetworkChanged(),r=t.getPrivateIp();r&&s.yD.DH(r)}).done(),e.Ul.NB(this.ud),this.logger.info("PEER CONTEXT STARTED"),this.zl.set(n,s),this.gX.set(s.swarmId,n)}return 1!=this.zl.length&&!this.vX||o.Framework.C()||(this.yX.init(),this.vX=!1),i.resolve(r.SourceURL)},e.prototype.hJ=function(){this.vX=!0},e.prototype.mg=function(e){if(this.gX.has(e)){var t=this.gX.get(e);return this.zl.get(t)}return null},e.prototype.pJ=function(e){return this.zl.get(e)},e.prototype.SX=function(e){return this.zl.has(e)?this.zl.get(e).ED:null},e.prototype.request=function(e,t){this.pJ(t).request(e)},e.prototype.nl=function(e,t){this.pJ(e).nl(t,e)},e.prototype.abort=function(e,t){this.SX(t).abort(e)},e.prototype.lJ=function(e){this.mX=e},e}();t.sh=R},function(e,t,r){"use strict";var i=function(){function e(e){this.wD=e}return e.prototype.uB=function(){var e=new hive.snapshots.StreamInfo;return e.streamType=this.wD.isLive()?StreamType.LIVE:StreamType.kK,e.streamProtocol=this.wD.getStreamProtocol(),e.url=this.wD.uM(),e},e}();t.zJ=i},function(e,t,r){"use strict";var i=r(22),n=i.Gl.rd,s=r(0),o=r(23),a=function(){function e(){}return e.fd=function(e){this.client=e},e.RX=function(e,t,r,i,a){var h=new n;h.app=e,h.guid=i,h.createdAt=s.Framework.time(),h.name=r,h.tags=t,h.data=JSON.parse(a);var c=new o.Jd(Services.Xd,2,JSON.stringify(h));this.client&&this.client.zd().send(c)},e}();t.IX=a},function(e,t,r){"use strict";var i=r(3),n=r(4),s=r(24),o=r(7),a=r(5),h=r(0),c=r(9),u=r(15),l=r(43),p=r(1),d=r(2),f=function(){function e(){this.wX=new i,this.bX=!1,this.CX=0,this.loggerId="[HiveCache] ",this._X=5,this.TX=h.Framework.resolve(u.qu.Fu),this.PX=new l.RO}return e.prototype.init=function(e){this.logger=h.Framework.resolve(h.Framework.V.R).log(e.sessionId),this.gD=e.gD,this.sC=e.sC,this.TD=e.TD,this.Ul=e.rl.Ul,this.sessionId=e.rl.ticket.sessionId,this.xJ=e.xJ,this.vD=e.vD,this.AX=e.fJ,this.yD=e.yD,this.ID=e.ID,this.YM=e.YM,this.Ul.eB(this.PX)},e.prototype.request=function(e){try{var t=e.url;this.logger.info("HIVE REQ "+t),e.Bf=h.Framework.time();var r=this.AX.OX(e),i=r.EM(e.url);this.YM.NX(i),this.$D(e,i,r,s.bf.Tf)}catch(e){p.ErrorMonitor.ve().logError("Error on player request",this.loggerId,d.hs.Wn.Yn,e)}},e.prototype.$D=function(e,t,r,i){var n=this;if(t.ig()){if(t.Xf()==c.vc.fc){var a=r.PM(t,i);if(a.hF)return this.logger.debug("DO NOT CONTINUE WITH THE REQUEST "+t.Zf()+". ALREADY REQUESTED  "+a.rF+" PENDING REQUEST "+a.aF),null;if(a.aF&&i==s.bf.Tf){var h=this.DX(e,t,r,i);return h.length>0?(h.forEach(function(t){var r=n.wX.get(t);n.wX.set(e.id,r),n.wX.delete(t)}),null):(this.logger.info("PREFETCH UPGRADE FAILED. THIS SHOULD NOT HAPPEN. CHECK FOR MULTIPLE PLAYER REQUESTS FOR THE SAME FRAGMENT"),this.kX(e,t,r,i))}return this.kX(e,t,r,i)}return this.kX(e,t,r,i)}var u=o.rc.Oh.next(),l=new s.hg(e,u,i,t,r);return this.wX.set(e.id,l),l.type=s.bf.mf,this.LX(l),l},e.prototype.kX=function(e,t,r,i){var n=this,a=o.rc.Oh.next(),h=new s.hg(e,a,i,t,r);if(this.wX.set(e.id,h),t.Xf()==c.vc.fc&&(r.uF(h),i!==s.bf.If&&i!==s.bf.wf)){var u=t.bitrate,l=this.yD.MX();0!=u&&(this.yD.FX(u),u!=l&&(this.bX=!0,this.CX=0),this.bX&&this.CX++,this.CX==this._X&&(this.TD.Kj(),this.bX=!1,this.CX=0))}return this.UX(t.Zf()).then(function(e){null!=e?(n.YM.BX(h,e),n.HX(h,e),r.lF(h.Zf(),h.$f()),r.gF(t.bitrate)):(n.xX(t,h),h.Xf()==c.vc.fc&&(r.dF(h),h.type==s.bf.Tf&&n.PX.add(0)))}),h},e.prototype.DX=function(e,t,r,i){return r.cF(e,t,i)},e.prototype.UX=function(e){return this.sC.get(e)},e.prototype.xX=function(e,t){this.gD.contains(e.Zf())?(this.logger.debug("OBJ IDX CONTAINS "+t.Zf()),t.Jf()==s.bf.If&&(t.type=s.bf.wf),this.Cf(t)):t.Jf()!=s.bf.wf?this.LX(t):(p.ErrorMonitor.ve().logError("P2P PREFETCH FAILED BECAUSE OBJECT INDEX DOES NOT CONTAIN REQUEST ENTITY",this.loggerId,{P_:t.Zf()}),t.Wf.lF(t.Zf(),t.$f()))},e.prototype.aX=function(){var e=this;this.wX.forEach(function(t){return e.abort(t.Kf)})},e.prototype.abort=function(e){if(this.wX.has(e.id)){var t=this.wX.get(e.id),r=t.$f();this.logger.debug("REQUEST "+r+" ABORTED "),this.vD.Ys(r)?this.vD.qX(r):this.xJ.Ys(r)&&this.xJ.qX(r),this.wX.delete(e.id)}},e.prototype.Cf=function(e){e.type==s.bf.Tf&&(e.type=s.bf.Rf),e.type==s.bf.wf&&(e.Vf=!0),this.vD.request(e)},e.prototype.GX=function(e){if(0!=e.Qf&&(e.qf.Af=e.Qf,this.logger.info("ALREADY DOWNLOADED "+e.qf.Af+" BYTES"),e.qf.Of=e.Qf),!a.hh.K.Na&&e.Qf&&(e.qf.Af=0),this.YM.VX(e),e.type!=s.bf.wf)e.type=s.bf.Sf,this.LX(e);else if(e.Xf()==c.vc.fc){e.Wf.pF(e.Zf()),e.Wf.lF(e.Zf(),e.$f());var t=e.zf;t.bitrate&&e.Wf.gF(t.bitrate)}},e.prototype.jX=function(e){var t=this;this.logger.info("SUCCESS FROM P2P FOR "+e.eg()+" [REQ "+e.Yf+"] ["+s.bf[e.type]+"] AFTER "+e.og()+" [bw:"+e.ag().Gh()+"]"),this.QX(e),this.KX(e,this.XM(e.type)),this.ID.YX(e);var r=this.xJ.WX().Hh();this.YM.zX(e,r),this.JX(e).then(function(){e.Wf.CM(e),t.XX()}).finally(function(){t.XM(e.type)&&t.ZX(e),t.wX.delete(e.Kf.id)})},e.prototype.LX=function(e){this.YM.$X(e),this.xJ.request(e)},e.prototype.eZ=function(e){this.XX();var t=this.xJ.WX().Hh();this.YM.tZ(e,t),e.Xf()==c.vc.fc&&(e.Wf.pF(e.Zf()),e.Wf.lF(e.Zf(),e.$f())),this.rZ(e)},e.prototype.iZ=function(e){var t=this;this.QX(e),this.KX(e,this.XM(e.type)),e.type==s.bf.Sf&&this.logger.debug("CDN COMPENSATION TIME "+(e.qf.Uf-e.Kf.Bf)+" / "+(e.qf.Uf-e.qf.Lf)+" P2P TIME "+(e.qf.Ff-e.qf.Mf)),-1==[c.vc.gc,c.vc.Ec].indexOf(e.Xf())&&this.ID.YX(e);var r=this.xJ.WX().Hh();this.YM.nZ(e,r),this.JX(e).then(function(){e.Xf()==c.vc.gc&&e.Wf.SM(e),-1==[c.vc.gc,c.vc.Ec].indexOf(e.Xf())&&e.Wf.CM(e),t.XX()}).catch(function(e){t.logger.error(e)}).finally(function(){t.XM(e.type)&&t.ZX(e),t.wX.delete(e.Kf.id)})},e.prototype.QX=function(e){e.type==s.bf.wf&&(e.qf.p2pAgenTrafficSuccessQt=e.qf.Af),e.type==s.bf.If&&(e.qf.kf=e.qf.Df,e.Gf&&(e.qf.srcOtherRespQt=e.qf.Df)),e.qf.Pf=e.qf.Df+e.qf.Af,e.Kf.total=e.qf.Pf},e.prototype.KX=function(e,t){if(this.sZ(e),t){var r=o.rc.createEvent(ProgressEvent,"progress",{lengthComputable:!0,total:e.qf.Pf,loaded:e.qf.Pf,currentTarget:e.Kf});e.Kf.dispatchEvent(r),e.zf.O_()||(e.Kf.response=e.RM,e.Kf.responseText=e.RM)}},e.prototype.ZX=function(e){var t=e.Kf;this.logger.info("RESPOND TO THE PLAYER "+e.Zf()+" SIZE "+(h.Framework.C()?t.total:e.jf.byteLength)),t.status=200,t.readyState=4,"string"==typeof t.response&&"arraybuffer"===t.responseType&&(t.response=o.rc.tc(t.response)),"text"!=t.responseType&&""!=t.responseType&&delete t.responseText,e.zf.O_()&&(t.response=h.Framework.C()?null:o.rc.Qh(e.jf));var r=o.rc.createEvent(Event,"readystatechange",{currentTarget:t}),i=o.rc.createEvent(ProgressEvent,"load",{bubbles:!1,cancelable:!1,lengthComputable:!1,total:e.zf.O_()?e.jf.byteLength:e.RM.length,currentTarget:t}),n=o.rc.createEvent(ProgressEvent,"loadend",{bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:t.total,total:0,currentTarget:t});t.dispatchEvent(r),t.dispatchEvent(i),t.dispatchEvent(n)},e.prototype.rZ=function(e){this.wX.delete(e.Kf.id);var t=e.Kf,r={bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:t.total,total:0,currentTarget:t};e.xhr.status&&e.xhr.status>0?(t.status=e.xhr.status,t.responseHeaders=e.responseHeaders):t.status=404,t.readyState=4,t.dispatchEvent(o.rc.createEvent(Event,"readystatechange",r)),t.dispatchEvent(o.rc.createEvent(ProgressEvent,"load",r)),t.dispatchEvent(o.rc.createEvent(ProgressEvent,"loadend",r))},e.prototype.JX=function(e){var t=this;return e.zf.ig()?this.sC.put(e).then(function(r){r&&t.TD.oZ(e.zf,e.qf.Pf,e.xq)}):n.resolve(!0)},e.prototype.HX=function(e,t){var r=this;e.jf=t.data,e.responseHeaders=t.headers,e.qq=t.qq,e.qf=t.qf;var i=e.Wf.dM().lx(t.length);this.logger.info("SCHEDULE DELIVERY OF "+e.Zf()+" IN "+i+" SIZE "+(h.Framework.C()?t.length:e.jf.byteLength)+" BYTES"),h.Framework.setTimeout(function(){r.aZ(e)},i)},e.prototype.aZ=function(e){this.logger.debug("DELIVERY OF "+e.Zf()),this.KX(e,!0),this.wX.delete(e.Kf.id);var t=e.Kf.Bf-e.qf.Uf;this.logger.info("FRAGMENT PREFETCHED "+t+" MSECS BEFORE PLAYER REQUEST"),t>0&&e.Xf()==c.vc.fc&&this.PX.add(t);var r=0;r=e.qf.Mf>0?e.Kf.Bf-e.qf.Mf:e.Kf.Bf-e.qf.Ff,this.logger.info("FRAGMENT REQUESTED "+r+" MSECS BEFORE PLAYER REQUEST"),this.ZX(e)},e.prototype.XM=function(e){return e!=s.bf.wf&&e!=s.bf.If},e.prototype.sZ=function(e){if(e.type!==s.bf.Sf)e.responseHeaders=e.Kf.responseHeaders=e.responseHeaders;else{var t="\nContent-Range: bytes=0-"+(e.size-1)+"/"+e.size+"\n";t+="Content-Length: "+e.size+"\n",e.responseHeaders=e.Kf.responseHeaders=t}null!=e.responseHeaders&&-1!=e.responseHeaders.indexOf("Access-Control-Allow-Origin")||(e.responseHeaders+="\nAccess-Control-Allow-Origin:*")},e.prototype.XX=function(){h.Framework.C()||this.TX.render()},e}();t.IJ=f},function(e,t,r){"use strict";var i=r(57),n=r(87),s=r(0),o=function(){function e(){this.TD=null,this.Ng=s.Framework.resolve(s.Framework.V.F)}return e.prototype.init=function(e){this.logger=s.Framework.resolve(s.Framework.V.R).log(e.sessionId),this.sG=e,this.TD=e.TD},e.prototype.RD=function(e,t){var r=null,s=e._N();return n.bq.rM(s)?this.dJ=r=new n.bq.Dq(e,t,this.sG):i.DASH.rM(s)?this.dJ=r=new i.DASH.VM(e,this.sG):this.logger.warn("COULD NOT FIND A CONTEXT FOR "+s),null!=r&&this.hZ(this.dJ),r},e.prototype.hZ=function(e){var t=this;null!=this.TD?this.TD.stop().then(function(r){t.TD.start(e)}):this.TD.start(e)},e.prototype.OX=function(e){if(null==this.dJ)this.logger.warn("FIRST REQUEST, COULD NOT FIND RIGHT CONTEXT "+e.url);else if(!this.dJ.mM(e))return this.logger.warn("REQUEST DOES NOT BELONG TO THE CURRENT CONTEXT "+e.url),null;return this.dJ},e}();t.SJ=o},function(e,t,r){"use strict";function i(e,t,r,n){if(!(this instanceof i))return new i(e,t,r,n);this.ls=t||Object.cs,this.Ac=r||Object.Oc,this.ds=n||Function.us,this.root=null,this.length=0,this.addEach(e)}function n(e){this.value=e,this.left=null,this.right=null,this.length=1}function s(e,t,r){if(this.set=e,this.Ok=null,this.end=r,t){var i=this.set.cZ(t);i&&(this.set.uZ(i.value),this.Ok=i.lZ())}}e.i=i;var o=(r(11),r(12)),a=r(39),h=r(13),c=r(38),u=r(69);i.pZ=i,Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.addEach(i.prototype,h.prototype),Object.addEach(i.prototype,c.prototype),i.prototype.mF=!0,i.prototype.Es=function(e){return new this.constructor(e,this.ls,this.Ac,this.ds)},i.prototype.has=function(e,t){if(t)throw new Error("SortedSet#has does not support second argument: equals");return!!this.root&&(this.uZ(e),this.ls(e,this.root.value))},i.prototype.get=function(e,t){if(t)throw new Error("SortedSet#get does not support second argument: equals");return this.root&&(this.uZ(e),this.ls(e,this.root.value))?this.root.value:this.ds(e)},i.prototype.add=function(e){var t=new this.Node(e);if(!this.root)return this.Mk&&this.QA([e],[],0),this.root=t,this.length++,this.Mk&&this.GA([e],[],0),!0;if(this.uZ(e),!this.ls(e,this.root.value)){var r=this.Ac(e,this.root.value);if(0===r)throw new Error("SortedSet cannot contain incomparable but inequal values: "+e+" and "+this.root.value);return this.Mk&&this.QA([e],[],this.root.index),r<0?(t.right=this.root,t.left=this.root.left,this.root.left=null,this.root.dZ()):(t.left=this.root,t.right=this.root.right,this.root.right=null,this.root.dZ()),t.dZ(),this.root=t,this.length++,this.Mk&&this.GA([e],[],this.root.index),!0}return!1},i.prototype.delete=function(e,t){if(t)throw new Error("SortedSet#delete does not support second argument: equals");if(this.root&&(this.uZ(e),this.ls(e,this.root.value))){var r=this.root.index;if(this.Mk&&this.QA([],[e],r),this.root.left){var i=this.root.right;this.root=this.root.left,this.uZ(e),this.root.right=i}else this.root=this.root.right;return this.length--,this.root&&this.root.dZ(),this.Mk&&this.GA([],[e],r),!0}return!1},i.prototype.indexOf=function(e,t){if(t)throw new Error("SortedSet#indexOf does not support second argument: startIndex");return this.root&&(this.uZ(e),this.ls(e,this.root.value))?this.root.index:-1},i.prototype.find=function(e,t,r){if(t)throw new Error("SortedSet#find does not support second argument: equals");if(r)throw new Error("SortedSet#find does not support third argument: index");if(this.root&&(this.uZ(e),this.ls(e,this.root.value)))return this.root},i.prototype.fZ=function(e){if(this.root){for(e=e||this.root;e.right;)e=e.right;return e}},i.prototype.gZ=function(e){if(this.root){for(e=e||this.root;e.left;)e=e.left;return e}},i.prototype.EZ=function(e){if(this.root)return this.uZ(e),this.Ac(this.root.value,e)>0?this.root.lZ():this.root},i.prototype.vZ=function(e){if(this.root)return this.uZ(e),this.Ac(this.root.value,e)>=0?this.root.lZ():this.root},i.prototype.cZ=function(e){if(this.root)return this.uZ(e),this.Ac(this.root.value,e)>=0?this.root:this.root.yZ()},i.prototype.TZ=function(e){if(this.root)return this.uZ(e),this.Ac(this.root.value,e)<=0?this.root.yZ():this.root},i.prototype.pop=function(){if(this.root){var e=this.fZ();return this.delete(e.value),e.value}},i.prototype.shift=function(){if(this.root){var e=this.gZ();return this.delete(e.value),e.value}},i.prototype.push=function(){this.addEach(arguments)},i.prototype.unshift=function(){this.addEach(arguments)},i.prototype.slice=function(e,t){e=e||0,t=t||this.length,e<0&&(e+=this.length),t<0&&(t+=this.length);var r=[];if(this.root)for(this.mZ(e);this.root.index<t&&(r.push(this.root.value),this.root.right);)this.uZ(this.root.yZ().value);return r},i.prototype.splice=function(e,t){return this.qk(e,t,Array.prototype.slice.call(arguments,2))},i.prototype.qk=function(e,t,r){if(void 0===e&&void 0===t)return[];e=e||0,e<0&&(e+=this.length),void 0===t&&(t=1/0);var i=[];if(this.root){this.mZ(e);for(var n=0;n<t;n++){i.push(this.root.value);var s=this.root.yZ();if(this.delete(this.root.value),!s)break;this.uZ(s.value)}}return this.addEach(r),i},i.prototype.uZ=function(e){var t,r,i,s,o,a;if(this.root){for(t=r=i=new this.Node,a=new this.Node,o=this.root;;){var h=this.Ac(e,o.value);if(h<0){if(!o.left)break;if(this.Ac(e,o.left.value)<0&&(s=o.left,o.left=s.right,o.dZ(),s.right=o,s.dZ(),o=s,!o.left))break;s=new n,s.right=o,s.left=a.left,a.left=s,i.left=o,i.dZ(),i=o,o=o.left}else{if(!(h>0))break;if(!o.right)break;if(this.Ac(e,o.right.value)>0&&(s=o.right,o.right=s.left,o.dZ(),s.left=o,s.dZ(),o=s,!o.right))break;s=new n,s.left=o,s.right=a.right,a.right=s,r.right=o,r.dZ(),r=o,o=o.right}}for(r.right=o.left,r.dZ(),i.left=o.right,i.dZ(),o.left=t.right,o.right=t.left;a.left;)a.left.right.dZ(),a.left=a.left.left;for(;a.right;)a.right.left.dZ(),a.right=a.right.right;o.dZ(),this.root=o}},i.prototype.mZ=function(e){if(this.root){for(var t=this.root,r=this.root.index;r!==e;)if(r>e&&t.left)t=t.left,r-=1+(t.right?t.right.length:0);else{if(!(r<e&&t.right))break;t=t.right,r+=1+(t.left?t.left.length:0)}return this.uZ(t.value),this.root.index===e}return!1},i.prototype.reduce=function(e,t,r){return this.root&&(t=this.root.reduce(e,t,0,r,this)),t},i.prototype.reduceRight=function(e,t,r){return this.root&&(t=this.root.reduceRight(e,t,this.length-1,r,this)),t},i.prototype.min=function(e){var t=this.gZ(e);if(t)return t.value},i.prototype.max=function(e){var t=this.fZ(e);if(t)return t.value},i.prototype.Bc=function(){return this.min()},i.prototype.clear=function(){var e;this.Mk&&(e=this.toArray(),this.QA([],e,0)),this.root=null,this.length=0,this.Mk&&this.GA([],e,0)},i.prototype.Hc=function(e,t){return new this.Iterator(this,e,t)},i.prototype.Iterator=s,i.prototype.summary=function(){return this.root?this.root.summary():"()"},i.prototype.log=function(e,t,r,i){e=e||u.aU,t=t||this.vs,r||(r=console.log,i=console),r=r.bind(i),this.root&&this.root.log(e,t,r,r)},i.prototype.vs=function(e,t,r){t(" "+e.value)},i.IZ=u,i.prototype.Node=n,n.prototype.reduce=function(e,t,r,i,n,s){if(s=s||0,this.left){var o=this.left.length;t=this.left.reduce(e,t,r,i,n,s+1),r+=o}return t=e.call(i,t,this.value,r,n,this,s),r+=1,this.right&&(t=this.right.reduce(e,t,r,i,n,s+1)),t},n.prototype.reduceRight=function(e,t,r,i,n,s){return s=s||0,this.right&&(t=this.right.reduce(e,t,r,i,n,s+1),r-=this.right.length),t=e.call(i,t,this.value,this.value,n,this,s),r-=1,this.left&&(t=this.left.reduce(e,t,r,i,n,s+1)),t},n.prototype.dZ=function(){this.length=1+(this.left?this.left.length:0)+(this.right?this.right.length:0),this.index=this.left?this.left.length:0},n.prototype.SZ=function(){var e=1;if(e+=this.left?this.left.SZ():0,e+=this.right?this.right.SZ():0,this.length!==e)throw new Error("Integrity check failed: "+this.summary());return e},n.prototype.yZ=function(){var e=this;if(e.right){for(e=e.right;e.left;)e=e.left;return e}},n.prototype.lZ=function(){var e=this;if(e.left){for(e=e.left;e.right;)e=e.right;return e}},n.prototype.summary=function(){var e=this.value||"-";return e+=" <"+this.length,this.left||this.right?"("+e+" "+(this.left?this.left.summary():"()")+", "+(this.right?this.right.summary():"()")+")":"("+e+")"},n.prototype.log=function(e,t,r,i){var n,s=this;n=this.left&&this.right?e.WA:this.left?e.tU:this.right?e.rU:e.eU;var o;this.left&&this.left.log(e,t,function(t){o?i(e.oU+" "+t):(o=!0,i(e.iU+e.eU+t))},function(e){i("  "+e)});var a;t(this,function(t){a?r((s.right?e.oU:" ")+t):(a=!0,r(n+t))},function(t){i((s.left?e.oU:" ")+t)});var h;this.right&&this.right.log(e,t,function(t){h?r("  "+t):(h=!0,r(e.nU+e.eU+t))},function(t){r(e.oU+" "+t)})},s.prototype.Gk=null,Object.defineProperty(s.prototype,"_iterationObject",{get:function(){return this.Gk||(this.Gk={done:!1,value:null})}}),s.prototype.next=function(){var e;return e=this.Ok?this.set.TZ(this.Ok.value):this.set.gZ(),e?void 0!==this.end&&this.set.Ac(e.value,this.end)>=0?(this.Vk.done=!0,this.Vk.value=void 0):(this.Ok=e,this.Vk.value=e.value):(this.Vk.done=!0,this.Vk.value=void 0),this.Vk}},function(e,t,r){"use strict";var i=function(){function e(){this.rF=!1,this.aF=!1,this.hF=!1}return e}();t.eF=i},function(e,t,r){"use strict";function i(e,t,r,n){if(!(this instanceof i))return new i(e,t,r,n);Array.isArray(e)?(this.NT=e,e=e.splice(0,e.length)):this.NT=[],this.ls=t||Object.cs,this.Ac=r||Object.Oc,this.ds=n||Function.us,this.length=0,this.addEach(e)}function n(e,t,r){for(var i=0,n=e.length-1;i<=n;){var s=i+n>>1,o=r(t,e[s]);if(o>0)i=s+1;else{if(!(o<0))return s;n=s-1}}return-(i+1)}function s(e,t,r,i){var s=n(e,t,r);if(s<0)return-1;for(;s>0&&i(t,e[s-1]);)s--;return i(t,e[s])?s:-1}function o(e,t,r,i){var s=n(e,t,r);if(s<0)return-1;for(;s<e.length-1&&i(t,e[s+1]);)s++;return i(t,e[s])?s:-1}function a(e,t,r){var i=n(e,t,r);if(i<0)return-i-1;for(var s=e.length-1;i<s&&0===r(t,e[i+1]);)i++;return i}e.i=i;var h=(r(11),r(12)),c=r(13),u=r(38);i.RZ=i,Object.addEach(i.prototype,h.prototype),Object.addEach(i.prototype,c.prototype),Object.addEach(i.prototype,u.prototype),i.prototype.mF=!0,i.prototype.Es=function(e){return new this.constructor(e,this.ls,this.Ac,this.ds)},i.prototype.has=function(e,t){if(t)throw new Error("SortedSet#has does not support second argument: equals");var r=n(this.NT,e,this.Ac);return r>=0&&this.ls(this.NT[r],e)},i.prototype.get=function(e,t){if(t)throw new Error("SortedArray#get does not support second argument: equals");var r=s(this.NT,e,this.Ac,this.ls);return-1!==r?this.NT[r]:this.ds(e)},i.prototype.add=function(e){var t=a(this.NT,e,this.Ac);return this.Mk&&this.QA([e],[],t),this.NT.splice(t,0,e),this.length++,this.Mk&&this.GA([e],[],t),!0},i.prototype.delete=function(e,t){if(t)throw new Error("SortedArray#delete does not support second argument: equals");var r=s(this.NT,e,this.Ac,this.ls);return-1!==r&&(this.Mk&&this.QA([],[e],r),this.NT.splice(r,1),this.length--,this.Mk&&this.GA([],[e],r),!0)},i.prototype.XA=function(e,t){if(t){var r=this.NT.XA(e,t);return this.length-=r,r}var i=s(this.NT,e,this.Ac,this.ls);if(-1!==i){for(var n=i;this.ls(e,this.NT[n]);)n++;var o=this.slice(i,n);return this.Mk&&this.QA([],o,i),this.NT.splice(i,o.length),this.length-=o.length,this.Mk&&this.GA([],o,i),o.length}return 0},i.prototype.indexOf=function(e){return s(this.NT,e,this.Ac,this.ls)},i.prototype.lastIndexOf=function(e){return o(this.NT,e,this.Ac,this.ls)},i.prototype.find=function(e,t,r){if(t)throw new Error("SortedArray#find does not support second argument: equals");if(r)throw new Error("SortedArray#find does not support third argument: index");return s(this.NT,e,this.Ac,this.ls)},i.prototype.Lk=function(e,t,r){if(t)throw new Error("SortedArray#findLast does not support second argument: equals");if(r)throw new Error("SortedArray#findLast does not support third argument: index");return o(this.NT,e,this.Ac,this.ls)},i.prototype.push=function(){this.addEach(arguments)},i.prototype.unshift=function(){this.addEach(arguments)},i.prototype.pop=function(){var e=this.NT.pop();return this.length=this.NT.length,e},i.prototype.shift=function(){var e=this.NT.shift();return this.length=this.NT.length,e},i.prototype.slice=function(){return this.NT.slice.apply(this.NT,arguments)},i.prototype.splice=function(e,t){return this.qk(e,t,Array.prototype.slice.call(arguments,2))},i.prototype.qk=function(e,t,r){if(void 0===e&&void 0===t)return[];e=e||0,e<0&&(e+=this.length),void 0===t&&(t=1/0);var i=this.slice(e,e+t);return this.Mk&&this.QA(r,i,e),this.NT.splice(e,t),this.length-=i.length,this.Mk&&this.GA([],i,e),this.addEach(r),i},i.prototype.reduce=function(e,t){var r=arguments[2];return this.NT.reduce(function(t,i,n){return e.call(r,t,i,n,this)},t,this)},i.prototype.reduceRight=function(){var e=arguments[2];return this.NT.reduceRight(function(t,r,i){return callback.call(e,t,r,i,this)},basis,this)},i.prototype.min=function(){if(this.length)return this.NT[0]},i.prototype.max=function(){if(this.length)return this.NT[this.length-1]},i.prototype.Bc=function(){return this.NT.Bc()},i.prototype.clear=function(){var e;this.Mk&&(e=this.NT.slice(),this.QA([],e,0)),this.length=0,this.NT.clear(),this.Mk&&this.GA([],e,0)},i.prototype.cs=function(e,t){return this.NT.cs(e,t)},i.prototype.Oc=function(e,t){return this.NT.Oc(e,t)},i.prototype.Hc=function(e,t){return new this.Iterator(this.NT,e,t)},i.prototype.toJSON=function(){return this.toArray()},i.prototype.Iterator=Array.prototype.Iterator},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(84),s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(n.Tx);t.oM=s},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(85),s=r(4),o=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.bx=function(e,t){if(DOMParser){var r=(new DOMParser).parseFromString(t,"text/xml"),i=r.getElementsByTagName("Location"),n="";if(i&&i.length>0&&i[0].childNodes.length>0){var s=i[0].childNodes[0];n=this.Ix(s.data)}else n=this.Ix(e);this.manifest=this.mx.parse(t,n)}},t.prototype.Ux=function(e){return e.substr(0,e.lastIndexOf("_cs"))},t.prototype.CM=function(e){return s.resolve(!1)},t}(n.$x);t.hM=o},function(e,t,r){/*!
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */
var i=r(145),n=r(86);DashParser=function(){var e=/^([-])?P(([\d.]*)Y)?(([\d.]*)M)?(([\d.]*)D)?T?(([\d.]*)H)?(([\d.]*)M)?(([\d.]*)S)?/,t=/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\.[0-9]*)?)?(?:([+-])([0-9]{2})([0-9]{2}))?/,r=/^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/,s=[{type:"duration",test:function(t){for(var r=["minBufferTime","mediaPresentationDuration","minimumUpdatePeriod","timeShiftBufferDepth","maxSegmentDuration","maxSubsegmentDuration","suggestedPresentationDelay","start","starttime","duration"],i=r.length,n=0;n<i;n++)if(t.nodeName===r[n])return e.test(t.value);return!1},tq:function(t){var r=e.exec(t),i=31536e3*parseFloat(r[2]||0)+2592e3*parseFloat(r[4]||0)+86400*parseFloat(r[6]||0)+3600*parseFloat(r[8]||0)+60*parseFloat(r[10]||0)+parseFloat(r[12]||0);return void 0!==r[1]&&(i=-i),i}},{type:"datetime",test:function(e){return t.test(e.value)},tq:function(e){var r,i=t.exec(e);if(r=Date.UTC(parseInt(i[1],10),parseInt(i[2],10)-1,parseInt(i[3],10),parseInt(i[4],10),parseInt(i[5],10),i[6]&&parseInt(i[6],10)||0,i[7]&&1e3*parseFloat(i[7])||0),i[9]&&i[10]){var n=60*parseInt(i[9],10)+parseInt(i[10],10);r+=("+"===i[8]?-1:1)*n*60*1e3}return new Date(r)}},{type:"numeric",test:function(e){return r.test(e.value)},tq:function(e){return parseFloat(e)}}],o=function(){var e,t,r,i;return i=[{name:"profiles",Py:!1},{name:"width",Py:!1},{name:"height",Py:!1},{name:"sar",Py:!1},{name:"frameRate",Py:!1},{name:"audioSamplingRate",Py:!1},{name:"mimeType",Py:!1},{name:"segmentProfiles",Py:!1},{name:"codecs",Py:!1},{name:"maximumSAPPeriod",Py:!1},{name:"startsWithSap",Py:!1},{name:"maxPlayoutRate",Py:!1},{name:"codingDependency",Py:!1},{name:"scanType",Py:!1},{name:"FramePacking",Py:!0},{name:"AudioChannelConfiguration",Py:!0},{name:"ContentProtection",Py:!0}],e={},e.name="AdaptationSet",e.wZ=!1,e.isArray=!0,e.parent=null,e.children=[],e.properties=i,t={},t.name="Representation",t.wZ=!1,t.isArray=!0,t.parent=e,t.children=[],t.properties=i,e.children.push(t),r={},r.name="SubRepresentation",r.wZ=!1,r.isArray=!0,r.parent=t,r.children=[],r.properties=i,t.children.push(r),e},a=function(){var e,t,r,i;return i=[{name:"SegmentBase",Py:!0},{name:"SegmentTemplate",Py:!0},{name:"SegmentList",Py:!0}],e={},e.name="Period",e.wZ=!1,e.isArray=!0,e.parent=null,e.children=[],e.properties=i,t={},t.name="AdaptationSet",t.wZ=!1,t.isArray=!0,t.parent=e,t.children=[],t.properties=i,e.children.push(t),r={},r.name="Representation",r.wZ=!1,r.isArray=!0,r.parent=t,r.children=[],r.properties=i,t.children.push(r),e},h=function(){var e,t,r,i,n;return n=[{name:"BaseURL",Py:!0,bZ:function(e,t){return 0===t.indexOf("http://")?t:e+t}}],e={},e.name="mpd",e.wZ=!0,e.isArray=!0,e.parent=null,e.children=[],e.properties=n,t={},t.name="Period",t.wZ=!1,t.isArray=!0,t.parent=null,t.children=[],t.properties=n,e.children.push(t),r={},r.name="AdaptationSet",r.wZ=!1,r.isArray=!0,r.parent=t,r.children=[],r.properties=n,t.children.push(r),i={},i.name="Representation",i.wZ=!1,i.isArray=!0,i.parent=r,i.children=[],i.properties=n,r.children.push(i),e},c=function(){var e=[];return e.push(o()),e.push(a()),e.push(h()),e};return{parse:function(e,t){var r,o=new n(s,"",!0),a=new i(c());new Date;try{r=o.Wx(e),new Date,r.hasOwnProperty("BaseURL")?(r.BaseURL=r.CZ[0],0!==r.BaseURL.toString().indexOf("http")&&(r.BaseURL=t+r.BaseURL)):r.BaseURL=t,r.hasOwnProperty("Location")&&(r.Location=r.Location_asArray[0]),a._Z(r),new Date}catch(t){return console.log("parsing the manifest failed","parse",e),null}return r}}}},function(e,t,r){var n=function(e){var t;for(t=[],i=0,len=e.length;i<len;i+=1)e[i].wZ?t.push("root"):t.push(e[i].name);var r=function(e,t){var r;if(null!==e&&null!==t)for(r in e)e.hasOwnProperty(r)&&(t.hasOwnProperty(r)||(t[r]=e[r]))},n=function(e,t,i){var n,s,o,a,h;if(null!==e&&0!==e.length)for(n=0,s=e.length;n<s;n+=1)o=e[n],t.hasOwnProperty(o.name)&&(i.hasOwnProperty(o.name)?o.Py&&(a=t[o.name],h=i[o.name],"object"==typeof a&&"object"==typeof h?r(a,h):null!=o.bZ?i[o.name]=o.bZ(a,h):i[o.name]=a+h):i[o.name]=t[o.name])},s=function(e,t){var r,i,o,a,h,c,u,l=e;if(null!==l.children&&0!==l.children.length)for(r=0,i=l.children.length;r<i;r+=1)if(c=l.children[r],t.hasOwnProperty(c.name))if(c.isArray)for(h=t[c.name+"_asArray"],o=0,a=h.length;o<a;o+=1)u=h[o],n(l.properties,t,u),s(c,u);else u=t[c.name],n(l.properties,t,u),s(c,u)},o=function(r){var i,n,a,h,c,u,l;if(null===r)return r;if("object"!=typeof r)return r;for(i=0,n=t.length;i<n;i+=1)"root"===t[i]&&(c=e[i],u=r,s(c,u));for(h in r)if(r.hasOwnProperty(h)){if(-1!==(a=t.indexOf(h)))if(c=e[a],c.isArray)for(l=r[h+"_asArray"],i=0,n=l.length;i<n;i+=1)u=l[i],s(c,u);else u=r[h],s(c,u);o(r[h])}return r};return{_Z:o}};e.i=n},function(e,t,r){/*! codem-isoboxer v0.2.2 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */
"undefined"==typeof ISOBoxer&&(ISOBoxer={}),ISOBoxer.Qx=function(e){return new i(e).parse()},ISOBoxer.rc={},ISOBoxer.rc.PZ=function(e,t){var r=t||"utf-8";if("undefined"!=typeof TextDecoder)return new TextDecoder(r).decode(e);var i=[],n=0;if("utf-8"===r)for(;n<e.byteLength;){var s=e.getUint8(n++);s<128||(s<224?(s=(31&s)<<6,s|=63&e.getUint8(n++)):s<240?(s=(15&s)<<12,s|=(63&e.getUint8(n++))<<6,s|=63&e.getUint8(n++)):(s=(7&s)<<18,s|=(63&e.getUint8(n++))<<12,s|=(63&e.getUint8(n++))<<6,s|=63&e.getUint8(n++))),i.push(String.fromCharCode(s))}else for(;n<e.byteLength;)i.push(String.fromCharCode(e.getUint8(n++)));return i.join("")},t.Qx=ISOBoxer.Qx,t.rc=ISOBoxer.rc,ISOBoxer.AZ=function(e){this.offset=void 0===e?0:e};var i=function(e){this.OZ=new DataView(e),this.NZ=new ISOBoxer.AZ,this.DZ=[]};i.prototype.fetch=function(e){var t=this.kZ(e,!0);return t.length?t[0]:null},i.prototype.kZ=function(e,t){var r=[];return i.LZ.call(this,e,r,t),r},i.prototype.parse=function(){for(this.NZ.offset=0,this.DZ=[];this.NZ.offset<this.OZ.byteLength;){var e=n.parse(this);if(void 0===e.type)break;this.DZ.push(e)}return this},i.LZ=function(e,t,r){this.type&&this.type==e&&t.push(this);for(var n in this.DZ){if(t.length&&r)return;i.LZ.call(this.DZ[n],e,t,r)}};var n=function(){this.NZ=new ISOBoxer.AZ};n.parse=function(e){var t=new n;return t.MZ=e.NZ.offset,t.FZ=e.FZ?e.FZ:e,t.OZ=e.OZ,t.UZ=e,t.BZ(),e.NZ.offset=t.OZ.byteOffset+t.OZ.byteLength,t},n.prototype.HZ=function(e){var t=null;switch(e){case 8:t=this.OZ.getInt8(this.NZ.offset-this.OZ.byteOffset);break;case 16:t=this.OZ.getInt16(this.NZ.offset-this.OZ.byteOffset);break;case 32:t=this.OZ.getInt32(this.NZ.offset-this.OZ.byteOffset);break;case 64:var r=this.OZ.getInt32(this.NZ.offset-this.OZ.byteOffset),i=this.OZ.getInt32(this.NZ.offset-this.OZ.byteOffset+4);t=r*Math.pow(2,32)+i}return this.NZ.offset+=e>>3,t},n.prototype.xZ=function(e){var t=null;switch(e){case 8:t=this.OZ.getUint8(this.NZ.offset-this.OZ.byteOffset);break;case 16:t=this.OZ.getUint16(this.NZ.offset-this.OZ.byteOffset);break;case 24:var r=this.OZ.getUint16(this.NZ.offset-this.OZ.byteOffset),i=this.OZ.getUint8(this.NZ.offset-this.OZ.byteOffset+2);t=(r<<8)+i;break;case 32:t=this.OZ.getUint32(this.NZ.offset-this.OZ.byteOffset);break;case 64:var r=this.OZ.getUint32(this.NZ.offset-this.OZ.byteOffset),i=this.OZ.getUint32(this.NZ.offset-this.OZ.byteOffset+4);t=r*Math.pow(2,32)+i}return this.NZ.offset+=e>>3,t},n.prototype.qZ=function(e){for(var t="",r=0;r<e;r++){var i=this.xZ(8);t+=String.fromCharCode(i)}return t},n.prototype.GZ=function(){for(var e="";;){var t=this.xZ(8);if(0==t)break;e+=String.fromCharCode(t)}return e},n.prototype.VZ=function(e){return this.xZ(e/2)+this.xZ(e/2)/Math.pow(2,e/2)},n.prototype.BZ=function(){if(this.NZ.offset=this.MZ,this.MZ+8>this.OZ.buffer.byteLength)return void(this.FZ.jZ=!0);switch(this.size=this.xZ(32),this.type=this.qZ(4),1==this.size&&(this.QZ=this.xZ(64)),"uuid"==this.type&&(this.KZ=this.qZ(16)),this.size){case 0:this.OZ=new DataView(this.OZ.buffer,this.MZ,this.OZ.byteLength-this.NZ.offset);break;case 1:this.MZ+this.size>this.OZ.buffer.byteLength?(this.jZ=!0,this.FZ.jZ=!0):this.OZ=new DataView(this.OZ.buffer,this.MZ,this.QZ);break;default:this.MZ+this.size>this.OZ.buffer.byteLength?(this.jZ=!0,this.FZ.jZ=!0):this.OZ=new DataView(this.OZ.buffer,this.MZ,this.size)}!this.jZ&&this.YZ[this.type]&&this.YZ[this.type].call(this)},n.prototype.WZ=function(){this.version=this.xZ(8),this.zZ=this.xZ(24)},n.prototype.YZ={},["moov","trak","tref","mdia","minf","stbl","edts","dinf","mvex","moof","traf","mfra","udta","meco","strk","vttc"].forEach(function(e){n.prototype.YZ[e]=function(){for(this.DZ=[];this.NZ.offset-this.OZ.byteOffset<this.OZ.byteLength;)this.DZ.push(n.parse(this))}}),n.prototype.YZ.JZ=function(){this.WZ(),this.XZ=this.xZ(32),this.entries=[];for(var e=1;e<=this.XZ;e++){var t={};1==this.version?(t.ZZ=this.xZ(64),t.$Z=this.HZ(64)):(t.ZZ=this.xZ(32),t.$Z=this.HZ(32)),t.e$=this.HZ(16),t.t$=this.HZ(16),this.entries.push(t)}},n.prototype.YZ.r$=function(){this.WZ(),this.i$=this.GZ(),this.value=this.GZ(),this.timescale=this.xZ(32),this.n$=this.xZ(32),this.s$=this.xZ(32),this.id=this.xZ(32),this.o$=new DataView(this.OZ.buffer,this.NZ.offset,this.OZ.byteLength-(this.NZ.offset-this.MZ))},n.prototype.YZ.a$=n.prototype.YZ.Mb=function(){this.data=new DataView(this.OZ.buffer,this.NZ.offset,this.OZ.byteLength-(this.NZ.offset-this.MZ))},n.prototype.YZ.h$=n.prototype.YZ.c$=function(){for(this.u$=this.qZ(4),this.l$=this.xZ(32),this.p$=[];this.NZ.offset-this.OZ.byteOffset<this.OZ.byteLength;)this.p$.push(this.qZ(4))},n.prototype.YZ.d$=function(){this.WZ(),this.f$=this.xZ(32),this.g$=this.qZ(4),this.YR=[this.xZ(32),this.xZ(32),this.xZ(32)],this.name=this.GZ()},n.prototype.YZ.E$=function(){this.data=new DataView(this.OZ.buffer,this.NZ.offset,this.OZ.byteLength-(this.NZ.offset-this.MZ))},n.prototype.YZ.v$=function(){this.WZ(),1==this.version?(this.y$=this.xZ(64),this.T$=this.xZ(64),this.timescale=this.xZ(32),this.duration=this.xZ(64)):(this.y$=this.xZ(32),this.T$=this.xZ(32),this.timescale=this.xZ(32),this.duration=this.xZ(32));var e=this.xZ(16);this.pad=e>>15,this.language=String.fromCharCode(96+(e>>10&31),96+(e>>5&31),96+(31&e)),this.f$=this.xZ(16)},n.prototype.YZ.m$=function(){this.WZ(),this.I$=this.xZ(32)},n.prototype.YZ.S$=function(){this.WZ(),1==this.version?(this.y$=this.xZ(64),this.T$=this.xZ(64),this.timescale=this.xZ(32),this.duration=this.xZ(64)):(this.y$=this.xZ(32),this.T$=this.xZ(32),this.timescale=this.xZ(32),this.duration=this.xZ(32)),this.rate=this.VZ(32),this.volume=this.VZ(16),this.R$=this.xZ(16),this.w$=[this.xZ(32),this.xZ(32)],this.matrix=[];for(var e=0;e<9;e++)this.matrix.push(this.VZ(32));this.f$=[];for(var e=0;e<6;e++)this.f$.push(this.xZ(32));this.b$=this.xZ(32)},n.prototype.YZ.C$=function(){var e=new DataView(this.OZ.buffer,this.NZ.offset,this.OZ.byteLength-(this.NZ.offset-this.MZ));this._$=ISOBoxer.rc.PZ(e)},n.prototype.YZ.P$=function(){this.WZ(),this.A$=this.xZ(32),this.timescale=this.xZ(32),0==this.version?(this.O$=this.xZ(32),this.N$=this.xZ(32)):(this.O$=this.xZ(64),this.N$=this.xZ(64)),this.YR=this.xZ(16),this.D$=this.xZ(16),this.k$=[];for(var e=0;e<this.D$;e++){var t={},r=this.xZ(32);t.L$=r>>31&1,t.M$=2147483647&r,t.F$=this.xZ(32);var i=this.xZ(32);t.U$=i>>31&1,t.B$=i>>28&7,t.H$=268435455&i,this.k$.push(t)}},n.prototype.YZ.x$=function(){this.WZ(),this.q$=this.xZ(32),this.G$=[];for(var e=0;e<this.q$;e++){var t={};t.V$=this.xZ(32),t.j$=[];for(var r=0;r<t.V$;r++){var i={};i.level=this.xZ(8),i.Q$=this.xZ(24),t.j$.push(i)}this.G$.push(t)}},n.prototype.YZ.K$=function(){this.WZ(),1==this.version?this.Y$=this.xZ(64):this.Y$=this.xZ(32)},n.prototype.YZ.tfhd=function(){this.WZ(),this.W$=this.xZ(32),1&this.zZ&&(this.z$=this.xZ(64)),2&this.zZ&&(this.J$=this.xZ(32)),8&this.zZ&&(this.default_sample_duration=this.xZ(32)),16&this.zZ&&(this.X$=this.xZ(32)),32&this.zZ&&(this.Z$=this.xZ(32))},n.prototype.YZ.$$=function(){this.WZ(),1==this.version?(this.y$=this.xZ(64),this.T$=this.xZ(64),this.W$=this.xZ(32),this.R$=this.xZ(32),this.duration=this.xZ(64)):(this.y$=this.xZ(32),this.T$=this.xZ(32),this.W$=this.xZ(32),this.R$=this.xZ(32),this.duration=this.xZ(32)),this.w$=[this.xZ(32),this.xZ(32)],this.e0=this.xZ(16),this.t0=this.xZ(16),this.volume=this.VZ(16),this.r0=this.xZ(16),this.matrix=[];for(var e=0;e<9;e++)this.matrix.push(this.VZ(32));this.width=this.xZ(32),this.height=this.xZ(32)},n.prototype.YZ.trun=function(){this.WZ(),this.i0=this.xZ(32),1&this.zZ&&(this.n0=this.HZ(32)),4&this.zZ&&(this.s0=this.xZ(32)),this.Kx=[];for(var e=0;e<this.i0;e++){var t={};256&this.zZ&&(t.sample_duration=this.xZ(32)),512&this.zZ&&(t.o0=this.xZ(32)),1024&this.zZ&&(t.a0=this.xZ(32)),2048&this.zZ&&(0==this.version?t.h0=this.xZ(32):t.h0=this.HZ(32)),this.Kx.push(t)}},n.prototype.YZ.c0=function(){var e=new DataView(this.OZ.buffer,this.NZ.offset,this.OZ.byteLength-(this.NZ.offset-this.MZ));this.u0=ISOBoxer.rc.PZ(e)},n.prototype.YZ.l0=function(){var e=new DataView(this.OZ.buffer,this.NZ.offset,this.OZ.byteLength-(this.NZ.offset-this.MZ));this.config=ISOBoxer.rc.PZ(e)},n.prototype.YZ.p0=function(){}},function(e,t,r){"use strict";var i=function(){function e(){}return e}();t._x=i},function(e,t,r){"use strict";var i=r(4),n=r(0),s=r(1),o=r(2),a=function(){function e(e,t){this.name=e,this.iv=t}return e}(),h=function(){function e(e,t,r){this.loggerId="[DASH AES Manager] ",this.d0="AES-CBC",this.ll=!1,this.logger=n.Framework&&n.Framework.resolve(n.Framework.V.R)?n.Framework.resolve(n.Framework.V.R).log():console,this.f0=e,this.g0=t,this.logger.debug(this.loggerId+"Starting Dash AES Manager"),r&&(this.E0=r)}return e.prototype.init=function(){var e=this;try{this.v0();var t=i.defer();this.y0().then(function(){return t.resolve(!0)}).fail(function(r){s.ErrorMonitor.ve().logError("Error initializing key",e.loggerId,o.hs.Ur.Dr,r),t.resolve(!1)}),this.T0=t.Ss}catch(e){s.ErrorMonitor.ve().logError("Error initializing AES Manager",this.loggerId,o.hs.Ur.Nr,e)}},e.prototype.NM=function(){return this.T0?this.T0:i.resolve(!1)},e.prototype.y0=function(){var e=this;if(this.m0)return this.m0;var t=i.defer();return this.I0().then(function(r){window.crypto.subtle.importKey("raw",r,{name:e.d0},!1,["decrypt"]).then(function(e){t.resolve(e)},function(e){t.reject("error importing key: "+e.toString())})}).fail(function(e){return t.reject(e)}),this.m0=t.Ss,this.m0},e.prototype.v0=function(){for(var e=2,t=this.g0.length,r=[];e<t;e+=2)r.push(parseInt(this.g0.substr(e,2),16));this.iv=new Uint8Array(r)},e.prototype.decrypt=function(e){var t=this,r=i.defer(),n=new a(this.d0,this.iv);return this.m0.then(function(t){return window.crypto.subtle.decrypt(n,t,e).then(function(e){r.resolve(e)})}).catch(function(e){s.ErrorMonitor.ve().logError("Error decrypting arraybuffer",t.loggerId,o.hs.Ur.Lr,e),t.ll=!0,t.T0=i.resolve(!1),r.reject(e)}),r.Ss},e.prototype.I0=function(){var e=this,t=i.defer(),r=new XMLHttpRequest;return r.responseType="arraybuffer",r.open("GET",this.f0),this.E0&&r.setRequestHeader("Authorization",this.E0),r.onload=function(){if(200===r.status){var i=new Uint8Array(r.response);t.resolve(i)}else s.ErrorMonitor.ve().logError("Error downloading key",e.loggerId,o.hs.Ur.Mr,r.status),t.reject("error downloading key - status: "+r.status)},r.onerror=function(){s.ErrorMonitor.ve().logError("Error downloading key",e.logger,o.hs.Ur.Fr),t.reject("error downloading key")},r.send(),t.Ss},e.prototype.xx=function(){return this.ll},e}();t.qx=h},function(e,t,r){"use strict";var i=r(4),n=function(){function e(){}return e.prototype.init=function(){},e.prototype.NM=function(){return i.resolve(!1)},e.prototype.decrypt=function(e){return i.reject("unsupported")},e.prototype.xx=function(){return!1},e}();t.Gx=n},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(85),s=r(61),o=r(57),a=r(4),h=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.bx=function(e,t){this.manifest=this.mx.parse(t,this.Ix(e))},t.prototype.Ux=function(e){var t=e.substr(0,e.lastIndexOf("="));return t=t.substr(0,t.lastIndexOf("="))},t.prototype.CM=function(e){var t=this,r=a.defer(),i=this.gM(e.eg());if(!i||i.next)return r.resolve(!1),r.Ss;var h=a.defer();if(this.OM)o.DASH.XL?this.OM.NM().then(function(r){r?t.OM.decrypt(e.jf).then(function(e){h.resolve(t.jx(e))}).fail(function(e){return h.reject(!0)}):h.reject(!1)}):h.reject(!1);else try{var c=this.jx(e.jf);h.resolve(c)}catch(e){this.logger.warn("error extracting duration",e),h.reject(!0)}return h.Ss.then(function(e){if(!isNaN(e)){var o=i.id+e;t.logger.debug("found next fragment: "+i.id+" -> "+o+" duration: "+e),t.Sx.forEach(function(t,r){if(t.type===i.type){var a=t.Nx.replace(n.$x.Hx,i.id+""),h=t.Nx.replace(n.$x.Hx,o+""),c=t.kx.get(a);if(!t.kx.has(h)&&c){c.duration=e;var u=new s.DF(o,t.bandwidth,e,h,h);u.type=c.type,c.next=u,t.kx.set(h,u),t.Mx.set(o,u)}}})}r.resolve(!1)}).fail(function(i){t.logger.debug("could not extract duration from "+e.eg()+" [reevaluate: "+i+"]"),r.resolve(i)}),r.Ss},t}(n.$x);t.cM=h},function(e,t,r){"use strict";var i=r(1),n=r(152),s=r(3),o=r(153),a=r(61),h=r(0),c=r(7),u=r(87),l=r(2),p=function(){function e(){this.loggerId="[HLS METADATA] ",this.Aq=new s,this.S0=null,this.logger=(h.Framework.resolve(h.Framework.V.R)||console).log()}return e.prototype.parse=function(e,t){try{var r=new n.R0;if(r.push(t),r.manifest.playlists)this.w0(e,r.manifest);else{var s=this.b0(e,r.manifest);if(s&&s.C0&&(this.live=!s.C0._0),this.live){var o=this.P0(r.manifest,t);return this.logger.debug("HLS manifest trimmed "+o.A0+" segments ("+o.A0+"s) - new segments:["+s.O0.map(function(e){return e.id+":"+e.duration})+"]"),o.N0}}return t}catch(r){return i.ErrorMonitor.ve().logError("Error parsing metadata",this.loggerId,l.hs.yi.Wr,{detailedError:r,url:e}),t}},e.prototype.qM=function(e,t){if(this.Oq.has(t)){return this.Oq.get(t).Mx.get(e)}return null},e.prototype.lM=function(){return this.Aq.values().map(function(e){return e.bitrate})},e.prototype.isLive=function(){return this.live},e.prototype.gM=function(e){return null==this.kx?null:this.kx.get(e)},e.prototype.vM=function(e){try{var t=this.kx.get(e);if(t){var r=t.bitrate;return this.Oq.get(r).Mx.get(t.id+1)}return null}catch(t){return i.ErrorMonitor.ve().logError("Error getting the next segment info",this.loggerId,l.hs.yi.Xr,{detailedError:t,url:e}),null}},e.prototype._q=function(e){return this.Aq.has(e)},e.prototype.Pq=function(){return this.D0},e.prototype.w0=function(e,t){var r=this;this.D0=e,this.k0=t,this.Aq=new s,this.kx=new s,this.Oq=new s,this.k0.playlists.forEach(function(t){var i=c.rc.$h(e,t.uri),n=t.attributes.BANDWIDTH,s=new o.L0(n,t.uri,i);r.Aq.set(i,s),r.Oq.set(n,s)})},e.prototype.b0=function(e,t){var r=this;try{var n=this.Aq.get(e);if(!n)return void i.ErrorMonitor.ve().logError("Playlist url does not match any playlist in the master file",this.loggerId,l.hs.yi.fi,{url:e});var s=null!=t.mediaSequence?t.mediaSequence:0,o=[],h=s-1,u=n.Mx.get(h),p=[];return t.Nq.forEach(function(t){var h=c.rc.$h(e,t.uri),l=Math.round(1e3*t.duration),d=n.bitrate;Number.isInteger(d)||(i.ErrorMonitor.ve().logError("Segment Bitrate is a Float",{bitrate:d}),d=Math.round(d));var f=new a.DF(s,d,l,t.uri,h);r.kx.has(h)||p.push(f),r.kx.set(h,f),n.Mx.set(s,f),o.push(f),u&&(u.next=f),u=f,s++}),this.S0=n,n.update(t.mediaSequence,t.discontinuitySequence,t._0,t.M0,o),{C0:n,O0:p}}catch(e){return i.ErrorMonitor.ve().logError("Error updating the playlist",this.loggerId,l.hs.yi.Ei,e),null}},e.prototype.P0=function(e,t){try{for(var r=t.split("\n"),n=Math.max(1,u.bq.vq),s=null,o=0,a=0,h=e.Nq.length-1;h>n-1&&(s=e.Nq[h],!(o>=u.bq.Eq));h--)a++,o+=s.duration;for(var c="",h=0;h<r.length&&(c=c+r[h]+"\n",r[h].trim()!==s.uri);h++);return this.logger.debug("HLS trimmed "+a+" segments for total duration: "+o),{N0:c,A0:a,F0:o}}catch(e){throw i.ErrorMonitor.ve().logError("Error trimming the playlist",this.loggerId,l.hs.yi.vi,e),new Error(e)}},e}();t.wq=p},function(e,t,r){var i=function(){var e={};e.MT={},e.MT.create=Object.create||function(e){function t(){}return t.prototype=e,new t},e.MT.U0=function(e,t,r){for(var i in e)hasOwnProp.call(e,i)&&t.call(r||this,i,e[i])},e.MT.Py=function(e,t){if(!t)return e;for(var r in t)hasOwnProp.call(t,r)&&(e[r]=t[r]);return e},e.MT.B0=function(t,r){var i,n,s;t=e.MT.cA(t);for(i in r)hasOwnProp.call(r,i)&&(n=t[i],s=r[i],e.MT.H0(n)&&e.MT.H0(s)?t[i]=e.MT.B0(n,s):t[i]=r[i]);return t},e.MT.cA=function(t){return e.MT.Py({},t)},e.MT.H0=function(e){return!!e&&"object"==typeof e&&"[object Object]"===e.toString()&&e.constructor===Object},e.MT.isArray=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},mergeOptions=function(t,r){var i,n,s;t=e.MT.cA(t);for(i in r)r.hasOwnProperty(i)&&(n=t[i],s=r[i],e.MT.H0(n)&&e.MT.H0(s)?t[i]=e.util.x0(n,s):t[i]=r[i]);return t},e.x0=mergeOptions;var t=function(){this.init=function(){var e={};this.on=function(t,r){e[t]||(e[t]=[]),e[t].push(r)},this.off=function(t,r){var i;return!!e[t]&&(i=e[t].indexOf(r),e[t].splice(i,1),i>-1)},this.q0=function(t){var r,i,n,s;if(r=e[t])for(s=Array.prototype.slice.call(arguments,1),n=r.length,i=0;i<n;++i)r[i].apply(this,s)},this.G0=function(){e={}}}};t.prototype.V0=function(e){this.on("data",function(t){e.push(t)})},e.j0=t;var r,i,n,s=function(){},o=function(){return new RegExp('(?:^|,)((?:[^=]*)=(?:"[^"]*"|[^,]*))')}(),a=function(e){for(var t,r=e.split(o),i=r.length,n={};i--;)""!==r[i]&&(t=/([^=]*)=(.*)/.exec(r[i]).slice(1),t[0]=t[0].replace(/^\s+|\s+$/g,""),t[1]=t[1].replace(/^\s+|\s+$/g,""),t[1]=t[1].replace(/^['"](.*)['"]$/g,"$1"),n[t[0]]=t[1]);return n},t=e.j0;return r=function(){var e="";r.prototype.init.call(this),this.push=function(t){var r;for(e+=t,r=e.indexOf("\n");r>-1;r=e.indexOf("\n"))this.q0("data",e.substring(0,r)),e=e.substring(r+1)}},r.prototype=new t,i=function(){i.prototype.init.call(this)},i.prototype=new t,i.prototype.push=function(e){var t,r;if(e=e.replace(/^\s+|\s+$/g,""),0!==e.length){if("#"!==e[0])return void this.q0("data",{type:"uri",uri:e});if(0!==e.indexOf("#EXT"))return void this.q0("data",{type:"comment",text:e.slice(1)});if(e=e.replace("\r",""),t=/^#EXTM3U/.exec(e))return void this.q0("data",{type:"tag",Q0:"m3u"});if(t=/^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(e))return r={type:"tag",Q0:"inf"},t[1]&&(r.duration=parseFloat(t[1])),t[2]&&(r.title=t[2]),void this.q0("data",r);if(t=/^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(e))return r={type:"tag",Q0:"targetduration"},t[1]&&(r.duration=parseInt(t[1],10)),void this.q0("data",r);if(t=/^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(e))return r={type:"tag",Q0:"totalduration"},t[1]&&(r.duration=parseInt(t[1],10)),void this.q0("data",r);if(t=/^#EXT-X-VERSION:?([0-9.]*)?/.exec(e))return r={type:"tag",Q0:"version"},t[1]&&(r.version=parseInt(t[1],10)),void this.q0("data",r);if(t=/^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(e))return r={type:"tag",Q0:"media-sequence"},t[1]&&(r.number=parseInt(t[1],10)),void this.q0("data",r);if(t=/^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(e))return r={type:"tag",Q0:"discontinuity-sequence"},t[1]&&(r.number=parseInt(t[1],10)),void this.q0("data",r);if(t=/^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(e))return r={type:"tag",Q0:"playlist-type"},t[1]&&(r.K0=t[1]),void this.q0("data",r);if(t=/^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(e))return r={type:"tag",Q0:"byterange"},t[1]&&(r.length=parseInt(t[1],10)),t[2]&&(r.offset=parseInt(t[2],10)),void this.q0("data",r);if(t=/^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(e))return r={type:"tag",Q0:"allow-cache"},t[1]&&(r.XD=!/NO/.test(t[1])),void this.q0("data",r);if(t=/^#EXT-X-STREAM-INF:?(.*)$/.exec(e))return r={type:"tag",Q0:"stream-inf"},t[1]&&(r.attributes=a(t[1]),r.attributes.Y0&&function(){var e=r.attributes.Y0.split("x"),t={};e[0]&&(t.width=parseInt(e[0],10)),e[1]&&(t.height=parseInt(e[1],10)),r.attributes.Y0=t}(),r.attributes.BANDWIDTH&&(r.attributes.BANDWIDTH=parseInt(r.attributes.BANDWIDTH,10)),r.attributes["W0"]&&(r.attributes["W0"]=parseInt(r.attributes["W0"],10))),void this.q0("data",r);if(t=/^#EXT-X-ENDLIST/.exec(e))return void this.q0("data",{type:"tag",Q0:"endlist"});if(t=/^#EXT-X-DISCONTINUITY/.exec(e))return void this.q0("data",{type:"tag",Q0:"discontinuity"});if(t=/^#EXT-X-KEY:?(.*)$/.exec(e))return r={type:"tag",Q0:"key"},t[1]&&(r.attributes=a(t[1]),r.attributes.IV&&("0x"===r.attributes.IV.substring(0,2)&&(r.attributes.IV=r.attributes.IV.substring(2)),r.attributes.IV=r.attributes.IV.match(/.{8}/g),r.attributes.IV[0]=parseInt(r.attributes.IV[0],16),r.attributes.IV[1]=parseInt(r.attributes.IV[1],16),r.attributes.IV[2]=parseInt(r.attributes.IV[2],16),r.attributes.IV[3]=parseInt(r.attributes.IV[3],16),r.attributes.IV=new Uint32Array(r.attributes.IV))),void this.q0("data",r);this.q0("data",{type:"tag",data:e.slice(4,e.length)})}},n=function(){var t,o=this,a=[],h={};n.prototype.init.call(this),this.z0=new r,this.J0=new i,this.z0.V0(this.J0),this.manifest={X0:!0},this.J0.on("data",function(r){({tag:function(){(({"allow-cache":function(){this.manifest.X0=r.XD,"allowed"in r||(this.q0("info",{message:"defaulting allowCache to YES"}),this.manifest.X0=!0)},byterange:function(){var e={};"length"in r&&(h.byterange=e,e.length=r.length,"offset"in r||(this.q0("info",{message:"defaulting offset to zero"}),r.offset=0)),"offset"in r&&(h.byterange=e,e.offset=r.offset)},endlist:function(){this.manifest._0=!0},inf:function(){"mediaSequence"in this.manifest||(this.manifest.mediaSequence=0,this.q0("info",{message:"defaulting media sequence to zero"})),"discontinuitySequence"in this.manifest||(this.manifest.discontinuitySequence=0,this.q0("info",{message:"defaulting discontinuity sequence to zero"})),r.duration>=0&&(h.duration=r.duration),this.manifest.Nq=a},key:function(){return r.attributes?"NONE"===r.attributes.Z0?void(t=null):r.attributes.lR?(r.attributes.Z0||this.q0("warn",{message:"defaulting key method to AES-128"}),t={method:r.attributes.Z0||"AES-128",uri:r.attributes.lR},void(void 0!==r.attributes.IV&&(t.iv=r.attributes.IV))):void this.q0("warn",{message:"ignoring key declaration without URI"}):void this.q0("warn",{message:"ignoring key declaration without attribute list"})},"media-sequence":function(){if(!isFinite(r.number))return void this.q0("warn",{message:"ignoring invalid media sequence: "+r.number});this.manifest.mediaSequence=r.number},"discontinuity-sequence":function(){if(!isFinite(r.number))return void this.q0("warn",{message:"ignoring invalid discontinuity sequence: "+r.number});this.manifest.discontinuitySequence=r.number},"playlist-type":function(){if(!/VOD|EVENT/.test(r.K0))return void this.q0("warn",{message:"ignoring unknown playlist type: "+r.C0});this.manifest.K0=r.K0},"stream-inf":function(){if(this.manifest.playlists=a,!r.attributes)return void this.q0("warn",{message:"ignoring empty stream-inf attributes"});h.attributes||(h.attributes={}),h.attributes=e.x0(h.attributes,r.attributes)},discontinuity:function(){h.discontinuity=!0},targetduration:function(){if(!isFinite(r.duration)||r.duration<0)return void this.q0("warn",{message:"ignoring invalid target duration: "+r.duration});this.manifest.M0=r.duration},totalduration:function(){if(!isFinite(r.duration)||r.duration<0)return void this.q0("warn",{message:"ignoring invalid total duration: "+r.duration});this.manifest.$0=r.duration}})[r.Q0]||s).call(o)},uri:function(){h.uri=r.uri,a.push(h),!this.manifest.M0||"duration"in h||(this.q0("warn",{message:"defaulting segment duration to the target duration"}),h.duration=this.manifest.M0),t&&(h.key=t),h={}},e1:function(){}})[r.type].call(o)})},n.prototype=new t,n.prototype.push=function(e){this.z0.push(e)},n.prototype.end=function(){this.z0.push("\n")},e.t1=r,e.i1=i,e.R0=n,e}();e.i=i},function(e,t,r){"use strict";var i=r(3),n=function(){function e(e,t,r){this.Mx=new i,this.bitrate=e,this.uri=t,this.yM=r}return e.prototype.update=function(e,t,r,i,n){this.mediaSequence=e,this.discontinuitySequence=t,this._0=r,this.M0=i,this.Nq=n,this.updated=!0},e}();t.L0=n},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(84),s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(n.Tx);t.Sq=s},function(e,t,r){"use strict";var i=r(15),n=r(0),s=r(5),o=r(4),a=r(6),h=r(2),c=r(1),u=a.he.vh,l=function(){function e(){this.loggerId="[CACHE] ",this.logger=n.Framework.resolve(n.Framework.V.R).log(),this.n1=n.Framework.resolve(i.qu.Tu),u&&s.hh.Ra.Ia&&(this.s1=n.Framework.resolve(i.qu.mu))}return e.prototype.init=function(e,t){try{this.n1.init(e,t),u&&s.hh.Ra.Ia&&this.s1.init(e,t)}catch(e){c.ErrorMonitor.ve().logError("Error initializing cache",this.loggerId,h.hs.ht.rt,e)}},e.prototype.put=function(e){var t=this,r=o.defer(),i=!1;try{!e.Wf.isLive()&&u&&s.hh.Ra.Ia?this.s1.put(e).then(function(e){i=e}).fail(function(e){t.logger.error(e)}).finally(function(){r.resolve(i)}):this.n1.put(e).then(function(e){i=e}).fail(function(e){t.logger.error(e)}).finally(function(){r.resolve(i)})}catch(e){c.ErrorMonitor.ve().logError("Error adding new fragment in cache",this.loggerId,h.hs.ht.it,e),r.resolve(i)}return r.Ss},e.prototype.get=function(e){var t=this,r=o.defer(),i=null;try{this.contains(e).then(function(n){n?t.n1.get(e).then(function(r){null==r&&u&&s.hh.Ra.Ia?t.s1.get(e).then(function(e){i=e}):i=r}).fail(function(e){t.logger.error(e)}).finally(function(){r.resolve(i)}):r.resolve(i)}).fail(function(e){t.logger.error(e)}).finally(function(){r.resolve(i)})}catch(e){c.ErrorMonitor.ve().logError("Error getting the fragment from cache",this.loggerId,h.hs.ht.nt,e),r.resolve(i)}return r.Ss},e.prototype.contains=function(e){var t=this,r=o.defer(),i=!1;try{this.n1.contains(e).then(function(r){!i&&u&&s.hh.Ra.Ia?t.s1.contains(e).then(function(e){i=e}):i=r}).fail(function(e){t.logger.error(e)}).finally(function(){r.resolve(i)})}catch(e){c.ErrorMonitor.ve().logError("Error checking if cache contains the fragment",this.loggerId,h.hs.ht.st,e),r.resolve(!1)}return r.Ss},e.prototype.ik=function(e){try{return!e&&u&&s.hh.Ra.Ia?this.s1.ik(e):this.n1.ik(e)}catch(e){return c.ErrorMonitor.ve().logError("Error getting the keys from cache",this.loggerId,h.hs.ht.ot,e),[]}},e.prototype.Vq=function(e){var t=this,r=o.defer(),i=[];try{!e&&u&&s.hh.Ra.Ia?this.s1.Vq(e).then(function(e){i=e}).fail(function(e){t.logger.error(e)}).finally(function(){r.resolve(i)}):this.n1.Vq(e).then(function(e){i=e}).fail(function(e){t.logger.error(e)}).finally(function(){r.resolve(i)})}catch(e){c.ErrorMonitor.ve().logError("Error getting the elements from cache ",this.loggerId,h.hs.ht.at,e),r.resolve(i)}return r.Ss},e.prototype.Qq=function(){this.n1.Qq()},e}();t.Ra=l},function(e,t,r){"use strict";var i=r(3),n=r(24),s=r(7),o=r(5),a=r(0),h=r(9),c=r(1),u=r(2),l=function(){function e(){this.loggerId="[FallbackRequester] ",this.o1=new i,this.Lh=new s.rc.Vh}return e.prototype.init=function(e){this.logger=a.Framework.resolve(a.Framework.V.R).log(e.sessionId),this.a1=e.ED},e.prototype.request=function(e){var t=this,r=a.Framework.resolve(a.Framework.V.H),i=!1,n=e.$f(),l=e.Kf,p=e.eg();e.xhr=r,e.qf.Ff=a.Framework.time(),this.logger.debug("FRL ISSUE REQ FOR FRAGMENT "+e.zf.toString()+"-"+e.qf.Af+" ["+h.vc[e.Xf()]+"] TO FALLBACK "),e.zf.O_()&&(r.responseType="arraybuffer"),this.h1(e.type)&&l.range&&e.Xf()!=h.vc.gc&&r.setRequestHeader("Range","bytes="+l.range),o.hh.K.Na&&this.c1(e.type)&&0!=e.qf.Af&&(this.logger.info("SET RANGE bytes="+e.qf.Af+"-"),r.setRequestHeader("Range","bytes="+e.qf.Af+"-")),l.lU.forEach(function(e){"range"!==e.key.toLowerCase()&&r.setRequestHeader(e.key,e.value)}),l.async&&l.timeout>0&&(r.timeout=l.timeout),l.mimeType&&r.overrideMimeType(l.mimeType),l.withCredentials&&(r.withCredentials=l.withCredentials),r.onloadstart=function(e){var t=s.rc.createEvent(Event,"loadstart",e,l);l.dispatchEvent(t)},r.onabort=function(e){if(!i){var t=s.rc.createEvent(Event,"abort",e,l);l.dispatchEvent(t)}},r.ontimeout=function(r){if(!i){t.error(e,n);var o=s.rc.createEvent(ProgressEvent,"timeout",r,l);l.dispatchEvent(o),c.ErrorMonitor.ve().logError("Error on fallback request because of timeout",t.loggerId,u.hs.Kn.Qn)}},r.onreadystatechange=function(e){if(l&&(r.readyState===XMLHttpRequest.HEADERS_RECEIVED&&(l.responseHeaders=r.getAllResponseHeaders()),r.readyState<XMLHttpRequest.DONE||r.readyState===XMLHttpRequest.DONE&&0===r.status)){l.readyState=r.readyState;var t=s.rc.createEvent(Event,"readystatechange",e,l);l.dispatchEvent(t)}},r.onprogress=function(i){if(!t.c1(e.type)){var n=s.rc.createEvent(ProgressEvent,"progress",i,l);l.dispatchEvent(n),r.total=i.total}e.qf.Df=i.total},r.onload=function(h){if(i=!0,l.status=r.status,h&&0!=h.total&&(e.qf.Df=h.total),e.responseHeaders=r.getAllResponseHeaders(),r.status<200||r.status>299)return t.logger.debug("FRL SERVER RETURNED ERROR CODE "+r.status),void t.error(e,n);e.zf.O_()?t.h1(e.type)?e.jf=r.response:t.c1(e.type)&&(o.hh.K.Na?e.jf=a.Framework.C()?null:s.rc.appendBuffer(e.jf,r.response):e.jf=r.response):e.RM=r.responseText,e.loaded(),t.o1.delete(n),e.qf.Uf=a.Framework.time(),t.u1(e),t.l1(e),t.a1.iZ(e),r=null},r.onerror=function(){i||t.error(e,n)},this.o1.set(n,e),r.open("GET",p,l.async,l.username,l.password),r.send()},e.prototype.error=function(e,t){var r="COULD NOT DOWNLOAD "+e.eg()+" status: "+e.xhr.status;e.type==n.bf.If?this.logger.debug(r):this.logger.warn(r),this.d1(e),this.o1.delete(t),this.a1.eZ(e)},e.prototype.Ys=function(e){return this.o1.has(e)},e.prototype.h1=function(e){return e==n.bf.If||e==n.bf.mf||e==n.bf.Tf},e.prototype.c1=function(e){return e==n.bf.Sf},e.prototype.qX=function(e){var t=this.o1.get(e);this.o1.delete(e),t&&t.xhr&&t.xhr.abort()},e.prototype.l1=function(e){this.logger.info("SUCCESS FROM FALLBACK FOR "+e.eg()+" ["+n.bf[e.type]+"]["+e.qf.Df+"] AFTER "+e.sg()+" [curr:"+e.ag().Gh()+" avg:"+this.Lh.Gh()+"]")},e.prototype.d1=function(e){},e.prototype.WX=function(){return this.Lh},e.prototype.u1=function(e){e.Xf()===h.vc.fc&&this.Lh.Uh(e.ag())},e}();t.RJ=l},function(e,t,r){"use strict";var i=r(4);r(60);var n=r(0),s=r(5),o=r(15),a=r(49),h=r(58),c=r(10),u=r(91),l=hive.services.protocol.IF.CustomerKey,p=r(8),d=r(14),f=r(6),g=r(1),E=r(2),v=f.he.Th,y=function(){function e(){this.f1=isNaN(d.HiveConfig.DebugLogs.TrackerLogs)?0:d.HiveConfig.DebugLogs.TrackerLogs,this.loggerId="[TRACKER] ",this.ZU=0,this.g1=0,this.E1=/([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{0,4}){5})/,this.v1=!0,this.Ng=n.Framework.resolve(n.Framework.V.F),this.ud=n.Framework.resolve(p.pc.sc),this.yX=n.Framework.resolve(o.qu.Mu)}return e.prototype.init=function(e){this.logger=n.Framework.resolve(n.Framework.V.R).log(e.sessionId),this.sessionId=e.sessionId,this.xJ=e.xJ,this.yD=e.yD,this.zM=e.zM,this.T1=e.mD,this.yX.m1(e.sessionId,this),this.I1=u.Xq.Jq},e.prototype.start=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];this.context=e,this.streamId=e.dJ.getContextId(),this.ticket=e.dJ.Sk(),this.vl=t},e.prototype.S1=function(e){this.R1=e},e.prototype.uX=function(){var e=this;this.nX(),this.w1=n.Framework.setInterval(function(){e.b1()},s.hh.zo.Yo),this.b1()},e.prototype.nX=function(){this.w1&&n.Framework.clearInterval(this.w1)},e.prototype.C1=function(){var e=this,t=i.defer(),r=new hive.services.protocol.IF.TrackerRequest,n=this.context.dJ,s=n.isLive()?StreamType.LIVE:StreamType.kK;r.sessionId=this.sessionId;var o=new l;return this.R1?(o.partnerId=this.R1.partnerId,o.customerId=this.R1.customerId):d.HiveConfig.ClientInfo.cu&&d.HiveConfig.ClientInfo.uu?(o.partnerId=d.HiveConfig.ClientInfo.cu,o.customerId=d.HiveConfig.ClientInfo.uu):(o.partnerId=this.ticket.up(),o.customerId=this.ticket.cp()),r.customerKey=o,r.streamType=s,r.contentId=this.yD.getContextId(),this.ud.getConnectivityInfo().then(function(t){e._1=t.getNetworkChanged().getPrivateIp(),e.yD.DH(e._1)}).fail(function(t){g.ErrorMonitor.ve().logError("Error getting connectivity info",e.loggerId,E.hs.Li._i)}).finally(function(){try{var i=new hive.snapshots.ConnectivityInfo;i.publicIp=e.IB,i.privateIp=e._1,r.info=e.P1(i,n),r.query=e.A1(n,r.info),t.resolve(r)}catch(r){g.ErrorMonitor.ve().logError("Error collecting the data for the tracker request",e.loggerId,E.hs.Li.Pi,r),t.reject("ERROR")}}).done(),t.Ss},e.prototype.O1=function(){var e=new Array;return this.I1==u.Xq.Jq?e.push(hive.services.protocol.IF.SF.RF):this.I1==u.Xq.AS?e.push(hive.services.protocol.IF.SF.bF):this.I1==u.Xq.nD?e.push(hive.services.protocol.IF.SF.wF):this.logger.warn("Wrong locality mode"),e},e.prototype.A1=function(e,t){var r=this,i=new hive.services.protocol.IF.TrackerQuery;try{return i.random=s.hh.Ja.Ka,t.externalAs&&!this.ZU&&(this.ZU=t.externalAs),t.internalAs&&!this.g1&&(this.g1=t.internalAs),i.rankings=this.O1(),i.asns=[],this.ZU>0&&this.N1(i.asns,hive.services.protocol.IF.CF.External,this.ZU,s.hh.Ja.Ya),this.g1>0&&(this.N1(i.asns,hive.services.protocol.IF.CF._F,this.g1,s.hh.Ja.Wa),i.watchers=[],e.lM().forEach(function(e){var t=r.D1(hive.services.protocol.IF.CF._F,r.g1,e,-1);i.watchers.push({key:t,value:1})}),i.streamers=[],this.yD.Uj().forEach(function(e,t){var n=r.D1(hive.services.protocol.IF.CF._F,r.g1,t,e.type==a.sD.nD?hive.services.protocol.IF.wc.Sc:-1);i.streamers.push({key:n,value:s.hh.Ja.za})})),i}catch(e){throw g.ErrorMonitor.ve().logError("Error preparing tracker query",this.loggerId,E.hs.Li.Ai,e),new Error(e)}},e.prototype.D1=function(e,t,r,i){var n=new hive.services.protocol.IF.TrackerBitrateQuery,s=new hive.services.protocol.IF.TrackerAsQuery;return s.asType=e,s.asn=t,n.bitrate=r,n.asn=s,-1!=i&&n.streamState,n},e.prototype.N1=function(e,t,r,i){var n=new hive.services.protocol.IF.TrackerAsQuery;n.asType=t,n.asn=r,e.push({key:n,value:i})},e.prototype.P1=function(e,t){var r=new hive.services.protocol.IF.TrackerPeerInfo;try{if(n.Framework.C()?r.guid=this.gd:r.guid=btoa(this.gd),r.timestamp=n.Framework.time(),r.nat=void 0,this.yD.Fj()&&(r.externalAs=this.yD.Fj()),this.yD.gk()&&(r.internalAs=this.yD.gk()),null!=e){r.publicIpString=e.publicIp;var i=new InetAddress;i.address=e.publicIp,r.publicIp=i,r.privateIpString=e.privateIp;var s=new InetAddress;s.address=e.privateIp,r.privateIp=s}if(!this.yD.ck()&&this.yD.yk()&&v?r.rankValue=1:r.rankValue=this.yD.L1(),this.context.dJ instanceof h.GM){r.streams=new Array;var o=t.PD();null!=o&&(r.watchingBitrate=o.bitrate);var c=t.JM();this.yD.Uj().forEach(function(e,t){if(e.b_){var i=new hive.services.protocol.IF.TrackerPeerStreamInfo;switch(i.bitrate=t,e.type){case a.sD.mc:i.state=hive.services.protocol.IF.wc.Ic;break;case a.sD.iD:i.state=hive.services.protocol.IF.wc.Rc;break;case a.sD.nD:i.state=hive.services.protocol.IF.wc.Sc}i.delta=c.KD(e.b_.A_(),t),r.streams.push(i)}})}return r}catch(e){throw g.ErrorMonitor.ve().logError("Error preparing tracker info",this.loggerId,E.hs.Li.Ni,e),new Error(e)}},e.prototype.b1=function(){var e=this;this.logger.debug(this.loggerId+" PREPARE REQUEST"),this.C1().then(function(t){var r=e.loggerId+"SENDING TRACKER REQUEST [ privateIp:"+t.info.privateIpString+" rank:"+t.info.rankValue+"]";switch(e.f1){case 0:default:e.logger.debug(r);break;case 1:e.logger.debug(r+" "+JSON.stringify(t));break;case 2:e.logger.debug(r,t);break;case 3:e.logger.debug(r+" "+JSON.stringify(t),t)}e.yX.M1(t)},function(t){g.ErrorMonitor.ve().logError("Error preparing the tracker request",e.loggerId,E.hs.Li.Ci)}).catch(function(t){g.ErrorMonitor.ve().logError("Error sending tracker request",e.loggerId,E.hs.Li.Di,t)})},e.prototype.F1=function(e){this.I1=e},e.prototype.KX=function(e){var t=this;try{switch(this.f1){case 1:this.logger.debug(this.loggerId+this.context.dJ.Sk()+" Tracker Response: "+JSON.stringify(e));break;case 2:this.logger.debug(this.loggerId+this.context.dJ.Sk()+" Tracker Response: ",e);break;case 3:this.logger.debug(this.loggerId+this.context.dJ.Sk()+" Tracker Response: "+JSON.stringify(e),e)}this.ZU=e.peerInfo.externalAs,this.g1=e.peerInfo.internalAs,this.IB=e.peerInfo.publicIpString,this._1=e.peerInfo.privateIpString,this.yD._H(this.IB),this.yD.U1(this.g1),this.yD.B1(this.ZU),this.ud.bH(this.IB,this._1,this.g1),this.logger.debug(this.loggerId+"Reporting from tracker public IP:"+this.IB+" private IP: "+this._1+" ExtAs:"+this.ZU+" inAs:"+this.g1),!this.yD.ck()&&this.yD.yk()&&v?this.T1.MG(!1):this.T1.H1(e.rankings,e.infos);var r=this.q1(e);this.vl.forEach(function(e){return e.gG(r,t.v1)}),this.v1=!1}catch(e){g.ErrorMonitor.ve().logError("Error handling the response",this.loggerId,E.hs.Li.ki,e)}},e.prototype.q1=function(e){for(var t=[],r=0,i=e.infos;r<i.length;r++){var n=i[r],s=new c.bc(c.Tc.yc,n);t.push(s)}return t},e.prototype.KG=function(e){},e.prototype.Ud=function(e){this.gd=e,this.logger.info(this.loggerId+"CONNECTED "+this.gd),this.T1.G1(),this.uX()},e.prototype.ej=function(){},e}();t.bJ=y},function(e,t,r){"use strict";var i=r(3),n=r(0),s=r(7),o=r(1),a=r(2),h=function(){function e(e,t){this.id=e,this.size=t}return e}(),c=function(){function e(){this.loggerId="[ObjectIndex] ",this.V1=new i,this.j1=new i,this.logger=n.Framework.resolve(n.Framework.V.R).log()}return e.prototype.put=function(e,t){try{var r=e.fragmentId,i=e.size;e.bitrate;this.V1.has(r)||(this.V1.set(r,new h(r,i)),this.j1.set(r,new Array)),this.j1.get(r).push(t)}catch(e){throw o.ErrorMonitor.ve().logError("Error adding new have in object index",this.loggerId,a.hs.Xn.zn,e),new Error(e)}},e.prototype.contains=function(e){return this.j1.has(e)},e.prototype.fk=function(e){return this.j1.get(e)},e.prototype.Q1=function(e){return this.V1.get(e)},e.prototype.Gj=function(e){var t=this;try{this.j1.forEach(function(r,i){s.rc.Kh(r,e,!1),0===r.length&&(t.j1.delete(i),t.V1.delete(i))})}catch(e){o.ErrorMonitor.ve().logError("Error removing haves send from a specific peer",this.loggerId,a.hs.Xn.Jn,e)}},e.prototype.Kq=function(){var e=this;this.j1.forEach(function(t,r){e.logger.debug("OBJIDX FR "+r+" PS "+t.map(function(e){return e.wj.yg.otherGuid}).reduce(function(e,t){return e+","+t}))})},e}();t.AJ=c},function(e,t,r){"use strict";var i=r(3),n=r(5),s=r(0),o=r(7),a=r(10),h=r(160),c=r(47),u=r(92),l=r(6),p=r(1),d=r(2),f=l.he.Th,g=function(){function e(){this.loggerId="[Membership] ",this.gd=null,this.K1=new i,this.kj=new i}return e.prototype.init=function(e){this.logger=s.Framework.resolve(s.Framework.V.R).log(e.sessionId),this.TD=e.TD,this.yD=e.yD,this.Y1=e.YM,(f||s.Framework.C()&&c.$N.XN)&&(this.QJ=e.QJ),this.start()},e.prototype.start=function(){this.W1=!0},e.prototype.stop=function(){this.W1=!1},e.prototype.gG=function(e,t){var r=this;try{if(this.W1){var i=[];e.forEach(function(e){var t=null;r.z1(),e.guid!=r.gd&&(e.type==a.Tc.yc?t=r.J1(e):f||s.Framework.C()&&c.$N.XN?(t=r.X1(e),r.QJ.aG(e).then(function(){r.TD.tj(r.kj.get(e.guid))}).fail(function(t){t&&t!=u.JG.EG&&(r.kj.delete(e.guid),p.ErrorMonitor.ve().logError("Error electing lan leader",r.loggerId,d.hs.yt.dt))})):t=r.X1(e)),t&&i.push(t.peerInfo.guid)}),this.SL(),t&&this.TD.hj(t),i.length>0&&this.logger.debug("DISCOVERED NEW "+i.length+"/"+e.length+": ["+i.join(", ")+"]")}}catch(e){p.ErrorMonitor.ve().logError("Error discovering peers",this.loggerId,d.hs.yt.pt,e)}},e.prototype.SL=function(){var e=this.K1.length+this.kj.length;this.Y1.Z1(e)},e.prototype.z1=function(){try{this.K1.length>=n.hh.Qa.Va&&this.e2(this.K1),this.kj.length>=n.hh.Qa.ja&&this.e2(this.kj)}catch(e){p.ErrorMonitor.ve().logError("Error clearing membership views",this.loggerId,d.hs.yt.ft,e)}},e.prototype.e2=function(e){var t=e.keys()[s.Framework.random()*this.K1.length];e.delete(t)},e.prototype.X1=function(e){var t=null;try{if(this.K1.has(e.guid)?(t=this.K1.get(e.guid),this.K1.delete(e.guid),this.kj.set(e.guid,t)):this.kj.has(e.guid)&&(t=this.kj.get(e.guid)),!t)return t=new h.t2(e),this.kj.set(e.guid,t),t;t.S1(e)}catch(e){return p.ErrorMonitor.ve().logError("Error adding peer to lan view",this.loggerId,d.hs.yt.gt,e),null}},e.prototype.J1=function(e){var t=null;try{if(this.kj.has(e.guid))this.X1(e);else{if(!this.K1.has(e.guid))return t=new h.t2(e),this.K1.set(e.guid,t),t;t=this.K1.get(e.guid),t.S1(e)}}catch(e){return p.ErrorMonitor.ve().logError("Error adding peer to random view",this.loggerId,d.hs.yt.Et,e),null}},e.prototype.cj=function(e,t){var r=[];try{return this.W1&&(f||s.Framework.C()&&c.$N.XN?r=o.rc.zh(this.K1.values()):(r=this.K1.values(),this.kj.forEach(function(e,t){r.push(e)}),r=o.rc.zh(r))),e?r:t?r.slice(0,t):r.slice(0,2*n.hh.No._o)}catch(e){return p.ErrorMonitor.ve().logError("Error sampling membership",this.loggerId,d.hs.yt.vt,e),[]}},e.prototype.Oj=function(e){return this.K1.has(e)?this.K1.get(e):this.kj.has(e)?this.kj.get(e):null},e.prototype.Ud=function(e){this.logger.info("MEMBERSHIP SERVER CONNECTED"),this.gd=e,this.yD.setId(this.gd)},e.prototype.ej=function(){},e.prototype.KG=function(e){this.logger.debug("Peer "+e+" disconnected"),this.K1.delete(e),this.kj.delete(e),this.SL()},e}();t.Qa=g},function(e,t,r){"use strict";var i=r(10),n=function(){function e(e){this.peerInfo=e}return e.prototype.Ij=function(){return this.peerInfo.type===i.Tc.W},e.prototype.S1=function(e){this.peerInfo.type==i.Tc.yc&&e.type==i.Tc.W?this.peerInfo.type=i.Tc.W:this.peerInfo.type==i.Tc.yc&&e.type==i.Tc.yc||this.peerInfo.type==i.Tc.W&&e.type==i.Tc.W?this.i2(this.peerInfo,e):this.peerInfo.type==i.Tc.W&&e.type==i.Tc.yc&&(this.i2(this.peerInfo,e),this.peerInfo.type=i.Tc.W)},e.prototype.zj=function(e){this.peerInfo.watchingBitrate=e},e.prototype.i2=function(e,t){e.internalAs=this.n2(e.internalAs,t.internalAs),e.externalAs=this.n2(e.externalAs,t.externalAs),e.nat=this.n2(e.nat,t.nat),e.bandwidth=this.n2(e.bandwidth,t.bandwidth),e.watchingBitrate=this.n2(e.watchingBitrate,t.watchingBitrate),e.privateIpString=this.n2(e.privateIpString,t.privateIpString),e.publicIpString=this.n2(e.publicIpString,t.publicIpString),e.rankValue=this.n2(e.rankValue,t.rankValue),e.timestamp=this.n2(e.timestamp,t.timestamp),t.isLeader&&(e.isLeader=this.n2(e.isLeader,t.isLeader)),t.streams&&(e.streams=t.streams)},e.prototype.n2=function(e,t){return e?t&&e!=t&&(e=t):t&&(e=t),e},e}();t.t2=n},function(e,t,r){(function(e){var i,n,s;/**
 * @license ProtoBuf.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/ProtoBuf.js for details
 */
!function(o){"use strict";function a(e){var t={};return t.s2=e,t.q_=e.q_||null,t.VERSION="4.0.0-b3",t.o2={},t.o2.a2=0,t.o2.h2=1,t.o2.c2=2,t.o2.u2=3,t.o2.l2=4,t.o2.d2=5,t.f2=[t.o2.a2,t.o2.h2,t.o2.d2],t.g2={int32:{name:"int32",E2:t.o2.a2,defaultValue:0},uint32:{name:"uint32",E2:t.o2.a2,defaultValue:0},sint32:{name:"sint32",E2:t.o2.a2,defaultValue:0},int64:{name:"int64",E2:t.o2.a2,defaultValue:t.q_?t.q_.ZERO:void 0},uint64:{name:"uint64",E2:t.o2.a2,defaultValue:t.q_?t.q_.tV:void 0},sint64:{name:"sint64",E2:t.o2.a2,defaultValue:t.q_?t.q_.ZERO:void 0},bool:{name:"bool",E2:t.o2.a2,defaultValue:!1},double:{name:"double",E2:t.o2.h2,defaultValue:0},string:{name:"string",E2:t.o2.c2,defaultValue:""},bytes:{name:"bytes",E2:t.o2.c2,defaultValue:null},fixed32:{name:"fixed32",E2:t.o2.d2,defaultValue:0},sfixed32:{name:"sfixed32",E2:t.o2.d2,defaultValue:0},fixed64:{name:"fixed64",E2:t.o2.h2,defaultValue:t.q_?t.q_.tV:void 0},sfixed64:{name:"sfixed64",E2:t.o2.h2,defaultValue:t.q_?t.q_.ZERO:void 0},float:{name:"float",E2:t.o2.d2,defaultValue:0},enum:{name:"enum",E2:t.o2.a2,defaultValue:0},message:{name:"message",E2:t.o2.c2,defaultValue:null},group:{name:"group",E2:t.o2.u2,defaultValue:null}},t.v2=[t.g2.int32,t.g2.sint32,t.g2.sfixed32,t.g2.uint32,t.g2.fixed32,t.g2.int64,t.g2.sint64,t.g2.sfixed64,t.g2.uint64,t.g2.fixed64,t.g2.bool,t.g2.string,t.g2.bytes],t.T2=1,t.m2=536870911,t.I2=!1,t.S2=!0,t.R2=!0,t.bv=function(){Object.create||(Object.create=function(e){function t(){}if(arguments.length>1)throw Error("Object.create polyfill only accepts the first parameter.");return t.prototype=e,new t});var e={};e.w2=!1;try{e.w2="function"==typeof r(16).b2&&"function"==typeof r(64).resolve}catch(e){}return e.C2=function(){for(var e=[function(){return new XMLHttpRequest},function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml3.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")}],t=null,r=0;r<e.length;r++){try{t=e[r]()}catch(e){continue}break}if(!t)throw Error("XMLHttpRequest is not supported");return t},e.fetch=function(t,i){if(i&&"function"!=typeof i&&(i=null),e.w2)if(i)r(16)._2(t,function(e,t){i(e?null:""+t)});else try{return r(16).b2(t)}catch(e){return null}else{var n=e.C2();if(n.open("GET",t,!!i),n.setRequestHeader("Accept","text/plain"),"function"==typeof n.overrideMimeType&&n.overrideMimeType("text/plain"),!i)return n.send(null),200==n.status||0==n.status&&"string"==typeof n.responseText?n.responseText:null;if(n.onreadystatechange=function(){4==n.readyState&&i(200==n.status||0==n.status&&"string"==typeof n.responseText?n.responseText:null)},4==n.readyState)return;n.send(null)}},e.isArray=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},e}(),t.Lang={OPEN:"{",P2:"}",A2:"[",O2:"]",N2:",",EQUAL:"=",D2:";",L2:",",M2:'"',F2:'"',U2:"'",B2:"'",H2:"(",q2:")",G2:"<",V2:">",j2:/[\s\{\}=;\[\],'"\(\)<>]/g,Q2:/^(?:required|optional|repeated|map)$/,tN:/^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/,zO:/^[a-zA-Z_][a-zA-Z_0-9]*$/,K2:/^[a-zA-Z][a-zA-Z_0-9]*$/,Y2:/^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,W2:/^(?:\.[a-zA-Z][a-zA-Z_0-9]*)+$/,z2:/^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/,J2:/^(?:[1-9][0-9]*|0)$/,X2:/^0[xX][0-9a-fA-F]+$/,Z2:/^0[0-7]+$/,e3:/^([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/,t3:/^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,r3:/^\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,i3:/\s/,STRING:/(?:"([^"\\]*(?:\\.[^"\\]*)*)")|(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g,BOOL:/^(?:true|false)$/i},t.n3=function(e,t){var r={},i=function(e){this.source=""+e,this.index=0,this.line=1,this.stack=[],this.s3=!1,this.o3=t.F2},n=i.prototype;n.qZ=function(){t.STRING.lastIndex=this.index-1;var e;if(null!==(e=t.STRING.exec(this.source))){var r=void 0!==e[1]?e[1]:e[2];return this.index=t.STRING.lastIndex,this.stack.push(this.o3),r}throw Error("Unterminated string at line "+this.line+", index "+this.index)},n.next=function(){if(this.stack.length>0)return this.stack.shift();if(this.index>=this.source.length)return null;if(this.s3)return this.s3=!1,this.qZ();var e,r;do{for(e=!1;t.i3.test(r=this.source.charAt(this.index));)if(this.index++,"\n"===r&&this.line++,this.index===this.source.length)return null;if("/"===this.source.charAt(this.index))if("/"===this.source.charAt(++this.index)){for(;"\n"!==this.source.charAt(this.index);)if(++this.index==this.source.length)return null;this.index++,this.line++,e=!0}else{if("*"!==this.source.charAt(this.index))throw Error("Unterminated comment at line "+this.line+": /"+this.source.charAt(this.index));for(r="";r+(r=this.source.charAt(this.index))!=="*/";)if(this.index++,"\n"===r&&this.line++,this.index===this.source.length)return null;this.index++,e=!0}}while(e);if(this.index===this.source.length)return null;var i=this.index;if(t.j2.lastIndex=0,t.j2.test(this.source.charAt(i)))++i;else for(++i;i<this.source.length&&!t.j2.test(this.source.charAt(i));)i++;var n=this.source.substring(this.index,this.index=i);return n===t.M2?(this.s3=!0,this.o3=t.F2):n===t.U2&&(this.s3=!0,this.o3=t.B2),n},n.Hk=function(){if(0===this.stack.length){var e=this.next();if(null===e)return null;this.stack.push(e)}return this.stack[0]},n.toString=function(){return"Tokenizer("+this.index+"/"+this.source.length+" at line "+this.line+")"},r.a3=i;var s=function(e){this.h3=new i(e)},o=s.prototype;return o.parse=function(){for(var e,t={name:"[ROOT]",package:null,messages:[],c3:[],imports:[],options:{},services:[]},r=!0;e=this.h3.next();)switch(e){case"package":if(!r||null!==t.package)throw Error("Unexpected package at line "+this.h3.line);t.package=this.u3(e);break;case"import":if(!r)throw Error("Unexpected import at line "+this.h3.line);t.imports.push(this.l3(e));break;case"message":this.d3(t,null,e),r=!1;break;case"enum":this.f3(t,e),r=!1;break;case"option":this.g3(t,e);break;case"service":this.E3(t,e);break;case"extend":this.v3(t,e);break;case"syntax":t.y3=this.T3(t);break;default:throw Error("Unexpected token at line "+this.h3.line+": "+e)}return delete t.name,t},o.m3=function(e){var r=1;if("-"==e.charAt(0)&&(r=-1,e=e.substring(1)),t.J2.test(e))return r*parseInt(e,10);if(t.X2.test(e))return r*parseInt(e.substring(2),16);if(t.Z2.test(e))return r*parseInt(e.substring(1),8);if(t.e3.test(e))return"inf"===e?r*(1/0):"nan"===e?NaN:r*parseFloat(e);throw Error("Illegal number at line "+this.h3.line+": "+(r<0?"-":"")+e)},o.I3=function(){var e,r,i="";do{if(r=this.h3.next(),i+=this.h3.next(),(e=this.h3.next())!==r)throw Error("Illegal end of string at line "+this.h3.line+": "+e);e=this.h3.Hk()}while(e===t.M2||e===t.U2);return i},o.S3=function(e,r){var i=-1,n=1;if("-"==e.charAt(0)&&(n=-1,e=e.substring(1)),t.J2.test(e))i=parseInt(e);else if(t.X2.test(e))i=parseInt(e.substring(2),16);else{if(!t.Z2.test(e))throw Error("Illegal id at line "+this.h3.line+": "+(n<0?"-":"")+e);i=parseInt(e.substring(1),8)}if(i=n*i|0,!r&&i<0)throw Error("Illegal id at line "+this.h3.line+": "+(n<0?"-":"")+e);return i},o.u3=function(e){if(e=this.h3.next(),!t.Y2.test(e))throw Error("Illegal package name at line "+this.h3.line+": "+e);var r=e;if((e=this.h3.next())!=t.D2)throw Error("Illegal end of package at line "+this.h3.line+": "+e);return r},o.l3=function(e){if(e=this.h3.Hk(),"public"===e&&(this.h3.next(),e=this.h3.Hk()),e!==t.M2&&e!==t.U2)throw Error("Illegal start of import at line "+this.h3.line+": "+e);var r=this.I3();if((e=this.h3.next())!==t.D2)throw Error("Illegal end of import at line "+this.h3.line+": "+e);return r},o.g3=function(e,r){r=this.h3.next();var i=!1;if(r==t.H2&&(i=!0,r=this.h3.next()),!t.Y2.test(r)&&!/google\.protobuf\./.test(r))throw Error("Illegal option name in message "+e.name+" at line "+this.h3.line+": "+r);var n=r;if(r=this.h3.next(),i){if(r!==t.q2)throw Error("Illegal end in message "+e.name+", option "+n+" at line "+this.h3.line+": "+r);n="("+n+")",r=this.h3.next(),t.W2.test(r)&&(n+=r,r=this.h3.next())}if(r!==t.EQUAL)throw Error("Illegal operator in message "+e.name+", option "+n+" at line "+this.h3.line+": "+r);var s;if((r=this.h3.Hk())===t.M2||r===t.U2)s=this.I3();else if(this.h3.next(),t.z2.test(r))s=this.m3(r,!0);else if(t.BOOL.test(r))s="true"===r;else{if(!t.Y2.test(r))throw Error("Illegal option value in message "+e.name+", option "+n+" at line "+this.h3.line+": "+r);s=r}if((r=this.h3.next())!==t.D2)throw Error("Illegal end of option in message "+e.name+", option "+n+" at line "+this.h3.line+": "+r);e.options[n]=s},o.R3=function(e,r){for(var i;;){if(null===(i=this.h3.next()))throw Error("Unexpected EOF in "+e.name+", "+r+" at line "+this.h3.line);if(i===t.D2)break}},o.E3=function(e,r){if(r=this.h3.next(),!t.zO.test(r))throw Error("Illegal service name at line "+this.h3.line+": "+r);var i=r,n={name:i,w3:{},options:{}};if((r=this.h3.next())!==t.OPEN)throw Error("Illegal start of service "+i+" at line "+this.h3.line+": "+r);do{if("option"===(r=this.h3.next()))this.g3(n,r);else if("rpc"===r)this.b3(n,r);else if(r!==t.P2)throw Error("Illegal type of service "+i+" at line "+this.h3.line+": "+r)}while(r!==t.P2);e.services.push(n)},o.b3=function(e,r){var i=r;if(r=this.h3.next(),!t.zO.test(r))throw Error("Illegal method name in service "+e.name+" at line "+this.h3.line+": "+r);var n=r,s={request:null,response:null,C3:!1,_3:!1,options:{}};if((r=this.h3.next())!==t.H2)throw Error("Illegal start of request type in service "+e.name+"#"+n+" at line "+this.h3.line+": "+r);if(r=this.h3.next(),"stream"===r.toLowerCase()&&(s.C3=!0,r=this.h3.next()),!t.Y2.test(r))throw Error("Illegal request type in service "+e.name+"#"+n+" at line "+this.h3.line+": "+r);if(s.request=r,(r=this.h3.next())!=t.q2)throw Error("Illegal end of request type in service "+e.name+"#"+n+" at line "+this.h3.line+": "+r);if(r=this.h3.next(),"returns"!==r.toLowerCase())throw Error("Illegal delimiter in service "+e.name+"#"+n+" at line "+this.h3.line+": "+r);if((r=this.h3.next())!=t.H2)throw Error("Illegal start of response type in service "+e.name+"#"+n+" at line "+this.h3.line+": "+r);if(r=this.h3.next(),"stream"===r.toLowerCase()&&(s._3=!0,r=this.h3.next()),s.response=r,(r=this.h3.next())!==t.q2)throw Error("Illegal end of response type in service "+e.name+"#"+n+" at line "+this.h3.line+": "+r);if((r=this.h3.next())===t.OPEN){do{if("option"===(r=this.h3.next()))this.g3(s,r);else if(r!==t.P2)throw Error("Illegal start of option inservice "+e.name+"#"+n+" at line "+this.h3.line+": "+r)}while(r!==t.P2);this.h3.Hk()===t.D2&&this.h3.next()}else if(r!==t.D2)throw Error("Illegal delimiter in service "+e.name+"#"+n+" at line "+this.h3.line+": "+r);void 0===e[i]&&(e[i]={}),e[i][n]=s},o.d3=function(e,r,i){var n={},s="group"===i;if(i=this.h3.next(),!t.zO.test(i))throw Error("Illegal "+(s?"group":"message")+" name"+(e?" in message "+e.name:"")+" at line "+this.h3.line+": "+i);if(n.name=i,s){if((i=this.h3.next())!==t.EQUAL)throw Error("Illegal id assignment after group "+n.name+" at line "+this.h3.line+": "+i);i=this.h3.next();try{r.id=this.S3(i)}catch(e){throw Error("Illegal field id value for group "+n.name+"#"+r.name+" at line "+this.h3.line+": "+i)}n.P3=!0}if(n.fields=[],n.c3=[],n.messages=[],n.options={},n.A3={},i=this.h3.next(),i===t.A2&&r&&(this.O3(n,r,i),i=this.h3.next()),i!==t.OPEN)throw Error("Illegal start of "+(s?"group":"message")+" "+n.name+" at line "+this.h3.line+": "+i);for(;;){if((i=this.h3.next())===t.P2){i=this.h3.Hk(),i===t.D2&&this.h3.next();break}if(t.Q2.test(i))this.N3(n,i);else if("oneof"===i)this.D3(n,i);else if("enum"===i)this.f3(n,i);else if("message"===i)this.d3(n,null,i);else if("option"===i)this.g3(n,i);else if("extensions"===i)n.extensions=this.L3(n,i);else if("extend"===i)this.v3(n,i);else{if(!t.Y2.test(i))throw Error("Illegal token in message "+n.name+" at line "+this.h3.line+": "+i);this.N3(n,"optional",i)}}return e.messages.push(n),n},o.N3=function(e,r,i){var n={},s=null;if(n.rule=r,n.options={},r=void 0!==i?i:this.h3.next(),"map"===n.rule){if(r!==t.G2)throw Error("Illegal token in message "+e.name+" at line "+this.h3.line+": "+r);if(r=this.h3.next(),!t.tN.test(r)&&!t.Y2.test(r))throw Error("Illegal token in message "+e.name+" at line "+this.h3.line+": "+r);if(n.keytype=r,(r=this.h3.next())!==t.L2)throw Error("Illegal token in message "+e.name+" at line "+this.h3.line+": "+r);if(r=this.h3.next(),!t.tN.test(r)&&!t.Y2.test(r))throw Error("Illegal token in message "+e.name+" at line "+this.h3.line+": "+r);if(n.type=r,(r=this.h3.next())!==t.V2)throw Error("Illegal token in message "+e.name+" at line "+this.h3.line+": "+r);if(r=this.h3.next(),!t.zO.test(r))throw Error("Illegal token in message "+e.name+" at line "+this.h3.line+": "+r);if(n.name=r,(r=this.h3.next())!==t.EQUAL)throw Error("Illegal token in field "+e.name+"#"+n.name+" at line "+this.line+": "+r);r=this.h3.next();try{n.id=this.S3(r)}catch(t){throw Error("Illegal field id in message "+e.name+"#"+n.name+" at line "+this.h3.line+": "+r)}if(r=this.h3.next(),r===t.A2&&(this.O3(e,n,r),r=this.h3.next()),r!==t.D2)throw Error("Illegal delimiter in message "+e.name+"#"+n.name+" at line "+this.h3.line+": "+r)}else if("group"===r){if(s=this.d3(e,n,r),!/^[A-Z]/.test(s.name))throw Error("Group names must start with a capital letter");n.type=s.name,n.name=s.name.toLowerCase(),r=this.h3.Hk(),r===t.D2&&this.h3.next()}else{if(!t.tN.test(r)&&!t.Y2.test(r))throw Error("Illegal field type in message "+e.name+" at line "+this.h3.line+": "+r);if(n.type=r,r=this.h3.next(),!t.zO.test(r))throw Error("Illegal field name in message "+e.name+" at line "+this.h3.line+": "+r);if(n.name=r,(r=this.h3.next())!==t.EQUAL)throw Error("Illegal token in field "+e.name+"#"+n.name+" at line "+this.h3.line+": "+r);r=this.h3.next();try{n.id=this.S3(r)}catch(t){throw Error("Illegal field id in message "+e.name+"#"+n.name+" at line "+this.h3.line+": "+r)}if(r=this.h3.next(),r===t.A2&&(this.O3(e,n,r),r=this.h3.next()),r!==t.D2)throw Error("Illegal delimiter in message "+e.name+"#"+n.name+" at line "+this.h3.line+": "+r)}return e.fields.push(n),n},o.D3=function(e,r){if(r=this.h3.next(),!t.zO.test(r))throw Error("Illegal oneof name in message "+e.name+" at line "+this.h3.line+": "+r);var i,n=r,s=[];if((r=this.h3.next())!==t.OPEN)throw Error("Illegal start of oneof "+n+" at line "+this.h3.line+": "+r);for(;this.h3.Hk()!==t.P2;)i=this.N3(e,"optional"),i.M3=n,s.push(i.id);this.h3.next(),e.A3[n]=s},o.O3=function(e,r,i){for(var n=!0;;){if((i=this.h3.next())===t.O2)break;if(i===t.N2){if(n)throw Error("Illegal start of options in message "+e.name+"#"+r.name+" at line "+this.h3.line+": "+i);i=this.h3.next()}this.F3(e,r,i),n=!1}},o.F3=function(e,r,i){var n=!1;if(i===t.H2&&(i=this.h3.next(),n=!0),!t.Y2.test(i))throw Error("Illegal field option in "+e.name+"#"+r.name+" at line "+this.h3.line+": "+i);var s=i;if(i=this.h3.next(),n){if(i!==t.q2)throw Error("Illegal delimiter in "+e.name+"#"+r.name+" at line "+this.h3.line+": "+i);s="("+s+")",i=this.h3.next(),t.W2.test(i)&&(s+=i,i=this.h3.next())}if(i!==t.EQUAL)throw Error("Illegal token in "+e.name+"#"+r.name+" at line "+this.h3.line+": "+i);var o;if((i=this.h3.Hk())===t.M2||i===t.U2)o=this.I3();else if(t.z2.test(i,!0))o=this.m3(this.h3.next(),!0);else if(t.BOOL.test(i))o="true"===this.h3.next().toLowerCase();else{if(!t.Y2.test(i))throw Error("Illegal value in message "+e.name+"#"+r.name+", option "+s+" at line "+this.h3.line+": "+i);o=this.h3.next()}r.options[s]=o},o.f3=function(e,r){var i={};if(r=this.h3.next(),!t.zO.test(r))throw Error("Illegal enum name in message "+e.name+" at line "+this.h3.line+": "+r);if(i.name=r,(r=this.h3.next())!==t.OPEN)throw Error("Illegal start of enum "+i.name+" at line "+this.h3.line+": "+r);for(i.values=[],i.options={};;){if((r=this.h3.next())===t.P2){r=this.h3.Hk(),r===t.D2&&this.h3.next();break}if("option"==r)this.g3(i,r);else{if(!t.zO.test(r))throw Error("Illegal name in enum "+i.name+" at line "+this.h3.line+": "+r);this.U3(i,r)}}e.c3.push(i)},o.U3=function(e,r){var i={};if(i.name=r,(r=this.h3.next())!==t.EQUAL)throw Error("Illegal token in enum "+e.name+" at line "+this.h3.line+": "+r);r=this.h3.next();try{i.id=this.S3(r,!0)}catch(t){throw Error("Illegal id in enum "+e.name+" at line "+this.h3.line+": "+r)}if(e.values.push(i),(r=this.h3.next())===t.A2){var n={options:{}};this.O3(e,n,r),r=this.h3.next()}if(r!==t.D2)throw Error("Illegal delimiter in enum "+e.name+" at line "+this.h3.line+": "+r)},o.L3=function(r,i){var n=[];if(i=this.h3.next(),"min"===i?n.push(e.T2):"max"===i?n.push(e.m2):n.push(this.m3(i)),"to"!==(i=this.h3.next()))throw Error("Illegal extensions delimiter in message "+r.name+" at line "+this.h3.line+": "+i);if(i=this.h3.next(),"min"===i?n.push(e.T2):"max"===i?n.push(e.m2):n.push(this.m3(i)),(i=this.h3.next())!==t.D2)throw Error("Illegal extensions delimiter in message "+r.name+" at line "+this.h3.line+": "+i);return n},o.v3=function(e,r){if(r=this.h3.next(),!t.Y2.test(r))throw Error("Illegal message name at line "+this.h3.line+": "+r);var i={};if(i.B3=r,i.fields=[],(r=this.h3.next())!==t.OPEN)throw Error("Illegal start of extend "+i.name+" at line "+this.h3.line+": "+r);for(;;){if((r=this.h3.next())===t.P2){r=this.h3.Hk(),r==t.D2&&this.h3.next();break}if(t.Q2.test(r))this.N3(i,r);else{if(!t.Y2.test(r))throw Error("Illegal token in extend "+i.name+" at line "+this.h3.line+": "+r);this.N3(i,"optional",r)}}return e.messages.push(i),i},o.T3=function(e){var r=this.h3.next();if(r!==t.EQUAL)throw Error("Illegal token at line "+this.h3.line+": "+r);if((r=this.h3.Hk())!==t.M2&&r!==t.U2)throw Error("Illegal token at line "+this.h3.line+": "+r);var i=this.I3();if((r=this.h3.next())!==t.D2)throw Error("Illegal token at line "+this.h3.line+": "+r);return i},o.toString=function(){return"Parser"},r.R0=s,r}(t,t.Lang),t.H3=function(t){function r(r){if("string"==typeof r&&(r=t.g2[r]),void 0===r.defaultValue)throw Error("default value for type "+r.name+" is not supported");return r==t.g2.bytes?new e(0):r.defaultValue}function i(e,r){if(e&&"number"==typeof e.low&&"number"==typeof e.high&&"boolean"==typeof e.FP&&e.low===e.low&&e.high===e.high)return new t.q_(e.low,e.high,void 0===r?e.FP:r);if("string"==typeof e)return t.q_.kE(e,r||!1,10);if("number"==typeof e)return t.q_.DE(e,r||!1);throw Error("not convertible to Long")}function n(e,r){var i=r.PP(),s=7&i,o=i>>>3;switch(s){case t.o2.a2:do{i=r.Z_()}while(128==(128&i));break;case t.o2.h2:r.offset+=8;break;case t.o2.c2:i=r.PP(),r.offset+=i;break;case t.o2.u2:n(o,r);break;case t.o2.l2:if(o===e)return!1;throw Error("Illegal GROUPEND after unknown group: "+o+" ("+e+" expected)");case t.o2.d2:r.offset+=4;break;default:throw Error("Illegal wire type in unknown group "+e+": "+s)}return!0}var s={},o=function(e,t,r){this.x3=e,this.parent=t,this.name=r,this.className},a=o.prototype;a.q3=function(){for(var e=this.name,t=this;;){if(null==(t=t.parent))break;e=t.name+"."+e}return e},a.toString=function(e){return(e?this.className+" ":"")+this.q3()},a.Xg=function(){throw Error(this.toString(!0)+" cannot be built directly")},s.G3=o;var h=function(e,t,r,i,n){o.call(this,e,t,r),this.className="Namespace",this.children=[],this.options=i||{},this.y3=n||"proto2"},c=h.prototype=Object.create(o.prototype);c.V3=function(e){if(null==(e=e||null))return this.children.slice();for(var t=[],r=0,i=this.children.length;r<i;++r)this.children[r]instanceof e&&t.push(this.children[r]);return t},c.j3=function(e){var t;if(t=this.Q3(e.name))if(t instanceof p.K3&&t.name!==t.Y3&&null===this.Q3(t.Y3))t.name=t.Y3;else{if(!(e instanceof p.K3&&e.name!==e.Y3&&null===this.Q3(e.Y3)))throw Error("Duplicate name in namespace "+this.toString(!0)+": "+e.name);e.name=e.Y3}this.children.push(e)},c.Q3=function(e){for(var t="number"==typeof e?"id":"name",r=0,i=this.children.length;r<i;++r)if(this.children[r][t]===e)return this.children[r];return null},c.resolve=function(e,t){var r="string"==typeof e?e.split("."):e,i=this,n=0;if(""===r[n]){for(;null!==i.parent;)i=i.parent;n++}var o;do{do{if(!(o=i.Q3(r[n]))||!(o instanceof s.G3)||t&&o instanceof s.Jd.K3){i=null;break}i=o,n++}while(n<r.length);if(null!=i)break;if(null!==this.parent)return this.parent.resolve(e,t)}while(null!=i);return i},c.W3=function(e){var t=[],r=e;do{t.unshift(r.name),r=r.parent}while(null!==r);for(var i=1;i<=t.length;i++){var n=t.slice(t.length-i);if(e===this.resolve(n,!(e instanceof s.Jd.K3)))return n.join(".")}return e.q3()},c.Xg=function(){for(var e,t={},r=this.children,i=0,n=r.length;i<n;++i)(e=r[i])instanceof h&&(t[e.name]=e.Xg());return Object.defineProperty&&Object.defineProperty(t,"$options",{value:this.z3()}),t},c.z3=function(){for(var e={},t=Object.keys(this.options),r=0,i=t.length;r<i;++r){var n=t[r],s=this.options[t[r]];e[n]=s}return e},c.J3=function(e){return void 0===e?this.options:void 0!==this.options[e]?this.options[e]:null},s.X3=h;var u=function(e,r,i,n){if(this.type=e,this.Z3=r,this.e4=i,this.y3=n,i&&t.v2.indexOf(e)<0)throw Error("Invalid map key type: "+e.name)},l=u.prototype;l.t4=r,l.r4=function(r){var n=function(e,t){throw Error("Illegal value for "+this.toString(!0)+" of type "+this.type.name+": "+e+" ("+t+")")}.bind(this);switch(this.type){case t.g2.int32:case t.g2.sint32:case t.g2.sfixed32:return("number"!=typeof r||r===r&&r%1!=0)&&n(typeof r,"not an integer"),r>4294967295?0|r:r;case t.g2.uint32:case t.g2.fixed32:return("number"!=typeof r||r===r&&r%1!=0)&&n(typeof r,"not an integer"),r<0?r>>>0:r;case t.g2.int64:case t.g2.sint64:case t.g2.sfixed64:if(t.q_)try{return i(r,!1)}catch(e){n(typeof r,e.message)}else n(typeof r,"requires Long.js");case t.g2.uint64:case t.g2.fixed64:if(t.q_)try{return i(r,!0)}catch(e){n(typeof r,e.message)}else n(typeof r,"requires Long.js");case t.g2.bool:return"boolean"!=typeof r&&n(typeof r,"not a boolean"),r;case t.g2.float:case t.g2.double:return"number"!=typeof r&&n(typeof r,"not a number"),r;case t.g2.string:return"string"==typeof r||r&&r instanceof String||n(typeof r,"not a string"),""+r;case t.g2.bytes:return e.V_(r)?r:e.wrap(r,"base64");case t.g2.enum:var s=this.Z3.V3(t.H3.n4.i4);for(a=0;a<s.length;a++){if(s[a].name==r)return s[a].id;if(s[a].id==r)return s[a].id}if("proto3"===this.y3)return("number"!=typeof r||r===r&&r%1!=0)&&n(typeof r,"not an integer"),(r>4294967295||r<0)&&n(typeof r,"not in range for uint32"),r;n(r,"not a valid enum value");case t.g2.group:case t.g2.message:if(r&&"object"==typeof r||n(typeof r,"object expected"),r instanceof this.Z3.s4)return r;if(r instanceof t.o4.Jd){var o={};for(var a in r)r.hasOwnProperty(a)&&(o[a]=r[a]);r=o}return new this.Z3.s4(r)}throw Error("[INTERNAL] Illegal value for "+this.toString(!0)+": "+r+" (undefined type "+this.type+")")},l.a4=function(r,i){if(null===i)return 0;var n;switch(this.type){case t.g2.int32:return i<0?e.DP(i):e.RP(i);case t.g2.uint32:return e.RP(i);case t.g2.sint32:return e.RP(e.wP(i));case t.g2.fixed32:case t.g2.sfixed32:case t.g2.float:return 4;case t.g2.int64:case t.g2.uint64:return e.DP(i);case t.g2.sint64:return e.DP(e.MP(i));case t.g2.fixed64:case t.g2.sfixed64:return 8;case t.g2.bool:return 1;case t.g2.enum:return e.RP(i);case t.g2.double:return 8;case t.g2.string:return n=e.tA(i),e.RP(n)+n;case t.g2.bytes:if(i.vA()<0)throw Error("Illegal value for "+this.toString(!0)+": "+i.vA()+" bytes remaining");return e.RP(i.vA())+i.vA();case t.g2.message:return n=this.Z3.h4(i),e.RP(n)+n;case t.g2.group:return(n=this.Z3.h4(i))+e.RP(r<<3|t.o2.l2)}throw Error("[INTERNAL] Illegal value to encode in "+this.toString(!0)+": "+i+" (unknown type)")},l.c4=function(r,i,n){if(null===i)return n;switch(this.type){case t.g2.int32:i<0?n.GP(i):n.CP(i);break;case t.g2.uint32:n.CP(i);break;case t.g2.sint32:n._P(i);break;case t.g2.fixed32:n.hP(i);break;case t.g2.sfixed32:n.oP(i);break;case t.g2.int64:case t.g2.uint64:n.GP(i);break;case t.g2.sint64:n.VP(i);break;case t.g2.fixed64:n.fP(i);break;case t.g2.sfixed64:n.uP(i);break;case t.g2.bool:"string"==typeof i?n.CP("false"===i.toLowerCase()?0:!!i):n.CP(i?1:0);break;case t.g2.enum:n.CP(i);break;case t.g2.float:n.EP(i);break;case t.g2.double:n.mP(i);break;case t.g2.string:n.sA(i);break;case t.g2.bytes:if(i.vA()<0)throw Error("Illegal value for "+this.toString(!0)+": "+i.vA()+" bytes remaining");var s=i.offset;n.CP(i.vA()),n.append(i),i.offset=s;break;case t.g2.message:var o=(new e).lA();this.Z3.encode(i,o),n.CP(o.offset),n.append(o.xg());break;case t.g2.group:this.Z3.encode(i,n),n.CP(r<<3|t.o2.l2);break;default:throw Error("[INTERNAL] Illegal value to encode in "+this.toString(!0)+": "+i+" (unknown type)")}return n},l.decode=function(e,r,i){if(r!=this.type.E2)throw Error("Unexpected wire type for element");var n,s;switch(this.type){case t.g2.int32:return 0|e.PP();case t.g2.uint32:return e.PP()>>>0;case t.g2.sint32:return 0|e.OP();case t.g2.fixed32:return e.cP()>>>0;case t.g2.sfixed32:return 0|e.aP();case t.g2.int64:return e.jP();case t.g2.uint64:return e.jP().BP();case t.g2.sint64:return e.QP();case t.g2.fixed64:return e.gP();case t.g2.sfixed64:return e.pP();case t.g2.bool:return!!e.PP();case t.g2.enum:return e.PP();case t.g2.float:return e.TP();case t.g2.double:return e.E_();case t.g2.string:return e.oA();case t.g2.bytes:if(s=e.PP(),e.vA()<s)throw Error("Illegal number of bytes for "+this.toString(!0)+": "+s+" required but got only "+e.vA());return n=e.clone(),n.F_=n.offset+s,e.offset+=s,n;case t.g2.message:return s=e.PP(),this.Z3.decode(e,s);case t.g2.group:return this.Z3.decode(e,-1,i)}throw Error("[INTERNAL] Illegal decode type")},l.u4=function(r){if(!this.e4)throw Error("valueFromString() called on non-map-key element");switch(this.type){case t.g2.int32:case t.g2.sint32:case t.g2.sfixed32:case t.g2.uint32:case t.g2.fixed32:return this.r4(parseInt(r));case t.g2.int64:case t.g2.sint64:case t.g2.sfixed64:case t.g2.uint64:case t.g2.fixed64:return this.r4(r);case t.g2.bool:return"true"===r;case t.g2.string:return this.r4(r);case t.g2.bytes:return e.K_(r)}},l.l4=function(e){if(!this.e4)throw Error("valueToString() called on non-map-key element");return this.type===t.g2.bytes?e.toString("binary"):e.toString()},s.Element=u;var p=function(e,r,i,n,s,o){h.call(this,e,r,i,n,o),this.className="Message",this.extensions=[t.T2,t.m2],this.s4=null,this.P3=!!s,this.d4=null,this.f4=null,this.g4=null},d=p.prototype=Object.create(h.prototype);d.Xg=function(r){if(this.s4&&!r)return this.s4;var i=function(t,r){function i(r,n,s,o,a){var h=void 0;if(null===r||"object"!=typeof r){if(o==t.g2.enum)for(var c=a.V3(t.H3.n4.i4),u=0;u<c.length;u++)if(c[u].id===r){r=c[u].name;break}h=r}else if(r instanceof e)h=n?r.mA():r.yA();else if(t.bv.isArray(r)){var l=r;h=[];for(var p=0;p<l.length;p++)h.push(i(l[p],n,s,o,a))}else if(r instanceof t.Map){var d=r.entries();h={};for(var f=d.next();!f.done;f=d.next())h[r.E4.l4(f.value[0])]=i(f.value[1],n,s,r.v4.type,r.v4.Z3)}else if(r instanceof t.q_)h=s?r.toString():new t.q_(r);else{h={};var g=r.y4,E=void 0;for(var u in r)if(r.hasOwnProperty(u)){var v=r[u];g&&(E=g.Q3(u)),h[u]=i(v,n,s,E.type,E.Z3)}}return h}var n=r.V3(t.H3.Jd.K3),s=r.V3(t.H3.Jd.T4),o=function(i,o){t.o4.Jd.call(this);for(var a=0,h=s.length;a<h;++a)this[s[a].name]=null;for(a=0,h=n.length;a<h;++a){var c=n[a];this[c.name]=c.repeated?[]:c.map?new t.Map(c):null,!c.required&&"proto3"!==r.y3||null===c.defaultValue||(this[c.name]=c.defaultValue)}if(arguments.length>0){var u;if(1!==arguments.length||"object"!=typeof i||"function"==typeof i.encode||t.bv.isArray(i)||i instanceof t.Map||i instanceof e||i instanceof ArrayBuffer||t.q_&&i instanceof t.q_)for(a=0,h=arguments.length;a<h;++a)void 0!==(u=arguments[a])&&this.m4(n[a].name,u);else this.m4(i)}},a=o.prototype=Object.create(t.o4.Jd.prototype);a.add=function(e,i,n){var s=r.g4[e];if(!n){if(!s)throw Error(this+"#"+e+" is undefined");if(!(s instanceof t.H3.Jd.K3))throw Error(this+"#"+e+" is not a field: "+s.toString(!0));if(!s.repeated)throw Error(this+"#"+e+" is not a repeated field")}null===this[s.name]&&(this[s.name]=[]),this[s.name].push(n?i:s.r4(i,!0))},a.I4=a.add,a.set=function(e,i,n){if(e&&"object"==typeof e){n=i;for(var s in e)e.hasOwnProperty(s)&&void 0!==(i=e[s])&&this.m4(s,i,n);return this}var o=r.g4[e];if(n)this[o.name]=i;else{if(!o)throw Error(this+"#"+e+" is not a field: undefined");if(!(o instanceof t.H3.Jd.K3))throw Error(this+"#"+e+" is not a field: "+o.toString(!0));this[o.name]=i=o.r4(i)}return o.M3&&(null!==i?(null!==this[o.M3.name]&&(this[this[o.M3.name]]=null),this[o.M3.name]=o.name):o.M3.name===e&&(this[o.M3.name]=null)),this},a.m4=a.set,a.get=function(e,i){if(i)return this[e];var n=r.g4[e];if(!(n&&n instanceof t.H3.Jd.K3))throw Error(this+"#"+e+" is not a field: undefined");if(!(n instanceof t.H3.Jd.K3))throw Error(this+"#"+e+" is not a field: "+n.toString(!0));return this[n.name]},a.S4=a.get;for(var h=0;h<n.length;h++){var c=n[h];c instanceof t.H3.Jd.R4||r.x3.options.S2&&function(e){var t=e.Y3.replace(/(_[a-zA-Z])/g,function(e){return e.toUpperCase().replace("_","")});t=t.substring(0,1).toUpperCase()+t.substring(1);var i=e.Y3.replace(/([A-Z])/g,function(e){return"_"+e}),n=function(t,r){return this[e.name]=r?t:e.r4(t),this},s=function(){return this[e.name]};null===r.Q3("set"+t)&&(a["set"+t]=n),null===r.Q3("set_"+i)&&(a["set_"+i]=n),null===r.Q3("get"+t)&&(a["get"+t]=s),null===r.Q3("get_"+i)&&(a["get_"+i]=s)}(c)}a.encode=function(t,i){"boolean"==typeof t&&(i=t,t=void 0);var n=!1;t||(t=new e,n=!0);var s=t.U_;try{return r.encode(this,t.lA(),i),(n?t.xg():t).lA(s)}catch(e){throw t.lA(s),e}},a.h4=function(){return r.h4(this)},a.w4=function(t){var i=!1;t||(t=new e,i=!0);var n=(new e).lA();return r.encode(this,n).xg(),t.CP(n.vA()),t.append(n),i?t.xg():t},a.b4=function(){try{return this.encode().tc()}catch(e){throw e.C4&&(e.C4=e.C4.tc()),e}},a.tc=a.b4,a._4=function(){try{return this.encode().yA()}catch(e){throw e.C4&&(e.C4=e.C4.yA()),e}},a.yA=a._4,a.P4=function(){try{return this.encode().mA()}catch(e){throw e.C4&&(e.C4=e.C4.mA()),e}},a.mA=a.P4,a.A4=function(){try{return this.encode().IA()}catch(e){throw e.C4&&(e.C4=e.C4.IA()),e}},a.IA=a.A4,a.O4=function(e,r){return i(this,!!e,!!r,t.g2.message,this.y4)},a.N4=function(){return JSON.stringify(i(this,!0,!0,t.g2.message,this.y4))},o.decode=function(t,i){"string"==typeof t&&(t=e.wrap(t,i||"base64")),t=t instanceof e?t:e.wrap(t);var n=t.U_;try{var s=r.decode(t.lA());return t.lA(n),s}catch(e){throw t.lA(n),e}},o.D4=function(t,i){if("string"==typeof t&&(t=e.wrap(t,i||"base64")),t=t instanceof e?t:e.wrap(t),t.vA()<1)return null;var n=t.offset,s=t.PP();if(t.vA()<s)return t.offset=n,null;try{var o=r.decode(t.slice(t.offset,t.offset+s).lA());return t.offset+=s,o}catch(e){throw t.offset+=s,e}},o.L4=function(e){return o.decode(e,"base64")},o.M4=function(e){return o.decode(e,"hex")},o.F4=function(e){return new o(JSON.parse(e))},a.toString=function(){return r.toString()};return Object.defineProperty&&(Object.defineProperty(o,"$options",{value:r.z3()}),Object.defineProperty(a,"$options",{value:o.U4}),Object.defineProperty(o,"$type",{value:r}),Object.defineProperty(a,"$type",{value:r})),o}(t,this);this.d4=[],this.f4={},this.g4={};for(var n,s=0,o=this.children.length;s<o;s++)if((n=this.children[s])instanceof y)i[n.name]=n.Xg();else if(n instanceof p)i[n.name]=n.Xg();else if(n instanceof p.K3)n.Xg(),this.d4.push(n),this.f4[n.id]=n,this.g4[n.name]=n;else if(!(n instanceof p.T4||n instanceof m))throw Error("Illegal reflect child of "+this.toString(!0)+": "+children[s].toString(!0));return this.s4=i},d.encode=function(e,t,r){for(var i,n,s=null,o=0,a=this.d4.length;o<a;++o)i=this.d4[o],n=e[i.name],i.required&&null===n?null===s&&(s=i):i.encode(r?n:i.r4(n),t);if(null!==s){var h=Error("Missing at least one required field for "+this.toString(!0)+": "+s);throw h.C4=t,h}return t},d.h4=function(e){for(var t,r,i=0,n=0,s=this.d4.length;n<s;++n){if(t=this.d4[n],r=e[t.name],t.required&&null===r)throw Error("Missing at least one required field for "+this.toString(!0)+": "+t);i+=t.h4(r)}return i},d.decode=function(e,r,i){r="number"==typeof r?r:-1;for(var s,o,a,h,c=e.offset,u=new this.s4;e.offset<c+r||-1===r&&e.vA()>0;){if(s=e.PP(),o=7&s,a=s>>>3,o===t.o2.l2){if(a!==i)throw Error("Illegal group end indicator for "+this.toString(!0)+": "+a+" ("+(i?i+" expected":"not a group")+")");break}if(h=this.f4[a])if(h.repeated&&!h.options.B4)u[h.name].push(h.decode(o,e));else if(h.map){var l=h.decode(o,e);u[h.name].set(l[0],l[1])}else u[h.name]=h.decode(o,e),h.M3&&(null!==this[h.M3.name]&&(this[this[h.M3.name]]=null),u[h.M3.name]=h.name);else switch(o){case t.o2.a2:e.PP();break;case t.o2.d2:e.offset+=4;break;case t.o2.h2:e.offset+=8;break;case t.o2.c2:var p=e.PP();e.offset+=p;break;case t.o2.u2:for(;n(a,e););break;default:throw Error("Illegal wire type for unknown field "+a+" in "+this.toString(!0)+"#decode: "+o)}}for(var d=0,f=this.d4.length;d<f;++d)if(h=this.d4[d],null===u[h.name]){if(h.required){var g=Error("Missing at least one required field for "+this.toString(!0)+": "+h.name);throw g.H4=u,g}t.R2&&null!==h.defaultValue&&(u[h.name]=h.defaultValue)}return u},s.Jd=p;var f=function(e,t,r,i,n,s,a,h,c,u){o.call(this,e,t,s),this.className="Message.Field",this.required="required"===r,this.repeated="repeated"===r,this.map="map"===r,this.x4=i||null,this.type=n,this.Z3=null,this.id=a,this.options=h||{},this.defaultValue=null,this.M3=c||null,this.y3=u||"proto2",this.Y3=this.name,this.q4=null,this.G4=null,!this.x3.options.I2||this instanceof p.R4||(this.name=f.V4(this.name))};f.V4=function(e){return e.replace(/_([a-zA-Z])/g,function(e,t){return t.toUpperCase()})};var g=f.prototype=Object.create(o.prototype);g.Xg=function(){this.q4=new u(this.type,this.Z3,!1,this.y3),this.map&&(this.G4=new u(this.x4,void 0,!0,this.y3)),this.defaultValue=void 0!==this.options.default?this.r4(this.options.default):null,"proto3"!==this.y3||this.repeated||this.map||(this.defaultValue=this.q4.t4(this.type))},g.r4=function(e,r){r=r||!1;var i=function(e,t){throw Error("Illegal value for "+this.toString(!0)+" of type "+this.type.name+": "+e+" ("+t+")")}.bind(this);if(null===e)return this.required&&i(typeof e,"required"),"proto3"===this.y3&&this.type!==t.g2.message&&i(typeof e,"proto3 field without field presence cannot be null"),null;var n;if(this.repeated&&!r){t.bv.isArray(e)||(e=[e]);var s=[];for(n=0;n<e.length;n++)s.push(this.q4.r4(e[n]));return s}return this.map&&!r?e instanceof t.Map?e:(e instanceof Object||i(typeof e,"expected ProtoBuf.Map or raw object for map field"),new t.Map(this,e)):(!this.repeated&&t.bv.isArray(e)&&i(typeof e,"no array expected"),this.q4.r4(e))},g.j4=function(e){if("proto3"!==this.y3)return null!==e;switch(this.type){case t.g2.int32:case t.g2.sint32:case t.g2.sfixed32:case t.g2.uint32:case t.g2.fixed32:return 0!==e;case t.g2.int64:case t.g2.sint64:case t.g2.sfixed64:case t.g2.uint64:case t.g2.fixed64:return 0!==e.low||0!==e.high;case t.g2.bool:return e;case t.g2.float:case t.g2.double:return 0!==e;case t.g2.string:return e.length>0;case t.g2.bytes:return e.vA()>0;case t.g2.enum:return 0!==e;case t.g2.message:return null!==e;default:return!0}},g.encode=function(r,i){if(null===this.type||"object"!=typeof this.type)throw Error("[INTERNAL] Unresolved type in "+this.toString(!0)+": "+this.type);if(null===r||this.repeated&&0==r.length)return i;try{if(this.repeated){var n;if(this.options.B4&&t.f2.indexOf(this.type.E2)>=0){i.CP(this.id<<3|t.o2.c2),i.uA(i.offset+=1);var s=i.offset;for(n=0;n<r.length;n++)this.q4.c4(this.id,r[n],i);var o=i.offset-s,a=e.RP(o);if(a>1){var h=i.slice(s,i.offset);s+=a-1,i.offset=s,i.append(h)}i.CP(o,s-a)}else for(n=0;n<r.length;n++)i.CP(this.id<<3|this.type.E2),this.q4.c4(this.id,r[n],i)}else this.map?r.forEach(function(r,n,s){var o=e.RP(8|this.x4.E2)+this.G4.a4(1,n)+e.RP(16|this.type.E2)+this.q4.a4(2,r);i.CP(this.id<<3|t.o2.c2),i.CP(o),i.CP(8|this.x4.E2),this.G4.c4(1,n,i),i.CP(16|this.type.E2),this.q4.c4(2,r,i)},this):this.j4(r)&&(i.CP(this.id<<3|this.type.E2),this.q4.c4(this.id,r,i))}catch(e){throw Error("Illegal value for "+this.toString(!0)+": "+r+" ("+e+")")}return i},g.h4=function(r){if(r=this.r4(r),null===this.type||"object"!=typeof this.type)throw Error("[INTERNAL] Unresolved type in "+this.toString(!0)+": "+this.type);if(null===r||this.repeated&&0==r.length)return 0;var i=0;try{if(this.repeated){var n,s;if(this.options.B4&&t.f2.indexOf(this.type.E2)>=0){for(i+=e.RP(this.id<<3|t.o2.c2),s=0,n=0;n<r.length;n++)s+=this.q4.a4(this.id,r[n]);i+=e.RP(s),i+=s}else for(n=0;n<r.length;n++)i+=e.RP(this.id<<3|this.type.E2),i+=this.q4.a4(this.id,r[n])}else this.map?r.forEach(function(r,n,s){var o=e.RP(8|this.x4.E2)+this.G4.a4(1,n)+e.RP(16|this.type.E2)+this.q4.a4(2,r);i+=e.RP(this.id<<3|t.o2.c2),i+=e.RP(o),i+=o},this):this.j4(r)&&(i+=e.RP(this.id<<3|this.type.E2),i+=this.q4.a4(this.id,r))}catch(e){throw Error("Illegal value for "+this.toString(!0)+": "+r+" ("+e+")")}return i},g.decode=function(e,r,i){var n,s;if(!(!this.map&&e==this.type.E2||!i&&this.repeated&&this.options.B4&&e==t.o2.c2||this.map&&e==t.o2.c2))throw Error("Illegal wire type for field "+this.toString(!0)+": "+e+" ("+this.type.E2+" expected)");if(e==t.o2.c2&&this.repeated&&this.options.B4&&t.f2.indexOf(this.type.E2)>=0&&!i){s=r.PP(),s=r.offset+s;for(var o=[];r.offset<s;)o.push(this.decode(this.type.E2,r,!0));return o}if(this.map){var a=this.G4.t4(this.x4);if(n=this.q4.t4(this.type),s=r.PP(),r.vA()<s)throw Error("Illegal number of bytes for "+this.toString(!0)+": "+s+" required but got only "+r.vA());var h=r.clone();for(h.F_=h.offset+s,r.offset+=s;h.vA()>0;){var c=h.PP();e=7&c;var u=c>>>3;if(1===u)a=this.G4.decode(h,e,u);else{if(2!==u)throw Error("Unexpected tag in map field key/value submessage");n=this.q4.decode(h,e,u)}}return[a,n]}return this.q4.decode(r,e,this.id)},s.Jd.K3=f;var E=function(e,t,r,i,n,s,o){f.call(this,e,t,r,null,i,n,s,o),this.Q4};E.prototype=Object.create(f.prototype),s.Jd.R4=E;var v=function(e,t,r){o.call(this,e,t,r),this.fields=[]};s.Jd.T4=v;var y=function(e,t,r,i,n){h.call(this,e,t,r,i,n),this.className="Enum",this.object=null};(y.prototype=Object.create(h.prototype)).Xg=function(){for(var e={},t=this.V3(y.i4),r=0,i=t.length;r<i;++r)e[t[r].name]=t[r].id;return Object.defineProperty&&Object.defineProperty(e,"$options",{value:this.z3()}),this.object=e},s.n4=y;var T=function(e,t,r,i){o.call(this,e,t,r),this.className="Enum.Value",this.id=i};T.prototype=Object.create(o.prototype),s.n4.i4=T;var m=function(e,t,r,i){o.call(this,e,t,r),this.K4=i};m.prototype=Object.create(o.prototype),s.Y4=m;var I=function(e,t,r,i){h.call(this,e,t,r,i),this.className="Service",this.s4=null};(I.prototype=Object.create(h.prototype)).Xg=function(r){return this.s4&&!r?this.s4:this.s4=function(t,r){for(var i=function(e){t.o4.W4.call(this),this.z4=e||function(e,t,r){setTimeout(r.bind(this,Error("Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services")),0)}},n=i.prototype=Object.create(t.o4.W4.prototype),s=r.V3(t.H3.W4.J4),o=0;o<s.length;o++)!function(t){n[t.name]=function(i,n){try{try{i=t.X4.s4.decode(e.wrap(i))}catch(e){if(!(e instanceof TypeError))throw e}if(!(i&&i instanceof t.X4.s4))return void setTimeout(n.bind(this,Error("Illegal request type provided to service method "+r.name+"#"+t.name)),0);this.z4(t.q3(),i,function(e,i){if(e)return void n(e);try{i=t.Z4.s4.decode(i)}catch(e){}if(!(i&&i instanceof t.Z4.s4))return void n(Error("Illegal response type received in service method "+r.name+"#"+t.name));n(null,i)})}catch(e){setTimeout(n.bind(this,e),0)}},i[t.name]=function(e,r,n){new i(e)[t.name](r,n)},Object.defineProperty&&(Object.defineProperty(i[t.name],"$options",{value:t.z3()}),Object.defineProperty(n[t.name],"$options",{value:i[t.name].U4}))}(s[o]);return Object.defineProperty&&(Object.defineProperty(i,"$options",{value:r.z3()}),Object.defineProperty(n,"$options",{value:i.U4}),Object.defineProperty(i,"$type",{value:r}),Object.defineProperty(n,"$type",{value:r})),i}(t,this)},s.W4=I;var S=function(e,t,r,i){o.call(this,e,t,r),this.className="Service.Method",this.options=i||{}};(S.prototype=Object.create(o.prototype)).z3=c.z3,s.W4.e6=S;var R=function(e,t,r,i,n,s,o,a){S.call(this,e,t,r,a),this.className="Service.RPCMethod",this.t6=i,this.r6=n,this.i6=s,this.n6=o,this.X4=null,this.Z4=null};return R.prototype=Object.create(S.prototype),s.W4.J4=R,s}(t),t.o4=function(e,t,i){function n(e,t){t.y3=e,t.messages&&t.messages.forEach(function(t){n(e,t)}),t.c3&&t.c3.forEach(function(t){n(e,t)})}var s=function(e){this.s6=new i.X3(this,null,""),this.o6=this.s6,this.a6=!1,this.result=null,this.files={},this.h6=null,this.options=e||{},this.y3="proto3"===this.options.y3?"proto3":"proto2"},o=s.prototype;return o.reset=function(){this.o6=this.s6},o.c6=function(e){if("string"!=typeof e||!t.Y2.test(e))throw Error("Illegal package: "+e);var r,n,s=e.split(".");for(r=0;r<s.length;r++)if(!t.zO.test(s[r]))throw Error("Illegal package: "+s[r]);for(r=0;r<s.length;r++)n=this.o6.Q3(s[r]),null===n&&this.o6.j3(n=new i.X3(this,this.o6,s[r])),this.o6=n;return this},s.u6=function(r){if("string"!=typeof r.name||!t.zO.test(r.name))return!1;if(void 0!==r.values||void 0!==r.w3)return!1;var i;if(void 0!==r.fields){if(!e.bv.isArray(r.fields))return!1;var n,o=[];for(i=0;i<r.fields.length;i++){if(!s.l6(r.fields[i]))return!1;if(n=parseInt(r.fields[i].id,10),o.indexOf(n)>=0)return!1;o.push(n)}o=null}if(void 0!==r.c3){if(!e.bv.isArray(r.c3))return!1;for(i=0;i<r.c3.length;i++)if(!s.p6(r.c3[i]))return!1}if(void 0!==r.messages){if(!e.bv.isArray(r.messages))return!1;for(i=0;i<r.messages.length;i++)if(!s.u6(r.messages[i])&&!s.d6(r.messages[i]))return!1}if(void 0!==r.extensions&&(!e.bv.isArray(r.extensions)||2!==r.extensions.length||"number"!=typeof r.extensions[0]||"number"!=typeof r.extensions[1]))return!1;if("proto3"===r.y3){for(i=0;i<r.fields.length;i++){var a=r.fields[i];if("required"===a.rule)return!1;if(a.default)return!1;if(a.options)for(var h=Object.keys(a.options),c=0;c<h.length;c++)if("default"===h[c])return!1}if(r.extensions)return!1}return!0},s.l6=function(e){if("string"!=typeof e.rule||"string"!=typeof e.name||"string"!=typeof e.type||void 0===e.id)return!1;if(!(t.Q2.test(e.rule)&&t.zO.test(e.name)&&t.Y2.test(e.type)&&t.t3.test(""+e.id)))return!1;if(void 0!==e.options){if("object"!=typeof e.options)return!1;for(var r,i=Object.keys(e.options),n=0;n<i.length;n++)if("string"!=typeof(r=i[n])||"string"!=typeof e.options[r]&&"number"!=typeof e.options[r]&&"boolean"!=typeof e.options[r])return!1}return!0},s.p6=function(r){if("string"!=typeof r.name||!t.zO.test(r.name))return!1;if(void 0===r.values||!e.bv.isArray(r.values)||0==r.values.length)return!1;for(var i=0;i<r.values.length;i++){if("object"!=typeof r.values[i])return!1;if("string"!=typeof r.values[i].name||void 0===r.values[i].id)return!1;if(!t.zO.test(r.values[i].name)||!t.r3.test(""+r.values[i].id))return!1}return"proto3"!==r.y3||0===r.values[0].id},o.create=function(t){if(!t)return this;if(e.bv.isArray(t)||(t=[t]),0===t.length)return this;var r=[];for(r.push(t);r.length>0;){if(t=r.pop(),!e.bv.isArray(t))throw Error("Not a valid namespace: "+JSON.stringify(t));for(;t.length>0;){var n=t.shift();if(s.u6(n)){var o=new i.Jd(this,this.o6,n.name,n.options,n.P3,n.y3),a={};if(n.A3)for(var h=Object.keys(n.A3),c=0,u=h.length;c<u;++c)o.j3(a[h[c]]=new i.Jd.T4(this,o,h[c]));if(n.fields&&n.fields.length>0)for(c=0,u=n.fields.length;c<u;++c){var l=n.fields[c];if(null!==o.Q3(l.id))throw Error("Duplicate field id in message "+o.name+": "+l.id);if(l.options)for(var p=Object.keys(l.options),d=0,f=p.length;d<f;++d){if("string"!=typeof p[d])throw Error("Illegal field option name in message "+o.name+"#"+l.name+": "+p[d]);if("string"!=typeof l.options[p[d]]&&"number"!=typeof l.options[p[d]]&&"boolean"!=typeof l.options[p[d]])throw Error("Illegal field option value in message "+o.name+"#"+l.name+"#"+p[d]+": "+l.options[p[d]])}var g=null;if("string"==typeof l.M3&&void 0===(g=a[l.M3]))throw Error("Illegal oneof in message "+o.name+"#"+l.name+": "+l.M3);l=new i.Jd.K3(this,o,l.rule,l.keytype,l.type,l.name,l.id,l.options,g,n.y3),g&&g.fields.push(l),o.j3(l)}var E=[];if(void 0!==n.c3&&n.c3.length>0)for(c=0;c<n.c3.length;c++)E.push(n.c3[c]);if(n.messages&&n.messages.length>0)for(c=0;c<n.messages.length;c++)E.push(n.messages[c]);if(n.extensions&&(o.extensions=n.extensions,o.extensions[0]<e.T2&&(o.extensions[0]=e.T2),o.extensions[1]>e.m2&&(o.extensions[1]=e.m2)),this.o6.j3(o),E.length>0){r.push(t),t=E,E=null,this.o6=o,o=null;continue}E=null,o=null}else if(s.p6(n)){for(o=new i.n4(this,this.o6,n.name,n.options,n.y3),c=0;c<n.values.length;c++)o.j3(new i.n4.i4(this,o,n.values[c].name,n.values[c].id));this.o6.j3(o),o=null}else if(s.f6(n)){o=new i.W4(this,this.o6,n.name,n.options);for(c in n.w3)n.w3.hasOwnProperty(c)&&o.j3(new i.W4.J4(this,o,c,n.w3[c].request,n.w3[c].response,n.w3[c].C3,n.w3[c]._3,n.w3[c].options));this.o6.j3(o),o=null}else{if(!s.d6(n))throw Error("Not a valid definition: "+JSON.stringify(n));if(o=this.o6.resolve(n.B3))for(c=0;c<n.fields.length;c++){if(null!==o.Q3(n.fields[c].id))throw Error("Duplicate extended field id in message "+o.name+": "+n.fields[c].id);if(n.fields[c].id<o.extensions[0]||n.fields[c].id>o.extensions[1])throw Error("Illegal extended field id in message "+o.name+": "+n.fields[c].id+" ("+o.extensions.join(" to ")+" expected)");var v=n.fields[c].name;this.options.I2&&(v=i.Jd.K3.V4(n.fields[c].name)),l=new i.Jd.R4(this,o,n.fields[c].rule,n.fields[c].type,this.o6.q3()+"."+v,n.fields[c].id,n.fields[c].options);var y=new i.Y4(this,this.o6,n.fields[c].name,l);l.Q4=y,this.o6.j3(y),o.j3(l)}else if(!/\.?google\.protobuf\./.test(n.B3))throw Error("Extended message "+n.B3+" is not defined")}n=null}t=null,this.o6=this.o6.parent}return this.a6=!1,this.result=null,this},o.g6=function(t,i){if("string"==typeof i){if(e.bv.w2&&(i=r(64).resolve(i)),!0===this.files[i])return this.reset(),this;this.files[i]=!0}else if("object"==typeof i){var s=i.root;e.bv.w2&&(s=r(64).resolve(s));var o=[s,i.E6].join("/");if(!0===this.files[o])return this.reset(),this;this.files[o]=!0}if(t.imports&&t.imports.length>0){var a,h="/",c=!1;"object"==typeof i?(this.h6=i.root,c=!0,a=this.h6,i=i.E6,(a.indexOf("\\")>=0||i.indexOf("\\")>=0)&&(h="\\")):"string"==typeof i?this.h6?a=this.h6:i.indexOf("/")>=0?""===(a=i.replace(/\/[^\/]*$/,""))&&(a="/"):i.indexOf("\\")>=0?(a=i.replace(/\\[^\\]*$/,""),h="\\"):a=".":a=null;for(var u=0;u<t.imports.length;u++)if("string"==typeof t.imports[u]){if(!a)throw Error("Cannot determine import root: File name is unknown");var l=t.imports[u];if(/^google\/protobuf\//.test(l))continue;if(l=a+h+l,!0===this.files[l])continue;/\.proto$/i.test(l)&&!e.n3&&(l=l.replace(/\.proto$/,".json"));var p=e.bv.fetch(l);if(null===p)throw Error("Failed to import '"+l+"' in '"+i+"': File not found");/\.json$/i.test(l)?this.g6(JSON.parse(p+""),l):this.g6(new e.n3.R0(p+"").parse(),l)}else i?/\.(\w+)$/.test(i)?this.g6(t.imports[u],i.replace(/^(.+)\.(\w+)$/,function(e,t,r){return t+"_import"+u+"."+r})):this.g6(t.imports[u],i+"_import"+u):this.g6(t.imports[u]);c&&(this.h6=null)}t.package&&this.c6(t.package),t.y3&&n(t.y3,t);var d=this.o6;return t.options&&Object.keys(t.options).forEach(function(e){d.options[e]=t.options[e]}),t.messages&&(this.create(t.messages),this.o6=d),t.c3&&(this.create(t.c3),this.o6=d),t.services&&(this.create(t.services),this.o6=d),t.v6&&this.create(t.v6),this.reset(),this},s.f6=function(e){return!("string"!=typeof e.name||!t.zO.test(e.name)||"object"!=typeof e.w3)},s.d6=function(r){if("string"!=typeof r.B3||!t.Y2.test(r.B3))return!1;var i;if(void 0!==r.fields){if(!e.bv.isArray(r.fields))return!1;var n,o=[];for(i=0;i<r.fields.length;i++){if(!s.l6(r.fields[i]))return!1;if(n=parseInt(r.id,10),o.indexOf(n)>=0)return!1;o.push(n)}o=null}return!0},o.y6=function(){var r;if(null!=this.o6&&"object"!=typeof this.o6.type){if(this.o6 instanceof i.X3)for(var n=this.o6.children,s=0,o=n.length;s<o;++s)this.o6=n[s],this.y6();else if(this.o6 instanceof i.Jd.K3){if(t.tN.test(this.o6.type))this.o6.type=e.g2[this.o6.type];else{if(!t.Y2.test(this.o6.type))throw Error("Illegal type reference in "+this.o6.toString(!0)+": "+this.o6.type);if(!(r=(this.o6 instanceof i.Jd.R4?this.o6.Q4.parent:this.o6.parent).resolve(this.o6.type,!0)))throw Error("Unresolvable type reference in "+this.o6.toString(!0)+": "+this.o6.type);if(this.o6.Z3=r,r instanceof i.n4){if(this.o6.type=e.g2.enum,"proto3"===this.o6.y3&&"proto3"!==r.y3)throw Error("Proto3 message refers to proto2 enum; this is not allowed due to differing enum semantics in proto3")}else{if(!(r instanceof i.Jd))throw Error("Illegal type reference in "+this.o6.toString(!0)+": "+this.o6.type);this.o6.type=r.P3?e.g2.group:e.g2.message}}if(this.o6.map){if(!t.tN.test(this.o6.x4))throw Error("Illegal key type for map field in "+this.o6.toString(!0)+": "+this.o6.type);this.o6.x4=e.g2[this.o6.x4]}}else if(this.o6 instanceof e.H3.n4.i4);else if(this.o6 instanceof e.H3.W4.e6){if(!(this.o6 instanceof e.H3.W4.J4))throw Error("Illegal service type in "+this.o6.toString(!0));if(!((r=this.o6.parent.resolve(this.o6.t6))&&r instanceof e.H3.Jd))throw Error("Illegal type reference in "+this.o6.toString(!0)+": "+this.o6.t6);if(this.o6.X4=r,!((r=this.o6.parent.resolve(this.o6.r6))&&r instanceof e.H3.Jd))throw Error("Illegal type reference in "+this.o6.toString(!0)+": "+this.o6.r6);this.o6.Z4=r}else if(!(this.o6 instanceof e.H3.Jd.T4||this.o6 instanceof e.H3.Y4))throw Error("Illegal object in namespace: "+typeof this.o6+":"+this.o6);this.reset()}},o.Xg=function(e){if(this.reset(),this.a6||(this.y6(),this.a6=!0,this.result=null),null===this.result&&(this.result=this.s6.Xg()),e){for(var t="string"==typeof e?e.split("."):e,r=this.result,i=0;i<t.length;i++){if(!r[t[i]]){r=null;break}r=r[t[i]]}return r}return this.result},o.T6=function(e){return e?this.s6.resolve(e):this.s6},o.toString=function(){return"Builder"},s.Jd=function(){},s.W4=function(){},s}(t,t.Lang,t.H3),t.Map=function(e){function t(e){var t=0;return{next:function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}}var r=function(t,r){if(!t.map)throw Error("field is not a map");if(this.K4=t,this.E4=new e.H3.Element(t.x4,null,!0,t.y3),this.v4=new e.H3.Element(t.type,t.Z3,!1,t.y3),this.map={},Object.defineProperty(this,"size",{get:function(){return Object.keys(this.map).length}}),r)for(var i=Object.keys(r),n=0;n<i.length;n++){var s=this.E4.u4(i[n]),o=this.v4.r4(r[i[n]]);this.map[this.E4.l4(s)]={key:s,value:o}}},i=r.prototype;return i.clear=function(){this.map={}},i.delete=function(e){var t=this.E4.l4(this.E4.r4(e)),r=t in this.map;return delete this.map[t],r},i.entries=function(){for(var e,r=[],i=Object.keys(this.map),n=0;n<i.length;n++)r.push([(e=this.map[i[n]]).key,e.value]);return t(r)},i.keys=function(){for(var e=[],r=Object.keys(this.map),i=0;i<r.length;i++)e.push(this.map[r[i]].key);return t(e)},i.values=function(){for(var e=[],r=Object.keys(this.map),i=0;i<r.length;i++)e.push(this.map[r[i]].value);return t(e)},i.forEach=function(e,t){for(var r,i=Object.keys(this.map),n=0;n<i.length;n++)e.call(t,(r=this.map[i[n]]).value,r.key,this)},i.set=function(e,t){var r=this.E4.r4(e),i=this.v4.r4(t);return this.map[this.E4.l4(r)]={key:r,value:i},this},i.get=function(e){var t=this.E4.l4(this.E4.r4(e));if(t in this.map)return this.map[t].value},i.has=function(e){return this.E4.l4(this.E4.r4(e))in this.map},r}(t),t.m6=function(e,r,i){return("string"==typeof r||r&&"string"==typeof r.E6&&"string"==typeof r.root)&&(i=r,r=void 0),t.Zg(new t.n3.R0(e).parse(),r,i)},t.I6=t.m6,t.S6=function(e,r,i){if(r&&"object"==typeof r?(i=r,r=null):r&&"function"==typeof r||(r=null),r)return t.bv.fetch("string"==typeof e?e:e.root+"/"+e.E6,function(n){if(null===n)return void r(Error("Failed to fetch file"));try{r(null,t.m6(n,i,e))}catch(e){r(e)}});var n=t.bv.fetch("object"==typeof e?e.root+"/"+e.E6:e);return null===n?null:t.m6(n,i,e)},t.R6=t.S6,t.w6=function(e){return e=e||{},void 0===e.I2&&(e.I2=t.I2),void 0===e.S2&&(e.S2=t.S2),new t.o4(e)},t.Zg=function(e,r,i){return("string"==typeof r||r&&"string"==typeof r.E6&&"string"==typeof r.root)&&(i=r,r=null),r&&"object"==typeof r||(r=t.w6()),"string"==typeof e&&(e=JSON.parse(e)),r.g6(e,i),r.y6(),r},t.b6=function(e,r,i){if(r&&"object"==typeof r?(i=r,r=null):r&&"function"==typeof r||(r=null),r)return t.bv.fetch("string"==typeof e?e:e.root+"/"+e.E6,function(n){if(null===n)return void r(Error("Failed to fetch file"));try{r(null,t.Zg(JSON.parse(n),i,e))}catch(e){r(e)}});var n=t.bv.fetch("object"==typeof e?e.root+"/"+e.E6:e);return null===n?null:t.Zg(JSON.parse(n),i,e)},t}"object"==typeof e&&e&&"object"==typeof t&&t?e.i=a(r(35)):(n=[r(162)],i=a,void 0!==(s="function"==typeof i?i.apply(t,n):i)&&(e.i=s))}()}).call(t,r(63)(e))},function(e,t,r){(function(e){var n,s;/**
 * @license ByteBuffer.js (c) 2013-2014 Daniel Wirtz <dcode@dcode.io>
 * This version of ByteBuffer.js uses an ArrayBuffer as its backing buffer which is accessed through a DataView and is
 * compatible with modern browsers.
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/ByteBuffer.js for details
 */
!function(o){"use strict";function a(e){function t(e){var t=0;return function(){return t<e.length?e.charCodeAt(t++):null}}function r(){var e=[],t=[];return function(){if(0===arguments.length)return t.join("")+a.apply(String,e);e.length+arguments.length>1024&&(t.push(a.apply(String,e)),e.length=0),Array.prototype.push.apply(e,arguments)}}var n=function(e,t,r){if(void 0===e&&(e=n.D_),void 0===t&&(t=n.k_),void 0===r&&(r=n.L_),!r){if((e|=0)<0)throw RangeError("Illegal capacity");t=!!t,r=!!r}this.buffer=0===e?o:new ArrayBuffer(e),this.view=0===e?null:new DataView(this.buffer),this.offset=0,this.M_=-1,this.F_=e,this.U_=void 0!==t&&!!t,this.B_=!!r};n.VERSION="3.5.5",n.H_=!0,n.x_=!1,n.D_=16,n.k_=n.x_,n.L_=!1,n.q_=e||null;var s=n.prototype,o=new ArrayBuffer(0),a=String.fromCharCode;n.G_=function(e,t,r){return new n(e,t,r)},n.concat=function(e,t,r,i){"boolean"!=typeof t&&"string"==typeof t||(i=r,r=t,t=void 0);for(var s,o=0,a=0,h=e.length;a<h;++a)n.V_(e[a])||(e[a]=n.wrap(e[a],t)),(s=e[a].F_-e[a].offset)>0&&(o+=s);if(0===o)return new n(0,r,i);var c,u=new n(o,r,i),l=new Uint8Array(u.buffer);for(a=0;a<h;)c=e[a++],(s=c.F_-c.offset)<=0||(l.set(new Uint8Array(c.buffer).subarray(c.offset,c.F_),u.offset),u.offset+=s);return u.F_=u.offset,u.offset=0,u},n.V_=function(e){return!0===(e&&e instanceof n)},n.type=function(){return ArrayBuffer},n.wrap=function(e,t,r,o){if("string"!=typeof t&&(o=r,r=t,t=void 0),"string"==typeof e)switch(void 0===t&&(t="utf8"),t){case"base64":return n.j_(e,r);case"hex":return n.Q_(e,r);case"binary":return n.K_(e,r);case"utf8":return n.Y_(e,r);case"debug":return n.W_(e,r);default:throw Error("Unsupported encoding: "+t)}if(null===e||"object"!=typeof e)throw TypeError("Illegal buffer");var a;if(n.V_(e))return a=s.clone.call(e),a.M_=-1,a;if(e instanceof Uint8Array)a=new n(0,r,o),e.length>0&&(a.buffer=e.buffer,a.offset=e.byteOffset,a.F_=e.byteOffset+e.length,a.view=e.length>0?new DataView(e.buffer):null);else if(e instanceof ArrayBuffer)a=new n(0,r,o),e.byteLength>0&&(a.buffer=e,a.offset=0,a.F_=e.byteLength,a.view=e.byteLength>0?new DataView(e):null);else{if("[object Array]"!==Object.prototype.toString.call(e))throw TypeError("Illegal buffer");for(a=new n(e.length,r,o),a.F_=e.length,i=0;i<e.length;++i)a.view.setUint8(i,e[i])}return a},s.z_=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=1,this.view.setInt8(t,e),r&&(this.offset+=1),this},s.jC=s.z_,s.J_=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view.getInt8(e);return t&&(this.offset+=1),r},s.d_=s.J_,s.X_=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=1,this.view.setUint8(t,e),r&&(this.offset+=1),this},s.Z_=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view.getUint8(e);return t&&(this.offset+=1),r},s.eP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=2,this.view.setInt16(t,e,this.U_),r&&(this.offset+=2),this},s.tP=s.eP,s.rP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=this.view.getInt16(e,this.U_);return t&&(this.offset+=2),r},s.iP=s.rP,s.nP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=2,this.view.setUint16(t,e,this.U_),r&&(this.offset+=2),this},s.sP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=this.view.getUint16(e,this.U_);return t&&(this.offset+=2),r},s.oP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setInt32(t,e,this.U_),r&&(this.offset+=4),this},s.Bg=s.oP,s.aP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getInt32(e,this.U_);return t&&(this.offset+=4),r},s.Qg=s.aP,s.hP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setUint32(t,e,this.U_),r&&(this.offset+=4),this},s.cP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getUint32(e,this.U_);return t&&(this.offset+=4),r},e&&(s.uP=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"==typeof t)t=e.DE(t);else if("string"==typeof t)t=e.kE(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.DE(t):"string"==typeof t&&(t=e.kE(t)),r+=8;var n=this.buffer.byteLength;return r>n&&this.resize((n*=2)>r?n:r),r-=8,this.U_?(this.view.setInt32(r,t.low,!0),this.view.setInt32(r+4,t.high,!0)):(this.view.setInt32(r,t.high,!1),this.view.setInt32(r+4,t.low,!1)),i&&(this.offset+=8),this},s.lP=s.uP,s.pP=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+8) <= "+this.buffer.byteLength)}var i=this.U_?new e(this.view.getInt32(t,!0),this.view.getInt32(t+4,!0),!1):new e(this.view.getInt32(t+4,!1),this.view.getInt32(t,!1),!1);return r&&(this.offset+=8),i},s.dP=s.pP,s.fP=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"==typeof t)t=e.DE(t);else if("string"==typeof t)t=e.kE(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.DE(t):"string"==typeof t&&(t=e.kE(t)),r+=8;var n=this.buffer.byteLength;return r>n&&this.resize((n*=2)>r?n:r),r-=8,this.U_?(this.view.setInt32(r,t.low,!0),this.view.setInt32(r+4,t.high,!0)):(this.view.setInt32(r,t.high,!1),this.view.setInt32(r+4,t.low,!1)),i&&(this.offset+=8),this},s.gP=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+8) <= "+this.buffer.byteLength)}var i=this.U_?new e(this.view.getInt32(t,!0),this.view.getInt32(t+4,!0),!0):new e(this.view.getInt32(t+4,!1),this.view.getInt32(t,!1),!0);return r&&(this.offset+=8),i}),s.EP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setFloat32(t,e,this.U_),r&&(this.offset+=4),this},s.vP=s.EP,s.yP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getFloat32(e,this.U_);return t&&(this.offset+=4),r},s.TP=s.yP,s.mP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=8;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=8,this.view.setFloat64(t,e,this.U_),r&&(this.offset+=8),this},s.YC=s.mP,s.IP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+8) <= "+this.buffer.byteLength)}var r=this.view.getFloat64(e,this.U_);return t&&(this.offset+=8),r},s.E_=s.IP,n.SP=5,n.RP=function(e){return e>>>=0,e<128?1:e<16384?2:e<1<<21?3:e<1<<28?4:5},n.wP=function(e){return((e|=0)<<1^e>>31)>>>0},n.bP=function(e){return e>>>1^-(1&e)|0},s.CP=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}var i,s=n.RP(e);t+=s;var o=this.buffer.byteLength;return t>o&&this.resize((o*=2)>t?o:t),t-=s,this.view.setUint8(t,i=128|e),e>>>=0,e>=128?(i=e>>7|128,this.view.setUint8(t+1,i),e>=16384?(i=e>>14|128,this.view.setUint8(t+2,i),e>=1<<21?(i=e>>21|128,this.view.setUint8(t+3,i),e>=1<<28?(this.view.setUint8(t+4,e>>28&15),s=5):(this.view.setUint8(t+3,127&i),s=4)):(this.view.setUint8(t+2,127&i),s=3)):(this.view.setUint8(t+1,127&i),s=2)):(this.view.setUint8(t,127&i),s=1),r?(this.offset+=s,this):s},s._P=function(e,t){return this.CP(n.wP(e),t)},s.PP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r,i,n=0,s=0;do{if(i=e+n,!this.B_&&i>this.F_){var o=Error("Truncated");throw o.AP=!0,o}r=this.view.getUint8(i),n<5&&(s|=(127&r)<<7*n>>>0),++n}while(128==(128&r));return s|=0,t?(this.offset+=n,s):{value:s,length:n}},s.OP=function(e){var t=this.PP(e);return"object"==typeof t?t.value=n.bP(t.value):t=n.bP(t),t},e&&(n.NP=10,n.DP=function(t){"number"==typeof t?t=e.DE(t):"string"==typeof t&&(t=e.kE(t));var r=t.kP()>>>0,i=t.LP(28).kP()>>>0,n=t.LP(56).kP()>>>0;return 0==n?0==i?r<16384?r<128?1:2:r<1<<21?3:4:i<16384?i<128?5:6:i<1<<21?7:8:n<128?9:10},n.MP=function(t){return"number"==typeof t?t=e.DE(t,!1):"string"==typeof t?t=e.kE(t,!1):!1!==t.FP&&(t=t.UP()),t.shiftLeft(1).pT(t.HP(63)).BP()},n.xP=function(t){return"number"==typeof t?t=e.DE(t,!1):"string"==typeof t?t=e.kE(t,!1):!1!==t.FP&&(t=t.UP()),t.LP(1).pT(t.qP(e.ONE).UP().qE()).UP()},s.GP=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"==typeof t)t=e.DE(t);else if("string"==typeof t)t=e.kE(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.DE(t,!1):"string"==typeof t?t=e.kE(t,!1):!1!==t.FP&&(t=t.UP());var s=n.DP(t),o=t.kP()>>>0,a=t.LP(28).kP()>>>0,h=t.LP(56).kP()>>>0;r+=s;var c=this.buffer.byteLength;switch(r>c&&this.resize((c*=2)>r?c:r),r-=s,s){case 10:this.view.setUint8(r+9,h>>>7&1);case 9:this.view.setUint8(r+8,9!==s?128|h:127&h);case 8:this.view.setUint8(r+7,8!==s?a>>>21|128:a>>>21&127);case 7:this.view.setUint8(r+6,7!==s?a>>>14|128:a>>>14&127);case 6:this.view.setUint8(r+5,6!==s?a>>>7|128:a>>>7&127);case 5:this.view.setUint8(r+4,5!==s?128|a:127&a);case 4:this.view.setUint8(r+3,4!==s?o>>>21|128:o>>>21&127);case 3:this.view.setUint8(r+2,3!==s?o>>>14|128:o>>>14&127);case 2:this.view.setUint8(r+1,2!==s?o>>>7|128:o>>>7&127);case 1:this.view.setUint8(r,1!==s?128|o:127&o)}return i?(this.offset+=s,this):s},s.VP=function(e,t){return this.GP(n.MP(e),t)},s.jP=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.B_){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+1) <= "+this.buffer.byteLength)}var i=t,n=0,s=0,o=0,a=0;if(a=this.view.getUint8(t++),n=127&a,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<7,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<14,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<21,128&a&&(a=this.view.getUint8(t++),s=127&a,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<7,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<14,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<21,128&a&&(a=this.view.getUint8(t++),o=127&a,128&a&&(a=this.view.getUint8(t++),o|=(127&a)<<7,128&a))))))))))throw Error("Buffer overrun");var h=e.qI(n|s<<28,s>>>4|o<<24,!1);return r?(this.offset=t,h):{value:h,length:t-i}},s.QP=function(t){var r=this.jP(t);return r&&r.value instanceof e?r.value=n.xP(r.value):r=n.xP(r),r}),s.Hg=function(e,r){var i=void 0===r;i&&(r=this.offset);var n,s=e.length;if(!this.B_){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");for(n=0;n<s;++n)if(0===e.charCodeAt(n))throw RangeError("Illegal str: Contains NULL-characters");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}s=c.KP(t(e))[1],r+=s+1;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=s+1,c.YP(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),this.view.setUint8(r++,0),i?(this.offset=r,this):s},s.Yg=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var i,n=e,s=-1;return c.WP(function(){if(0===s)return null;if(e>=this.F_)throw RangeError("Illegal range: Truncated data, "+e+" < "+this.F_);return 0===(s=this.view.getUint8(e++))?null:s}.bind(this),i=r(),!0),t?(this.offset=e,i()):{string:i(),length:e-n}},s.zP=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var n,s=r;n=c.KP(t(e),this.B_)[1],r+=4+n;var o=this.buffer.byteLength;if(r>o&&this.resize((o*=2)>r?o:r),r-=4+n,this.view.setUint32(r,n,this.U_),r+=4,c.YP(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),r!==s+4+n)throw RangeError("Illegal range: Truncated data, "+r+" == "+(r+4+n));return i?(this.offset=r,this):r-s},s.JP=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var i,n=0,s=e;n=this.view.getUint32(e,this.U_),e+=4;var o,a=e+n;return c.WP(function(){return e<a?this.view.getUint8(e++):null}.bind(this),o=r(),this.B_),i=o(),t?(this.offset=e,i):{string:i,length:e-s}},n.XP="c",n.ZP="b",s.$P=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var n,s=r;n=c.KP(t(e))[1],r+=n;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=n,c.YP(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),i?(this.offset=r,this):r-s},s.qb=s.$P,n.eA=function(e){return c.KP(t(e))[0]},n.tA=function(e){return c.KP(t(e))[1]},s.rA=function(e,t,i){"number"==typeof t&&(i=t,t=void 0);var s=void 0===i;if(s&&(i=this.offset),void 0===t&&(t=n.XP),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal length: "+e+" (not an integer)");if(e|=0,"number"!=typeof i||i%1!=0)throw TypeError("Illegal offset: "+i+" (not an integer)");if((i>>>=0)<0||i+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+i+" (+0) <= "+this.buffer.byteLength)}var o,a=0,h=i;if(t===n.XP){if(o=r(),c.iA(function(){return a<e&&i<this.F_?this.view.getUint8(i++):null}.bind(this),function(e){++a,c.nA(e,o)}.bind(this)),a!==e)throw RangeError("Illegal range: Truncated data, "+a+" == "+e);return s?(this.offset=i,o()):{string:o(),length:i-h}}if(t===n.ZP){if(!this.B_){if("number"!=typeof i||i%1!=0)throw TypeError("Illegal offset: "+i+" (not an integer)");if((i>>>=0)<0||i+e>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+i+" (+"+e+") <= "+this.buffer.byteLength)}var u=i+e;if(c.WP(function(){return i<u?this.view.getUint8(i++):null}.bind(this),o=r(),this.B_),i!==u)throw RangeError("Illegal range: Truncated data, "+i+" == "+u);return s?(this.offset=i,o()):{string:o(),length:i-h}}throw TypeError("Unsupported metrics: "+t)},s.Lb=s.rA,s.sA=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var s,o,a=r;s=c.KP(t(e),this.B_)[1],o=n.RP(s),r+=o+s;var h=this.buffer.byteLength;if(r>h&&this.resize((h*=2)>r?h:r),r-=o+s,r+=this.CP(s,r),c.YP(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),r!==a+s+o)throw RangeError("Illegal range: Truncated data, "+r+" == "+(r+s+o));return i?(this.offset=r,this):r-a},s.oA=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var i,n=this.PP(e),s=e;e+=n.length,n=n.value;var o=e+n,a=r();return c.WP(function(){return e<o?this.view.getUint8(e++):null}.bind(this),a,this.B_),i=a(),t?(this.offset=e,i):{string:i,length:e-s}},s.append=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof n||(e=n.wrap(e,t));var s=e.F_-e.offset;if(s<=0)return this;r+=s;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=s,new Uint8Array(this.buffer,r).set(new Uint8Array(e.buffer).subarray(e.offset,e.F_)),e.offset+=s,i&&(this.offset+=s),this},s.aA=function(e,t){return e.append(this,t),this},s.assert=function(e){return this.B_=!e,this},s.hA=function(){return this.buffer.byteLength},s.clear=function(){return this.offset=0,this.F_=this.buffer.byteLength,this.M_=-1,this},s.clone=function(e){var t=new n(0,this.U_,this.B_);if(e){var r=new ArrayBuffer(this.buffer.byteLength);new Uint8Array(r).set(this.buffer),t.buffer=r,t.view=new DataView(r)}else t.buffer=this.buffer,t.view=this.view;return t.offset=this.offset,t.M_=this.M_,t.F_=this.F_,t},s.compact=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(0===e&&t===this.buffer.byteLength)return this;var r=t-e;if(0===r)return this.buffer=o,this.view=null,this.M_>=0&&(this.M_-=e),this.offset=0,this.F_=0,this;var i=new ArrayBuffer(r);return new Uint8Array(i).set(new Uint8Array(this.buffer).subarray(e,t)),this.buffer=i,this.view=new DataView(i),this.M_>=0&&(this.M_-=e),this.offset=0,this.F_=r,this},s.cA=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(e===t)return new n(0,this.U_,this.B_);var r=t-e,i=new n(r,this.U_,this.B_);return i.offset=0,i.F_=r,i.M_>=0&&(i.M_-=e),this.jE(i,0,e,t),i},s.jE=function(e,t,r,i){var s,o;if(!this.B_&&!n.V_(e))throw TypeError("Illegal target: Not a ByteBuffer");if(t=(o=void 0===t)?e.offset:0|t,r=(s=void 0===r)?this.offset:0|r,i=void 0===i?this.F_:0|i,t<0||t>e.buffer.byteLength)throw RangeError("Illegal target range: 0 <= "+t+" <= "+e.buffer.byteLength);if(r<0||i>this.buffer.byteLength)throw RangeError("Illegal source range: 0 <= "+r+" <= "+this.buffer.byteLength);var a=i-r;return 0===a?e:(e.uA(t+a),new Uint8Array(e.buffer).set(new Uint8Array(this.buffer).subarray(r,i),t),s&&(this.offset+=a),o&&(e.offset+=a),this)},s.uA=function(e){var t=this.buffer.byteLength;return t<e?this.resize((t*=2)>e?t:e):this},s.fill=function(e,t,r){var i=void 0===t;if(i&&(t=this.offset),"string"==typeof e&&e.length>0&&(e=e.charCodeAt(0)),void 0===t&&(t=this.offset),void 0===r&&(r=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!=0)throw TypeError("Illegal end: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(t>=r)return this;for(;t<r;)this.view.setUint8(t++,e);return i&&(this.offset=t),this},s.xg=function(){return this.F_=this.offset,this.offset=0,this},s.mark=function(e){if(e=void 0===e?this.offset:e,!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}return this.M_=e,this},s.order=function(e){if(!this.B_&&"boolean"!=typeof e)throw TypeError("Illegal littleEndian: Not a boolean");return this.U_=!!e,this},s.lA=function(e){return this.U_=void 0===e||!!e,this},s.pA=function(e){return this.U_=void 0!==e&&!e,this},s.dA=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.B_){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof n||(e=n.wrap(e,t));var s=e.F_-e.offset;if(s<=0)return this;var o,a=s-r;if(a>0){var h=new ArrayBuffer(this.buffer.byteLength+a);o=new Uint8Array(h),o.set(new Uint8Array(this.buffer).subarray(r,this.buffer.byteLength),s),this.buffer=h,this.view=new DataView(h),this.offset+=a,this.M_>=0&&(this.M_+=a),this.F_+=a,r+=a}else o=new Uint8Array(this.buffer);return o.set(new Uint8Array(e.buffer).subarray(e.offset,e.F_),r-s),e.offset=e.F_,i&&(this.offset-=s),this},s.fA=function(e,t){return e.dA(this,t),this},s.gA=function(e){"function"!=typeof e&&(e=console.log.bind(console)),e(this.toString()+"\n-------------------------------------------------------------------\n"+this.EA(!0))},s.vA=function(){return this.F_-this.offset},s.reset=function(){return this.M_>=0?(this.offset=this.M_,this.M_=-1):this.offset=0,this},s.resize=function(e){if(!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal capacity: "+e+" (not an integer)");if((e|=0)<0)throw RangeError("Illegal capacity: 0 <= "+e)}if(this.buffer.byteLength<e){var t=new ArrayBuffer(e);new Uint8Array(t).set(new Uint8Array(this.buffer)),this.buffer=t,this.view=new DataView(t)}return this},s.reverse=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}return e===t?this:(Array.prototype.reverse.call(new Uint8Array(this.buffer).subarray(e,t)),this.view=new DataView(this.buffer),this)},s.Mb=function(e){if(!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal length: "+e+" (not an integer)");e|=0}var t=this.offset+e;if(!this.B_&&(t<0||t>this.buffer.byteLength))throw RangeError("Illegal length: 0 <= "+this.offset+" + "+e+" <= "+this.buffer.byteLength);return this.offset=t,this},s.slice=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var r=this.clone();return r.offset=e,r.F_=t,r},s.yA=function(e){var t=this.offset,r=this.F_;if(t>r){var i=t;t=r,r=i}if(!this.B_){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!=0)throw TypeError("Illegal limit: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(!e&&0===t&&r===this.buffer.byteLength)return this.buffer;if(t===r)return o;var n=new ArrayBuffer(r-t);return new Uint8Array(n).set(new Uint8Array(this.buffer).subarray(t,r),0),n},s.tc=s.yA,s.toString=function(e,t,r){if(void 0===e)return"ByteBufferAB(offset="+this.offset+",markedOffset="+this.M_+",limit="+this.F_+",capacity="+this.hA()+")";switch("number"==typeof e&&(e="utf8",t=e,r=t),e){case"utf8":return this.TA(t,r);case"base64":return this.mA(t,r);case"hex":return this.IA(t,r);case"binary":return this.SA(t,r);case"debug":return this.EA();case"columns":return this.RA();default:throw Error("Unsupported encoding: "+e)}};var h=function(){for(var e={},t=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47],r=[],i=0,n=t.length;i<n;++i)r[t[i]]=i;return e.encode=function(e,r){for(var i,n;null!==(i=e());)r(t[i>>2&63]),n=(3&i)<<4,null!==(i=e())?(n|=i>>4&15,r(t[63&(n|i>>4&15)]),n=(15&i)<<2,null!==(i=e())?(r(t[63&(n|i>>6&3)]),r(t[63&i])):(r(t[63&n]),r(61))):(r(t[63&n]),r(61),r(61))},e.decode=function(e,t){function i(e){throw Error("Illegal character code: "+e)}for(var n,s,o;null!==(n=e());)if(s=r[n],void 0===s&&i(n),null!==(n=e())&&(o=r[n],void 0===o&&i(n),t(s<<2>>>0|(48&o)>>4),null!==(n=e()))){if(void 0===(s=r[n])){if(61===n)break;i(n)}if(t((15&o)<<4>>>0|(60&s)>>2),null!==(n=e())){if(void 0===(o=r[n])){if(61===n)break;i(n)}t((3&s)<<6>>>0|o)}}},e.test=function(e){return/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(e)},e}();s.mA=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var i;return h.encode(function(){return e<t?this.view.getUint8(e++):null}.bind(this),i=r()),i()},n.j_=function(e,r,i){if(!i){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if(e.length%4!=0)throw TypeError("Illegal str: Length not a multiple of 4")}var s=new n(e.length/4*3,r,i),o=0;return h.decode(t(e),function(e){s.view.setUint8(o++,e)}),s.F_=o,s},n.btoa=function(e){return n.K_(e).mA()},n.atob=function(e){return n.j_(e).SA()},s.SA=function(e,t){if(e=void 0===e?this.offset:e,t=void 0===t?this.F_:t,!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(e===t)return"";for(var r=[],i=[];e<t;)r.push(this.view.getUint8(e++)),r.length>=1024&&(i.push(String.fromCharCode.apply(String,r)),r=[]);return i.join("")+String.fromCharCode.apply(String,r)},n.K_=function(e,t,r){if(!r&&"string"!=typeof e)throw TypeError("Illegal str: Not a string");for(var i,s=0,o=e.length,a=new n(o,t,r);s<o;){if(i=e.charCodeAt(s),!r&&i>255)throw RangeError("Illegal charCode at "+s+": 0 <= "+i+" <= 255");a.view.setUint8(s++,i)}return a.F_=o,a},s.EA=function(e){for(var t,r=-1,i=this.buffer.byteLength,n="",s="",o="";r<i;){if(-1!==r&&(t=this.view.getUint8(r),n+=t<16?"0"+t.toString(16).toUpperCase():t.toString(16).toUpperCase(),e&&(s+=t>32&&t<127?String.fromCharCode(t):".")),++r,e&&r>0&&r%16==0&&r!==i){for(;n.length<51;)n+=" ";o+=n+s+"\n",n=s=""}r===this.offset&&r===this.F_?n+=r===this.M_?"!":"|":r===this.offset?n+=r===this.M_?"[":"<":r===this.F_?n+=r===this.M_?"]":">":n+=r===this.M_?"'":e||0!==r&&r!==i?" ":""}if(e&&" "!==n){for(;n.length<51;)n+=" ";o+=n+s+"\n"}return e?o:n},n.W_=function(e,t,r){for(var i,s,o=e.length,a=new n((o+1)/3|0,t,r),h=0,c=0,u=!1,l=!1,p=!1,d=!1,f=!1;h<o;){switch(i=e.charAt(h++)){case"!":if(!r){if(l||p||d){f=!0;break}l=p=d=!0}a.offset=a.M_=a.F_=c,u=!1;break;case"|":if(!r){if(l||d){f=!0;break}l=d=!0}a.offset=a.F_=c,u=!1;break;case"[":if(!r){if(l||p){f=!0;break}l=p=!0}a.offset=a.M_=c,u=!1;break;case"<":if(!r){if(l){f=!0;break}l=!0}a.offset=c,u=!1;break;case"]":if(!r){if(d||p){f=!0;break}d=p=!0}a.F_=a.M_=c,u=!1;break;case">":if(!r){if(d){f=!0;break}d=!0}a.F_=c,u=!1;break;case"'":if(!r){if(p){f=!0;break}p=!0}a.M_=c,u=!1;break;case" ":u=!1;break;default:if(!r&&u){f=!0;break}if(s=parseInt(i+e.charAt(h++),16),!r&&(isNaN(s)||s<0||s>255))throw TypeError("Illegal str: Not a debug encoded string");a.view.setUint8(c++,s),u=!0}if(f)throw TypeError("Illegal str: Invalid symbol at "+h)}if(!r){if(!l||!d)throw TypeError("Illegal str: Missing offset or limit");if(c<a.buffer.byteLength)throw TypeError("Illegal str: Not a debug encoded string (is it hex?) "+c+" < "+o)}return a},s.IA=function(e,t){if(e=void 0===e?this.offset:e,t=void 0===t?this.F_:t,!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}for(var r,i=new Array(t-e);e<t;)r=this.view.getUint8(e++),r<16?i.push("0",r.toString(16)):i.push(r.toString(16));return i.join("")},n.Q_=function(e,t,r){if(!r){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if(e.length%2!=0)throw TypeError("Illegal str: Length not a multiple of 2")}for(var i,s=e.length,o=new n(s/2|0,t),a=0,h=0;a<s;a+=2){if(i=parseInt(e.substring(a,a+2),16),!r&&(!isFinite(i)||i<0||i>255))throw TypeError("Illegal str: Contains non-hex characters");o.view.setUint8(h++,i)}return o.F_=h,o};var c=function(){var e={};return e.wA=1114111,e.bA=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<128?t(127&r):r<2048?(t(r>>6&31|192),t(63&r|128)):r<65536?(t(r>>12&15|224),t(r>>6&63|128),t(63&r|128)):(t(r>>18&7|240),t(r>>12&63|128),t(r>>6&63|128),t(63&r|128)),r=null},e.iA=function(e,t){for(var r,i,n,s,o=function(e){e=e.slice(0,e.indexOf(null));var t=Error(e.toString());throw t.name="TruncatedError",t.bytes=e,t};null!==(r=e());)if(0==(128&r))t(r);else if(192==(224&r))null===(i=e())&&o([r,i]),t((31&r)<<6|63&i);else if(224==(240&r))(null===(i=e())||null===(n=e()))&&o([r,i,n]),t((15&r)<<12|(63&i)<<6|63&n);else{if(240!=(248&r))throw RangeError("Illegal starting byte: "+r);(null===(i=e())||null===(n=e())||null===(s=e()))&&o([r,i,n,s]),t((7&r)<<18|(63&i)<<12|(63&n)<<6|63&s)}},e.CA=function(e,t){for(var r,i=null;;){if(null===(r=null!==i?i:e()))break;r>=55296&&r<=57343&&null!==(i=e())&&i>=56320&&i<=57343?(t(1024*(r-55296)+i-56320+65536),i=null):t(r)}null!==i&&t(i)},e.nA=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<=65535?t(r):(r-=65536,t(55296+(r>>10)),t(r%1024+56320)),r=null},e.YP=function(t,r){e.CA(t,function(t){e.bA(t,r)})},e.WP=function(t,r){e.iA(t,function(t){e.nA(t,r)})},e._A=function(e){return e<128?1:e<2048?2:e<65536?3:4},e.PA=function(t){for(var r,i=0;null!==(r=t());)i+=e._A(r);return i},e.KP=function(t){var r=0,i=0;return e.CA(t,function(t){++r,i+=e._A(t)}),[r,i]},e}();return s.TA=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.F_),!this.B_){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var i;try{c.WP(function(){return e<t?this.view.getUint8(e++):null}.bind(this),i=r())}catch(r){if(e!==t)throw RangeError("Illegal range: Truncated data, "+e+" != "+t)}return i()},n.Y_=function(e,r,i){if(!i&&"string"!=typeof e)throw TypeError("Illegal str: Not a string");var s=new n(c.KP(t(e),!0)[1],r,i),o=0;return c.YP(t(e),function(e){s.view.setUint8(o++,e)}),s.F_=o,s},n}"object"==typeof e&&e&&"object"==typeof t&&t?e.i=function(){var e;try{e=r(93)}catch(e){}return a(e)}():(n=[r(94)],void 0!==(s=function(e){return a(e)}.apply(t,n))&&(e.i=s))}()}).call(t,r(63)(e))},function(e,t,r){"use strict";var i=r(4),n=r(0),s=r(25),o=r(47),a=r(164),h=r(6),c=r(1),u=r(2),l=h.he.Rh,p=h.he.Th,d=function(){function e(e,t,r,i){this.loggerId="[P2PDispatcher] ",this.logger=n.Framework.resolve(n.Framework.V.R).log(e.sessionId),this.Sg=t,this.otherGuid=r,this.swarmId=e.swarmId,this.yg=i,this.receiver=new a.C6(t,r,e),this.sender=new a._6(t,r,e,this),this.vD=e.vD,this.TD=e.TD,this.qJ=e.qJ,(p||n.Framework.C()&&o.$N.XN)&&(this.QJ=e.QJ)}return e.prototype.Dg=function(){return this.sender.Dg()||this.receiver.Dg()},e.prototype.close=function(){var e=this,t=i.defer();return this.sender.P6().then(function(r){return e.receiver.close(r).then(function(r){return e.Rj(r).then(function(r){return e.yg.close(r).then(function(e){t.resolve(e)})})})}).catch(function(r){c.ErrorMonitor.ve().logError("Error closing connection to peer",e.loggerId,u.hs.We.qe,{detailedError:r,otherGuid:e.otherGuid}),t.reject("Close partnership failed")}),t.Ss},e.prototype.Rj=function(e){this.logger.debug("SEND CLOSE TO "+this.otherGuid);var t=new s.Rf.Fa.Jg.Close;return t.setType(e),this.Lg(s.Rf.Eg.Close,t),i(this.swarmId)},e.prototype.As=function(e){try{switch(l&&this.logger.debug("DISPATCH "+e.msgId),e.msgId){case s.Rf.Eg.Chunk:var t=s.Rf.Fa.Jg.Chunk.decode(e.Wg);this.receiver.A6(t);break;case s.Rf.Eg.Ack:var r=s.Rf.Fa.Jg.Ack.decode(e.Wg);this.sender.O6(r.transferId);break;case s.Rf.Eg.Cancel:var i=s.Rf.Fa.Jg.Cancel.decode(e.Wg);this.sender.N6(i.transferId);break;case s.Rf.Eg.lg:l&&this.logger.debug("RECEIVED OUT PART,DECODING ");var n=s.Rf.Fa.Jg.OutPartnershipRequest.decode(e.Wg);l&&this.logger.debug("RECEIVED OUT PART FROM "+n.guid),this.TD.Cj(n,this.yg);break;case s.Rf.Eg.pg:l&&this.logger.debug("RECEIVED OUT PART RESP ");var o=s.Rf.Fa.Jg.OutPartnershipResponse.decode(e.Wg);l&&this.logger.debug("RECEIVED OUT PART RESP FROM "+o.accept),this.TD.Qj(o,this.yg);break;case s.Rf.Eg.Have:var a=s.Rf.Fa.Jg.Have.decode(e.Wg);l&&this.logger.debug("RECEIVED HAVE FOR "+a.fragmentId+" FROM "+this.otherGuid),this.TD.D6(this.otherGuid,a);break;case s.Rf.Eg.Close:var h=s.Rf.Fa.Jg.Close.decode(e.Wg);l&&this.logger.debug("RECEIVED CLOSE FROM "+this.otherGuid),this.TD.Vj(this.otherGuid,h);break;case s.Rf.Eg.Request:var p=s.Rf.Fa.Jg.Request.decode(e.Wg);l&&this.logger.debug("RECEIVED REQUEST FOR "+p.fragmentId+" FROM "+this.otherGuid),this.qJ.PM(this.otherGuid,p,this);break;case s.Rf.Eg.DoNotHave:var d=s.Rf.Fa.Jg.DoNotHave.decode(e.Wg);l&&this.logger.debug("DoNotHave "+d.transferId),this.vD.k6(d);break;case s.Rf.Eg.dg:var f=s.Rf.Fa.Jg.UDPHandshakeMessage.decode(e.Wg);l&&this.logger.debug("UDP HANDSHAKE MESSAGE RECEIVED FROM "+f.uuid),this.QJ.SG(f,this.yg);break;case s.Rf.Eg.UDPHandshakeResponse:var g=s.Rf.Fa.Jg.UDPHandshakeResponse.decode(e.Wg);l&&this.logger.debug("UDP HANDSHAKE MESSAGE RESPONSE RECEIVED FROM "+this.otherGuid),this.QJ.IG(g,this.yg);break;case s.Rf.Eg.UDPSwitchLeadershipRequest:var E=s.Rf.Fa.Jg.UDPSwitchLeadershipRequest.decode(e.Wg);l&&this.logger.debug("SWITCH LEADERSHIP REQUEST RECEIVED FROM "+this.otherGuid),this.QJ.UG(E);break;case s.Rf.Eg.fg:var v=s.Rf.Fa.Jg.UDPSwitchLeadershipAck.decode(e.Wg);l&&this.logger.debug("UDP SWITCH ACKNOWLEDGMENT RESPONSE FROM "+this.otherGuid),this.QJ.VG(v,this.otherGuid);break;case s.Rf.Eg.Bitrate:var y=s.Rf.Fa.Jg.Bitrate.decode(e.Wg);l&&this.logger.debug("BITRATE INFO "+y.bitrate+" FROM "+y.guid),this.TD.Wj(y);break;case s.Rf.Eg.Haves:var T=s.Rf.Fa.Jg.Haves.decode(e.Wg);l&&this.logger.debug("RECEIVED BATCH HAVES FOR FROM "+this.otherGuid),this.TD.L6(this.otherGuid,T);break;case s.Rf.Eg.nd:var m=s.Rf.Fa.Jg.PeerInfoMessage.decode(e.Wg);l&&this.logger.debug("RECEIVED PEER INFO FROM "+this.otherGuid),this.TD.Xj(m);break;case s.Rf.Eg.Ping:var I=s.Rf.Fa.Jg.Ping.decode(e.Wg);l&&this.logger.debug("RECEIVED PING FROM "+this.otherGuid),this.TD.M6(I);break;case s.Rf.Eg.Pong:var S=s.Rf.Fa.Jg.Pong.decode(e.Wg);l&&this.logger.debug("RECEIVED PONG FROM "+this.otherGuid),this.TD.F6(S);break;case s.Rf.Eg.gg:var R=s.Rf.Fa.Jg.NoPartners.decode(e.Wg);l&&this.logger.debug("RECEIVED NON PARTNER MESSAGE FROM "+this.otherGuid),this.vD.U6(this.otherGuid,R);break;default:this.logger.warn("UNKNOWN MESSAGE TYPE "+e.msgId)}}catch(e){c.ErrorMonitor.ve().logError("Error dispatching message",this.loggerId,e,u.hs.We.Ye,e)}},e.prototype.Lg=function(e,t){this.yg.Lg(e,this.swarmId,t)},e}();t.Ig=d},function(e,t,r){"use strict";var i=r(48),n=r(35),s=r(4),o=r(25),a=r(0),h=r(7),c=r(165),u=r(5),l=r(95),p=r(1),d=r(2),f=function(){function e(e,t,r){this.loggerId="[FragmentRequester] ",this.B6=new i,this.H6=new i,this.x6=null,this.ug=o.Rf.ug,this.Sg=e,this.otherGuid=t,this.vD=r.vD,this.yD=r.yD,this.Ng=a.Framework.resolve(a.Framework.V.F),this.logger=a.Framework.resolve(a.Framework.V.R).log(r.sessionId)}return e.prototype.setReportingGuid=function(e){this.q6=e},e.prototype.Dg=function(){return!(0===this.B6.keys().length&&null===this.x6)},e.prototype.G6=function(e){var t=new o.Rf.Fa.Jg.Request;try{t.fragmentId=e.Zf(),t.transferId=e.Pk,this.ug&&this.logger.debug("INITIATING TR-"+e.Pk+" TIMEOUT: "+e.V6+" FRAGMENT: "+e.Zf()+" FROM: "+this.otherGuid),this.B6.set(e.Pk,e),this.H6.set(e.Pk,a.Framework.time())}catch(e){p.ErrorMonitor.ve().logError("Error constructing fragment request message",this.loggerId,d.hs.Zi.Qi,{detailedError:e,otherGuid:this.otherGuid}),t=null}try{t&&e.xq.wj.Lg(o.Rf.Eg.Request,t)}catch(e){p.ErrorMonitor.ve().logError("Error sending fragment request",this.loggerId,d.hs.Zi.Ki,{detailedError:e,otherGuid:this.otherGuid})}},e.prototype.A6=function(e){try{var t=e.transferId,r=e.data.yA(),i=e.chunkSize,n=e.totalSize,s=e.headers;if(this.ug&&this.logger.debug("RCV Chunk "+r.byteLength),!this.B6.has(t))return;null==this.x6?(this.ug&&this.logger.debug("INITIATED TR-"+t+",SIZE="+n),this.x6=this.B6.get(t),this.x6.Pk=t,this.j6(t,this.x6.xq),null!=s?this.x6.responseHeaders=s:this.logger.warn("HEADERS NULL IN FIRST CHUNK"),this.vD.v1(this.otherGuid,this.x6,i,n),this.x6.Qf=i,a.Framework.C()||(this.x6.jf=r)):(this.j6(t,this.x6.xq),this.x6.Qf+=i,a.Framework.C()||(this.x6.jf=h.rc.appendBuffer(this.x6.jf,r)));var o=a.Framework.C()?this.x6.Qf:this.x6.jf.byteLength;if(this.ug&&this.logger.debug("RECEIVED "+o+"/"+n+" TRID "+t),o==n){this.ug&&this.logger.debug("RCV ALL DATA "+o+" TR-"+this.x6.Yf),this.x6.qf.Af=o,a.Framework.clearTimeout(this.x6.mG),this.B6.delete(t);var c=a.Framework.time()-this.H6.get(t);this.logger.debug("RCV ALL DATA FROM "+this.otherGuid+" AFTER "+c+" mseconds"),this.H6.delete(t),this.vD.UD(t,this.x6),this.x6=null}}catch(e){p.ErrorMonitor.ve().logError("Error receiving chunk",this.loggerId,d.hs.Zi.Yi,{detailedError:e,otherGuid:this.otherGuid})}},e.prototype.j6=function(e,t){try{this.ug&&this.logger.debug("SEND ACK "+e+" TO "+this.otherGuid);var r=new o.Rf.Fa.Jg.Ack;r.transferId=e,t.wj.Lg(o.Rf.Eg.Ack,r)}catch(e){p.ErrorMonitor.ve().logError("Error sending ack",this.loggerId,d.hs.Zi.Wi,{detailedError:e,otherGuid:this.otherGuid})}},e.prototype.close=function(e){var t=this,r=s.defer();return null!=this.x6&&this.Q6(this.x6.Pk),this.B6.keys().slice().forEach(function(e){t.Q6(e)}),r.resolve(l.xV.Jq),r.Ss},e.prototype.Q6=function(e){try{if(this.B6.has(e)){var t=this.B6.get(e);t.qf.Af=t.Qf,this.logger.debug("SEND CANCEL FOR "+e+" TO "+this.otherGuid),this.H6.delete(e);var r=new o.Rf.Fa.Jg.Cancel;r.transferId=e,t.xq.wj.Lg(o.Rf.Eg.Cancel,r),null!==this.x6&&this.x6.$f()===t.$f()&&(this.x6=null),this.B6.delete(e)}else p.ErrorMonitor.ve().logError("Error cleaning up a not pending transfer",this.loggerId,d.hs.Zi.zi)}catch(e){p.ErrorMonitor.ve().logError("Error sending stop transfer",this.loggerId,d.hs.Zi.Ji,{detailedError:e,otherGuid:this.otherGuid})}},e}();t.C6=f;var g=function(){function e(e,t,r,n){this.loggerId="[FragmentSender] ",this.ug=o.Rf.ug,this.K6=null,this.Y6=new Array,this.W6=new i,this.z6=0,this.close=null,this.Sg=e,this.otherGuid=t,this.J6=r.qJ,this.wj=n,this.ID=r.ID,this.logger=a.Framework.resolve(a.Framework.V.R).log(r.sessionId),this.Ng=a.Framework.resolve(a.Framework.V.F)}return e.prototype.setReportingGuid=function(e){this.q6=e},e.prototype.X6=function(e,t,r,i,n){var s=this;this.ug&&this.logger.info("SEND FRAGMENT "+e+" TO "+this.otherGuid);try{var o=new c.Z6;o.transferId=t,o.fragmentId=e,o.e8=n,o.headers=i,o.t8=r,o.r8=Math.ceil(o.t8/u.hh.Fa.Da),o.n8=0,this.Y6.push(o),this.ug&&this.Y6.forEach(function(e){s.logger.debug(s.otherGuid+" PENDING OUT "+e)})}catch(e){p.ErrorMonitor.ve().logError("Error constructing chunk response",this.loggerId,d.hs.in.$i,{detailedError:e,otherGuid:this.otherGuid})}null===this.K6?this.s8():this.ug&&this.logger.debug(this.otherGuid+" OUT MSG NOT NULL")},e.prototype.O6=function(e){this.ug&&this.logger.debug("ONGOING "+e+" GOT ACK"),null!==this.K6&&this.K6.transferId.toString()===e.toString()?this.o8(!1):p.ErrorMonitor.ve().logError("Error receiving ack for unknown transfer",this.loggerId,d.hs.in.rn)},e.prototype.N6=function(e){null!=this.K6&&this.K6.transferId===e?(this.logger.debug("GOT CANCEL FOR ONGOING TR-"+e),this.logger.debug("TRANSPORT CANCEL STATS "+this.Sg+","+this.otherGuid+","+e),this.W6.delete(e),0!=this.K6.n8?this.J6.a8(this.otherGuid,this.q6,this.K6.n8,this.K6.t8):this.J6.h8(this.otherGuid,this.q6,this.K6.t8),this.K6=null,this.s8()):this.Y6=this.Y6.filter(function(t){return t.transferId!==e})},e.prototype.s8=function(){try{if(null===this.K6&&0!==this.Y6.length){var e=this.Y6.shift();this.K6=e,this.ug&&this.logger.debug("DATA TO SEND LENGTH "+this.K6.t8+" IN "+this.K6.r8+" CHUNKS WITH TR-"+this.K6.transferId),this.o8(!0)}}catch(e){p.ErrorMonitor.ve().logError("Error start sending chunks",this.loggerId,d.hs.in.en,e),this.kg()}},e.prototype.o8=function(e){e&&(this.W6.set(this.K6.transferId,a.Framework.time()),this.z6=this.K6.r8);try{if(null!=this.K6)if(0===this.K6.r8)this.logger.debug("FINISHED SENDING TRANSFER "+this.K6.transferId+" WITH "+this.K6.n8+" BYTES"),this.W6.delete(this.K6.transferId),this.J6.c8(this.otherGuid,this.q6,this.K6.t8),this.K6=null,this.u8(),this.s8();else{this.ug&&this.logger.debug("A CHUNK");var t=Math.min(this.K6.n8+u.hh.Fa.Da,this.K6.t8),r=t-this.K6.n8,i=new o.Rf.Fa.Jg.Chunk;if(i.transferId=this.K6.transferId,i.totalSize=this.K6.t8,i.chunkSize=r,e&&null!=this.K6.headers&&(i.headers=this.K6.headers),a.Framework.C()||null==this.K6.e8)i.data=n.wrap(new ArrayBuffer(0));else if(i.data=this.ID.l8(this.K6.fragmentId,this.z6-this.K6.r8),null==i.data){var s=this.K6.e8.slice(this.K6.n8,t);i.data=n.wrap(s)}this.K6.n8=this.K6.n8+r,this.wj.Lg(o.Rf.Eg.Chunk,i),this.ug&&this.logger.debug("SND ["+this.K6.n8+"-"+(this.K6.n8+r)+"/"+this.K6.t8+"] TO "+this.otherGuid+" OF TR-"+this.K6.transferId),this.K6.r8--}else this.logger.debug("NO MESSAGE TO SEND")}catch(e){p.ErrorMonitor.ve().logError("Error sending chunk",this.loggerId,d.hs.in.tn,{detailedError:e,otherGuid:this.otherGuid}),this.kg()}},e.prototype.Dg=function(){return!(0===this.Y6.length&&null===this.K6)},e.prototype.P6=function(){var e=s.defer();return this.Y6.length=0,this.Dg()?this.close=e:e.resolve("CLOSE"),e.Ss},e.prototype.u8=function(){this.close&&this.close.resolve("CLOSED")},e.prototype.kg=function(){this.K6=null},e}();t._6=g},function(e,t,r){"use strict";var i=function(){function e(){this.headers=null}return e}();t.Z6=i},function(e,t,r){"use strict";var i=r(3),n=r(0),s=r(5),o=r(15),a=r(2),h=r(1),c=function(){function e(e,t,r,s,a,h){this.loggerId="[Partner] ",this.p8=0,this.d8=0,this.f8=0,this.g8=new Array,this.E8=new Array,this.B6=new i,this.logger=s,this.wj=r,this.guid=e,this.Ek=h,this.v8=a,this.KM=t,this.gQ=n.Framework.resolve(o.qu.ku),this.vQ=n.Framework.resolve(o.qu.ku),this.y8=n.Framework.time()}return e.prototype.Dj=function(e){this.reportingGuid=e,this.wj&&(this.wj.receiver.setReportingGuid(this.reportingGuid),this.wj.sender.setReportingGuid(this.reportingGuid))},e.prototype.T8=function(e,t,r){var i=Math.max(1,t);for(r&&(this.d8+=i,this.p8+=e);this.g8.length>s.hh.Oa.wa;)this.g8.pop();var n=e/i;this.g8.unshift(n)},e.prototype.m8=function(e){this.B6.has(e)?this.logger.warn(this.guid+" DUPLICATE {} PENDING REQUESTS "+e):this.B6.set(e,n.Framework.time())},e.prototype.I8=function(e,t,r,i,s,o){try{if(this.B6.has(e)){var c=this.B6.get(e),u=n.Framework.time()-c;this.B6.delete(e),i&&this.T8(t,u,!0),this.gQ.success(t),this.KM.S8(this.reportingGuid,t,r,s,o)}else h.ErrorMonitor.ve().logError("Error completing a non-existing request",this.loggerId,a.hs.Dn._n,{otherGuid:this.guid,q6:this.reportingGuid})}catch(e){h.ErrorMonitor.ve().logError("Error handling request completed",this.loggerId,a.hs.Dn.Cn,{detailedError:e,otherGuid:this.guid,q6:this.reportingGuid})}},e.prototype.R8=function(e,t,r,i,n,o){try{if(this.B6.has(e)){var c=this.B6.get(e);this.B6.delete(e),s.hh.Oa.ba?this.T8(t,c,!0):this.T8(0,c,!0),this.gQ.w8(t,i),this.KM.b8(this.reportingGuid,t,r,i,n,o)}else h.ErrorMonitor.ve().logError("Error partially failed a non-existing request",this.loggerId,a.hs.Dn.An,{otherGuid:this.guid,q6:this.reportingGuid})}catch(e){h.ErrorMonitor.ve().logError("Error handling request partially failed ",this.loggerId,a.hs.Dn.Pn,{detailedError:e,otherGuid:this.guid})}},e.prototype._k=function(e,t,r){try{if(this.B6.has(e)){var i=this.B6.get(e);this.B6.delete(e),this.T8(0,i,!0),this.gQ.ll(),this.KM.C8(this.reportingGuid,r,t)}else h.ErrorMonitor.ve().logError("Error failed a non-existing request",this.loggerId,a.hs.Dn.Nn,{otherGuid:this.guid,q6:this.reportingGuid})}catch(e){h.ErrorMonitor.ve().logError("Error handling request failed ",this.loggerId,a.hs.Dn.On,{detailedError:e,otherGuid:this.guid})}},e.prototype._8=function(e,t){this.KM.P8(e,t,!0)},e.prototype.A8=function(e,t){this.KM.O8(e,t,!0)},e.prototype.N8=function(e,t,r){this.KM.D8(e,t,r,!0)},e.prototype.k8=function(){var e=this.g8.reduce(function(e,t){return e+t},0);return this.g8.length>0?e/this.g8.length:0},e.prototype.L8=function(e){this.f8=e},e.prototype.M8=function(){return this.f8},e.prototype.Ij=function(){return this.Ek.Ij()},e}();t.Partner=c},function(e,t,r){"use strict";var i=r(35),n=r(3),s=r(0),o=r(10),a=r(25),h=r(5),c=r(1),u=r(168),l=r(2),p=function(){function e(){this.jM="[PARTNERSHIP] ",this.aj=new n,this.gB=new n,this.dB=new n,this.fB=new n,this.F8=!1,this.U8=!1,this.B8=!0,this.active=!1,this.H8(),this.lj=[]}return e.prototype.init=function(e){this.logger=s.Framework.resolve(s.Framework.V.R).log(e.sessionId),this.yD=e.yD,this.sC=e.sC,this.uploadScore=e.uploadScore,this.gD=e.gD,this.yj=e.YM},e.prototype.sj=function(e){return this._j(e.peerInfo.guid)},e.prototype._j=function(e){return this.fB.has(e)||this.dB.has(e)},e.prototype.$j=function(e){return this.dB.has(e)?this.dB.get(e):this.fB.get(e)},e.prototype.rj=function(e){return this.xj(e.peerInfo.guid)},e.prototype.xj=function(e){return this.gB.has(e)||this.aj.has(e)},e.prototype.qj=function(e){return this.gB.has(e)?this.gB.get(e):this.aj.get(e)},e.prototype.Lj=function(e){var t=this;try{var r=this.yD.x8();if(this.B8&&!r)if(this._j(e)){var i=this.$j(e),n=this.uploadScore.q8(!1),s=[];this.sC.Vq(this.context.isLive()).then(function(r){t.logger.debug(t.jM+"SEND ALL HAVES TO "+e+","+r.length);for(var o=0;o<r.length;o++){var h=0;h=t.context.isLive()?r[o].size():r[o].totalSize;var c=r[o].zf,u=new a.Rf.Fa.Jg.Have;u.setFragmentId(c.Zf()),u.setSize(h),u.setUploadScore(n);var l=c;u.setId(l.A_()),u.setBitrate(l.bitrate),u.setDuration(l.duration),u.setType(l.Xf()),s.push(u)}if(s.length>0){var p=new a.Rf.Fa.Jg.Haves;p.setHave(s),i.wj.Lg(a.Rf.Eg.Haves,p)}})}else c.ErrorMonitor.ve().logError("Error sending all haves to peer who is not out partner",this.jM,l.hs.Ut.Ct,{otherGuid:e})}catch(t){c.ErrorMonitor.ve().logError("Error sending all haves",this.jM,l.hs.Ut.Tt,{detailedError:t,otherGuid:e})}},e.prototype.oZ=function(e,t,r){var i=this,n=this.yD.x8();if(this.B8&&!n){var s=this.dB.values();this.fB.forEach(function(e,t){s.push(e)});var o=this.uploadScore.q8(!1);s.forEach(function(n){(!r||r&&n.guid!=r.guid)&&i.G8(n.wj,e,t,o)})}},e.prototype.G8=function(e,t,r,i){this.F8&&this.logger.debug(this.jM+"SEND HAVE TO "+e.otherGuid+" FOR "+t.Zf());try{var n=new a.Rf.Fa.Jg.Have;n.setFragmentId(t.Zf()),n.setSize(r),n.setUploadScore(i);var s=t;n.setId(s.A_()),n.setBitrate(s.bitrate),n.setDuration(s.duration),n.setType(s.Xf()),e.Lg(a.Rf.Eg.Have,n)}catch(t){c.ErrorMonitor.ve().logError("Error sending have ",this.jM,l.hs.Ut.It,{detailedError:t,otherGuid:e.otherGuid})}},e.prototype.D6=function(e,t){try{if(this.xj(e)){this.U8&&this.logger.debug(this.jM+"HAVE RECEIVED FROM "+e+": "+t.fragmentId);var r=this.qj(e);r.L8(t.getUploadScore()),this.gD.put(t,r),this.context.vF(t)}else c.ErrorMonitor.ve().logError("Error receiving have from unknown peer",this.jM,l.hs.Ut.St,{otherGuid:e})}catch(t){c.ErrorMonitor.ve().logError("Error handling received have",this.jM,l.hs.Ut.wt,{detailedError:t,otherGuid:e})}},e.prototype.L6=function(e,t){var r=this;try{if(this.xj(e)){this.U8&&this.logger.debug(this.jM+"BATCH HAVES RECEIVED FROM "+e);var i=this.qj(e);t.getHave().forEach(function(e){i.L8(e.getUploadScore()),r.gD.put(e,i)}),this.context.vF(t.getHave()[0])}else c.ErrorMonitor.ve().logError("Error receiving haves from unknown peer",this.jM,l.hs.Ut.Rt,{otherGuid:e})}catch(t){c.ErrorMonitor.ve().logError("Error handling received haves",this.jM,l.hs.Ut.bt,{detailedError:t,otherGuid:e})}},e.prototype.mj=function(e){try{var t=new a.Rf.Fa.Jg.Ping;t.id=this.yD.getId(),t.startTs=s.Framework.time(),this.logger.debug(this.jM+"REQUEST PING TO PEER GUID "+e.otherGuid),e.Lg(a.Rf.Eg.Ping,t)}catch(t){c.ErrorMonitor.ve().logError("Error requesting ping",this.jM,l.hs.Ut.Pt,{detailedError:t,otherGuid:e.otherGuid})}},e.prototype.M6=function(e){try{var t=e.id;if(!this._j(t))return void c.ErrorMonitor.ve().logError("Error receiving ping from an unknown peer",this.jM,l.hs.Ut.Ot,{otherGuid:t});var r=-1;e.startTs&&(r=e.startTs),this.V8(this.$j(t).wj,r)}catch(t){c.ErrorMonitor.ve().logError("Error handling received ping",this.jM,l.hs.Ut.At,{detailedError:t,otherGuid:e.id})}},e.prototype.H8=function(){try{for(var e="",t=0;t<h.hh.Fa.Da;t++)e+=String.fromCharCode(33+93*Math.random());for(var r=new ArrayBuffer(e.length),n=new Uint8Array(r),s=e.length,t=0;t<s;t++)n[t]=e.charCodeAt(t);this.j8=i.wrap(n)}catch(e){c.ErrorMonitor.ve().logError("Error creating random buffer for ping pong",this.logger,l.hs.Ut._t,e)}},e.prototype.V8=function(e,t){try{var r=new a.Rf.Fa.Jg.Pong;r.id=this.yD.getId(),r.startTs=t,this.j8||this.H8(),r.data=this.j8,r.dataSize=h.hh.Fa.Da,this.logger.debug(this.jM+"SEND PONG TO PEER GUID "+e.otherGuid),e.Lg(a.Rf.Eg.Pong,r)}catch(t){c.ErrorMonitor.ve().logError("Error sending pong",this.jM,l.hs.Ut.Nt,{detailedError:t,otherGuid:e.otherGuid})}},e.prototype.F6=function(e){try{var t=e.id;if(!this.xj(t))return void c.ErrorMonitor.ve().logError("Error receiving a pong from an unknown peer",this.jM,l.hs.Ut.Dt,{otherGuid:t});var r=s.Framework.time();if(e.startTs&&e.startTs>0){var i=r-e.startTs,n=this.qj(t);e.dataSize==e.data.tc().byteLength?n.T8(e.dataSize,i,!0):c.ErrorMonitor.ve().logError("Error receing pong with wrong data size",this.jM,l.hs.Ut.kt,{otherGuid:t})}else c.ErrorMonitor.ve().logError("Error receiving pong with wrong timestamp",this.jM,l.hs.Ut.Lt,{otherGuid:t})}catch(t){c.ErrorMonitor.ve().logError("Error receiving pong",this.jM,l.hs.Ut.Mt,{detailedError:t,otherGuid:e.id})}},e.prototype.vB=function(){try{var e=new n;return this.Q8(this.gB,e),this.Q8(this.aj,e),e}catch(e){return c.ErrorMonitor.ve().logError("Error getting partner snapshots",this.jM,l.hs.Ut.Ft,e),new n}},e.prototype.Q8=function(e,t){var r=this;e.forEach(function(e,i){var n=new hive.snapshots.Partner;n.inPart=!0,n.outPart=r._j(i),n.connInfo=new hive.snapshots.ConnectivityInfo;var s=void 0;e.Ek.peerInfo.publicIpString&&(s=e.Ek.peerInfo.publicIpString);var a=void 0;e.Ek.peerInfo.privateIpString&&(a=e.Ek.peerInfo.privateIpString),n.connInfo.publicIp=s,n.connInfo.privateIp=a,n.connInfo.externalAs=e.Ek.peerInfo.externalAs,n.connInfo.internalAs=e.Ek.peerInfo.internalAs;var h=r.K8();h.rateReceived=e.k8(),n.metrics=h,n.udp=e.Ek.peerInfo.type==o.Tc.W,t.set(e.reportingGuid,n)})},e.prototype.pB=function(){return new u.Y8(this.gB.length,this.aj.length,this.fB.length,this.dB.length)},e.prototype.K8=function(){var e=new hive.snapshots.PartnerMetrics;return e.rateReceived=0,e.rateSent=0,e.handshakeDelay=0,e},e}();t.rQ=p},function(e,t,r){"use strict";var i=function(){function e(e,t,r,i){this.gB=e,this.EB=t,this.fB=r,this.dB=i}return e}();t.Y8=i},function(e,t,r){"use strict";var i=function(){function e(){}return e}();t.Kg=i},function(e,t){e.i={package:"HiveMsgs",messages:[{name:"Chunk",fields:[{rule:"required",type:"int32",name:"transferId",id:1},{rule:"required",type:"int32",name:"totalSize",id:2},{rule:"required",type:"int32",name:"chunkSize",id:3},{rule:"required",type:"bytes",name:"data",id:4},{rule:"optional",type:"string",name:"headers",id:5}]},{name:"Haves",fields:[{rule:"repeated",type:"Have",name:"have",id:1}]},{name:"Have",fields:[{rule:"required",type:"string",name:"fragmentId",id:1},{rule:"required",type:"int32",name:"size",id:2},{rule:"required",type:"int32",name:"type",id:3},{rule:"required",type:"int32",name:"id",id:4},{rule:"required",type:"int32",name:"bitrate",id:5},{rule:"required",type:"int32",name:"duration",id:6},{rule:"required",type:"float",name:"uploadScore",id:7}]},{name:"Ping",fields:[{rule:"required",type:"string",name:"id",id:1},{rule:"required",type:"uint64",name:"startTs",id:2}]},{name:"Pong",fields:[{rule:"required",type:"string",name:"id",id:1},{rule:"required",type:"bytes",name:"data",id:2},{rule:"required",type:"int32",name:"dataSize",id:3},{rule:"required",type:"uint64",name:"startTs",id:4}]},{name:"Request",fields:[{rule:"required",type:"string",name:"fragmentId",id:1},{rule:"required",type:"int32",name:"transferId",id:2}]},{name:"DoNotHave",fields:[{rule:"required",type:"int32",name:"transferId",id:1}]},{name:"NoPartners",fields:[{rule:"required",type:"int32",name:"transferId",id:1}]},{name:"Cancel",fields:[{rule:"required",type:"int32",name:"transferId",id:1}]},{name:"Ack",fields:[{rule:"optional",type:"int32",name:"transferId",id:1}]},{name:"Close",fields:[{rule:"required",type:"int32",name:"type",id:1}]},{name:"StreamCharacteristics",fields:[{rule:"required",type:"int32",name:"streamState",id:1},{rule:"required",type:"int32",name:"bitrate",id:2},{rule:"required",type:"int32",name:"delta",id:3}]},{name:"OutPartnershipRequest",fields:[{rule:"required",type:"string",name:"guid",id:1},{rule:"required",type:"string",name:"contextId",id:2},{rule:"required",type:"string",name:"p2pProtocolVersion",id:3},{rule:"optional",type:"int32",name:"internalAs",id:4},{rule:"optional",type:"int32",name:"externalAs",id:5},{rule:"optional",type:"string",name:"publicIpString",id:6},{rule:"optional",type:"string",name:"privateIpString",id:7},{rule:"required",type:"string",name:"reportingGuid",id:8},{rule:"repeated",type:"StreamCharacteristics",name:"streamCharacteristics",id:9}]},{name:"OutPartnershipResponse",fields:[{rule:"required",type:"int32",name:"accept",id:1},{rule:"optional",type:"int32",name:"internalAs",id:2},{rule:"optional",type:"int32",name:"externalAs",id:3},{rule:"optional",type:"string",name:"publicIpString",id:4},{rule:"optional",type:"string",name:"privateIpString",id:5},{rule:"optional",type:"string",name:"reportingGuid",id:6},{rule:"repeated",type:"StreamCharacteristics",name:"streamCharacteristics",id:7}]},{name:"PeerInfoMessage",fields:[{rule:"required",type:"string",name:"guid",id:1},{rule:"optional",type:"string",name:"publicIpString",id:2},{rule:"optional",type:"string",name:"privateIpString",id:3},{rule:"optional",type:"int32",name:"internalAs",id:4},{rule:"optional",type:"int32",name:"externalAs",id:5},{rule:"repeated",type:"StreamCharacteristics",name:"streamCharacteristics",id:6}]},{name:"UDPHandshakeMessage",fields:[{rule:"required",type:"string",name:"uuid",id:1},{rule:"required",type:"string",name:"streamId",id:2},{rule:"required",type:"float",name:"udpScore",id:3},{rule:"required",type:"bool",name:"isLeader",id:4}]},{name:"UDPHandshakeResponse",fields:[{rule:"required",type:"string",name:"accept",id:1}]},{name:"UDPSwitchLeadershipRequest",fields:[{rule:"required",type:"string",name:"uuid",id:1},{rule:"required",type:"float",name:"udpScore",id:2}]},{name:"UDPSwitchLeadershipAck",fields:[{rule:"required",type:"bool",name:"ok",id:1}]},{name:"Bitrate",fields:[{rule:"required",type:"string",name:"guid",id:1},{rule:"required",type:"int32",name:"bitrate",id:2}]}]}},function(e,t,r){"use strict";var i=r(5),n=function(){function e(e,t,r,i,n){this.udpScore=0,this.cG=!1,this.streamId="",this.uuid=e,this.udpScore=t,r&&(this.address=r),i&&(this.cG=i),n&&(this.streamId=n)}return e.JE=function(e,t){var r=0;return r=e.udpScore>t.udpScore?1:e.udpScore<t.udpScore?-1:0,0!=r?-r:i.hh.UDPBroadcast.xa?t.uuid.localeCompare(e.uuid):e.uuid.localeCompare(t.uuid)},e}();t.hG=n},function(e,t,r){"use strict";var i=r(3),n=r(43),s=r(0),o=r(15),a=r(9),h=r(10),c=r(1),u=r(2),l=function(){function e(){this.loggerId="[P2PRequester] ",this.Ag=new n.Counter,this.W8=new i,this.z8=new i,this.J8=s.Framework.resolve(o.qu.Nu)}return e.prototype.init=function(e){this.logger=s.Framework.resolve(s.Framework.V.R).log(e.sessionId),this.gD=e.gD,this.TD=e.TD,this.ED=e.ED,this.yD=e.yD,this.KM=e.YM,this.J8.X8(e.yD)},e.prototype.request=function(e){this.logger.debug("FRL ISSUE REQ FOR FRAGMENT "+e.zf.toString()+"-"+e.qf.Af+" ["+a.vc[e.Xf()]+"] TO P2P"),this.W8.set(e.$f(),e);var t=this.Ag.next();e.Pk=t,this.z8.set(t,e.$f()),this.M1(e)},e.prototype.M1=function(e){var t=e.Zf(),r=e.$f(),i=this.Z8(t);e.size=this.gD.Q1(t).size;var n=this.J8.e5(i,e.type);null!=n?(this.logger.info("SEND REQUEST "+e.Pk+" FOR "+r+" TO "+n.wj.otherGuid+" (LAN LEADER "+n.Ek.peerInfo.isLeader+" iAS "+n.Ek.peerInfo.internalAs+" eAS "+n.Ek.peerInfo.externalAs+" privateIp "+n.Ek.peerInfo.privateIpString+" ) out of "+i.length+" type "+h.Tc[n.Ek.peerInfo.type]+" size:"+e.size),e.xq=n,e.qq=n.Ek.peerInfo,e.xq.m8(e.Pk),e.qf.Cf=!0,e.qf.Mf=s.Framework.time(),this.KM.t5(e),this.Ck(e)?n.wj.receiver.G6(e):this._k(e.Pk,"TIMED-OUT")):(c.ErrorMonitor.ve().logError("Error sending p2p request because we cannot find a partner",this.loggerId,u.hs.dn.nn),this._k(e.Pk,"NO PARTNERS FOUND FOR REQUEST"))},e.prototype.Z8=function(e){var t=this,r=[];try{this.gD.fk(e).forEach(function(e){t.TD.xj(e.guid)?r.push(e):t.logger.warn("I HAVE A HAVE FROM A NON IN-PARTNER "+e.guid)})}catch(e){c.ErrorMonitor.ve().logError("Error filtering in partners",this.loggerId,u.hs.dn.sn,e)}finally{return r}},e.prototype.Ck=function(e){var t=this,r=!1;try{var i=0;null==e.size?(i=this.gD.Q1(e.Zf()).size,this.logger.warn("request size not set - this should not happen")):i=e.size;var n=e.Wf.dM().ax(e,i);return e.V6=n,n>0&&(r=!0,null==e.mG&&(e.mG=s.Framework.setTimeout(function(){t.KM.r5(e),t._k(e.Pk,"TIMED-OUT")},n))),r}catch(e){return c.ErrorMonitor.ve().logError("Error setting request timeout",this.loggerId,u.hs.dn.an,e),!1}},e.prototype._k=function(e,t){this.logger.info(t+" "+e);var r=this.i5(e,!0);this.logger.info("REQUEST "+e+" FOR "+r.$f()+" FAILED BECAUSE "+t),r&&this.ED.GX(r)},e.prototype.i5=function(e,t){try{if(this.z8.has(e)){var r=this.z8.get(e);this.z8.delete(e);var i=this.W8.get(r);if(this.W8.delete(r),s.Framework.clearTimeout(i.mG),t&&this.TD.xj(i.xq.wj.otherGuid)){i.xq.wj.receiver.Q6(e);var n=i.Xf()==a.vc.fc;0!=i.Qf?i.xq.R8(i.Pk,i.Qf,i.qf.p2pAgenTrafficSuccessQt,i.size,n,i.type):i.xq._k(i.Pk,n,i.size)}return i}return c.ErrorMonitor.ve().logError("Error cancelling request on non existing session",this.loggerId,u.hs.dn.cn),null}catch(e){return c.ErrorMonitor.ve().logError("Error removing request",this.loggerId,u.hs.dn.hn,e),null}},e.prototype.qX=function(e){if(this.W8.has(e)){var t=this.W8.get(e).Pk;this.i5(t,!0)}},e.prototype.v1=function(e,t,r,i){this.logger.debug("FRL DOWNLOADING "+t.$f()+" FROM "+e+" P2P")},e.prototype.UD=function(e,t){if(this.logger.debug("FRL PROMISED FRAGMENT "+t.$f()+" RETURNED FROM P2P SIZE "+t.qf.Af),t=this.i5(e,!1)){t.qf.Uf=s.Framework.time();var r=t.Xf()==a.vc.fc;t.xq.I8(t.Pk,t.size,t.qf.p2pAgenTrafficSuccessQt,!0,r,t.type),this.ED.jX(t)}else this.logger.warn("TRIED TO REMOVE A NON EXISTING REQUEST "+e+" (THIS SHOULD NOT HAPPEN. AT LEAST NOT TOO OFTEN)")},e.prototype.k6=function(e){var t=e.getTransferId();if(this.z8.has(t)){c.ErrorMonitor.ve().logError("Error receiving a do not have for my request",this.loggerId,u.hs.dn.un),this.logger.debug("DO NOT HAVE RECEIVED FOR "+t);var r=this.i5(t,!1);if(r){var i=r.Xf()==a.vc.fc;r.xq._k(r.Pk,i,r.size),this.ED.GX(r)}}else this.logger.warn("UNKNOWN DO NOT HAVE "+t)},e.prototype.U6=function(e,t){var r=t.transferId;if(this.z8.has(r)){c.ErrorMonitor.ve().logError("Error rejected request by a non partner",this.loggerId,u.hs.dn.pn),this.TD.Sj(e);var i=this.i5(r,!1);i&&this.ED.GX(i)}},e.prototype.Ys=function(e){return this.W8.has(e)},e}();t.LJ=l},function(e,t,r){"use strict";var i=r(0),n=r(25),s=r(1),o=r(2),a=function(){function e(){this.loggerId="[P2PResponder] "}return e.prototype.init=function(e){this.logger=i.Framework.resolve(i.Framework.V.R).log(e.sessionId),this.sG=e,this.gD=e.gD,this.sC=e.sC,this.TD=e.TD,this.uploadScore=e.uploadScore,this.yD=e.yD,this.KM=e.YM},e.prototype.PM=function(e,t,r){try{if(this.TD._j(e)){var i=this.TD.$j(e);this.n5(e,t,i)}else this.s5(e,t,r)}catch(e){s.ErrorMonitor.ve().logError("Error on responding to p2p request",this.loggerId,o.hs.mn.fn,e)}},e.prototype.c8=function(e,t,r){try{if(this.uploadScore.success(r),this.TD._j(e)){var i=this.TD.$j(e);i.vQ.success(r),i._8(r,t)}}catch(e){s.ErrorMonitor.ve().logError("Error on request satisfied",this.loggerId,o.hs.mn.gn,e)}},e.prototype.a8=function(e,t,r,i){try{if(this.uploadScore.w8(r,i),this.TD._j(e)){var n=this.TD.$j(e);n.vQ.w8(r,i),n.N8(r,i,t)}}catch(e){s.ErrorMonitor.ve().logError("Error on request partially satisfied",this.loggerId,o.hs.mn.En,e)}},e.prototype.h8=function(e,t,r){try{if(this.uploadScore.ll(),this.TD._j(e)){var i=this.TD.$j(e);i.vQ.ll(),i.A8(r,t)}}catch(e){s.ErrorMonitor.ve().logError("Error on request not satisfied",this.loggerId,o.hs.mn.vn,e)}},e.prototype.n5=function(e,t,r){var i=this;this.sC.get(t.fragmentId).then(function(n){n?(i.logger.debug("SENDING TO "+e+","+t.fragmentId+","+t.transferId+","+n.length+" DL "+n.length),r.wj.sender.X6(t.fragmentId,t.transferId,n.length,n.headers,n.data)):(i.logger.debug("RECEIVED REQUEST FOR "+t.fragmentId+" FROM "+e+" CAN'T BE SERVED"),i.o5(t.transferId,r))})},e.prototype.o5=function(e,t){try{this.logger.info("SEND DO NOT HAVE "+e+" TO "+t.wj.Sg);var r=new n.Rf.Fa.Jg.DoNotHave;r.setTransferId(e),t.wj.Lg(n.Rf.Eg.DoNotHave,r)}catch(e){s.ErrorMonitor.ve().logError("Error on sending do not have",this.loggerId,o.hs.mn.yn,e)}},e.prototype.s5=function(e,t,r){try{this.logger.warn("GOT REQUEST FROM NON-PARTNER "+e+" FOR "+t.fragmentId);var i=new n.Rf.Fa.Jg.NoPartners;i.setTransferId(t.transferId),r.Lg(n.Rf.Eg.gg,i)}catch(e){s.ErrorMonitor.ve().logError("Error on send no partners",this.loggerId,o.hs.mn.Tn,e)}},e}();t.MJ=a},function(e,t,r){"use strict";var i,n=r(48),s=r(0),o=r(5);!function(e){e[e.S=0]="S",e[e.a5=1]="F",e[e.h5=2]="PF"}(i||(i={}));var a=function(){function e(e){this.ts=e}return e}(),h=function(){function e(){this.c5=0,this.u5=0,this.l5=0,this.p5=0,this.d5=0,this.f5=0}return e}(),c=function(){function e(){this.g5=new n}return e.prototype.success=function(e){this.event(i.S,e,e)},e.prototype.ll=function(){this.event(i.a5,0,0)},e.prototype.w8=function(e,t){this.event(i.h5,e,t)},e.prototype.event=function(e,t,r){var i=new a(s.Framework.time());i.t=e,i.E5=t,i.v5=t/r,i.y5=(r-t)/r,this.g5.set(i.ts,i),this.T5()},e.prototype.T5=function(){var e=this,t=s.Framework.time(),r=t-2*o.hh.Oa.Ca;if(r>0){var i=[];this.g5.forEach(function(e,t){t<r&&i.push(t)}),i.forEach(function(t){e.g5.delete(t)})}},e.prototype.fQ=function(e){var t=0,r=this.m5(e,o.hh.Oa.Ca);if(null!=r){var i=r.u5+r.l5+r.p5;t=0==i?0:(r.u5+r.p5*o.hh.Oa._a)/i}return t},e.prototype.q8=function(e){var t=0,r=this.m5(e,o.hh.Oa.Ca);if(null!=r){var i=r.u5+r.l5+r.p5;t=0==i?0:(r.l5+r.p5*o.hh.Oa.Pa)/i}return t},e.prototype.I5=function(e){var t=this.m5(!1,e);return null!=t?t.c5:0},e.prototype.m5=function(e,t){if(0!=this.g5.keys().length){var r=new h,o=s.Framework.time(),a=o-t;a<0&&(a=0);var c=new n;return this.g5.forEach(function(e,t){t>=a&&c.set(t,e)}),c.forEach(function(e,t){switch(r.c5+=e.E5,e.t){case i.S:r.u5++;break;case i.a5:r.l5++;break;default:r.p5++,r.d5+=e.v5,r.f5+=e.y5}}),r}return null},e}();c.Pa=.2,c._a=.2,t.FJ=c},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(3),s=r(4),o=r(0),a=r(176),h=r(178),c=r(96),u=r(2),l=r(1);t.S5||(t.S5={});var p=function(e){function t(){var t=e.call(this)||this;return t.loggerId="[HiveNetworkManager] ",t.R5=!1,t.w5=new n,t.Ag=1,t.Jl=o.Framework.resolve(o.Framework.V.M),t.b5=o.Framework.resolve(o.Framework.V.q),t.channelManager=new a.C5(t.logger,t.b5,t),t.b5.init(t,t.logger,t.channelManager),t._5(),t}return i(t,e),t.prototype.start=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];var i=o.Framework.resolve(o.Framework.V.R).log(e),n=null;return 0==this.vl.keys().length?(i.debug("TRIGGERING CONNECT "),n=this.P5(),this.A5(e,t)):(i.debug("ALREADY CONNECTED "),n=this.Jl.Zl(),this.A5(e,t),this.b5.sY()&&this.O5(this.gd,e)),n},t.prototype.P5=function(){var e=this,t=o.Framework.L.k;return"localhost"===t&&(t="127.0.0.1:"+location.port),this.logger.debug("CONNECTING.."),this.Jl.Zl().then(function(r){var i=r.tp();return e.logger.debug("MY IDENTITY ",i),e.gd=i,e.b5.start(t,i),r})},t.prototype.N5=function(){return s.resolve(new n)},t.prototype.connect=function(e){var t=this,r=s.defer();return this.w5.has(e)?(this.logger.debug("Already connected to "+e+", ignoring"),r.resolve(this.w5.get(e))):this.channelManager.D5(this.gd,e).then(function(r){return t.connected(e,r)}).then(function(e){return r.resolve(e)}).fail(function(i){l.ErrorMonitor.ve().logError("Error establishing connection",t.loggerId,u.hs.Pe.be,{otherGuid:e}),r.reject("CONN TO "+e+" CANNOT BE ESTABLISHED ")}),r.Ss},t.prototype.send=function(e,t,r){return!!this.channelManager.send(e,t)||(l.ErrorMonitor.ve().logError("Error sending message without channel established",this.loggerId,u.hs.Pe.Ce,{otherGuid:e}),this.k5(e),!1)},t.prototype.L5=function(e,t,r){if(this.R5&&this.logger.debug("REC BUF "+r.byteLength+" "+r),this.w5.has(e)){this.R5&&this.logger.debug("PROC MSG FROM "+e);this.w5.get(e).Gg(r)}else l.ErrorMonitor.ve().logError("Error receiving msg without having a connection established",this.loggerId,u.hs.Pe.Ce,{otherGuid:e})},t.prototype.connected=function(e,t){if(this.w5.has(e))this.logger.debug("RECONNECTED TO "+e+", RESETTING STATE"),this.w5.get(e).reset();else{this.logger.info("CONNECTED TO "+e);var r=t.pG;r.init(this.gd,e),this.w5.set(e,r)}return s.resolve(this.w5.get(e))},t.prototype.M5=function(e,t){this.logger.debug("FAILED CONN TO "+t),e.reject("CONN TO "+t+" CANNOT BE ESTABLISHED ")},t.prototype.F5=function(e,t){this.logger.info(e+" connected to me"),this.connected(e,t)},t.prototype.k5=function(e){this.w5.has(e)?(this.logger.info("Connection closed to "+e),this.w5.delete(e),this.U5(e)):this.logger.warn("TRYING TO REMOVE A PEER THAT IS NOT THERE: "+e)},t.prototype._5=function(){var e=this;c.hQ.nQ&&o.Framework.setInterval(function(){var t=o.Framework.time();e.w5.forEach(function(r,i){var n=t-r.zg();n>c.hQ.oQ&&(e.logger.debug("closing stale connection to "+i+" [unused for: "+n+"ms]"),e.disconnect(i))})},c.hQ.sQ)},t.prototype.stop=function(e){o.Framework.resolve(o.Framework.V.R).log(e).debug("STOPPING CONNECTIONS AND REMOVING LISTENERS"),this.B5(e)},t.prototype.H5=function(){},t.prototype.disconnect=function(e){this.w5.has(e)&&this.channelManager.disconnect(e)},t}(h.x5);p.$a="availableSendRate",p.eh="remoteAddress",p.th="localAddress",t.CJ=p},function(e,t,r){"use strict";var i=r(4),n=r(0),s=r(177),o=r(96),a=r(2),h=r(1),c=function(){function e(e,t,r){this.logger=e,this.b5=t,this.q5=r,this.loggerId="[ChannelManager] ",this.G5={iceServers:[{url:"stun:stun.hivestreaming.com:3478"}]},this.Ag=1,this.V5=null,this.j5={},this.Q5={}}return e.prototype.D5=function(e,t){var r=null;if(t in this.Q5){var n=i.defer();n.reject("OTHER ALREADY TRYING TO CONNECT"),r=n.Ss}else{this.q5.R5&&this.logger.info("Initiating connection to "+t);var s=this.K5(e,t);r=this.Y5(s,t).connect(t)}return r},e.prototype.W5=function(e){e.z5 in this.Q5&&(delete this.j5[e.label],delete this.Q5[e.z5]),e.open&&(this.q5.k5(e.z5),e.open=!1)},e.prototype.send=function(e,t){this.q5.R5&&this.logger.debug("DATA "+t.byteLength+" "+t);var r=this.Q5[e];return r&&r.channel?(r.channel.send(t),!0):(h.ErrorMonitor.ve().logError("Error sending message wihtout channel established",this.loggerId,a.hs.Ke.Ve,{otherGuid:e}),!1)},e.prototype.q0=function(e,t){var r=t.channel;if(r&&r.label&&this.j5[r.label]){var i=this.j5[r.label],n=i[e];n.call(i,t)}else{var s="handle_"+e,n=this[s];n?n.call(this,t):h.ErrorMonitor.ve().logError("Error received a message for a non existing function",this.loggerId,a.hs.Ke.je,{J5:s})}},e.prototype.handle_offer=function(e){if(this.q5.R5&&this.logger.info("received an offer from "+e.peer.guid+" on channel "+e.channel.label),this.Q5[e.peer.guid]&&e.peer<this.q5.gd)this.b5.X5(this.q5.gd,e.peer.guid,e.channel.label);else{var t=this.Y5(e.channel.label,e.peer.guid),r=this.Z5(t);t.offer(e,r)}},e.prototype.Z5=function(e){var t=this;return n.Framework.setTimeout(function(){h.ErrorMonitor.ve().logError("Error incoming connection timedout",t.loggerId,a.hs.Ke.Qe,{otherGuid:e.z5}),e.close()},o.hQ.aQ)},e.prototype.Y5=function(e,t){var r=new s.e9(this,this.q5,e,this.V5,this.G5,t);return this.j5[e]=r,this.Q5[t]=r,r},e.prototype.handle_offer_rejected=function(e){this.q5.R5&&this.logger.debug("remote peer rejected ",e);var t=this.Q5[e.t9];t&&t.close(),delete this.Q5[e.t9],delete this.j5[e.channel]},e.prototype.K5=function(e,t){return e.substring(0,Math.max(8,e.length))+":"+t.substring(0,Math.max(8,t.length))+":"+this.Ag++},e.prototype.disconnect=function(e){var t=this.Q5[e];t&&t.close()},e}();t.C5=c},function(e,t,r){"use strict";var i=r(5),n=r(2),s=(r(55),r(4)),o=r(0),a=r(1),h=function(){function e(e,t,r,i,s,h){var c=this;this.channelManager=e,this.q5=t,this.label=r,this.V5=i,this.G5=s,this.z5=h,this.R5=!1,this.loggerId="[Channel] ",this.r9=-1,this.SH=null,this.channel=null,this.i9=null,this.n9=5,this.timeout=5e3,this.open=!1,this.s9=!1,this.o9=new Array,this.a9=function(){return!!this.channel&&"connecting"===this.channel.readyState},this.logger=o.Framework.resolve(o.Framework.V.R).log(),this.pG=o.Framework.resolve(o.Framework.V.U),this.pG.init(this.q5.gd,h),this.SH=new RTCPeerConnection(this.G5,this.V5),this.SH.onicecandidate=function(e){e&&e.candidate&&(c.o9.push(e.candidate),c.h9())},this.SH.onnegotiationneeded=function(){c.createOffer().then(function(e){return c.c9(e)}).then(function(e){c.R5&&c.logger.debug(c.loggerId+"Sending offer to "+c.z5+" [candidates: "+c.o9.length+"]");var t=c.o9;c.o9=new Array;var r=c.channelManager.b5.offer(c.q5.gd,c.z5,c,t,e);return c.s9=!0,r}).catch(function(e){a.ErrorMonitor.ve().logError("Error negotiating with peer",c.loggerId,n.hs.Ge.ke,{detailedError:e,otherGuid:c.z5}),c.close()})},this.SH.oniceconnectionstatechange=function(e){"disconnected"===c.SH.iceConnectionState&&c.close(),"failed"===c.SH.iceConnectionState&&(a.ErrorMonitor.ve().logError("Error establishing ICE connection",c.loggerId,n.hs.Ge.ke,{otherGuid:c.z5}),c.close())},this.SH.onsignalingstatechange=function(e){"closed"===e.signalingState&&c.close()}}return e.prototype.u9=function(){var e=this;if(this.channel&&"open"!=this.channel.readyState){if(this.R5&&this.logger.debug(this.loggerId+"Check connection "+this.z5),this.n9<=0)return this.logger.debug(this.loggerId+"Closing channel since it couldnt be established to "+this.z5),void this.close();this.n9-=1,this.i9=o.Framework.setTimeout(function(){return e.u9()},this.timeout)}},e.prototype.close=function(){try{this.R5&&this.logger.debug(this.loggerId+"Closing connection to "+this.z5),this.l9(!0),this.channelManager.W5(this),this.SH&&"closed"!==this.SH.signalingState&&(this.SH.close(),this.channel&&this.channel.close())}catch(e){a.ErrorMonitor.ve().logError("Error closing the connection",this.loggerId,n.hs.Ge.qe,{detailedError:e,otherGuid:this.z5})}},e.prototype.connect=function(e){var t=this;this.R5&&this.logger.debug(this.loggerId+"Connecting to "+e),this.z5=e,this.channel=this.SH.createDataChannel(this.label);var r=this.p9(!0,-1);return this.i9=o.Framework.setTimeout(function(){return t.u9()},this.timeout),r},e.prototype.d9=function(e){var t=this,r=s.defer();return this.SH.setRemoteDescription(e,function(){return r.resolve("OK")},function(e){a.ErrorMonitor.ve().logError("Error setting remote description",t.loggerId,n.hs.Ge.Ne,{detailedError:e,otherGuid:t.z5}),r.reject(e)}),r.Ss},e.prototype.c9=function(e){var t=this,r=s.defer();return"closed"!==this.SH.signalingState?this.SH.setLocalDescription(e,function(){return r.resolve(t.SH.localDescription)},function(e){a.ErrorMonitor.ve().logError("Error setting local description",t.loggerId,n.hs.Ge.De,{detailedError:e,otherGuid:t.z5}),r.reject(e)}):(a.ErrorMonitor.ve().logError("Signaling state is closed",this.loggerId,n.hs.Ge.Ne),r.reject("Signaling state is closed")),r.Ss},e.prototype.createOffer=function(){var e=this,t=s.defer();return this.SH.createOffer(t.resolve,function(t){a.ErrorMonitor.ve().logError("Error creating offer",e.loggerId,n.hs.Ge.Ae,{detailedError:t,otherGuid:e.z5}),e.close()}),t.Ss},e.prototype.createAnswer=function(){var e=this,t=s.defer();return this.SH.createAnswer(t.resolve,function(r){a.ErrorMonitor.ve().logError("Error creating answer",e.loggerId,n.hs.Ge.Oe,{detailedError:r,otherGuid:e.z5}),t.reject(r)}),t.Ss},e.prototype.offer=function(e,t){var r=this;this.R5&&(this.logger.debug(this.loggerId+"Received an offer from "+this.z5),this.logger.debug(this.loggerId+"Offer:",e)),this.SH.ondatachannel=function(e){r.channel=e.channel,r.p9(!1,t)};var i=new RTCSessionDescription(e.channel.offer);this.z5=e.peer.guid,this.d9(i).then(function(t){if("closed"!==r.SH.signalingState)return r.update_ice_candidates(e),r.createAnswer()}).then(function(e){return r.c9(e)}).then(function(e){r.logger.debug(r.loggerId+"Sending back an answer [candidates: "+r.o9.length+"]");var t=r.o9;r.o9=new Array,r.channelManager.b5.answer(r,e,t,r.z5),r.s9=!0}).catch(function(e){a.ErrorMonitor.ve().logError("Error responding to offer",r.loggerId,n.hs.Ge.He,{detailedError:e,otherGuid:r.z5}),r.close()})},e.prototype.answer=function(e){var t=this;this.R5&&this.logger.debug(this.loggerId+"Answer: ",e);var r=new RTCSessionDescription(e.answer);this.d9(r).then(function(){"closed"!==t.SH.signalingState&&t.update_ice_candidates(e)}).catch(function(e){a.ErrorMonitor.ve().logError("Error setting remote descriptor for the answer received",t.logger,n.hs.Ge.Be,{detailedError:e,otherGuid:t.z5}),t.close()})},e.prototype.update_ice_candidates=function(e){var t=this;e.channel.ice_candidates.forEach(function(e){t.R5&&t.logger.debug(t.loggerId+"got ICE cand: ",e);var r=new RTCIceCandidate(e);t.SH.addIceCandidate(r,function(){},function(e){return a.ErrorMonitor.ve().logError("Error updating ice candidates",t.loggerId,n.hs.Ge.Ue,{detailedError:e,otherGuid:t.z5})})})},e.prototype.p9=function(e,t){var r=this,i=s.defer();return this.channel.onopen=function(n){return r.f9(i,e,t)},this.channel.onclose=function(e){r.close(),i.reject(r)},this.channel.onmessage=function(e){return r.pG.Gg(e.data)},this.channel.onerror=function(e){a.ErrorMonitor.ve().logError("Error setting up channel",r.loggerId,n.hs.Ge.Le,{detailedError:e,otherGuid:r.z5}),r.close()},i.Ss},e.prototype.f9=function(e,t,r){this.open=!0,e.resolve(this),t||(this.q5.F5(this.z5,this),r&&o.Framework.clearTimeout(r))},e.prototype.h9=function(){var e=this;this.s9&&-1==this.r9&&(this.r9=o.Framework.setTimeout(function(){e.g9(),e.l9(!1)},i.hh.ah.oh))},e.prototype.g9=function(){var e=this,t=this.o9;if(this.o9=new Array,t&&t.length>0){var r=t.length;this.channelManager.b5.E9(this.q5.gd,this,t,this.z5).then(function(t){e.R5&&e.logger.debug(e.loggerId+"sent "+r+" more candidates")}).catch(function(t){a.ErrorMonitor.ve().logError("Error sending candidates",e.loggerId,n.hs.Ge.Le,{detailedError:t,otherGuid:e.z5})})}},e.prototype.l9=function(e){e&&-1!=this.r9&&o.Framework.clearTimeout(this.r9),this.r9=-1},e}();t.e9=h},function(e,t,r){"use strict";var i=r(3),n=r(0),s=r(2),o=r(1),a=function(){function e(){this.jM="[Base Network Manager] ",this.vl=new i,this.logger=n.Framework.resolve(n.Framework.V.R).log()}return e.prototype.A5=function(e,t){this.logger.info("SET LISTENERS FOR "+e+","+t.length),this.vl.set(e,t)},e.prototype.B5=function(e){this.vl.delete(e)},e.prototype.v9=function(){this.vl.length>0&&this.vl.forEach(function(e,t){e.forEach(function(e){e.ej&&e.ej()})})},e.prototype.O5=function(e,t){var r=this;this.vl.length>0&&(t?this.vl.get(t).forEach(function(t){try{t.Ud&&t.Ud(e)}catch(e){o.ErrorMonitor.ve().logError("Error firing server connect when we have swarm",r.jM,s.hs.Pe.Re,e)}}):this.vl.forEach(function(t,i){t.forEach(function(t){try{t.Ud&&t.Ud(e)}catch(e){o.ErrorMonitor.ve().logError("Error firing server connect when we do not have swarm",r.jM,s.hs.Pe.we,e)}})}))},e.prototype.U5=function(e){this.vl.length>0&&this.vl.forEach(function(t,r){t.forEach(function(t){t.KG&&t.KG(e)})})},e}();t.x5=a},function(e,t,r){"use strict";var i=r(4),n=r(0),s=r(23),o=function(){function e(){this.Ag=1,this.client=n.Framework.resolve(n.Framework.V.G)}return e.prototype.init=function(e,t,r){this.q5=e,this.logger=t,this.channelManager=r},e.prototype.sY=function(){return this.client.zd().sY()},e.prototype.start=function(e,t){var r=this;this.logger.debug("MY ID "+t),this.gd=t,this.client&&this.client.zd()?this.client.zd().on(Services.fY,1,function(e){r.y9(e.msg)}):this.logger.error("error getting active services connection"),this.q5.O5(this.gd)},e.prototype.y9=function(e){var t=JSON.parse(e);this.q5.R5&&this.logger.debug("RCV MSG FROM SRV ",t),this.channelManager.q0(t.msgName,t.msg)},e.prototype.T9=function(e,t,r){var n=this.wrap(t,e,r);if(this.client&&this.client.zd()){var o=JSON.stringify(n);this.q5.R5&&this.logger.debug(" FORWARDING REQUEST : "+o);var a=new s.Jd(Services.fY,0,o);return this.client.zd().send(a)}return i.reject()},e.prototype.wrap=function(e,t,r){return{msgId:this.Ag++,destination:r,msg:e,msgName:t}},e.prototype.E9=function(e,t,r,i){var n={channel:{label:t.label,ice_candidates:r}};return this.T9("update_ice_candidates",n,i)},e.prototype.offer=function(e,t,r,i,s){var o={peer:{guid:e,first_seen:n.Framework.time()},channel:{label:r.label,ice_candidates:i,offer:s}};return this.T9("offer",o,r.z5)},e.prototype.X5=function(e,t,r){this.q5.R5&&this.logger.debug("Discovery service rejects offer from peer "+t+" on channel "+r);var i={t9:e,channel:r};return this.T9("answer",i,t)},e.prototype.answer=function(e,t,r,i){var n={answer:t,m9:this.q5.gd,channel:{label:e.label,ice_candidates:r}};return this.T9("answer",n,i)},e}();t._J=o},function(e,t,r){"use strict";var i=r(3),n=r(5),s=r(0),o=function(){function e(){this.rF=new i,this.I9=[],this.B6=new i,this.S9=new i}return e.prototype.init=function(e){this.logger=s.Framework.resolve(s.Framework.V.R).log(e.sessionId),this.ED=e.ED,this.R9()},e.prototype.R9=function(){var e=this;s.Framework.setInterval(function(){e.w9()},n.hh.ya.Ea)},e.prototype.w9=function(){var e=this;this.B6.values().filter(function(e){return s.Framework.time()-e.qf.Lf>n.hh.ya.va}).forEach(function(t){e.ED.abort(t.Kf),e.lF(t.Zf(),t.$f())})},e.prototype.uF=function(e){this.b9(e.Zf(),e.$f()),this.B6.set(e.$f(),e)},e.prototype.lF=function(e,t){this.B6.delete(t),this.C9(e,t)},e.prototype.fF=function(e){this._9(e)},e.prototype.pF=function(e){this.rF.delete(e)},e.prototype._9=function(e){if(this.rF.set(e.Zf(),e.Jf()),this.I9.push(e.Zf()),this.rF.length>n.hh.ya.ga){var t=this.I9[0];this.rF.delete(t),this.I9.splice(0,1)}},e.prototype.tF=function(e){return this.rF.has(e)},e.prototype.iF=function(e){return this.rF.get(e)},e.prototype.b9=function(e,t){if(this.S9.has(e))this.S9.get(e).push(t);else{var r=[];r.push(t),this.S9.set(e,r)}},e.prototype.C9=function(e,t){if(this.S9.has(e)){var r=this.S9.get(e),i=r.indexOf(t);-1==i?this.logger.warn("I CANNOT FIND THE REQUEST ID "+t):r.splice(i,1),0==r.length&&this.S9.delete(e)}else this.logger.warn("TRIED TO REMOVE AN OBJECT THAT DOES NOT EXIST")},e.prototype.oF=function(e){var t=[];if(this.P9(e))for(var r=this.S9.get(e),i=0;i<r.length;i++)this.B6.has(r[i])&&t.push(this.B6.get(r[i]));return t},e.prototype.P9=function(e){return this.S9.has(e)},e.prototype.EF=function(){return 0!=this.B6.length},e.prototype.sF=function(e){return this.S9.has(e)},e}();t.ya=o},function(e,t,r){"use strict";var i=r(3),n=r(5),s=r(28),o=s.cg,a=function(){function e(){this.udpScore=0,this.A9=0,this.watchingBitrate=-1,this.O9=!1,this.N9=!1,this.D9=!1,this.k9=!1,this.L9=new i}return e.prototype.setId=function(e){this.M9=e},e.prototype.getId=function(){return this.M9},e.prototype.ZJ=function(e){this.udpScore=e},e.prototype.QG=function(){return this.udpScore},e.prototype.$J=function(e){this.A9=e},e.prototype.L1=function(){return this.A9},e.prototype.setContextId=function(e){var t=o.oT(e+"_"+n.hh.Ho.Do).toString(o.Uy.By);this.contextId=t},e.prototype.getContextId=function(){return this.contextId},e.prototype.kG=function(e){this.O9=e},e.prototype.ck=function(){return this.O9},e.prototype.YG=function(e){this.D9=e},e.prototype.yk=function(){return this.D9},e.prototype.Hj=function(e){this.k9=e},e.prototype.mk=function(){return this.k9},e.prototype.U1=function(e){this.F9=e},e.prototype.gk=function(){return this.F9},e.prototype.B1=function(e){this.U9=e},e.prototype.Fj=function(){return this.U9},e.prototype.DG=function(e){this.B9=e},e.prototype.Rk=function(){return this.B9},e.prototype.H9=function(e){this.N9=e},e.prototype.Tk=function(){return this.N9},e.prototype.FX=function(e){this.watchingBitrate=e},e.prototype.MX=function(){return this.watchingBitrate},e.prototype.FG=function(e){this.nG=e},e.prototype.Ik=function(){return this.nG},e.prototype.DH=function(e){this.privateIp=e},e.prototype.getPrivateIp=function(){return this.privateIp},e.prototype._H=function(e){this.publicIp=e},e.prototype.getPublicIp=function(){return this.publicIp},e.prototype.setReportingGuid=function(e){this.reportingGuid=e},e.prototype.getReportingGuid=function(){return this.reportingGuid},e.prototype.setDelta=function(e){this.delta=e},e.prototype.getDelta=function(){return this.delta},e.prototype.FD=function(e,t){this.L9.set(e,t)},e.prototype.kD=function(e){this.L9.delete(e)},e.prototype.Uj=function(){return this.L9},e.prototype.hB=function(){return this.Tk()?this.L9.keys():[]},e.prototype.cB=function(){return this.Tk()?[]:this.L9.keys()},e.prototype.XJ=function(e){this.ticket=e},e.prototype.Sk=function(){return this.ticket},e.prototype.WJ=function(e){this.mX=e},e.prototype.x8=function(){return this.mX},e}();t.HJ=a},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(10),s=r(183),o=r(2),a=r(1),h=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.e5=function(t,r){var i=[],s=[],h=[];try{var c=this.yD.gk();return t.forEach(function(e){e.Ek.peerInfo.type==n.Tc.W&&i.push(e);var t=e.Ek.peerInfo.internalAs;0!=c&&t&&c==t&&s.push(e),e.Ek.peerInfo.type==n.Tc.yc&&h.push(e)}),i.length>0?e.prototype.e5.call(this,i,r):s.length>0?e.prototype.e5.call(this,s,r):e.prototype.e5.call(this,h,r)}catch(e){return a.ErrorMonitor.ve().logError("Error choosing partner for p2p",this.loggerId,o.hs.ji.Vi,e),null}},t}(s.x9);t.UJ=h},function(e,t,r){"use strict";var i=r(0),n=r(5),s=r(1),o=r(2),a=function(){function e(){this.loggerId="[PickerTRSingle] ",this.logger=i.Framework.resolve(i.Framework.V.R).log()}return e.prototype.X8=function(e){this.yD=e},e.prototype.e5=function(e,t){var r=this.q9(e);return r?r[0]:null},e.prototype.G9=function(e,t){return n.hh.Fa.La*(e.k8()/t)+n.hh.Fa.Ma*(1-e.M8())},e.prototype.q9=function(e){var t=this;try{var r=.1;r+=e.map(function(e){return e.k8()}).reduce(function(e,t){return e+t});var i=e.sort(function(e,i){return t.G9(i,r)-t.G9(e,r)}),n=[];return i.forEach(function(e){n.push(e.guid+":"+t.G9(e,r))}),this.logger.debug("SC ["+n.join(", ")+"]"),i}catch(e){return s.ErrorMonitor.ve().logError("Error sorting the partners",this.loggerId,o.hs.Gi.qi,e),null}},e}();t.x9=a},function(e,t,r){"use strict";var i=r(49),n=r(3),s=r(59),o=r(7),a=r(5),h=r(0),c=r(47),u=r(91),l=r(6),p=l.he.Th,d=function(){function e(){this.V9=!1}return e.prototype.init=function(e){this.logger=h.Framework.resolve(h.Framework.V.R).log(e.sessionId),this.yD=e.yD,this.GJ=e.GJ,this.oG=e.oG,this.zM=e.zM},e.prototype.RD=function(e){this.wD=e},e.prototype.G1=function(){this.V9=!0,this.cX()},e.prototype.LG=function(){if(a.hh.fa.na)return void this.j9();var e=!this.yD.yk()||this.yD.ck()||!p;this.logger.debug("REQUEST REMOTE ELECTION "+e),e?this.j9():this.Q9()},e.prototype.j9=function(){var e=this.yD.gk(),t=e&&0!=e?u.Xq.nD:u.Xq.AS;this.GJ.F1(t)},e.prototype.Q9=function(){this.GJ.F1(u.Xq.Jq)},e.prototype.cX=function(){var e=this;this.rX(),this.K9=h.Framework.setInterval(function(){e.LG()},a.hh.fa.oa),this.zM.SD(),this.LG()},e.prototype.rX=function(){this.K9&&h.Framework.clearInterval(this.K9)},e.prototype.iX=function(){this.zM.ek(),this.wD.LM()},e.prototype.MG=function(e){var t=new n;if(e){this.Y9().forEach(function(e){t.set(e,i.sD.iD)});var r=!1,s=i.sD.iD;this.yD.Tk()&&(s=i.sD.nD,r=!0),this.zM._D(t,s,r)}else this.zM._D(t,i.sD.mc,!1)},e.prototype.H1=function(e,t){var r=this,h=this.W9(t),c=this.zM.CD().isLive();if(e&&e.length>0){var u=new s;u.addEach(e);var l=a.hh.fa.ea||u.some(function(e){var t=o.rc.Zh(hive.services.protocol.IF.SF,e.key.rankType);return r.logger.info("GOT RANKING "+t+",CRV "+e.cumulatedRankValue+",RV "+e.ranking+",GS "+e.groupSize),r.z9(e)}),p=null!=h&&0!=h.length;if(this.logger.debug("Tracker reports ["+h.keys().join(", ")+"]  bitrates"),this.logger.debug("ISLive "+c+" DoElect "+l),a.hh.fa.$o&&c){var d=this.Y9();if(p&&l){this.yD.H9(!0),this.logger.info("BECOMING SITE LEADER");var f=new n;d.forEach(function(e){f.set(e,i.sD.iD)}),h.forEach(function(e,t){r.oG.kj.has(e)||f.set(t,i.sD.nD)}),this.zM._D(f,i.sD.nD,!1)}else{this.yD.H9(!1);var g=i.sD.mc,E=new n;this.yD.yk()&&this.yD.ck()&&(g=i.sD.iD,d.forEach(function(e){E.set(e,i.sD.iD)})),this.zM._D(E,g,!1)}}}else if(c){a.hh.fa.ea?this.yD.H9(!0):this.yD.H9(!1);var v=new n,g=i.sD.mc;if(this.yD.yk()&&this.yD.ck()){var y=this.Y9();y.forEach(function(e){v.set(e,i.sD.iD)}),g=i.sD.iD}a.hh.fa.ea&&(g=i.sD.nD),this.zM._D(v,g,!1)}},e.prototype.Jj=function(){var e=this.Y9(),t=new n;e.forEach(function(e){t.set(e,i.sD.iD)});var r=!1,s=i.sD.iD;this.yD.Tk()&&(s=i.sD.nD,r=!0),this.zM._D(t,s,r)},e.prototype.Y9=function(){var e=new s;return this.oG.kj.forEach(function(t,r){t.peerInfo.watchingBitrate&&!e.has(t.peerInfo.watchingBitrate)&&e.add(t.peerInfo.watchingBitrate)}),e.toArray()},e.prototype.W9=function(e){var t=new n,r=this.yD.gk();return e.forEach(function(e){null!=e.watchingBitrate&&(r>0?r===e.internalAs&&t.set(e.watchingBitrate,e.guid):t.set(e.watchingBitrate,e.guid))}),t},e.prototype.z9=function(e){if(e.groupSize<2)return!1;var t=Math.max(1,Math.round(e.groupSize*a.hh.fa.ra));return p||h.Framework.C()&&c.$N.XN?e.ranking<t&&(this.yD.ck()||!this.yD.yk()):e.ranking<t},e.prototype.ZD=function(e,t,r,n){var s=1,o=this.wD.lk(r,t),c=a.hh.fa.ha*h.Framework.random();if(e==i.sD.iD){var u=this.wD.xM(),l=u-c;s=Math.max(1,o-l)}else if(e==i.sD.nD){var p=a.hh.fa.ca-c;s=Math.max(1,o-p)+n}return s=Math.round(s)},e}();t.BJ=d},function(e,t,r){"use strict";var i=r(0),n=r(3),s=r(23),o=r(33),a=r(1),h=r(2);r(60);var c=function(){function e(){this.J9=!1,this.loggerId="[TRACKER] ",this.X9=new n,this.yg=new o.Yb,this.protocol=new o.bC(this.yg),this.logger=i.Framework.resolve(i.Framework.V.R).log(),i.Framework.C()||(this.client=i.Framework.resolve(i.Framework.V.G))}return e.prototype.m1=function(e,t){try{return this.logger.debug("TRACKER CLIENT REGISTERED "+e),this.X9.has(e)||this.X9.set(e,t),this.X9.get(e)}catch(e){a.ErrorMonitor.ve().logError("Error adding new tracker client",this.loggerId,h.hs.xi.Mi,e)}},e.prototype.Rg=function(e){this.X9.delete(e)},e.prototype.wg=function(e){return this.X9.get(e)},e.prototype.M1=function(e){var t=this;if(this.client&&this.client.zd()){var r=this.Z9(e),i=new s.Jd(Services.pY,1,r),n=this.client.zd().send(i);n.then(function(){return t.logger.info("TRACKER REQUEST SENT")}),n.fail(function(e){a.ErrorMonitor.ve().logError("Error sending tracker request",t.loggerId,h.hs.xi.Di)})}else a.ErrorMonitor.ve().logError("Error sending tracker request because of connection",this.loggerId,h.hs.xi.Bi)},e.prototype.init=function(){var e=this;this.logger.debug("TRACKER MANAGER INIT"),this.client&&this.client.zd()?this.client.zd().on(Services.pY,10,function(t){try{var r=e.e7(t.msg);if(r&&e.X9.has(r.sessionId)){e.X9.get(r.sessionId).KX(r)}else e.logger.warn("SESSION ID NOT VALID OR NULL "+r.sessionId)}catch(t){a.ErrorMonitor.ve().logError("Error initializing the tracker manager",e.loggerId,h.hs.xi.Hi,t)}}):i.Framework.C()||this.logger.warn(this.loggerId+" CANNOT GET ACTIVE CONNECTION")},e.prototype.e7=function(e){try{var t='[1, "TRACKER_RESP", 4, 0,'+e+"]";this.yg.eC(t);var r=(this.protocol.zC(),new hive.services.protocol.IF.TrackerResponse);return r.read(this.protocol),r.infos.map(function(e){e.guid=atob(e.guid),e.publicIp=new InetAddress,e.publicIp.address=e.publicIpString,e.privateIp=new InetAddress,e.privateIp.address=e.privateIpString}),r.peerInfo.guid=atob(r.peerInfo.guid),r.peerInfo.publicIp=new InetAddress,r.peerInfo.publicIp.address=r.peerInfo.publicIpString,r.peerInfo.privateIp=new InetAddress,r.peerInfo.privateIp.address=r.peerInfo.privateIpString,this.protocol.t_(),this.J9&&this.logger.debug("RESP "+JSON.stringify(r)),r}catch(e){return a.ErrorMonitor.ve().logError("Error deserializing the tracker response",this.loggerId,h.hs.xi.Ui,e),null}},e.prototype.Z9=function(e){try{this.protocol.AC("TRACKER_REQ",o.gb.ONEWAY,0),e.write(this.protocol),this.protocol.DC();var t=this.yg.pC(),r=this.FB(t,",",4);return t.slice(r+1,t.length-1)}catch(e){throw a.ErrorMonitor.ve().logError("Error serializing the new request",this.loggerId,h.hs.xi.Fi,e),new Error(e)}},e.prototype.FB=function(e,t,r){return e.split(t,r).join(t).length},e}();t.wJ=c},function(e,t,r){"use strict";var i=r(26),n=i.HiveComm.$g,s=i.HiveComm.eE,o=function(){function e(){}return e.prototype.init=function(e,t){this.peer=e,this.rl=t},e.prototype.t7=function(e){e.uuid=this.rl.Ul.gd;var t=this.rl.Ul.iB.KU,r=this.r7(t.p2pSubRespQt),i=this.r7(t.srcRespQt);e.cdnRequests+=this.r7(t.srcReqN),e.cdnResponses+=this.r7(t.srcRespN),e.cdnResponseErrors+=this.r7(t.srcRespErrN),e.cdnResponseBytes+=this.r7(t.srcRespQt),e.p2pRequests+=this.r7(t.p2pSubReqN),e.p2pResponses+=this.r7(t.p2pSubRespN),e.p2pResponseErrors+=this.r7(t.p2pSubRespErrN),e.p2pResponseBytes+=this.r7(t.p2pSubRespQt),e.savings=this.r7(r/(i+r)*100)},e.prototype.r7=function(e){return e||0},e.prototype.i7=function(e){var t=this;e.uuid=this.rl.Ul.gd,this.rl.Ul.iB.WU.forEach(function(r,i){e.partners[i]||(e.partners[i]=new s);var n=e.partners[i];n.uuid=i,n.sentBytes+=t.r7(r.p2pSuccSent),n.receivedBytes+=t.r7(r.p2pSuccReceived),n.successTransfers+=t.r7(r.p2pSuccReq),n.failedTransfers+=t.r7(r.p2pFailReq)})},e.prototype.render=function(){var e=this.rl.renderStatsCallback;if(e){var t=new n;this.t7(t),this.i7(t);try{e(t)}catch(e){console.warn("error in rendering local stats",e)}}},e}();t.mJ=o},function(e,t,r){"use strict";var i=r(35),n=r(3),s=r(0),o=r(5),a=r(1),h=r(2),c=function(){function e(){this.loggerId="[ChunkHandler] ",this.n7=new n,this.s7=new n}return e.prototype.init=function(e){this.logger=s.Framework.resolve(s.Framework.V.R).log(e.sessionId)},e.prototype.YX=function(e){try{var t=e.Zf(),r=e.jf,n=e.qf.Pf,c=Math.ceil(n/o.hh.Fa.Da),u=e.zf.bitrate,l=0,p=Math.min(o.hh.Fa.Da,n);this.o7(t,u);for(var d=p-l;c>0;){var f=null;try{s.Framework.C()||(f=i.wrap(r.slice(l,p))),l+=d}catch(e){a.ErrorMonitor.ve().logError("Error wrapping chunk",this.loggerId,h.hs.Or.Pr,e)}this.n7.get(t).push(f),c--,p=Math.min(l+o.hh.Fa.Da,n),d=p-l}}catch(e){a.ErrorMonitor.ve().logError("Error adding fragment to the fragmentMap",this.loggerId,h.hs.Or.Cr,e)}},e.prototype.o7=function(e,t){try{if(this.s7.has(t)&&this.s7.get(t).length>o.hh.Ra.Sa){var r=this.s7.get(t)[0];this.n7.delete(r),this.s7.get(t).shift()}if(this.s7.has(t))this.s7.get(t).push(e),this.n7.set(e,[]);else{var i=[e];this.s7.set(t,i),this.n7.set(e,[])}}catch(e){a.ErrorMonitor.ve().logError("Error generating the chunk handler hashmaps",this.loggerId,h.hs.Or.Ar,e)}},e.prototype.l8=function(e,t){return this.n7.has(e)?this.n7.get(e)[t]:null},e.prototype.a7=function(e){return this.s7.get(e)},e.prototype.oX=function(){this.n7=new n,this.s7=new n},e}();t.PJ=c},function(e,t,r){"use strict";var i=r(3),n=r(5),s=r(0),o=r(2),a=r(1),h=r(28),c=(h.cg,function(){function e(){this.loggerId="[IPSpoofing] ",this.h7=n.hh.Vo.xo}return e.prototype.init=function(e){this.logger=s.Framework.resolve(s.Framework.V.R).log(e.sessionId),this.TD=e.TD,this.c7=new i,this.u7=new i,this.h7&&this.l7()},e.prototype.fj=function(e,t,r){try{if(!this.h7)return!1;if(this.c7.has(e)||!t||!r)return!1;var i=this.p7(t,r);if(i&&this.u7.has(i)){if(this.u7.get(i).length>=n.hh.Vo.qo)return a.ErrorMonitor.ve().logError("Error peer violates ip spoofing rules",this.loggerId,o.hs.bn.Sn,{privateIp:t,publicIp:r,otherGuid:e}),this.logger.debug(this.loggerId+"Spoofing rule violated for "+e+" with privateIp "+t+" publicIp "+r),!0}return!1}catch(t){return a.ErrorMonitor.ve().logError("Error checking if peer violates ip spoofing rules",this.loggerId,o.hs.bn.In,{detailedError:t,otherGuid:e}),!1}},e.prototype.Tj=function(e,t,r){try{if(this.h7&&r&&t){var i=this.p7(t,r),n=this.c7.get(e);n&&n!=i&&this.d7(e,n),this.f7(e,i)}}catch(t){a.ErrorMonitor.ve().logError("Error adding or updating ip spoofing maps",this.loggerId,o.hs.bn.Rn,{detailedError:t,otherGuid:e})}},e.prototype.g7=function(e){this.h7&&this.Gj(e)},e.prototype.KG=function(e){this.h7&&this.Gj(e)},e.prototype.f7=function(e,t){this.c7.set(e,t);var r=[];this.u7.has(t)&&(r=this.u7.get(t),-1!=r.indexOf(e))||(r.push(e),this.u7.set(t,r))},e.prototype.Gj=function(e){var t=this.c7.get(e);t?(this.d7(e,t),this.c7.delete(e)):this.logger.warn(this.loggerId+"no ip pair for guid "+e)},e.prototype.d7=function(e,t){var r=this.u7.get(t),i=r.indexOf(e);-1!=i?(r.splice(i,1),0==r.length?this.u7.delete(t):this.u7.set(e,r)):this.logger.warn(this.loggerId+"pair list "+t+" does not contain guid "+e)},e.prototype.p7=function(e,t){return t+":"+e},e.prototype.l7=function(){var e=this;s.Framework.setInterval(function(){try{var t=[];e.u7.forEach(function(r,i){if(r.length>n.hh.Vo.qo){for(var s=[],o=n.hh.Vo.qo;o<r.length;o++)s.push(r[o]);e.logger.warn("IpSpoofing violation for "+i+" - closing: "+s),t.concat(s)}}),t.forEach(function(t){e.TD.bj(t)})}catch(t){a.ErrorMonitor.ve().logError("Error checking periodic ip spoofing tables",e.loggerId,o.hs.bn.wn,t)}},n.hh.Vo.Go)},e}());t.Vo=c},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(190),s=r(5),o=r(98),a=r(0),h=r(2),c=r(1),u=function(e){function t(){var t=e.call(this)||this;return t.E7="[Score Partner Selection] ",t.type="Score",t}return i(t,e),t.prototype.v7=function(e,t){try{return t.sort(o.EQ.dQ),t.slice(0,e)}catch(e){return c.ErrorMonitor.ve().logError("Error selecting partners to remove",this.E7,h.hs.vr.pr,e),[]}},t.prototype.y7=function(e,t,r,i){try{return i.filter(function(e){return t.every(function(t){return t.guid!=e.peerInfo.guid})&&-1==r.indexOf(e.peerInfo.guid)}).slice(0,e)}catch(e){return c.ErrorMonitor.ve().logError("Error selecting partners to add",this.E7,h.hs.vr.dr,e),[]}},t}(n.T7);t.OJ=u;var l=function(){function e(){this.E7="[Score Partner Selection] "}return e.prototype.Nj=function(e){try{var t=e.filter(function(e){return!e.wj.yg.Dg()}),r=a.Framework.time(),i=t.filter(function(e){return r-e.y8>s.hh.Ho.Bo});return i.length>0?(i.sort(o.yQ.dQ),i.slice(0,1)[0]):null}catch(e){return c.ErrorMonitor.ve().logError("Error updating partners out",this.E7,h.hs.vr.gr,e),null}},e}();t.NJ=l},function(e,t,r){"use strict";var i=r(97),n=r(5),s=r(0),o=r(1),a=r(2),h=function(){function e(){this.jM="[BaseInPartnerSelection] ",this.logger=s.Framework.resolve(s.Framework.V.R).log()}return e.prototype.uj=function(e,t,r,h){try{var c=[],u=[],l=Math.round(e*(1-n.hh.No.Ao)),p=Math.max(t.length-l,0),d=e-t.length+p;if(p>0){var f=t.filter(function(e){return!e.wj.yg.Dg()}),g=s.Framework.time(),E=f.filter(function(e){return g-e.y8>n.hh.Ho.Bo}),v=Math.min(E.length,p);u=this.v7(v,E);var y=[],T=[];u.forEach(function(e){y.push(e.guid),T.push(e.gQ.fQ(!1))})}return d>0&&(c=this.y7(d,t,r,h)),this.logger.debug("[PART] A/R: "+d+"/"+p+" ["+c.map(function(e){return e.peerInfo.guid.substring(0,8)})+"/"+u.map(function(e){return e.guid.substring(0,8)})+"] P:["+t.map(function(e){return e.guid.substring(0,8)})+"] M:["+h.map(function(e){return e.peerInfo.guid.substring(0,8)})+"]"),new i.pQ(c,u)}catch(e){return o.ErrorMonitor.ve().logError("Error updating in partners",this.jM,a.hs.lr.ur,e),new i.pQ([],[])}},e}();t.T7=h},function(e,t,r){"use strict";var i=r(3),n=r(97),s=r(5),o=r(0),a=r(7),h=r(98),c=r(2),u=r(1),l=function(){function e(){this.m7="[Delta Partner Selection] "}return e.prototype.uj=function(e,t,r,i,a){try{this.yD=e;var h=[],l=[],p=Math.round(t*(1-s.hh.No.Ao)),d=Math.max(r.length-p,0),f=t-r.length+d;if(d>0){var g=r.filter(function(e){return!e.wj.yg.Dg()}),E=o.Framework.time(),v=g.filter(function(e){return E-e.y8>s.hh.Ho.Bo}),y=Math.min(v.length,d);l=this.v7(y,v),l.length>y&&(f+=l.length-y);var T=[],m=[];l.forEach(function(e){T.push(e.guid),m.push(e.gQ.fQ(!1))})}return f>0&&(h=this.y7(f,r,i,a)),new n.pQ(h,l)}catch(e){return u.ErrorMonitor.ve().logError("Error updating in partners",this.m7,c.hs.Rr.ur,e),new n.pQ([],[])}},e.prototype.v7=function(e,t){var r=this;try{t.sort(h.EQ.dQ);var i=t.slice(0,e);return t.slice(e,t.length).forEach(function(e){r.I7(e.Ek)&&i.push(e)}),i}catch(e){return u.ErrorMonitor.ve().logError("Error selecting partners to remove",this.m7,c.hs.Rr.pr,e),[]}},e.prototype.y7=function(e,t,r,i){var n=this;try{var o=[],a=[],h=[],l=[],p=[],d=this.yD.gk();d||(d=-1);var f=[];t.forEach(function(e){f.push(e.guid)});var g=Math.floor(e*s.hh.Ho.Mo),E=this.yD.Uj();i.forEach(function(e){var t=e.peerInfo.streams;if(t){var r=n.isLeader(e,t,d,E);r.cG?r.S7?o.push(e):a.push(e):n.R7(e,s.hh.Ho.Lo)?n.I7(e)?p.push(e):l.push(e):h.push(e)}else p.push(e)});var v=this.w7(o,a,h,l,p,e,e,g);return v.slice(0,Math.min(v.length,e))}catch(e){return u.ErrorMonitor.ve().logError("Error selecting partners to add",this.m7,c.hs.Rr.dr,e),[]}},e.prototype.w7=function(e,t,r,i,n,h,l,p){try{var d=[],f=[];e.length>0&&o.Framework.random()<s.hh.Ho.Fo&&(e=a.rc.zh(e),f=e.slice(0,Math.min(e.length,p)),d.push.apply(d,f),l=h-f.length);var g=[];t.length>0&&(t=a.rc.zh(t),g=t.slice(0,Math.min(t.length,p)),d.push.apply(d,g),l=h-g.length);var E=[];r.length>0&&(r=a.rc.zh(r),E=r.slice(0,Math.min(r.length,p)),d.push.apply(d,E),l=h-E.length);var v=null;if(i.length>0){i=a.rc.zh(i),v=i.slice(0,Math.min(i.length,l));l=h-((E.length>0?E.length:0)-v.length)}var y=[];return l>0&&n.length>0&&(n=a.rc.zh(n),y=n.slice(0,Math.min(n.length,l)),d.push.apply(d,y)),d}catch(e){return u.ErrorMonitor.ve().logError("Error grouping partners",this.m7,c.hs.Rr.yr,e),[]}},e.prototype.isLeader=function(e,t,r,n){try{var s=!1,o=!1,a=new i;t.forEach(function(e){a.set(e.bitrate,e)});var h=new i;return a.forEach(function(e,t){n.has(t)&&h.set(t,e)}),h.keys().length>0&&h.forEach(function(t,i){var a=n.get(i);if(a&&t.state>=2&&a.type>=1){var h=e.peerInfo.internalAs;h>0&&h==r&&(o=!0),s=!0}}),{cG:s,S7:o}}catch(t){return u.ErrorMonitor.ve().logError("Error identifying if member is leader or same site",this.m7,c.hs.Rr.Tr,{detailedError:t,otherGuid:e.peerInfo.guid}),{cG:!1,S7:!1}}},e.prototype.R7=function(e,t){try{var r=this.yD.getDelta(),i=this.yD.MX(),n=this.b7(e,i);return(0!=r||0!=n)&&(r<n&&r>n+t)}catch(t){return u.ErrorMonitor.ve().logError("Error identifying if member is ahead or behind delta",this.m7,c.hs.Rr.mr,{detailedError:t,otherGuid:e.peerInfo.guid}),!1}},e.prototype.I7=function(e){try{var t=this.yD.getDelta(),r=this.yD.MX(),i=this.b7(e,r);return 0==t&&0==i||t>i}catch(t){return u.ErrorMonitor.ve().logError("Error identifying if member is behind or not retrieveing the same bitrate",this.m7,c.hs.Rr.Ir,{detailedError:t,otherGuid:e.peerInfo.guid}),!1}},e.prototype.b7=function(e,t){try{var r=e.peerInfo.streams,i=0;return r&&r.forEach(function(e){e.bitrate==t&&(i=e.delta)}),i}catch(t){return u.ErrorMonitor.ve().logError("Error retrieving delta for member's bitrate",this.m7,c.hs.Rr.Sr,{detailedError:t,otherGuid:e.peerInfo.guid}),0}},e}();t.DJ=l;var p=function(){function e(){this.loggerId="[Throughput Partner Selection] ",this.logger=o.Framework.resolve(o.Framework.V.R).log()}return e.prototype.Nj=function(e,t,r){var n=this;try{this.yD=e;var a=this.yD.Uj(),h=t.streams;if(h){var l=r.filter(function(e){return!e.wj.yg.Dg()}),p=o.Framework.time(),d=l.filter(function(e){return p-e.y8>s.hh.Ho.Bo});if(0==h.filter(function(e){return a.has(e.bitrate)}).length)return null;var f=this.C7(d),g=this._7(a,f);if(g)return g;var E=a.keys().length,v=d.length,y=Math.round(v/E),T=f.keys().filter(function(e){return a.has(e)}),m=new i;T.forEach(function(e){m.set(e,f.get(e))});var I=this.P7(m,y);return null!=I?I:(h.forEach(function(e){var t=m.get(e.bitrate);if(null!=t){var r=n.A7(t);if(r.length>0&&!s.hh.Ho.Uo)return r[0]}}),null)}return null}catch(e){return u.ErrorMonitor.ve().logError("Error selecting partner to update out",this.loggerId,c.hs.br.wr,e),null}},e.prototype.C7=function(e){var t=new i;return e.forEach(function(e){var r=e.Ek.peerInfo.watchingBitrate;if(r||(r=-1),t.has(r)){var i=t.get(r);i.push(e),t.set(r,i)}else t.set(r,[e])}),t},e.prototype.A7=function(e){return e.filter(function(e){if(0==e.vQ.I5(s.hh.Oa.Aa))return e})},e.prototype.P7=function(e,t){var r=[];e.forEach(function(e,t){r.push({bitrate:t,O7:e.length})}),r.sort(function(e,t){return e.O7>t.O7?1:e.O7<t.O7?0:-1});var i=null;return r.forEach(function(r){if(e.get(r.bitrate).length>t){var n=e.get(r.bitrate);n.length>0&&(n.sort(h.yQ.dQ),i=n[0])}}),i},e.prototype._7=function(e,t){var r=this,i=null;if(t.has(-1))i=t.get(-1)[0];else{t.filter(function(t,r){return!e.has(r)}).forEach(function(e,t){var n=r.A7(e);if(n.length>0)return void(i=n[0])})}return i},e}();t.kJ=p},function(e,t,r){"use strict";var i=r(0),n=r(9),s=r(34),o=r(24),a=r(10),h=r(14),c=r(5),u=function(){function e(){this.N7=!0===h.HiveConfig.Stats.AudioAccounting,this.D7=null}return e.prototype.init=function(e){this.logger=i.Framework.resolve(i.Framework.V.R).log(e.sessionId),this.loggerId="S["+e.sessionId+"]",this.Ul=e.rl.Ul,this.yD=e.yD,this.pX()},e.prototype.Z1=function(e){this.Ul.FL.metrics.memN=e,this.Ul.iB.metrics.memN=e},e.prototype.vj=function(e,t){this.Ul.FL.metrics.lookupTotal++,this.Ul.iB.metrics.lookupTotal++,e?(this.Ul.FL.metrics.lookupNotFound++,this.Ul.iB.metrics.lookupNotFound++,this.Ul.FL.metrics.lookupFailed++,this.Ul.iB.metrics.lookupFailed++):t?(this.Ul.FL.metrics.lookupFailed++,this.Ul.iB.metrics.lookupFailed++):(this.Ul.FL.metrics.lookupReqEstablished++,this.Ul.iB.metrics.lookupReqEstablished++)},e.prototype.Mj=function(){this.Ul.FL.metrics.lookupReqAccept++,this.Ul.iB.metrics.lookupReqAccept++},e.prototype.S8=function(e,t,r,i,n){if(this.N7||i){var s=n==o.bf.wf,a=this.Ul.OB(e),h=this.Ul.AB(e);a.p2pSuccReq++,a.p2pSuccReceived+=t,h.p2pSuccReq++,h.p2pSuccReceived+=t,s&&(a.p2pSuccReceivedLow+=t,h.p2pSuccReceivedLow+=t),r>0&&!s&&(a.p2pSuccReceivedLow+=t,h.p2pSuccReceivedLow+=t)}},e.prototype.b8=function(e,t,r,i,n,s){if(this.N7||n){var a=s==o.bf.wf,h=this.Ul.OB(e),c=this.Ul.AB(e);h.p2pFailReq++,h.p2pSuccReceived+=t,h.p2pFailReceived+=i-t,c.p2pSuccReq++,c.p2pSuccReceived+=t,c.p2pFailReceived+=i-t,a&&(h.p2pSuccReceivedLow+=t,c.p2pSuccReceivedLow+=t),r>0&&!a&&(h.p2pSuccReceivedLow+=t,c.p2pSuccReceivedLow+=t)}},e.prototype.C8=function(e,t,r){if(this.N7||r){var i=this.Ul.OB(e),n=this.Ul.AB(e);i.p2pFailReq++,i.p2pFailReceived+=t,n.p2pFailReq++,n.p2pFailReceived+=t}},e.prototype.P8=function(e,t,r){if(this.N7||r){var i=this.Ul.OB(t),n=this.Ul.AB(t);i.p2pSuccResp++,i.p2pSuccSent+=e,n.p2pSuccResp++,n.p2pSuccSent+=e}},e.prototype.D8=function(e,t,r,i){if(this.N7||i){var n=this.Ul.OB(r),s=this.Ul.AB(r);n.p2pPartResp++,n.p2pSuccSent+=e,n.p2pFailSent+=t-e,s.p2pPartResp++,s.p2pSuccSent+=e,s.p2pFailSent+=t-e}},e.prototype.O8=function(e,t,r){if(this.N7||r){var i=this.Ul.OB(t),n=this.Ul.AB(t);i.p2pFailResp++,i.p2pFailSent+=e,n.p2pFailResp++,n.p2pFailSent+=e}},e.prototype.ZM=function(e){e?this.Ul.FL.metrics.bitrateUpN++:this.Ul.FL.metrics.bitrateDwnN++},e.prototype.NX=function(e){if(-1==[n.vc.gc,n.vc.Ec].indexOf(e.Xf())){var t=e.Xf()!=n.vc.dc;if((this.N7||t)&&(this.Ul.bB().reqN++,this.Ul.xL().reqN++,e.Xf()==n.vc.fc)){var r=e;if(r.bitrate){var i=r.bitrate;this.Ul.CB(i).reqN++,this.Ul.BL(i).reqN++}}}else this.Ul.bB().reqOtherN++,this.Ul.xL().reqOtherN++},e.prototype.$X=function(e){var t=e.Xf()!=n.vc.dc;if(this.N7||t){var r=this.Ul.bB(),i=this.Ul.xL(),s=null,a=null;if(-1==[n.vc.gc,n.vc.Ec].indexOf(e.Xf())){if(r.srcReqN++,i.srcReqN++,t){var h=this.k7(e);h&&(s=this.Ul.CB(h),a=this.Ul.BL(h),s.srcReqN++,a.srcReqN++)}if(e.Jf()==o.bf.If&&(r.srcOtherReqN++,i.srcOtherReqN++,t)){var h=this.k7(e);h&&(s.srcOtherReqN++,a.srcOtherReqN++)}}}},e.prototype.t5=function(e){if(this.Ul.bB().p2pSubReqN++,this.Ul.xL().p2pSubReqN++,e.Xf()==n.vc.fc){var t=this.k7(e);t&&(this.Ul.CB(t).p2pSubReqN++,this.Ul.BL(t).p2pSubReqN++)}},e.prototype.L7=function(e,t){this.M7(e,this.Ul.xL()),this.M7(e,this.Ul.bB());var r=this.k7(e);r&&e.Xf()===n.vc.fc&&(this.M7(e,this.Ul.CB(r)),this.M7(e,this.Ul.BL(r))),isNaN(t)||(this.Ul.FL.metrics.srcThroughput=t)},e.prototype.nZ=function(e,t){var r=e.Xf()!=n.vc.dc;(this.N7||r)&&(-1!=[n.vc.gc,n.vc.Ec].indexOf(e.Xf())?(this.Ul.bB().respFallbackOtherN++,this.Ul.xL().respFallbackOtherN++):this.L7(e,t))},e.prototype.tZ=function(e,t){if(-1!=[n.vc.gc,n.vc.Ec].indexOf(e.Xf()))this.Ul.bB().respFallbackOthertErrN++,this.Ul.xL().respFallbackOthertErrN++;else{var r=e.Xf()!=n.vc.dc;if(this.N7||r)if(this.XM(e.type)){if(this.Ul.xL().respFallbackErrN++,this.Ul.bB().respFallbackErrN++,r){var i=this.k7(e);i&&(this.Ul.CB(i).respFallbackErrN++,this.Ul.BL(i).respFallbackErrN++)}if(0==e.qf.Df&&(this.Ul.xL().srcRespErrN++,this.Ul.bB().srcRespErrN++,r)){var i=this.k7(e);i&&e.Xf()===n.vc.fc&&(this.Ul.CB(i).srcRespErrN++,this.Ul.BL(i).srcRespErrN++)}this.L7(e,t)}else if(-1!=c.hh.Xo.Jo.indexOf(e.Kf.status))this.Ul.bB().fallAgentFailedRespN++,this.Ul.xL().fallAgentFailedRespN++,this.Ul.bB().reqN--,this.Ul.xL().reqN--;else{if(0==e.qf.Df&&(this.Ul.bB().srcOtherRespErrN++,this.Ul.xL().srcOtherRespErrN++),!r){var i=this.k7(e);i&&e.Xf()===n.vc.fc&&(this.Ul.CB(i).srcOtherRespErrN++,this.Ul.BL(i).srcOtherRespErrN++)}this.L7(e,t)}}},e.prototype.BX=function(e,t){if(t.Wq==o.bf.wf)this.Ul.xL().respP2pN++,this.Ul.bB().respP2pN++;else if(t.Wq==o.bf.If)this.Ul.xL().respFallbackN++,this.Ul.bB().respFallbackN++;else if(t.Wq==o.bf.Tf){this.Ul.xL().lCacheRespN++,this.Ul.bB().lCacheRespN++;var r=i.Framework.C()?t.length:e.jf.byteLength;this.Ul.xL().lCacheRespQt+=r,this.Ul.bB().lCacheRespQt+=r}},e.prototype.zX=function(e,t){var r=e.Xf()!=n.vc.dc;(this.N7||r)&&this.L7(e,t)},e.prototype.VX=function(e){if(0!=e.Qf){this.Ul.bB().p2pSubRespErrN++,this.Ul.xL().p2pSubRespErrN++;if(e.Xf()==n.vc.fc){var t=this.k7(e);t&&(this.Ul.CB(t).p2pSubRespErrN++,this.Ul.BL(t).p2pSubRespErrN++)}}},e.prototype.r5=function(e){if(this.Ul.bB().p2pSubRespExpN++,this.Ul.xL().p2pSubRespExpN++,e.Xf()==n.vc.fc){var t=this.k7(e);t&&(this.Ul.CB(t).p2pSubRespExpN++,this.Ul.BL(t).p2pSubRespExpN++)}},e.prototype.M7=function(e,t){var r=e.qf.Pf,i=e.qf.Df,s=e.qf.Af,o=e.qf.Of,h=e.qf.Nf;if(e.Xf()!=n.vc.gc){if(e.qf.Cf&&o&&o<r){var c=o/r;t.p2pSubRespPartN+=c,this.XM(e.type)||(t.p2pAgenTrafficFailureQt+=r-s)}if(0!=h&&(h==r&&t.lCacheRespN++,t.lCacheRespQt+=e.qf.Nf),0!=s)if(s==r&&(this.XM(e.type)&&t.respP2pN++,t.p2pSubRespN++),t.p2pSubReqQt+=r,t.p2pSubRespQt+=s,t.p2pAgenTrafficSuccessQt+=e.qf.p2pAgenTrafficSuccessQt,t.p2pDirectQt+=s,e.xq.Ek.peerInfo.type==a.Tc.W)t.p2pUdpbQt+=s,t.p2pNatQt+=s;else{var u=this.yD.gk();if(u&&u>0)if(null!=e.qq){var l=e.qq.internalAs;u===l&&(t.p2pNatQt+=s)}else this.logger.warn("Missing partner info")}}if(0!=i){if(this.F7(e.type)&&(t.srcOtherReqQt+=e.qf.Df),i==r)this.F7(e.type)?(t.srcOtherRespN++,t.srcOtherRespQt+=e.qf.Df,t.srcOtherOverQt+=e.qf.Df,t.fallAgentRespN++):t.respFallbackN++,t.srcRespN++;else{t.srcRespErrN++;var p=i/(s+i);t.respFallbackN=p,t.respP2pN=1-p,this.F7(e.type)&&(t.srcOtherRespErrN++,t.srcOtherRespQt+=e.qf.Df,t.srcOtherOverQt+=e.qf.Df,t.fallAgenTrafficFailureQt+=e.qf.Df)}t.srcReqQt+=e.qf.Df,t.srcRespQt+=e.qf.Df,t.srcOverQt+=e.qf.Df,this.F7(e.type)&&(t.fallAgenTrafficSuccessQt+=e.qf.kf)}},e.prototype.k7=function(e){var t=null;if(e.zf instanceof s.N_){var r=e.zf;r.bitrate&&(t=r.bitrate)}return t},e.prototype.XM=function(e){return e!=o.bf.wf&&e!=o.bf.If},e.prototype.F7=function(e){return!this.XM(e)},e.prototype.pX=function(){this.U7()},e.prototype.hX=function(){i.Framework.clearInterval(this.D7),this.D7=null},e.prototype.U7=function(){var e=this;null!=this.D7&&(this.D7=i.Framework.setInterval(function(){e.Ul.ZU=e.yD.Fj(),e.Ul.XU=e.yD.gk(),e.Ul.IB=e.yD.getPublicIp()},c.hh.ih.rh))},e}();t.TJ=u},function(e,t,r){"use strict";var i=r(0),n=r(5),s=r(10),o=r(194),a=r(14),h=function(){function e(){this.B7=!1,this.loggerId="[UDPBDiscovery] ",this.H7=-1}return e.prototype.init=function(e){this.logger=i.Framework.resolve(i.Framework.V.R).log(e.sessionId),this.x7=e.VJ,this.yD=e.yD},e.prototype.JJ=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.vl=e,this.contextId=this.yD.getContextId()},e.prototype.startServer=function(){var e=this;this.logger.debug(this.loggerId+"START UDP BROADCAST SERVER"),this.x7.startServer(n.hh.UDPBroadcast.Ua,function(t,r){if(e.H7>-1){var i=o.q7.yf(r);if(i.uuid!=e.guid&&i.streamId==e.contextId&&i.p2pProtocolVersion===n.hh.Ho.Do){e.logger.debug(e.loggerId+"I RECEIVED A MESSAGE FROM "+i.uuid);var a=new s.bc(s.Tc.W,null,i.isLeader);a.guid=i.uuid,a.privateIpString=t,a.rankValue=i.rankValue,e.vl.forEach(function(e){return e.gG([a],!1)})}}})},e.prototype.lX=function(){var e=this;this.logger.info(this.loggerId+"START BROADCAST EVERY "+n.hh.UDPBroadcast.Ba),-1!=this.H7&&i.Framework.clearInterval(this.H7),this.H7=i.Framework.setInterval(function(){e.G7()},n.hh.UDPBroadcast.Ba),this.G7()},e.prototype.sX=function(){-1!=this.H7&&i.Framework.clearInterval(this.H7)},e.prototype.G7=function(){var e=new o.q7(this.contextId,this.yD.getId(),this.yD.QG(),this.yD.ck(),n.hh.Ho.Do);this.logger.info(this.loggerId+"BROADCAST MESSAGE contextId "+e.streamId+" id "+e.uuid+" udpscore "+e.rankValue+" lan leader "+e.isLeader+" protobufVersion "+e.p2pProtocolVersion),a.HiveConfig.UDPBroadcast.usiz&&(n.hh.UDPBroadcast.Ha=a.HiveConfig.UDPBroadcast.usiz),this.x7.broadcast(n.hh.UDPBroadcast.Ua,n.hh.UDPBroadcast.Ha,e.vf())},e.prototype.Ud=function(e){this.logger.info("UDPDISCOVERY SERVER CONNECTED"),this.B7||(this.guid=e,this.startServer(),this.lX())},e}();t.gJ=h},function(e,t,r){"use strict";var i=function(){function e(e,t,r,i,n){this.streamId=e,this.uuid=t,this.rankValue=r,this.isLeader=i,this.p2pProtocolVersion=n}return e.prototype.vf=function(){var e={streamId:this.streamId,uuid:this.uuid,rankValue:this.rankValue,isLeader:this.isLeader,p2pProtocolVersion:this.p2pProtocolVersion};return JSON.stringify(e,this.V7)},e.prototype.V7=function(e,t){if(null!==t)return t},e.yf=function(t){var r=t,i=JSON.parse(r);return new e(i.streamId,i.uuid,i.rankValue,i.isLeader,i.p2pProtocolVersion)},e}();t.q7=i},function(e,t,r){"use strict";var i=r(0),n=function(){function e(){this.loggerId="[ProxyUDPB]",this.logger=i.Framework.resolve(i.Framework.V.R).log(),this.x7=window.myUdpBroadcaster,this.x7||this.logger.error(this.loggerId+" helper undefined")}return e.prototype.startServer=function(e,t){try{this.x7&&this.x7.startServer(e,t)}catch(e){this.logger.warn(this.loggerId+e)}},e.prototype.j7=function(){try{this.x7&&this.x7.j7()}catch(e){this.logger.warn(this.loggerId+e)}},e.prototype.broadcast=function(e,t,r){try{this.x7&&this.x7.broadcast(e,t,r)}catch(e){this.logger.warn(this.loggerId+e)}},e.prototype.sX=function(){try{this.x7&&this.x7.sX()}catch(e){this.logger.warn(this.loggerId+e)}},e.prototype.Q7=function(e,t){try{this.x7&&this.x7.Q7(e,t)}catch(e){this.logger.warn(this.loggerId+e)}},e}();t.EJ=n},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(88),s=r(197),o=r(89),a=r(90),h=r(62),c=r(24),u=r(34),l=r(4),p=r(1),d=function(e){function t(){var t=e.call(this)||this;return t.K7.onerror=function(e){p.ErrorMonitor.ve().logError("Shared Worker error",{error:e.message})},t.Y7.onerror=function(e){p.ErrorMonitor.ve().logError("Web Worker error",{error:e.type})},t.K7.port.start(),t}return i(t,e),t.prototype.W7=function(){var e=this;setTimeout(function(){e.z7()},1e3)},t.prototype.z7=function(){var e=this;this.K7.port.onmessage=function(t){e.logger.debug("LRU length : "+t.data.response)},this.logger.debug("Send message"),this.K7.port.postMessage({type:s.X7.J7}),this.W7()},t.prototype.contains=function(e){var t=this,r=l.defer();if(this.kq.has(e))r.resolve(!0);else{var i=!1,n=setTimeout(function(){i=!0,t.logger.debug("VOD CONTAINS TIMEDOUT : "+e),r.resolve(!1)},1e3);this.K7.port.onmessage=function(e){clearTimeout(n),i||(e.data.response?r.resolve(!0):r.resolve(!1))},this.K7.onerror=function(e){t.logger.error(e)},this.K7.port.postMessage({type:s.X7.Z7,eee:e})}return r.Ss},t.prototype.tee=function(e){var t=l.defer(),r=this.kq.get(e);if(null!=r){var i=null;r.content.forEach(function(e,t){if(h.HF.BF(t).kF())return i=e,i.headers=r.headers,void(i.qq=r.qq)}),t.resolve(i)}else t.resolve(null);return t.Ss},t.prototype.get=function(e){var t=this,r=l.defer();if(this.kq.has(e))this.tee(e).then(function(e){r.resolve(e)});else{this.logger.debug("SHAREDWORKER: Permission Request to READ");var i=Date.now();this.ree(s.X7.iee,i).then(function(n){t.logger.debug("SHAREDWORKER: Permission Request To READ : "+n),n?t.nee(e).then(function(e){t.logger.debug("SHAREDWORKER:  Read Completed "),t.K7.port.postMessage({type:s.X7.see,id:i}),r.resolve(e)}):r.resolve(null)})}return r.Ss},t.prototype.nee=function(e){var t=this,r=l.defer(),i=null,n=!1,a=setTimeout(function(){n=!0,r.resolve(i)},1e3);return this.Y7.onmessage=function(h){if(clearTimeout(a),!n){if(h.data.response){var u=new c.Hf;u.Cf=!1,u._f=!0,u.Pf=h.data.data.length,u.Af=0,u.Nf=h.data.data.length,u.Df=0,i=new o.Gq(h.data.data.length,h.data.data.content,u,c.bf.Tf),i.headers=h.data.data.oee}else t.K7.port.postMessage({type:s.X7.aee,eee:e});r.resolve(i)}},this.Y7.postMessage({type:s.X7.hee,eee:e}),r.Ss},t.prototype.m=function(){var e=this;this.logger.debug("FLUSHING IN-MEMORY CACHE");for(var t=[],r=0;r<this.Mq.length;r++)this.kq.get(this.Mq[r]).zq||t.push(this.Mq[r]);this.logger.debug("Flush "+t.length+" in memory"),t.length>0?this.cee(t).then(function(t){e.uee()}):this.uee()},t.prototype.uee=function(){var e=this,t=0,r=0;this.logger.debug("PURGING PERSISTENTDB's IN-MEMORY CACHE"),this.Mq.every(function(i,n){var s=e.kq.get(i).size();return t+s>e.Fq?(r=n,e.logger.debug("CACHE TOO BIG "+(t+s)),!1):(t+=s,!0)})||this.Mq.splice(r,this.Mq.length-1).forEach(function(t){e.kq.delete(t)}),this.Bq()},t.prototype.cee=function(e){var t=this,r=l.defer();this.logger.debug("SHAREDWORKER:  Permission Request To Write ");var i=Date.now();return this.ree(s.X7.lee,i).then(function(n){t.logger.debug("SHAREDWORKER:  Permission Request To WRITE : "+n),n?(t.logger.debug("Flush the contents"),t.pee(e).then(function(e){t.logger.debug("SHAREDWORKER:  WRITE COMPLETED"),t.K7.port.postMessage({type:s.X7.dee,id:i}),r.resolve(e)})):r.resolve(n)}),r.Ss},t.prototype.pee=function(e){var t=this,r=l.defer();return this.fee(e[0]).then(function(i){if(i)e.shift(),0==e.length?r.resolve(!0):t.pee(e).then(function(e){r.resolve(e)});else{var n=!1,o=setTimeout(function(){n=!0,e.shift(),0==e.length?r.resolve(!1):t.pee(e).then(function(e){r.resolve(e)})},1e3);t.Y7.onmessage=function(i){i.data&&(t.kq.get(e[0]).zq=!0,t.K7.port.postMessage({type:s.X7.gee,eee:e[0],size:t.kq.get(e[0]).size()})),clearTimeout(o),n||(e.shift(),0==e.length?i.data?r.resolve(!0):r.resolve(!1):t.pee(e).then(function(e){r.resolve(e)}))},t.Y7.onerror=function(e){t.logger.error(e)};var a=t.kq.get(e[0]),c=null,u=null;a.content.forEach(function(e,t){if(h.HF.BF(t).kF())return c=e,u=t,void(c.headers=a.headers)});var l={P_:a.zf.Zf(),headers:a.headers,length:a.size(),Eee:u,content:c.data,zf:a.zf};t.Y7.postMessage({type:s.X7.vee,data:l})}}),r.Ss},t.prototype.fee=function(e){var t=this,r=l.defer(),i=!1,n=setTimeout(function(){i=!0,r.resolve(!1)},1e3);return this.K7.port.onmessage=function(s){clearTimeout(n),i||(t.logger.debug("SHAREDWORKER:  CONTAINS REQUEST : "+e+" : "+s.data.response),s.data.response?r.resolve(!0):r.resolve(!1))},this.K7.onerror=function(e){t.logger.error(e),r.resolve(!1)},this.K7.port.postMessage({type:s.X7.Z7,eee:e}),r.Ss},t.prototype.ree=function(e,t){var r=this,i=l.defer(),n=!1,o=setTimeout(function(){n=!0,i.resolve(!1)},2e3);return this.K7.port.onmessage=function(t){clearTimeout(o),n?e==s.X7.iee?r.K7.port.postMessage({type:s.X7.see}):e==s.X7.lee&&r.K7.port.postMessage({type:s.X7.dee}):i.resolve(t.data.response)},this.K7.onerror=function(e){r.logger.error(e)},this.K7.port.postMessage({type:e,id:t}),i.Ss},t.prototype.ik=function(e){return[]},t.prototype.Vq=function(e){var t=this,r=l.defer(),i=[],n=Date.now();return this.ree(s.X7.iee,n).then(function(e){if(e){var o=!1,h=setTimeout(function(){o=!0,t.K7.port.postMessage({type:s.X7.see,id:n}),r.resolve(i)},4e3);t.Y7.onmessage=function(e){if(clearTimeout(h),e.data.response&&null!=e.data)for(var c=0;c<e.data.elements.length;c++){var l=new u.N_(e.data.elements[c].url,e.data.elements[c].b_,e.data.elements[c].w_,e.data.elements[c].C_,e.data.elements[c].duration,e.data.elements[c].bitrate,e.data.elements[c].__),p=new a.Hq(l);p.headers=e.data.elements[c].oee,p.totalSize=e.data.elements[c].length,i.push(p)}t.K7.port.postMessage({type:s.X7.see,id:n}),o||r.resolve(i)},t.Y7.onerror=function(e){p.ErrorMonitor.ve().logError("GET ELEMENTS ERROR",{error:e}),t.K7.port.postMessage({type:s.X7.see,id:n})},t.Y7.postMessage({type:s.X7.yee})}}),r.resolve(null),r.Ss},t}(n.Yq);t.vJ=d},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.lee="write_request",i.Z7="contains_request",i.gee="write_id_operation",i.iee="read_request",i.see="read_completed",i.dee="write_completed",i.aee="update_lru",i.J7="lru_stats",i.hee="read_operation",i.yee="read_elements_operation",i.Tee="read_keys_operation",i.vee="write_operation",t.X7=i},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20);!function(e){!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.minVersion="3.0.0",t.renderStatsCallback=void 0,t}return i(t,e),t}(n.HiveComm.Options.Tp);e.nJ=t}(e.Options||(e.Options={}))}(t.HiveComm||(t.HiveComm={}))},function(e,t,r){"use strict";var i=r(4),n=r(18),s=r(21),o=r(200),a=r(26),h=a.HiveComm.HiveTechError,c=a.HiveComm.vE,u=r(70),l=r(19),p=r(22),d=r(46),f=r(53),g=r(14),E=r(1),v=r(56),y=r(32),T=r(72),m=r(29),I=(r(44),navigator),S=function(){function e(e,t,r){this.loggerId="[HiveJsProxy]",this.mee=0,this.gL=e,this.options_=new o.HiveComm.Options.Iee,this.See(t),this.yL(),this.UQ=r}return e.prototype.getName=function(){return e.EL},e.prototype.getVersion=function(){return this.version},e.prototype.vL=function(){return!1},e.prototype.yL=function(){var e=this;if(null==this.Ree||Date.now()-this.mee>1e4){var t="//"+u.tL.dO+":"+u.tL.rL+"/version.json";this.Ree=s.bp(t).then(function(t){var r=JSON.parse(t);return e.state=r.state,e.version=r.version,"ready"===e.state?"ready":(e.logger().warn(e.id()+"Client not ready: "+e.state),i.reject(new h(c.pE,"state "+e.state)))},function(t){var r="Client not reachable";return void 0!=t&&void 0!=t.status&&-1!=t.status&&(r="Client check returned "+t.status),e.logger().warn(e.id()+r),i.reject(new h(c.pE,r))}).catch(function(e){return e instanceof h?i.reject(e):i.reject(new h(c.pE,"error parsing response"))}),this.mee=Date.now()}return this.Ree},e.prototype.initSession=function(e,t){var r=this;return this.yL().then(function(){return r.resolveTicketPromise(e).then(function(t){var i=r.TL(e,t);if(null!=i)return T.$u.registerComm(r.gL,i.id),T.$u.registerTech(r,i.id),n.HiveRequestFactory.registerTech(i.id,r.getName()),i;throw new h(c.sE,"error generating session")})}).catch(function(e){return e instanceof h?i.reject(e):i.reject(new h(c.sE,"generic error resolving ticket"))})},e.prototype.oL=function(e){this.oJ=e},e.prototype.mL=function(){return this.options_.initTimeout},e.prototype.isActive=function(e,t){var r=t.manifest.toLowerCase(),i=e.toLowerCase(),n=r.indexOf(".ism/manifest");if(n>-1){var s=r.substring(0,n);if(i.indexOf(s)>-1)return i.indexOf(".ism/manifest(format=mpd-time-csf)")>-1?this.oJ?(t.ticket.SourceURL=e,!0):this.aJ(t,"The player does not use HiveRequest, downgrading to StatsJS"):this.aJ(t,"Protocol not supported by HiveJsProxy tech, downgrading to StatsJS")}else if(i===r)return!!this.oJ||this.aJ(t,"The player does not use HiveRequest, downgrading to StatsJS");return!1},e.prototype.aJ=function(e,t){var r=this;return e.tech=this.UQ,y.Hive.Reporting().initSession(e.ticket.ticketUrl,!1).then(function(t){e.hl(t);t.ticket;r.logger().debug("[HiveJSProxy] downgrade verified ticket "+e.ticket.ticketUrl),r.gL.updatePlayerInfo(t)}).fail(function(e){E.ErrorMonitor.ve().logError("Error initializing session when downgrading session tech",r.loggerId,{error:e})}),this.oJ&&this.oJ.dU(),this.oJ=void 0,n.HiveRequestFactory.registerTech(e.id,v.StatsJS.EL),this.gL.logger().warn("[HiveJsProxy] "+t),this.onError(new h(c.fE,t)),!0},e.prototype.ol=function(e,t){var r=this;this.logger().debug(this.id()+"Stopping session "+e.id+" [onUnload:"+t+"]");var i="//"+u.tL.dO+":"+u.tL.rL+"/proxy/"+e.id+"/stop";t&&I.sendBeacon?(I.sendBeacon(i),this.logger().debug(this.id()+"session stopped ["+e.id+"][beacon]")):s.bp(i,null,!t).then(function(){r.logger().debug(r.id()+"session stopped ["+e.id+"]"+(t?"[sync]":""))},function(i){r.logger().warn(r.id()+"session close error ["+e.id+"]"+(t?"[sync]":""),i)})},e.prototype.nl=function(e,t){var r=t?l.Ml.IDLE:l.Ml.Ll;this.logger().debug(this.id()+"idle state: "+l.Ml[r])},e.prototype.SL=function(e,t){var r=this,n="playing-point="+t.Pl;n+="&buffer-length="+t.Al,n+="&total-buffering="+t.Ol,n+="&width="+t.width,n+="&height="+t.height,n+="&fullscreen="+t.YQ;var o="//"+u.tL.dO+":"+u.tL.rL+"/proxy/"+e.id+"/stats/put?"+n;return s.bp(o).fail(function(e){return r.logger().warn(r.id()+"error sending feedback to Hive Client",e),i.reject(e)})},e.prototype.CL=function(e,t,r){var n=this,o="//"+u.tL.dO+":"+u.tL.rL+"/proxy/"+e.id+"/event?type="+t;if(void 0!=r)for(var a in r)o+="&"+a+"="+r[a];return this.logger().debug(this.id()+"event "+p.Gl.Yp[t],void 0!=r?r:""),s.bp(o).fail(function(e){return n.logger().warn(n.id()+"error sending feedback event to Hive Client",e),i.reject(e)})},e.prototype.bd=function(e,t){return i.resolve(!0)},e.prototype.onError=function(e){var t=!0;if(void 0!=this.options_.onError)try{t=this.options_.onError(e)}catch(e){E.ErrorMonitor.ve().logError("exception in user-defined onError callback",this.id(),e)}return t},e.prototype.onActiveSession=function(e){var t=this.gL.getPlayerSource();0===t.indexOf("//")&&(t=location.protocol+t);var r=s.Ip(u.tL.cU,u.tL.dO,u.tL.rL,e.id,t);if(e.authenticationToken&&this.version>="3.0.1"?s._p(r,JSON.stringify({authenticationToken:e.authenticationToken})):s.bp(r),this.updatePlayerInfo(e),f.Zu.me(this.logger()),this.oJ&&this.oJ.fU(),this.wee(e),void 0!=this.options_.onActiveSession)try{this.options_.onActiveSession(e.toHiveSession())}catch(e){E.ErrorMonitor.ve().logError("exception in user-defined onActiveSession callback",this.id(),e)}},e.prototype.DL=function(){},e.prototype.kL=function(){},e.prototype.LL=function(e){this.gL=e},e.prototype.id=function(){return"["+e.EL+"] "},e.prototype.See=function(t){void 0!=t[e.EL]&&s.Sp(t[e.EL],this.options_)},e.prototype.resolveTicketPromise=function(e){var t=this;this.logger().debug(this.id()+"resolving ticket: "+e);var r=this.bee(e),n=JSON.stringify(this.Cee()),o=null;return this.gL.options().testId&&(a={},a[m.L.cR]=this.gL.options().testId,o=a),this.logger().debug("My header ",o),s._p(r,n,"application/json",o).then(function(r){var i=JSON.parse(r);return t.logger().debug(t.id()+"resolved ticket "+e+" -> "+i.manifest),i},function(r){return t.logger().warn(t.id()+"ticket "+e+" resolve error: ",r),i.reject(new h(c.sE,r))}).catch(function(e){return e instanceof h?i.reject(e):i.reject(new h(c.dE,e))});var a},e.prototype.bee=function(e){return e=encodeURIComponent(e),s.Ip(u.tL.fO,u.tL.dO,u.tL.rL,e,"&",this.gL.getPluginId())},e.prototype.TL=function(e,t){var r=new d.BN;r.RN(e);var i=new n.cl(e,r,t.manifest,null);return i.ML=!0,i.id=t.sessionId,i.ticket.sessionId=i.id,i},e.prototype.Cee=function(){var e={};e.HiveConfig={};for(var t in window.HiveConfig){e.HiveConfig[t]={};for(var r in window.HiveConfig[t])e.HiveConfig[t][r]=window.HiveConfig[t][r]}return e},e.prototype.wee=function(e){var t=this;if(void 0!==g.HiveConfig.Stats.render){var r="//"+u.tL.dO+":"+u.tL.rL+"/proxy/"+e.id+"/stats/get";if("undefined"!=typeof EventSource){var i=new EventSource(r);i.onmessage=function(e){t._ee(e.data)},i.onerror=function(e){i.close()}}else this.Pee=window.setInterval(function(){s.bp(r).then(function(e){t._ee(e)})},4e3)}},e.prototype.updatePlayerInfo=function(e){var t=this,r="comm-version="+this.gL.getCommVersion();r+="&plugin-name="+this.gL.getPluginName(),r+="&plugin-version="+this.gL.getPluginVersion(),r+="&player-tech="+this.gL.getPlayerTech(),r+="&player-version="+this.gL.getPlayerVersion(),this.gL.getTelemetryId()&&(r+="&telemetry-id="+this.gL.getTelemetryId());var n=s.Ip(u.tL.uU,u.tL.dO,u.tL.rL,e.id,r);return s.bp(n).fail(function(e){return t.logger().debug(t.id()+"error sending player Info to Hive Client",e),i.reject(e)})},e.prototype._ee=function(e){try{var t=JSON.parse(e);for(var r in t)t.hasOwnProperty(r)&&(t[r].human=function(e){return e>1e6?(e/1e6).toFixed(2)+"MB":e>1e3?(e/1e3).toFixed(2)+"KB":e+"B"});g.HiveConfig.Stats.render(t)}catch(e){console.trace(e)}},e.prototype.logger=function(){return this.gL.logger()},e}();S.EL="HiveJsProxy",t.HiveJsProxy=S},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20);!function(e){!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.minVersion="3.3.0",t}return i(t,e),t}(n.HiveComm.Options.Tp);e.Iee=t}(e.Options||(e.Options={}))}(t.HiveComm||(t.HiveComm={}))},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(4),s=r(18),o=r(21),a=r(20),h=r(202),c=r(26),u=r(42),l=r(29),p=r(19),d=r(22),f=r(46),g=r(1),E=h.HiveComm.Options,v=a.HiveComm.Options.mp,y=c.HiveComm.HiveTechError,T=c.HiveComm.vE,m=r(44);t.Aee=navigator;var I=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(s.cl),S=function(){function e(e,t){this.mee=0,this.gL=e,this.options_=new E.Oee,this.See(t),o.Rp(window.location.href,new v,this.options_)}return e.prototype.getName=function(){return e.EL},e.prototype.getVersion=function(){return this.version},e.prototype.vL=function(){return!1},e.prototype.yL=function(){var e=this;if(null==this.Ree||Date.now()-this.mee>1e4){var t=new m;t.Ad(navigator.userAgent);var r=t.jO();if("IE"===r.name&&r.version&&parseInt(r.version)<10)return n.reject(new y(T.pE,"Internet Explorer < v.10 not supported"));this.Nee=Date.now(),this.Dee=0;var i="//"+u.fp.dO+":"+this.gL.options().monitorPort+"/version.json";this.logger().debug(this.id()+"verifying Hive Client version"),this.Ree=o.bp(i).then(function(t){var r=JSON.parse(t);return e.state=r.state,e.version=r.version,"ready"===e.state?"developer"===e.version||e.version>=e.options_.minVersion?(e.Dee=Date.now(),e.logger().debug(e.id()+"Hive Client ready - version "+e.version+" ["+(e.Dee-e.Nee)+"]"),"ready"):(g.ErrorMonitor.ve().logError("Client version requirement not satisfied",e.id(),{version:e.version,minVersion:e.options_.minVersion}),e.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.Jp)),n.reject(new y(T.gE,"version "+e.version))):(g.ErrorMonitor.ve().logError("Cannot check version: client state not ready",e.id(),{state:e.state}),e.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.zp)),n.reject(new y(T.pE,"state "+e.state)))},function(t){var r="Client not reachable";return void 0!=t&&void 0!=t.status&&-1!=t.status&&(r="Client check returned error"),g.ErrorMonitor.ve().logError(r,e.id(),void 0!=t&&void 0!=t.status&&-1!=t.status?{status:t.status}:void 0),e.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.Wp)),n.reject(new y(T.pE,r))}).catch(function(t){if(t instanceof y)return n.reject(t);var r="Error fetching Hive Client version";return g.ErrorMonitor.ve().logError(r,e.id(),t),n.reject(new y(T.pE,r))}),this.mee=Date.now()}return this.Ree},e.prototype.initSession=function(e,t){var r=this;return this.options_.minVersion!=u.fp.vO||this.gL.options().testId?this.yL().then(function(){return r.kee(e).catch(function(e){return n.reject(e)})}):this.kee(e).catch(function(e){return n.reject(e)})},e.prototype.mL=function(){return this.options_.initTimeout},e.prototype.isActive=function(e,t){return e.indexOf(t.Lee)>-1},e.prototype.ol=function(e,r){var i=this;this.logger().debug(this.id()+"Stopping session "+e.id+" [complete close:"+r+"]");var n="//"+u.fp.dO+":"+this.gL.options().playerPort+"/session?action=stop";n+="&currentSession="+e.id,r&&(n+="&completeStop=true"),r&&t.Aee.sendBeacon?(t.Aee.sendBeacon(n),this.logger().debug(this.id()+"session stopped ["+e.id+"][beacon]")):o.bp(n,null,!r).then(function(){i.logger().debug(i.id()+"session stopped ["+e.id+"]"+(r?"[sync]":""))},function(t){i.logger().warn(i.id()+"session close error ["+e.id+"]"+(r?"[sync]":""),t)})},e.prototype.nl=function(e,t){this.Mee=t?p.Ml.IDLE:p.Ml.Ll,this.logger().notice("[HiveComm] client state: "+p.Ml[this.Mee])},e.prototype.SL=function(e,t){if(this.Mee==p.Ml.IDLE)return n.resolve(!0);var r="playing-point="+t.Pl;r+="&buffer-length="+t.Al,r+="&total-buffering="+t.Ol,r+="&width="+t.width,r+="&height="+t.height,r+="&fullscreen="+t.YQ;var i=e.Lee+"stats?"+r;return this.logger().trace(i),o.bp(i)},e.prototype.CL=function(e,t,r){var i=this;if(!(t!==d.Gl.Yp.Kp&&t!==d.Gl.Yp.HIDDEN||this.version&&("developer"===this.version||this.version>="2017")))return n.resolve(!0);var s=e.Lee+"player-event?type="+d.Gl.Yp[t];if(void 0!=r)for(var a in r)s+="&"+a+"="+r[a];return this.logger().debug(this.id()+"event "+d.Gl.Yp[t],void 0!=r?r:""),o.bp(s).fail(function(e){return i.logger().warn(i.id()+"error sending feedback event to Hive Client",e),n.reject(e)})},e.prototype.bd=function(e,t){return n.resolve(!0)},e.prototype.updatePlayerInfo=function(e){var t=this;if(this.Fee())return this.logger().warn("Player info not supported in this Java client version"),n.resolve(!0);var r="comm-version="+this.gL.getCommVersion();r+="&plugin-name="+this.gL.getPluginName(),r+="&plugin-version="+this.gL.getPluginVersion(),r+="&player-tech="+this.gL.getPlayerTech(),r+="&player-version="+this.gL.getPlayerVersion(),this.gL.getTelemetryId()&&(r+="&telemetry-id="+this.gL.getTelemetryId());var i=e.Lee+"player-info?"+r;return o.bp(i).fail(function(e){return t.logger().debug(t.id()+"error sending player Info to Hive Client",e),n.reject(e)})},e.prototype.onError=function(e){var t=!0;if(void 0!=this.options_.onError)try{t=this.options_.onError(e)}catch(e){g.ErrorMonitor.ve().logError("Exception in user-defined onError callback",this.id(),e)}return t},e.prototype.DL=function(e,t,r){var i={isReadyIn:this.Nee,isReadyOut:this.Dee,leaseIn:this.Uee,leaseOut:this.Bee,resolveIn:this.Hee,resolveOut:this.xee};void 0!==t&&null!=t&&(i.sessionId=t.id),void 0!==r&&(i.total=r);var n=JSON.parse(JSON.stringify(i));g.ErrorMonitor.ve().logError(e.message,this.id(),n),this.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.$p,i)),this.qee()},e.prototype.onActiveSession=function(e){if(this.updatePlayerInfo(e),s.Rl.setItem("hiveActiveSessionId",e.id),void 0!=this.options_.onActiveSession)try{this.options_.onActiveSession(e.toHiveSession())}catch(e){g.ErrorMonitor.ve().logError("Exception in user-defined onActiveSession callback",this.id(),e)}},e.prototype.LL=function(e){this.gL=e},e.prototype.id=function(){return"["+e.EL+"] "},e.prototype.See=function(t){void 0!=t[e.EL]&&o.Sp(t[e.EL],this.options_)},e.prototype.kee=function(e){var t=this,r=(new Date).getTime();return this.Gee(e).then(function(i){return i?t.Vee(e,i,r):t.resolveTicketPromise(e).then(function(i){return t.Vee(e,i,r)})})},e.prototype.Gee=function(t){var r=this;if(this.Uee=Date.now(),this.gL.options().useSessionCheck){var i="//"+u.fp.dO+":"+this.gL.options().playerPort+"/session?&action=check";i+="&hivePluginId="+this.gL.getPluginId(),i+="&callback="+encodeURIComponent(t);var o=s.Rl.getItem("hiveActiveSessionId");return s.Rl.removeItem("hiveActiveSessionId"),o&&(i+="&currentSession="+o),this.jee(),this.Qee(i).then(function(e){return r.Bee=Date.now(),e?r.Kee(e,i,t,r.Uee):(r.logger().debug(r.id()+"session allowed ["+(r.Bee-r.Uee)+"]"),!1)},function(t){if(400==t.status)return r.Yee("bad request","error resolving ticket",t);if(401==t.status)return r.Yee("unauthorized","error verifying the ticket",t);if(403==t.status){var i=e.Wee(t,void 0,"session"),s=i?{zee:i}:void 0;return g.ErrorMonitor.ve().logError("reports another active session",r.id(),s),r.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.Xp,s)),n.reject(new y(T.fE,"another active session"+(s?" ["+s.zee+"]":"")))}return 404==t.status?(r.logger().debug(r.id()+"installed version does not support active session check"),r.Bee=Date.now(),!1):-1==t.status?(clearTimeout(r.Jee),r.Xee()):(g.ErrorMonitor.ve().logError("unhandled error from Java",r.id(),{error:t.status}),r.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.Zp)),n.reject(new y(T.dE,t)))}).catch(function(e){return e instanceof y?n.reject(e):(g.ErrorMonitor.ve().logError("unhandled error on requestLeaseDirect",r.id(),{error:e}),r.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.Zp)),n.reject(new y(T.dE,e)))}).finally(function(){clearTimeout(r.Jee)})}return this.logger().debug(this.id()+"Hive session check disabled - will directly resolve ticket (other active sessions may fail)"),n.resolve(!1)},e.prototype.Qee=function(e){if(this.gL.options().testId){if(!("developer"!==this.version||this.version<u.fp.yO))return o.bp(e,void 0,!0,(t={},t[l.L.cR]=this.gL.options().testId,t));this.logger().warn(this.id()+"The Hive Client Version installed does not support the test id in its generated metrics")}return o.bp(e);var t},e.prototype.Yee=function(t,r,i){var s=e.Wee(i,t);return g.ErrorMonitor.ve().logError(r,this.id()),this.xee=Date.now(),n.reject(new y(T.sE,s))},e.Wee=function(e,t,r){void 0===r&&(r="status");var i=t;if(e.body)try{i=JSON.parse(e.body)[r]}catch(e){}return i},e.prototype.resolveTicketPromise=function(e){var t=this;this.Hee=Date.now(),this.logger().debug(this.id()+"resolving ticket: "+e);var r=this.bee(e);return o.bp(r,"application/json").then(function(i){return t.Kee(i,r,e,t.Hee)},function(r){return r&&-1==r.status?t.Xee():(g.ErrorMonitor.ve().logError("error resolving ticket",t.id(),{ticket:e}),n.reject(new y(T.sE,r)))}).catch(function(e){return g.ErrorMonitor.ve().logError("error parsing ticket response",t.id(),e),n.reject(new y(T.dE,e))})},e.prototype.Kee=function(e,t,r,i){var n=JSON.parse(e),s=o.$h(t,n.location);return n.version&&!this.version&&(this.version=n.version),this.xee=Date.now(),this.logger().debug(this.id()+"resolved ticket "+r+" -> "+s+" ["+(this.xee-i)+"]"),s},e.prototype.Vee=function(e,t,r){var i=this.TL(e,t);if(null!=i){var n=(new Date).getTime(),o=n-r;return o>=this.options_.warnSlowRespTimeout&&this.DL(new y(T.EE,this.id()+" The tech initialization took more than "+this.options_.warnSlowRespTimeout+" milliseconds"),i,o),s.HiveRequestFactory.registerTech(i.id,this.getName()),i}throw new y(T.sE,"error generating session")},e.prototype.TL=function(e,t){var r=new f.BN;r.RN(e);var i=new I(e,r,t,null);i.ML=!0;var n=u.fp.EO,s=n.exec(i.manifest);return null!=s?(i.Lee=s[1],i.id=s[5],i):null},e.prototype.bee=function(e){var t=-1==e.indexOf("?")?"?":"&";return this.Fee()?o.Ip(u.fp.gO,u.fp.dO,this.gL.options().playerPort,e):o.Ip(u.fp.fO,u.fp.dO,this.gL.options().playerPort,e,t,this.gL.getPluginId())},e.prototype.jee=function(){var e=this;this.Jee&&clearTimeout(this.Jee),this.Jee=setTimeout(function(){g.ErrorMonitor.ve().logError("The Lease Request is taking more than "+e.options_.warnSlowRespTimeout+" secs",e.id())},this.options_.warnSlowRespTimeout)},e.prototype.qee=function(){this.Uee=0,this.Bee=0,this.Hee=0,this.xee=0},e.prototype.logger=function(){return this.gL.logger()},e.prototype.kL=function(){this.qee()},e.prototype.Xee=function(){var e=this,t="//"+u.fp.dO+":"+this.gL.options().monitorPort+"/version.json";return this.logger().debug(this.id()+"checking if the monitor port is reachable"),o.bp(t).then(function(t){var r=JSON.parse(t);throw e.state=r.state,g.ErrorMonitor.ve().logError("Verify client state",e.id(),{state:e.state}),e.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.zp)),new y(T.pE,"state "+e.state)}).fail(function(t){if(t instanceof y)return n.reject(t);if(t&&-1==t.status){var r="client not reachable";return e.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.Wp)),e.logger().warn(e.id()+r),n.reject(new y(T.pE,r))}var r="VerifyClientState error";return g.ErrorMonitor.ve().logError(r,e.id(),{error:t}),e.gL.addTechEvent(new d.Gl.lf(null,d.Gl.td.zp)),n.reject(new y(T.dE,r))})},e.prototype.Fee=function(){return this.options_.supportLegacyClient&&(!this.version||this.version.substr(0,4)<"2016")},e}();S.EL="HiveJava",t.HiveJava=S},function(e,t,r){"use strict";var i=this&&this.hu||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20),s=r(42);!function(e){!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.minVersion=s.fp.vO,t.initTimeout=6e4,t.warnSlowRespTimeout=5e3,t.supportLegacyClient=!1,t}return i(t,e),t}(n.HiveComm.Options.Tp);e.Oee=t}(e.Options||(e.Options={}))}(t.HiveComm||(t.HiveComm={}))}]);
//# sourceMappingURL=core.hive.min.js.map
!function(t){function e(r){if(n[r])return n[r].o;var o=n[r]={i:r,s:!1,o:{}};return t[r].call(o.o,o,o.o,e),o.s=!0,o.o}var n={};e.u=t,e.c=n,e.d=function(t,n,r){e.p(t,n)||Object.defineProperty(t,n,{l:!1,h:!0,get:r})},e.n=function(t){var n=t&&t.v?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.p=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.g="",e(e.m=1)}([function(t,e,n){/*!
 *
 * Copyright 2009-2016 Kris Kowal under the terms of the MIT
 * license found at https://github.com/kriskowal/q/blob/v1/LICENSE
 *
 * With parts by Tyler Close
 * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found
 * at http://www.opensource.org/licenses/mit-license.html
 * Forked at ref_send.js version: 2009-05-11
 *
 * With parts by Mark Miller
 * Copyright (C) 2011 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
!function(e){"use strict";if("function"==typeof bootstrap)bootstrap("promise",e);else{t.o=e()}}(function(){"use strict";function t(t){return function(){return J.apply(t,arguments)}}function e(t){return t===Object(t)}function n(t){return"[object StopIteration]"===tt(t)||t instanceof F}function r(t,e){if(B&&e.stack&&"object"==typeof t&&null!==t&&t.stack&&-1===t.stack.indexOf(et)){for(var n=[],r=e;r;r=r.source)r.stack&&n.unshift(r.stack);n.unshift(t.stack);var i=n.join("\n"+et+"\n");t.stack=o(i)}}function o(t){for(var e=t.split("\n"),n=[],r=0;r<e.length;++r){var o=e[r];u(o)||i(o)||!o||n.push(o)}return n.join("\n")}function i(t){return-1!==t.indexOf("(module.js:")||-1!==t.indexOf("(node.js:")}function s(t){var e=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(t);if(e)return[e[1],Number(e[2])];var n=/at ([^ ]+):(\d+):(?:\d+)$/.exec(t);if(n)return[n[1],Number(n[2])];var r=/.*@(.+):(\d+)$/.exec(t);return r?[r[1],Number(r[2])]:void 0}function u(t){var e=s(t);if(!e)return!1;var n=e[0],r=e[1];return n===M&&r>=q&&r<=st}function a(){if(B)try{throw new Error}catch(r){var t=r.stack.split("\n"),e=t[0].indexOf("@")>0?t[1]:t[2],n=s(e);if(!n)return;return M=n[0],n[1]}}function c(t){return t instanceof d?t:g(t)?N(t):w(t)}function p(){function t(t){e=t,c.T&&B&&(i.source=t),G(n,function(e,n){c._(function(){t.I.apply(t,n)})},void 0),n=void 0,r=void 0}var e,n=[],r=[],o=z(p.prototype),i=z(d.prototype);if(i.I=function(t,o,i){var s=X(arguments);n?(n.push(s),"when"===o&&i[1]&&r.push(i[1])):c._(function(){e.I.apply(e,s)})},i.valueOf=function(){if(n)return i;var t=y(e);return v(t)&&(e=t),t},i.N=function(){return e?e.N():{state:"pending"}},c.T&&B)try{throw new Error}catch(t){i.stack=t.stack.substring(t.stack.indexOf("\n")+1)}return o.k=i,o.resolve=function(n){e||t(c(n))},o.R=function(n){e||t(w(n))},o.reject=function(n){e||t(I(n))},o.notify=function(t){e||G(r,function(e,n){c._(function(){n(t)})},void 0)},o}function f(t){if("function"!=typeof t)throw new TypeError("resolver must be a function.");var e=p();try{t(e.resolve,e.reject,e.notify)}catch(t){e.reject(t)}return e.k}function l(t){return f(function(e,n){for(var r=0,o=t.length;r<o;r++)c(t[r]).then(e,n)})}function d(t,e,n){void 0===e&&(e=function(t){return I(new Error("Promise does not support operation: "+t))}),void 0===n&&(n=function(){return{state:"unknown"}});var r=z(d.prototype);if(r.I=function(n,o,i){var s;try{s=t[o]?t[o].apply(r,i):e.call(r,o,i)}catch(t){s=I(t)}n&&n(s)},r.N=n,n){var o=n();"rejected"===o.state&&(r.exception=o.reason),r.valueOf=function(){var t=n();return"pending"===t.state||"rejected"===t.state?r:t.value}}return r}function h(t,e,n,r){return c(t).then(e,n,r)}function y(t){if(v(t)){var e=t.N();if("fulfilled"===e.state)return e.value}return t}function v(t){return t instanceof d}function g(t){return e(t)&&"function"==typeof t.then}function E(t){return v(t)&&"pending"===t.N().state}function m(t){return!v(t)||"fulfilled"===t.N().state}function T(t){return v(t)&&"rejected"===t.N().state}function S(){nt.length=0,rt.length=0,it||(it=!0)}function _(t,e){it&&("object"==typeof process&&process&&"function"==typeof process.O&&c._.D(function(){-1!==K(rt,t)&&(process.O("unhandledRejection",e,t),ot.push(t))}),rt.push(t),e&&void 0!==e.stack?nt.push(e.stack):nt.push("(no stack) "+e))}function b(t){if(it){var e=K(rt,t);-1!==e&&("object"==typeof process&&process&&"function"==typeof process.O&&c._.D(function(){var n=K(ot,t);-1!==n&&(process.O("rejectionHandled",nt[e],t),ot.splice(n,1))}),rt.splice(e,1),nt.splice(e,1))}}function I(t){var e=d({when:function(e){return e&&b(this),e?e(t):this}},function(){return this},function(){return{state:"rejected",reason:t}});return _(e,t),e}function w(t){return d({when:function(){return t},get:function(e){return t[e]},set:function(e,n){t[e]=n},delete:function(e){delete t[e]},P:function(e,n){return null===e||void 0===e?t.apply(void 0,n):t[e].apply(t,n)},apply:function(e,n){return t.apply(e,n)},keys:function(){return Z(t)}},void 0,function(){return{state:"fulfilled",value:t}})}function N(t){var e=p();return c._(function(){try{t.then(e.resolve,e.reject,e.notify)}catch(t){e.reject(t)}}),e.k}function k(t){return d({C:function(){}},function(e,n){return C(t,e,n)},function(){return c(t).N()})}function R(t,e,n){return c(t).A(e,n)}function x(t){return function(){function e(t,e){var s;if("undefined"==typeof StopIteration){try{s=r[t](e)}catch(t){return I(t)}return s.done?c(s.value):h(s.value,o,i)}try{s=r[t](e)}catch(t){return n(t)?c(t.value):I(t)}return h(s,o,i)}var r=t.apply(this,arguments),o=e.bind(e,"next"),i=e.bind(e,"throw");return o()}}function O(t){c.done(c.async(t)())}function D(t){throw new F(t)}function P(t){return function(){return R([this,A(arguments)],function(e,n){return t.apply(e,n)})}}function C(t,e,n){return c(t).L(e,n)}function A(t){return h(t,function(t){var e=0,n=p();return G(t,function(r,o,i){var s;v(o)&&"fulfilled"===(s=o.N()).state?t[i]=s.value:(++e,h(o,function(r){t[i]=r,0==--e&&n.resolve(t)},n.reject,function(t){n.notify({index:i,value:t})}))},void 0),0===e&&n.resolve(t),n.k})}function L(t){if(0===t.length)return c.resolve();var e=c.defer(),n=0;return G(t,function(r,o,i){function s(t){e.resolve(t)}function u(t){0===--n&&(t.message="Q can't get fulfillment value from any promise, all promises were rejected. Last error message: "+t.message,e.reject(t))}function a(t){e.notify({index:i,value:t})}var c=t[i];n++,h(c,s,u,a)},void 0),e.k}function V(t){return h(t,function(t){return t=W(t,c),h(A(W(t,function(t){return h(t,Q,Q)})),function(){return t})})}function H(t){return c(t).V()}function U(t,e){return c(t).then(void 0,void 0,e)}function j(t,e){return c(t).H(e)}var B=!1;try{throw new Error}catch(t){B=!!t.stack}var M,F,q=a(),Q=function(){},Y=function(){function t(){for(var t,r;n.next;)n=n.next,t=n.U,n.U=void 0,r=n.domain,r&&(n.domain=void 0,r.j()),e(t,r);for(;a.length;)t=a.pop(),e(t);o=!1}function e(e,n){try{e()}catch(e){if(s)throw n&&n.B(),setTimeout(t,0),n&&n.j(),e;setTimeout(function(){throw e},0)}n&&n.B()}var n={U:void 0,next:null},r=n,o=!1,i=void 0,s=!1,u=!1;try{u=navigator&&("Microsoft Internet Explorer"===navigator.appName||null!=navigator.appVersion.match(/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i))}catch(t){}var a=[];if(Y=function(t){"undefined"!=typeof Framework&&Framework.M()?Framework.setTimeout(t,0):(r=r.next={U:t,domain:s&&process.domain,next:null},o||(o=!0,i()))},"object"==typeof process&&process&&"[object process]"===process.toString()&&process._)s=!0,i=function(){process._(t)};else if("function"!=typeof setImmediate||u)if("undefined"==typeof MessageChannel||u)i=function(){setTimeout(t,0)};else{var c=new MessageChannel;c.port1.onmessage=function(){i=p,c.port1.onmessage=t,t()};var p=function(){c.port2.postMessage(0)};i=function(){setTimeout(t,0),p()}}else i="undefined"!=typeof window?setImmediate.bind(window,t):function(){setImmediate(t)};return Y.D=function(t){a.push(t),o||(o=!0,i())},Y}(),J=Function.call,X=t(Array.prototype.slice),G=t(Array.prototype.reduce||function(t,e){var n=0,r=this.length;if(1===arguments.length)for(;;){if(n in this){e=this[n++];break}if(++n>=r)throw new TypeError}for(;n<r;n++)n in this&&(e=t(e,this[n],n));return e}),K=t(Array.prototype.indexOf||function(t){for(var e=0;e<this.length;e++)if(this[e]===t)return e;return-1}),W=t(Array.prototype.map||function(t,e){var n=this,r=[];return G(n,function(o,i,s){r.push(t.call(e,i,s,n))},void 0),r}),z=Object.create||function(t){function e(){}return e.prototype=t,new e},$=t(Object.prototype.hasOwnProperty),Z=Object.keys||function(t){var e=[];for(var n in t)$(t,n)&&e.push(n);return e},tt=t(Object.prototype.toString);F="undefined"!=typeof ReturnValue?ReturnValue:function(t){this.value=t};var et="From previous event:";c.resolve=c,c._=Y,c.T=!1,"object"==typeof process&&process&&process.F&&process.F.q&&(c.T=!0),c.defer=p,p.prototype.Y=function(){var t=this;return function(e,n){e?t.reject(e):arguments.length>2?t.resolve(X(arguments,1)):t.resolve(n)}},c.Promise=f,c.k=f,f.race=l,f.all=A,f.reject=I,f.resolve=c,c.J=function(t){return t},d.prototype.J=function(){return this},c.join=function(t,e){return c(t).join(e)},d.prototype.join=function(t){return c([this,t]).A(function(t,e){if(t===e)return t;throw new Error("Q can't join: not the same: "+t+" "+e)})},c.race=l,d.prototype.race=function(){return this.then(c.race)},c.X=d,d.prototype.toString=function(){return"[object Promise]"},d.prototype.then=function(t,e,n){function o(e){try{return"function"==typeof t?t(e):e}catch(t){return I(t)}}function i(t){if("function"==typeof e){r(t,u);try{return e(t)}catch(t){return I(t)}}return I(t)}function s(t){return"function"==typeof n?n(t):t}var u=this,a=p(),f=!1;return c._(function(){u.I(function(t){f||(f=!0,a.resolve(o(t)))},"when",[function(t){f||(f=!0,a.resolve(i(t)))}])}),u.I(void 0,"when",[void 0,function(t){var e,n=!1;try{e=s(t)}catch(t){if(n=!0,!c.onerror)throw t;c.onerror(t)}n||a.notify(e)}]),a.k},c.G=function(t,e){return c(t).G(e)},d.prototype.G=function(t){return t=c(t),this.then(function(e){return t.W(e).K(e)})},c.when=h,d.prototype.K=function(t){return this.then(function(){return t})},c.K=function(t,e){return c(t).K(e)},d.prototype.$=function(t){return this.then(function(){throw t})},c.$=function(t,e){return c(t).$(e)},c.Z=y,c.tt=v,c.et=g,c.nt=E,d.prototype.nt=function(){return"pending"===this.N().state},c.rt=m,d.prototype.rt=function(){return"fulfilled"===this.N().state},c.ot=T,d.prototype.ot=function(){return"rejected"===this.N().state};var nt=[],rt=[],ot=[],it=!0;c.it=S,c.st=function(){return nt.slice()},c.ut=function(){S(),it=!1},S(),c.reject=I,c.R=w,c.at=k,c.A=R,d.prototype.A=function(t,e){return this.all().then(function(e){return t.apply(void 0,e)},e)},c.async=x,c.ct=O,c.pt=D,c.ft=P,c.L=C,d.prototype.L=function(t,e){var n=this,r=p();return c._(function(){n.I(r.resolve,t,e)}),r.k},c.get=function(t,e){return c(t).L("get",[e])},d.prototype.get=function(t){return this.L("get",[t])},c.set=function(t,e,n){return c(t).L("set",[e,n])},d.prototype.set=function(t,e){return this.L("set",[t,e])},c.lt=c.delete=function(t,e){return c(t).L("delete",[e])},d.prototype.lt=d.prototype.delete=function(t){return this.L("delete",[t])},c.dt=c.P=function(t,e,n){return c(t).L("post",[e,n])},d.prototype.dt=d.prototype.P=function(t,e){return this.L("post",[t,e])},c.send=c.ht=c.yt=function(t,e){return c(t).L("post",[e,X(arguments,2)])},d.prototype.send=d.prototype.ht=d.prototype.yt=function(t){return this.L("post",[t,X(arguments,1)])},c.vt=function(t,e){return c(t).L("apply",[void 0,e])},d.prototype.vt=function(t){return this.L("apply",[void 0,t])},c.gt=c.W=function(t){return c(t).L("apply",[void 0,X(arguments,1)])},d.prototype.W=function(){return this.L("apply",[void 0,X(arguments)])},c.Et=function(t){var e=c(t),n=X(arguments,1);return function(){return e.L("apply",[this,n.concat(X(arguments))])}},d.prototype.Et=function(){var t=this,e=X(arguments);return function(){return t.L("apply",[this,e.concat(X(arguments))])}},c.keys=function(t){return c(t).L("keys",[])},d.prototype.keys=function(){return this.L("keys",[])},c.all=A,d.prototype.all=function(){return A(this)},c.Tt=L,d.prototype.Tt=function(){return L(this)},c.St=function(t,e,n){return function(){return"undefined"!=typeof console&&"function"==typeof console.warn&&console.warn(e+" is deprecated, use "+n+" instead.",new Error("").stack),t.apply(t,arguments)}}(V,"allResolved","allSettled"),d.prototype.St=function(){return V(this)},c.V=H,d.prototype.V=function(){return this.then(function(t){return A(W(t,function(t){function e(){return t.N()}return t=c(t),t.then(e,e)}))})},c.fail=c.catch=function(t,e){return c(t).then(void 0,e)},d.prototype.fail=d.prototype.catch=function(t){return this.then(void 0,t)},c.progress=U,d.prototype.progress=function(t){return this.then(void 0,void 0,t)},c._t=c.finally=function(t,e){return c(t).finally(e)},d.prototype._t=d.prototype.finally=function(t){if(!t||"function"!=typeof t.apply)throw new Error("Q can't apply finally callback");return t=c(t),this.then(function(e){return t.W().then(function(){return e})},function(e){return t.W().then(function(){throw e})})},c.done=function(t,e,n,r){return c(t).done(e,n,r)},d.prototype.done=function(t,e,n){var o=function(t){c._(function(){if(r(t,i),!c.onerror)throw t;c.onerror(t)})},i=t||e||n?this.then(t,e,n):this;"object"==typeof process&&process&&process.domain&&(o=process.domain.bind(o)),i.then(void 0,o)},c.timeout=function(t,e,n){return c(t).timeout(e,n)},d.prototype.timeout=function(t,e){var n=p(),r=setTimeout(function(){e&&"string"!=typeof e||(e=new Error(e||"Timed out after "+t+" ms"),e.code="ETIMEDOUT"),n.reject(e)},t);return this.then(function(t){clearTimeout(r),n.resolve(t)},function(t){clearTimeout(r),n.reject(t)},n.notify),n.k},c.delay=function(t,e){return void 0===e&&(e=t,t=void 0),c(t).delay(e)},d.prototype.delay=function(t){return this.then(function(e){var n=p();return setTimeout(function(){n.resolve(e)},t),n.k})},c.bt=function(t,e){return c(t).bt(e)},d.prototype.bt=function(t){var e=p(),n=X(t);return n.push(e.Y()),this.vt(n).fail(e.reject),e.k},c.It=function(t){var e=X(arguments,1);return c(t).bt(e)},d.prototype.It=function(){var t=X(arguments),e=p();return t.push(e.Y()),this.vt(t).fail(e.reject),e.k},c.wt=c.Nt=function(t){if(void 0===t)throw new Error("Q can't wrap an undefined function");var e=X(arguments,1);return function(){var n=e.concat(X(arguments)),r=p();return n.push(r.Y()),c(t).vt(n).fail(r.reject),r.k}},d.prototype.wt=d.prototype.Nt=function(){var t=X(arguments);return t.unshift(this),c.Nt.apply(void 0,t)},c.kt=function(t,e){var n=X(arguments,2);return function(){function r(){return t.apply(e,arguments)}var o=n.concat(X(arguments)),i=p();return o.push(i.Y()),c(r).vt(o).fail(i.reject),i.k}},d.prototype.kt=function(){var t=X(arguments,0);return t.unshift(this),c.kt.apply(void 0,t)},c.Rt=c.xt=function(t,e,n){return c(t).xt(e,n)},d.prototype.Rt=d.prototype.xt=function(t,e){var n=X(e||[]),r=p();return n.push(r.Y()),this.L("post",[t,n]).fail(r.reject),r.k},c.Ot=c.Dt=c.Pt=function(t,e){var n=X(arguments,2),r=p();return n.push(r.Y()),c(t).L("post",[e,n]).fail(r.reject),r.k},d.prototype.Ot=d.prototype.Dt=d.prototype.Pt=function(t){var e=X(arguments,1),n=p();return e.push(n.Y()),this.L("post",[t,e]).fail(n.reject),n.k},c.H=j,d.prototype.H=function(t){if(!t)return this;this.then(function(e){c._(function(){t(null,e)})},function(e){c._(function(){t(e)})})},c.Ct=function(){throw new Error("Q.noConflict only works when Q is used as a global")};var st=a();return c})},function(t,e,n){"use strict";var r=this&&this.At||function(t,e){function n(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},o=n(0),i=n(2),s=n(3),u=i.Vt.Lt;-1==u&&(u=3e4);var a=function(t){function e(e,n){var r=t.call(this,n)||this;return r.pluginName="bitmovin",r.Ht=[],r.Ut=void 0,r.player=e,r.player.originalSetup=r.player.setup,r.player.jt=r.player.load,r.player.load=function(t,e,n){return r.player.closeHiveSession(),r.player.jt(t,e,n)},r.player.closeHiveSession=function(t){void 0===t&&(t=!0),r.closeHiveSession(),t&&r.Bt()},r.player.setup=function(t,e){r.closeHiveSession(),t.source.hls_ticket&&t.source.dash_ticket&&(r.logger().warn("The Hive plugin does not support providing a ticket for both DASH and HLS simultaneously. Using HLS source."),delete t.source.dash_ticket);var n=t.source.hls_ticket?"hls":t.source.dash_ticket?"dash":"",i=t.source.hls_ticket||t.source.dash_ticket;return i?(delete t.source[n+"_ticket"],r.resolveTicketPromise(i).timeout(u,r.loggerId+"Hive Plugin initialization timeout").then(function(o){return r.Mt(),o.tech.getName()===HiveComm.TechName.HiveJS&&(t.network={sendHttpRequest:r.sendHttpRequest(o.id)}),t.source[n]=o.manifest,r.player.originalSetup(t,e)}).catch(function(t){return r.onSetupTimeout(),r.resetSession(),r.logger().debug(r.loggerId+"error occurred resolving the ticket - "+(t.stack||t.message||t)),o.reject(t)})):(r.logger().debug(r.loggerId+"No Hive ticket provided, falling back to originalSetup"),r.player.originalSetup(t,e))},r.logger().notice(r.loggerId+"registered plugin [name:"+r.getPluginName()+"][id: "+r.getPluginId()+"][version: "+r.getPluginVersion()+"]"),r}return r(e,t),e.prototype.sendHttpRequest=function(t){var e=this;return function(n,r){return e.logger().debug("sendHttpRequest called",n,r),e.getPotentialSession()&&n.match(/manifest\/dash|manifest\/hls|audio|video/)?(e.logger().debug("Using HiveRequest",n,r),new s.Ft(r,t)):null}},e.prototype.registerEvent=function(t,e){this.player.addEventHandler(t,e),this.Ht.push({qt:t,Qt:e})},e.prototype.Bt=function(){var t=this;this.logger().debug(this.loggerId+"Unregistering events"),this.Ht.forEach(function(e){var n=e.qt,r=e.Qt;t.player.removeEventHandler(n,r)}),this.Ht.length=0},e.prototype.Mt=function(){var t=this;this.Ht.length||(this.registerEvent("onReady",function(){if(t.logger().debug("bitmovin.player.EVENT.ON_READY"),t.onActivateSession()){!!t.player.getConfig().playback&&t.player.getConfig().playback.auto&&t.onStartBuffering(!1),t.getActiveSession()&&(t.Yt=new HiveComm.HivePlayerExtendedStats)}}),this.registerEvent("onPlay",function(){t.logger().debug("bitmovin.player.EVENT.ON_PLAY"),t.Jt(0)}),this.registerEvent("onError",function(e){t.logger().debug("bitmovin.player.EVENT.ON_ERROR");var n=-1,r=null;if(null!=e)try{n=e.code,r=JSON.stringify(e,null)}catch(t){r=e}t.onError(n,r),t.Bt()}),this.registerEvent("onPlaybackFinished",function(){t.logger().debug("bitmovin.player.EVENT.ON_PLAYBACK_FINISHED"),t.onEventFeedback(4,{code:1})}),this.registerEvent("onSeek",function(){t.logger().debug("bitmovin.player.EVENT.ON_SEEK"),t.onEventFeedback(3)}),this.registerEvent("onFullscreenEnter",function(){t.logger().debug("bitmovin.player.EVENT.ON_FULLSCREEN_ENTER"),t.onEventFeedback(7,{value:!0})}),this.registerEvent("onFullscreenExit",function(){t.logger().debug("bitmovin.player.EVENT.ON_FULLSCREEN_EXIT"),t.onEventFeedback(7,{value:!1})}),this.registerEvent("onSegmentRequestFinished",function(e){if(t.Yt){var n=e.mimeType.indexOf("video")>=0;if(void 0===t.Xt){var r=t.player.getPlaybackVideoData();r&&r.bitrate&&t.Gt(r.bitrate)}if(e.success){if(!e.isInit&&t.Xt){var o=8*e.size/e.downloadTime;t.Yt.accountCompleted(n,t.Xt,e.size),t.Yt.updateBandwidth(o)}}else t.Yt.accountFailed(n,t.Xt)}}),this.registerEvent("onDestroy",function(){t.logger().debug("bitmovin.player.EVENT.ON_DESTROY"),t.player.closeHiveSession(!1)}),0===this.getPlayerVersion().indexOf("7")?this.Kt():0===this.getPlayerVersion().indexOf("6")&&this.Wt())},e.prototype.Wt=function(){var t=this;this.registerEvent("onStartBuffering",function(){t.logger().debug("bitmovin.player.EVENT.ON_START_BUFFERING"),t.onStartBuffering()}),this.registerEvent("onStopBuffering",function(){t.logger().debug("bitmovin.player.EVENT.ON_STOP_BUFFERING"),t.onEndBuffering()}),this.registerEvent("onPause",function(){t.logger().debug("bitmovin.player.EVENT.ON_PAUSE"),t.Jt(2)}),this.registerEvent("onVideoDownloadQualityChange",function(e){t.getStreamProtocol()===StreamProtocol.zt?t.Gt(e.targetQuality):t.Gt(e.targetQuality.split("br")[1])})},e.prototype.Kt=function(){var t=this;this.registerEvent("onStallStarted",function(){t.logger().debug("bitmovin.player.EVENT.ON_STALL_STARTED"),t.onStartBuffering()}),this.registerEvent("onStallEnded",function(){t.logger().debug("bitmovin.player.EVENT.ON_STALL_ENDED"),t.onEndBuffering()}),this.registerEvent("onPaused",function(){t.logger().debug("bitmovin.player.EVENT.ON_PAUSED"),t.Jt(2)}),this.registerEvent("onVideoDownloadQualityChanged",function(e){t.Gt(e.targetQuality&&e.targetQuality.bitrate||e.targetQualityId&&e.targetQualityId.bitrate)})},e.prototype.Gt=function(t){this.logger().debug("newBitrate",t),this.Xt&&t>this.Xt&&this.Yt?this.Yt.bitrateSwitchUp():this.Xt&&this.Xt>t&&this.Yt&&this.Yt.bitrateSwitchDown(),this.Xt=t},e.prototype.Jt=function(t){void 0!=this.Ut&&this.Ut===t||(this.onEventFeedback(t),this.Ut=t)},e.prototype.getPlayerSource=function(){var t=this.getStreamProtocol();return t===StreamProtocol.zt?this.player.getConfig().source.hls:t===StreamProtocol.DASH?this.player.getConfig().source.dash:void 0},e.prototype.getCurrentTime=function(){return null!=this.player?Math.round(1e3*this.player.getCurrentTime()):0},e.prototype.getBufferLen=function(){return null!=this.player&&null!=this.player.getVideoBufferLength&&this.player.getVideoBufferLength()>0?Math.max(0,Math.round(1e3*this.player.getVideoBufferLength())):0},e.prototype.getWindowSize=function(){if(this.player){var t=this.player.getFigure();return{width:t.offsetWidth,height:t.offsetHeight}}},e.prototype.isFullscreen=function(){return this.player.isFullscreen()},e.prototype.isLive=function(){return this.player.isLive()},e.prototype.isActive=function(){return!0},e.prototype.getStreamProtocol=function(){if(this.player){var t=this.player.getStreamType();if("hls"===t)return StreamProtocol.zt;if("dash"===t)return StreamProtocol.DASH}return null},e.prototype.getExtendedStats=function(){var t=this.Yt;return this.Yt=new HiveComm.HivePlayerExtendedStats,t},e.prototype.getPluginName=function(){return this.pluginName},e.prototype.getPluginVersion=function(){return this.getCommVersion()},e.prototype.getPlayerTech=function(){if(this.player)return this.player.getPlayerType()},e.prototype.getPlayerVersion=function(){return void 0!==bitmovin.player.version?bitmovin.player.version:this.player.getVersion()},e}(HiveComm.Plugin);e.$t=a;var c=function(t,e){new a(t,e)};bitmovin.initHiveSDN=c},function(t,e,n){"use strict";var r=function(){function t(){}return t}();r.Zt="undefined"!=typeof HIVE_COMM_JS&&HIVE_COMM_JS,r.te="undefined"!=typeof HIVE_COMM_JAVA&&HIVE_COMM_JAVA,r.ee="undefined"!=typeof HIVE_COMM_JS_PROXY&&HIVE_COMM_JS_PROXY,r.ne="4.1.0",r.re="bitmovin",r.oe="undefined"!=typeof HIVE_SERVICE_ENDPOINT_TEST&&HIVE_SERVICE_ENDPOINT_TEST,r.ie="undefined"==typeof HIVE_PERSISTENT_IDENTITY||HIVE_PERSISTENT_IDENTITY,r.se="undefined"!=typeof INCLUDE_VOD_CACHE&&INCLUDE_VOD_CACHE,r.ue="undefined"!=typeof INCLUDE_UDP_BROADCAST&&INCLUDE_UDP_BROADCAST,r.ae="undefined"!=typeof INCLUDE_UDP_LEADER_ELECTION&&INCLUDE_UDP_LEADER_ELECTION,r.ce="undefined"!=typeof LEADER_SCORE_EQUALITY&&LEADER_SCORE_EQUALITY,r.pe="undefined"!=typeof INCLUDE_DEFAULT_NETWORK&&INCLUDE_DEFAULT_NETWORK,r.fe="undefined"!=typeof HIVE_RESTRICTED_CONNINFO&&HIVE_RESTRICTED_CONNINFO,r.le="undefined"!=typeof HIVE_DISCOVERY?HIVE_DISCOVERY:"ws://127.0.0.1:8000/hive",r.de="undefined"!=typeof P2PDispatcherDetailedLog&&P2PDispatcherDetailedLog,r.he="undefined"!=typeof NetworkManagerDetailedLog&&NetworkManagerDetailedLog,r.ye="undefined"!=typeof ATATUS_KEY?ATATUS_KEY:"592835a6b4204dd197c00488610003e0",r.ve="undefined"!=typeof ATATUS_VERSION?ATATUS_VERSION:"0.8",r.ge="undefined"==typeof ATATUS_DEFAULT_ENABLED||ATATUS_DEFAULT_ENABLED,r.Ee=5,r.Lt="undefined"!=typeof HIVE_PLUGIN_TIMEOUT?HIVE_PLUGIN_TIMEOUT:-1,r.me="undefined"==typeof HIVE_DETECT_PRIVATEIP||HIVE_DETECT_PRIVATEIP,r.Te="undefined"==typeof HIVE_STORE_IP_DB||HIVE_STORE_IP_DB,e.Vt=r},function(t,e,n){"use strict";var r=n(4),o=n(0),i=function(){function t(t,e){this.sessionId=e,this.request=t}return t.prototype.getResponse=function(){var t=this,e=o.defer();return this.Se=new r._e({xhrSetup:function(e,n){e=new HiveComm.HiveRequestFactory(t.sessionId),e.open(t.request.method,n.url,!0);for(var r=0,o=t.request.headers;r<o.length;r++){var i=o[r];e.setRequestHeader(i.name,i.value)}return e.responseType=t.request.responseType,e}}),this.Se.load(this.request,{},{onSuccess:function(n,r,o){console.log("SUCCESS REQUEST",n,r,o),e.resolve({request:t.request,url:t.request.url,headers:t.request.headers,status:n.status,length:n.data.length||n.data.byteLength,statusText:"OK",body:n.data})},onError:function(t,n){var r=t.code;t.text;e.reject(r)},onTimeout:function(t,n){e.reject("timeout")}}),e.k},t.prototype.setProgressListener=function(t){},t.prototype.cancel=function(){this.Se&&this.Se.abort()},t}();e.Ft=i},function(t,e,n){"use strict";var r=function(){function t(t){this.loggerId="[HiveXhrLoader]",this.be=t,t&&t.xhrSetup&&(this.xhrSetup=t.xhrSetup)}return t.prototype.destroy=function(){this.abort(),this.loader=null,this.xhr=null},t.prototype.abort=function(){var t=this.loader||this.xhr;t&&4!==t.readyState&&(this.stats.Ie=!0,t.abort()),window.clearTimeout(this.requestTimeout),this.requestTimeout=null,window.clearTimeout(this.retryTimeout),this.retryTimeout=null},t.prototype.load=function(t,e,n){this.context=t,this.config=e,this.callbacks=n,this.stats={trequest:performance.now(),retry:0},this.retryDelay=e.retryDelay,this.we()},t.prototype.we=function(){this.xhr=null;var t=this.context,e=this.stats;e.tfirst=0,e.loaded=0,this.xhrSetup?this.xhr=this.xhrSetup(this.xhr,t):HiveComm.logError("Hive XHR setup missing",this.loggerId),this.xhr.onreadystatechange=this.readystatechange.bind(this),this.xhr.onprogress=this.loadprogress.bind(this),this.config.timeout&&(this.requestTimeout=window.setTimeout(this.loadtimeout.bind(this),this.config.timeout)),this.xhr.send()},t.prototype.readystatechange=function(t){var e=t.currentTarget,n=e.readyState,r=this.stats,o=this.context,i=this.config;if(!r.Ie&&n>=2)if(window.clearTimeout(this.requestTimeout),0===r.tfirst&&(r.tfirst=Math.max(performance.now(),r.trequest)),4===n){var s=e.status;if(s>=200&&s<300){r.tload=Math.max(r.tfirst,performance.now());var u=void 0,a=void 0;"arraybuffer"===o.responseType?(u=e.response,a=u.byteLength):(u=e.responseText,a=u.length),r.loaded=r.total=a;var c={url:e.responseURL,data:u};this.callbacks.onSuccess(c,r,o)}else r.retry>=i.Ne||s>=400&&s<499?(console.warn(s+" while loading "+o.url),this.callbacks.onError({code:s,text:e.statusText},o)):(console.warn(s+" while loading "+o.url+", retrying in "+this.retryDelay+"..."),this.destroy(),this.retryTimeout=window.setTimeout(this.we.bind(this),this.retryDelay),this.retryDelay=Math.min(2*this.retryDelay,i.ke),r.retry++)}else i.timeout&&(this.requestTimeout=window.setTimeout(this.loadtimeout.bind(this),i.timeout))},t.prototype.loadtimeout=function(){console.warn("timeout while loading "+this.context.url),this.callbacks.onTimeout(this.stats,this.context)},t.prototype.loadprogress=function(t){var e=this.stats;e.loaded=t.loaded,t.lengthComputable&&(e.total=t.total);var n=this.callbacks.onProgress;n&&n(e,this.context,null)},t}();e._e=r}]);
//# sourceMappingURL=bitmovin.comm.hive1532444576721.js.map

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,