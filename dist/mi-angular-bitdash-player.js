/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 66);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var arrayutils_1 = __webpack_require__(11);
/**
 * A container component that can contain a collection of child components.
 * Components can be added at construction time through the {@link ContainerConfig#components} setting, or later
 * through the {@link Container#addComponent} method. The UIManager automatically takes care of all components, i.e. it
 * initializes and configures them automatically.
 *
 * In the DOM, the container consists of an outer <div> (that can be configured by the config) and an inner wrapper
 * <div> that contains the components. This double-<div>-structure is often required to achieve many advanced effects
 * in CSS and/or JS, e.g. animations and certain formatting with absolute positioning.
 *
 * DOM example:
 * <code>
 *     <div class='ui-container'>
 *         <div class='container-wrapper'>
 *             ... child components ...
 *         </div>
 *     </div>
 * </code>
 */
var Container = (function (_super) {
    __extends(Container, _super);
    function Container(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-container',
            components: [],
        }, _this.config);
        _this.componentsToAdd = [];
        _this.componentsToRemove = [];
        return _this;
    }
    /**
     * Adds a child component to the container.
     * @param component the component to add
     */
    Container.prototype.addComponent = function (component) {
        this.config.components.push(component);
        this.componentsToAdd.push(component);
    };
    /**
     * Removes a child component from the container.
     * @param component the component to remove
     * @returns {boolean} true if the component has been removed, false if it is not contained in this container
     */
    Container.prototype.removeComponent = function (component) {
        if (arrayutils_1.ArrayUtils.remove(this.config.components, component) != null) {
            this.componentsToRemove.push(component);
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * Gets an array of all child components in this container.
     * @returns {Component<ComponentConfig>[]}
     */
    Container.prototype.getComponents = function () {
        return this.config.components;
    };
    /**
     * Removes all child components from the container.
     */
    Container.prototype.removeComponents = function () {
        for (var _i = 0, _a = this.getComponents().slice(); _i < _a.length; _i++) {
            var component = _a[_i];
            this.removeComponent(component);
        }
    };
    /**
     * Updates the DOM of the container with the current components.
     */
    Container.prototype.updateComponents = function () {
        /* We cannot just clear the container to remove all elements and then re-add those that should stay, because
         * IE looses the innerHTML of unattached elements, leading to empty elements within the container (e.g. missing
         * subtitle text in SubtitleLabel).
         * Instead, we keep a list of elements to add and remove, leaving remaining elements alone. By keeping them in
         * the DOM, their content gets preserved in all browsers.
         */
        var component;
        while (component = this.componentsToRemove.shift()) {
            component.getDomElement().remove();
        }
        while (component = this.componentsToAdd.shift()) {
            this.innerContainerElement.append(component.getDomElement());
        }
    };
    Container.prototype.toDomElement = function () {
        // Create the container element (the outer <div>)
        var containerElement = new dom_1.DOM(this.config.tag, {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        // Create the inner container element (the inner <div>) that will contain the components
        var innerContainer = new dom_1.DOM(this.config.tag, {
            'class': this.prefixCss('container-wrapper'),
        });
        this.innerContainerElement = innerContainer;
        for (var _i = 0, _a = this.config.components; _i < _a.length; _i++) {
            var initialComponent = _a[_i];
            this.componentsToAdd.push(initialComponent);
        }
        this.updateComponents();
        containerElement.append(innerContainer);
        return containerElement;
    };
    return Container;
}(component_1.Component));
exports.Container = Container;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Simple DOM manipulation and DOM element event handling modeled after jQuery (as replacement for jQuery).
 *
 * Like jQuery, DOM operates on single elements and lists of elements. For example: creating an element returns a DOM
 * instance with a single element, selecting elements returns a DOM instance with zero, one, or many elements. Similar
 * to jQuery, setters usually affect all elements, while getters operate on only the first element.
 * Also similar to jQuery, most methods (except getters) return the DOM instance facilitating easy chaining of method
 * calls.
 *
 * Built with the help of: http://youmightnotneedjquery.com/
 */
var DOM = (function () {
    function DOM(something, attributes) {
        this.document = document; // Set the global document to the local document field
        if (something instanceof Array) {
            if (something.length > 0 && something[0] instanceof HTMLElement) {
                var elements = something;
                this.elements = elements;
            }
        }
        else if (something instanceof HTMLElement) {
            var element = something;
            this.elements = [element];
        }
        else if (something instanceof Document) {
            // When a document is passed in, we do not do anything with it, but by setting this.elements to null
            // we give the event handling method a means to detect if the events should be registered on the document
            // instead of elements.
            this.elements = null;
        }
        else if (attributes) {
            var tagName = something;
            var element = document.createElement(tagName);
            for (var attributeName in attributes) {
                var attributeValue = attributes[attributeName];
                element.setAttribute(attributeName, attributeValue);
            }
            this.elements = [element];
        }
        else {
            var selector = something;
            this.elements = this.findChildElements(selector);
        }
    }
    Object.defineProperty(DOM.prototype, "length", {
        /**
         * Gets the number of elements that this DOM instance currently holds.
         * @returns {number} the number of elements
         */
        get: function () {
            return this.elements ? this.elements.length : 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the HTML elements that this DOM instance currently holds.
     * @returns {HTMLElement[]} the raw HTML elements
     * @deprecated use {@link #get()} instead
     */
    DOM.prototype.getElements = function () {
        return this.get();
    };
    DOM.prototype.get = function (index) {
        if (index === undefined) {
            return this.elements;
        }
        else if (!this.elements || index >= this.elements.length || index < -this.elements.length) {
            return undefined;
        }
        else if (index < 0) {
            return this.elements[this.elements.length - index];
        }
        else {
            return this.elements[index];
        }
    };
    /**
     * A shortcut method for iterating all elements. Shorts this.elements.forEach(...) to this.forEach(...).
     * @param handler the handler to execute an operation on an element
     */
    DOM.prototype.forEach = function (handler) {
        if (!this.elements) {
            return;
        }
        this.elements.forEach(function (element) {
            handler(element);
        });
    };
    DOM.prototype.findChildElementsOfElement = function (element, selector) {
        var childElements = element.querySelectorAll(selector);
        // Convert NodeList to Array
        // https://toddmotto.com/a-comprehensive-dive-into-nodelists-arrays-converting-nodelists-and-understanding-the-dom/
        return [].slice.call(childElements);
    };
    DOM.prototype.findChildElements = function (selector) {
        var _this = this;
        var allChildElements = [];
        if (this.elements) {
            this.forEach(function (element) {
                allChildElements = allChildElements.concat(_this.findChildElementsOfElement(element, selector));
            });
        }
        else {
            return this.findChildElementsOfElement(document, selector);
        }
        return allChildElements;
    };
    /**
     * Finds all child elements of all elements matching the supplied selector.
     * @param selector the selector to match with child elements
     * @returns {DOM} a new DOM instance representing all matched children
     */
    DOM.prototype.find = function (selector) {
        var allChildElements = this.findChildElements(selector);
        return new DOM(allChildElements);
    };
    DOM.prototype.html = function (content) {
        if (arguments.length > 0) {
            return this.setHtml(content);
        }
        else {
            return this.getHtml();
        }
    };
    DOM.prototype.getHtml = function () {
        return this.elements[0].innerHTML;
    };
    DOM.prototype.setHtml = function (content) {
        if (content === undefined || content == null) {
            // Set to empty string to avoid innerHTML getting set to 'undefined' (all browsers) or 'null' (IE9)
            content = '';
        }
        this.forEach(function (element) {
            element.innerHTML = content;
        });
        return this;
    };
    /**
     * Clears the inner HTML of all elements (deletes all children).
     * @returns {DOM}
     */
    DOM.prototype.empty = function () {
        this.forEach(function (element) {
            element.innerHTML = '';
        });
        return this;
    };
    /**
     * Returns the current value of the first form element, e.g. the selected value of a select box or the text if an
     * input field.
     * @returns {string} the value of a form element
     */
    DOM.prototype.val = function () {
        var element = this.elements[0];
        if (element instanceof HTMLSelectElement || element instanceof HTMLInputElement) {
            return element.value;
        }
        else {
            // TODO add support for missing form elements
            throw new Error("val() not supported for " + typeof element);
        }
    };
    DOM.prototype.attr = function (attribute, value) {
        if (arguments.length > 1) {
            return this.setAttr(attribute, value);
        }
        else {
            return this.getAttr(attribute);
        }
    };
    DOM.prototype.getAttr = function (attribute) {
        return this.elements[0].getAttribute(attribute);
    };
    DOM.prototype.setAttr = function (attribute, value) {
        this.forEach(function (element) {
            element.setAttribute(attribute, value);
        });
        return this;
    };
    DOM.prototype.data = function (dataAttribute, value) {
        if (arguments.length > 1) {
            return this.setData(dataAttribute, value);
        }
        else {
            return this.getData(dataAttribute);
        }
    };
    DOM.prototype.getData = function (dataAttribute) {
        return this.elements[0].getAttribute('data-' + dataAttribute);
    };
    DOM.prototype.setData = function (dataAttribute, value) {
        this.forEach(function (element) {
            element.setAttribute('data-' + dataAttribute, value);
        });
        return this;
    };
    /**
     * Appends one or more DOM elements as children to all elements.
     * @param childElements the chrild elements to append
     * @returns {DOM}
     */
    DOM.prototype.append = function () {
        var childElements = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            childElements[_i] = arguments[_i];
        }
        this.forEach(function (element) {
            childElements.forEach(function (childElement) {
                childElement.elements.forEach(function (_, index) {
                    element.appendChild(childElement.elements[index]);
                });
            });
        });
        return this;
    };
    /**
     * Removes all elements from the DOM.
     */
    DOM.prototype.remove = function () {
        this.forEach(function (element) {
            var parent = element.parentNode;
            if (parent) {
                parent.removeChild(element);
            }
        });
    };
    /**
     * Returns the offset of the first element from the document's top left corner.
     * @returns {Offset}
     */
    DOM.prototype.offset = function () {
        var element = this.elements[0];
        var elementRect = element.getBoundingClientRect();
        var htmlRect = document.body.parentElement.getBoundingClientRect();
        // Virtual viewport scroll handling (e.g. pinch zoomed viewports in mobile browsers or desktop Chrome/Edge)
        // 'normal' zooms and virtual viewport zooms (aka layout viewport) result in different
        // element.getBoundingClientRect() results:
        //  - with normal scrolls, the clientRect decreases with an increase in scroll(Top|Left)/page(X|Y)Offset
        //  - with pinch zoom scrolls, the clientRect stays the same while scroll/pageOffset changes
        // This means, that the combination of clientRect + scroll/pageOffset does not work to calculate the offset
        // from the document's upper left origin when pinch zoom is used.
        // To work around this issue, we do not use scroll/pageOffset but get the clientRect of the html element and
        // subtract it from the element's rect, which always results in the offset from the document origin.
        // NOTE: the current way of offset calculation was implemented specifically to track event positions on the
        // seek bar, and it might break compatibility with jQuery's offset() method. If this ever turns out to be a
        // problem, this method should be reverted to the old version and the offset calculation moved to the seek bar.
        return {
            top: elementRect.top - htmlRect.top,
            left: elementRect.left - htmlRect.left,
        };
    };
    /**
     * Returns the width of the first element.
     * @returns {number} the width of the first element
     */
    DOM.prototype.width = function () {
        // TODO check if this is the same as jQuery's width() (probably not)
        return this.elements[0].offsetWidth;
    };
    /**
     * Returns the height of the first element.
     * @returns {number} the height of the first element
     */
    DOM.prototype.height = function () {
        // TODO check if this is the same as jQuery's height() (probably not)
        return this.elements[0].offsetHeight;
    };
    /**
     * Attaches an event handler to one or more events on all elements.
     * @param eventName the event name (or multiple names separated by space) to listen to
     * @param eventHandler the event handler to call when the event fires
     * @returns {DOM}
     */
    DOM.prototype.on = function (eventName, eventHandler) {
        var _this = this;
        var events = eventName.split(' ');
        events.forEach(function (event) {
            if (_this.elements == null) {
                _this.document.addEventListener(event, eventHandler);
            }
            else {
                _this.forEach(function (element) {
                    element.addEventListener(event, eventHandler);
                });
            }
        });
        return this;
    };
    /**
     * Removes an event handler from one or more events on all elements.
     * @param eventName the event name (or multiple names separated by space) to remove the handler from
     * @param eventHandler the event handler to remove
     * @returns {DOM}
     */
    DOM.prototype.off = function (eventName, eventHandler) {
        var _this = this;
        var events = eventName.split(' ');
        events.forEach(function (event) {
            if (_this.elements == null) {
                _this.document.removeEventListener(event, eventHandler);
            }
            else {
                _this.forEach(function (element) {
                    element.removeEventListener(event, eventHandler);
                });
            }
        });
        return this;
    };
    /**
     * Adds the specified class(es) to all elements.
     * @param className the class(es) to add, multiple classes separated by space
     * @returns {DOM}
     */
    DOM.prototype.addClass = function (className) {
        this.forEach(function (element) {
            if (element.classList) {
                var classNames = className.split(' ')
                    .filter(function (className) { return className.length > 0; });
                if (classNames.length > 0) {
                    (_a = element.classList).add.apply(_a, classNames);
                }
            }
            else {
                element.className += ' ' + className;
            }
            var _a;
        });
        return this;
    };
    /**
     * Removed the specified class(es) from all elements.
     * @param className the class(es) to remove, multiple classes separated by space
     * @returns {DOM}
     */
    DOM.prototype.removeClass = function (className) {
        this.forEach(function (element) {
            if (element.classList) {
                var classNames = className.split(' ')
                    .filter(function (className) { return className.length > 0; });
                if (classNames.length > 0) {
                    (_a = element.classList).remove.apply(_a, classNames);
                }
            }
            else {
                element.className = element.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
            }
            var _a;
        });
        return this;
    };
    /**
     * Checks if any of the elements has the specified class.
     * @param className the class name to check
     * @returns {boolean} true if one of the elements has the class attached, else if no element has it attached
     */
    DOM.prototype.hasClass = function (className) {
        var hasClass = false;
        this.forEach(function (element) {
            if (element.classList) {
                if (element.classList.contains(className)) {
                    // Since we are inside a handler, we can't just 'return true'. Instead, we save it to a variable
                    // and return it at the end of the function body.
                    hasClass = true;
                }
            }
            else {
                if (new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className)) {
                    // See comment above
                    hasClass = true;
                }
            }
        });
        return hasClass;
    };
    DOM.prototype.css = function (propertyNameOrCollection, value) {
        if (typeof propertyNameOrCollection === 'string') {
            var propertyName = propertyNameOrCollection;
            if (arguments.length === 2) {
                return this.setCss(propertyName, value);
            }
            else {
                return this.getCss(propertyName);
            }
        }
        else {
            var propertyValueCollection = propertyNameOrCollection;
            return this.setCssCollection(propertyValueCollection);
        }
    };
    DOM.prototype.getCss = function (propertyName) {
        return getComputedStyle(this.elements[0])[propertyName];
    };
    DOM.prototype.setCss = function (propertyName, value) {
        this.forEach(function (element) {
            // <any> cast to resolve TS7015: http://stackoverflow.com/a/36627114/370252
            element.style[propertyName] = value;
        });
        return this;
    };
    DOM.prototype.setCssCollection = function (ruleValueCollection) {
        this.forEach(function (element) {
            // http://stackoverflow.com/a/34490573/370252
            Object.assign(element.style, ruleValueCollection);
        });
        return this;
    };
    return DOM;
}());
exports.DOM = DOM;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var guid_1 = __webpack_require__(72);
var dom_1 = __webpack_require__(1);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * The base class of the UI framework.
 * Each component must extend this class and optionally the config interface.
 */
var Component = (function () {
    /**
     * Constructs a component with an optionally supplied config. All subclasses must call the constructor of their
     * superclass and then merge their configuration into the component's configuration.
     * @param config the configuration for the component
     */
    function Component(config) {
        if (config === void 0) { config = {}; }
        /**
         * The list of events that this component offers. These events should always be private and only directly
         * accessed from within the implementing component.
         *
         * Because TypeScript does not support private properties with the same name on different class hierarchy levels
         * (i.e. superclass and subclass cannot contain a private property with the same name), the default naming
         * convention for the event list of a component that should be followed by subclasses is the concatenation of the
         * camel-cased class name + 'Events' (e.g. SubClass extends Component => subClassEvents).
         * See {@link #componentEvents} for an example.
         *
         * Event properties should be named in camel case with an 'on' prefix and in the present tense. Async events may
         * have a start event (when the operation starts) in the present tense, and must have an end event (when the
         * operation ends) in the past tense (or present tense in special cases (e.g. onStart/onStarted or onPlay/onPlaying).
         * See {@link #componentEvents#onShow} for an example.
         *
         * Each event should be accompanied with a protected method named by the convention eventName + 'Event'
         * (e.g. onStartEvent), that actually triggers the event by calling {@link EventDispatcher#dispatch dispatch} and
         * passing a reference to the component as first parameter. Components should always trigger their events with these
         * methods. Implementing this pattern gives subclasses means to directly listen to the events by overriding the
         * method (and saving the overhead of passing a handler to the event dispatcher) and more importantly to trigger
         * these events without having access to the private event list.
         * See {@link #onShow} for an example.
         *
         * To provide external code the possibility to listen to this component's events (subscribe, unsubscribe, etc.),
         * each event should also be accompanied by a public getter function with the same name as the event's property,
         * that returns the {@link Event} obtained from the event dispatcher by calling {@link EventDispatcher#getEvent}.
         * See {@link #onShow} for an example.
         *
         * Full example for an event representing an example action in a example component:
         *
         * <code>
         * // Define an example component class with an example event
         * class ExampleComponent extends Component<ComponentConfig> {
           *
           *     private exampleComponentEvents = {
           *         onExampleAction: new EventDispatcher<ExampleComponent, NoArgs>()
           *     }
           *
           *     // constructor and other stuff...
           *
           *     protected onExampleActionEvent() {
           *        this.exampleComponentEvents.onExampleAction.dispatch(this);
           *    }
           *
           *    get onExampleAction(): Event<ExampleComponent, NoArgs> {
           *        return this.exampleComponentEvents.onExampleAction.getEvent();
           *    }
           * }
         *
         * // Create an instance of the component somewhere
         * var exampleComponentInstance = new ExampleComponent();
         *
         * // Subscribe to the example event on the component
         * exampleComponentInstance.onExampleAction.subscribe(function (sender: ExampleComponent) {
           *     console.log('onExampleAction of ' + sender + ' has fired!');
           * });
         * </code>
         */
        this.componentEvents = {
            onShow: new eventdispatcher_1.EventDispatcher(),
            onHide: new eventdispatcher_1.EventDispatcher(),
            onHoverChanged: new eventdispatcher_1.EventDispatcher(),
        };
        // Create the configuration for this component
        this.config = this.mergeConfig(config, {
            tag: 'div',
            id: 'mi-wbc-id-' + guid_1.Guid.next(),
            cssPrefix: 'mi-wbc',
            cssClass: 'ui-component',
            cssClasses: [],
            hidden: false,
        }, {});
    }
    /**
     * Initializes the component, e.g. by applying config settings.
     * This method must not be called from outside the UI framework.
     *
     * This method is automatically called by the {@link UIInstanceManager}. If the component is an inner component of
     * some component, and thus encapsulated abd managed internally and never directly exposed to the UIManager,
     * this method must be called from the managing component's {@link #initialize} method.
     */
    Component.prototype.initialize = function () {
        this.hidden = this.config.hidden;
        // Hide the component at initialization if it is configured to be hidden
        if (this.isHidden()) {
            this.hidden = false; // Set flag to false for the following hide() call to work (hide() checks the flag)
            this.hide();
        }
    };
    /**
     * Configures the component for the supplied Player and UIInstanceManager. This is the place where all the magic
     * happens, where components typically subscribe and react to events (on their DOM element, the Player, or the
     * UIInstanceManager), and basically everything that makes them interactive.
     * This method is called only once, when the UIManager initializes the UI.
     *
     * Subclasses usually overwrite this method to add their own functionality.
     *
     * @param player the player which this component controls
     * @param uimanager the UIInstanceManager that manages this component
     */
    Component.prototype.configure = function (player, uimanager) {
        var _this = this;
        this.onShow.subscribe(function () {
            uimanager.onComponentShow.dispatch(_this);
        });
        this.onHide.subscribe(function () {
            uimanager.onComponentHide.dispatch(_this);
        });
        // Track the hovered state of the element
        this.getDomElement().on('mouseenter', function () {
            _this.onHoverChangedEvent(true);
        });
        this.getDomElement().on('mouseleave', function () {
            _this.onHoverChangedEvent(false);
        });
    };
    /**
     * Releases all resources and dependencies that the component holds. Player, DOM, and UIManager events are
     * automatically removed during release and do not explicitly need to be removed here.
     * This method is called by the UIManager when it releases the UI.
     *
     * Subclasses that need to release resources should override this method and call super.release().
     */
    Component.prototype.release = function () {
        // Nothing to do here, override where necessary
    };
    /**
     * Generate the DOM element for this component.
     *
     * Subclasses usually overwrite this method to extend or replace the DOM element with their own design.
     */
    Component.prototype.toDomElement = function () {
        var element = new dom_1.DOM(this.config.tag, {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        return element;
    };
    /**
     * Returns the DOM element of this component. Creates the DOM element if it does not yet exist.
     *
     * Should not be overwritten by subclasses.
     *
     * @returns {DOM}
     */
    Component.prototype.getDomElement = function () {
        if (!this.element) {
            this.element = this.toDomElement();
        }
        return this.element;
    };
    /**
     * Merges a configuration with a default configuration and a base configuration from the superclass.
     *
     * @param config the configuration settings for the components, as usually passed to the constructor
     * @param defaults a default configuration for settings that are not passed with the configuration
     * @param base configuration inherited from a superclass
     * @returns {Config}
     */
    Component.prototype.mergeConfig = function (config, defaults, base) {
        // Extend default config with supplied config
        var merged = Object.assign({}, base, defaults, config);
        // Return the extended config
        return merged;
    };
    /**
     * Helper method that returns a string of all CSS classes of the component.
     *
     * @returns {string}
     */
    Component.prototype.getCssClasses = function () {
        var _this = this;
        // Merge all CSS classes into single array
        var flattenedArray = [this.config.cssClass].concat(this.config.cssClasses);
        // Prefix classes
        flattenedArray = flattenedArray.map(function (css) {
            return _this.prefixCss(css);
        });
        // Join array values into a string
        var flattenedString = flattenedArray.join(' ');
        // Return trimmed string to prevent whitespace at the end from the join operation
        return flattenedString.trim();
    };
    Component.prototype.prefixCss = function (cssClassOrId) {
        return this.config.cssPrefix + '-' + cssClassOrId;
    };
    /**
     * Returns the configuration object of the component.
     * @returns {Config}
     */
    Component.prototype.getConfig = function () {
        return this.config;
    };
    /**
     * Hides the component if shown.
     * This method basically transfers the component into the hidden state. Actual hiding is done via CSS.
     */
    Component.prototype.hide = function () {
        if (!this.hidden) {
            this.hidden = true;
            this.getDomElement().addClass(this.prefixCss(Component.CLASS_HIDDEN));
            this.onHideEvent();
        }
    };
    /**
     * Shows the component if hidden.
     */
    Component.prototype.show = function () {
        if (this.hidden) {
            this.getDomElement().removeClass(this.prefixCss(Component.CLASS_HIDDEN));
            this.hidden = false;
            this.onShowEvent();
        }
    };
    /**
     * Determines if the component is hidden.
     * @returns {boolean} true if the component is hidden, else false
     */
    Component.prototype.isHidden = function () {
        return this.hidden;
    };
    /**
     * Determines if the component is shown.
     * @returns {boolean} true if the component is visible, else false
     */
    Component.prototype.isShown = function () {
        return !this.isHidden();
    };
    /**
     * Toggles the hidden state by hiding the component if it is shown, or showing it if hidden.
     */
    Component.prototype.toggleHidden = function () {
        if (this.isHidden()) {
            this.show();
        }
        else {
            this.hide();
        }
    };
    /**
     * Determines if the component is currently hovered.
     * @returns {boolean} true if the component is hovered, else false
     */
    Component.prototype.isHovered = function () {
        return this.hovered;
    };
    /**
     * Fires the onShow event.
     * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
     */
    Component.prototype.onShowEvent = function () {
        this.componentEvents.onShow.dispatch(this);
    };
    /**
     * Fires the onHide event.
     * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
     */
    Component.prototype.onHideEvent = function () {
        this.componentEvents.onHide.dispatch(this);
    };
    /**
     * Fires the onHoverChanged event.
     * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
     */
    Component.prototype.onHoverChangedEvent = function (hovered) {
        this.hovered = hovered;
        this.componentEvents.onHoverChanged.dispatch(this, { hovered: hovered });
    };
    Object.defineProperty(Component.prototype, "onShow", {
        /**
         * Gets the event that is fired when the component is showing.
         * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
         * @returns {Event<Component<Config>, NoArgs>}
         */
        get: function () {
            return this.componentEvents.onShow.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "onHide", {
        /**
         * Gets the event that is fired when the component is hiding.
         * See the detailed explanation on event architecture on the {@link #componentEvents events list}.
         * @returns {Event<Component<Config>, NoArgs>}
         */
        get: function () {
            return this.componentEvents.onHide.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Component.prototype, "onHoverChanged", {
        /**
         * Gets the event that is fired when the component's hover-state is changing.
         * @returns {Event<Component<Config>, ComponentHoverChangedEventArgs>}
         */
        get: function () {
            return this.componentEvents.onHoverChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return Component;
}());
/**
 * The classname that is attached to the element when it is in the hidden state.
 * @type {string}
 */
Component.CLASS_HIDDEN = 'hidden';
exports.Component = Component;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var arrayutils_1 = __webpack_require__(11);
/**
 * Event dispatcher to subscribe and trigger events. Each event should have its own dispatcher.
 */
var EventDispatcher = (function () {
    function EventDispatcher() {
        this.listeners = [];
    }
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.subscribe = function (listener) {
        this.listeners.push(new EventListenerWrapper(listener));
    };
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.subscribeOnce = function (listener) {
        this.listeners.push(new EventListenerWrapper(listener, true));
    };
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.subscribeRateLimited = function (listener, rateMs) {
        this.listeners.push(new RateLimitedEventListenerWrapper(listener, rateMs));
    };
    /**
     * {@inheritDoc}
     */
    EventDispatcher.prototype.unsubscribe = function (listener) {
        // Iterate through listeners, compare with parameter, and remove if found
        // NOTE: In case we ever remove all matching listeners instead of just the first, we need to reverse-iterate here
        for (var i = 0; i < this.listeners.length; i++) {
            var subscribedListener = this.listeners[i];
            if (subscribedListener.listener === listener) {
                arrayutils_1.ArrayUtils.remove(this.listeners, subscribedListener);
                return true;
            }
        }
        return false;
    };
    /**
     * Removes all listeners from this dispatcher.
     */
    EventDispatcher.prototype.unsubscribeAll = function () {
        this.listeners = [];
    };
    /**
     * Dispatches an event to all subscribed listeners.
     * @param sender the source of the event
     * @param args the arguments for the event
     */
    EventDispatcher.prototype.dispatch = function (sender, args) {
        if (args === void 0) { args = null; }
        var listenersToRemove = [];
        // Call every listener
        // We iterate over a copy of the array of listeners to avoid the case where events are not fired on listeners when
        // listeners are unsubscribed from within the event handlers during a dispatch (because the indices change and
        // listeners are shifted within the array).
        // This means that listener x+1 will still be called if unsubscribed from within the handler of listener x, as well
        // as listener y+1 will not be called when subscribed from within the handler of listener y.
        // Array.slice(0) is the fastest array copy method according to: https://stackoverflow.com/a/21514254/370252
        var listeners = this.listeners.slice(0);
        for (var _i = 0, listeners_1 = listeners; _i < listeners_1.length; _i++) {
            var listener = listeners_1[_i];
            listener.fire(sender, args);
            if (listener.isOnce()) {
                listenersToRemove.push(listener);
            }
        }
        // Remove one-time listener
        for (var _a = 0, listenersToRemove_1 = listenersToRemove; _a < listenersToRemove_1.length; _a++) {
            var listenerToRemove = listenersToRemove_1[_a];
            arrayutils_1.ArrayUtils.remove(this.listeners, listenerToRemove);
        }
    };
    /**
     * Returns the event that this dispatcher manages and on which listeners can subscribe and unsubscribe event handlers.
     * @returns {Event}
     */
    EventDispatcher.prototype.getEvent = function () {
        // For now, just cast the event dispatcher to the event interface. At some point in the future when the
        // codebase grows, it might make sense to split the dispatcher into separate dispatcher and event classes.
        return this;
    };
    return EventDispatcher;
}());
exports.EventDispatcher = EventDispatcher;
/**
 * A basic event listener wrapper to manage listeners within the {@link EventDispatcher}. This is a 'private' class
 * for internal dispatcher use and it is therefore not exported.
 */
var EventListenerWrapper = (function () {
    function EventListenerWrapper(listener, once) {
        if (once === void 0) { once = false; }
        this.eventListener = listener;
        this.once = once;
    }
    Object.defineProperty(EventListenerWrapper.prototype, "listener", {
        /**
         * Returns the wrapped event listener.
         * @returns {EventListener<Sender, Args>}
         */
        get: function () {
            return this.eventListener;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Fires the wrapped event listener with the given arguments.
     * @param sender
     * @param args
     */
    EventListenerWrapper.prototype.fire = function (sender, args) {
        this.eventListener(sender, args);
    };
    /**
     * Checks if this listener is scheduled to be called only once.
     * @returns {boolean} once if true
     */
    EventListenerWrapper.prototype.isOnce = function () {
        return this.once;
    };
    return EventListenerWrapper;
}());
/**
 * Extends the basic {@link EventListenerWrapper} with rate-limiting functionality.
 */
var RateLimitedEventListenerWrapper = (function (_super) {
    __extends(RateLimitedEventListenerWrapper, _super);
    function RateLimitedEventListenerWrapper(listener, rateMs) {
        var _this = _super.call(this, listener) || this;
        _this.rateMs = rateMs;
        _this.lastFireTime = 0;
        // Wrap the event listener with an event listener that does the rate-limiting
        _this.rateLimitingEventListener = function (sender, args) {
            if (Date.now() - _this.lastFireTime > _this.rateMs) {
                // Only if enough time since the previous call has passed, call the
                // actual event listener and record the current time
                _this.fireSuper(sender, args);
                _this.lastFireTime = Date.now();
            }
        };
        return _this;
    }
    RateLimitedEventListenerWrapper.prototype.fireSuper = function (sender, args) {
        // Fire the actual external event listener
        _super.prototype.fire.call(this, sender, args);
    };
    RateLimitedEventListenerWrapper.prototype.fire = function (sender, args) {
        // Fire the internal rate-limiting listener instead of the external event listener
        this.rateLimitingEventListener(sender, args);
    };
    return RateLimitedEventListenerWrapper;
}(EventListenerWrapper));


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * Base class for all subtitles settings select box
 **/
var SubtitleSettingSelectBox = (function (_super) {
    __extends(SubtitleSettingSelectBox, _super);
    function SubtitleSettingSelectBox(config) {
        var _this = _super.call(this, config) || this;
        _this.settingsManager = config.settingsManager;
        _this.overlay = config.overlay;
        return _this;
    }
    /**
     * Removes a previously set class and adds the passed in class.
     * @param cssClass The new class to replace the previous class with or null to just remove the previous class
     */
    SubtitleSettingSelectBox.prototype.toggleOverlayClass = function (cssClass) {
        // Remove previous class if existing
        if (this.currentCssClass) {
            this.overlay.getDomElement().removeClass(this.currentCssClass);
            this.currentCssClass = null;
        }
        // Add new class if specified. If the new class is null, we don't add anything.
        if (cssClass) {
            this.currentCssClass = this.prefixCss(cssClass);
            this.overlay.getDomElement().addClass(this.currentCssClass);
        }
    };
    return SubtitleSettingSelectBox;
}(selectbox_1.SelectBox));
exports.SubtitleSettingSelectBox = SubtitleSettingSelectBox;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * A button that can be toggled between 'on' and 'off' states.
 */
var ToggleButton = (function (_super) {
    __extends(ToggleButton, _super);
    function ToggleButton(config) {
        var _this = _super.call(this, config) || this;
        _this.toggleButtonEvents = {
            onToggle: new eventdispatcher_1.EventDispatcher(),
            onToggleOn: new eventdispatcher_1.EventDispatcher(),
            onToggleOff: new eventdispatcher_1.EventDispatcher(),
        };
        var defaultConfig = {
            cssClass: 'ui-togglebutton',
            onClass: 'on',
            offClass: 'off',
        };
        _this.config = _this.mergeConfig(config, defaultConfig, _this.config);
        return _this;
    }
    ToggleButton.prototype.configure = function (player, uimanager) {
        var config = this.getConfig();
        this.getDomElement().addClass(this.prefixCss(config.offClass));
    };
    /**
     * Toggles the button to the 'on' state.
     */
    ToggleButton.prototype.on = function () {
        if (this.isOff()) {
            var config = this.getConfig();
            this.onState = true;
            this.getDomElement().removeClass(this.prefixCss(config.offClass));
            this.getDomElement().addClass(this.prefixCss(config.onClass));
            this.onToggleEvent();
            this.onToggleOnEvent();
        }
    };
    /**
     * Toggles the button to the 'off' state.
     */
    ToggleButton.prototype.off = function () {
        if (this.isOn()) {
            var config = this.getConfig();
            this.onState = false;
            this.getDomElement().removeClass(this.prefixCss(config.onClass));
            this.getDomElement().addClass(this.prefixCss(config.offClass));
            this.onToggleEvent();
            this.onToggleOffEvent();
        }
    };
    /**
     * Toggle the button 'on' if it is 'off', or 'off' if it is 'on'.
     */
    ToggleButton.prototype.toggle = function () {
        if (this.isOn()) {
            this.off();
        }
        else {
            this.on();
        }
    };
    /**
     * Checks if the toggle button is in the 'on' state.
     * @returns {boolean} true if button is 'on', false if 'off'
     */
    ToggleButton.prototype.isOn = function () {
        return this.onState;
    };
    /**
     * Checks if the toggle button is in the 'off' state.
     * @returns {boolean} true if button is 'off', false if 'on'
     */
    ToggleButton.prototype.isOff = function () {
        return !this.isOn();
    };
    ToggleButton.prototype.onClickEvent = function () {
        _super.prototype.onClickEvent.call(this);
        // Fire the toggle event together with the click event
        // (they are technically the same, only the semantics are different)
        this.onToggleEvent();
    };
    ToggleButton.prototype.onToggleEvent = function () {
        this.toggleButtonEvents.onToggle.dispatch(this);
    };
    ToggleButton.prototype.onToggleOnEvent = function () {
        this.toggleButtonEvents.onToggleOn.dispatch(this);
    };
    ToggleButton.prototype.onToggleOffEvent = function () {
        this.toggleButtonEvents.onToggleOff.dispatch(this);
    };
    Object.defineProperty(ToggleButton.prototype, "onToggle", {
        /**
         * Gets the event that is fired when the button is toggled.
         * @returns {Event<ToggleButton<Config>, NoArgs>}
         */
        get: function () {
            return this.toggleButtonEvents.onToggle.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToggleButton.prototype, "onToggleOn", {
        /**
         * Gets the event that is fired when the button is toggled 'on'.
         * @returns {Event<ToggleButton<Config>, NoArgs>}
         */
        get: function () {
            return this.toggleButtonEvents.onToggleOn.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToggleButton.prototype, "onToggleOff", {
        /**
         * Gets the event that is fired when the button is toggled 'off'.
         * @returns {Event<ToggleButton<Config>, NoArgs>}
         */
        get: function () {
            return this.toggleButtonEvents.onToggleOff.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return ToggleButton;
}(button_1.Button));
exports.ToggleButton = ToggleButton;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * A simple text label.
 *
 * DOM example:
 * <code>
 *     <span class='ui-label'>...some text...</span>
 * </code>
 */
var Label = (function (_super) {
    __extends(Label, _super);
    function Label(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.labelEvents = {
            onClick: new eventdispatcher_1.EventDispatcher(),
            onTextChanged: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-label',
        }, _this.config);
        _this.text = _this.config.text;
        return _this;
    }
    Label.prototype.toDomElement = function () {
        var _this = this;
        var labelElement = new dom_1.DOM('span', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        }).html(this.text);
        labelElement.on('click', function () {
            _this.onClickEvent();
        });
        return labelElement;
    };
    /**
     * Set the text on this label.
     * @param text
     */
    Label.prototype.setText = function (text) {
        this.text = text;
        this.getDomElement().html(text);
        this.onTextChangedEvent(text);
    };
    /**
     * Gets the text on this label.
     * @return {string} The text on the label
     */
    Label.prototype.getText = function () {
        return this.text;
    };
    /**
     * Clears the text on this label.
     */
    Label.prototype.clearText = function () {
        this.getDomElement().html('');
        this.onTextChangedEvent(null);
    };
    /**
     * Tests if the label is empty and does not contain any text.
     * @return {boolean} True if the label is empty, else false
     */
    Label.prototype.isEmpty = function () {
        return !this.text;
    };
    /**
     * Fires the {@link #onClick} event.
     * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method
     * and calling the super method.
     */
    Label.prototype.onClickEvent = function () {
        this.labelEvents.onClick.dispatch(this);
    };
    /**
     * Fires the {@link #onClick} event.
     * Can be used by subclasses to listen to this event without subscribing an event listener by overwriting the method
     * and calling the super method.
     */
    Label.prototype.onTextChangedEvent = function (text) {
        this.labelEvents.onTextChanged.dispatch(this, text);
    };
    Object.defineProperty(Label.prototype, "onClick", {
        /**
         * Gets the event that is fired when the label is clicked.
         * @returns {Event<Label<LabelConfig>, NoArgs>}
         */
        get: function () {
            return this.labelEvents.onClick.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "onTextChanged", {
        /**
         * Gets the event that is fired when the text on the label is changed.
         * @returns {Event<Label<LabelConfig>, string>}
         */
        get: function () {
            return this.labelEvents.onTextChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return Label;
}(component_1.Component));
exports.Label = Label;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * A simple clickable button.
 */
var Button = (function (_super) {
    __extends(Button, _super);
    function Button(config) {
        var _this = _super.call(this, config) || this;
        _this.buttonEvents = {
            onClick: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-button',
        }, _this.config);
        return _this;
    }
    Button.prototype.toDomElement = function () {
        var _this = this;
        // Create the button element with the text label
        var buttonElement = new dom_1.DOM('button', {
            'type': 'button',
            'id': this.config.id,
            'class': this.getCssClasses(),
        }).append(new dom_1.DOM('span', {
            'class': this.prefixCss('label'),
        }).html(this.config.text));
        // Listen for the click event on the button element and trigger the corresponding event on the button component
        buttonElement.on('click', function () {
            _this.onClickEvent();
        });
        return buttonElement;
    };
    /**
     * Sets text on the label of the button.
     * @param text the text to put into the label of the button
     */
    Button.prototype.setText = function (text) {
        this.getDomElement().find('.' + this.prefixCss('label')).html(text);
    };
    Button.prototype.onClickEvent = function () {
        this.buttonEvents.onClick.dispatch(this);
    };
    Object.defineProperty(Button.prototype, "onClick", {
        /**
         * Gets the event that is fired when the button is clicked.
         * @returns {Event<Button<Config>, NoArgs>}
         */
        get: function () {
            return this.buttonEvents.onClick.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return Button;
}(component_1.Component));
exports.Button = Button;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var listselector_1 = __webpack_require__(33);
var dom_1 = __webpack_require__(1);
/**
 * A simple select box providing the possibility to select a single item out of a list of available items.
 *
 * DOM example:
 * <code>
 *     <select class='ui-selectbox'>
 *         <option value='key'>label</option>
 *         ...
 *     </select>
 * </code>
 */
var SelectBox = (function (_super) {
    __extends(SelectBox, _super);
    function SelectBox(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-selectbox',
        }, _this.config);
        return _this;
    }
    SelectBox.prototype.toDomElement = function () {
        var _this = this;
        var selectElement = new dom_1.DOM('select', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        this.selectElement = selectElement;
        this.updateDomItems();
        selectElement.on('change', function () {
            var value = selectElement.val();
            _this.onItemSelectedEvent(value, false);
        });
        return selectElement;
    };
    SelectBox.prototype.updateDomItems = function (selectedValue) {
        if (selectedValue === void 0) { selectedValue = null; }
        // Delete all children
        this.selectElement.empty();
        // Add updated children
        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
            var item = _a[_i];
            var optionElement = new dom_1.DOM('option', {
                'value': item.key,
            }).html(item.label);
            if (item.key === String(selectedValue)) {
                optionElement.attr('selected', 'selected');
            }
            this.selectElement.append(optionElement);
        }
    };
    SelectBox.prototype.onItemAddedEvent = function (value) {
        _super.prototype.onItemAddedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    SelectBox.prototype.onItemRemovedEvent = function (value) {
        _super.prototype.onItemRemovedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    SelectBox.prototype.onItemSelectedEvent = function (value, updateDomItems) {
        if (updateDomItems === void 0) { updateDomItems = true; }
        _super.prototype.onItemSelectedEvent.call(this, value);
        if (updateDomItems) {
            this.updateDomItems(value);
        }
    };
    return SelectBox;
}(listselector_1.ListSelector));
exports.SelectBox = SelectBox;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// TODO change to internal (not exported) class, how to use in other files?
/**
 * Executes a callback after a specified amount of time, optionally repeatedly until stopped.
 */
var Timeout = (function () {
    /**
     * Creates a new timeout callback handler.
     * @param delay the delay in milliseconds after which the callback should be executed
     * @param callback the callback to execute after the delay time
     * @param repeat if true, call the callback repeatedly in delay intervals
     */
    function Timeout(delay, callback, repeat) {
        if (repeat === void 0) { repeat = false; }
        this.delay = delay;
        this.callback = callback;
        this.repeat = repeat;
        this.timeoutHandle = 0;
    }
    /**
     * Starts the timeout and calls the callback when the timeout delay has passed.
     * @returns {Timeout} the current timeout (so the start call can be chained to the constructor)
     */
    Timeout.prototype.start = function () {
        this.reset();
        return this;
    };
    /**
     * Clears the timeout. The callback will not be called if clear is called during the timeout.
     */
    Timeout.prototype.clear = function () {
        this.clearInternal();
    };
    /**
     * Resets the passed timeout delay to zero. Can be used to defer the calling of the callback.
     */
    Timeout.prototype.reset = function () {
        var _this = this;
        var lastScheduleTime = 0;
        var delayAdjust = 0;
        this.clearInternal();
        var internalCallback = function () {
            _this.callback();
            if (_this.repeat) {
                var now = Date.now();
                // The time of one iteration from scheduling to executing the callback (usually a bit longer than the delay
                // time)
                var delta = now - lastScheduleTime;
                // Calculate the delay adjustment for the next schedule to keep a steady delay interval over time
                delayAdjust = _this.delay - delta + delayAdjust;
                lastScheduleTime = now;
                // Schedule next execution by the adjusted delay
                _this.timeoutHandle = setTimeout(internalCallback, _this.delay + delayAdjust);
            }
        };
        lastScheduleTime = Date.now();
        this.timeoutHandle = setTimeout(internalCallback, this.delay);
    };
    Timeout.prototype.clearInternal = function () {
        clearTimeout(this.timeoutHandle);
    };
    return Timeout;
}());
exports.Timeout = Timeout;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var StringUtils;
(function (StringUtils) {
    StringUtils.FORMAT_HHMMSS = 'hh:mm:ss';
    StringUtils.FORMAT_MMSS = 'mm:ss';
    /**
     * Formats a number of seconds into a time string with the pattern hh:mm:ss.
     *
     * @param totalSeconds the total number of seconds to format to string
     * @param format the time format to output (default: hh:mm:ss)
     * @returns {string} the formatted time string
     */
    function secondsToTime(totalSeconds, format) {
        if (format === void 0) { format = StringUtils.FORMAT_HHMMSS; }
        var isNegative = totalSeconds < 0;
        if (isNegative) {
            // If the time is negative, we make it positive for the calculation below
            // (else we'd get all negative numbers) and reattach the negative sign later.
            totalSeconds = -totalSeconds;
        }
        // Split into separate time parts
        var hours = Math.floor(totalSeconds / 3600);
        var minutes = Math.floor(totalSeconds / 60) - hours * 60;
        var seconds = Math.floor(totalSeconds) % 60;
        return (isNegative ? '-' : '') + format
            .replace('hh', leftPadWithZeros(hours, 2))
            .replace('mm', leftPadWithZeros(minutes, 2))
            .replace('ss', leftPadWithZeros(seconds, 2));
    }
    StringUtils.secondsToTime = secondsToTime;
    /**
     * Converts a number to a string and left-pads it with zeros to the specified length.
     * Example: leftPadWithZeros(123, 5) => '00123'
     *
     * @param num the number to convert to string and pad with zeros
     * @param length the desired length of the padded string
     * @returns {string} the padded number as string
     */
    function leftPadWithZeros(num, length) {
        var text = num + '';
        var padding = '0000000000'.substr(0, length - text.length);
        return padding + text;
    }
    /**
     * Fills out placeholders in an ad message.
     *
     * Has the placeholders '{remainingTime[formatString]}', '{playedTime[formatString]}' and
     * '{adDuration[formatString]}', which are replaced by the remaining time until the ad can be skipped, the current
     * time or the ad duration. The format string is optional. If not specified, the placeholder is replaced by the time
     * in seconds. If specified, it must be of the following format:
     * - %d - Inserts the time as an integer.
     * - %0Nd - Inserts the time as an integer with leading zeroes, if the length of the time string is smaller than N.
     * - %f - Inserts the time as a float.
     * - %0Nf - Inserts the time as a float with leading zeroes.
     * - %.Mf - Inserts the time as a float with M decimal places. Can be combined with %0Nf, e.g. %04.2f (the time
     * 10.123
     * would be printed as 0010.12).
     * - %hh:mm:ss
     * - %mm:ss
     *
     * @param adMessage an ad message with optional placeholders to fill
     * @param skipOffset if specified, {remainingTime} will be filled with the remaining time until the ad can be skipped
     * @param player the player to get the time data from
     * @returns {string} the ad message with filled placeholders
     */
    function replaceAdMessagePlaceholders(adMessage, skipOffset, player) {
        var adMessagePlaceholderRegex = new RegExp('\\{(remainingTime|playedTime|adDuration)(}|%((0[1-9]\\d*(\\.\\d+(d|f)|d|f)|\\.\\d+f|d|f)|hh:mm:ss|mm:ss)})', 'g');
        return adMessage.replace(adMessagePlaceholderRegex, function (formatString) {
            var time = 0;
            if (formatString.indexOf('remainingTime') > -1) {
                if (skipOffset) {
                    time = Math.ceil(skipOffset - player.getCurrentTime());
                }
                else {
                    time = player.getDuration() - player.getCurrentTime();
                }
            }
            else if (formatString.indexOf('playedTime') > -1) {
                time = player.getCurrentTime();
            }
            else if (formatString.indexOf('adDuration') > -1) {
                time = player.getDuration();
            }
            return formatNumber(time, formatString);
        });
    }
    StringUtils.replaceAdMessagePlaceholders = replaceAdMessagePlaceholders;
    function formatNumber(time, format) {
        var formatStringValidationRegex = /%((0[1-9]\d*(\.\d+(d|f)|d|f)|\.\d+f|d|f)|hh:mm:ss|mm:ss)/;
        var leadingZeroesRegex = /(%0[1-9]\d*)(?=(\.\d+f|f|d))/;
        var decimalPlacesRegex = /\.\d*(?=f)/;
        if (!formatStringValidationRegex.test(format)) {
            // If the format is invalid, we set a default fallback format
            format = '%d';
        }
        // Determine the number of leading zeros
        var leadingZeroes = 0;
        var leadingZeroesMatches = format.match(leadingZeroesRegex);
        if (leadingZeroesMatches) {
            leadingZeroes = parseInt(leadingZeroesMatches[0].substring(2));
        }
        // Determine the number of decimal places
        var numDecimalPlaces = null;
        var decimalPlacesMatches = format.match(decimalPlacesRegex);
        if (decimalPlacesMatches && !isNaN(parseInt(decimalPlacesMatches[0].substring(1)))) {
            numDecimalPlaces = parseInt(decimalPlacesMatches[0].substring(1));
            if (numDecimalPlaces > 20) {
                numDecimalPlaces = 20;
            }
        }
        // Float format
        if (format.indexOf('f') > -1) {
            var timeString = '';
            if (numDecimalPlaces !== null) {
                // Apply fixed number of decimal places
                timeString = time.toFixed(numDecimalPlaces);
            }
            else {
                timeString = '' + time;
            }
            // Apply leading zeros
            if (timeString.indexOf('.') > -1) {
                return leftPadWithZeros(timeString, timeString.length + (leadingZeroes - timeString.indexOf('.')));
            }
            else {
                return leftPadWithZeros(timeString, leadingZeroes);
            }
        }
        else if (format.indexOf(':') > -1) {
            var totalSeconds = Math.ceil(time);
            // hh:mm:ss format
            if (format.indexOf('hh') > -1) {
                return secondsToTime(totalSeconds);
            }
            else {
                var minutes = Math.floor(totalSeconds / 60);
                var seconds = totalSeconds % 60;
                return leftPadWithZeros(minutes, 2) + ':' + leftPadWithZeros(seconds, 2);
            }
        }
        else {
            return leftPadWithZeros(Math.ceil(time), leadingZeroes);
        }
    }
})(StringUtils = exports.StringUtils || (exports.StringUtils = {}));


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ArrayUtils;
(function (ArrayUtils) {
    /**
     * Removes an item from an array.
     * @param array the array that may contain the item to remove
     * @param item the item to remove from the array
     * @returns {any} the removed item or null if it wasn't part of the array
     */
    function remove(array, item) {
        var index = array.indexOf(item);
        if (index > -1) {
            return array.splice(index, 1)[0];
        }
        else {
            return null;
        }
    }
    ArrayUtils.remove = remove;
})(ArrayUtils = exports.ArrayUtils || (exports.ArrayUtils = {}));


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var eventdispatcher_1 = __webpack_require__(3);
var browserutils_1 = __webpack_require__(15);
var PlayerUtils;
(function (PlayerUtils) {
    var PlayerState;
    (function (PlayerState) {
        PlayerState[PlayerState["IDLE"] = 0] = "IDLE";
        PlayerState[PlayerState["PREPARED"] = 1] = "PREPARED";
        PlayerState[PlayerState["PLAYING"] = 2] = "PLAYING";
        PlayerState[PlayerState["PAUSED"] = 3] = "PAUSED";
        PlayerState[PlayerState["FINISHED"] = 4] = "FINISHED";
    })(PlayerState = PlayerUtils.PlayerState || (PlayerUtils.PlayerState = {}));
    function isTimeShiftAvailable(player) {
        return player.isLive() && player.getMaxTimeShift() !== 0;
    }
    PlayerUtils.isTimeShiftAvailable = isTimeShiftAvailable;
    function getState(player) {
        if (player.hasEnded()) {
            return PlayerState.FINISHED;
        }
        else if (player.isPlaying()) {
            return PlayerState.PLAYING;
        }
        else if (player.isPaused()) {
            return PlayerState.PAUSED;
        }
        else if (player.isReady()) {
            return PlayerState.PREPARED;
        }
        else {
            return PlayerState.IDLE;
        }
    }
    PlayerUtils.getState = getState;
    var TimeShiftAvailabilityDetector = (function () {
        function TimeShiftAvailabilityDetector(player) {
            var _this = this;
            this.timeShiftAvailabilityChangedEvent = new eventdispatcher_1.EventDispatcher();
            this.player = player;
            this.timeShiftAvailable = undefined;
            var timeShiftDetector = function () {
                _this.detect();
            };
            // Try to detect timeshift availability in ON_READY, which works for DASH streams
            player.addEventHandler(player.EVENT.ON_READY, timeShiftDetector);
            // With HLS/NativePlayer streams, getMaxTimeShift can be 0 before the buffer fills, so we need to additionally
            // check timeshift availability in ON_TIME_CHANGED
            player.addEventHandler(player.EVENT.ON_TIME_CHANGED, timeShiftDetector);
        }
        TimeShiftAvailabilityDetector.prototype.detect = function () {
            if (this.player.isLive()) {
                var timeShiftAvailableNow = PlayerUtils.isTimeShiftAvailable(this.player);
                // When the availability changes, we fire the event
                if (timeShiftAvailableNow !== this.timeShiftAvailable) {
                    this.timeShiftAvailabilityChangedEvent.dispatch(this.player, { timeShiftAvailable: timeShiftAvailableNow });
                    this.timeShiftAvailable = timeShiftAvailableNow;
                }
            }
        };
        Object.defineProperty(TimeShiftAvailabilityDetector.prototype, "onTimeShiftAvailabilityChanged", {
            get: function () {
                return this.timeShiftAvailabilityChangedEvent.getEvent();
            },
            enumerable: true,
            configurable: true
        });
        return TimeShiftAvailabilityDetector;
    }());
    PlayerUtils.TimeShiftAvailabilityDetector = TimeShiftAvailabilityDetector;
    /**
     * Detects changes of the stream type, i.e. changes of the return value of the player#isLive method.
     * Normally, a stream cannot change its type during playback, it's either VOD or live. Due to bugs on some
     * platforms or browsers, it can still change. It is therefore unreliable to just check #isLive and this detector
     * should be used as a workaround instead.
     *
     * Known cases:
     *
     * - HLS VOD on Android 4.3
     * Video duration is initially 'Infinity' and only gets available after playback starts, so streams are wrongly
     * reported as 'live' before playback (the live-check in the player checks for infinite duration).
     */
    var LiveStreamDetector = (function () {
        function LiveStreamDetector(player) {
            var _this = this;
            this.liveChangedEvent = new eventdispatcher_1.EventDispatcher();
            this.player = player;
            this.live = undefined;
            var liveDetector = function () {
                _this.detect();
            };
            // Initialize when player is ready
            player.addEventHandler(player.EVENT.ON_READY, liveDetector);
            // Re-evaluate when playback starts
            player.addEventHandler(player.EVENT.ON_PLAY, liveDetector);
            // HLS live detection workaround for Android:
            // Also re-evaluate during playback, because that is when the live flag might change.
            // (Doing it only in Android Chrome saves unnecessary overhead on other plattforms)
            if (browserutils_1.BrowserUtils.isAndroid && browserutils_1.BrowserUtils.isChrome) {
                player.addEventHandler(player.EVENT.ON_TIME_CHANGED, liveDetector);
            }
        }
        LiveStreamDetector.prototype.detect = function () {
            var liveNow = this.player.isLive();
            // Compare current to previous live state flag and fire event when it changes. Since we initialize the flag
            // with undefined, there is always at least an initial event fired that tells listeners the live state.
            if (liveNow !== this.live) {
                this.liveChangedEvent.dispatch(this.player, { live: liveNow });
                this.live = liveNow;
            }
        };
        Object.defineProperty(LiveStreamDetector.prototype, "onLiveChanged", {
            get: function () {
                return this.liveChangedEvent.getEvent();
            },
            enumerable: true,
            configurable: true
        });
        return LiveStreamDetector;
    }());
    PlayerUtils.LiveStreamDetector = LiveStreamDetector;
})(PlayerUtils = exports.PlayerUtils || (exports.PlayerUtils = {}));


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = angular;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var dom_1 = __webpack_require__(1);
var timeout_1 = __webpack_require__(9);
var playerutils_1 = __webpack_require__(12);
/**
 * The base container that contains all of the UI. The UIContainer is passed to the {@link UIManager} to build and
 * setup the UI.
 */
var UIContainer = (function (_super) {
    __extends(UIContainer, _super);
    function UIContainer(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-uicontainer',
            hideDelay: 5000,
        }, _this.config);
        return _this;
    }
    UIContainer.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        this.configureUIShowHide(player, uimanager);
        this.configurePlayerStates(player, uimanager);
    };
    UIContainer.prototype.configureUIShowHide = function (player, uimanager) {
        var _this = this;
        var container = this.getDomElement();
        var config = this.getConfig();
        if (config.hideDelay === -1) {
            uimanager.onConfigured.subscribe(function () { return uimanager.onControlsShow.dispatch(_this); });
            return;
        }
        var isUiShown = false;
        var isSeeking = false;
        var isFirstTouch = true;
        var showUi = function () {
            if (!isUiShown) {
                // Let subscribers know that they should reveal themselves
                uimanager.onControlsShow.dispatch(_this);
                isUiShown = true;
            }
            // Don't trigger timeout while seeking (it will be triggered once the seek is finished) or casting
            if (!isSeeking && !player.isCasting()) {
                _this.uiHideTimeout.start();
            }
        };
        var hideUi = function () {
            // Hide the UI only if it is shown, and if not casting
            if (isUiShown && !player.isCasting()) {
                // Issue a preview event to check if we are good to hide the controls
                var previewHideEventArgs = {};
                uimanager.onPreviewControlsHide.dispatch(_this, previewHideEventArgs);
                if (!previewHideEventArgs.cancel) {
                    // If the preview wasn't canceled, let subscribers know that they should now hide themselves
                    uimanager.onControlsHide.dispatch(_this);
                    isUiShown = false;
                }
                else {
                    // If the hide preview was canceled, continue to show UI
                    showUi();
                }
            }
        };
        // Timeout to defer UI hiding by the configured delay time
        this.uiHideTimeout = new timeout_1.Timeout(config.hideDelay, hideUi);
        // On touch displays, the first touch reveals the UI
        container.on('touchend', function (e) {
            if (!isUiShown) {
                // Only if the UI is hidden, we prevent other actions (except for the first touch) and reveal the UI instead.
                // The first touch is not prevented to let other listeners receive the event and trigger an initial action, e.g.
                // the huge playback button can directly start playback instead of requiring a double tap which 1. reveals
                // the UI and 2. starts playback.
                if (isFirstTouch) {
                    isFirstTouch = false;
                }
                else {
                    e.preventDefault();
                }
                showUi();
            }
        });
        // When the mouse enters, we show the UI
        container.on('mouseenter', function () {
            showUi();
        });
        // When the mouse moves within, we show the UI
        container.on('mousemove', function () {
            showUi();
        });
        // When the mouse leaves, we can prepare to hide the UI, except a seek is going on
        container.on('mouseleave', function () {
            // When a seek is going on, the seek scrub pointer may exit the UI area while still seeking, and we do not hide
            // the UI in such cases
            if (!isSeeking) {
                _this.uiHideTimeout.start();
            }
        });
        uimanager.onSeek.subscribe(function () {
            _this.uiHideTimeout.clear(); // Don't hide UI while a seek is in progress
            isSeeking = true;
        });
        uimanager.onSeeked.subscribe(function () {
            isSeeking = false;
            _this.uiHideTimeout.start(); // Re-enable UI hide timeout after a seek
        });
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function () {
            showUi(); // Show UI when a Cast session has started (UI will then stay permanently on during the session)
        });
    };
    UIContainer.prototype.configurePlayerStates = function (player, uimanager) {
        var _this = this;
        var container = this.getDomElement();
        // Convert player states into CSS class names
        var stateClassNames = [];
        for (var state in playerutils_1.PlayerUtils.PlayerState) {
            if (isNaN(Number(state))) {
                var enumName = playerutils_1.PlayerUtils.PlayerState[playerutils_1.PlayerUtils.PlayerState[state]];
                stateClassNames[playerutils_1.PlayerUtils.PlayerState[state]] =
                    this.prefixCss(UIContainer.STATE_PREFIX + enumName.toLowerCase());
            }
        }
        var removeStates = function () {
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.IDLE]);
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PREPARED]);
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PLAYING]);
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PAUSED]);
            container.removeClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.FINISHED]);
        };
        player.addEventHandler(player.EVENT.ON_READY, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PREPARED]);
        });
        player.addEventHandler(player.EVENT.ON_PLAY, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PLAYING]);
        });
        player.addEventHandler(player.EVENT.ON_PAUSED, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.PAUSED]);
        });
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.FINISHED]);
        });
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, function () {
            removeStates();
            container.addClass(stateClassNames[playerutils_1.PlayerUtils.PlayerState.IDLE]);
        });
        // Init in current player state
        container.addClass(stateClassNames[playerutils_1.PlayerUtils.getState(player)]);
        // Fullscreen marker class
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_ENTER, function () {
            container.addClass(_this.prefixCss(UIContainer.FULLSCREEN));
        });
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_EXIT, function () {
            container.removeClass(_this.prefixCss(UIContainer.FULLSCREEN));
        });
        // Init fullscreen state
        if (player.isFullscreen()) {
            container.addClass(this.prefixCss(UIContainer.FULLSCREEN));
        }
        // Buffering marker class
        player.addEventHandler(player.EVENT.ON_STALL_STARTED, function () {
            container.addClass(_this.prefixCss(UIContainer.BUFFERING));
        });
        player.addEventHandler(player.EVENT.ON_STALL_ENDED, function () {
            container.removeClass(_this.prefixCss(UIContainer.BUFFERING));
        });
        // Init buffering state
        if (player.isStalled()) {
            container.addClass(this.prefixCss(UIContainer.BUFFERING));
        }
        // RemoteControl marker class
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function () {
            container.addClass(_this.prefixCss(UIContainer.REMOTE_CONTROL));
        });
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, function () {
            container.removeClass(_this.prefixCss(UIContainer.REMOTE_CONTROL));
        });
        // Init RemoteControl state
        if (player.isCasting()) {
            container.addClass(this.prefixCss(UIContainer.REMOTE_CONTROL));
        }
        // Controls visibility marker class
        uimanager.onControlsShow.subscribe(function () {
            container.removeClass(_this.prefixCss(UIContainer.CONTROLS_HIDDEN));
            container.addClass(_this.prefixCss(UIContainer.CONTROLS_SHOWN));
        });
        uimanager.onControlsHide.subscribe(function () {
            container.removeClass(_this.prefixCss(UIContainer.CONTROLS_SHOWN));
            container.addClass(_this.prefixCss(UIContainer.CONTROLS_HIDDEN));
        });
        // Layout size classes
        var updateLayoutSizeClasses = function (width, height) {
            container.removeClass(_this.prefixCss('layout-max-width-400'));
            container.removeClass(_this.prefixCss('layout-max-width-600'));
            container.removeClass(_this.prefixCss('layout-max-width-800'));
            container.removeClass(_this.prefixCss('layout-max-width-1200'));
            if (width <= 400) {
                container.addClass(_this.prefixCss('layout-max-width-400'));
            }
            else if (width <= 600) {
                container.addClass(_this.prefixCss('layout-max-width-600'));
            }
            else if (width <= 800) {
                container.addClass(_this.prefixCss('layout-max-width-800'));
            }
            else if (width <= 1200) {
                container.addClass(_this.prefixCss('layout-max-width-1200'));
            }
        };
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function (e) {
            // Convert strings (with "px" suffix) to ints
            var width = Math.round(Number(e.width.substring(0, e.width.length - 2)));
            var height = Math.round(Number(e.height.substring(0, e.height.length - 2)));
            updateLayoutSizeClasses(width, height);
        });
        // Init layout state
        updateLayoutSizeClasses(new dom_1.DOM(player.getFigure()).width(), new dom_1.DOM(player.getFigure()).height());
    };
    UIContainer.prototype.release = function () {
        _super.prototype.release.call(this);
        this.uiHideTimeout.clear();
    };
    UIContainer.prototype.toDomElement = function () {
        var container = _super.prototype.toDomElement.call(this);
        // Detect flexbox support (not supported in IE9)
        if (document && typeof document.createElement('p').style.flex !== 'undefined') {
            container.addClass(this.prefixCss('flexbox'));
        }
        else {
            container.addClass(this.prefixCss('no-flexbox'));
        }
        return container;
    };
    return UIContainer;
}(container_1.Container));
UIContainer.STATE_PREFIX = 'player-state-';
UIContainer.FULLSCREEN = 'fullscreen';
UIContainer.BUFFERING = 'buffering';
UIContainer.REMOTE_CONTROL = 'remote-control';
UIContainer.CONTROLS_SHOWN = 'controls-shown';
UIContainer.CONTROLS_HIDDEN = 'controls-hidden';
exports.UIContainer = UIContainer;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BrowserUtils;
(function (BrowserUtils) {
    // isMobile only needs to be evaluated once (it cannot change during a browser session)
    // Mobile detection according to Mozilla recommendation: "In summary, we recommend looking for the string “Mobi”
    // anywhere in the User Agent to detect a mobile device."
    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent
    BrowserUtils.isMobile = navigator && navigator.userAgent && /Mobi/.test(navigator.userAgent);
    BrowserUtils.isChrome = navigator && navigator.userAgent && /Chrome/.test(navigator.userAgent);
    BrowserUtils.isAndroid = navigator && navigator.userAgent && /Android/.test(navigator.userAgent);
})(BrowserUtils = exports.BrowserUtils || (exports.BrowserUtils = {}));


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
var playerutils_1 = __webpack_require__(12);
/**
 * A button that toggles between playback and pause.
 */
var PlaybackToggleButton = (function (_super) {
    __extends(PlaybackToggleButton, _super);
    function PlaybackToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-playbacktogglebutton',
            text: 'Play/Pause',
        }, _this.config);
        return _this;
    }
    PlaybackToggleButton.prototype.configure = function (player, uimanager, handleClickEvent) {
        var _this = this;
        if (handleClickEvent === void 0) { handleClickEvent = true; }
        _super.prototype.configure.call(this, player, uimanager);
        var isSeeking = false;
        // Handler to update button state based on player state
        var playbackStateHandler = function (event) {
            // If the UI is currently seeking, playback is temporarily stopped but the buttons should
            // not reflect that and stay as-is (e.g indicate playback while seeking).
            if (isSeeking) {
                return;
            }
            if (player.isPlaying()) {
                _this.on();
            }
            else {
                _this.off();
            }
        };
        // Call handler upon these events
        player.addEventHandler(player.EVENT.ON_PLAY, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_PAUSED, playbackStateHandler);
        if (player.EVENT.ON_PLAYING) {
            // Since player 7.3. Not really necessary but just in case we ever miss the ON_PLAY event.
            player.addEventHandler(player.EVENT.ON_PLAYING, playbackStateHandler);
        }
        // after unloading + loading a new source, the player might be in a different playing state (from playing into stopped)
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, playbackStateHandler);
        // when playback finishes, player turns to paused mode
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_PLAYING, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_PAUSED, playbackStateHandler);
        player.addEventHandler(player.EVENT.ON_CAST_PLAYBACK_FINISHED, playbackStateHandler);
        // When a playback attempt is rejected with warning 5008, we switch the button state back to off
        // This is required for blocked autoplay, because there is no ON_PAUSED event in such case
        player.addEventHandler(player.EVENT.ON_WARNING, function (event) {
            if (event.code === 5008) {
                _this.off();
            }
        });
        // Detect absence of timeshifting on live streams and add tagging class to convert button icons to play/stop
        var timeShiftDetector = new playerutils_1.PlayerUtils.TimeShiftAvailabilityDetector(player);
        timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(function (sender, args) {
            if (!args.timeShiftAvailable) {
                _this.getDomElement().addClass(_this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));
            }
            else {
                _this.getDomElement().removeClass(_this.prefixCss(PlaybackToggleButton.CLASS_STOPTOGGLE));
            }
        });
        timeShiftDetector.detect(); // Initial detection
        if (handleClickEvent) {
            // Control player by button events
            // When a button event triggers a player API call, events are fired which in turn call the event handler
            // above that updated the button state.
            this.onClick.subscribe(function () {
                if (player.isPlaying()) {
                    player.pause('ui');
                }
                else {
                    player.play('ui');
                }
            });
        }
        // Track UI seeking status
        uimanager.onSeek.subscribe(function () {
            isSeeking = true;
        });
        uimanager.onSeeked.subscribe(function () {
            isSeeking = false;
        });
        // Startup init
        playbackStateHandler(null);
    };
    return PlaybackToggleButton;
}(togglebutton_1.ToggleButton));
PlaybackToggleButton.CLASS_STOPTOGGLE = 'stoptoggle';
exports.PlaybackToggleButton = PlaybackToggleButton;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles audio muting.
 */
var VolumeToggleButton = (function (_super) {
    __extends(VolumeToggleButton, _super);
    function VolumeToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        var defaultConfig = {
            cssClass: 'ui-volumetogglebutton',
            text: 'Volume/Mute',
            onClass: 'muted',
            offClass: 'unmuted',
        };
        _this.config = _this.mergeConfig(config, defaultConfig, _this.config);
        return _this;
    }
    VolumeToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var muteStateHandler = function () {
            if (player.isMuted()) {
                _this.on();
                // When the volume is unmuted and the volume level is veeeery low, we increase it to 10%. This especially helps
                // in the case when the volume is first turned down to 0 and then the player is muted; when the player gets
                // unmuted it would switch to volume level 0 which would seem like unmuting did not work, and increasing the
                // level a bit helps to overcome this issue.
                if (player.getVolume() < 10) {
                    player.setVolume(10);
                }
            }
            else {
                _this.off();
            }
        };
        var volumeLevelHandler = function () {
            var volumeLevelTens = Math.ceil(player.getVolume() / 10);
            _this.getDomElement().data(_this.prefixCss('volume-level-tens'), String(volumeLevelTens));
            // When the volume is turned down to zero, switch into the mute state of the button. This avoids the usability
            // issue where the volume is turned down to zero, the button shows the muted icon but is not really unmuted, and
            // the next button press would switch it into the mute state, visually staying the same which would seem like
            // an expected unmute did not work.
            if (volumeLevelTens === 0) {
                _this.off();
            }
        };
        player.addEventHandler(player.EVENT.ON_MUTED, muteStateHandler);
        player.addEventHandler(player.EVENT.ON_UNMUTED, muteStateHandler);
        player.addEventHandler(player.EVENT.ON_VOLUME_CHANGED, volumeLevelHandler);
        this.onClick.subscribe(function () {
            if (player.isMuted()) {
                player.unmute('ui-volumetogglebutton');
            }
            else {
                player.mute('ui-volumetogglebutton');
            }
        });
        // Startup init
        muteStateHandler();
        volumeLevelHandler();
    };
    return VolumeToggleButton;
}(togglebutton_1.ToggleButton));
exports.VolumeToggleButton = VolumeToggleButton;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var eventdispatcher_1 = __webpack_require__(3);
var timeout_1 = __webpack_require__(9);
var playerutils_1 = __webpack_require__(12);
/**
 * A seek bar to seek within the player's media. It displays the current playback position, amount of buffed data, seek
 * target, and keeps status about an ongoing seek.
 *
 * The seek bar displays different 'bars':
 *  - the playback position, i.e. the position in the media at which the player current playback pointer is positioned
 *  - the buffer position, which usually is the playback position plus the time span that is already buffered ahead
 *  - the seek position, used to preview to where in the timeline a seek will jump to
 */
var SeekBar = (function (_super) {
    __extends(SeekBar, _super);
    function SeekBar(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        /**
         * Buffer of the the current playback position. The position must be buffered in case the element
         * needs to be refreshed with {@link #refreshPlaybackPosition}.
         * @type {number}
         */
        _this.playbackPositionPercentage = 0;
        // https://hacks.mozilla.org/2013/04/detecting-touch-its-the-why-not-the-how/
        _this.touchSupported = ('ontouchstart' in window);
        _this.seekBarEvents = {
            /**
             * Fired when a scrubbing seek operation is started.
             */
            onSeek: new eventdispatcher_1.EventDispatcher(),
            /**
             * Fired during a scrubbing seek to indicate that the seek preview (i.e. the video frame) should be updated.
             */
            onSeekPreview: new eventdispatcher_1.EventDispatcher(),
            /**
             * Fired when a scrubbing seek has finished or when a direct seek is issued.
             */
            onSeeked: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-seekbar',
            vertical: false,
            smoothPlaybackPositionUpdateIntervalMs: 50,
        }, _this.config);
        _this.label = _this.config.label;
        _this.timelineMarkers = [];
        return _this;
    }
    SeekBar.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        if (this.hasLabel()) {
            this.getLabel().initialize();
        }
    };
    SeekBar.prototype.configure = function (player, uimanager, configureSeek) {
        var _this = this;
        if (configureSeek === void 0) { configureSeek = true; }
        _super.prototype.configure.call(this, player, uimanager);
        // Apply scaling transform to the backdrop bar to have all bars rendered similarly
        // (the call must be up here to be executed for the volume slider as well)
        this.setPosition(this.seekBarBackdrop, 100);
        if (!configureSeek) {
            // The configureSeek flag can be used by subclasses to disable configuration as seek bar. E.g. the volume
            // slider is reusing this component but adds its own functionality, and does not need the seek functionality.
            // This is actually a hack, the proper solution would be for both seek bar and volume sliders to extend
            // a common base slider component and implement their functionality there.
            return;
        }
        var isPlaying = false;
        var isSeeking = false;
        // Update playback and buffer positions
        var playbackPositionHandler = function (event, forceUpdate) {
            if (event === void 0) { event = null; }
            if (forceUpdate === void 0) { forceUpdate = false; }
            if (isSeeking) {
                // We caught a seek preview seek, do not update the seekbar
                return;
            }
            if (player.isLive()) {
                if (player.getMaxTimeShift() === 0) {
                    // This case must be explicitly handled to avoid division by zero
                    _this.setPlaybackPosition(100);
                }
                else {
                    var playbackPositionPercentage = 100 - (100 / player.getMaxTimeShift() * player.getTimeShift());
                    _this.setPlaybackPosition(playbackPositionPercentage);
                }
                // Always show full buffer for live streams
                _this.setBufferPosition(100);
            }
            else {
                var playbackPositionPercentage = 100 / player.getDuration() * player.getCurrentTime();
                var videoBufferLength = player.getVideoBufferLength();
                var audioBufferLength = player.getAudioBufferLength();
                // Calculate the buffer length which is the smaller length of the audio and video buffers. If one of these
                // buffers is not available, we set it's value to MAX_VALUE to make sure that the other real value is taken
                // as the buffer length.
                var bufferLength = Math.min(videoBufferLength != null ? videoBufferLength : Number.MAX_VALUE, audioBufferLength != null ? audioBufferLength : Number.MAX_VALUE);
                // If both buffer lengths are missing, we set the buffer length to zero
                if (bufferLength === Number.MAX_VALUE) {
                    bufferLength = 0;
                }
                var bufferPercentage = 100 / player.getDuration() * bufferLength;
                // Update playback position only in paused state or in the initial startup state where player is neither
                // paused nor playing. Playback updates are handled in the Timeout below.
                if (_this.config.smoothPlaybackPositionUpdateIntervalMs === SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED
                    || forceUpdate || player.isPaused() || (player.isPaused() === player.isPlaying())) {
                    _this.setPlaybackPosition(playbackPositionPercentage);
                }
                _this.setBufferPosition(playbackPositionPercentage + bufferPercentage);
            }
        };
        // Update seekbar upon these events
        // init playback position when the player is ready
        player.addEventHandler(player.EVENT.ON_READY, playbackPositionHandler);
        // update playback position when it changes
        player.addEventHandler(player.EVENT.ON_TIME_CHANGED, playbackPositionHandler);
        // update bufferlevel when buffering is complete
        player.addEventHandler(player.EVENT.ON_STALL_ENDED, playbackPositionHandler);
        // update playback position when a seek has finished
        player.addEventHandler(player.EVENT.ON_SEEKED, playbackPositionHandler);
        // update playback position when a timeshift has finished
        player.addEventHandler(player.EVENT.ON_TIME_SHIFTED, playbackPositionHandler);
        // update bufferlevel when a segment has been downloaded
        player.addEventHandler(player.EVENT.ON_SEGMENT_REQUEST_FINISHED, playbackPositionHandler);
        // update playback position of Cast playback
        player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, playbackPositionHandler);
        this.configureLivePausedTimeshiftUpdater(player, uimanager, playbackPositionHandler);
        // Seek handling
        player.addEventHandler(player.EVENT.ON_SEEK, function () {
            _this.setSeeking(true);
        });
        player.addEventHandler(player.EVENT.ON_SEEKED, function () {
            _this.setSeeking(false);
        });
        player.addEventHandler(player.EVENT.ON_TIME_SHIFT, function () {
            _this.setSeeking(true);
        });
        player.addEventHandler(player.EVENT.ON_TIME_SHIFTED, function () {
            _this.setSeeking(false);
        });
        var seek = function (percentage) {
            if (player.isLive()) {
                player.timeShift(player.getMaxTimeShift() - (player.getMaxTimeShift() * (percentage / 100)), 'ui');
            }
            else {
                player.seek(player.getDuration() * (percentage / 100), 'ui');
            }
        };
        this.onSeek.subscribe(function (sender) {
            isSeeking = true; // track seeking status so we can catch events from seek preview seeks
            // Notify UI manager of started seek
            uimanager.onSeek.dispatch(sender);
            // Save current playback state
            isPlaying = player.isPlaying();
            // Pause playback while seeking
            if (isPlaying) {
                player.pause('ui');
            }
        });
        this.onSeekPreview.subscribe(function (sender, args) {
            // Notify UI manager of seek preview
            uimanager.onSeekPreview.dispatch(sender, args);
        });
        this.onSeekPreview.subscribeRateLimited(function (sender, args) {
            // Rate-limited scrubbing seek
            if (args.scrubbing) {
                seek(args.position);
            }
        }, 200);
        this.onSeeked.subscribe(function (sender, percentage) {
            isSeeking = false;
            // Do the seek
            seek(percentage);
            // Continue playback after seek if player was playing when seek started
            if (isPlaying) {
                player.play('ui');
            }
            // Notify UI manager of finished seek
            uimanager.onSeeked.dispatch(sender);
        });
        if (this.hasLabel()) {
            // Configure a seekbar label that is internal to the seekbar)
            this.getLabel().configure(player, uimanager);
        }
        // Hide seekbar for live sources without timeshift
        var isLive = false;
        var hasTimeShift = false;
        var switchVisibility = function (isLive, hasTimeShift) {
            if (isLive && !hasTimeShift) {
                _this.hide();
            }
            else {
                _this.show();
            }
            playbackPositionHandler(null, true);
            _this.refreshPlaybackPosition();
        };
        var liveStreamDetector = new playerutils_1.PlayerUtils.LiveStreamDetector(player);
        liveStreamDetector.onLiveChanged.subscribe(function (sender, args) {
            isLive = args.live;
            switchVisibility(isLive, hasTimeShift);
        });
        var timeShiftDetector = new playerutils_1.PlayerUtils.TimeShiftAvailabilityDetector(player);
        timeShiftDetector.onTimeShiftAvailabilityChanged.subscribe(function (sender, args) {
            hasTimeShift = args.timeShiftAvailable;
            switchVisibility(isLive, hasTimeShift);
        });
        // Initial detection
        liveStreamDetector.detect();
        timeShiftDetector.detect();
        // Refresh the playback position when the player resized or the UI is configured. The playback position marker
        // is positioned absolutely and must therefore be updated when the size of the seekbar changes.
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () {
            _this.refreshPlaybackPosition();
        });
        // Additionally, when this code is called, the seekbar is not part of the UI yet and therefore does not have a size,
        // resulting in a wrong initial position of the marker. Refreshing it once the UI is configured solved this issue.
        uimanager.onConfigured.subscribe(function () {
            _this.refreshPlaybackPosition();
        });
        // It can also happen that the value changes once the player is ready, or when a new source is loaded, so we need
        // to update on ON_READY too
        player.addEventHandler(player.EVENT.ON_READY, function () {
            _this.refreshPlaybackPosition();
        });
        // Initialize seekbar
        playbackPositionHandler(); // Set the playback position
        this.setBufferPosition(0);
        this.setSeekPosition(0);
        if (this.config.smoothPlaybackPositionUpdateIntervalMs !== SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED) {
            this.configureSmoothPlaybackPositionUpdater(player, uimanager);
        }
        this.configureMarkers(player, uimanager);
    };
    /**
     * Update seekbar while a live stream with DVR window is paused.
     * The playback position stays still and the position indicator visually moves towards the back.
     */
    SeekBar.prototype.configureLivePausedTimeshiftUpdater = function (player, uimanager, playbackPositionHandler) {
        // Regularly update the playback position while the timeout is active
        var pausedTimeshiftUpdater = new timeout_1.Timeout(1000, playbackPositionHandler, true);
        // Start updater when a live stream with timeshift window is paused
        player.addEventHandler(player.EVENT.ON_PAUSED, function () {
            if (player.isLive() && player.getMaxTimeShift() < 0) {
                pausedTimeshiftUpdater.start();
            }
        });
        // Stop updater when playback continues (no matter if the updater was started before)
        player.addEventHandler(player.EVENT.ON_PLAY, function () { return pausedTimeshiftUpdater.clear(); });
    };
    SeekBar.prototype.configureSmoothPlaybackPositionUpdater = function (player, uimanager) {
        var _this = this;
        /*
         * Playback position update
         *
         * We do not update the position directly from the ON_TIME_CHANGED event, because it arrives very jittery and
         * results in a jittery position indicator since the CSS transition time is statically set.
         * To work around this issue, we maintain a local playback position that is updated in a stable regular interval
         * and kept in sync with the player.
         */
        var currentTimeSeekBar = 0;
        var currentTimePlayer = 0;
        var updateIntervalMs = 50;
        var currentTimeUpdateDeltaSecs = updateIntervalMs / 1000;
        this.smoothPlaybackPositionUpdater = new timeout_1.Timeout(updateIntervalMs, function () {
            currentTimeSeekBar += currentTimeUpdateDeltaSecs;
            currentTimePlayer = player.getCurrentTime();
            // Sync currentTime of seekbar to player
            var currentTimeDelta = currentTimeSeekBar - currentTimePlayer;
            // If the delta is larger that 2 secs, directly jump the seekbar to the
            // player time instead of smoothly fast forwarding/rewinding.
            if (Math.abs(currentTimeDelta) > 2) {
                currentTimeSeekBar = currentTimePlayer;
            }
            else if (currentTimeDelta <= -currentTimeUpdateDeltaSecs) {
                currentTimeSeekBar += currentTimeUpdateDeltaSecs;
            }
            else if (currentTimeDelta >= currentTimeUpdateDeltaSecs) {
                currentTimeSeekBar -= currentTimeUpdateDeltaSecs;
            }
            var playbackPositionPercentage = 100 / player.getDuration() * currentTimeSeekBar;
            _this.setPlaybackPosition(playbackPositionPercentage);
        }, true);
        var startSmoothPlaybackPositionUpdater = function () {
            if (!player.isLive()) {
                currentTimeSeekBar = player.getCurrentTime();
                _this.smoothPlaybackPositionUpdater.start();
            }
        };
        var stopSmoothPlaybackPositionUpdater = function () {
            _this.smoothPlaybackPositionUpdater.clear();
        };
        player.addEventHandler(player.EVENT.ON_PLAY, startSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_CAST_PLAYING, startSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_PAUSED, stopSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_CAST_PAUSED, stopSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, stopSmoothPlaybackPositionUpdater);
        player.addEventHandler(player.EVENT.ON_SEEKED, function () {
            currentTimeSeekBar = player.getCurrentTime();
        });
        if (player.isPlaying()) {
            startSmoothPlaybackPositionUpdater();
        }
    };
    SeekBar.prototype.configureMarkers = function (player, uimanager) {
        var _this = this;
        var clearMarkers = function () {
            _this.timelineMarkers = [];
            _this.updateMarkers();
        };
        var setupMarkers = function () {
            clearMarkers();
            var duration = player.getDuration();
            if (duration === Infinity) {
                // Don't generate timeline markers if we don't yet have a duration
                // The duration check is for buggy platforms where the duration is not available instantly (Chrome on Android 4.3)
                return;
            }
            for (var _i = 0, _a = uimanager.getConfig().metadata.markers; _i < _a.length; _i++) {
                var marker = _a[_i];
                var markerPosition = 100 / duration * marker.time; // convert absolute time to percentage
                var markerDuration = 100 / duration * marker.duration;
                _this.timelineMarkers.push({ marker: marker, position: markerPosition, duration: markerDuration });
            }
            // Populate the timeline with the markers
            _this.updateMarkers();
        };
        // Add markers when a source is loaded
        player.addEventHandler(player.EVENT.ON_READY, setupMarkers);
        // Remove markers when unloaded
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, clearMarkers);
        // Update markers when the size of the seekbar changes
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () { return _this.updateMarkers(); });
        // Update markers when a marker is added or removed
        uimanager.getConfig().events.onUpdated.subscribe(setupMarkers);
        uimanager.onRelease.subscribe(function () { return uimanager.getConfig().events.onUpdated.unsubscribe(setupMarkers); });
        // Init markers at startup
        setupMarkers();
    };
    SeekBar.prototype.release = function () {
        _super.prototype.release.call(this);
        if (this.smoothPlaybackPositionUpdater) {
            this.smoothPlaybackPositionUpdater.clear();
        }
    };
    SeekBar.prototype.toDomElement = function () {
        var _this = this;
        if (this.config.vertical) {
            this.config.cssClasses.push('vertical');
        }
        var seekBarContainer = new dom_1.DOM('div', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        var seekBar = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar'),
        });
        this.seekBar = seekBar;
        // Indicator that shows the buffer fill level
        var seekBarBufferLevel = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-bufferlevel'),
        });
        this.seekBarBufferPosition = seekBarBufferLevel;
        // Indicator that shows the current playback position
        var seekBarPlaybackPosition = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-playbackposition'),
        });
        this.seekBarPlaybackPosition = seekBarPlaybackPosition;
        // A marker of the current playback position, e.g. a dot or line
        var seekBarPlaybackPositionMarker = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-playbackposition-marker'),
        });
        this.seekBarPlaybackPositionMarker = seekBarPlaybackPositionMarker;
        // Indicator that show where a seek will go to
        var seekBarSeekPosition = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-seekposition'),
        });
        this.seekBarSeekPosition = seekBarSeekPosition;
        // Indicator that shows the full seekbar
        var seekBarBackdrop = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-backdrop'),
        });
        this.seekBarBackdrop = seekBarBackdrop;
        var seekBarChapterMarkersContainer = new dom_1.DOM('div', {
            'class': this.prefixCss('seekbar-markers'),
        });
        this.seekBarMarkersContainer = seekBarChapterMarkersContainer;
        seekBar.append(this.seekBarBackdrop, this.seekBarBufferPosition, this.seekBarSeekPosition, this.seekBarPlaybackPosition, this.seekBarMarkersContainer, this.seekBarPlaybackPositionMarker);
        var seeking = false;
        // Define handler functions so we can attach/remove them later
        var mouseTouchMoveHandler = function (e) {
            e.preventDefault();
            // Avoid propagation to VR handler
            e.stopPropagation();
            var targetPercentage = 100 * _this.getOffset(e);
            _this.setSeekPosition(targetPercentage);
            _this.setPlaybackPosition(targetPercentage);
            _this.onSeekPreviewEvent(targetPercentage, true);
        };
        var mouseTouchUpHandler = function (e) {
            e.preventDefault();
            // Remove handlers, seek operation is finished
            new dom_1.DOM(document).off('touchmove mousemove', mouseTouchMoveHandler);
            new dom_1.DOM(document).off('touchend mouseup', mouseTouchUpHandler);
            var targetPercentage = 100 * _this.getOffset(e);
            var snappedChapter = _this.getMarkerAtPosition(targetPercentage);
            _this.setSeeking(false);
            seeking = false;
            // Fire seeked event
            _this.onSeekedEvent(snappedChapter ? snappedChapter.position : targetPercentage);
        };
        // A seek always start with a touchstart or mousedown directly on the seekbar.
        // To track a mouse seek also outside the seekbar (for touch events this works automatically),
        // so the user does not need to take care that the mouse always stays on the seekbar, we attach the mousemove
        // and mouseup handlers to the whole document. A seek is triggered when the user lifts the mouse key.
        // A seek mouse gesture is thus basically a click with a long time frame between down and up events.
        seekBar.on('touchstart mousedown', function (e) {
            var isTouchEvent = _this.touchSupported && e instanceof TouchEvent;
            // Prevent selection of DOM elements (also prevents mousedown if current event is touchstart)
            e.preventDefault();
            // Avoid propagation to VR handler
            e.stopPropagation();
            _this.setSeeking(true); // Set seeking class on DOM element
            seeking = true; // Set seek tracking flag
            // Fire seeked event
            _this.onSeekEvent();
            // Add handler to track the seek operation over the whole document
            new dom_1.DOM(document).on(isTouchEvent ? 'touchmove' : 'mousemove', mouseTouchMoveHandler);
            new dom_1.DOM(document).on(isTouchEvent ? 'touchend' : 'mouseup', mouseTouchUpHandler);
        });
        // Display seek target indicator when mouse hovers or finger slides over seekbar
        seekBar.on('touchmove mousemove', function (e) {
            e.preventDefault();
            if (seeking) {
                // During a seek (when mouse is down or touch move active), we need to stop propagation to avoid
                // the VR viewport reacting to the moves.
                e.stopPropagation();
                // Because the stopped propagation inhibits the event on the document, we need to call it from here
                mouseTouchMoveHandler(e);
            }
            var position = 100 * _this.getOffset(e);
            _this.setSeekPosition(position);
            _this.onSeekPreviewEvent(position, false);
            if (_this.hasLabel() && _this.getLabel().isHidden()) {
                _this.getLabel().show();
            }
        });
        // Hide seek target indicator when mouse or finger leaves seekbar
        seekBar.on('touchend mouseleave', function (e) {
            e.preventDefault();
            _this.setSeekPosition(0);
            if (_this.hasLabel()) {
                _this.getLabel().hide();
            }
        });
        seekBarContainer.append(seekBar);
        if (this.label) {
            seekBarContainer.append(this.label.getDomElement());
        }
        return seekBarContainer;
    };
    SeekBar.prototype.updateMarkers = function () {
        var _this = this;
        this.seekBarMarkersContainer.empty();
        var seekBarWidthPx = this.seekBar.width();
        for (var _i = 0, _a = this.timelineMarkers; _i < _a.length; _i++) {
            var marker = _a[_i];
            var markerClasses = ['seekbar-marker'].concat(marker.marker.cssClasses || [])
                .map(function (cssClass) { return _this.prefixCss(cssClass); });
            var cssProperties = {
                'width': marker.position + '%',
            };
            if (marker.duration > 0) {
                var markerWidthPx = Math.round(seekBarWidthPx / 100 * marker.duration);
                cssProperties['border-right-width'] = markerWidthPx + 'px';
                cssProperties['margin-left'] = '0';
            }
            this.seekBarMarkersContainer.append(new dom_1.DOM('div', {
                'class': markerClasses.join(' '),
                'data-marker-time': String(marker.marker.time),
                'data-marker-title': String(marker.marker.title),
            }).css(cssProperties));
        }
    };
    SeekBar.prototype.getMarkerAtPosition = function (percentage) {
        var snappingRange = 1;
        if (this.timelineMarkers.length > 0) {
            for (var _i = 0, _a = this.timelineMarkers; _i < _a.length; _i++) {
                var marker = _a[_i];
                // Handle interval markers
                if (marker.duration > 0
                    && percentage >= marker.position - snappingRange
                    && percentage <= marker.position + marker.duration + snappingRange) {
                    return marker;
                }
                else if (percentage >= marker.position - snappingRange
                    && percentage <= marker.position + snappingRange) {
                    return marker;
                }
            }
        }
        return null;
    };
    /**
     * Gets the horizontal offset of a mouse/touch event point from the left edge of the seek bar.
     * @param eventPageX the pageX coordinate of an event to calculate the offset from
     * @returns {number} a number in the range of [0, 1], where 0 is the left edge and 1 is the right edge
     */
    SeekBar.prototype.getHorizontalOffset = function (eventPageX) {
        var elementOffsetPx = this.seekBar.offset().left;
        var widthPx = this.seekBar.width();
        var offsetPx = eventPageX - elementOffsetPx;
        var offset = 1 / widthPx * offsetPx;
        return this.sanitizeOffset(offset);
    };
    /**
     * Gets the vertical offset of a mouse/touch event point from the bottom edge of the seek bar.
     * @param eventPageY the pageX coordinate of an event to calculate the offset from
     * @returns {number} a number in the range of [0, 1], where 0 is the bottom edge and 1 is the top edge
     */
    SeekBar.prototype.getVerticalOffset = function (eventPageY) {
        var elementOffsetPx = this.seekBar.offset().top;
        var widthPx = this.seekBar.height();
        var offsetPx = eventPageY - elementOffsetPx;
        var offset = 1 / widthPx * offsetPx;
        return 1 - this.sanitizeOffset(offset);
    };
    /**
     * Gets the mouse or touch event offset for the current configuration (horizontal or vertical).
     * @param e the event to calculate the offset from
     * @returns {number} a number in the range of [0, 1]
     * @see #getHorizontalOffset
     * @see #getVerticalOffset
     */
    SeekBar.prototype.getOffset = function (e) {
        if (this.touchSupported && e instanceof TouchEvent) {
            if (this.config.vertical) {
                return this.getVerticalOffset(e.type === 'touchend' ? e.changedTouches[0].pageY : e.touches[0].pageY);
            }
            else {
                return this.getHorizontalOffset(e.type === 'touchend' ? e.changedTouches[0].pageX : e.touches[0].pageX);
            }
        }
        else if (e instanceof MouseEvent) {
            if (this.config.vertical) {
                return this.getVerticalOffset(e.pageY);
            }
            else {
                return this.getHorizontalOffset(e.pageX);
            }
        }
        else {
            if (console) {
                console.warn('invalid event');
            }
            return 0;
        }
    };
    /**
     * Sanitizes the mouse offset to the range of [0, 1].
     *
     * When tracking the mouse outside the seek bar, the offset can be outside the desired range and this method
     * limits it to the desired range. E.g. a mouse event left of the left edge of a seek bar yields an offset below
     * zero, but to display the seek target on the seek bar, we need to limit it to zero.
     *
     * @param offset the offset to sanitize
     * @returns {number} the sanitized offset.
     */
    SeekBar.prototype.sanitizeOffset = function (offset) {
        // Since we track mouse moves over the whole document, the target can be outside the seek range,
        // and we need to limit it to the [0, 1] range.
        if (offset < 0) {
            offset = 0;
        }
        else if (offset > 1) {
            offset = 1;
        }
        return offset;
    };
    /**
     * Sets the position of the playback position indicator.
     * @param percent a number between 0 and 100 as returned by the player
     */
    SeekBar.prototype.setPlaybackPosition = function (percent) {
        this.playbackPositionPercentage = percent;
        // Set position of the bar
        this.setPosition(this.seekBarPlaybackPosition, percent);
        // Set position of the marker
        var totalSize = (this.config.vertical ? (this.seekBar.height() - this.seekBarPlaybackPositionMarker.height()) : this.seekBar.width());
        var px = (totalSize) / 100 * percent;
        if (this.config.vertical) {
            px = this.seekBar.height() - px - this.seekBarPlaybackPositionMarker.height();
        }
        var style = this.config.vertical ?
            // -ms-transform required for IE9
            // -webkit-transform required for Android 4.4 WebView
            {
                'transform': 'translateY(' + px + 'px)',
                '-ms-transform': 'translateY(' + px + 'px)',
                '-webkit-transform': 'translateY(' + px + 'px)',
            } :
            {
                'transform': 'translateX(' + px + 'px)',
                '-ms-transform': 'translateX(' + px + 'px)',
                '-webkit-transform': 'translateX(' + px + 'px)',
            };
        this.seekBarPlaybackPositionMarker.css(style);
    };
    /**
     * Refreshes the playback position. Can be used by subclasses to refresh the position when
     * the size of the component changes.
     */
    SeekBar.prototype.refreshPlaybackPosition = function () {
        this.setPlaybackPosition(this.playbackPositionPercentage);
    };
    /**
     * Sets the position until which media is buffered.
     * @param percent a number between 0 and 100
     */
    SeekBar.prototype.setBufferPosition = function (percent) {
        this.setPosition(this.seekBarBufferPosition, percent);
    };
    /**
     * Sets the position where a seek, if executed, would jump to.
     * @param percent a number between 0 and 100
     */
    SeekBar.prototype.setSeekPosition = function (percent) {
        this.setPosition(this.seekBarSeekPosition, percent);
    };
    /**
     * Set the actual position (width or height) of a DOM element that represent a bar in the seek bar.
     * @param element the element to set the position for
     * @param percent a number between 0 and 100
     */
    SeekBar.prototype.setPosition = function (element, percent) {
        var scale = percent / 100;
        // When the scale is exactly 1 or very near 1 (and the browser internally rounds it to 1), browsers seem to render
        // the elements differently and the height gets slightly off, leading to mismatching heights when e.g. the buffer
        // level bar has a width of 1 and the playback position bar has a width < 1. A jittering buffer level around 1
        // leads to an even worse flickering effect.
        // Various changes in CSS styling and DOM hierarchy did not solve the issue so the workaround is to avoid a scale
        // of exactly 1.
        if (scale >= 0.99999 && scale <= 1.00001) {
            scale = 0.99999;
        }
        var style = this.config.vertical ?
            // -ms-transform required for IE9
            // -webkit-transform required for Android 4.4 WebView
            {
                'transform': 'scaleY(' + scale + ')',
                '-ms-transform': 'scaleY(' + scale + ')',
                '-webkit-transform': 'scaleY(' + scale + ')',
            } :
            {
                'transform': 'scaleX(' + scale + ')',
                '-ms-transform': 'scaleX(' + scale + ')',
                '-webkit-transform': 'scaleX(' + scale + ')',
            };
        element.css(style);
    };
    /**
     * Puts the seek bar into or out of seeking state by adding/removing a class to the DOM element. This can be used
     * to adjust the styling while seeking.
     *
     * @param seeking should be true when entering seek state, false when exiting the seek state
     */
    SeekBar.prototype.setSeeking = function (seeking) {
        if (seeking) {
            this.getDomElement().addClass(this.prefixCss(SeekBar.CLASS_SEEKING));
        }
        else {
            this.getDomElement().removeClass(this.prefixCss(SeekBar.CLASS_SEEKING));
        }
    };
    /**
     * Checks if the seek bar is currently in the seek state.
     * @returns {boolean} true if in seek state, else false
     */
    SeekBar.prototype.isSeeking = function () {
        return this.getDomElement().hasClass(this.prefixCss(SeekBar.CLASS_SEEKING));
    };
    /**
     * Checks if the seek bar has a {@link SeekBarLabel}.
     * @returns {boolean} true if the seek bar has a label, else false
     */
    SeekBar.prototype.hasLabel = function () {
        return this.label != null;
    };
    /**
     * Gets the label of this seek bar.
     * @returns {SeekBarLabel} the label if this seek bar has a label, else null
     */
    SeekBar.prototype.getLabel = function () {
        return this.label;
    };
    SeekBar.prototype.onSeekEvent = function () {
        this.seekBarEvents.onSeek.dispatch(this);
    };
    SeekBar.prototype.onSeekPreviewEvent = function (percentage, scrubbing) {
        var snappedMarker = this.getMarkerAtPosition(percentage);
        var seekPositionPercentage = percentage;
        if (snappedMarker) {
            if (snappedMarker.duration > 0) {
                if (percentage < snappedMarker.position) {
                    // Snap the position to the start of the interval if the seek is within the left snap margin
                    // We know that we are within a snap margin when we are outside the marker interval but still
                    // have a snappedMarker
                    seekPositionPercentage = snappedMarker.position;
                }
                else if (percentage > snappedMarker.position + snappedMarker.duration) {
                    // Snap the position to the end of the interval if the seek is within the right snap margin
                    seekPositionPercentage = snappedMarker.position + snappedMarker.duration;
                }
            }
            else {
                // Position markers always snap to their marker position
                seekPositionPercentage = snappedMarker.position;
            }
        }
        if (this.label) {
            this.label.getDomElement().css({
                'left': seekPositionPercentage + '%',
            });
        }
        this.seekBarEvents.onSeekPreview.dispatch(this, {
            scrubbing: scrubbing,
            position: seekPositionPercentage,
            marker: snappedMarker,
        });
    };
    SeekBar.prototype.onSeekedEvent = function (percentage) {
        this.seekBarEvents.onSeeked.dispatch(this, percentage);
    };
    Object.defineProperty(SeekBar.prototype, "onSeek", {
        /**
         * Gets the event that is fired when a scrubbing seek operation is started.
         * @returns {Event<SeekBar, NoArgs>}
         */
        get: function () {
            return this.seekBarEvents.onSeek.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeekBar.prototype, "onSeekPreview", {
        /**
         * Gets the event that is fired during a scrubbing seek (to indicate that the seek preview, i.e. the video frame,
         * should be updated), or during a normal seek preview when the seek bar is hovered (and the seek target,
         * i.e. the seek bar label, should be updated).
         * @returns {Event<SeekBar, SeekPreviewEventArgs>}
         */
        get: function () {
            return this.seekBarEvents.onSeekPreview.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeekBar.prototype, "onSeeked", {
        /**
         * Gets the event that is fired when a scrubbing seek has finished or when a direct seek is issued.
         * @returns {Event<SeekBar, number>}
         */
        get: function () {
            return this.seekBarEvents.onSeeked.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    SeekBar.prototype.onShowEvent = function () {
        _super.prototype.onShowEvent.call(this);
        // Refresh the position of the playback position when the seek bar becomes visible. To correctly set the position,
        // the DOM element must be fully initialized an have its size calculated, because the position is set as an absolute
        // value calculated from the size. This required size is not known when it is hidden.
        // For such cases, we refresh the position here in onShow because here it is guaranteed that the component knows
        // its size and can set the position correctly.
        this.refreshPlaybackPosition();
    };
    return SeekBar;
}(component_1.Component));
SeekBar.SMOOTH_PLAYBACK_POSITION_UPDATE_DISABLED = -1;
/**
 * The CSS class that is added to the DOM element while the seek bar is in 'seeking' state.
 */
SeekBar.CLASS_SEEKING = 'seeking';
exports.SeekBar = SeekBar;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var uiutils_1 = __webpack_require__(20);
var spacer_1 = __webpack_require__(21);
/**
 * A container for main player control components, e.g. play toggle button, seek bar, volume control, fullscreen toggle
 * button.
 */
var ControlBar = (function (_super) {
    __extends(ControlBar, _super);
    function ControlBar(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-controlbar',
            hidden: true,
        }, _this.config);
        return _this;
    }
    ControlBar.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        // Counts how many components are hovered and block hiding of the control bar
        var hoverStackCount = 0;
        // Track hover status of child components
        uiutils_1.UIUtils.traverseTree(this, function (component) {
            // Do not track hover status of child containers or spacers, only of 'real' controls
            if (component instanceof container_1.Container || component instanceof spacer_1.Spacer) {
                return;
            }
            // Subscribe hover event and keep a count of the number of hovered children
            component.onHoverChanged.subscribe(function (sender, args) {
                if (args.hovered) {
                    hoverStackCount++;
                }
                else {
                    hoverStackCount--;
                }
            });
        });
        uimanager.onControlsShow.subscribe(function () {
            _this.show();
        });
        uimanager.onPreviewControlsHide.subscribe(function (sender, args) {
            // Cancel the hide event if hovered child components block hiding
            args.cancel = (hoverStackCount > 0);
        });
        uimanager.onControlsHide.subscribe(function () {
            _this.hide();
        });
    };
    return ControlBar;
}(container_1.Container));
exports.ControlBar = ControlBar;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var UIUtils;
(function (UIUtils) {
    function traverseTree(component, visit) {
        var recursiveTreeWalker = function (component, parent) {
            visit(component, parent);
            // If the current component is a container, visit it's children
            if (component instanceof container_1.Container) {
                for (var _i = 0, _a = component.getComponents(); _i < _a.length; _i++) {
                    var childComponent = _a[_i];
                    recursiveTreeWalker(childComponent, component);
                }
            }
        };
        // Walk and configure the component tree
        recursiveTreeWalker(component);
    }
    UIUtils.traverseTree = traverseTree;
})(UIUtils = exports.UIUtils || (exports.UIUtils = {}));


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
/**
 * A dummy component that just reserves some space and does nothing else.
 */
var Spacer = (function (_super) {
    __extends(Spacer, _super);
    function Spacer(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-spacer',
        }, _this.config);
        return _this;
    }
    Spacer.prototype.onShowEvent = function () {
        // disable event firing by overwriting and not calling super
    };
    Spacer.prototype.onHideEvent = function () {
        // disable event firing by overwriting and not calling super
    };
    Spacer.prototype.onHoverChangedEvent = function (hovered) {
        // disable event firing by overwriting and not calling super
    };
    return Spacer;
}(component_1.Component));
exports.Spacer = Spacer;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(2);
var selectbox_1 = __webpack_require__(8);
var label_1 = __webpack_require__(6);
var videoqualityselectbox_1 = __webpack_require__(23);
var audioqualityselectbox_1 = __webpack_require__(24);
var timeout_1 = __webpack_require__(9);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * A panel containing a list of {@link SettingsPanelItem items} that represent labelled settings.
 */
var SettingsPanel = (function (_super) {
    __extends(SettingsPanel, _super);
    function SettingsPanel(config) {
        var _this = _super.call(this, config) || this;
        _this.settingsPanelEvents = {
            onSettingsStateChanged: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-settings-panel',
            hideDelay: 3000,
        }, _this.config);
        return _this;
    }
    SettingsPanel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig(); // TODO fix generics type inference
        if (config.hideDelay > -1) {
            this.hideTimeout = new timeout_1.Timeout(config.hideDelay, function () {
                _this.hide();
                _this.hideHoveredSelectBoxes();
            });
            this.onShow.subscribe(function () {
                // Activate timeout when shown
                _this.hideTimeout.start();
            });
            this.getDomElement().on('mouseenter', function () {
                // On mouse enter clear the timeout
                _this.hideTimeout.clear();
            });
            this.getDomElement().on('mouseleave', function () {
                // On mouse leave activate the timeout
                _this.hideTimeout.reset();
            });
            this.onHide.subscribe(function () {
                // Clear timeout when hidden from outside
                _this.hideTimeout.clear();
            });
        }
        // Fire event when the state of a settings-item has changed
        var settingsStateChangedHandler = function () {
            _this.onSettingsStateChangedEvent();
            // Attach marker class to last visible item
            var lastShownItem = null;
            for (var _i = 0, _a = _this.getItems(); _i < _a.length; _i++) {
                var component = _a[_i];
                component.getDomElement().removeClass(_this.prefixCss(SettingsPanel.CLASS_LAST));
                if (component.isShown()) {
                    lastShownItem = component;
                }
            }
            if (lastShownItem) {
                lastShownItem.getDomElement().addClass(_this.prefixCss(SettingsPanel.CLASS_LAST));
            }
        };
        for (var _i = 0, _a = this.getItems(); _i < _a.length; _i++) {
            var component = _a[_i];
            component.onActiveChanged.subscribe(settingsStateChangedHandler);
        }
    };
    /**
     * Hack for IE + Firefox
     * when the settings panel fades out while an item of a select box is still hovered, the select box will not fade out
     * while the settings panel does. This would leave a floating select box, which is just weird
     */
    SettingsPanel.prototype.hideHoveredSelectBoxes = function () {
        this.getItems().forEach(function (item) {
            if (item.isActive() && item.setting instanceof selectbox_1.SelectBox) {
                var selectBox_1 = item.setting;
                var oldDisplay_1 = selectBox_1.getDomElement().css('display');
                // updating the display to none marks the select-box as inactive, so it will be hidden with the rest
                // we just have to make sure to reset this as soon as possible
                selectBox_1.getDomElement().css('display', 'none');
                if (window.requestAnimationFrame) {
                    requestAnimationFrame(function () { selectBox_1.getDomElement().css('display', oldDisplay_1); });
                }
                else {
                    // IE9 has no requestAnimationFrame, set the value directly. It has no optimization about ignoring DOM-changes
                    // between animationFrames
                    selectBox_1.getDomElement().css('display', oldDisplay_1);
                }
            }
        });
    };
    SettingsPanel.prototype.release = function () {
        _super.prototype.release.call(this);
        if (this.hideTimeout) {
            this.hideTimeout.clear();
        }
    };
    /**
     * Checks if there are active settings within this settings panel. An active setting is a setting that is visible
     * and enabled, which the user can interact with.
     * @returns {boolean} true if there are active settings, false if the panel is functionally empty to a user
     */
    SettingsPanel.prototype.hasActiveSettings = function () {
        for (var _i = 0, _a = this.getItems(); _i < _a.length; _i++) {
            var component = _a[_i];
            if (component.isActive()) {
                return true;
            }
        }
        return false;
    };
    SettingsPanel.prototype.getItems = function () {
        return this.config.components.filter(function (component) { return component instanceof SettingsPanelItem; });
    };
    SettingsPanel.prototype.onSettingsStateChangedEvent = function () {
        this.settingsPanelEvents.onSettingsStateChanged.dispatch(this);
    };
    Object.defineProperty(SettingsPanel.prototype, "onSettingsStateChanged", {
        /**
         * Gets the event that is fired when one or more {@link SettingsPanelItem items} have changed state.
         * @returns {Event<SettingsPanel, NoArgs>}
         */
        get: function () {
            return this.settingsPanelEvents.onSettingsStateChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return SettingsPanel;
}(container_1.Container));
SettingsPanel.CLASS_LAST = 'last';
exports.SettingsPanel = SettingsPanel;
/**
 * An item for a {@link SettingsPanel},
 * Containing an optionnal {@link Label} and a component that configures a setting.
 * If the components is a {@link SelectBox} it will handle the logic of displaying it or not
 */
var SettingsPanelItem = (function (_super) {
    __extends(SettingsPanelItem, _super);
    function SettingsPanelItem(label, setting, config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.settingsPanelItemEvents = {
            onActiveChanged: new eventdispatcher_1.EventDispatcher(),
        };
        _this.setting = setting;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-settings-panel-item',
        }, _this.config);
        if (label !== null) {
            if (label instanceof component_1.Component) {
                _this.label = label;
            }
            else {
                _this.label = new label_1.Label({ text: label });
            }
            _this.addComponent(_this.label);
        }
        _this.addComponent(_this.setting);
        return _this;
    }
    SettingsPanelItem.prototype.configure = function (player, uimanager) {
        var _this = this;
        if (this.setting instanceof selectbox_1.SelectBox) {
            var handleConfigItemChanged = function () {
                if (!(_this.setting instanceof selectbox_1.SelectBox)) {
                    return;
                }
                // The minimum number of items that must be available for the setting to be displayed
                // By default, at least two items must be available, else a selection is not possible
                var minItemsToDisplay = 2;
                // Audio/video quality select boxes contain an additional 'auto' mode, which in combination with a single
                // available quality also does not make sense
                if ((_this.setting instanceof videoqualityselectbox_1.VideoQualitySelectBox && _this.setting.hasAutoItem())
                    || _this.setting instanceof audioqualityselectbox_1.AudioQualitySelectBox) {
                    minItemsToDisplay = 3;
                }
                // Hide the setting if no meaningful choice is available
                if (_this.setting.itemCount() < minItemsToDisplay) {
                    _this.hide();
                }
                else {
                    _this.show();
                }
                // Visibility might have changed and therefore the active state might have changed so we fire the event
                // TODO fire only when state has really changed (e.g. check if visibility has really changed)
                _this.onActiveChangedEvent();
            };
            this.setting.onItemAdded.subscribe(handleConfigItemChanged);
            this.setting.onItemRemoved.subscribe(handleConfigItemChanged);
            // Initialize hidden state
            handleConfigItemChanged();
        }
    };
    /**
     * Checks if this settings panel item is active, i.e. visible and enabled and a user can interact with it.
     * @returns {boolean} true if the panel is active, else false
     */
    SettingsPanelItem.prototype.isActive = function () {
        return this.isShown();
    };
    SettingsPanelItem.prototype.onActiveChangedEvent = function () {
        this.settingsPanelItemEvents.onActiveChanged.dispatch(this);
    };
    Object.defineProperty(SettingsPanelItem.prototype, "onActiveChanged", {
        /**
         * Gets the event that is fired when the 'active' state of this item changes.
         * @see #isActive
         * @returns {Event<SettingsPanelItem, NoArgs>}
         */
        get: function () {
            return this.settingsPanelItemEvents.onActiveChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return SettingsPanelItem;
}(container_1.Container));
exports.SettingsPanelItem = SettingsPanelItem;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection between 'auto' and the available video qualities.
 */
var VideoQualitySelectBox = (function (_super) {
    __extends(VideoQualitySelectBox, _super);
    function VideoQualitySelectBox(config) {
        if (config === void 0) { config = {}; }
        return _super.call(this, config) || this;
    }
    VideoQualitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var selectCurrentVideoQuality = function () {
            if (player.getVideoQuality) {
                // Since player 7.3.1
                _this.selectItem(player.getVideoQuality().id);
            }
            else {
                // Backwards compatibility for players <= 7.3.0
                // TODO remove in next major release
                var data = player.getDownloadedVideoData();
                _this.selectItem(data.isAuto ? 'auto' : data.id);
            }
        };
        var updateVideoQualities = function () {
            var videoQualities = player.getAvailableVideoQualities();
            _this.clearItems();
            // Progressive streams do not support automatic quality selection
            _this.hasAuto = player.getStreamType() !== 'progressive';
            if (_this.hasAuto) {
                // Add entry for automatic quality switching (default setting)
                _this.addItem('auto', 'auto');
            }
            // Add video qualities
            for (var _i = 0, videoQualities_1 = videoQualities; _i < videoQualities_1.length; _i++) {
                var videoQuality = videoQualities_1[_i];
                _this.addItem(videoQuality.id, videoQuality.label);
            }
            // Select initial quality
            selectCurrentVideoQuality();
        };
        this.onItemSelected.subscribe(function (sender, value) {
            player.setVideoQuality(value);
        });
        // Update qualities when source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, updateVideoQualities);
        // Update qualities when a new source is loaded
        player.addEventHandler(player.EVENT.ON_READY, updateVideoQualities);
        // Update qualities when the period within a source changes
        player.addEventHandler(player.EVENT.ON_PERIOD_SWITCHED, updateVideoQualities);
        // Update quality selection when quality is changed (from outside)
        if (player.EVENT.ON_VIDEO_QUALITY_CHANGED) {
            // Since player 7.3.1
            player.addEventHandler(player.EVENT.ON_VIDEO_QUALITY_CHANGED, selectCurrentVideoQuality);
        }
        else {
            // Backwards compatibility for players <= 7.3.0
            // TODO remove in next major release
            player.addEventHandler(player.EVENT.ON_VIDEO_DOWNLOAD_QUALITY_CHANGE, selectCurrentVideoQuality);
        }
    };
    /**
     * Returns true if the select box contains an 'auto' item for automatic quality selection mode.
     * @return {boolean}
     */
    VideoQualitySelectBox.prototype.hasAutoItem = function () {
        return this.hasAuto;
    };
    return VideoQualitySelectBox;
}(selectbox_1.SelectBox));
exports.VideoQualitySelectBox = VideoQualitySelectBox;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection between 'auto' and the available audio qualities.
 */
var AudioQualitySelectBox = (function (_super) {
    __extends(AudioQualitySelectBox, _super);
    function AudioQualitySelectBox(config) {
        if (config === void 0) { config = {}; }
        return _super.call(this, config) || this;
    }
    AudioQualitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var selectCurrentAudioQuality = function () {
            if (player.getAudioQuality) {
                // Since player 7.3.1
                _this.selectItem(player.getAudioQuality().id);
            }
            else {
                // Backwards compatibility for players <= 7.3.0
                // TODO remove in next major release
                var data = player.getDownloadedAudioData();
                _this.selectItem(data.isAuto ? 'auto' : data.id);
            }
        };
        var updateAudioQualities = function () {
            var audioQualities = player.getAvailableAudioQualities();
            _this.clearItems();
            // Add entry for automatic quality switching (default setting)
            _this.addItem('auto', 'auto');
            // Add audio qualities
            for (var _i = 0, audioQualities_1 = audioQualities; _i < audioQualities_1.length; _i++) {
                var audioQuality = audioQualities_1[_i];
                _this.addItem(audioQuality.id, audioQuality.label);
            }
            // Select initial quality
            selectCurrentAudioQuality();
        };
        this.onItemSelected.subscribe(function (sender, value) {
            player.setAudioQuality(value);
        });
        // Update qualities when audio track has changed
        player.addEventHandler(player.EVENT.ON_AUDIO_CHANGED, updateAudioQualities);
        // Update qualities when source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, updateAudioQualities);
        // Update qualities when a new source is loaded
        player.addEventHandler(player.EVENT.ON_READY, updateAudioQualities);
        // Update qualities when the period within a source changes
        player.addEventHandler(player.EVENT.ON_PERIOD_SWITCHED, updateAudioQualities);
        // Update quality selection when quality is changed (from outside)
        if (player.EVENT.ON_AUDIO_QUALITY_CHANGED) {
            // Since player 7.3.1
            player.addEventHandler(player.EVENT.ON_AUDIO_QUALITY_CHANGED, selectCurrentAudioQuality);
        }
        else {
            // Backwards compatibility for players <= 7.3.0
            // TODO remove in next major release
            player.addEventHandler(player.EVENT.ON_AUDIO_DOWNLOAD_QUALITY_CHANGE, selectCurrentAudioQuality);
        }
    };
    return AudioQualitySelectBox;
}(selectbox_1.SelectBox));
exports.AudioQualitySelectBox = AudioQualitySelectBox;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
var SubtitleSettingsButton = (function (_super) {
    __extends(SubtitleSettingsButton, _super);
    function SubtitleSettingsButton(config) {
        var _this = _super.call(this, config) || this;
        _this.subtitleSettingsPanel = config.subtitleSettingsPanel;
        _this.settingsPanel = config.settingsPanel;
        return _this;
    }
    return SubtitleSettingsButton;
}(button_1.Button));
exports.SubtitleSettingsButton = SubtitleSettingsButton;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var seekbar_1 = __webpack_require__(18);
/**
 * A simple volume slider component to adjust the player's volume setting.
 */
var VolumeSlider = (function (_super) {
    __extends(VolumeSlider, _super);
    function VolumeSlider(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-volumeslider',
            hideIfVolumeControlProhibited: true,
        }, _this.config);
        return _this;
    }
    VolumeSlider.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager, false);
        var config = this.getConfig();
        if (config.hideIfVolumeControlProhibited && !this.detectVolumeControlAvailability()) {
            this.hide();
            // We can just return from here, because the user will never interact with the control and any configured
            // functionality would only eat resources for no reason.
            return;
        }
        var volumeChangeHandler = function () {
            if (player.isMuted()) {
                _this.setPlaybackPosition(0);
            }
            else {
                _this.setPlaybackPosition(player.getVolume());
            }
        };
        player.addEventHandler(player.EVENT.ON_READY, volumeChangeHandler);
        player.addEventHandler(player.EVENT.ON_VOLUME_CHANGED, volumeChangeHandler);
        player.addEventHandler(player.EVENT.ON_MUTED, volumeChangeHandler);
        player.addEventHandler(player.EVENT.ON_UNMUTED, volumeChangeHandler);
        this.onSeekPreview.subscribeRateLimited(function (sender, args) {
            if (args.scrubbing) {
                player.setVolume(args.position, VolumeSlider.issuerName);
            }
        }, 50);
        this.onSeeked.subscribe(function (sender, percentage) {
            player.setVolume(percentage, VolumeSlider.issuerName);
        });
        // Update the volume slider marker when the player resized, a source is loaded and player is ready,
        // or the UI is configured. Check the seekbar for a detailed description.
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () {
            _this.refreshPlaybackPosition();
        });
        player.addEventHandler(player.EVENT.ON_READY, function () {
            _this.refreshPlaybackPosition();
        });
        uimanager.onConfigured.subscribe(function () {
            _this.refreshPlaybackPosition();
        });
        // Init volume bar
        volumeChangeHandler();
    };
    VolumeSlider.prototype.detectVolumeControlAvailability = function () {
        /*
         * "On iOS devices, the audio level is always under the user’s physical control. The volume property is not
         * settable in JavaScript. Reading the volume property always returns 1."
         * https://developer.apple.com/library/content/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html
         */
        // as muted autoplay gets paused as soon as we unmute it, we may not touch the volume of the actual player so we
        // probe a dummy audio element
        var dummyVideoElement = document.createElement('video');
        // try setting the volume to 0.7 and if it's still 1 we are on a volume control restricted device
        dummyVideoElement.volume = 0.7;
        return dummyVideoElement.volume !== 1;
    };
    return VolumeSlider;
}(seekbar_1.SeekBar));
VolumeSlider.issuerName = 'ui';
exports.VolumeSlider = VolumeSlider;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var label_1 = __webpack_require__(6);
/**
 * Enumerates the types of content that the {@link MetadataLabel} can display.
 */
var MetadataLabelContent;
(function (MetadataLabelContent) {
    /**
     * Title of the data source.
     */
    MetadataLabelContent[MetadataLabelContent["Title"] = 0] = "Title";
    /**
     * Description fo the data source.
     */
    MetadataLabelContent[MetadataLabelContent["Description"] = 1] = "Description";
})(MetadataLabelContent = exports.MetadataLabelContent || (exports.MetadataLabelContent = {}));
/**
 * A label that can be configured to display certain metadata.
 */
var MetadataLabel = (function (_super) {
    __extends(MetadataLabel, _super);
    function MetadataLabel(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClasses: ['label-metadata', 'label-metadata-' + MetadataLabelContent[config.content].toLowerCase()],
        }, _this.config);
        return _this;
    }
    MetadataLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var uiconfig = uimanager.getConfig();
        var init = function () {
            switch (config.content) {
                case MetadataLabelContent.Title:
                    _this.setText(uiconfig.metadata.title);
                    break;
                case MetadataLabelContent.Description:
                    _this.setText(uiconfig.metadata.description);
                    break;
            }
        };
        var unload = function () {
            _this.setText(null);
        };
        // Init label
        init();
        // Reinit label when a new source is loaded
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, init);
        // Clear labels when source is unloaded
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, unload);
    };
    return MetadataLabel;
}(label_1.Label));
exports.MetadataLabel = MetadataLabel;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
/**
 * A click overlay that opens an url in a new tab if clicked.
 */
var ClickOverlay = (function (_super) {
    __extends(ClickOverlay, _super);
    function ClickOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-clickoverlay',
        }, _this.config);
        return _this;
    }
    ClickOverlay.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.setUrl(this.config.url);
        var element = this.getDomElement();
        element.on('click', function () {
            if (element.data('url')) {
                window.open(element.data('url'), '_blank');
            }
        });
    };
    /**
     * Gets the URL that should be followed when the watermark is clicked.
     * @returns {string} the watermark URL
     */
    ClickOverlay.prototype.getUrl = function () {
        return this.getDomElement().data('url');
    };
    ClickOverlay.prototype.setUrl = function (url) {
        if (url === undefined || url == null) {
            url = '';
        }
        this.getDomElement().data('url', url);
    };
    return ClickOverlay;
}(button_1.Button));
exports.ClickOverlay = ClickOverlay;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles the player between windowed and fullscreen view.
 */
var FullscreenToggleButton = (function (_super) {
    __extends(FullscreenToggleButton, _super);
    function FullscreenToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-fullscreentogglebutton',
            text: 'Fullscreen',
        }, _this.config);
        return _this;
    }
    FullscreenToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var fullscreenStateHandler = function () {
            if (player.isFullscreen()) {
                _this.on();
            }
            else {
                _this.off();
            }
        };
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_ENTER, fullscreenStateHandler);
        player.addEventHandler(player.EVENT.ON_FULLSCREEN_EXIT, fullscreenStateHandler);
        this.onClick.subscribe(function () {
            if (player.isFullscreen()) {
                player.exitFullscreen();
            }
            else {
                player.enterFullscreen();
            }
        });
        // Startup init
        fullscreenStateHandler();
    };
    return FullscreenToggleButton;
}(togglebutton_1.ToggleButton));
exports.FullscreenToggleButton = FullscreenToggleButton;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles the video view between normal/mono and VR/stereo.
 */
var VRToggleButton = (function (_super) {
    __extends(VRToggleButton, _super);
    function VRToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-vrtogglebutton',
            text: 'VR',
        }, _this.config);
        return _this;
    }
    VRToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var isVRConfigured = function () {
            // VR availability cannot be checked through getVRStatus() because it is asynchronously populated and not
            // available at UI initialization. As an alternative, we check the VR settings in the config.
            // TODO use getVRStatus() through isVRStereoAvailable() once the player has been rewritten and the status is
            // available in ON_READY
            var config = player.getConfig();
            return config.source && config.source.vr && config.source.vr.contentType !== 'none';
        };
        var isVRStereoAvailable = function () {
            return player.getVRStatus().contentType !== 'none';
        };
        var vrStateHandler = function () {
            if (isVRConfigured() && isVRStereoAvailable()) {
                _this.show(); // show button in case it is hidden
                if (player.getVRStatus().isStereo) {
                    _this.on();
                }
                else {
                    _this.off();
                }
            }
            else {
                _this.hide(); // hide button if no stereo mode available
            }
        };
        var vrButtonVisibilityHandler = function () {
            if (isVRConfigured()) {
                _this.show();
            }
            else {
                _this.hide();
            }
        };
        player.addEventHandler(player.EVENT.ON_VR_MODE_CHANGED, vrStateHandler);
        player.addEventHandler(player.EVENT.ON_VR_STEREO_CHANGED, vrStateHandler);
        player.addEventHandler(player.EVENT.ON_VR_ERROR, vrStateHandler);
        // Hide button when VR source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, vrButtonVisibilityHandler);
        // Show button when a new source is loaded and it's VR
        player.addEventHandler(player.EVENT.ON_READY, vrButtonVisibilityHandler);
        this.onClick.subscribe(function () {
            if (!isVRStereoAvailable()) {
                if (console) {
                    console.log('No VR content');
                }
            }
            else {
                if (player.getVRStatus().isStereo) {
                    player.setVRStereo(false);
                }
                else {
                    player.setVRStereo(true);
                }
            }
        });
        // Set startup visibility
        vrButtonVisibilityHandler();
    };
    return VRToggleButton;
}(togglebutton_1.ToggleButton));
exports.VRToggleButton = VRToggleButton;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var label_1 = __webpack_require__(6);
var playerutils_1 = __webpack_require__(12);
var stringutils_1 = __webpack_require__(10);
var PlaybackTimeLabelMode;
(function (PlaybackTimeLabelMode) {
    PlaybackTimeLabelMode[PlaybackTimeLabelMode["CurrentTime"] = 0] = "CurrentTime";
    PlaybackTimeLabelMode[PlaybackTimeLabelMode["TotalTime"] = 1] = "TotalTime";
    PlaybackTimeLabelMode[PlaybackTimeLabelMode["CurrentAndTotalTime"] = 2] = "CurrentAndTotalTime";
})(PlaybackTimeLabelMode = exports.PlaybackTimeLabelMode || (exports.PlaybackTimeLabelMode = {}));
/**
 * A label that display the current playback time and the total time through {@link PlaybackTimeLabel#setTime setTime}
 * or any string through {@link PlaybackTimeLabel#setText setText}.
 */
var PlaybackTimeLabel = (function (_super) {
    __extends(PlaybackTimeLabel, _super);
    function PlaybackTimeLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-playbacktimelabel',
            timeLabelMode: PlaybackTimeLabelMode.CurrentAndTotalTime,
            hideInLivePlayback: false,
        }, _this.config);
        return _this;
    }
    PlaybackTimeLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var live = false;
        var liveCssClass = this.prefixCss('ui-playbacktimelabel-live');
        var liveEdgeCssClass = this.prefixCss('ui-playbacktimelabel-live-edge');
        var minWidth = 0;
        var liveClickHandler = function () {
            player.timeShift(0);
        };
        var updateLiveState = function () {
            // Player is playing a live stream when the duration is infinite
            live = player.isLive();
            // Attach/detach live marker class
            if (live) {
                _this.getDomElement().addClass(liveCssClass);
                _this.setText('Live');
                if (config.hideInLivePlayback) {
                    _this.hide();
                }
                _this.onClick.subscribe(liveClickHandler);
                updateLiveTimeshiftState();
            }
            else {
                _this.getDomElement().removeClass(liveCssClass);
                _this.getDomElement().removeClass(liveEdgeCssClass);
                _this.show();
                _this.onClick.unsubscribe(liveClickHandler);
            }
        };
        var updateLiveTimeshiftState = function () {
            if (!live) {
                return;
            }
            // The player is only at the live edge iff the stream is not shifted and it is actually playing or playback has
            // never been started (meaning it isn't paused). A player that is paused is always behind the live edge.
            // An exception is made for live streams without a timeshift window, because here we "stop" playback instead
            // of pausing it (from a UI perspective), so we keep the live edge indicator on because a play would always
            // resume at the live edge.
            var isTimeshifted = player.getTimeShift() < 0;
            var isTimeshiftAvailable = player.getMaxTimeShift() < 0;
            if (!isTimeshifted && (!player.isPaused() || !isTimeshiftAvailable)) {
                _this.getDomElement().addClass(liveEdgeCssClass);
            }
            else {
                _this.getDomElement().removeClass(liveEdgeCssClass);
            }
        };
        var liveStreamDetector = new playerutils_1.PlayerUtils.LiveStreamDetector(player);
        liveStreamDetector.onLiveChanged.subscribe(function (sender, args) {
            live = args.live;
            updateLiveState();
        });
        liveStreamDetector.detect(); // Initial detection
        var playbackTimeHandler = function () {
            if (!live && player.getDuration() !== Infinity) {
                _this.setTime(player.getCurrentTime(), player.getDuration());
            }
            // To avoid 'jumping' in the UI by varying label sizes due to non-monospaced fonts,
            // we gradually increase the min-width with the content to reach a stable size.
            var width = _this.getDomElement().width();
            if (width > minWidth) {
                minWidth = width;
                _this.getDomElement().css({
                    'min-width': minWidth + 'px',
                });
            }
        };
        player.addEventHandler(player.EVENT.ON_TIME_CHANGED, playbackTimeHandler);
        player.addEventHandler(player.EVENT.ON_SEEKED, playbackTimeHandler);
        player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, playbackTimeHandler);
        player.addEventHandler(player.EVENT.ON_TIME_SHIFT, updateLiveTimeshiftState);
        player.addEventHandler(player.EVENT.ON_TIME_SHIFTED, updateLiveTimeshiftState);
        player.addEventHandler(player.EVENT.ON_PLAY, updateLiveTimeshiftState);
        player.addEventHandler(player.EVENT.ON_PAUSED, updateLiveTimeshiftState);
        var init = function () {
            // Reset min-width when a new source is ready (especially for switching VOD/Live modes where the label content
            // changes)
            minWidth = 0;
            _this.getDomElement().css({
                'min-width': null,
            });
            // Set time format depending on source duration
            _this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?
                stringutils_1.StringUtils.FORMAT_HHMMSS : stringutils_1.StringUtils.FORMAT_MMSS;
            // Update time after the format has been set
            playbackTimeHandler();
        };
        player.addEventHandler(player.EVENT.ON_READY, init);
        init();
    };
    /**
     * Sets the current playback time and total duration.
     * @param playbackSeconds the current playback time in seconds
     * @param durationSeconds the total duration in seconds
     */
    PlaybackTimeLabel.prototype.setTime = function (playbackSeconds, durationSeconds) {
        var currentTime = stringutils_1.StringUtils.secondsToTime(playbackSeconds, this.timeFormat);
        var totalTime = stringutils_1.StringUtils.secondsToTime(durationSeconds, this.timeFormat);
        switch (this.config.timeLabelMode) {
            case PlaybackTimeLabelMode.CurrentTime:
                this.setText("" + currentTime);
                break;
            case PlaybackTimeLabelMode.TotalTime:
                this.setText("" + totalTime);
                break;
            case PlaybackTimeLabelMode.CurrentAndTotalTime:
                this.setText(currentTime + " / " + totalTime);
                break;
        }
    };
    /**
     * Sets the current time format
     * @param timeFormat the time format
     */
    PlaybackTimeLabel.prototype.setTimeFormat = function (timeFormat) {
        this.timeFormat = timeFormat;
    };
    return PlaybackTimeLabel;
}(label_1.Label));
exports.PlaybackTimeLabel = PlaybackTimeLabel;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles visibility of a settings panel.
 */
var SettingsToggleButton = (function (_super) {
    __extends(SettingsToggleButton, _super);
    function SettingsToggleButton(config) {
        var _this = _super.call(this, config) || this;
        if (!config.settingsPanel) {
            throw new Error('Required SettingsPanel is missing');
        }
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-settingstogglebutton',
            text: 'Settings',
            settingsPanel: null,
            autoHideWhenNoActiveSettings: true,
        }, _this.config);
        return _this;
    }
    SettingsToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig(); // TODO fix generics type inference
        var settingsPanel = config.settingsPanel;
        this.onClick.subscribe(function () {
            settingsPanel.toggleHidden();
        });
        settingsPanel.onShow.subscribe(function () {
            // Set toggle status to on when the settings panel shows
            _this.on();
        });
        settingsPanel.onHide.subscribe(function () {
            // Set toggle status to off when the settings panel hides
            _this.off();
        });
        // Handle automatic hiding of the button if there are no settings for the user to interact with
        if (config.autoHideWhenNoActiveSettings) {
            // Setup handler to show/hide button when the settings change
            var settingsPanelItemsChangedHandler = function () {
                if (settingsPanel.hasActiveSettings()) {
                    if (_this.isHidden()) {
                        _this.show();
                    }
                }
                else {
                    if (_this.isShown()) {
                        _this.hide();
                    }
                }
            };
            // Wire the handler to the event
            settingsPanel.onSettingsStateChanged.subscribe(settingsPanelItemsChangedHandler);
            // Call handler for first init at startup
            settingsPanelItemsChangedHandler();
        }
    };
    return SettingsToggleButton;
}(togglebutton_1.ToggleButton));
exports.SettingsToggleButton = SettingsToggleButton;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var eventdispatcher_1 = __webpack_require__(3);
var arrayutils_1 = __webpack_require__(11);
var ListSelector = (function (_super) {
    __extends(ListSelector, _super);
    function ListSelector(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.listSelectorEvents = {
            onItemAdded: new eventdispatcher_1.EventDispatcher(),
            onItemRemoved: new eventdispatcher_1.EventDispatcher(),
            onItemSelected: new eventdispatcher_1.EventDispatcher(),
        };
        _this.config = _this.mergeConfig(config, {
            items: [],
            cssClass: 'ui-listselector',
        }, _this.config);
        _this.items = _this.config.items;
        return _this;
    }
    ListSelector.prototype.getItemIndex = function (key) {
        for (var index in this.items) {
            if (key === this.items[index].key) {
                return parseInt(index);
            }
        }
        return -1;
    };
    /**
     * Checks if the specified item is part of this selector.
     * @param key the key of the item to check
     * @returns {boolean} true if the item is part of this selector, else false
     */
    ListSelector.prototype.hasItem = function (key) {
        return this.getItemIndex(key) > -1;
    };
    /**
     * Adds an item to this selector by appending it to the end of the list of items. If an item with the specified
     * key already exists, it is replaced.
     * @param key the key of the item to add
     * @param label the (human-readable) label of the item to add
     */
    ListSelector.prototype.addItem = function (key, label) {
        var listItem = { key: key, label: label };
        // Apply filter function
        if (this.config.filter && !this.config.filter(listItem)) {
            return;
        }
        // Apply translator function
        if (this.config.translator) {
            listItem.label = this.config.translator(listItem);
        }
        this.removeItem(key); // Try to remove key first to get overwrite behavior and avoid duplicate keys
        this.items.push(listItem);
        this.onItemAddedEvent(key);
    };
    /**
     * Removes an item from this selector.
     * @param key the key of the item to remove
     * @returns {boolean} true if removal was successful, false if the item is not part of this selector
     */
    ListSelector.prototype.removeItem = function (key) {
        var index = this.getItemIndex(key);
        if (index > -1) {
            arrayutils_1.ArrayUtils.remove(this.items, this.items[index]);
            this.onItemRemovedEvent(key);
            return true;
        }
        return false;
    };
    /**
     * Selects an item from the items in this selector.
     * @param key the key of the item to select
     * @returns {boolean} true is the selection was successful, false if the selected item is not part of the selector
     */
    ListSelector.prototype.selectItem = function (key) {
        if (key === this.selectedItem) {
            // itemConfig is already selected, suppress any further action
            return true;
        }
        var index = this.getItemIndex(key);
        if (index > -1) {
            this.selectedItem = key;
            this.onItemSelectedEvent(key);
            return true;
        }
        return false;
    };
    /**
     * Returns the key of the selected item.
     * @returns {string} the key of the selected item or null if no item is selected
     */
    ListSelector.prototype.getSelectedItem = function () {
        return this.selectedItem;
    };
    /**
     * Removes all items from this selector.
     */
    ListSelector.prototype.clearItems = function () {
        // local copy for iteration after clear
        var items = this.items;
        // clear items
        this.items = [];
        // clear the selection as the selected item is also removed
        this.selectedItem = null;
        // fire events
        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
            var item = items_1[_i];
            this.onItemRemovedEvent(item.key);
        }
    };
    /**
     * Returns the number of items in this selector.
     * @returns {number}
     */
    ListSelector.prototype.itemCount = function () {
        return Object.keys(this.items).length;
    };
    ListSelector.prototype.onItemAddedEvent = function (key) {
        this.listSelectorEvents.onItemAdded.dispatch(this, key);
    };
    ListSelector.prototype.onItemRemovedEvent = function (key) {
        this.listSelectorEvents.onItemRemoved.dispatch(this, key);
    };
    ListSelector.prototype.onItemSelectedEvent = function (key) {
        this.listSelectorEvents.onItemSelected.dispatch(this, key);
    };
    Object.defineProperty(ListSelector.prototype, "onItemAdded", {
        /**
         * Gets the event that is fired when an item is added to the list of items.
         * @returns {Event<ListSelector<Config>, string>}
         */
        get: function () {
            return this.listSelectorEvents.onItemAdded.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListSelector.prototype, "onItemRemoved", {
        /**
         * Gets the event that is fired when an item is removed from the list of items.
         * @returns {Event<ListSelector<Config>, string>}
         */
        get: function () {
            return this.listSelectorEvents.onItemRemoved.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListSelector.prototype, "onItemSelected", {
        /**
         * Gets the event that is fired when an item is selected from the list of items.
         * @returns {Event<ListSelector<Config>, string>}
         */
        get: function () {
            return this.listSelectorEvents.onItemSelected.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return ListSelector;
}(component_1.Component));
exports.ListSelector = ListSelector;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var settingspanel_1 = __webpack_require__(22);
var fontcolorselectbox_1 = __webpack_require__(35);
var fontopacityselectbox_1 = __webpack_require__(36);
var fontfamilyselectbox_1 = __webpack_require__(37);
var fontsizeselectbox_1 = __webpack_require__(38);
var backgroundcolorselectbox_1 = __webpack_require__(39);
var backgroundopacityselectbox_1 = __webpack_require__(40);
var windowcolorselectbox_1 = __webpack_require__(41);
var windowopacityselectbox_1 = __webpack_require__(42);
var characteredgeselectbox_1 = __webpack_require__(43);
var subtitlesettingsmanager_1 = __webpack_require__(73);
var subtitlesettingsclosebutton_1 = __webpack_require__(45);
var subtitlesettingsresetbutton_1 = __webpack_require__(46);
/**
 * SubtitleSettingsPanel is a settings panel specific to subtitles settings
 **/
var SubtitleSettingsPanel = (function (_super) {
    __extends(SubtitleSettingsPanel, _super);
    function SubtitleSettingsPanel(config) {
        var _this = _super.call(this, config) || this;
        _this.overlay = config.overlay;
        var manager = new subtitlesettingsmanager_1.SubtitleSettingsManager();
        _this.config = _this.mergeConfig(config, {
            components: [
                new settingspanel_1.SettingsPanelItem('Font size', new fontsizeselectbox_1.FontSizeSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Font family', new fontfamilyselectbox_1.FontFamilySelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Font color', new fontcolorselectbox_1.FontColorSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Font opacity', new fontopacityselectbox_1.FontOpacitySelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Character edge', new characteredgeselectbox_1.CharacterEdgeSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Background color', new backgroundcolorselectbox_1.BackgroundColorSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Background opacity', new backgroundopacityselectbox_1.BackgroundOpacitySelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Window color', new windowcolorselectbox_1.WindowColorSelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem('Window opacity', new windowopacityselectbox_1.WindowOpacitySelectBox({
                    overlay: _this.overlay, settingsManager: manager,
                })),
                new settingspanel_1.SettingsPanelItem(new subtitlesettingsclosebutton_1.SubtitleSettingsCloseButton({
                    subtitleSettingsPanel: _this, settingsPanel: config.settingsPanel,
                }), new subtitlesettingsresetbutton_1.SubtitleSettingsResetButton({
                    settingsManager: manager,
                })),
            ],
        }, _this.config);
        return _this;
    }
    SubtitleSettingsPanel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onShow.subscribe(function () {
            _this.overlay.enablePreviewSubtitleLabel();
        });
        this.onHide.subscribe(function () {
            _this.overlay.removePreviewSubtitleLabel();
        });
    };
    return SubtitleSettingsPanel;
}(settingspanel_1.SettingsPanel));
exports.SubtitleSettingsPanel = SubtitleSettingsPanel;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different font colors.
 */
var FontColorSelectBox = (function (_super) {
    __extends(FontColorSelectBox, _super);
    function FontColorSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontColorSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('white', 'white');
        this.addItem('black', 'black');
        this.addItem('red', 'red');
        this.addItem('green', 'green');
        this.addItem('blue', 'blue');
        this.addItem('cyan', 'cyan');
        this.addItem('yellow', 'yellow');
        this.addItem('magenta', 'magenta');
        var setColorAndOpacity = function () {
            if (_this.settingsManager.fontColor.isSet() && _this.settingsManager.fontOpacity.isSet()) {
                _this.toggleOverlayClass('fontcolor-' + _this.settingsManager.fontColor.value + _this.settingsManager.fontOpacity.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
        };
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.fontColor.value = key;
        });
        this.settingsManager.fontColor.onChanged.subscribe(function (sender, property) {
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.fontColor.isSet()) {
                // ... clear the opacity when the color is not set
                _this.settingsManager.fontOpacity.clear();
            }
            else if (!_this.settingsManager.fontOpacity.isSet()) {
                // ... set an opacity when the color is set
                _this.settingsManager.fontOpacity.value = '100';
            }
            _this.selectItem(property.value);
            setColorAndOpacity();
        });
        this.settingsManager.fontOpacity.onChanged.subscribe(function () {
            setColorAndOpacity();
        });
        // Load initial value
        if (this.settingsManager.fontColor.isSet()) {
            this.selectItem(this.settingsManager.fontColor.value);
        }
    };
    return FontColorSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.FontColorSelectBox = FontColorSelectBox;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different font colors.
 */
var FontOpacitySelectBox = (function (_super) {
    __extends(FontOpacitySelectBox, _super);
    function FontOpacitySelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontOpacitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('100', '100%');
        this.addItem('75', '75%');
        this.addItem('50', '50%');
        this.addItem('25', '25%');
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.fontOpacity.value = key;
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.fontOpacity.isSet()) {
                // ... clear the color when the opacity is not set
                _this.settingsManager.fontColor.clear();
            }
            else if (!_this.settingsManager.fontColor.isSet()) {
                // ... set a color when the opacity is set
                _this.settingsManager.fontColor.value = 'white';
            }
        });
        // Update selected item when value is set from somewhere else
        this.settingsManager.fontOpacity.onChanged.subscribe(function (sender, property) {
            _this.selectItem(property.value);
        });
        // Load initial value
        if (this.settingsManager.fontOpacity.isSet()) {
            this.selectItem(this.settingsManager.fontOpacity.value);
        }
    };
    return FontOpacitySelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.FontOpacitySelectBox = FontOpacitySelectBox;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different font family.
 */
var FontFamilySelectBox = (function (_super) {
    __extends(FontFamilySelectBox, _super);
    function FontFamilySelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontFamilySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('monospacedserif', 'monospaced serif');
        this.addItem('proportionalserif', 'proportional serif');
        this.addItem('monospacedsansserif', 'monospaced sans serif');
        this.addItem('proportionalsansserif', 'proportional sans serif');
        this.addItem('casual', 'casual');
        this.addItem('cursive', 'cursive');
        this.addItem('smallcapital', 'small capital');
        this.settingsManager.fontFamily.onChanged.subscribe(function (sender, property) {
            if (property.isSet()) {
                _this.toggleOverlayClass('fontfamily-' + property.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
            // Select the item in case the property was set from outside
            _this.selectItem(property.value);
        });
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.fontFamily.value = key;
        });
        // Load initial value
        if (this.settingsManager.fontFamily.isSet()) {
            this.selectItem(this.settingsManager.fontFamily.value);
        }
    };
    return FontFamilySelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.FontFamilySelectBox = FontFamilySelectBox;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different font colors.
 */
var FontSizeSelectBox = (function (_super) {
    __extends(FontSizeSelectBox, _super);
    function FontSizeSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FontSizeSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('50', '50%');
        this.addItem('75', '75%');
        this.addItem('100', '100%');
        this.addItem('150', '150%');
        this.addItem('200', '200%');
        this.addItem('300', '300%');
        this.addItem('400', '400%');
        this.settingsManager.fontSize.onChanged.subscribe(function (sender, property) {
            if (property.isSet()) {
                _this.toggleOverlayClass('fontsize-' + property.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
            // Select the item in case the property was set from outside
            _this.selectItem(property.value);
        });
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.fontSize.value = key;
        });
        // Load initial value
        if (this.settingsManager.fontSize.isSet()) {
            this.selectItem(this.settingsManager.fontSize.value);
        }
    };
    return FontSizeSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.FontSizeSelectBox = FontSizeSelectBox;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different background colors.
 */
var BackgroundColorSelectBox = (function (_super) {
    __extends(BackgroundColorSelectBox, _super);
    function BackgroundColorSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BackgroundColorSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('white', 'white');
        this.addItem('black', 'black');
        this.addItem('red', 'red');
        this.addItem('green', 'green');
        this.addItem('blue', 'blue');
        this.addItem('cyan', 'cyan');
        this.addItem('yellow', 'yellow');
        this.addItem('magenta', 'magenta');
        var setColorAndOpacity = function () {
            if (_this.settingsManager.backgroundColor.isSet() && _this.settingsManager.backgroundOpacity.isSet()) {
                _this.toggleOverlayClass('bgcolor-' + _this.settingsManager.backgroundColor.value + _this.settingsManager.backgroundOpacity.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
        };
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.backgroundColor.value = key;
        });
        this.settingsManager.backgroundColor.onChanged.subscribe(function (sender, property) {
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.backgroundColor.isSet()) {
                // ... clear the opacity when the color is not set
                _this.settingsManager.backgroundOpacity.clear();
            }
            else if (!_this.settingsManager.backgroundOpacity.isSet()) {
                // ... set an opacity when the color is set
                _this.settingsManager.backgroundOpacity.value = '100';
            }
            _this.selectItem(property.value);
            setColorAndOpacity();
        });
        this.settingsManager.backgroundOpacity.onChanged.subscribe(function () {
            setColorAndOpacity();
        });
        // Load initial value
        if (this.settingsManager.backgroundColor.isSet()) {
            this.selectItem(this.settingsManager.backgroundColor.value);
        }
    };
    return BackgroundColorSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.BackgroundColorSelectBox = BackgroundColorSelectBox;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different background opacity.
 */
var BackgroundOpacitySelectBox = (function (_super) {
    __extends(BackgroundOpacitySelectBox, _super);
    function BackgroundOpacitySelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BackgroundOpacitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('100', '100%');
        this.addItem('75', '75%');
        this.addItem('50', '50%');
        this.addItem('25', '25%');
        this.addItem('0', '0%');
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.backgroundOpacity.value = key;
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.backgroundOpacity.isSet()) {
                // ... clear the color when the opacity is not set
                _this.settingsManager.backgroundColor.clear();
            }
            else if (!_this.settingsManager.backgroundColor.isSet()) {
                // ... set a color when the opacity is set
                _this.settingsManager.backgroundColor.value = 'black';
            }
        });
        // Update selected item when value is set from somewhere else
        this.settingsManager.backgroundOpacity.onChanged.subscribe(function (sender, property) {
            _this.selectItem(property.value);
        });
        // Load initial value
        if (this.settingsManager.backgroundOpacity.isSet()) {
            this.selectItem(this.settingsManager.backgroundOpacity.value);
        }
    };
    return BackgroundOpacitySelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.BackgroundOpacitySelectBox = BackgroundOpacitySelectBox;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different background colors.
 */
var WindowColorSelectBox = (function (_super) {
    __extends(WindowColorSelectBox, _super);
    function WindowColorSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WindowColorSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('white', 'white');
        this.addItem('black', 'black');
        this.addItem('red', 'red');
        this.addItem('green', 'green');
        this.addItem('blue', 'blue');
        this.addItem('cyan', 'cyan');
        this.addItem('yellow', 'yellow');
        this.addItem('magenta', 'magenta');
        var setColorAndOpacity = function () {
            if (_this.settingsManager.windowColor.isSet() && _this.settingsManager.windowOpacity.isSet()) {
                _this.toggleOverlayClass('windowcolor-' + _this.settingsManager.windowColor.value + _this.settingsManager.windowOpacity.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
        };
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.windowColor.value = key;
        });
        this.settingsManager.windowColor.onChanged.subscribe(function (sender, property) {
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.windowColor.isSet()) {
                // ... clear the opacity when the color is not set
                _this.settingsManager.windowOpacity.clear();
            }
            else if (!_this.settingsManager.windowOpacity.isSet()) {
                // ... set an opacity when the color is set
                _this.settingsManager.windowOpacity.value = '100';
            }
            _this.selectItem(property.value);
            setColorAndOpacity();
        });
        this.settingsManager.windowOpacity.onChanged.subscribe(function () {
            setColorAndOpacity();
        });
        // Load initial value
        if (this.settingsManager.windowColor.isSet()) {
            this.selectItem(this.settingsManager.windowColor.value);
        }
    };
    return WindowColorSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.WindowColorSelectBox = WindowColorSelectBox;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different background opacity.
 */
var WindowOpacitySelectBox = (function (_super) {
    __extends(WindowOpacitySelectBox, _super);
    function WindowOpacitySelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WindowOpacitySelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('100', '100%');
        this.addItem('75', '75%');
        this.addItem('50', '50%');
        this.addItem('25', '25%');
        this.addItem('0', '0%');
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.windowOpacity.value = key;
            // Color and opacity go together, so we need to...
            if (!_this.settingsManager.windowOpacity.isSet()) {
                // ... clear the color when the opacity is not set
                _this.settingsManager.windowColor.clear();
            }
            else if (!_this.settingsManager.windowColor.isSet()) {
                // ... set a color when the opacity is set
                _this.settingsManager.windowColor.value = 'black';
            }
        });
        // Update selected item when value is set from somewhere else
        this.settingsManager.windowOpacity.onChanged.subscribe(function (sender, property) {
            _this.selectItem(property.value);
        });
        // Load initial value
        if (this.settingsManager.windowOpacity.isSet()) {
            this.selectItem(this.settingsManager.windowOpacity.value);
        }
    };
    return WindowOpacitySelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.WindowOpacitySelectBox = WindowOpacitySelectBox;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingselectbox_1 = __webpack_require__(4);
/**
 * A select box providing a selection of different character edge.
 */
var CharacterEdgeSelectBox = (function (_super) {
    __extends(CharacterEdgeSelectBox, _super);
    function CharacterEdgeSelectBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CharacterEdgeSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addItem(null, 'default');
        this.addItem('raised', 'raised');
        this.addItem('depressed', 'depressed');
        this.addItem('uniform', 'uniform');
        this.addItem('dropshadowed', 'drop shadowed');
        this.settingsManager.characterEdge.onChanged.subscribe(function (sender, property) {
            if (property.isSet()) {
                _this.toggleOverlayClass('characteredge-' + property.value);
            }
            else {
                _this.toggleOverlayClass(null);
            }
            // Select the item in case the property was set from outside
            _this.selectItem(property.value);
        });
        this.onItemSelected.subscribe(function (sender, key) {
            _this.settingsManager.characterEdge.value = key;
        });
        // Load initial value
        if (this.settingsManager.characterEdge.isSet()) {
            this.selectItem(this.settingsManager.characterEdge.value);
        }
    };
    return CharacterEdgeSelectBox;
}(subtitlesettingselectbox_1.SubtitleSettingSelectBox));
exports.CharacterEdgeSelectBox = CharacterEdgeSelectBox;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var StorageUtils;
(function (StorageUtils) {
    var hasLocalStorageCache;
    function hasLocalStorage() {
        if (hasLocalStorageCache) {
            return hasLocalStorageCache;
        }
        // hasLocalStorage is used to safely ensure we can use localStorage
        // taken from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage
        var storage = window['localStorage'];
        try {
            var x = '__storage_test__';
            storage.setItem(x, x);
            storage.removeItem(x);
            hasLocalStorageCache = true;
        }
        catch (e) {
            hasLocalStorageCache = e instanceof DOMException && (
            // everything except Firefox
            e.code === 22 ||
                // Firefox
                e.code === 1014 ||
                // test name field too, because code might not be present
                // everything except Firefox
                e.name === 'QuotaExceededError' ||
                // Firefox
                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&
                // acknowledge QuotaExceededError only if there's something already stored
                storage.length !== 0;
        }
        return hasLocalStorageCache;
    }
    StorageUtils.hasLocalStorage = hasLocalStorage;
    /**
     * Stores a string item into localStorage.
     * @param key the item's key
     * @param data the item's data
     */
    function setItem(key, data) {
        if (StorageUtils.hasLocalStorage()) {
            window.localStorage.setItem(key, data);
        }
    }
    StorageUtils.setItem = setItem;
    /**
     * Gets an item's string value from the localStorage.
     * @param key the key to look up its associated value
     * @return {string | null} Returns the string if found, null if there is no data stored for the key
     */
    function getItem(key) {
        if (StorageUtils.hasLocalStorage()) {
            return window.localStorage.getItem(key);
        }
        else {
            return null;
        }
    }
    StorageUtils.getItem = getItem;
    /**
     * Stores an object into localStorage. The object will be serialized to JSON. The following types are supported
     * in addition to the default types:
     *  - ColorUtils.Color
     *
     * @param key the key to store the data to
     * @param data the object to store
     */
    function setObject(key, data) {
        if (StorageUtils.hasLocalStorage()) {
            var json = JSON.stringify(data);
            setItem(key, json);
        }
    }
    StorageUtils.setObject = setObject;
    /**
     * Gets an object for the given key from localStorage. The object will be deserialized from JSON. Beside the
     * default types, the following types are supported:
     *  - ColorUtils.Color
     *
     * @param key the key to look up its associated object
     * @return {any} Returns the object if found, null otherwise
     */
    function getObject(key) {
        if (StorageUtils.hasLocalStorage()) {
            var json = getItem(key);
            if (key) {
                var object = JSON.parse(json);
                return object;
            }
        }
        return null;
    }
    StorageUtils.getObject = getObject;
})(StorageUtils = exports.StorageUtils || (exports.StorageUtils = {}));


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingsbutton_1 = __webpack_require__(25);
/**
 * A button that toggles the option menu for subtitles
 */
var SubtitleSettingsCloseButton = (function (_super) {
    __extends(SubtitleSettingsCloseButton, _super);
    function SubtitleSettingsCloseButton(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitlesettingsclosebutton',
            text: 'Back',
        }, _this.config);
        return _this;
    }
    SubtitleSettingsCloseButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            _this.subtitleSettingsPanel.hide();
            _this.settingsPanel.show();
        });
    };
    return SubtitleSettingsCloseButton;
}(subtitlesettingsbutton_1.SubtitleSettingsButton));
exports.SubtitleSettingsCloseButton = SubtitleSettingsCloseButton;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
/**
 * A button that resets all subtitle settings to their defaults.
 */
var SubtitleSettingsResetButton = (function (_super) {
    __extends(SubtitleSettingsResetButton, _super);
    function SubtitleSettingsResetButton(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitlesettingsresetbutton',
            text: 'Reset',
        }, _this.config);
        return _this;
    }
    SubtitleSettingsResetButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            _this.config.settingsManager.reset();
        });
    };
    return SubtitleSettingsResetButton;
}(button_1.Button));
exports.SubtitleSettingsResetButton = SubtitleSettingsResetButton;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var dom_1 = __webpack_require__(1);
var SubtitleSettingsLabel = (function (_super) {
    __extends(SubtitleSettingsLabel, _super);
    function SubtitleSettingsLabel(config) {
        var _this = _super.call(this, config) || this;
        _this.opener = config.opener;
        _this.text = config.text;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-label',
            components: [
                _this.opener,
            ],
        }, _this.config);
        return _this;
    }
    SubtitleSettingsLabel.prototype.toDomElement = function () {
        var labelElement = new dom_1.DOM('span', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        }).append(new dom_1.DOM('span', {}).html(this.text), this.opener.getDomElement());
        return labelElement;
    };
    return SubtitleSettingsLabel;
}(container_1.Container));
exports.SubtitleSettingsLabel = SubtitleSettingsLabel;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var subtitlesettingsbutton_1 = __webpack_require__(25);
/**
 * A button that toggles the option menu for subtitles
 */
var SubtitleSettingsOpenButton = (function (_super) {
    __extends(SubtitleSettingsOpenButton, _super);
    function SubtitleSettingsOpenButton(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitlesettingsopenbutton',
            text: 'Subtitles settings',
        }, _this.config);
        return _this;
    }
    SubtitleSettingsOpenButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            _this.subtitleSettingsPanel.show();
            _this.settingsPanel.hide();
        });
    };
    return SubtitleSettingsOpenButton;
}(subtitlesettingsbutton_1.SubtitleSettingsButton));
exports.SubtitleSettingsOpenButton = SubtitleSettingsOpenButton;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection between available audio tracks (e.g. different languages).
 */
var AudioTrackSelectBox = (function (_super) {
    __extends(AudioTrackSelectBox, _super);
    function AudioTrackSelectBox(config) {
        if (config === void 0) { config = {}; }
        return _super.call(this, config) || this;
    }
    AudioTrackSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var selectCurrentAudioTrack = function () {
            var currentAudioTrack = player.getAudio();
            // HLS streams don't always provide this, so we have to check
            if (currentAudioTrack) {
                _this.selectItem(currentAudioTrack.id);
            }
        };
        var updateAudioTracks = function () {
            var audioTracks = player.getAvailableAudio();
            _this.clearItems();
            // Add audio tracks
            for (var _i = 0, audioTracks_1 = audioTracks; _i < audioTracks_1.length; _i++) {
                var audioTrack = audioTracks_1[_i];
                _this.addItem(audioTrack.id, audioTrack.label);
            }
            // Select the correct audio track after the tracks have been added
            // This is also important in case we missed the `ON_AUDIO_CHANGED` event, e.g. when `playback.audioLanguage`
            // is configured but the event is fired before the UI is created.
            selectCurrentAudioTrack();
        };
        this.onItemSelected.subscribe(function (sender, value) {
            player.setAudio(value);
        });
        // Update selection when selected track has changed
        player.addEventHandler(player.EVENT.ON_AUDIO_CHANGED, selectCurrentAudioTrack);
        // Update tracks when source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, updateAudioTracks);
        // Update tracks when a new source is loaded
        player.addEventHandler(player.EVENT.ON_READY, updateAudioTracks);
        // Update tracks when the period within a source changes
        player.addEventHandler(player.EVENT.ON_PERIOD_SWITCHED, updateAudioTracks);
        // Update tracks when a track is added or removed (since player 7.1.4)
        if (player.EVENT.ON_AUDIO_ADDED && player.EVENT.ON_AUDIO_REMOVED) {
            player.addEventHandler(player.EVENT.ON_AUDIO_ADDED, updateAudioTracks);
            player.addEventHandler(player.EVENT.ON_AUDIO_REMOVED, updateAudioTracks);
        }
        // Populate tracks at startup
        updateAudioTracks();
    };
    return AudioTrackSelectBox;
}(selectbox_1.SelectBox));
exports.AudioTrackSelectBox = AudioTrackSelectBox;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var component_1 = __webpack_require__(2);
var stringutils_1 = __webpack_require__(10);
var imageloader_1 = __webpack_require__(74);
/**
 * A label for a {@link SeekBar} that can display the seek target time, a thumbnail, and title (e.g. chapter title).
 */
var SeekBarLabel = (function (_super) {
    __extends(SeekBarLabel, _super);
    function SeekBarLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.timeLabel = new label_1.Label({ cssClasses: ['seekbar-label-time'] });
        _this.titleLabel = new label_1.Label({ cssClasses: ['seekbar-label-title'] });
        _this.thumbnail = new component_1.Component({ cssClasses: ['seekbar-thumbnail'] });
        _this.thumbnailImageLoader = new imageloader_1.ImageLoader();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-seekbar-label',
            components: [new container_1.Container({
                    components: [
                        _this.thumbnail,
                        new container_1.Container({
                            components: [_this.titleLabel, _this.timeLabel],
                            cssClass: 'seekbar-label-metadata',
                        })
                    ],
                    cssClass: 'seekbar-label-inner',
                })],
            hidden: true,
        }, _this.config);
        return _this;
    }
    SeekBarLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var appliedMarkerCssClasses = [];
        uimanager.onSeekPreview.subscribeRateLimited(function (sender, args) {
            if (player.isLive()) {
                var maxTimeShift = player.getMaxTimeShift();
                var time = maxTimeShift - maxTimeShift * (args.position / 100);
                _this.setTime(time);
            }
            else {
                if (args.marker) {
                    _this.setTitleText(args.marker.marker.title);
                }
                else {
                    _this.setTitleText(null);
                }
                var time = player.getDuration() * (args.position / 100);
                _this.setTime(time);
                _this.setThumbnail(player.getThumb(time));
            }
            // Remove CSS classes from previous marker
            if (appliedMarkerCssClasses.length > 0) {
                _this.getDomElement().removeClass(appliedMarkerCssClasses.join(' '));
                appliedMarkerCssClasses = [];
            }
            // Add CSS classes of current marker
            if (args.marker) {
                var cssClasses = (args.marker.marker.cssClasses || []).map(function (cssClass) { return _this.prefixCss(cssClass); });
                _this.getDomElement().addClass(cssClasses.join(' '));
                appliedMarkerCssClasses = cssClasses;
            }
        }, 100);
        var init = function () {
            // Set time format depending on source duration
            _this.timeFormat = Math.abs(player.isLive() ? player.getMaxTimeShift() : player.getDuration()) >= 3600 ?
                stringutils_1.StringUtils.FORMAT_HHMMSS : stringutils_1.StringUtils.FORMAT_MMSS;
        };
        player.addEventHandler(player.EVENT.ON_READY, init);
        init();
    };
    /**
     * Sets arbitrary text on the label.
     * @param text the text to show on the label
     */
    SeekBarLabel.prototype.setText = function (text) {
        this.timeLabel.setText(text);
    };
    /**
     * Sets a time to be displayed on the label.
     * @param seconds the time in seconds to display on the label
     */
    SeekBarLabel.prototype.setTime = function (seconds) {
        this.setText(stringutils_1.StringUtils.secondsToTime(seconds, this.timeFormat));
    };
    /**
     * Sets the text on the title label.
     * @param text the text to show on the label
     */
    SeekBarLabel.prototype.setTitleText = function (text) {
        this.titleLabel.setText(text);
    };
    /**
     * Sets or removes a thumbnail on the label.
     * @param thumbnail the thumbnail to display on the label or null to remove a displayed thumbnail
     */
    SeekBarLabel.prototype.setThumbnail = function (thumbnail) {
        if (thumbnail === void 0) { thumbnail = null; }
        var thumbnailElement = this.thumbnail.getDomElement();
        if (thumbnail == null) {
            thumbnailElement.css({
                'background-image': null,
                'display': null,
                'width': null,
                'height': null,
            });
        }
        else {
            // We use the thumbnail image loader to make sure the thumbnail is loaded and it's size is known before be can
            // calculate the CSS properties and set them on the element.
            this.thumbnailImageLoader.load(thumbnail.url, function (url, width, height) {
                var thumbnailCountX = width / thumbnail.w;
                var thumbnailCountY = height / thumbnail.h;
                var thumbnailIndexX = thumbnail.x / thumbnail.w;
                var thumbnailIndexY = thumbnail.y / thumbnail.h;
                var sizeX = 100 * thumbnailCountX;
                var sizeY = 100 * thumbnailCountY;
                var offsetX = 100 * thumbnailIndexX;
                var offsetY = 100 * thumbnailIndexY;
                var aspectRatio = 1 / thumbnail.w * thumbnail.h;
                // The thumbnail size is set by setting the CSS 'width' and 'padding-bottom' properties. 'padding-bottom' is
                // used because it is relative to the width and can be used to set the aspect ratio of the thumbnail.
                // A default value for width is set in the stylesheet and can be overwritten from there or anywhere else.
                thumbnailElement.css({
                    'display': 'inherit',
                    'background-image': "url(" + thumbnail.url + ")",
                    'padding-bottom': 100 * aspectRatio + "%",
                    'background-size': sizeX + "% " + sizeY + "%",
                    'background-position': "-" + offsetX + "% -" + offsetY + "%",
                });
            });
        }
    };
    return SeekBarLabel;
}(container_1.Container));
exports.SeekBarLabel = SeekBarLabel;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection between available subtitle and caption tracks.
 */
var SubtitleSelectBox = (function (_super) {
    __extends(SubtitleSelectBox, _super);
    function SubtitleSelectBox(config) {
        if (config === void 0) { config = {}; }
        return _super.call(this, config) || this;
    }
    SubtitleSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var selectCurrentSubtitle = function () {
            var currentSubtitle = player.getSubtitle();
            if (currentSubtitle) {
                _this.selectItem(currentSubtitle.id);
            }
        };
        var updateSubtitles = function () {
            _this.clearItems();
            for (var _i = 0, _a = player.getAvailableSubtitles(); _i < _a.length; _i++) {
                var subtitle = _a[_i];
                _this.addItem(subtitle.id, subtitle.label);
            }
            // Select the correct subtitle after the subtitles have been added
            selectCurrentSubtitle();
        };
        this.onItemSelected.subscribe(function (sender, value) {
            player.setSubtitle(value === 'null' ? null : value);
        });
        // React to API events
        player.addEventHandler(player.EVENT.ON_SUBTITLE_ADDED, updateSubtitles);
        player.addEventHandler(player.EVENT.ON_SUBTITLE_CHANGED, selectCurrentSubtitle);
        player.addEventHandler(player.EVENT.ON_SUBTITLE_REMOVED, updateSubtitles);
        // Update subtitles when source goes away
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, updateSubtitles);
        // Update subtitles when a new source is loaded
        player.addEventHandler(player.EVENT.ON_READY, updateSubtitles);
        // Update subtitles when the period within a source changes
        player.addEventHandler(player.EVENT.ON_PERIOD_SWITCHED, updateSubtitles);
        // Populate subtitles at startup
        updateSubtitles();
    };
    return SubtitleSelectBox;
}(selectbox_1.SelectBox));
exports.SubtitleSelectBox = SubtitleSelectBox;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var controlbar_1 = __webpack_require__(19);
var eventdispatcher_1 = __webpack_require__(3);
/**
 * Overlays the player to display subtitles.
 */
var SubtitleOverlay = (function (_super) {
    __extends(SubtitleOverlay, _super);
    function SubtitleOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.preprocessLabelEventCallback = new eventdispatcher_1.EventDispatcher();
        _this.previewSubtitleActive = false;
        _this.previewSubtitle = new SubtitleLabel({ text: 'example subtitle' });
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitle-overlay',
        }, _this.config);
        return _this;
    }
    SubtitleOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var subtitleManager = new ActiveSubtitleManager();
        this.subtitleManager = subtitleManager;
        player.addEventHandler(player.EVENT.ON_CUE_ENTER, function (event) {
            // Sanitize cue data (must be done before the cue ID is generated in subtitleManager.cueEnter)
            if (event.position) {
                // Sometimes the positions are undefined, we assume them to be zero
                event.position.row = event.position.row || 0;
                event.position.column = event.position.column || 0;
            }
            var labelToAdd = subtitleManager.cueEnter(event);
            _this.preprocessLabelEventCallback.dispatch(event, labelToAdd);
            if (_this.previewSubtitleActive) {
                _this.removeComponent(_this.previewSubtitle);
            }
            _this.addComponent(labelToAdd);
            _this.updateComponents();
            _this.show();
        });
        player.addEventHandler(player.EVENT.ON_CUE_EXIT, function (event) {
            var labelToRemove = subtitleManager.cueExit(event);
            if (labelToRemove) {
                _this.removeComponent(labelToRemove);
                _this.updateComponents();
            }
            if (!subtitleManager.hasCues) {
                if (!_this.previewSubtitleActive) {
                    _this.hide();
                }
                else {
                    _this.addComponent(_this.previewSubtitle);
                    _this.updateComponents();
                }
            }
        });
        var subtitleClearHandler = function () {
            _this.hide();
            subtitleManager.clear();
            _this.removeComponents();
            _this.updateComponents();
        };
        player.addEventHandler(player.EVENT.ON_AUDIO_CHANGED, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_SUBTITLE_CHANGED, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_SEEK, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_TIME_SHIFT, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, subtitleClearHandler);
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, subtitleClearHandler);
        uimanager.onComponentShow.subscribe(function (component) {
            if (component instanceof controlbar_1.ControlBar) {
                _this.getDomElement().addClass(_this.prefixCss(SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE));
            }
        });
        uimanager.onComponentHide.subscribe(function (component) {
            if (component instanceof controlbar_1.ControlBar) {
                _this.getDomElement().removeClass(_this.prefixCss(SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE));
            }
        });
        this.configureCea608Captions(player, uimanager);
        // Init
        subtitleClearHandler();
    };
    SubtitleOverlay.prototype.configureCea608Captions = function (player, uimanager) {
        var _this = this;
        // The calculated font size
        var fontSize = 0;
        // The required letter spacing spread the text characters evenly across the grid
        var fontLetterSpacing = 0;
        // Flag telling if a font size calculation is required of if the current values are valid
        var fontSizeCalculationRequired = true;
        // Flag telling if the CEA-608 mode is enabled
        var enabled = false;
        var updateCEA608FontSize = function () {
            var dummyLabel = new SubtitleLabel({ text: 'X' });
            dummyLabel.getDomElement().css({
                // By using a large font size we do not need to use multiple letters and can get still an
                // accurate measurement even though the returned size is an integer value
                'font-size': '200px',
                'line-height': '200px',
                'visibility': 'hidden',
            });
            _this.addComponent(dummyLabel);
            _this.updateComponents();
            _this.show();
            var dummyLabelCharWidth = dummyLabel.getDomElement().width();
            var dummyLabelCharHeight = dummyLabel.getDomElement().height();
            var fontSizeRatio = dummyLabelCharWidth / dummyLabelCharHeight;
            _this.removeComponent(dummyLabel);
            _this.updateComponents();
            if (!_this.subtitleManager.hasCues) {
                _this.hide();
            }
            // We subtract 1px here to avoid line breaks at the right border of the subtitle overlay that can happen
            // when texts contain whitespaces. It's probably some kind of pixel rounding issue in the browser's
            // layouting, but the actual reason could not be determined. Aiming for a target width - 1px would work in
            // most browsers, but Safari has a "quantized" font size rendering with huge steps in between so we need
            // to subtract some more pixels to avoid line breaks there as well.
            var subtitleOverlayWidth = _this.getDomElement().width() - 10;
            var subtitleOverlayHeight = _this.getDomElement().height();
            // The size ratio of the letter grid
            var fontGridSizeRatio = (dummyLabelCharWidth * SubtitleOverlay.CEA608_NUM_COLUMNS) /
                (dummyLabelCharHeight * SubtitleOverlay.CEA608_NUM_ROWS);
            // The size ratio of the available space for the grid
            var subtitleOverlaySizeRatio = subtitleOverlayWidth / subtitleOverlayHeight;
            if (subtitleOverlaySizeRatio > fontGridSizeRatio) {
                // When the available space is wider than the text grid, the font size is simply
                // determined by the height of the available space.
                fontSize = subtitleOverlayHeight / SubtitleOverlay.CEA608_NUM_ROWS;
                // Calculate the additional letter spacing required to evenly spread the text across the grid's width
                var gridSlotWidth = subtitleOverlayWidth / SubtitleOverlay.CEA608_NUM_COLUMNS;
                var fontCharWidth = fontSize * fontSizeRatio;
                fontLetterSpacing = gridSlotWidth - fontCharWidth;
            }
            else {
                // When the available space is not wide enough, texts would vertically overlap if we take
                // the height as a base for the font size, so we need to limit the height. We do that
                // by determining the font size by the width of the available space.
                fontSize = subtitleOverlayWidth / SubtitleOverlay.CEA608_NUM_COLUMNS / fontSizeRatio;
                fontLetterSpacing = 0;
            }
            // Update font-size of all active subtitle labels
            for (var _i = 0, _a = _this.getComponents(); _i < _a.length; _i++) {
                var label = _a[_i];
                if (label instanceof SubtitleLabel) {
                    label.getDomElement().css({
                        'font-size': fontSize + "px",
                        'letter-spacing': fontLetterSpacing + "px",
                    });
                }
            }
        };
        player.addEventHandler(player.EVENT.ON_PLAYER_RESIZE, function () {
            if (enabled) {
                updateCEA608FontSize();
            }
            else {
                fontSizeCalculationRequired = true;
            }
        });
        this.preprocessLabelEventCallback.subscribe(function (event, label) {
            var isCEA608 = event.position != null;
            if (!isCEA608) {
                // Skip all non-CEA608 cues
                return;
            }
            if (!enabled) {
                enabled = true;
                _this.getDomElement().addClass(_this.prefixCss(SubtitleOverlay.CLASS_CEA_608));
                // We conditionally update the font size by this flag here to avoid updating every time a subtitle
                // is added into an empty overlay. Because we reset the overlay when all subtitles are gone, this
                // would trigger an unnecessary update every time, but it's only required under certain conditions,
                // e.g. after the player size has changed.
                if (fontSizeCalculationRequired) {
                    updateCEA608FontSize();
                    fontSizeCalculationRequired = false;
                }
            }
            label.getDomElement().css({
                'left': event.position.column * SubtitleOverlay.CEA608_COLUMN_OFFSET + "%",
                'top': event.position.row * SubtitleOverlay.CEA608_ROW_OFFSET + "%",
                'font-size': fontSize + "px",
                'letter-spacing': fontLetterSpacing + "px",
            });
        });
        var reset = function () {
            _this.getDomElement().removeClass(_this.prefixCss(SubtitleOverlay.CLASS_CEA_608));
            enabled = false;
        };
        player.addEventHandler(player.EVENT.ON_CUE_EXIT, function () {
            if (!_this.subtitleManager.hasCues) {
                // Disable CEA-608 mode when all subtitles are gone (to allow correct formatting and
                // display of other types of subtitles, e.g. the formatting preview subtitle)
                reset();
            }
        });
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, reset);
        player.addEventHandler(player.EVENT.ON_SUBTITLE_CHANGED, reset);
    };
    SubtitleOverlay.prototype.enablePreviewSubtitleLabel = function () {
        this.previewSubtitleActive = true;
        if (!this.subtitleManager.hasCues) {
            this.addComponent(this.previewSubtitle);
            this.updateComponents();
            this.show();
        }
    };
    SubtitleOverlay.prototype.removePreviewSubtitleLabel = function () {
        this.previewSubtitleActive = false;
        this.removeComponent(this.previewSubtitle);
        this.updateComponents();
    };
    return SubtitleOverlay;
}(container_1.Container));
SubtitleOverlay.CLASS_CONTROLBAR_VISIBLE = 'controlbar-visible';
SubtitleOverlay.CLASS_CEA_608 = 'cea608';
// The number of rows in a cea608 grid
SubtitleOverlay.CEA608_NUM_ROWS = 15;
// The number of columns in a cea608 grid
SubtitleOverlay.CEA608_NUM_COLUMNS = 32;
// The offset in percent for one row (which is also the height of a row)
SubtitleOverlay.CEA608_ROW_OFFSET = 100 / SubtitleOverlay.CEA608_NUM_ROWS;
// The offset in percent for one column (which is also the width of a column)
SubtitleOverlay.CEA608_COLUMN_OFFSET = 100 / SubtitleOverlay.CEA608_NUM_COLUMNS;
exports.SubtitleOverlay = SubtitleOverlay;
var SubtitleLabel = (function (_super) {
    __extends(SubtitleLabel, _super);
    function SubtitleLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-subtitle-label',
        }, _this.config);
        return _this;
    }
    return SubtitleLabel;
}(label_1.Label));
var ActiveSubtitleManager = (function () {
    function ActiveSubtitleManager() {
        this.activeSubtitleCueMap = {};
        this.activeSubtitleCueCount = 0;
    }
    /**
     * Calculates a unique ID for a subtitle cue, which is needed to associate an ON_CUE_ENTER with its ON_CUE_EXIT
     * event so we can remove the correct subtitle in ON_CUE_EXIT when multiple subtitles are active at the same time.
     * The start time plus the text should make a unique identifier, and in the only case where a collision
     * can happen, two similar texts will be displayed at a similar time and a similar position (or without position).
     * The start time should always be known, because it is required to schedule the ON_CUE_ENTER event. The end time
     * must not necessarily be known and therefore cannot be used for the ID.
     * @param event
     * @return {string}
     */
    ActiveSubtitleManager.calculateId = function (event) {
        var id = event.start + '-' + event.text;
        if (event.position) {
            id += '-' + event.position.row + '-' + event.position.column;
        }
        return id;
    };
    /**
     * Adds a subtitle cue to the manager and returns the label that should be added to the subtitle overlay.
     * @param event
     * @return {SubtitleLabel}
     */
    ActiveSubtitleManager.prototype.cueEnter = function (event) {
        var id = ActiveSubtitleManager.calculateId(event);
        var label = new SubtitleLabel({
            // Prefer the HTML subtitle text if set, else use the plain text
            text: event.html || event.text,
        });
        // Create array for id if it does not exist
        this.activeSubtitleCueMap[id] = this.activeSubtitleCueMap[id] || [];
        // Add cue
        this.activeSubtitleCueMap[id].push({ event: event, label: label });
        this.activeSubtitleCueCount++;
        return label;
    };
    /**
     * Returns the label associated with an already added cue.
     * @param event
     * @return {SubtitleLabel}
     */
    ActiveSubtitleManager.prototype.getCues = function (event) {
        var id = ActiveSubtitleManager.calculateId(event);
        var activeSubtitleCues = this.activeSubtitleCueMap[id];
        if (activeSubtitleCues && activeSubtitleCues.length > 0) {
            return activeSubtitleCues.map(function (cue) { return cue.label; });
        }
        else {
            return null;
        }
    };
    /**
     * Removes the subtitle cue from the manager and returns the label that should be removed from the subtitle overlay,
     * or null if there is no associated label existing (e.g. because all labels have been {@link #clear cleared}.
     * @param event
     * @return {SubtitleLabel|null}
     */
    ActiveSubtitleManager.prototype.cueExit = function (event) {
        var id = ActiveSubtitleManager.calculateId(event);
        var activeSubtitleCues = this.activeSubtitleCueMap[id];
        if (activeSubtitleCues && activeSubtitleCues.length > 0) {
            // Remove cue
            /* We apply the FIFO approach here and remove the oldest cue from the associated id. When there are multiple cues
             * with the same id, there is no way to know which one of the cues is to be deleted, so we just hope that FIFO
             * works fine. Theoretically it can happen that two cues with colliding ids are removed at different times, in
             * the wrong order. This rare case has yet to be observed. If it ever gets an issue, we can take the unstable
             * cue end time (which can change between ON_CUE_ENTER and ON_CUE_EXIT IN ON_CUE_UPDATE) and use it as an
             * additional hint to try and remove the correct one of the colliding cues.
             */
            var activeSubtitleCue = activeSubtitleCues.shift();
            this.activeSubtitleCueCount--;
            return activeSubtitleCue.label;
        }
        else {
            return null;
        }
    };
    Object.defineProperty(ActiveSubtitleManager.prototype, "cueCount", {
        /**
         * Returns the number of active subtitle cues.
         * @return {number}
         */
        get: function () {
            // We explicitly count the cues to save an Array.reduce on every cueCount call (which can happen frequently)
            return this.activeSubtitleCueCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActiveSubtitleManager.prototype, "hasCues", {
        /**
         * Returns true if there are active subtitle cues, else false.
         * @return {boolean}
         */
        get: function () {
            return this.cueCount > 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Removes all subtitle cues from the manager.
     */
    ActiveSubtitleManager.prototype.clear = function () {
        this.activeSubtitleCueMap = {};
        this.activeSubtitleCueCount = 0;
    };
    return ActiveSubtitleManager;
}());


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles casting to a Cast receiver.
 */
var CastToggleButton = (function (_super) {
    __extends(CastToggleButton, _super);
    function CastToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-casttogglebutton',
            text: 'Google Cast',
        }, _this.config);
        return _this;
    }
    CastToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            if (player.isCastAvailable()) {
                if (player.isCasting()) {
                    player.castStop();
                }
                else {
                    player.castVideo();
                }
            }
            else {
                if (console) {
                    console.log('Cast unavailable');
                }
            }
        });
        var castAvailableHander = function () {
            if (player.isCastAvailable()) {
                _this.show();
            }
            else {
                _this.hide();
            }
        };
        player.addEventHandler(player.EVENT.ON_CAST_AVAILABLE, castAvailableHander);
        // Toggle button 'on' state
        player.addEventHandler(player.EVENT.ON_CAST_WAITING_FOR_DEVICE, function () {
            _this.on();
        });
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function () {
            // When a session is resumed, there is no ON_CAST_START event, so we also need to toggle here for such cases
            _this.on();
        });
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, function () {
            _this.off();
        });
        // Startup init
        castAvailableHander(); // Hide button if Cast not available
        if (player.isCasting()) {
            this.on();
        }
    };
    return CastToggleButton;
}(togglebutton_1.ToggleButton));
exports.CastToggleButton = CastToggleButton;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
/**
 * Overlays the player and displays the status of a Cast session.
 */
var CastStatusOverlay = (function (_super) {
    __extends(CastStatusOverlay, _super);
    function CastStatusOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.statusLabel = new label_1.Label({ cssClass: 'ui-cast-status-label' });
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-cast-status-overlay',
            components: [_this.statusLabel],
            hidden: true,
        }, _this.config);
        return _this;
    }
    CastStatusOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        player.addEventHandler(player.EVENT.ON_CAST_WAITING_FOR_DEVICE, function (event) {
            _this.show();
            // Get device name and update status text while connecting
            var castDeviceName = event.castPayload.deviceName;
            _this.statusLabel.setText("Connecting to <strong>" + castDeviceName + "</strong>...");
        });
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, function (event) {
            // Session is started or resumed
            // For cases when a session is resumed, we do not receive the previous events and therefore show the status panel
            // here too
            _this.show();
            var castDeviceName = event.deviceName;
            _this.statusLabel.setText("Playing on <strong>" + castDeviceName + "</strong>");
        });
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, function (event) {
            // Cast session gone, hide the status panel
            _this.hide();
        });
    };
    return CastStatusOverlay;
}(container_1.Container));
exports.CastStatusOverlay = CastStatusOverlay;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var tvnoisecanvas_1 = __webpack_require__(75);
/**
 * Overlays the player and displays error messages.
 */
var ErrorMessageOverlay = (function (_super) {
    __extends(ErrorMessageOverlay, _super);
    function ErrorMessageOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.errorLabel = new label_1.Label({ cssClass: 'ui-errormessage-label' });
        _this.tvNoiseBackground = new tvnoisecanvas_1.TvNoiseCanvas();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-errormessage-overlay',
            components: [_this.tvNoiseBackground, _this.errorLabel],
            hidden: true,
        }, _this.config);
        return _this;
    }
    ErrorMessageOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        player.addEventHandler(player.EVENT.ON_ERROR, function (event) {
            var message = event.message;
            // Process message translations
            if (config.messages) {
                if (typeof config.messages === 'function') {
                    // Translation function for all errors
                    message = config.messages(event);
                }
                else if (config.messages[event.code]) {
                    // It's not a translation function, so it must be a map of strings or translation functions
                    var customMessage = config.messages[event.code];
                    if (typeof customMessage === 'string') {
                        message = customMessage;
                    }
                    else {
                        // The message is a translation function, so we call it
                        message = customMessage(event);
                    }
                }
            }
            _this.errorLabel.setText(message);
            _this.tvNoiseBackground.start();
            _this.show();
        });
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, function (event) {
            if (_this.isShown()) {
                _this.tvNoiseBackground.stop();
                _this.hide();
            }
        });
    };
    ErrorMessageOverlay.prototype.release = function () {
        _super.prototype.release.call(this);
        // Canvas rendering must be explicitly stopped, else it just continues forever and hogs resources
        this.tvNoiseBackground.stop();
    };
    return ErrorMessageOverlay;
}(container_1.Container));
exports.ErrorMessageOverlay = ErrorMessageOverlay;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var metadatalabel_1 = __webpack_require__(27);
/**
 * Displays a title bar containing a label with the title of the video.
 */
var TitleBar = (function (_super) {
    __extends(TitleBar, _super);
    function TitleBar(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-titlebar',
            hidden: true,
            components: [
                new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Title }),
                new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Description }),
            ],
            keepHiddenWithoutMetadata: false,
        }, _this.config);
        return _this;
    }
    TitleBar.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var shouldBeShown = !this.isHidden();
        var hasMetadataText = true; // Flag to track if any metadata label contains text
        var checkMetadataTextAndUpdateVisibility = function () {
            hasMetadataText = false;
            // Iterate through metadata labels and check if at least one of them contains text
            for (var _i = 0, _a = _this.getComponents(); _i < _a.length; _i++) {
                var component = _a[_i];
                if (component instanceof metadatalabel_1.MetadataLabel) {
                    if (!component.isEmpty()) {
                        hasMetadataText = true;
                        break;
                    }
                }
            }
            if (_this.isShown()) {
                // Hide a visible titlebar if it does not contain any text and the hidden flag is set
                if (config.keepHiddenWithoutMetadata && !hasMetadataText) {
                    _this.hide();
                }
            }
            else if (shouldBeShown) {
                // Show a hidden titlebar if it should actually be shown
                _this.show();
            }
        };
        // Listen to text change events to update the hasMetadataText flag when the metadata dynamically changes
        for (var _i = 0, _a = this.getComponents(); _i < _a.length; _i++) {
            var component = _a[_i];
            if (component instanceof metadatalabel_1.MetadataLabel) {
                component.onTextChanged.subscribe(checkMetadataTextAndUpdateVisibility);
            }
        }
        uimanager.onControlsShow.subscribe(function () {
            shouldBeShown = true;
            if (!(config.keepHiddenWithoutMetadata && !hasMetadataText)) {
                _this.show();
            }
        });
        uimanager.onControlsHide.subscribe(function () {
            shouldBeShown = false;
            _this.hide();
        });
        // init
        checkMetadataTextAndUpdateVisibility();
    };
    return TitleBar;
}(container_1.Container));
exports.TitleBar = TitleBar;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
var stringutils_1 = __webpack_require__(10);
var hugereplaybutton_1 = __webpack_require__(58);
/**
 * Overlays the player and displays recommended videos.
 */
var RecommendationOverlay = (function (_super) {
    __extends(RecommendationOverlay, _super);
    function RecommendationOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.replayButton = new hugereplaybutton_1.HugeReplayButton();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-recommendation-overlay',
            hidden: true,
            components: [_this.replayButton],
        }, _this.config);
        return _this;
    }
    RecommendationOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var clearRecommendations = function () {
            for (var _i = 0, _a = _this.getComponents().slice(); _i < _a.length; _i++) {
                var component = _a[_i];
                if (component instanceof RecommendationItem) {
                    _this.removeComponent(component);
                }
            }
            _this.updateComponents();
            _this.getDomElement().removeClass(_this.prefixCss('recommendations'));
        };
        var setupRecommendations = function () {
            clearRecommendations();
            var recommendations = uimanager.getConfig().recommendations;
            if (recommendations.length > 0) {
                var index = 1;
                for (var _i = 0, recommendations_1 = recommendations; _i < recommendations_1.length; _i++) {
                    var item = recommendations_1[_i];
                    _this.addComponent(new RecommendationItem({
                        itemConfig: item,
                        cssClasses: ['recommendation-item-' + (index++)],
                    }));
                }
                _this.updateComponents(); // create container DOM elements
                _this.getDomElement().addClass(_this.prefixCss('recommendations'));
            }
        };
        // Add recommendation when a source is loaded
        player.addEventHandler(player.EVENT.ON_READY, setupRecommendations);
        // Remove recommendations and hide overlay when source is unloaded
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, function () {
            clearRecommendations();
            _this.hide();
        });
        // Display recommendations when playback has finished
        player.addEventHandler(player.EVENT.ON_PLAYBACK_FINISHED, function () {
            // Dismiss ON_PLAYBACK_FINISHED events at the end of ads
            // TODO remove this workaround once issue #1278 is solved
            if (player.isAd()) {
                return;
            }
            _this.show();
        });
        // Hide recommendations when playback starts, e.g. a restart
        player.addEventHandler(player.EVENT.ON_PLAY, function () {
            _this.hide();
        });
        // Init on startup
        setupRecommendations();
    };
    return RecommendationOverlay;
}(container_1.Container));
exports.RecommendationOverlay = RecommendationOverlay;
/**
 * An item of the {@link RecommendationOverlay}. Used only internally in {@link RecommendationOverlay}.
 */
var RecommendationItem = (function (_super) {
    __extends(RecommendationItem, _super);
    function RecommendationItem(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-recommendation-item',
            itemConfig: null,
        }, _this.config);
        return _this;
    }
    RecommendationItem.prototype.toDomElement = function () {
        var config = this.config.itemConfig; // TODO fix generics and get rid of cast
        var itemElement = new dom_1.DOM('a', {
            'id': this.config.id,
            'class': this.getCssClasses(),
            'href': config.url,
        }).css({ 'background-image': "url(" + config.thumbnail + ")" });
        var bgElement = new dom_1.DOM('div', {
            'class': this.prefixCss('background'),
        });
        itemElement.append(bgElement);
        var titleElement = new dom_1.DOM('span', {
            'class': this.prefixCss('title'),
        }).append(new dom_1.DOM('span', {
            'class': this.prefixCss('innertitle'),
        }).html(config.title));
        itemElement.append(titleElement);
        var timeElement = new dom_1.DOM('span', {
            'class': this.prefixCss('duration'),
        }).append(new dom_1.DOM('span', {
            'class': this.prefixCss('innerduration'),
        }).html(config.duration ? stringutils_1.StringUtils.secondsToTime(config.duration) : ''));
        itemElement.append(timeElement);
        return itemElement;
    };
    return RecommendationItem;
}(component_1.Component));


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
var dom_1 = __webpack_require__(1);
/**
 * A button to play/replay a video.
 */
var HugeReplayButton = (function (_super) {
    __extends(HugeReplayButton, _super);
    function HugeReplayButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-hugereplaybutton',
            text: 'Replay',
        }, _this.config);
        return _this;
    }
    HugeReplayButton.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        this.onClick.subscribe(function () {
            player.play('ui');
        });
    };
    HugeReplayButton.prototype.toDomElement = function () {
        var buttonElement = _super.prototype.toDomElement.call(this);
        // Add child that contains the play button image
        // Setting the image directly on the button does not work together with scaling animations, because the button
        // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined
        // to the size if the image, it can scale inside the player without overshooting.
        buttonElement.append(new dom_1.DOM('div', {
            'class': this.prefixCss('image'),
        }));
        return buttonElement;
    };
    return HugeReplayButton;
}(button_1.Button));
exports.HugeReplayButton = HugeReplayButton;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var selectbox_1 = __webpack_require__(8);
/**
 * A select box providing a selection of different playback speeds.
 */
var PlaybackSpeedSelectBox = (function (_super) {
    __extends(PlaybackSpeedSelectBox, _super);
    function PlaybackSpeedSelectBox(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.defaultPlaybackSpeeds = [0.25, 0.5, 1, 1.5, 2];
        return _this;
    }
    PlaybackSpeedSelectBox.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        this.addDefaultItems();
        this.onItemSelected.subscribe(function (sender, value) {
            player.setPlaybackSpeed(parseFloat(value));
            _this.selectItem(value);
        });
        var setDefaultValue = function () {
            var playbackSpeed = player.getPlaybackSpeed();
            _this.setSpeed(playbackSpeed);
        };
        // when the player hits onReady again, adjust the playback speed selection
        player.addEventHandler(player.EVENT.ON_READY, setDefaultValue);
        if (player.EVENT.ON_PLAYBACK_SPEED_CHANGED) {
            // Since player 7.8.0
            player.addEventHandler(player.EVENT.ON_PLAYBACK_SPEED_CHANGED, setDefaultValue);
        }
    };
    PlaybackSpeedSelectBox.prototype.setSpeed = function (speed) {
        if (!this.selectItem(String(speed))) {
            // a playback speed was set which is not in the list, add it to the list to show it to the user
            this.clearItems();
            this.addDefaultItems([speed]);
            this.selectItem(String(speed));
        }
    };
    PlaybackSpeedSelectBox.prototype.addDefaultItems = function (customItems) {
        var _this = this;
        if (customItems === void 0) { customItems = []; }
        var sortedSpeeds = this.defaultPlaybackSpeeds.concat(customItems).sort();
        sortedSpeeds.forEach(function (element) {
            if (element !== 1) {
                _this.addItem(String(element), element + "x");
            }
            else {
                _this.addItem(String(element), 'Normal');
            }
        });
    };
    PlaybackSpeedSelectBox.prototype.clearItems = function () {
        this.items = [];
        this.selectedItem = null;
    };
    return PlaybackSpeedSelectBox;
}(selectbox_1.SelectBox));
exports.PlaybackSpeedSelectBox = PlaybackSpeedSelectBox;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(2);
var timeout_1 = __webpack_require__(9);
/**
 * Overlays the player and displays a buffering indicator.
 */
var BufferingOverlay = (function (_super) {
    __extends(BufferingOverlay, _super);
    function BufferingOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.indicators = [
            new component_1.Component({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator' }),
            new component_1.Component({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator' }),
            new component_1.Component({ tag: 'div', cssClass: 'ui-buffering-overlay-indicator' }),
        ];
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-buffering-overlay',
            hidden: true,
            components: _this.indicators,
            showDelayMs: 1000,
        }, _this.config);
        return _this;
    }
    BufferingOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var overlayShowTimeout = new timeout_1.Timeout(config.showDelayMs, function () {
            _this.show();
        });
        var showOverlay = function () {
            overlayShowTimeout.start();
        };
        var hideOverlay = function () {
            overlayShowTimeout.clear();
            _this.hide();
        };
        player.addEventHandler(player.EVENT.ON_STALL_STARTED, showOverlay);
        player.addEventHandler(player.EVENT.ON_STALL_ENDED, hideOverlay);
        player.addEventHandler(player.EVENT.ON_SOURCE_UNLOADED, hideOverlay);
        // Show overlay if player is already stalled at init
        if (player.isStalled()) {
            this.show();
        }
    };
    return BufferingOverlay;
}(container_1.Container));
exports.BufferingOverlay = BufferingOverlay;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var hugeplaybacktogglebutton_1 = __webpack_require__(62);
/**
 * Overlays the player and displays error messages.
 */
var PlaybackToggleOverlay = (function (_super) {
    __extends(PlaybackToggleOverlay, _super);
    function PlaybackToggleOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.playbackToggleButton = new hugeplaybacktogglebutton_1.HugePlaybackToggleButton();
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-playbacktoggle-overlay',
            components: [_this.playbackToggleButton],
        }, _this.config);
        return _this;
    }
    return PlaybackToggleOverlay;
}(container_1.Container));
exports.PlaybackToggleOverlay = PlaybackToggleOverlay;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var playbacktogglebutton_1 = __webpack_require__(16);
var dom_1 = __webpack_require__(1);
/**
 * A button that overlays the video and toggles between playback and pause.
 */
var HugePlaybackToggleButton = (function (_super) {
    __extends(HugePlaybackToggleButton, _super);
    function HugePlaybackToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-hugeplaybacktogglebutton',
            text: 'Play/Pause',
        }, _this.config);
        return _this;
    }
    HugePlaybackToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        // Update button state through API events
        _super.prototype.configure.call(this, player, uimanager, false);
        var togglePlayback = function () {
            if (player.isPlaying()) {
                player.pause('ui');
            }
            else {
                player.play('ui');
            }
        };
        var toggleFullscreen = function () {
            if (player.isFullscreen()) {
                player.exitFullscreen();
            }
            else {
                player.enterFullscreen();
            }
        };
        var firstPlay = true;
        var clickTime = 0;
        var doubleClickTime = 0;
        /*
         * YouTube-style toggle button handling
         *
         * The goal is to prevent a short pause or playback interval between a click, that toggles playback, and a
         * double click, that toggles fullscreen. In this naive approach, the first click would e.g. start playback,
         * the second click would be detected as double click and toggle to fullscreen, and as second normal click stop
         * playback, which results is a short playback interval with max length of the double click detection
         * period (usually 500ms).
         *
         * To solve this issue, we defer handling of the first click for 200ms, which is almost unnoticeable to the user,
         * and just toggle playback if no second click (double click) has been registered during this period. If a double
         * click is registered, we just toggle the fullscreen. In the first 200ms, undesired playback changes thus cannot
         * happen. If a double click is registered within 500ms, we undo the playback change and switch fullscreen mode.
         * In the end, this method basically introduces a 200ms observing interval in which playback changes are prevented
         * if a double click happens.
         */
        this.onClick.subscribe(function () {
            // Directly start playback on first click of the button.
            // This is a required workaround for mobile browsers where video playback needs to be triggered directly
            // by the user. A deferred playback start through the timeout below is not considered as user action and
            // therefore ignored by mobile browsers.
            if (firstPlay) {
                // Try to start playback. Then we wait for ON_PLAY and only when it arrives, we disable the firstPlay flag.
                // If we disable the flag here, onClick was triggered programmatically instead of by a user interaction, and
                // playback is blocked (e.g. on mobile devices due to the programmatic play() call), we loose the chance to
                // ever start playback through a user interaction again with this button.
                togglePlayback();
                return;
            }
            var now = Date.now();
            if (now - clickTime < 200) {
                // We have a double click inside the 200ms interval, just toggle fullscreen mode
                toggleFullscreen();
                doubleClickTime = now;
                return;
            }
            else if (now - clickTime < 500) {
                // We have a double click inside the 500ms interval, undo playback toggle and toggle fullscreen mode
                toggleFullscreen();
                togglePlayback();
                doubleClickTime = now;
                return;
            }
            clickTime = now;
            setTimeout(function () {
                if (Date.now() - doubleClickTime > 200) {
                    // No double click detected, so we toggle playback and wait what happens next
                    togglePlayback();
                }
            }, 200);
        });
        player.addEventHandler(player.EVENT.ON_PLAY, function () {
            // Playback has really started, we can disable the flag to switch to normal toggle button handling
            firstPlay = false;
        });
        player.addEventHandler(player.EVENT.ON_WARNING, function (event) {
            // 5008 == Playback could not be started
            if (event.code === 5008) {
                // if playback could not be started, reset the first play flag as we need the user interaction to start
                firstPlay = true;
            }
        });
        // Hide button while initializing a Cast session
        var castInitializationHandler = function (event) {
            if (event.type === player.EVENT.ON_CAST_START) {
                // Hide button when session is being initialized
                _this.hide();
            }
            else {
                // Show button when session is established or initialization was aborted
                _this.show();
            }
        };
        player.addEventHandler(player.EVENT.ON_CAST_START, castInitializationHandler);
        player.addEventHandler(player.EVENT.ON_CAST_STARTED, castInitializationHandler);
        player.addEventHandler(player.EVENT.ON_CAST_STOPPED, castInitializationHandler);
        var suppressPlayButtonTransitionAnimation = function () {
            // Disable the current animation
            _this.setTransitionAnimationsEnabled(false);
            // Enable the transition animations for the next state change
            _this.onToggle.subscribeOnce(function () {
                _this.setTransitionAnimationsEnabled(true);
            });
        };
        // Hide the play button animation when the UI is loaded (it should only be animated on state changes)
        suppressPlayButtonTransitionAnimation();
        var isAutoplayEnabled = player.getConfig().playback && Boolean(player.getConfig().playback.autoplay);
        // We only know if an autoplay attempt is upcoming if the player is not yet ready. It the player is already ready,
        // the attempt might be upcoming or might have already happened, but we don't have to handle that because we can
        // simply rely on isPlaying and the play state events.
        var isAutoplayUpcoming = !player.isReady() && isAutoplayEnabled;
        // Hide the play button when the player is already playing or autoplay is upcoming
        if (player.isPlaying() || isAutoplayUpcoming) {
            // Hide the play button (switch to playing state)
            this.on();
            // Disable the animation of the playing state switch
            suppressPlayButtonTransitionAnimation();
            // Show the play button without an animation if a play attempt is blocked
            player.addEventHandler(player.EVENT.ON_WARNING, function (event) {
                if (event.code === 5008) {
                    suppressPlayButtonTransitionAnimation();
                }
            });
        }
    };
    HugePlaybackToggleButton.prototype.toDomElement = function () {
        var buttonElement = _super.prototype.toDomElement.call(this);
        // Add child that contains the play button image
        // Setting the image directly on the button does not work together with scaling animations, because the button
        // can cover the whole video player are and scaling would extend it beyond. By adding an inner element, confined
        // to the size if the image, it can scale inside the player without overshooting.
        buttonElement.append(new dom_1.DOM('div', {
            'class': this.prefixCss('image'),
        }));
        return buttonElement;
    };
    /**
     * Enables or disables the play state transition animations of the play button image. Can be used to suppress
     * animations.
     * @param {boolean} enabled true to enable the animations (default), false to disable them
     */
    HugePlaybackToggleButton.prototype.setTransitionAnimationsEnabled = function (enabled) {
        var noTransitionAnimationsClass = this.prefixCss('no-transition-animations');
        if (enabled) {
            this.getDomElement().removeClass(noTransitionAnimationsClass);
        }
        else if (!this.getDomElement().hasClass(noTransitionAnimationsClass)) {
            this.getDomElement().addClass(noTransitionAnimationsClass);
        }
    };
    return HugePlaybackToggleButton;
}(playbacktogglebutton_1.PlaybackToggleButton));
exports.HugePlaybackToggleButton = HugePlaybackToggleButton;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
/**
 * A button that closes (hides) a configured component.
 */
var CloseButton = (function (_super) {
    __extends(CloseButton, _super);
    function CloseButton(config) {
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-closebutton',
            text: 'Close',
        }, _this.config);
        return _this;
    }
    CloseButton.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        this.onClick.subscribe(function () {
            config.target.hide();
        });
    };
    return CloseButton;
}(button_1.Button));
exports.CloseButton = CloseButton;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles Apple AirPlay.
 */
var AirPlayToggleButton = (function (_super) {
    __extends(AirPlayToggleButton, _super);
    function AirPlayToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-airplaytogglebutton',
            text: 'Apple AirPlay',
        }, _this.config);
        return _this;
    }
    AirPlayToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        if (!player.isAirplayAvailable) {
            // If the player does not support Airplay (player 7.0), we just hide this component and skip configuration
            this.hide();
            return;
        }
        this.onClick.subscribe(function () {
            if (player.isAirplayAvailable()) {
                player.showAirplayTargetPicker();
            }
            else {
                if (console) {
                    console.log('AirPlay unavailable');
                }
            }
        });
        var airPlayAvailableHandler = function () {
            if (player.isAirplayAvailable()) {
                _this.show();
            }
            else {
                _this.hide();
            }
        };
        player.addEventHandler(player.EVENT.ON_AIRPLAY_AVAILABLE, airPlayAvailableHandler);
        // Startup init
        airPlayAvailableHandler(); // Hide button if AirPlay is not available
    };
    return AirPlayToggleButton;
}(togglebutton_1.ToggleButton));
exports.AirPlayToggleButton = AirPlayToggleButton;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var togglebutton_1 = __webpack_require__(5);
/**
 * A button that toggles Apple macOS picture-in-picture mode.
 */
var PictureInPictureToggleButton = (function (_super) {
    __extends(PictureInPictureToggleButton, _super);
    function PictureInPictureToggleButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-piptogglebutton',
            text: 'Picture-in-Picture',
        }, _this.config);
        return _this;
    }
    PictureInPictureToggleButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        if (!player.isPictureInPictureAvailable) {
            // If the player does not support PIP (player 7.0), we just hide this component and skip configuration
            this.hide();
            return;
        }
        this.onClick.subscribe(function () {
            if (player.isPictureInPictureAvailable()) {
                if (player.isPictureInPicture()) {
                    player.exitPictureInPicture();
                }
                else {
                    player.enterPictureInPicture();
                }
            }
            else {
                if (console) {
                    console.log('PIP unavailable');
                }
            }
        });
        var pipAvailableHander = function () {
            if (player.isPictureInPictureAvailable()) {
                _this.show();
            }
            else {
                _this.hide();
            }
        };
        player.addEventHandler(player.EVENT.ON_READY, pipAvailableHander);
        // Toggle button 'on' state
        player.addEventHandler(player.EVENT.ON_PICTURE_IN_PICTURE_ENTER, function () {
            _this.on();
        });
        player.addEventHandler(player.EVENT.ON_PICTURE_IN_PICTURE_EXIT, function () {
            _this.off();
        });
        // Startup init
        pipAvailableHander(); // Hide button if PIP not available
        if (player.isPictureInPicture()) {
            this.on();
        }
    };
    return PictureInPictureToggleButton;
}(togglebutton_1.ToggleButton));
exports.PictureInPictureToggleButton = PictureInPictureToggleButton;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(67);
__webpack_require__(70);
module.exports = __webpack_require__(84);


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var angular = __webpack_require__(13);
var bitdash_controller_1 = __webpack_require__(68);
var bitdash_directive_1 = __webpack_require__(69);
exports.default = angular.module('mi.BitdashPlayer', [])
    .controller('MiBitdashController', bitdash_controller_1.default)
    .directive('miBitdashPlayer', bitdash_directive_1.default);


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var angular = __webpack_require__(13);
var BitmovinController = (function () {
    function BitmovinController($scope, $log) {
        this.$scope = $scope;
        this.$log = $log;
        this.state = {};
        this.config = {};
        this.options = {};
    }
    BitmovinController.prototype.$onInit = function () {
        this.state = this.$scope.state = {};
        if (angular.isDefined(this.$scope.config) && angular.isDefined(this.$scope.config.key)) {
            this.config = this.$scope.config;
        }
        else {
            this.$log.error("basic config for bitdash player is missing!");
        }
        if (angular.isDefined(this.$scope.options)) {
            this.options = this.$scope.options;
        }
        if (angular.isDefined(this.$scope.webcast)) {
            this.processWebcast(this.$scope.webcast);
        }
    };
    BitmovinController.prototype.processWebcast = function (webcast) {
        var stateProperty = this.options.forcedState || webcast.state;
        if (stateProperty === 'ondemand') {
            var languageIndex_1 = 0;
            webcast.languages.some(function (lang, index) {
                if (webcast.language === lang.language) {
                    languageIndex_1 = index;
                    return true;
                }
            });
            this.state.data = webcast.languages[languageIndex_1].ondemandStateData;
        }
        else {
            this.state.data = webcast[stateProperty + 'StateData'];
        }
        this.config.source = this.getPlayerConfigSource(webcast);
        this.config.style = { ux: false };
    };
    BitmovinController.prototype.getPlayerConfigSource = function (webcast) {
        return webcast.useDVRPlaybackInPostlive && webcast.state === 'postlive' ?
            this.getDVRPlaybackToPostlive(webcast)
            : this.getPlayerConfigSourceByState(webcast);
    };
    BitmovinController.prototype.getDVRPlaybackToPostlive = function (webcast) {
        var hls = webcast['liveStateData'].playout.hlsDvrUrl;
        var title = webcast.name;
        if (angular.isDefined(webcast['postliveStateData'].playout.offset)) {
            var offset = parseInt(webcast['postliveStateData'].playout.offset, 10);
            if (offset) {
                var offsetPrefix = void 0;
                var parser = document.createElement('a');
                parser.href = webcast['liveStateData'].playout.hlsDvrUrl;
                offsetPrefix = (parser.search) ? '&' : '?';
                hls += offsetPrefix + "wowzadvrplayliststart=" + offset + "000";
            }
        }
        return { hls: hls, title: title };
    };
    BitmovinController.prototype.getPlayerConfigSourceByState = function (webcast) {
        var hls = this.state.data.playout.hlsUrl;
        var title = webcast.name;
        var hiveServiceUrl = this.getHiveServiceUrlByLang(webcast);
        if (angular.isDefined(this.state.data.playout.videoManagerHlsUrl) && this.state.data.playout.videoManagerHlsUrl) {
            hls = this.state.data.playout.videoManagerHlsUrl;
        }
        if (angular.isDefined(this.state.data.playout.offset)) {
            var offset = parseInt(this.state.data.playout.offset, 10);
            if (offset > 0) {
                var offsetPrefix = void 0;
                var parser = document.createElement('a');
                parser.href = hls;
                offsetPrefix = (parser.search) ? '&' : '?';
                hls += offsetPrefix + "start=" + offset;
            }
        }
        return { hls: hls, title: title, hiveServiceUrl: hiveServiceUrl };
    };
    BitmovinController.prototype.getHiveServiceUrlByLang = function (webcast) {
        var hiveServiceUrl = null;
        if (webcast.languages && webcast.language) {
            webcast.languages.forEach(function (item) {
                if (item.language === webcast.language) {
                    hiveServiceUrl = angular.copy(item.hiveServiceUrl);
                }
            });
        }
        return hiveServiceUrl;
    };
    return BitmovinController;
}());
BitmovinController.$inject = ['$scope', '$log'];
exports.default = BitmovinController;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var angular = __webpack_require__(13);
var BitdashDirective = function ($window, $log) { return ({
    controller: 'MiBitdashController',
    controllerAs: 'bitdashVm',
    replace: true,
    restrict: 'EA',
    scope: {
        config: '=',
        options: '=?',
        webcast: '=',
    },
    template: "<div id=\"mi-bitdash-player\" width=\"100%\" height=\"auto\"></div>",
    link: function (scope) {
        var bitmovinPlayer;
        var bitmovinUIManager;
        var bitmovinControlbar;
        var config = scope.config;
        var webcast = scope.webcast;
        var stateData = scope.state.data;
        buildPlayer();
        function buildPlayer() {
            bitmovinPlayer = $window.window.bitmovin.player('mi-bitdash-player');
            if (angular.isDefined(bitmovinPlayer) && bitmovinPlayer.isReady() === true) {
                bitmovinPlayer.destroy();
                bitmovinPlayer = $window.window.bitmovin.player('mi-bitdash-player');
            }
            if ((webcast.state === 'live') && config.source.hiveServiceUrl) {
                // Get a hive-enabled player through bitdash.initHiveSDN
                $window.window.bitmovin.initHiveSDN(bitmovinPlayer, { debugLevel: 'off' });
                // Configure and Setup bitmovin in initSession callback
                bitmovinPlayer.initSession(config.source.hiveServiceUrl).then(function (session) {
                    var hiveConfig = angular.copy(config);
                    hiveConfig.source.hls = session.manifest;
                    loadPlayer(hiveConfig);
                }, function (reason) {
                    // Handle the case if Hive init fails
                    $log.warn("Hive init fails: " + reason.code + " - " + reason.message);
                    loadPlayer(config);
                });
            }
            else {
                loadPlayer(config);
            }
        }
        function loadPlayer(conf) {
            bitmovinPlayer
                .setup(conf)
                .then(function () {
                bitmovinUIManager = $window.window.bitmovin.playerui.UIManager.Factory;
                if (isAudioOnly()) {
                    bitmovinUIManager.buildAudioOnlyUI(bitmovinPlayer);
                    setAudioOnlyStillImage();
                }
                else {
                    bitmovinUIManager.buildAudioVideoUI(bitmovinPlayer);
                }
                bitmovinControlbar = getElementsByClassName('bitmovinplayer-container');
                if (angular.isDefined(bitmovinControlbar)) {
                    bitmovinControlbar.style.minWidth = '175px';
                    bitmovinControlbar.style.minHeight = '101px';
                    document.getElementById('bitmovinplayer-video-mi-bitdash-player').setAttribute('title', webcast.name);
                }
            }, function (reason) {
                $log.log("Error: " + reason.code + " - " + reason.message);
            });
        }
        function isAudioOnly() {
            return webcast.layout.layout === 'audio-only';
        }
        function setAudioOnlyStillImage() {
            var element = getElementsByClassName('mi-wbc-ui-audioonly-overlay');
            if (angular.isDefined(webcast.theme.audioOnlyFileUrl) && webcast.theme.audioOnlyFileUrl) {
                element.style.backgroundImage = "url(" + webcast.theme.audioOnlyFileUrl + ")";
                element.style.backgroundSize = 'contain';
                element.style.animation = 'none';
                element.style.backgroundPosition = 'center';
            }
            else {
                var image_1 = element.style.backgroundImage;
                bitmovinPlayer.addEventHandler('onPaused', function () { return element.style.backgroundImage = 'none'; });
                bitmovinPlayer.addEventHandler('onPlay', function () { return element.style.backgroundImage = image_1; });
            }
        }
        function getElementsByClassName(className) {
            return document.getElementsByClassName(className)[0];
        }
    }
}); };
exports.default = BitdashDirective;
BitdashDirective.$inject = ['$window', '$log'];


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='player.d.ts' />
var uimanager_1 = __webpack_require__(71);
var button_1 = __webpack_require__(7);
var controlbar_1 = __webpack_require__(19);
var fullscreentogglebutton_1 = __webpack_require__(29);
var hugeplaybacktogglebutton_1 = __webpack_require__(62);
var playbacktimelabel_1 = __webpack_require__(31);
var playbacktogglebutton_1 = __webpack_require__(16);
var seekbar_1 = __webpack_require__(18);
var selectbox_1 = __webpack_require__(8);
var itemselectionlist_1 = __webpack_require__(77);
var settingspanel_1 = __webpack_require__(22);
var settingstogglebutton_1 = __webpack_require__(32);
var togglebutton_1 = __webpack_require__(5);
var videoqualityselectbox_1 = __webpack_require__(23);
var volumetogglebutton_1 = __webpack_require__(17);
var vrtogglebutton_1 = __webpack_require__(30);
var watermark_1 = __webpack_require__(78);
var uicontainer_1 = __webpack_require__(14);
var container_1 = __webpack_require__(0);
var label_1 = __webpack_require__(6);
var audioqualityselectbox_1 = __webpack_require__(24);
var audiotrackselectbox_1 = __webpack_require__(49);
var caststatusoverlay_1 = __webpack_require__(54);
var casttogglebutton_1 = __webpack_require__(53);
var component_1 = __webpack_require__(2);
var errormessageoverlay_1 = __webpack_require__(55);
var recommendationoverlay_1 = __webpack_require__(57);
var seekbarlabel_1 = __webpack_require__(50);
var subtitleoverlay_1 = __webpack_require__(52);
var subtitleselectbox_1 = __webpack_require__(51);
var titlebar_1 = __webpack_require__(56);
var volumecontrolbutton_1 = __webpack_require__(79);
var clickoverlay_1 = __webpack_require__(28);
var adskipbutton_1 = __webpack_require__(80);
var admessagelabel_1 = __webpack_require__(81);
var adclickoverlay_1 = __webpack_require__(82);
var playbackspeedselectbox_1 = __webpack_require__(59);
var hugereplaybutton_1 = __webpack_require__(58);
var bufferingoverlay_1 = __webpack_require__(60);
var castuicontainer_1 = __webpack_require__(83);
var playbacktoggleoverlay_1 = __webpack_require__(61);
var closebutton_1 = __webpack_require__(63);
var metadatalabel_1 = __webpack_require__(27);
var airplaytogglebutton_1 = __webpack_require__(64);
var volumeslider_1 = __webpack_require__(26);
var pictureinpicturetogglebutton_1 = __webpack_require__(65);
var spacer_1 = __webpack_require__(21);
var backgroundcolorselectbox_1 = __webpack_require__(39);
var backgroundopacityselectbox_1 = __webpack_require__(40);
var characteredgeselectbox_1 = __webpack_require__(43);
var fontcolorselectbox_1 = __webpack_require__(35);
var fontfamilyselectbox_1 = __webpack_require__(37);
var fontopacityselectbox_1 = __webpack_require__(36);
var fontsizeselectbox_1 = __webpack_require__(38);
var subtitlesettingsbutton_1 = __webpack_require__(25);
var subtitlesettingsclosebutton_1 = __webpack_require__(45);
var subtitlesettingselectbox_1 = __webpack_require__(4);
var subtitlesettingslabel_1 = __webpack_require__(47);
var subtitlesettingsopenbutton_1 = __webpack_require__(48);
var subtitlesettingspanel_1 = __webpack_require__(34);
var windowcolorselectbox_1 = __webpack_require__(41);
var windowopacityselectbox_1 = __webpack_require__(42);
var arrayutils_1 = __webpack_require__(11);
var stringutils_1 = __webpack_require__(10);
var playerutils_1 = __webpack_require__(12);
var uiutils_1 = __webpack_require__(20);
var browserutils_1 = __webpack_require__(15);
var storageutils_1 = __webpack_require__(44);
var subtitlesettingsresetbutton_1 = __webpack_require__(46);
// Object.assign polyfill for ES5/IE9
// https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
if (typeof Object.assign !== 'function') {
    Object.assign = function (target) {
        'use strict';
        if (target == null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }
        target = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source != null) {
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
        }
        return target;
    };
}
var playerui = {
    version: '{{VERSION}}',
    // Management
    UIManager: uimanager_1.UIManager,
    UIInstanceManager: uimanager_1.UIInstanceManager,
    // Utils
    ArrayUtils: arrayutils_1.ArrayUtils,
    StringUtils: stringutils_1.StringUtils,
    PlayerUtils: playerutils_1.PlayerUtils,
    UIUtils: uiutils_1.UIUtils,
    BrowserUtils: browserutils_1.BrowserUtils,
    StorageUtils: storageutils_1.StorageUtils,
    // Components
    AdClickOverlay: adclickoverlay_1.AdClickOverlay,
    AdMessageLabel: admessagelabel_1.AdMessageLabel,
    AdSkipButton: adskipbutton_1.AdSkipButton,
    AirPlayToggleButton: airplaytogglebutton_1.AirPlayToggleButton,
    AudioQualitySelectBox: audioqualityselectbox_1.AudioQualitySelectBox,
    AudioTrackSelectBox: audiotrackselectbox_1.AudioTrackSelectBox,
    BufferingOverlay: bufferingoverlay_1.BufferingOverlay,
    Button: button_1.Button,
    CastStatusOverlay: caststatusoverlay_1.CastStatusOverlay,
    CastToggleButton: casttogglebutton_1.CastToggleButton,
    CastUIContainer: castuicontainer_1.CastUIContainer,
    ClickOverlay: clickoverlay_1.ClickOverlay,
    CloseButton: closebutton_1.CloseButton,
    Component: component_1.Component,
    Container: container_1.Container,
    ControlBar: controlbar_1.ControlBar,
    ErrorMessageOverlay: errormessageoverlay_1.ErrorMessageOverlay,
    FullscreenToggleButton: fullscreentogglebutton_1.FullscreenToggleButton,
    HugePlaybackToggleButton: hugeplaybacktogglebutton_1.HugePlaybackToggleButton,
    HugeReplayButton: hugereplaybutton_1.HugeReplayButton,
    Label: label_1.Label,
    MetadataLabel: metadatalabel_1.MetadataLabel,
    MetadataLabelContent: metadatalabel_1.MetadataLabelContent,
    PictureInPictureToggleButton: pictureinpicturetogglebutton_1.PictureInPictureToggleButton,
    PlaybackSpeedSelectBox: playbackspeedselectbox_1.PlaybackSpeedSelectBox,
    PlaybackTimeLabel: playbacktimelabel_1.PlaybackTimeLabel,
    PlaybackTimeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode,
    PlaybackToggleButton: playbacktogglebutton_1.PlaybackToggleButton,
    PlaybackToggleOverlay: playbacktoggleoverlay_1.PlaybackToggleOverlay,
    RecommendationOverlay: recommendationoverlay_1.RecommendationOverlay,
    SeekBar: seekbar_1.SeekBar,
    SeekBarLabel: seekbarlabel_1.SeekBarLabel,
    SelectBox: selectbox_1.SelectBox,
    ItemSelectionList: itemselectionlist_1.ItemSelectionList,
    SettingsPanel: settingspanel_1.SettingsPanel,
    SettingsPanelItem: settingspanel_1.SettingsPanelItem,
    SettingsToggleButton: settingstogglebutton_1.SettingsToggleButton,
    Spacer: spacer_1.Spacer,
    SubtitleOverlay: subtitleoverlay_1.SubtitleOverlay,
    SubtitleSelectBox: subtitleselectbox_1.SubtitleSelectBox,
    TitleBar: titlebar_1.TitleBar,
    ToggleButton: togglebutton_1.ToggleButton,
    UIContainer: uicontainer_1.UIContainer,
    VideoQualitySelectBox: videoqualityselectbox_1.VideoQualitySelectBox,
    VolumeControlButton: volumecontrolbutton_1.VolumeControlButton,
    VolumeSlider: volumeslider_1.VolumeSlider,
    VolumeToggleButton: volumetogglebutton_1.VolumeToggleButton,
    VRToggleButton: vrtogglebutton_1.VRToggleButton,
    Watermark: watermark_1.Watermark,
    // Subtitle related components
    subtitlesettings: {
        BackgroundColorSelectBox: backgroundcolorselectbox_1.BackgroundColorSelectBox,
        BackgroundOpacitySelectBox: backgroundopacityselectbox_1.BackgroundOpacitySelectBox,
        CharacterEdgeSelectBox: characteredgeselectbox_1.CharacterEdgeSelectBox,
        FontColorSelectBox: fontcolorselectbox_1.FontColorSelectBox,
        FontFamilySelectBox: fontfamilyselectbox_1.FontFamilySelectBox,
        FontOpacitySelectBox: fontopacityselectbox_1.FontOpacitySelectBox,
        FontSizeSelectBox: fontsizeselectbox_1.FontSizeSelectBox,
        SubtitleSettingsButton: subtitlesettingsbutton_1.SubtitleSettingsButton,
        SubtitleSettingsCloseButton: subtitlesettingsclosebutton_1.SubtitleSettingsCloseButton,
        SubtitleSettingSelectBox: subtitlesettingselectbox_1.SubtitleSettingSelectBox,
        SubtitleSettingsLabel: subtitlesettingslabel_1.SubtitleSettingsLabel,
        SubtitleSettingsOpenButton: subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton,
        SubtitleSettingsPanel: subtitlesettingspanel_1.SubtitleSettingsPanel,
        WindowColorSelectBox: windowcolorselectbox_1.WindowColorSelectBox,
        WindowOpacitySelectBox: windowopacityselectbox_1.WindowOpacitySelectBox,
        SubtitleSettingsResetButton: subtitlesettingsresetbutton_1.SubtitleSettingsResetButton,
    },
};
window.bitmovin.playerui = playerui;
module.exports = playerui;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var uicontainer_1 = __webpack_require__(14);
var dom_1 = __webpack_require__(1);
var container_1 = __webpack_require__(0);
var playbacktogglebutton_1 = __webpack_require__(16);
var fullscreentogglebutton_1 = __webpack_require__(29);
var vrtogglebutton_1 = __webpack_require__(30);
var volumetogglebutton_1 = __webpack_require__(17);
var seekbar_1 = __webpack_require__(18);
var playbacktimelabel_1 = __webpack_require__(31);
var controlbar_1 = __webpack_require__(19);
var eventdispatcher_1 = __webpack_require__(3);
var settingstogglebutton_1 = __webpack_require__(32);
var settingspanel_1 = __webpack_require__(22);
var subtitlesettingspanel_1 = __webpack_require__(34);
var subtitlesettingslabel_1 = __webpack_require__(47);
var subtitlesettingsopenbutton_1 = __webpack_require__(48);
var videoqualityselectbox_1 = __webpack_require__(23);
var audioqualityselectbox_1 = __webpack_require__(24);
var audiotrackselectbox_1 = __webpack_require__(49);
var seekbarlabel_1 = __webpack_require__(50);
var volumeslider_1 = __webpack_require__(26);
var subtitleselectbox_1 = __webpack_require__(51);
var subtitleoverlay_1 = __webpack_require__(52);
var casttogglebutton_1 = __webpack_require__(53);
var caststatusoverlay_1 = __webpack_require__(54);
var errormessageoverlay_1 = __webpack_require__(55);
var titlebar_1 = __webpack_require__(56);
var recommendationoverlay_1 = __webpack_require__(57);
var playbackspeedselectbox_1 = __webpack_require__(59);
var bufferingoverlay_1 = __webpack_require__(60);
var playbacktoggleoverlay_1 = __webpack_require__(61);
var closebutton_1 = __webpack_require__(63);
var metadatalabel_1 = __webpack_require__(27);
var airplaytogglebutton_1 = __webpack_require__(64);
var pictureinpicturetogglebutton_1 = __webpack_require__(65);
var audioonlyoverlay_1 = __webpack_require__(76);
var spacer_1 = __webpack_require__(21);
var uiutils_1 = __webpack_require__(20);
var arrayutils_1 = __webpack_require__(11);
var browserutils_1 = __webpack_require__(15);
var UIManager = (function () {
    function UIManager(player, playerUiOrUiVariants, config) {
        if (config === void 0) { config = {}; }
        var _this = this;
        this.events = {
            onUiVariantResolve: new eventdispatcher_1.EventDispatcher(),
        };
        if (playerUiOrUiVariants instanceof uicontainer_1.UIContainer) {
            // Single-UI constructor has been called, transform arguments to UIVariant[] signature
            var playerUi = playerUiOrUiVariants;
            var uiVariants = [];
            // Add the default player UI
            uiVariants.push({ ui: playerUi });
            this.uiVariants = uiVariants;
        }
        else {
            // Default constructor (UIVariant[]) has been called
            this.uiVariants = playerUiOrUiVariants;
        }
        this.player = player;
        this.config = __assign({}, config, { events: {
                onUpdated: new eventdispatcher_1.EventDispatcher(),
            } });
        this.managerPlayerWrapper = new PlayerWrapper(player);
        /**
         * Gathers configuration data from the UI config and player source config and creates a merged UI config
         * that is used throughout the UI instance.
         */
        var updateConfig = function () {
            var playerSourceConfig = player.getConfig().source || {};
            var uiConfig = __assign({}, config);
            uiConfig.metadata = uiConfig.metadata || {};
            // Extract the UI-related config properties from the source config
            var playerSourceUiConfig = {
                metadata: {
                    // TODO move metadata into source.metadata namespace in player v8
                    title: playerSourceConfig.title,
                    description: playerSourceConfig.description,
                    markers: playerSourceConfig.markers,
                },
                recommendations: playerSourceConfig.recommendations,
            };
            // Player source config takes precedence over the UI config, because the config in the source is attached
            // to a source which changes with every player.load, whereas the UI config stays the same for the whole
            // lifetime of the player instance.
            _this.config.metadata = _this.config.metadata || {};
            _this.config.metadata.title = playerSourceUiConfig.metadata.title || uiConfig.metadata.title;
            _this.config.metadata.description = playerSourceUiConfig.metadata.description || uiConfig.metadata.description;
            _this.config.metadata.markers = playerSourceUiConfig.metadata.markers || uiConfig.metadata.markers || [];
            _this.config.recommendations = playerSourceUiConfig.recommendations || uiConfig.recommendations || [];
        };
        updateConfig();
        // Update the configuration when a new source is loaded
        this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_SOURCE_LOADED, function () {
            updateConfig();
            _this.config.events.onUpdated.dispatch(_this);
        });
        if (config.container) {
            // Unfortunately "uiContainerElement = new DOM(config.container)" will not accept the container with
            // string|HTMLElement type directly, although it accepts both types, so we need to spit these two cases up here.
            // TODO check in upcoming TS versions if the container can be passed in directly, or fix the constructor
            this.uiContainerElement = config.container instanceof HTMLElement ?
                new dom_1.DOM(config.container) : new dom_1.DOM(config.container);
        }
        else {
            this.uiContainerElement = new dom_1.DOM(player.getFigure());
        }
        // Create UI instance managers for the UI variants
        // The instance managers map to the corresponding UI variants by their array index
        this.uiInstanceManagers = [];
        var uiVariantsWithoutCondition = [];
        for (var _i = 0, _a = this.uiVariants; _i < _a.length; _i++) {
            var uiVariant = _a[_i];
            if (uiVariant.condition == null) {
                // Collect variants without conditions for error checking
                uiVariantsWithoutCondition.push(uiVariant);
            }
            // Create the instance manager for a UI variant
            this.uiInstanceManagers.push(new InternalUIInstanceManager(player, uiVariant.ui, this.config));
        }
        // Make sure that there is only one UI variant without a condition
        // It does not make sense to have multiple variants without condition, because only the first one in the list
        // (the one with the lowest index) will ever be selected.
        if (uiVariantsWithoutCondition.length > 1) {
            throw Error('Too many UIs without a condition: You cannot have more than one default UI');
        }
        // Make sure that the default UI variant, if defined, is at the end of the list (last index)
        // If it comes earlier, the variants with conditions that come afterwards will never be selected because the
        // default variant without a condition always evaluates to 'true'
        if (uiVariantsWithoutCondition.length > 0
            && uiVariantsWithoutCondition[0] !== this.uiVariants[this.uiVariants.length - 1]) {
            throw Error('Invalid UI variant order: the default UI (without condition) must be at the end of the list');
        }
        // Switch on auto UI resolving by default
        if (config.autoUiVariantResolve === undefined) {
            config.autoUiVariantResolve = true;
        }
        var adStartedEvent = null; // keep the event stored here during ad playback
        // Dynamically select a UI variant that matches the current UI condition.
        var resolveUiVariant = function (event) {
            // Make sure that the ON_AD_STARTED event data is persisted through ad playback in case other events happen
            // in the meantime, e.g. player resize. We need to store this data because there is no other way to find out
            // ad details (e.g. the ad client) while an ad is playing.
            // Existing event data signals that an ad is currently active. We cannot use player.isAd() because it returns
            // true on ad start and also on ad end events, which is problematic.
            if (event != null) {
                switch (event.type) {
                    // When the ad starts, we store the event data
                    case player.EVENT.ON_AD_STARTED:
                        adStartedEvent = event;
                        break;
                    // When the ad ends, we delete the event data
                    case player.EVENT.ON_AD_FINISHED:
                    case player.EVENT.ON_AD_SKIPPED:
                    case player.EVENT.ON_AD_ERROR:
                        adStartedEvent = null;
                        break;
                    // When a new source is loaded during ad playback, there will be no ad end event so we detect the end
                    // of the ad playback by checking isAd() in ON_READY, because ON_READY always arrives when the source
                    // changes.
                    case player.EVENT.ON_READY:
                        if (adStartedEvent && !player.isAd()) {
                            adStartedEvent = null;
                        }
                }
            }
            // Detect if an ad has started
            var ad = adStartedEvent != null;
            var adWithUI = ad && adStartedEvent.clientType === 'vast';
            _this.resolveUiVariant({
                isAd: ad,
                isAdWithUI: adWithUI,
                adClientType: ad ? adStartedEvent.clientType : null,
            }, function (context) {
                // If this is an ad UI, we need to relay the saved ON_AD_STARTED event data so ad components can configure
                // themselves for the current ad.
                if (context.isAd) {
                    /* Relay the ON_AD_STARTED event to the ads UI
                     *
                     * Because the ads UI is initialized in the ON_AD_STARTED handler, i.e. when the ON_AD_STARTED event has
                     * already been fired, components in the ads UI that listen for the ON_AD_STARTED event never receive it.
                     * Since this can break functionality of components that rely on this event, we relay the event to the
                     * ads UI components with the following call.
                     */
                    _this.currentUi.getWrappedPlayer().fireEventInUI(_this.player.EVENT.ON_AD_STARTED, adStartedEvent);
                }
            });
        };
        // Listen to the following events to trigger UI variant resolution
        if (config.autoUiVariantResolve) {
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_READY, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_PLAY, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_PAUSED, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_STARTED, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_FINISHED, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_SKIPPED, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_AD_ERROR, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_PLAYER_RESIZE, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_FULLSCREEN_ENTER, resolveUiVariant);
            this.managerPlayerWrapper.getPlayer().addEventHandler(this.player.EVENT.ON_FULLSCREEN_EXIT, resolveUiVariant);
        }
        // Initialize the UI
        resolveUiVariant(null);
    }
    UIManager.prototype.getConfig = function () {
        return this.config;
    };
    /**
     * Returns the list of UI variants as passed into the constructor of {@link UIManager}.
     * @returns {UIVariant[]} the list of available UI variants
     */
    UIManager.prototype.getUiVariants = function () {
        return this.uiVariants;
    };
    /**
     * Switches to a UI variant from the list returned by {@link getUiVariants}.
     * @param {UIVariant} uiVariant the UI variant to switch to
     * @param {() => void} onShow a callback that is executed just before the new UI variant is shown
     */
    UIManager.prototype.switchToUiVariant = function (uiVariant, onShow) {
        var uiVariantIndex = this.uiVariants.indexOf(uiVariant);
        var nextUi = this.uiInstanceManagers[uiVariantIndex];
        var uiVariantChanged = false;
        // Determine if the UI variant is changing
        if (nextUi !== this.currentUi) {
            uiVariantChanged = true;
            // console.log('switched from ', this.currentUi ? this.currentUi.getUI() : 'none',
            //   ' to ', nextUi ? nextUi.getUI() : 'none');
        }
        // Only if the UI variant is changing, we need to do some stuff. Else we just leave everything as-is.
        if (uiVariantChanged) {
            // Hide the currently active UI variant
            if (this.currentUi) {
                this.currentUi.getUI().hide();
            }
            // Assign the new UI variant as current UI
            this.currentUi = nextUi;
            // When we switch to a different UI instance, there's some additional stuff to manage. If we do not switch
            // to an instance, we're done here.
            if (this.currentUi != null) {
                // Add the UI to the DOM (and configure it) the first time it is selected
                if (!this.currentUi.isConfigured()) {
                    this.addUi(this.currentUi);
                }
                if (onShow) {
                    onShow();
                }
                this.currentUi.getUI().show();
            }
        }
    };
    /**
     * Triggers a UI variant switch as triggered by events when automatic switching is enabled. It allows to overwrite
     * properties of the {@link UIConditionContext}.
     * @param {Partial<UIConditionContext>} context an optional set of properties that overwrite properties of the
     *   automatically determined context
     * @param {(context: UIConditionContext) => void} onShow a callback that is executed just before the new UI variant
     *   is shown (if a switch is happening)
     */
    UIManager.prototype.resolveUiVariant = function (context, onShow) {
        if (context === void 0) { context = {}; }
        // Determine the current context for which the UI variant will be resolved
        var defaultContext = {
            isAd: false,
            isAdWithUI: false,
            adClientType: null,
            isFullscreen: this.player.isFullscreen(),
            isMobile: browserutils_1.BrowserUtils.isMobile,
            isPlaying: this.player.isPlaying(),
            width: this.uiContainerElement.width(),
            documentWidth: document.body.clientWidth,
        };
        // Overwrite properties of the default context with passed in context properties
        var switchingContext = __assign({}, defaultContext, context);
        // Fire the event and allow modification of the context before it is used to resolve the UI variant
        this.events.onUiVariantResolve.dispatch(this, switchingContext);
        var nextUiVariant = null;
        // Select new UI variant
        // If no variant condition is fulfilled, we switch to *no* UI
        for (var _i = 0, _a = this.uiVariants; _i < _a.length; _i++) {
            var uiVariant = _a[_i];
            if (uiVariant.condition == null || uiVariant.condition(switchingContext) === true) {
                nextUiVariant = uiVariant;
                break;
            }
        }
        this.switchToUiVariant(nextUiVariant, function () {
            if (onShow) {
                onShow(switchingContext);
            }
        });
    };
    UIManager.prototype.addUi = function (ui) {
        var dom = ui.getUI().getDomElement();
        var player = ui.getWrappedPlayer();
        ui.configureControls();
        /* Append the UI DOM after configuration to avoid CSS transitions at initialization
         * Example: Components are hidden during configuration and these hides may trigger CSS transitions that are
         * undesirable at this time. */
        this.uiContainerElement.append(dom);
        // Some components initialize their state on ON_READY. When the UI is loaded after the player is already ready,
        // they will never receive the event so we fire it from here in such cases.
        if (player.isReady()) {
            player.fireEventInUI(player.EVENT.ON_READY, {});
        }
        // Fire onConfigured after UI DOM elements are successfully added. When fired immediately, the DOM elements
        // might not be fully configured and e.g. do not have a size.
        // https://swizec.com/blog/how-to-properly-wait-for-dom-elements-to-show-up-in-modern-browsers/swizec/6663
        if (window.requestAnimationFrame) {
            requestAnimationFrame(function () { ui.onConfigured.dispatch(ui.getUI()); });
        }
        else {
            // IE9 fallback
            setTimeout(function () { ui.onConfigured.dispatch(ui.getUI()); }, 0);
        }
    };
    UIManager.prototype.releaseUi = function (ui) {
        ui.releaseControls();
        ui.getUI().getDomElement().remove();
        ui.clearEventHandlers();
    };
    UIManager.prototype.release = function () {
        for (var _i = 0, _a = this.uiInstanceManagers; _i < _a.length; _i++) {
            var uiInstanceManager = _a[_i];
            this.releaseUi(uiInstanceManager);
        }
        this.managerPlayerWrapper.clearEventHandlers();
    };
    Object.defineProperty(UIManager.prototype, "onUiVariantResolve", {
        /**
         * Fires just before UI variants are about to be resolved and the UI variant is possibly switched. It is fired when
         * the switch is triggered from an automatic switch and when calling {@link resolveUiVariant}.
         * Can be used to modify the {@link UIConditionContext} before resolving is done.
         * @returns {EventDispatcher<UIManager, UIConditionContext>}
         */
        get: function () {
            return this.events.onUiVariantResolve;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns the list of all added markers in undefined order.
     */
    UIManager.prototype.getTimelineMarkers = function () {
        return this.config.metadata.markers;
    };
    /**
     * Adds a marker to the timeline. Does not check for duplicates/overlaps at the `time`.
     */
    UIManager.prototype.addTimelineMarker = function (timelineMarker) {
        this.config.metadata.markers.push(timelineMarker);
        this.config.events.onUpdated.dispatch(this);
    };
    /**
     * Removes a marker from the timeline (by reference) and returns `true` if the marker has
     * been part of the timeline and successfully removed, or `false` if the marker could not
     * be found and thus not removed.
     */
    UIManager.prototype.removeTimelineMarker = function (timelineMarker) {
        if (arrayutils_1.ArrayUtils.remove(this.config.metadata.markers, timelineMarker) === timelineMarker) {
            this.config.events.onUpdated.dispatch(this);
            return true;
        }
        return false;
    };
    return UIManager;
}());
exports.UIManager = UIManager;
(function (UIManager) {
    var Factory;
    (function (Factory) {
        function buildAudioVideoUI(player, config) {
            if (config === void 0) { config = {}; }
            var smallScreenSwitchWidth = 600;
            return new UIManager(player, [{
                    ui: modernSmallScreenUI(),
                    condition: function (context) {
                        return context.isMobile && context.documentWidth < smallScreenSwitchWidth;
                    },
                }, {
                    ui: modernUI(),
                }], config);
        }
        Factory.buildAudioVideoUI = buildAudioVideoUI;
        function buildAudioOnlyUI(player, config) {
            if (config === void 0) { config = {}; }
            var smallScreenSwitchWidth = 600;
            return new UIManager(player, [{
                    ui: modernAudioOnlySmallScreenUI(),
                    condition: function (context) {
                        return context.isMobile && context.documentWidth < smallScreenSwitchWidth;
                    },
                }, {
                    ui: modernAudioOnlyUI(),
                }], config);
        }
        Factory.buildAudioOnlyUI = buildAudioOnlyUI;
        // export function buildDefaultUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return UIManager.Factory.buildModernUI(player, config);
        // }
        // export function buildDefaultSmallScreenUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return UIManager.Factory.buildModernSmallScreenUI(player, config);
        // }
        // export function buildDefaultCastReceiverUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return UIManager.Factory.buildModernCastReceiverUI(player, config);
        // }
        function modernUI() {
            var subtitleOverlay = new subtitleoverlay_1.SubtitleOverlay();
            var settingsPanel = new settingspanel_1.SettingsPanel({
                components: [
                    new settingspanel_1.SettingsPanelItem('Video Quality', new videoqualityselectbox_1.VideoQualitySelectBox()),
                    new settingspanel_1.SettingsPanelItem('Speed', new playbackspeedselectbox_1.PlaybackSpeedSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Track', new audiotrackselectbox_1.AudioTrackSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Quality', new audioqualityselectbox_1.AudioQualitySelectBox()),
                ],
                hidden: true,
            });
            var subtitleSettingsPanel = new subtitlesettingspanel_1.SubtitleSettingsPanel({
                hidden: true,
                overlay: subtitleOverlay,
                settingsPanel: settingsPanel,
            });
            var subtitleSettingsOpenButton = new subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton({
                subtitleSettingsPanel: subtitleSettingsPanel,
                settingsPanel: settingsPanel,
            });
            settingsPanel.addComponent(new settingspanel_1.SettingsPanelItem(new subtitlesettingslabel_1.SubtitleSettingsLabel({ text: 'Subtitles', opener: subtitleSettingsOpenButton }), new subtitleselectbox_1.SubtitleSelectBox()));
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    settingsPanel,
                    subtitleSettingsPanel,
                    new container_1.Container({
                        components: [
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
                            new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel() }),
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
                        ],
                        cssClasses: ['controlbar-top'],
                    }),
                    new container_1.Container({
                        components: [
                            new playbacktogglebutton_1.PlaybackToggleButton(),
                            new volumetogglebutton_1.VolumeToggleButton(),
                            new volumeslider_1.VolumeSlider(),
                            new spacer_1.Spacer(),
                            new pictureinpicturetogglebutton_1.PictureInPictureToggleButton(),
                            new airplaytogglebutton_1.AirPlayToggleButton(),
                            new casttogglebutton_1.CastToggleButton(),
                            new vrtogglebutton_1.VRToggleButton(),
                            new settingstogglebutton_1.SettingsToggleButton({ settingsPanel: settingsPanel }),
                            new fullscreentogglebutton_1.FullscreenToggleButton(),
                        ],
                        cssClasses: ['controlbar-bottom'],
                    }),
                ],
            });
            return new uicontainer_1.UIContainer({
                components: [
                    subtitleOverlay,
                    new bufferingoverlay_1.BufferingOverlay(),
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    new caststatusoverlay_1.CastStatusOverlay(),
                    controlBar,
                    // new TitleBar(),
                    new recommendationoverlay_1.RecommendationOverlay(),
                    // new Watermark(),
                    new errormessageoverlay_1.ErrorMessageOverlay(),
                ],
                cssClasses: ['ui-skin-mi-wbc'],
            });
        }
        function modernAudioOnlyUI() {
            var subtitleOverlay = new subtitleoverlay_1.SubtitleOverlay();
            var settingsPanel = new settingspanel_1.SettingsPanel({
                components: [
                    new settingspanel_1.SettingsPanelItem('Speed', new playbackspeedselectbox_1.PlaybackSpeedSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Track', new audiotrackselectbox_1.AudioTrackSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Quality', new audioqualityselectbox_1.AudioQualitySelectBox()),
                ],
                hidden: true,
            });
            var subtitleSettingsPanel = new subtitlesettingspanel_1.SubtitleSettingsPanel({
                hidden: true,
                overlay: subtitleOverlay,
                settingsPanel: settingsPanel,
            });
            var subtitleSettingsOpenButton = new subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton({
                subtitleSettingsPanel: subtitleSettingsPanel,
                settingsPanel: settingsPanel,
            });
            settingsPanel.addComponent(new settingspanel_1.SettingsPanelItem(new subtitlesettingslabel_1.SubtitleSettingsLabel({ text: 'Subtitles', opener: subtitleSettingsOpenButton }), new subtitleselectbox_1.SubtitleSelectBox()));
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    settingsPanel,
                    subtitleSettingsPanel,
                    new container_1.Container({
                        components: [
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
                            new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel() }),
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
                        ],
                        cssClasses: ['controlbar-top'],
                    }),
                    new container_1.Container({
                        components: [
                            new playbacktogglebutton_1.PlaybackToggleButton(),
                            new volumetogglebutton_1.VolumeToggleButton(),
                            new volumeslider_1.VolumeSlider(),
                            new spacer_1.Spacer(),
                            new airplaytogglebutton_1.AirPlayToggleButton(),
                            new casttogglebutton_1.CastToggleButton(),
                            new settingstogglebutton_1.SettingsToggleButton({ settingsPanel: settingsPanel }),
                            new fullscreentogglebutton_1.FullscreenToggleButton(),
                        ],
                        cssClasses: ['controlbar-bottom'],
                    }),
                ],
            });
            return new uicontainer_1.UIContainer({
                components: [
                    new audioonlyoverlay_1.AudioOnlyOverlay(),
                    subtitleOverlay,
                    new bufferingoverlay_1.BufferingOverlay(),
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    new caststatusoverlay_1.CastStatusOverlay(),
                    controlBar,
                    // new TitleBar(),
                    new recommendationoverlay_1.RecommendationOverlay(),
                    // new Watermark(),
                    new errormessageoverlay_1.ErrorMessageOverlay(),
                ],
                cssClasses: ['ui-skin-mi-wbc'],
            });
        }
        // function modernAdsUI() {
        //   return new UIContainer({
        //     components: [
        //       new BufferingOverlay(),
        //       new AdClickOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Container({
        //         components: [
        //           new AdMessageLabel({ text: 'Ad: {remainingTime} secs' }),
        //           new AdSkipButton(),
        //         ],
        //         cssClass: 'ui-ads-status',
        //       }),
        //       new ControlBar({
        //         components: [
        //           new Container({
        //             components: [
        //               new PlaybackToggleButton(),
        //               new VolumeToggleButton(),
        //               new VolumeSlider(),
        //               new Spacer(),
        //               new FullscreenToggleButton(),
        //             ],
        //             cssClasses: ['controlbar-bottom'],
        //           }),
        //         ],
        //       }),
        //     ],
        //     cssClasses: ['ui-skin-mi-wbc', 'ui-skin-ads'],
        //   });
        // }
        function modernSmallScreenUI() {
            var subtitleOverlay = new subtitleoverlay_1.SubtitleOverlay();
            var settingsPanel = new settingspanel_1.SettingsPanel({
                components: [
                    new settingspanel_1.SettingsPanelItem('Video Quality', new videoqualityselectbox_1.VideoQualitySelectBox()),
                    new settingspanel_1.SettingsPanelItem('Speed', new playbackspeedselectbox_1.PlaybackSpeedSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Track', new audiotrackselectbox_1.AudioTrackSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Quality', new audioqualityselectbox_1.AudioQualitySelectBox()),
                ],
                hidden: true,
                hideDelay: -1,
            });
            var subtitleSettingsPanel = new subtitlesettingspanel_1.SubtitleSettingsPanel({
                hidden: true,
                hideDelay: -1,
                overlay: subtitleOverlay,
                settingsPanel: settingsPanel,
            });
            var subtitleSettingsOpenButton = new subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton({
                subtitleSettingsPanel: subtitleSettingsPanel,
                settingsPanel: settingsPanel,
            });
            settingsPanel.addComponent(new settingspanel_1.SettingsPanelItem(new subtitlesettingslabel_1.SubtitleSettingsLabel({ text: 'Subtitles', opener: subtitleSettingsOpenButton }), new subtitleselectbox_1.SubtitleSelectBox()));
            settingsPanel.addComponent(new closebutton_1.CloseButton({ target: settingsPanel }));
            subtitleSettingsPanel.addComponent(new closebutton_1.CloseButton({ target: subtitleSettingsPanel }));
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    new container_1.Container({
                        components: [
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
                            new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel() }),
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
                        ],
                        cssClasses: ['controlbar-top'],
                    }),
                ],
            });
            return new uicontainer_1.UIContainer({
                components: [
                    subtitleOverlay,
                    new bufferingoverlay_1.BufferingOverlay(),
                    new caststatusoverlay_1.CastStatusOverlay(),
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    controlBar,
                    new titlebar_1.TitleBar({
                        components: [
                            new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Title }),
                            new casttogglebutton_1.CastToggleButton(),
                            new vrtogglebutton_1.VRToggleButton(),
                            new volumetogglebutton_1.VolumeToggleButton(),
                            new settingstogglebutton_1.SettingsToggleButton({ settingsPanel: settingsPanel }),
                            new fullscreentogglebutton_1.FullscreenToggleButton(),
                        ],
                    }),
                    settingsPanel,
                    subtitleSettingsPanel,
                    new recommendationoverlay_1.RecommendationOverlay(),
                    // new Watermark(),
                    new errormessageoverlay_1.ErrorMessageOverlay(),
                ],
                cssClasses: ['ui-skin-mi-wbc', 'ui-skin-smallscreen'],
            });
        }
        function modernAudioOnlySmallScreenUI() {
            var subtitleOverlay = new subtitleoverlay_1.SubtitleOverlay();
            var settingsPanel = new settingspanel_1.SettingsPanel({
                components: [
                    new settingspanel_1.SettingsPanelItem('Speed', new playbackspeedselectbox_1.PlaybackSpeedSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Track', new audiotrackselectbox_1.AudioTrackSelectBox()),
                    new settingspanel_1.SettingsPanelItem('Audio Quality', new audioqualityselectbox_1.AudioQualitySelectBox()),
                ],
                hidden: true,
                hideDelay: -1,
            });
            var subtitleSettingsPanel = new subtitlesettingspanel_1.SubtitleSettingsPanel({
                hidden: true,
                hideDelay: -1,
                overlay: subtitleOverlay,
                settingsPanel: settingsPanel,
            });
            var subtitleSettingsOpenButton = new subtitlesettingsopenbutton_1.SubtitleSettingsOpenButton({
                subtitleSettingsPanel: subtitleSettingsPanel,
                settingsPanel: settingsPanel,
            });
            settingsPanel.addComponent(new settingspanel_1.SettingsPanelItem(new subtitlesettingslabel_1.SubtitleSettingsLabel({ text: 'Subtitles', opener: subtitleSettingsOpenButton }), new subtitleselectbox_1.SubtitleSelectBox()));
            settingsPanel.addComponent(new closebutton_1.CloseButton({ target: settingsPanel }));
            subtitleSettingsPanel.addComponent(new closebutton_1.CloseButton({ target: subtitleSettingsPanel }));
            var controlBar = new controlbar_1.ControlBar({
                components: [
                    new container_1.Container({
                        components: [
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
                            new seekbar_1.SeekBar({ label: new seekbarlabel_1.SeekBarLabel() }),
                            new playbacktimelabel_1.PlaybackTimeLabel({ timeLabelMode: playbacktimelabel_1.PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
                        ],
                        cssClasses: ['controlbar-top'],
                    }),
                ],
            });
            return new uicontainer_1.UIContainer({
                components: [
                    new audioonlyoverlay_1.AudioOnlyOverlay(),
                    subtitleOverlay,
                    new bufferingoverlay_1.BufferingOverlay(),
                    new caststatusoverlay_1.CastStatusOverlay(),
                    new playbacktoggleoverlay_1.PlaybackToggleOverlay(),
                    controlBar,
                    new titlebar_1.TitleBar({
                        components: [
                            new metadatalabel_1.MetadataLabel({ content: metadatalabel_1.MetadataLabelContent.Title }),
                            new casttogglebutton_1.CastToggleButton(),
                            new vrtogglebutton_1.VRToggleButton(),
                            new volumetogglebutton_1.VolumeToggleButton(),
                            new settingstogglebutton_1.SettingsToggleButton({ settingsPanel: settingsPanel }),
                            new fullscreentogglebutton_1.FullscreenToggleButton(),
                        ],
                    }),
                    settingsPanel,
                    subtitleSettingsPanel,
                    new recommendationoverlay_1.RecommendationOverlay(),
                    // new Watermark(),
                    new errormessageoverlay_1.ErrorMessageOverlay(),
                ],
                cssClasses: ['ui-skin-mi-wbc', 'ui-skin-smallscreen'],
            });
        }
        // function modernSmallScreenAdsUI() {
        //   return new UIContainer({
        //     components: [
        //       new BufferingOverlay(),
        //       new AdClickOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new TitleBar({
        //         components: [
        //           // dummy label with no content to move buttons to the right
        //           new Label({ cssClass: 'label-metadata-title' }),
        //           new FullscreenToggleButton(),
        //         ],
        //       }),
        //       new Container({
        //         components: [
        //           new AdMessageLabel({ text: 'Ad: {remainingTime} secs' }),
        //           new AdSkipButton(),
        //         ],
        //         cssClass: 'ui-ads-status',
        //       }),
        //     ],
        //     cssClasses: ['ui-skin-mi-wbc', 'ui-skin-ads', 'ui-skin-smallscreen'],
        //   });
        // }
        // function modernCastReceiverUI() {
        //   let controlBar = new ControlBar({
        //     components: [
        //       new Container({
        //         components: [
        //           new PlaybackTimeLabel({ timeLabelMode: PlaybackTimeLabelMode.CurrentTime, hideInLivePlayback: true }),
        //           new SeekBar({ smoothPlaybackPositionUpdateIntervalMs: -1 }),
        //           new PlaybackTimeLabel({ timeLabelMode: PlaybackTimeLabelMode.TotalTime, cssClasses: ['text-right'] }),
        //         ],
        //         cssClasses: ['controlbar-top'],
        //       }),
        //     ],
        //   });
        //   return new CastUIContainer({
        //     components: [
        //       new SubtitleOverlay(),
        //       new BufferingOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Watermark(),
        //       controlBar,
        //       new TitleBar({ keepHiddenWithoutMetadata: true }),
        //       new ErrorMessageOverlay(),
        //     ],
        //     cssClasses: ['ui-skin-mi-wbc', 'ui-skin-cast-receiver'],
        //   });
        // }
        // export function buildModernUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   // show smallScreen UI only on mobile/handheld devices
        //   let smallScreenSwitchWidth = 600;
        //   return new UIManager(player, [{
        //     ui: modernSmallScreenAdsUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isMobile && context.documentWidth < smallScreenSwitchWidth && context.isAdWithUI;
        //     },
        //   }, {
        //     ui: modernAdsUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isAdWithUI;
        //     },
        //   }, {
        //     ui: modernSmallScreenUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isMobile && context.documentWidth < smallScreenSwitchWidth;
        //     },
        //   }, {
        //     ui: modernUI(),
        //   }], config);
        // }
        // export function buildModernSmallScreenUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, [{
        //     ui: modernSmallScreenAdsUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isAdWithUI;
        //     },
        //   }, {
        //     ui: modernSmallScreenUI(),
        //   }], config);
        // }
        // export function buildModernCastReceiverUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, modernCastReceiverUI(), config);
        // }
        // function legacyUI() {
        //   let settingsPanel = new SettingsPanel({
        //     components: [
        //       new SettingsPanelItem('Video Quality', new VideoQualitySelectBox()),
        //       new SettingsPanelItem('Audio Track', new AudioTrackSelectBox()),
        //       new SettingsPanelItem('Audio Quality', new AudioQualitySelectBox()),
        //       new SettingsPanelItem('Subtitles', new SubtitleSelectBox()),
        //     ],
        //     hidden: true,
        //   });
        //   let controlBar = new ControlBar({
        //     components: [
        //       settingsPanel,
        //       new PlaybackToggleButton(),
        //       new SeekBar({ label: new SeekBarLabel() }),
        //       new PlaybackTimeLabel(),
        //       new VRToggleButton(),
        //       new VolumeControlButton(),
        //       new SettingsToggleButton({ settingsPanel: settingsPanel }),
        //       new CastToggleButton(),
        //       new FullscreenToggleButton(),
        //     ],
        //   });
        //   return new UIContainer({
        //     components: [
        //       new SubtitleOverlay(),
        //       new CastStatusOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Watermark(),
        //       new RecommendationOverlay(),
        //       controlBar,
        //       new TitleBar(),
        //       new ErrorMessageOverlay(),
        //     ],
        //     cssClasses: ['ui-skin-legacy'],
        //   });
        // }
        // function legacyAdsUI() {
        //   return new UIContainer({
        //     components: [
        //       new AdClickOverlay(),
        //       new ControlBar({
        //         components: [
        //           new PlaybackToggleButton(),
        //           new AdMessageLabel(),
        //           new VolumeControlButton(),
        //           new FullscreenToggleButton(),
        //         ],
        //       }),
        //       new AdSkipButton(),
        //     ],
        //     cssClasses: ['ui-skin-legacy', 'ui-skin-ads'],
        //   });
        // }
        // function legacyCastReceiverUI() {
        //   let controlBar = new ControlBar({
        //     components: [
        //       new SeekBar(),
        //       new PlaybackTimeLabel(),
        //     ],
        //   });
        //   return new UIContainer({
        //     components: [
        //       new SubtitleOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Watermark(),
        //       controlBar,
        //       new TitleBar(),
        //       new ErrorMessageOverlay(),
        //     ],
        //     cssClasses: ['ui-skin-legacy', 'ui-skin-cast-receiver'],
        //   });
        // }
        // function legacyTestUI() {
        //   let settingsPanel = new SettingsPanel({
        //     components: [
        //       new SettingsPanelItem('Video Quality', new VideoQualitySelectBox()),
        //       new SettingsPanelItem('Audio Track', new AudioTrackSelectBox()),
        //       new SettingsPanelItem('Audio Quality', new AudioQualitySelectBox()),
        //       new SettingsPanelItem('Subtitles', new SubtitleSelectBox()),
        //     ],
        //     hidden: true,
        //   });
        //   let controlBar = new ControlBar({
        //     components: [settingsPanel,
        //       new PlaybackToggleButton(),
        //       new SeekBar({ label: new SeekBarLabel() }),
        //       new PlaybackTimeLabel(),
        //       new VRToggleButton(),
        //       new VolumeToggleButton(),
        //       new VolumeSlider(),
        //       new VolumeControlButton(),
        //       new VolumeControlButton({ vertical: false }),
        //       new SettingsToggleButton({ settingsPanel: settingsPanel }),
        //       new CastToggleButton(),
        //       new FullscreenToggleButton(),
        //     ],
        //   });
        //   return new UIContainer({
        //     components: [
        //       new SubtitleOverlay(),
        //       new CastStatusOverlay(),
        //       new PlaybackToggleOverlay(),
        //       new Watermark(),
        //       new RecommendationOverlay(),
        //       controlBar,
        //       new TitleBar(),
        //       new ErrorMessageOverlay(),
        //     ],
        //     cssClasses: ['ui-skin-legacy'],
        //   });
        // }
        // export function buildLegacyUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, [{
        //     ui: legacyAdsUI(),
        //     condition: (context: UIConditionContext) => {
        //       return context.isAdWithUI;
        //     },
        //   }, {
        //     ui: legacyUI(),
        //   }], config);
        // }
        // export function buildLegacyCastReceiverUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, legacyCastReceiverUI(), config);
        // }
        // export function buildLegacyTestUI(player: PlayerAPI, config: UIConfig = {}): UIManager {
        //   return new UIManager(player, legacyTestUI(), config);
        // }
    })(Factory = UIManager.Factory || (UIManager.Factory = {}));
})(UIManager = exports.UIManager || (exports.UIManager = {}));
exports.UIManager = UIManager;
/**
 * Encapsulates functionality to manage a UI instance. Used by the {@link UIManager} to manage multiple UI instances.
 */
var UIInstanceManager = (function () {
    function UIInstanceManager(player, ui, config) {
        this.events = {
            onConfigured: new eventdispatcher_1.EventDispatcher(),
            onSeek: new eventdispatcher_1.EventDispatcher(),
            onSeekPreview: new eventdispatcher_1.EventDispatcher(),
            onSeeked: new eventdispatcher_1.EventDispatcher(),
            onComponentShow: new eventdispatcher_1.EventDispatcher(),
            onComponentHide: new eventdispatcher_1.EventDispatcher(),
            onControlsShow: new eventdispatcher_1.EventDispatcher(),
            onPreviewControlsHide: new eventdispatcher_1.EventDispatcher(),
            onControlsHide: new eventdispatcher_1.EventDispatcher(),
            onRelease: new eventdispatcher_1.EventDispatcher(),
        };
        this.playerWrapper = new PlayerWrapper(player);
        this.ui = ui;
        this.config = config;
    }
    UIInstanceManager.prototype.getConfig = function () {
        return this.config;
    };
    UIInstanceManager.prototype.getUI = function () {
        return this.ui;
    };
    UIInstanceManager.prototype.getPlayer = function () {
        return this.playerWrapper.getPlayer();
    };
    Object.defineProperty(UIInstanceManager.prototype, "onConfigured", {
        /**
         * Fires when the UI is fully configured and added to the DOM.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onConfigured;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onSeek", {
        /**
         * Fires when a seek starts.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onSeek;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onSeekPreview", {
        /**
         * Fires when the seek timeline is scrubbed.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onSeekPreview;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onSeeked", {
        /**
         * Fires when a seek is finished.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onSeeked;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onComponentShow", {
        /**
         * Fires when a component is showing.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onComponentShow;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onComponentHide", {
        /**
         * Fires when a component is hiding.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onComponentHide;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onControlsShow", {
        /**
         * Fires when the UI controls are showing.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onControlsShow;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onPreviewControlsHide", {
        /**
         * Fires before the UI controls are hiding to check if they are allowed to hide.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onPreviewControlsHide;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onControlsHide", {
        /**
         * Fires when the UI controls are hiding.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onControlsHide;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIInstanceManager.prototype, "onRelease", {
        /**
         * Fires when the UI controls are released.
         * @returns {EventDispatcher}
         */
        get: function () {
            return this.events.onRelease;
        },
        enumerable: true,
        configurable: true
    });
    UIInstanceManager.prototype.clearEventHandlers = function () {
        this.playerWrapper.clearEventHandlers();
        var events = this.events; // avoid TS7017
        for (var event_1 in events) {
            var dispatcher = events[event_1];
            dispatcher.unsubscribeAll();
        }
    };
    return UIInstanceManager;
}());
exports.UIInstanceManager = UIInstanceManager;
/**
 * Extends the {@link UIInstanceManager} for internal use in the {@link UIManager} and provides access to functionality
 * that components receiving a reference to the {@link UIInstanceManager} should not have access to.
 */
var InternalUIInstanceManager = (function (_super) {
    __extends(InternalUIInstanceManager, _super);
    function InternalUIInstanceManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InternalUIInstanceManager.prototype.getWrappedPlayer = function () {
        // TODO find a non-hacky way to provide the WrappedPlayer to the UIManager without exporting it
        // getPlayer() actually returns the WrappedPlayer but its return type is set to Player so the WrappedPlayer does
        // not need to be exported
        return this.getPlayer();
    };
    InternalUIInstanceManager.prototype.configureControls = function () {
        this.configureControlsTree(this.getUI());
        this.configured = true;
    };
    InternalUIInstanceManager.prototype.isConfigured = function () {
        return this.configured;
    };
    InternalUIInstanceManager.prototype.configureControlsTree = function (component) {
        var _this = this;
        var configuredComponents = [];
        uiutils_1.UIUtils.traverseTree(component, function (component) {
            // First, check if we have already configured a component, and throw an error if we did. Multiple configuration
            // of the same component leads to unexpected UI behavior. Also, a component that is in the UI tree multiple
            // times hints at a wrong UI structure.
            // We could just skip configuration in such a case and not throw an exception, but enforcing a clean UI tree
            // seems like the better choice.
            for (var _i = 0, configuredComponents_1 = configuredComponents; _i < configuredComponents_1.length; _i++) {
                var configuredComponent = configuredComponents_1[_i];
                if (configuredComponent === component) {
                    // Write the component to the console to simplify identification of the culprit
                    // (e.g. by inspecting the config)
                    if (console) {
                        console.error('Circular reference in UI tree', component);
                    }
                    // Additionally throw an error, because this case must not happen and leads to unexpected UI behavior.
                    throw Error('Circular reference in UI tree: ' + component.constructor.name);
                }
            }
            component.initialize();
            component.configure(_this.getPlayer(), _this);
            configuredComponents.push(component);
        });
    };
    InternalUIInstanceManager.prototype.releaseControls = function () {
        // Do not call release methods if the components have never been configured; this can result in exceptions
        if (this.configured) {
            this.onRelease.dispatch(this.getUI());
            this.releaseControlsTree(this.getUI());
            this.configured = false;
        }
        this.released = true;
    };
    InternalUIInstanceManager.prototype.isReleased = function () {
        return this.released;
    };
    InternalUIInstanceManager.prototype.releaseControlsTree = function (component) {
        component.release();
        if (component instanceof container_1.Container) {
            for (var _i = 0, _a = component.getComponents(); _i < _a.length; _i++) {
                var childComponent = _a[_i];
                this.releaseControlsTree(childComponent);
            }
        }
    };
    InternalUIInstanceManager.prototype.clearEventHandlers = function () {
        _super.prototype.clearEventHandlers.call(this);
    };
    return InternalUIInstanceManager;
}(UIInstanceManager));
/**
 * Wraps the player to track event handlers and provide a simple method to remove all registered event
 * handlers from the player.
 */
var PlayerWrapper = (function () {
    function PlayerWrapper(player) {
        var _this = this;
        this.eventHandlers = {};
        this.player = player;
        // Collect all members of the player (public API methods and properties of the player)
        // (Object.getOwnPropertyNames(player) does not work with the player TypeScript class starting in 7.2)
        var members = [];
        for (var member in player) {
            members.push(member);
        }
        // Split the members into methods and properties
        var methods = [];
        var properties = [];
        for (var _i = 0, members_1 = members; _i < members_1.length; _i++) {
            var member = members_1[_i];
            if (typeof player[member] === 'function') {
                methods.push(member);
            }
            else {
                properties.push(member);
            }
        }
        // Create wrapper object
        var wrapper = {};
        var _loop_1 = function (method) {
            wrapper[method] = function () {
                // console.log('called ' + member); // track method calls on the player
                return player[method].apply(player, arguments);
            };
        };
        // Add function wrappers for all API methods that do nothing but calling the base method on the player
        for (var _a = 0, methods_1 = methods; _a < methods_1.length; _a++) {
            var method = methods_1[_a];
            _loop_1(method);
        }
        var _loop_2 = function (property) {
            // Get an eventually existing property descriptor to differentiate between plain properties and properties with
            // getters/setters.
            var propertyDescriptor = Object.getOwnPropertyDescriptor(player, property) ||
                Object.getOwnPropertyDescriptor(Object.getPrototypeOf(player), property);
            // If the property has getters/setters, wrap them accordingly...
            if (propertyDescriptor && (propertyDescriptor.get || propertyDescriptor.set)) {
                Object.defineProperty(wrapper, property, {
                    get: function () { return propertyDescriptor.get.call(player); },
                    set: function (value) { return propertyDescriptor.set.call(player, value); },
                });
            }
            else {
                wrapper[property] = player[property];
            }
        };
        // Add all public properties of the player to the wrapper
        for (var _b = 0, properties_1 = properties; _b < properties_1.length; _b++) {
            var property = properties_1[_b];
            _loop_2(property);
        }
        // Explicitly add a wrapper method for 'addEventHandler' that adds added event handlers to the event list
        wrapper.addEventHandler = function (eventType, callback) {
            // in player V8 addEventHandler was replaced by on
            if (player.on) {
                player.on(eventType, callback);
            }
            else {
                // keep backward compatibility for versions <7.7
                player.addEventHandler(eventType, callback);
            }
            if (!_this.eventHandlers[eventType]) {
                _this.eventHandlers[eventType] = [];
            }
            _this.eventHandlers[eventType].push(callback);
            return wrapper;
        };
        // Explicitly add a wrapper method for 'removeEventHandler' that removes removed event handlers from the event list
        wrapper.removeEventHandler = function (eventType, callback) {
            if (player.off) {
                player.off(eventType, callback);
            }
            else {
                // keep backward compatibility for versions <7.7
                player.removeEventHandler(eventType, callback);
            }
            if (_this.eventHandlers[eventType]) {
                arrayutils_1.ArrayUtils.remove(_this.eventHandlers[eventType], callback);
            }
            return wrapper;
        };
        wrapper.fireEventInUI = function (event, data) {
            if (_this.eventHandlers[event]) {
                // Extend the data object with default values to convert it to a {@link PlayerEvent} object.
                var playerEventData = Object.assign({}, {
                    timestamp: Date.now(),
                    type: event,
                    // Add a marker property so the UI can detect UI-internal player events
                    uiSourced: true,
                }, data);
                // Execute the registered callbacks
                for (var _i = 0, _a = _this.eventHandlers[event]; _i < _a.length; _i++) {
                    var callback = _a[_i];
                    callback(playerEventData);
                }
            }
        };
        this.wrapper = wrapper;
    }
    /**
     * Returns a wrapped player object that can be used on place of the normal player object.
     * @returns {WrappedPlayer} a wrapped player
     */
    PlayerWrapper.prototype.getPlayer = function () {
        return this.wrapper;
    };
    /**
     * Clears all registered event handlers from the player that were added through the wrapped player.
     */
    PlayerWrapper.prototype.clearEventHandlers = function () {
        for (var eventType in this.eventHandlers) {
            for (var _i = 0, _a = this.eventHandlers[eventType]; _i < _a.length; _i++) {
                var callback = _a[_i];
                this.player.removeEventHandler(eventType, callback);
            }
        }
    };
    return PlayerWrapper;
}());


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Guid;
(function (Guid) {
    var guid = 1;
    function next() {
        return guid++;
    }
    Guid.next = next;
})(Guid = exports.Guid || (exports.Guid = {}));


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var storageutils_1 = __webpack_require__(44);
var component_1 = __webpack_require__(2);
var eventdispatcher_1 = __webpack_require__(3);
var SubtitleSettingsManager = (function () {
    function SubtitleSettingsManager() {
        var _this = this;
        this._properties = {
            fontColor: new SubtitleSettingsProperty(this),
            fontOpacity: new SubtitleSettingsProperty(this),
            fontFamily: new SubtitleSettingsProperty(this),
            fontSize: new SubtitleSettingsProperty(this),
            characterEdge: new SubtitleSettingsProperty(this),
            backgroundColor: new SubtitleSettingsProperty(this),
            backgroundOpacity: new SubtitleSettingsProperty(this),
            windowColor: new SubtitleSettingsProperty(this),
            windowOpacity: new SubtitleSettingsProperty(this),
        };
        this.userSettings = {};
        this.localStorageKey = DummyComponent.instance().prefixCss('subtitlesettings');
        var _loop_1 = function (propertyName) {
            this_1._properties[propertyName].onChanged.subscribe(function (sender, property) {
                if (property.isSet()) {
                    _this.userSettings[propertyName] = property.value;
                }
                else {
                    // Delete the property from the settings object if unset to avoid serialization of null values
                    delete _this.userSettings[propertyName];
                }
                // Save the settings object when a property has changed
                _this.save();
            });
        };
        var this_1 = this;
        for (var propertyName in this._properties) {
            _loop_1(propertyName);
        }
        this.load();
    }
    SubtitleSettingsManager.prototype.reset = function () {
        for (var propertyName in this._properties) {
            this._properties[propertyName].clear();
        }
    };
    Object.defineProperty(SubtitleSettingsManager.prototype, "fontColor", {
        get: function () {
            return this._properties.fontColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "fontOpacity", {
        get: function () {
            return this._properties.fontOpacity;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "fontFamily", {
        get: function () {
            return this._properties.fontFamily;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "fontSize", {
        get: function () {
            return this._properties.fontSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "characterEdge", {
        get: function () {
            return this._properties.characterEdge;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "backgroundColor", {
        get: function () {
            return this._properties.backgroundColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "backgroundOpacity", {
        get: function () {
            return this._properties.backgroundOpacity;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "windowColor", {
        get: function () {
            return this._properties.windowColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubtitleSettingsManager.prototype, "windowOpacity", {
        get: function () {
            return this._properties.windowOpacity;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Saves the settings to local storage.
     */
    SubtitleSettingsManager.prototype.save = function () {
        storageutils_1.StorageUtils.setObject(this.localStorageKey, this.userSettings);
    };
    /**
     * Loads the settings from local storage
     */
    SubtitleSettingsManager.prototype.load = function () {
        this.userSettings = storageutils_1.StorageUtils.getObject(this.localStorageKey) || {};
        // Apply the loaded settings
        for (var property in this.userSettings) {
            this._properties[property].value = this.userSettings[property];
        }
    };
    return SubtitleSettingsManager;
}());
exports.SubtitleSettingsManager = SubtitleSettingsManager;
/**
 * A dummy component whose sole purpose is to expose the {@link #prefixCss} method to the
 * {@link SubtitleSettingsManager}.
 */
var DummyComponent = (function (_super) {
    __extends(DummyComponent, _super);
    function DummyComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DummyComponent.instance = function () {
        if (!DummyComponent._instance) {
            DummyComponent._instance = new DummyComponent();
        }
        return DummyComponent._instance;
    };
    DummyComponent.prototype.prefixCss = function (cssClassOrId) {
        return _super.prototype.prefixCss.call(this, cssClassOrId);
    };
    return DummyComponent;
}(component_1.Component));
var SubtitleSettingsProperty = (function () {
    function SubtitleSettingsProperty(manager) {
        this._manager = manager;
        this._onChanged = new eventdispatcher_1.EventDispatcher();
    }
    SubtitleSettingsProperty.prototype.isSet = function () {
        return this._value != null;
    };
    SubtitleSettingsProperty.prototype.clear = function () {
        this._value = null;
        this.onChangedEvent(null);
    };
    Object.defineProperty(SubtitleSettingsProperty.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            if (typeof value === 'string' && value === 'null') {
                value = null;
            }
            this._value = value;
            this.onChangedEvent(value);
        },
        enumerable: true,
        configurable: true
    });
    SubtitleSettingsProperty.prototype.onChangedEvent = function (value) {
        this._onChanged.dispatch(this._manager, this);
    };
    Object.defineProperty(SubtitleSettingsProperty.prototype, "onChanged", {
        get: function () {
            return this._onChanged.getEvent();
        },
        enumerable: true,
        configurable: true
    });
    return SubtitleSettingsProperty;
}());
exports.SubtitleSettingsProperty = SubtitleSettingsProperty;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var dom_1 = __webpack_require__(1);
/**
 * Tracks the loading state of images.
 */
var ImageLoader = (function () {
    function ImageLoader() {
        this.state = {};
    }
    /**
     * Loads an image and call the callback once the image is loaded. If the image is already loaded, the callback
     * is called immediately, else it is called once loading has finished. Calling this method multiple times for the
     * same image while it is loading calls only let callback passed into the last call.
     * @param url The url to the image to load
     * @param loadedCallback The callback that is called when the image is loaded
     */
    ImageLoader.prototype.load = function (url, loadedCallback) {
        var _this = this;
        if (!this.state[url]) {
            // When the image was never attempted to be loaded before, we create a state and store it in the state map
            // for later use when the same image is requested to be loaded again.
            var state_1 = {
                url: url,
                image: new dom_1.DOM('img', {}),
                loadedCallback: loadedCallback,
                loaded: false,
                width: 0,
                height: 0,
            };
            this.state[url] = state_1;
            // Listen to the load event, update the state and call the callback once the image is loaded
            state_1.image.on('load', function (e) {
                state_1.loaded = true;
                state_1.width = state_1.image.get(0).width;
                state_1.height = state_1.image.get(0).height;
                _this.callLoadedCallback(state_1);
            });
            // Set the image URL to start the loading
            state_1.image.attr('src', state_1.url);
        }
        else {
            // We have a state for the requested image, so it is either already loaded or currently loading
            var state = this.state[url];
            // We overwrite the callback to make sure that only the callback of the latest call gets executed.
            // Earlier callbacks become invalid once a new load call arrives, and they are not called as long as the image
            // is not loaded.
            state.loadedCallback = loadedCallback;
            // When the image is already loaded, we directly execute the callback instead of waiting for the load event
            if (state.loaded) {
                this.callLoadedCallback(state);
            }
        }
    };
    ImageLoader.prototype.callLoadedCallback = function (state) {
        state.loadedCallback(state.url, state.width, state.height);
    };
    return ImageLoader;
}());
exports.ImageLoader = ImageLoader;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var component_1 = __webpack_require__(2);
var dom_1 = __webpack_require__(1);
/**
 * Animated analog TV static noise.
 */
var TvNoiseCanvas = (function (_super) {
    __extends(TvNoiseCanvas, _super);
    function TvNoiseCanvas(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.canvasWidth = 160;
        _this.canvasHeight = 90;
        _this.interferenceHeight = 50;
        _this.lastFrameUpdate = 0;
        _this.frameInterval = 60;
        _this.useAnimationFrame = !!window.requestAnimationFrame;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-tvnoisecanvas',
        }, _this.config);
        return _this;
    }
    TvNoiseCanvas.prototype.toDomElement = function () {
        return this.canvas = new dom_1.DOM('canvas', { 'class': this.getCssClasses() });
    };
    TvNoiseCanvas.prototype.start = function () {
        this.canvasElement = this.canvas.get(0);
        this.canvasContext = this.canvasElement.getContext('2d');
        this.noiseAnimationWindowPos = -this.canvasHeight;
        this.lastFrameUpdate = 0;
        this.canvasElement.width = this.canvasWidth;
        this.canvasElement.height = this.canvasHeight;
        this.renderFrame();
    };
    TvNoiseCanvas.prototype.stop = function () {
        if (this.useAnimationFrame) {
            cancelAnimationFrame(this.frameUpdateHandlerId);
        }
        else {
            clearTimeout(this.frameUpdateHandlerId);
        }
    };
    TvNoiseCanvas.prototype.renderFrame = function () {
        // This code has been copied from the player controls.js and simplified
        if (this.lastFrameUpdate + this.frameInterval > new Date().getTime()) {
            // It's too early to render the next frame
            this.scheduleNextRender();
            return;
        }
        var currentPixelOffset;
        var canvasWidth = this.canvasWidth;
        var canvasHeight = this.canvasHeight;
        // Create texture
        var noiseImage = this.canvasContext.createImageData(canvasWidth, canvasHeight);
        // Fill texture with noise
        for (var y = 0; y < canvasHeight; y++) {
            for (var x = 0; x < canvasWidth; x++) {
                currentPixelOffset = (canvasWidth * y * 4) + x * 4;
                noiseImage.data[currentPixelOffset] = Math.random() * 255;
                if (y < this.noiseAnimationWindowPos || y > this.noiseAnimationWindowPos + this.interferenceHeight) {
                    noiseImage.data[currentPixelOffset] *= 0.85;
                }
                noiseImage.data[currentPixelOffset + 1] = noiseImage.data[currentPixelOffset];
                noiseImage.data[currentPixelOffset + 2] = noiseImage.data[currentPixelOffset];
                noiseImage.data[currentPixelOffset + 3] = 50;
            }
        }
        // Put texture onto canvas
        this.canvasContext.putImageData(noiseImage, 0, 0);
        this.lastFrameUpdate = new Date().getTime();
        this.noiseAnimationWindowPos += 7;
        if (this.noiseAnimationWindowPos > canvasHeight) {
            this.noiseAnimationWindowPos = -canvasHeight;
        }
        this.scheduleNextRender();
    };
    TvNoiseCanvas.prototype.scheduleNextRender = function () {
        if (this.useAnimationFrame) {
            this.frameUpdateHandlerId = window.requestAnimationFrame(this.renderFrame.bind(this));
        }
        else {
            this.frameUpdateHandlerId = setTimeout(this.renderFrame.bind(this), this.frameInterval);
        }
    };
    return TvNoiseCanvas;
}(component_1.Component));
exports.TvNoiseCanvas = TvNoiseCanvas;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var component_1 = __webpack_require__(2);
var timeout_1 = __webpack_require__(9);
/**
 * Overlays the player and displays an audio-only indicator.
 */
var AudioOnlyOverlay = (function (_super) {
    __extends(AudioOnlyOverlay, _super);
    function AudioOnlyOverlay(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.indicator = [
            new component_1.Component({ tag: 'div', cssClass: 'ui-audioonly-overlay-indicator', hidden: true }),
        ];
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-audioonly-overlay',
            hidden: false,
            components: _this.indicator,
        }, _this.config);
        return _this;
    }
    AudioOnlyOverlay.prototype.configure = function (player, uimanager) {
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        var overlayShowTimeout = new timeout_1.Timeout(400, function () {
            config.components[0].show();
        });
        var showOverlay = function () {
            overlayShowTimeout.start();
        };
        var hideOverlay = function () {
            overlayShowTimeout.clear();
            config.components[0].hide();
        };
        player.addEventHandler(player.EVENT.ON_PLAY, showOverlay);
        player.addEventHandler(player.EVENT.ON_PAUSED, hideOverlay);
    };
    return AudioOnlyOverlay;
}(container_1.Container));
exports.AudioOnlyOverlay = AudioOnlyOverlay;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var listselector_1 = __webpack_require__(33);
var dom_1 = __webpack_require__(1);
var ItemSelectionList = (function (_super) {
    __extends(ItemSelectionList, _super);
    function ItemSelectionList(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            tag: 'ul',
            cssClass: 'ui-itemselectionlist',
        }, _this.config);
        return _this;
    }
    ItemSelectionList.prototype.isActive = function () {
        return this.items.length > 1;
    };
    ItemSelectionList.prototype.toDomElement = function () {
        var listElement = new dom_1.DOM('ul', {
            'id': this.config.id,
            'class': this.getCssClasses(),
        });
        this.listElement = listElement;
        this.updateDomItems();
        return listElement;
    };
    ItemSelectionList.prototype.updateDomItems = function (selectedValue) {
        var _this = this;
        if (selectedValue === void 0) { selectedValue = null; }
        // Delete all children
        this.listElement.empty();
        var selectedListItem = null;
        var selectItem = function (listItem) {
            listItem.addClass(_this.prefixCss(ItemSelectionList.CLASS_SELECTED));
        };
        var deselectItem = function (listItem) {
            listItem.removeClass(_this.prefixCss(ItemSelectionList.CLASS_SELECTED));
        };
        var _loop_1 = function (item) {
            var listItem = new dom_1.DOM('li', {
                'type': 'li',
                'class': this_1.prefixCss('ui-selectionlistitem'),
            }).append(new dom_1.DOM('a', {}).html(item.label));
            if (!selectedListItem) {
                if (selectedValue == null) {
                    selectedListItem = listItem;
                }
                else if (String(selectedValue) === item.key) {
                    selectedListItem = listItem;
                }
            }
            // Handle list item selections
            listItem.on('click', function () {
                // Deselect the previous item (if there was a selected item)
                if (selectedListItem) {
                    deselectItem(selectedListItem);
                }
                // Select the clicked item
                selectedListItem = listItem;
                selectItem(listItem);
                // Fire the event
                _this.onItemSelectedEvent(item.key, false);
            });
            // Select default item
            if (selectedListItem) {
                selectItem(selectedListItem);
            }
            this_1.listElement.append(listItem);
        };
        var this_1 = this;
        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
            var item = _a[_i];
            _loop_1(item);
        }
    };
    ItemSelectionList.prototype.onItemAddedEvent = function (value) {
        _super.prototype.onItemAddedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    ItemSelectionList.prototype.onItemRemovedEvent = function (value) {
        _super.prototype.onItemRemovedEvent.call(this, value);
        this.updateDomItems(this.selectedItem);
    };
    ItemSelectionList.prototype.onItemSelectedEvent = function (value, updateDomItems) {
        if (updateDomItems === void 0) { updateDomItems = true; }
        _super.prototype.onItemSelectedEvent.call(this, value);
        if (updateDomItems) {
            this.updateDomItems(value);
        }
    };
    return ItemSelectionList;
}(listselector_1.ListSelector));
ItemSelectionList.CLASS_SELECTED = 'selected';
exports.ItemSelectionList = ItemSelectionList;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var clickoverlay_1 = __webpack_require__(28);
/**
 * A watermark overlay with a clickable logo.
 */
var Watermark = (function (_super) {
    __extends(Watermark, _super);
    function Watermark(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-watermark',
            url: 'http://bitmovin.com',
        }, _this.config);
        return _this;
    }
    return Watermark;
}(clickoverlay_1.ClickOverlay));
exports.Watermark = Watermark;


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(0);
var volumeslider_1 = __webpack_require__(26);
var volumetogglebutton_1 = __webpack_require__(17);
var timeout_1 = __webpack_require__(9);
/**
 * A composite volume control that consists of and internally manages a volume control button that can be used
 * for muting, and a (depending on the CSS style, e.g. slide-out) volume control bar.
 */
var VolumeControlButton = (function (_super) {
    __extends(VolumeControlButton, _super);
    function VolumeControlButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.volumeToggleButton = new volumetogglebutton_1.VolumeToggleButton();
        _this.volumeSlider = new volumeslider_1.VolumeSlider({
            vertical: config.vertical != null ? config.vertical : true,
            hidden: true,
        });
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-volumecontrolbutton',
            components: [_this.volumeToggleButton, _this.volumeSlider],
            hideDelay: 500,
        }, _this.config);
        return _this;
    }
    VolumeControlButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var volumeToggleButton = this.getVolumeToggleButton();
        var volumeSlider = this.getVolumeSlider();
        this.volumeSliderHideTimeout = new timeout_1.Timeout(this.getConfig().hideDelay, function () {
            volumeSlider.hide();
        });
        /*
         * Volume Slider visibility handling
         *
         * The volume slider shall be visible while the user hovers the mute toggle button, while the user hovers the
         * volume slider, and while the user slides the volume slider. If none of these situations are true, the slider
         * shall disappear.
         */
        var volumeSliderHovered = false;
        volumeToggleButton.getDomElement().on('mouseenter', function () {
            // Show volume slider when mouse enters the button area
            if (volumeSlider.isHidden()) {
                volumeSlider.show();
            }
            // Avoid hiding of the slider when button is hovered
            _this.volumeSliderHideTimeout.clear();
        });
        volumeToggleButton.getDomElement().on('mouseleave', function () {
            // Hide slider delayed when button is left
            _this.volumeSliderHideTimeout.reset();
        });
        volumeSlider.getDomElement().on('mouseenter', function () {
            // When the slider is entered, cancel the hide timeout activated by leaving the button
            _this.volumeSliderHideTimeout.clear();
            volumeSliderHovered = true;
        });
        volumeSlider.getDomElement().on('mouseleave', function () {
            // When mouse leaves the slider, only hide it if there is no slide operation in progress
            if (volumeSlider.isSeeking()) {
                _this.volumeSliderHideTimeout.clear();
            }
            else {
                _this.volumeSliderHideTimeout.reset();
            }
            volumeSliderHovered = false;
        });
        volumeSlider.onSeeked.subscribe(function () {
            // When a slide operation is done and the slider not hovered (mouse outside slider), hide slider delayed
            if (!volumeSliderHovered) {
                _this.volumeSliderHideTimeout.reset();
            }
        });
    };
    VolumeControlButton.prototype.release = function () {
        _super.prototype.release.call(this);
        this.volumeSliderHideTimeout.clear();
    };
    /**
     * Provides access to the internally managed volume toggle button.
     * @returns {VolumeToggleButton}
     */
    VolumeControlButton.prototype.getVolumeToggleButton = function () {
        return this.volumeToggleButton;
    };
    /**
     * Provides access to the internally managed volume silder.
     * @returns {VolumeSlider}
     */
    VolumeControlButton.prototype.getVolumeSlider = function () {
        return this.volumeSlider;
    };
    return VolumeControlButton;
}(container_1.Container));
exports.VolumeControlButton = VolumeControlButton;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var button_1 = __webpack_require__(7);
var stringutils_1 = __webpack_require__(10);
/**
 * A button that is displayed during ads and can be used to skip the ad.
 */
var AdSkipButton = (function (_super) {
    __extends(AdSkipButton, _super);
    function AdSkipButton(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-button-ad-skip',
            skipMessage: {
                countdown: 'Skip ad in {remainingTime}',
                skip: 'Skip ad',
            },
        }, _this.config);
        return _this;
    }
    AdSkipButton.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig(); // TODO get rid of generic cast
        var skipMessage = config.skipMessage;
        var adEvent = null;
        var updateSkipMessageHandler = function () {
            // Display this button only if ad is skippable
            if (adEvent.skipOffset) {
                _this.show();
            }
            else {
                _this.hide();
            }
            // Update the skip message on the button
            if (player.getCurrentTime() < adEvent.skipOffset) {
                _this.setText(stringutils_1.StringUtils.replaceAdMessagePlaceholders(config.skipMessage.countdown, adEvent.skipOffset, player));
            }
            else {
                _this.setText(config.skipMessage.skip);
            }
        };
        var adStartHandler = function (event) {
            adEvent = event;
            skipMessage = adEvent.skipMessage || skipMessage;
            updateSkipMessageHandler();
            player.addEventHandler(player.EVENT.ON_TIME_CHANGED, updateSkipMessageHandler);
            player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, updateSkipMessageHandler);
        };
        var adEndHandler = function () {
            player.removeEventHandler(player.EVENT.ON_TIME_CHANGED, updateSkipMessageHandler);
            player.removeEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, updateSkipMessageHandler);
        };
        player.addEventHandler(player.EVENT.ON_AD_STARTED, adStartHandler);
        player.addEventHandler(player.EVENT.ON_AD_SKIPPED, adEndHandler);
        player.addEventHandler(player.EVENT.ON_AD_ERROR, adEndHandler);
        player.addEventHandler(player.EVENT.ON_AD_FINISHED, adEndHandler);
        this.onClick.subscribe(function () {
            // Try to skip the ad (this only works if it is skippable so we don't need to take extra care of that here)
            player.skipAd();
        });
    };
    return AdSkipButton;
}(button_1.Button));
exports.AdSkipButton = AdSkipButton;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var label_1 = __webpack_require__(6);
var stringutils_1 = __webpack_require__(10);
/**
 * A label that displays a message about a running ad, optionally with a countdown.
 */
var AdMessageLabel = (function (_super) {
    __extends(AdMessageLabel, _super);
    function AdMessageLabel(config) {
        if (config === void 0) { config = {}; }
        var _this = _super.call(this, config) || this;
        _this.config = _this.mergeConfig(config, {
            cssClass: 'ui-label-ad-message',
            text: 'This ad will end in {remainingTime} seconds.',
        }, _this.config);
        return _this;
    }
    AdMessageLabel.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var text = this.getConfig().text;
        var updateMessageHandler = function () {
            _this.setText(stringutils_1.StringUtils.replaceAdMessagePlaceholders(text, null, player));
        };
        var adStartHandler = function (event) {
            text = event.adMessage || text;
            updateMessageHandler();
            player.addEventHandler(player.EVENT.ON_TIME_CHANGED, updateMessageHandler);
            player.addEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, updateMessageHandler);
        };
        var adEndHandler = function () {
            player.removeEventHandler(player.EVENT.ON_TIME_CHANGED, updateMessageHandler);
            player.removeEventHandler(player.EVENT.ON_CAST_TIME_UPDATED, updateMessageHandler);
        };
        player.addEventHandler(player.EVENT.ON_AD_STARTED, adStartHandler);
        player.addEventHandler(player.EVENT.ON_AD_SKIPPED, adEndHandler);
        player.addEventHandler(player.EVENT.ON_AD_ERROR, adEndHandler);
        player.addEventHandler(player.EVENT.ON_AD_FINISHED, adEndHandler);
    };
    return AdMessageLabel;
}(label_1.Label));
exports.AdMessageLabel = AdMessageLabel;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var clickoverlay_1 = __webpack_require__(28);
/**
 * A simple click capture overlay for clickThroughUrls of ads.
 */
var AdClickOverlay = (function (_super) {
    __extends(AdClickOverlay, _super);
    function AdClickOverlay() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AdClickOverlay.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var clickThroughUrl = null;
        var clickThroughEnabled = !player.getConfig().advertising
            || !player.getConfig().advertising.hasOwnProperty('clickThroughEnabled')
            || player.getConfig().advertising.clickThroughEnabled;
        player.addEventHandler(player.EVENT.ON_AD_STARTED, function (event) {
            clickThroughUrl = event.clickThroughUrl;
            if (clickThroughEnabled) {
                _this.setUrl(clickThroughUrl);
            }
            else {
                // If click-through is disabled, we set the url to null to avoid it open
                _this.setUrl(null);
            }
        });
        // Clear click-through URL when ad has finished
        var adFinishedHandler = function () {
            _this.setUrl(null);
        };
        player.addEventHandler(player.EVENT.ON_AD_FINISHED, adFinishedHandler);
        player.addEventHandler(player.EVENT.ON_AD_SKIPPED, adFinishedHandler);
        player.addEventHandler(player.EVENT.ON_AD_ERROR, adFinishedHandler);
        this.onClick.subscribe(function () {
            // Pause the ad when overlay is clicked
            player.pause('ui-content-click');
            // Notify the player of the clicked ad
            player.fireEvent(player.EVENT.ON_AD_CLICKED, {
                clickThroughUrl: clickThroughUrl,
            });
        });
    };
    return AdClickOverlay;
}(clickoverlay_1.ClickOverlay));
exports.AdClickOverlay = AdClickOverlay;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var uicontainer_1 = __webpack_require__(14);
var timeout_1 = __webpack_require__(9);
/**
 * The base container for Cast receivers that contains all of the UI and takes care that the UI is shown on
 * certain playback events.
 */
var CastUIContainer = (function (_super) {
    __extends(CastUIContainer, _super);
    function CastUIContainer(config) {
        return _super.call(this, config) || this;
    }
    CastUIContainer.prototype.configure = function (player, uimanager) {
        var _this = this;
        _super.prototype.configure.call(this, player, uimanager);
        var config = this.getConfig();
        /*
         * Show UI on Cast devices at certain playback events
         *
         * Since a Cast receiver does not have a direct HCI, we show the UI on certain playback events to give the user
         * a chance to see on the screen what's going on, e.g. on play/pause or a seek the UI is shown and the user can
         * see the current time and position on the seek bar.
         * The UI is shown permanently while playback is paused, otherwise hides automatically after the configured
         * hide delay time.
         */
        var isUiShown = false;
        var hideUi = function () {
            uimanager.onControlsHide.dispatch(_this);
            isUiShown = false;
        };
        this.castUiHideTimeout = new timeout_1.Timeout(config.hideDelay, hideUi);
        var showUi = function () {
            if (!isUiShown) {
                uimanager.onControlsShow.dispatch(_this);
                isUiShown = true;
            }
        };
        var showUiPermanently = function () {
            showUi();
            _this.castUiHideTimeout.clear();
        };
        var showUiWithTimeout = function () {
            showUi();
            _this.castUiHideTimeout.start();
        };
        var showUiAfterSeek = function () {
            if (player.isPlaying()) {
                showUiWithTimeout();
            }
            else {
                showUiPermanently();
            }
        };
        player.addEventHandler(player.EVENT.ON_READY, showUiWithTimeout);
        player.addEventHandler(player.EVENT.ON_SOURCE_LOADED, showUiWithTimeout);
        player.addEventHandler(player.EVENT.ON_PLAY, showUiWithTimeout);
        player.addEventHandler(player.EVENT.ON_PAUSED, showUiPermanently);
        player.addEventHandler(player.EVENT.ON_SEEK, showUiPermanently);
        player.addEventHandler(player.EVENT.ON_SEEKED, showUiAfterSeek);
    };
    CastUIContainer.prototype.release = function () {
        _super.prototype.release.call(this);
        this.castUiHideTimeout.clear();
    };
    return CastUIContainer;
}(uicontainer_1.UIContainer));
exports.CastUIContainer = CastUIContainer;


/***/ }),
/* 84 */
/***/ (function(module, exports) {

/*! Hive Stats Pack build 3.5.1 Copyright(c) 2015 HiveStreaming AB, All rights reserved.
 * Authors: mikael.hogqvist@hivestreaming.com - riccardo.reale@hivestreaming.com - roberto.roverso@hivestreaming.com */
/*! AtatusJs - v2.3.12 - 2016-07-03
 * Copyright (c) 2016 Atatus */
!function(a){function b(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function c(a){return"undefined"==typeof a}if(a){var d={},e=a.TraceKit,f=[].slice,g="?";d.noConflict=function(){return a.TraceKit=e,d},d.wrap=function(a){function b(){try{return a.apply(this,arguments)}catch(b){throw d.report(b),b}}return b},d.report=function(){function c(a){i(),m.push(a)}function e(a){for(var b=m.length-1;b>=0;--b)m[b]===a&&m.splice(b,1)}function g(a,c){var e=null;if(!c||d.collectWindowErrors){for(var g in m)if(b(m,g))try{m[g].apply(null,[a].concat(f.call(arguments,2)))}catch(h){e=h}if(e)throw e}}function h(a,b,c,e,f){var h=null;if(f)h=d.computeStackTrace(f);else if(o)d.computeStackTrace.augmentStackTraceWithInitialElement(o,b,c,a),h=o,o=null,n=null;else{var i={url:b,line:c,column:e};i.func=d.computeStackTrace.guessFunctionName(i.url,i.line),i.context=d.computeStackTrace.gatherContext(i.url,i.line),h={mode:"onerror",message:a,url:document.location.href,stack:[i],useragent:navigator.userAgent}}return g(h,"from window.onerror"),k?k.apply(this,arguments):!1}function i(){l!==!0&&(k=a.onerror,a.onerror=h,l=!0)}function j(b){var c=f.call(arguments,1);if(o){if(n===b)return;var e=o;o=null,n=null,g.apply(null,[e,null].concat(c))}var h=d.computeStackTrace(b);throw o=h,n=b,a.setTimeout(function(){n===b&&(o=null,n=null,g.apply(null,[h,null].concat(c)))},h.incomplete?2e3:0),b}var k,l,m=[],n=null,o=null;return j.subscribe=c,j.unsubscribe=e,j}(),d.computeStackTrace=function(){function e(b){if(!d.remoteFetching)return"";try{var c=function(){try{return new a.XMLHttpRequest}catch(b){return new a.ActiveXObject("Microsoft.XMLHTTP")}},e=c();return e.open("GET",b,!1),e.send(""),e.responseText}catch(f){return""}}function f(a){if("string"!=typeof a)return[];if(!b(w,a)){var c="",d="";try{d=document.domain}catch(f){}-1!==a.indexOf(d)&&(c=e(a)),w[a]=c?c.split("\n"):[]}return w[a]}function h(a,b){var d,e=/function ([^(]*)\(([^)]*)\)/,h=/['"]?([0-9A-Za-z$_]+)['"]?\s*[:=]\s*(function|eval|new Function)/,i="",j=10,k=f(a);if(!k.length)return g;for(var l=0;j>l;++l)if(i=k[b-l]+i,!c(i)){if(d=h.exec(i))return d[1];if(d=e.exec(i))return d[1]}return g}function i(a,b){var e=f(a);if(!e.length)return null;var g=[],h=Math.floor(d.linesOfContext/2),i=h+d.linesOfContext%2,j=Math.max(0,b-h-1),k=Math.min(e.length,b+i-1);b-=1;for(var l=j;k>l;++l)c(e[l])||g.push(e[l]);return g.length>0?g:null}function j(a){return a.replace(/[\-\[\]{}()*+?.,\\\^$|#]/g,"\\$&")}function k(a){return j(a).replace("<","(?:<|&lt;)").replace(">","(?:>|&gt;)").replace("&","(?:&|&amp;)").replace('"','(?:"|&quot;)').replace(/\s+/g,"\\s+")}function l(a,b){for(var c,d,e=0,g=b.length;g>e;++e)if((c=f(b[e])).length&&(c=c.join("\n"),d=a.exec(c)))return{url:b[e],line:c.substring(0,d.index).split("\n").length,column:d.index-c.lastIndexOf("\n",d.index)-1};return null}function m(a,b,c){var d,e=f(b),g=new RegExp("\\b"+j(a)+"\\b");return c-=1,e&&e.length>c&&(d=g.exec(e[c]))?d.index:null}function n(b){for(var c,d,e,f,g=[a.location.href],h=document.getElementsByTagName("script"),i=""+b,m=/^function(?:\s+([\w$]+))?\s*\(([\w\s,]*)\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/,n=/^function on([\w$]+)\s*\(event\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/,o=0;o<h.length;++o){var p=h[o];p.src&&g.push(p.src)}if(e=m.exec(i)){var q=e[1]?"\\s+"+e[1]:"",r=e[2].split(",").join("\\s*,\\s*");c=j(e[3]).replace(/;$/,";?"),d=new RegExp("function"+q+"\\s*\\(\\s*"+r+"\\s*\\)\\s*{\\s*"+c+"\\s*}")}else d=new RegExp(j(i).replace(/\s+/g,"\\s+"));if(f=l(d,g))return f;if(e=n.exec(i)){var s=e[1];if(c=k(e[2]),d=new RegExp("on"+s+"=[\\'\"]\\s*"+c+"\\s*[\\'\"]","i"),f=l(d,g[0]))return f;if(d=new RegExp(c),f=l(d,g))return f}return null}function o(a){if(!a.stack)return null;for(var b,d,e=/^\s*at (.*?) ?\(?((?:file|https?|chrome-extension):.*?):(\d+)(?::(\d+))?\)?\s*$/i,f=/^\s*(.*?)(?:\((.*?)\))?@?((?:file|https?|chrome):.*?):(\d+)(?::(\d+))?\s*$/i,j=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:ms-appx|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,k=a.stack.split("\n"),l=[],n=/^(.*) is undefined$/.exec(a.message),o=0,p=k.length;p>o;++o){if(b=f.exec(k[o]))d={url:b[3],func:b[1]||g,args:b[2]?b[2].split(","):"",line:+b[4],column:b[5]?+b[5]:null};else if(b=e.exec(k[o]))d={url:b[2],func:b[1]||g,line:+b[3],column:b[4]?+b[4]:null};else{if(!(b=j.exec(k[o])))continue;d={url:b[2],func:b[1]||g,line:+b[3],column:b[4]?+b[4]:null}}!d.func&&d.line&&(d.func=h(d.url,d.line)),d.line&&(d.context=i(d.url,d.line)),l.push(d)}return l.length?(l[0]&&l[0].line&&!l[0].column&&n?l[0].column=m(n[1],l[0].url,l[0].line):l[0].column||c(a.columnNumber)||(l[0].column=a.columnNumber+1),{mode:"stack",name:a.name,message:a.message,url:document.location.href,stack:l,useragent:navigator.userAgent}):null}function p(a){for(var b,c=a.stacktrace,d=/ line (\d+), column (\d+) in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\) in (.*):\s*$/i,e=c.split("\n"),f=[],g=0,j=e.length;j>g;g+=2)if(b=d.exec(e[g])){var k={line:+b[1],column:+b[2],func:b[3]||b[4],args:b[5]?b[5].split(","):[],url:b[6]};if(!k.func&&k.line&&(k.func=h(k.url,k.line)),k.line)try{k.context=i(k.url,k.line)}catch(l){}k.context||(k.context=[e[g+1]]),f.push(k)}return f.length?{mode:"stacktrace",name:a.name,message:a.message,url:document.location.href,stack:f,useragent:navigator.userAgent}:null}function q(c){var d=c.message.split("\n");if(d.length<4)return null;var e,g,j,m,n=/^\s*Line (\d+) of linked script ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i,o=/^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?)\S+)(?:: in function (\S+))?\s*$/i,p=/^\s*Line (\d+) of function script\s*$/i,q=[],r=document.getElementsByTagName("script"),s=[];for(g in r)b(r,g)&&!r[g].src&&s.push(r[g]);for(g=2,j=d.length;j>g;g+=2){var t=null;if(e=n.exec(d[g]))t={url:e[2],func:e[3],line:+e[1]};else if(e=o.exec(d[g])){t={url:e[3],func:e[4]};var u=+e[1],v=s[e[2]-1];if(v&&(m=f(t.url))){m=m.join("\n");var w=m.indexOf(v.innerText);w>=0&&(t.line=u+m.substring(0,w).split("\n").length)}}else if(e=p.exec(d[g])){var x=a.location.href.replace(/#.*$/,""),y=e[1],z=new RegExp(k(d[g+1]));m=l(z,[x]),t={url:x,line:m?m.line:y,func:""}}if(t){t.func||(t.func=h(t.url,t.line));var A=i(t.url,t.line),B=A?A[Math.floor(A.length/2)]:null;t.context=A&&B.replace(/^\s*/,"")===d[g+1].replace(/^\s*/,"")?A:[d[g+1]],q.push(t)}}return q.length?{mode:"multiline",name:c.name,message:d[0],url:document.location.href,stack:q,useragent:navigator.userAgent}:null}function r(a,b,c,d){var e={url:b,line:c};if(e.url&&e.line){a.incomplete=!1,e.func||(e.func=h(e.url,e.line)),e.context||(e.context=i(e.url,e.line));var f=/ '([^']+)' /.exec(d);if(f&&(e.column=m(f[1],e.url,e.line)),a.stack.length>0&&a.stack[0].url===e.url){if(a.stack[0].line===e.line)return!1;if(!a.stack[0].line&&a.stack[0].func===e.func)return a.stack[0].line=e.line,a.stack[0].context=e.context,!1}return a.stack.unshift(e),a.partial=!0,!0}return a.incomplete=!0,!1}function s(a,b){for(var c,e,f,i=/function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i,j=[],k={},l=!1,o=s.caller;o&&!l;o=o.caller)if(o!==t&&o!==d.report){if(e={url:null,func:g,line:null,column:null},o.name?e.func=o.name:(c=i.exec(o.toString()))&&(e.func=c[1]),"undefined"==typeof e.func)try{e.func=c.input.substring(0,c.input.indexOf("{"))}catch(p){}if(f=n(o)){e.url=f.url,e.line=f.line,e.func===g&&(e.func=h(e.url,e.line));var q=/ '([^']+)' /.exec(a.message||a.description);q&&(e.column=m(q[1],f.url,f.line))}k[""+o]?l=!0:k[""+o]=!0,j.push(e)}b&&j.splice(0,b);var u={mode:"callers",name:a.name,message:a.message,url:document.location.href,stack:j,useragent:navigator.userAgent};return r(u,a.sourceURL||a.fileName,a.line||a.lineNumber,a.message||a.description),u}function t(a,b){var c=null;b=null==b?0:+b;try{if(c=p(a))return c}catch(d){if(v)throw d}try{if(c=o(a))return c}catch(d){if(v)throw d}try{if(c=q(a))return c}catch(d){if(v)throw d}try{if(c=s(a,b+1))return c}catch(d){if(v)throw d}return{mode:"failed"}}function u(a){a=(null==a?0:+a)+1;try{throw new Error}catch(b){return t(b,a+1)}}var v=!1,w={};return t.augmentStackTraceWithInitialElement=r,t.guessFunctionName=h,t.gatherContext=i,t.ofCaller=u,t.getSource=f,t}(),d.extendToAsynchronousCallbacks=function(){var b=function(b){var c=a[b];a[b]=function(){var a=f.call(arguments),b=a[0];return"function"==typeof b&&(a[0]=d.wrap(b)),c.apply?c.apply(this,a):c(a[0],a[1])}};b("setTimeout"),b("setInterval")},d.remoteFetching||(d.remoteFetching=!0),d.collectWindowErrors||(d.collectWindowErrors=!0),(!d.linesOfContext||d.linesOfContext<1)&&(d.linesOfContext=11),a.TraceKit=d}}("undefined"!=typeof window?window:global),function(a,b){"use strict";if(a){var c=a.event.add;a.event.add=function(d,e,f,g,h){if("function"!=typeof f&&"function"!=typeof f.handler)return c.call(this,d,e,f,g,h);var i;return f.handler?(i=f.handler,f.handler=b.wrap(f.handler)):(i=f,f=b.wrap(f)),f.guid=i.guid?i.guid:i.guid=a.guid++,c.call(this,d,e,f,g,h)};var d=a.fn.ready;a.fn.ready=function(a){return d.call(this,b.wrap(a))};var e=a.ajax;a.ajax=function(c,d){"object"==typeof c&&(d=c,c=void 0),d=d||{};for(var f,g=["complete","error","success"];f=g.pop();)a.isFunction(d[f])&&(d[f]=b.wrap(d[f]));try{return c?e.call(this,c,d):e.call(this,d)}catch(h){throw b.report(h),h}}}}(window.jQuery,window.TraceKit),function(a,b,c,d){function e(a){var b=a,c=a.split("//")[1];if(c){var d=c.indexOf("?"),e=c.toString().substring(0,d),f=e.split("/").slice(0,4).join("/"),g=e.substring(0,48);b=f.length<g.length?f:g,b!==e&&(b+="..")}return b}function f(a,b,c,f){if(K&&(L||b.getAllResponseHeaders())){var g="AJAX Error: "+(b.statusText||"unknown")+" "+(c.type||"unknown")+" "+(e(c.url)||"unknown");V.send(f||a.type,{status:b.status,statusText:b.statusText,type:c.type,url:c.url,ajaxErrorMessage:g,contentType:c.contentType,requestData:c.data&&c.data.slice?c.data.slice(0,10240):d,responseData:b.responseText&&b.responseText.slice?b.responseText.slice(0,10240):d,activeTarget:a.target&&a.target.activeElement?a.target.activeElement.outerHTML:d})}}function g(){return o&&""!==o?!0:(R.log("Atatus API key has not been configured, make sure you call atatus.config(yourApiKey)"),!1)}function h(){var c=b.documentElement,d=b.getElementsByTagName("body")[0],e=a.innerWidth||c.clientWidth||d.clientWidth,f=a.innerHeight||c.clientHeight||d.clientHeight;return{width:e,height:f}}function i(a){var b=(new Date).toJSON();try{var c="atatusjs="+b+"="+R.getRandomInt();"undefined"==typeof localStorage[c]&&(localStorage[c]=a)}catch(d){R.log("Atatus: LocalStorage full, cannot save exception")}}function j(){try{return"localStorage"in a&&null!==a.localStorage}catch(b){return!1}}function k(){if(j()&&localStorage.length>0)for(var a in localStorage)if("atatusjs="===a.substring(0,9)){try{var b=JSON.parse(localStorage[a]);"apikey"in b&&m(N,b)}catch(c){R.log("Atatus: Invalid JSON object in LocalStorage")}localStorage.removeItem(a)}}function l(a,c){if(c=c||{},!a.stack||!a.stack.length)return void R.log("Atatus: Canceling send due to no stacktrace.");R.isEmpty(c.customData)&&(c.customData="function"==typeof p?p():p),R.isEmpty(c.tags)&&(c.tags=E);var d=c.customData&&c.customData.ajaxErrorMessage||a.message;if(d&&0===d.indexOf("Uncaught ")&&(d=a.message.substring(9)),d=d||c.status||"Script error.",w&&w.test(d))return void R.log("Atatus: canceling send due to ignore errors");var e=[];a.stack&&a.stack.length&&R.forEach(a.stack,function(a,b){R.endsWith(b.url,"/atatus.js")||e.push({ln:b.line||0,cn:b.column||0,f:b.url||"anonymous",m:b.func||"[anonymous]"})});var f=[a.name,d,JSON.stringify(e)].join("|");if(f===x)return void R.log("Atatus: canceling send due to duplicate errors");x=f;var g=c.customData;try{JSON.stringify(g)}catch(h){var i="Cannot add custom data; may contain circular reference";g={error:i},R.log("Atatus: "+i)}var j=U.getAllEvents();S.clear();var k={"class":a.name,name:d,backTraces:e,userActions:j,net:null,customData:g||null,tags:c.tags,sourcemap:J,request:{url:b.location.href,ua:navigator.userAgent}};if("function"==typeof y&&(k.groupingKey=y(k)),"function"==typeof z){var l=z(k);l&&m(N,k)}else m(N,k)}function m(c,d){if(G&&G.length&&-1===G.indexOf(location.host))return void R.log("Atatus: canceling send due to not a allowed domain");if(g()){if(!d.ts){var e=a.screen||h();d.ts=(new Date).getTime(),d.apikey=o,d.request=d.request||{},d.request.url=d.request.url||b.location.href,d.request.ua=d.request.ua||navigator.userAgent,d.request.w=e.width,d.request.h=e.height,d.v=r||"",d._v=B||""}q&&(d.cid=q.userId||null),R.log("Sending data to Atatus Receiver:",d),n(c,JSON.stringify(d))}}function n(a,b){var c=new Image,d=M+a+"?data="+encodeURIComponent(b);c.crossOrigin="anonymous",c.onload=function(){k()},c.onerror=c.onabort=function(){I&&a===N&&i(b)},c.src=d}var o,p,q,r,s,t,u,v,w,x,y,z,A,B="2.3.12",C=TraceKit.noConflict(),D=a.atatus,E=[],F=!1,G=[],H=!1,I=!1,J=!1,K=!1,L=!1,M="https://br-rx.atatus.com",N="/track/browser/errors",O="/track/browser/perf",P="/track/browser/perf/ajax",Q="/track/browser/perf/txn";c&&(A=c(b));var R={isBoolean:function(a){return"undefined"!=typeof a&&"boolean"==typeof a},isString:function(a){return"string"==typeof a},isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},endsWith:function(a,b){return a&&b?-1!==a.indexOf(b,a.length-b.length):!1},joinRegExp:function(a){for(var b,c=[],d=0,e=a.length;e>d;d++)b=a[d],R.isString(b)?c.push(b.replace(/([.*+?\^=!:${}()|\[\]\/\\])/g,"\\$1")):b&&b.source&&c.push(b.source);return new RegExp(c.join("|"),"i")},getTargetUrl:function(b){return a.XDomainRequest&&H&&(b=b.slice(6)),b},now:function(){return(new Date).getTime()},pad:function(a){return a=String(a),1===a.length&&(a="0"+a),a},merge:function(a,b){var c,d={};for(c in a)d[c]=a[c];for(c in b)d[c]=b[c];return d},mergeArray:function(a,b){return null!=b?a.concat(b):a},forEach:function(a,b){for(var c=0;c<a.length;c++)b.call(null,c,a[c])},isEmpty:function(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0},getRandomInt:function(){return Math.floor(9007199254740992*Math.random())},log:function(b,c){F&&a.console&&a.console.log&&(a.console.log(b),c&&a.console.log(c))},bind:function(a,b){return function(){return a.apply(b,Array.prototype.slice.call(arguments))}},canAllowInsecureSubmissions:function(){var b=a.navigator.userAgent,c=b.match(/Trident\/([\d.]+)/),d=c&&"7.0"===c[1]?11:(b=b.match(/MSIE ([\d.]+)/))?parseInt(b[1],10):!1;return d&&9>=d},uuid4:function(){return"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"===a?b:3&b|8;return c.toString(16)})},addEventListener:function(b,c,d){return"undefined"!=typeof a.attachEvent?a.attachEvent("on"+b,c):a.addEventListener?a.addEventListener(b,c,d):void 0},arrayFromObject:function(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(a[c]);return b}},S={eventObject:{},all:function(a){for(var b=this.getEventObject(a),c=[],d=0;d<b.length;d++)c.push(b[d].value);return c},clear:function(){for(var a in this.eventObject)this.eventObject.hasOwnProperty(a)&&(this.eventObject[a].length=0)},add:function(a,b){var c=this.getEventObject(a),d=R.uuid4();return c.push({key:d,value:b}),this.truncateEventObject(a,10),d},get:function(a,b){for(var c=this.getEventObject(a),d=0;d<c.length;d++)if(c[d].key===b)return c[d].value;return!1},getEventObject:function(a){return this.eventObject[a]||(this.eventObject[a]=[]),this.eventObject[a]},truncateEventObject:function(a,b){var c=this.getEventObject(a);c.length>b&&(this.eventObject[a]=c.slice(c.length-b))}},T={attach:function(b,c,d,e,f){b=b||a.console||{};for(var g=f||["log","debug","info","warn","error"],h=g.pop(),i=function(a,b,d){c&&S.add("user",{ts:R.now(),c:"console",l:a,m:b}),"error"===a&&e&&V.notify(new Error(b),d)};h;)this.wrapConsoleMethod(b,h,d,i),h=g.pop()},wrapConsoleMethod:function(a,b,c,d){var e=a[b],f=a;b in a&&(a[b]=function(){var a=[].slice.call(arguments),g=""+a.join(" "),h={level:b,logger:"console"};d&&d(b,g,h),e&&c&&Function.prototype.apply.call(e,f,a)})}},U={attach:function(){var a=R.bind(this.onDocumentClicked,this),c=R.bind(this.onInputChanged,this);b.addEventListener?(b.addEventListener("click",a,!0),b.addEventListener("blur",c,!0)):b.attachEvent&&(b.attachEvent("onclick",a),b.attachEvent("onfocusout",c))},writeUserEvent:function(a,b,c,d){"password"===this.getElementType(a)&&(c=void 0),S.add("user",{ts:R.now(),a:b,e:this.getOuterHTML(a),v:this.getValueKind(c,d)})},onDocumentClicked:function(a){var b=this.getElementFromEvent(a);b&&b.tagName&&(this.isTarget(b,"a")||this.isTarget(b,"button")||this.isTarget(b,"input",["button","submit"])?this.writeUserEvent(b,"click"):this.isTarget(b,"input",["checkbox","radio"])&&this.writeUserEvent(b,"check",b.value,b.checked))},onInputChanged:function(a){var b=this.getElementFromEvent(a);b&&b.tagName&&(this.isTarget(b,"textarea")?this.writeUserEvent(b,"input",b.value):this.isTarget(b,"select")&&b.options&&b.options.length?this.onSelectInputChanged(b):this.isTarget(b,"input")&&!this.isTarget(b,"input",["button","submit","hidden","checkbox","radio"])&&this.writeUserEvent(b,"input",b.value))},onSelectInputChanged:function(a){if(a.multiple){for(var b=0;b<a.options.length;b++)if(a.options[b].selected){this.writeUserEvent(a,"select",a.options[b].value);break}}else 0<=a.selectedIndex&&a.options[a.selectedIndex]&&this.writeUserEvent(a,"select",a.options[a.selectedIndex].value)},getElementFromEvent:function(a){return a.target||b.elementFromPoint(a.clientX,a.clientY)},isTarget:function(a,b,c){if(a.tagName.toLowerCase()!==b.toLowerCase())return!1;if(!c)return!0;for(var d=this.getElementType(a),e=0;e<c.length;e++)if(c[e]===d)return!0;return!1},getElementType:function(a){return(a.getAttribute("type")||"").toLowerCase()},getOuterHTML:function(a){for(var b="<"+a.tagName.toLowerCase(),c=a.attributes,d=0,e=c.length;e>d;d++){var f=c[d].name;"value"!==f.toLowerCase()&&(b+=" "+f+'="'+c[d].value+'"')}return b+=" >"},getValueKind:function(a,b){return null==a?null:{length:a.length,checked:b,pattern:this.matchInputPattern(a)}},matchInputPattern:function(a){return""===a?"empty":/^[a-z0-9!#$%&'*+=?\^_`{|}~\-]+(?:\.[a-z0-9!#$%&'*+=?\^_`{|}~\-]+)*@(?:[a-z0-9](?:[a-z0-9\-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9\-]*[a-z0-9])?$/.test(a)?"email":/^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/.test(a)||/^(\d{4}[\/\-](0?[1-9]|1[012])[\/\-]0?[1-9]|[12][0-9]|3[01])$/.test(a)?"date":/^(?:(?:\+?1\s*(?:[.\-]\s*)?)?(?:\(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\s*\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.\-]\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.\-]\s*)?([0-9]{4})(?:\s*(?:#|x\.?|ext\.?|extension)\s*(\d+))?$/.test(a)?"phone":/^\s*$/.test(a)?"whitespace":/^\d*$/.test(a)?"numeric":"character"},getAllEvents:function(){return S.all("user")}},V={noConflict:function(){return a.atatus=D,V},isConfigured:function(){return!!o},config:function(b,c){return c=c||{},o=b,C.remoteFetching=!1,w=[],c&&(p=c.customData,E=c.tags||[],J=!(!c.enableSourcemap&&!c.sourcemap),s=!!c.disableUserActions,t=!!c.disableAjaxMonitoring,u=!!c.disableRUM,F=!!c.debugMode,c.ignoreErrors&&R.isArray(c.ignoreErrors)&&(w=c.ignoreErrors),V.setAllowedDomains(c.allowedDomains),V.setVersion(c.version),V.enableOffline(c.enableOffline||c.offline),V.onBeforeErrorSend(c.beforeErrorSend),V.setGroupingKeyCallback(c.groupingKeyCallback)),H=R.canAllowInsecureSubmissions(),w.push(/^Script error\.?$/),w.push(/^Javascript error: Script error\.? on line 0$/),w=R.joinRegExp(w),k(),v={enabled:!0,timeline:!0,display:!0,error:!0,levels:null},R.isBoolean(c.console)&&(v.enabled=c.console),R.isBoolean(c.consoleTimeline)&&(v.timeline=c.consoleTimeline),R.isBoolean(c.consoleDisplay)&&(v.display=c.consoleDisplay),R.isBoolean(c.consoleErrorNotify)&&(v.error=c.consoleErrorNotify),R.isArray(c.consoleTimelineLevels)&&(v.levels=c.consoleTimelineLevels),v.enabled&&"console"in a&&a.console.log&&T.attach(a.console,v.timeline,v.display,v.error,v.levels),s||U.attach(),t||u||V.__attachAjaxHooks(),V},install:function(){return g()?(C.report.subscribe(l),C.extendToAsynchronousCallbacks(),A&&K&&A.ajaxError(f),V):void 0},uninstall:function(){return o=null,C.report.unsubscribe(l),A&&K&&A.unbind("ajaxError",f),V},setCustomData:function(a){return p=a,V},setTags:function(a){return E=a,V},setAllowedDomains:function(a){return a&&R.isArray(a)&&(G=a),V},getAllowedDomains:function(){return G},setUser:function(a,b,c,d){return q={},a&&(q.userId=""+a),b&&(q.email=""+b),c&&(q.firstName=""+c),d&&(q.lastName=""+d),V},setVersion:function(a){return a&&(r=""+a),V},enableOffline:function(a){return R.isBoolean(a)&&(I=a),V},onBeforeErrorSend:function(a){return"function"==typeof a&&(z=a),V},setGroupingKeyCallback:function(a){return"function"==typeof a&&(y=a),V},setAPIEndpoint:function(a){return M=a,V},init:function(a,b,c){return c&&(b=b||{},b.customData=c),V.config(a,b)},withCustomData:function(a){return V.setCustomData(a)},withTags:function(a){return V.setTags(a)},attach:function(){return V.install()},detach:function(){return V.uninstall()},notify:function(a,b,c){return V.send(a,b,c)},sendPerf:function(a){return u?void R.log("RUM is disabled. Please enable it in the config options."):m(O,a)},sendAjaxPerf:function(a){return u?void R.log("RUM is disabled. Please enable it in the config options."):m(P,a)},sendTxnPerf:function(a){return m(Q,a)},send:function(a,b,c){try{l(C.computeStackTrace(a),{customData:R.merge(p,b),tags:R.mergeArray(E,c)})}catch(d){if(a!==d)throw d}return V},_helper:R};a.atatus=V}(window,document,window.jQuery),function(a,b,c){function d(a){a.pl<=0||atatus.sendPerf(a)}function e(){var b=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance,c=b.timing,e=b.navigation;if(0===c.loadEventEnd)return!1;clearInterval(i),i=null;var f=c.navigationStart;0>=f&&(f=c.fetchStart);var g={};for(var h in j)g[j[h]]=-1,h in c&&(c[h]<=0||(g[j[h]]=c[h]-f));var k={nty:e.type,rc:e.redirectCount,nt:g.rps-g.ns,dp:g.dce-g.rps,pr:g.le-g.dce,fe:g.le-g.rps,pl:g.le-g.ns};d(k)}function f(){if(!h||!h.bDone)return!1;clearInterval(i),i=!1;var a=h.getMeasures();if(null!=a&&null!=a.backend&&null!=a.frontend&&null!=a["page load time"]&&null!=a["total load time"]){var b=a.backend,c=a.backend+a.frontend,e={nty:0,rc:0,nt:b,dp:c-b,pr:a["total load time"]-c,fe:a["total load time"]-b,pl:a["total load time"]};d(e)}}var g=(new Date).getTime(),h=h||{};h.q=h.q||[],h.version="0.3",h.targetOrigin=b.location.protocol+"//"+b.location.hostname,h.bPostMessage=!1,h.beaconUrl=h.beaconUrl||"/images/beacon.gif",h.autorun=!1,h.init=function(){if(h.bDone=!1,h.bUnloaded=!1,h.marks={},h.measures={},h.starts={},h.findStartTime(),h.addEventListener("beforeunload",h.beforeUnload,!1),h.addEventListener("pagehide",h.beforeUnload,!1),h.addEventListener("unload",h.beforeUnload,!1),h.processQ(),"complete"===b.readyState){var c=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance;c&&"undefined"!=typeof c.timing&&"undefined"!=typeof c.timing.loadEventEnd&&(h.mark("firstbyte",c.timing.responseStart),h.mark("onload",c.timing.loadEventEnd)),h.done()}else h.addEventListener("load",h.onload,!1)},h.processQ=function(){for(var a=h.q.length,b=0;a>b;b++){var c=h.q[b],d=c[0];"mark"===d?h.mark(c[1],c[2]):"measure"===d?h.measure(c[1],c[2],c[3]):"done"===d&&h.done(c[1])}},h.mark=function(b,c){return h.dprint("RUM_EPISODES.mark: "+b+", "+c),b?(h.marks[b]=parseInt(c||(new Date).getTime()),h.bPostMessage&&a.postMessage("RUM_EPISODES:mark:"+b+":"+c,h.targetOrigin),void("firstbyte"===b?h.measure("backend","starttime","firstbyte"):"onload"===b?(h.measure("frontend","firstbyte","onload"),h.measure("page load time","starttime","onload")):"done"===b&&h.measure("total load time","starttime","done"))):void h.dprint("Error: markName is undefined in RUM_EPISODES.mark.")},h.measure=function(b,c,d){if(h.dprint("RUM_EPISODES.measure: "+b+", "+c+", "+d),!b)return void h.dprint("Error: episodeName is undefined in RUM_EPISODES.measure.");var e;if("undefined"==typeof c)e="number"==typeof h.marks[b]?h.marks[b]:(new Date).getTime();else if("number"==typeof h.marks[c])e=h.marks[c];else{if("number"!=typeof c)return void h.dprint("Error: unexpected startNameOrTime in RUM_EPISODES.measure: "+c);e=c}var f;if("undefined"==typeof d)f=(new Date).getTime();else if("number"==typeof h.marks[d])f=h.marks[d];else{if("number"!=typeof d)return void h.dprint("Error: unexpected endNameOrTime in RUM_EPISODES.measure: "+d);f=d}h.starts[b]=parseInt(e),h.measures[b]=parseInt(f-e),h.bPostMessage&&a.postMessage("RUM_EPISODES:measure:"+b+":"+e+":"+f,h.targetOrigin)},h.done=function(b){h.bDone=!0,h.mark("done"),h.bPostMessage&&a.postMessage("RUM_EPISODES:done",h.targetOrigin),"function"==typeof b&&b()},h.getMarks=function(){return h.marks},h.getMeasures=function(){return h.measures},h.getStarts=function(){return h.starts},h.findStartTime=function(){var a=h.findStartWebTiming()||h.findStartCookie();a&&h.mark("starttime",a)},h.findStartWebTiming=function(){var b,c=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance;return c&&"undefined"!=typeof c.timing&&"undefined"!=typeof c.timing.navigationStart&&(b=c.timing.navigationStart,h.dprint("RUM_EPISODES.findStartWebTiming: startTime = "+b)),b},h.findStartCookie=function(){for(var d=b.cookie.split(" "),e=0;e<d.length;e++)if(0===d[e].indexOf("RUM_EPISODES=")){for(var f,g,i=d[e].substring("RUM_EPISODES=".length).split("&"),j=0;j<i.length;j++)if(0===i[j].indexOf("s="))f=i[j].substring(2);else if(0===i[j].indexOf("r=")){var k=i[j].substring(2);k=k.replace(/;$/,""),g=a.escape(b.referrer)===k}if(g&&f)return h.dprint("RUM_EPISODES.findStartCookie: startTime = "+f),f}return c},h.beforeUnload=function(){h.bUnloaded||(b.cookie="RUM_EPISODES=s="+Number(new Date)+"&r="+a.escape(b.location)+"; path=/",h.bUnloaded=!0)},h.onload=function(){h.mark("onload"),h.done()},h.addEventListener=function(b,c,d){return"undefined"!=typeof a.attachEvent?a.attachEvent("on"+b,c):a.addEventListener?a.addEventListener(b,c,d):void 0},h.dprint=function(){},h.init();var i=null,j={navigationStart:"ns",redirectStart:"rds",redirectEnd:"rde",unloadEventStart:"us",unloadEventEnd:"ue",fetchStart:"fs",domainLookupStart:"dls",domainLookupEnd:"dle",connectStart:"cs",secureConnectionStart:"scs",connectEnd:"ce",handshakeStart:"hs",requestStart:"rqs",responseStart:"rps",responseEnd:"rpe",domLoading:"dl",domInteractive:"di",domContentLoadedEventStart:"dcs",domContentLoadedEventEnd:"dce",domComplete:"dc",loadEventStart:"ls",loadEventEnd:"le"},k=a.performance||a.mozPerformance||a.msPerformance||a.webkitPerformance;k&&"undefined"!=typeof k.timing&&"undefined"!=typeof k.navigation?i=setInterval(e,100):(h.mark("firstbyte",g),i=setInterval(f,100))}(window,document),atatus.__attachAjaxHooks=function(){!function(a,b){var c=atatus._helper,d={queue:[],batchSize:25,processing:!1,bUnloaded:!1,push:function(a){"string"==typeof a.url&&a.url.indexOf(".html")>0||(this.queue.push(a),this.queue.length>=this.batchSize&&this._processQueue())},_processQueue:function(){if(!this.processing&&this.queue.length){this.processing=!0;try{for(var a={},b={},d=0;d<this.queue.length;d++){var e,f=this.queue[d];if(f.status<400){e=f.method+f.url;var g=f.respAvailTime-f.sendTime,h=f.respProcTime-f.respAvailTime,i=f.receivedSize,j=f.sendSize,k=a[e];if(k){k.c++;var l=k.re;l.t=l.t+g,l.lo=l.lo<g?l.lo:g,l.hi=l.hi>g?l.hi:g,l.ssq=l.ssq+g*g;var m=k.cb;m.t=m.t+h,m.lo=m.lo<h?m.lo:h,m.hi=m.hi>h?m.hi:h,m.ssq=m.ssq+h*h;var n=k.rs;n.t=n.t+i,n.lo=n.lo<i?n.lo:i,n.hi=n.hi>i?n.hi:i,n.ssq=n.ssq+i*i;var o=k.ss;o.t=o.t+j,o.lo=o.lo<j?o.lo:j,o.hi=o.hi>j?o.hi:j,o.ssq=o.ssq+j*j}else a[e]={m:f.method,url:f.url,c:1,re:{t:g,lo:g,hi:g,ssq:g*g},cb:{t:h,lo:h,hi:h,ssq:h*h},rs:{t:f.receivedSize,lo:f.receivedSize,hi:f.receivedSize,ssq:f.receivedSize*f.receivedSize},ss:{t:f.sendSize,lo:f.sendSize,hi:f.sendSize,ssq:f.sendSize*f.sendSize}}}else e=f.method+f.status+f.url,b[e]?b[e].c++:b[e]={m:f.method,url:f.url,st:f.status,c:1}}var p={xhr:c.arrayFromObject(a),xhrError:c.arrayFromObject(b)};atatus.sendAjaxPerf(p)}catch(q){c.log("Error while processing queue: ",q)}finally{this.queue=[],this.processing=!1}}},beforeUnload:function(){d.bUnloaded||(d._processQueue(),d.bUnloaded=!0)}};c.addEventListener("beforeunload",d.beforeUnload,!1);var e={support:function(a){return!a||"apply"in a},around:function(a,b,d,e){return a=a||function(){},function(){var f,g=Array.prototype.slice.call(arguments);try{b&&(f=b.apply(this,g))}catch(h){c.log(e,h)}var i;try{i=a.apply(this,f||g)}finally{try{d&&d.apply(this,g)}catch(h){c.log(e,h)}}return i}},before:function(a,b){return e.around(a,b)},after:function(a,b){return e.around(a,null,b)},timeout:function(a){setTimeout(a,0)},wrapAddEventListener:function(){return function(a,b){if(("load"===a||"error"===a)&&b&&this._atrumXhrData){var c;b.__atrumInterceptor?c=b.__atrumInterceptor:e.support(b)?(c=g.wrapXHR(b,this,"XHR.invokeEventListener"),b.__atrumInterceptor=c):c=null;var d;return c&&(d=Array.prototype.slice.call(arguments),d[1]=c),d}}},wrapRemoveEventListener:function(){return function(a,b){if(this._atrumXhrData){var c=Array.prototype.slice.call(arguments);return b.__atrumInterceptor&&(c[1]=b.__atrumInterceptor),c}}},aroundWithHandleEvent:function(a,b,c,d){var f=a;return a&&"object"==typeof a&&"toString"in a&&"[xpconnect wrapped nsIDOMEventListener]"===a.toString()&&"handleEvent"in a&&(f=function(){a.handleEvent.apply(this,Array.prototype.slice.call(arguments))}),e.around(f,b,c,d)},getFullyQualifiedUrl:function(a){var c=b.createElement("a");return c.href=a,c.href}};if(a.XMLHttpRequest&&a.XMLHttpRequest.prototype){var f=a.XMLHttpRequest.prototype;if(!("open"in f&&"send"in f))return;if(!e.support(f.open)||!e.support(f.send))return;var g={};g.captureAjaxTimings=function(a){var b=a._atrumXhrData;if(b){var c=(new Date).getTime();2===a.readyState?b.firstByteTime=b.firstByteTime||c:4===a.readyState&&(b.respAvailTime=b.respAvailTime||c,b.firstByteTime=b.firstByteTime||c)}},g.sendPayload=function(a,b){b.receivedSize=0,a.responseType&&"text"!==a.responseType||"string"==typeof a.responseText&&(b.receivedSize=a.responseText.length),b.status=a.status,d.push(b)},g.wrapXHR=function(a,b,c){return e.aroundWithHandleEvent(a,function(){g.captureAjaxTimings(this)},function(){var a=b._atrumXhrData;if(a&&4===b.readyState){var c=(new Date).getTime();a.respProcTime=a.respProcTime||c,g.sendPayload(b,a),delete b._atrumXhrData}},c)},g.ajaxDone=function(a){if(a._atrumXhrData){var b=(new Date).getTime()+3e4,c=function(){g.captureAjaxTimings(a);var d=a._atrumXhrData;if(d){var e=(new Date).getTime();4===a.readyState?(d.respProcTime=d.respProcTime||e,g.sendPayload(a,d),delete a._atrumXhrData):b>e?setTimeout(c,50):delete a._atrumXhrData}};c()}},f.open=e.around(f.open,function(){var a=1<=arguments.length?String(arguments[0]):"",b=2<=arguments.length?String(arguments[1]):"",c=atatus.getAllowedDomains(),d=!0;if(b=e.getFullyQualifiedUrl(b),b&&c&&c.length){d=!1;for(var f=0;f<c.length;f++){var g=c[f];if(g&&b.indexOf(g)>-1){d=!0;break}}}d&&(b=b&&b.split("?")[0],this._atrumXhrData={method:a,url:b,sendTime:null,sendSize:null,firstByteTime:null,respAvailTime:null,respProcTime:null,receivedSize:null,parentPhase:null})},null,"XHR.open"),f.send=e.around(f.send,function(){var a=this,b=a._atrumXhrData;if(b){var c=(new Date).getTime();b.sendTime=b.sendTime||c,b.sendSize=1<=arguments.length&&arguments[0]?arguments[0].length||0:0;var d=0,f=function(){if(4===a.readyState)g.ajaxDone(a);else{var b=null;try{b=a.onreadystatechange}catch(c){return void g.ajaxDone(a)}d++,b?e.support(b)?a.onreadystatechange=g.wrapXHR(b,a,"XHR.onReadyStateChange"):g.ajaxDone(a):5>d?e.timeout(f):g.ajaxDone(a)}};f()}},null,"XHR.send"),"addEventListener"in f&&"removeEventListener"in f&&e.support(f.addEventListener)&&e.support(f.removeEventListener)&&(f.addEventListener=e.around(f.addEventListener,e.wrapAddEventListener(),null,"XHR.addEventListener"),f.removeEventListener=e.around(f.removeEventListener,e.wrapRemoveEventListener(),null,"XHR.removeEventListener"))}}(window,document)},function(a){function b(a,b,c){if(!(0>=b)){var d={name:a,dur:b,st:c};atatus.sendTxnPerf(d)}}function c(a){return h+" "+a}function d(){try{return"localStorage"in a&&null!==a.localStorage;}catch(b){return!1}}function e(a){var b=i.now();try{localStorage.setItem(c(a),b)}catch(d){}}function f(a){var b=null,d=c(a);try{b=localStorage.getItem(d),localStorage.removeItem(d)}catch(e){}var f=0;return b&&(f=i.now()-b),f}function g(a){try{var b=c(a);localStorage.removeItem(b)}catch(d){}}var h="atatus.com/",i=atatus._helper,j=1,k=0;atatus.beginTransaction=function(a){d()&&e(a)},atatus.endTransaction=function(a){if(d()){var c=f(a);b(a,c,j)}},atatus.failTransaction=function(a){if(d()){var c=f(a);b(a,c,k)}},atatus.cancelTransaction=function(a){d()&&g(a)}}(window,document);
/*! https://github.com/ttaubert/node-arraybuffer-slice
 * (c) 2014 Tim Taubert <tim@timtaubert.de>
 * arraybuffer-slice may be freely distributed under the MIT license.*/
!function(r){"use strict";function t(r,t){return r=0|r||0,r<0?Math.max(r+t,0):Math.min(r,t)}ArrayBuffer.prototype.slice||(ArrayBuffer.prototype.slice=function(e,n){var f=this.byteLength,i=t(e,f),a=f;if(n!==r&&(a=t(n,f)),i>a)return new ArrayBuffer(0);var u=a-i,y=new ArrayBuffer(u),o=new Uint8Array(y),s=new Uint8Array(this,i,u);return o.set(s),y})}();
!function(e){function t(i){if(r[i])return r[i].t;var n=r[i]={i:i,s:!1,t:{}};return e[i].call(n.t,n,n.t,t),n.s=!0,n.t}var r={};t.o=e,t.c=r,t.d=function(e,r,i){t.h(e,r)||Object.defineProperty(e,r,{u:!1,l:!0,get:i})},t.n=function(e){var r=e&&e.p?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.h=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.g="",t(t.v=96)}([function(e,t,r){"use strict";var i,n=r(37),s=r(1);!function(e){function t(t){_&&console.log("Framework already initialized"),e.m(),k=new Date,t.apply(F),_=F.resolve(P.T),D=F.resolve(P.I),M=_.S()}function r(){N=F.resolve(P.R),N.init()}function i(){return N}function o(){return F}function a(){return D}function h(){return _}function c(e){return L.get(e)}function u(e,t){var r=new A(e);return r.apply(t),L.set(e,r),r}function l(t){C=e.P(t)}function p(e){return null!=C?C.context.resolve(e):(console.warn("undefined context"),null)}function f(){return C}function d(){return _.time()}function g(e,t){return _.setTimeout(e,t)}function v(e){return _.clearTimeout(e)}function y(e,t){return _.setInterval(e,t)}function m(e){return _.clearInterval(e)}function E(){_.A()}function T(){_&&_.C(),F.k(),F=new n.O,L=new s,C=null,k=null,M=!1,O=null,_=null,N=null,D=null}function I(e){O=e}function w(){return O||(O=(new Date).getTime()),(O=(9301*O+49297)%233280)/233280}function S(){return k}function R(){return M}var b=function(){function e(){}return e}();b._="ws://127.0.0.1:8000/hive",e.N=b;var P=function(){function e(){}return e}();P.T="TimerScheduler",P.D="identityProvider",P.R="NetworkComponent",P.F="rtcManager",P.L="transport",P.M="httpManager",P.B="httpRequest",P.I="logger",P.U="serverManager",P.H="servicesClient",e.q=P;var A=function(){function e(e){this.id=e,this.context=new n.O}return e.prototype.apply=function(e){e.apply(this.context)},e}();e.V=A;!function(e){e[e.j=0]="HTTP",e[e.G=1]="RTC",e[e.K=2]="UDP"}(e.Y||(e.Y={}));!function(t){function r(){return"["+d()+"] ["+e.J().id+"]"}t.W=r}(e.X||(e.X={}));var C,k,O,_,N,D,F=new n.O,L=new s,M=!1;e.Z=t,e.$=r,e.ee=i,e.system=o,e.te=a,e.re=h,e.P=c,e.ie=u,e.ne=l,e.resolve=p,e.J=f,e.time=d,e.setTimeout=g,e.clearTimeout=v,e.setInterval=y,e.clearInterval=m,e.A=E,e.m=T,e.se=I,e.random=w,e.oe=S,e.S=R}(i=t.Framework||(t.Framework={})),"undefined"!=typeof global&&(global.Framework=i)},function(e,t,r){"use strict";function i(e,t,r,s){if(!(this instanceof i))return new i(e,t,r,s);t=t||Object.ae,r=r||Object.hash,s=s||Function.he,this.ce=t,this.ue=r,this.le=s,this.pe=new n(void 0,function(e,r){return t(e.key,r.key)},function(e){return r(e.key)}),this.length=0,this.addEach(e)}var n=(r(12),r(63)),s=r(13),o=r(48),a=r(14);e.t=i,i.Map=i,Object.addEach(i.prototype,s.prototype),Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.defineProperty(i.prototype,"size",s.fe),i.prototype.de=function(e){return new this.constructor(e,this.ce,this.ue,this.le)},i.prototype.log=function(e,t,r,i){t=t||this.ge,this.pe.log(e,function(e,r,i){t(e.value.value,r,i)},r,i)},i.prototype.ge=function(e,t){t(" key: "+e.key),t(" value: "+e.value)}},function(e,t,r){/*!
 *
 * Copyright 2009-2016 Kris Kowal under the terms of the MIT
 * license found at https://github.com/kriskowal/q/blob/v1/LICENSE
 *
 * With parts by Tyler Close
 * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found
 * at http://www.opensource.org/licenses/mit-license.html
 * Forked at ref_send.js version: 2009-05-11
 *
 * With parts by Mark Miller
 * Copyright (C) 2011 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
!function(t){"use strict";if("function"==typeof bootstrap)bootstrap("promise",t);else{e.t=t()}}(function(){"use strict";function e(e){return function(){return K.apply(e,arguments)}}function t(e){return e===Object(e)}function r(e){return"[object StopIteration]"===ee(e)||e instanceof V}function i(e,t){if(H&&t.stack&&"object"==typeof e&&null!==e&&e.stack&&-1===e.stack.indexOf(te)){for(var r=[],i=t;i;i=i.source)i.stack&&r.unshift(i.stack);r.unshift(e.stack);var s=r.join("\n"+te+"\n");e.stack=n(s)}}function n(e){for(var t=e.split("\n"),r=[],i=0;i<t.length;++i){var n=t[i];a(n)||s(n)||!n||r.push(n)}return r.join("\n")}function s(e){return-1!==e.indexOf("(module.js:")||-1!==e.indexOf("(node.js:")}function o(e){var t=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(e);if(t)return[t[1],Number(t[2])];var r=/at ([^ ]+):(\d+):(?:\d+)$/.exec(e);if(r)return[r[1],Number(r[2])];var i=/.*@(.+):(\d+)$/.exec(e);return i?[i[1],Number(i[2])]:void 0}function a(e){var t=o(e);if(!t)return!1;var r=t[0],i=t[1];return r===q&&i>=j&&i<=oe}function h(){if(H)try{throw new Error}catch(i){var e=i.stack.split("\n"),t=e[0].indexOf("@")>0?e[1]:e[2],r=o(t);if(!r)return;return q=r[0],r[1]}}function c(e){return e instanceof f?e:y(e)?P(e):b(e)}function u(){function e(e){t=e,c.ve&&H&&(s.source=e),z(r,function(t,r){c.ye(function(){e.me.apply(e,r)})},void 0),r=void 0,i=void 0}var t,r=[],i=[],n=X(u.prototype),s=X(f.prototype);if(s.me=function(e,n,s){var o=Y(arguments);r?(r.push(o),"when"===n&&s[1]&&i.push(s[1])):c.ye(function(){t.me.apply(t,o)})},s.valueOf=function(){if(r)return s;var e=g(t);return v(e)&&(t=e),e},s.Ee=function(){return t?t.Ee():{state:"pending"}},c.ve&&H)try{throw new Error}catch(e){s.stack=e.stack.substring(e.stack.indexOf("\n")+1)}return n.Te=s,n.resolve=function(r){t||e(c(r))},n.Ie=function(r){t||e(b(r))},n.reject=function(r){t||e(R(r))},n.notify=function(e){t||z(i,function(t,r){c.ye(function(){r(e)})},void 0)},n}function l(e){if("function"!=typeof e)throw new TypeError("resolver must be a function.");var t=u();try{e(t.resolve,t.reject,t.notify)}catch(e){t.reject(e)}return t.Te}function p(e){return l(function(t,r){for(var i=0,n=e.length;i<n;i++)c(e[i]).then(t,r)})}function f(e,t,r){void 0===t&&(t=function(e){return R(new Error("Promise does not support operation: "+e))}),void 0===r&&(r=function(){return{state:"unknown"}});var i=X(f.prototype);if(i.me=function(r,n,s){var o;try{o=e[n]?e[n].apply(i,s):t.call(i,n,s)}catch(e){o=R(e)}r&&r(o)},i.Ee=r,r){var n=r();"rejected"===n.state&&(i.exception=n.reason),i.valueOf=function(){var e=r();return"pending"===e.state||"rejected"===e.state?i:e.value}}return i}function d(e,t,r,i){return c(e).then(t,r,i)}function g(e){if(v(e)){var t=e.Ee();if("fulfilled"===t.state)return t.value}return e}function v(e){return e instanceof f}function y(e){return t(e)&&"function"==typeof e.then}function m(e){return v(e)&&"pending"===e.Ee().state}function E(e){return!v(e)||"fulfilled"===e.Ee().state}function T(e){return v(e)&&"rejected"===e.Ee().state}function I(){re.length=0,ie.length=0,se||(se=!0)}function w(e,t){se&&("object"==typeof process&&"function"==typeof process.we&&c.ye.Se(function(){-1!==J(ie,e)&&(process.we("unhandledRejection",t,e),ne.push(e))}),ie.push(e),t&&void 0!==t.stack?re.push(t.stack):re.push("(no stack) "+t))}function S(e){if(se){var t=J(ie,e);-1!==t&&("object"==typeof process&&"function"==typeof process.we&&c.ye.Se(function(){var r=J(ne,e);-1!==r&&(process.we("rejectionHandled",re[t],e),ne.splice(r,1))}),ie.splice(t,1),re.splice(t,1))}}function R(e){var t=f({when:function(t){return t&&S(this),t?t(e):this}},function(){return this},function(){return{state:"rejected",reason:e}});return w(t,e),t}function b(e){return f({when:function(){return e},get:function(t){return e[t]},set:function(t,r){e[t]=r},delete:function(t){delete e[t]},Re:function(t,r){return null===t||void 0===t?e.apply(void 0,r):e[t].apply(e,r)},apply:function(t,r){return e.apply(t,r)},keys:function(){return $(e)}},void 0,function(){return{state:"fulfilled",value:e}})}function P(e){var t=u();return c.ye(function(){try{e.then(t.resolve,t.reject,t.notify)}catch(e){t.reject(e)}}),t.Te}function A(e){return f({be:function(){}},function(t,r){return D(e,t,r)},function(){return c(e).Ee()})}function C(e,t,r){return c(e).Pe(t,r)}function k(e){return function(){function t(e,t){var o;if("undefined"==typeof StopIteration){try{o=i[e](t)}catch(e){return R(e)}return o.done?c(o.value):d(o.value,n,s)}try{o=i[e](t)}catch(e){return r(e)?c(e.value):R(e)}return d(o,n,s)}var i=e.apply(this,arguments),n=t.bind(t,"next"),s=t.bind(t,"throw");return n()}}function O(e){c.done(c.async(e)())}function _(e){throw new V(e)}function N(e){return function(){return C([this,F(arguments)],function(t,r){return e.apply(t,r)})}}function D(e,t,r){return c(e).Ae(t,r)}function F(e){return d(e,function(e){var t=0,r=u();return z(e,function(i,n,s){var o;v(n)&&"fulfilled"===(o=n.Ee()).state?e[s]=o.value:(++t,d(n,function(i){e[s]=i,0==--t&&r.resolve(e)},r.reject,function(e){r.notify({index:s,value:e})}))},void 0),0===t&&r.resolve(e),r.Te})}function L(e){if(0===e.length)return c.resolve();var t=c.defer(),r=0;return z(e,function(i,n,s){function o(e){t.resolve(e)}function a(e){0===--r&&(e.message="Q can't get fulfillment value from any promise, all promises were rejected. Last error message: "+e.message,t.reject(e))}function h(e){t.notify({index:s,value:e})}var c=e[s];r++,d(c,o,a,h)},void 0),t.Te}function M(e){return d(e,function(e){return e=W(e,c),d(F(W(e,function(e){return d(e,G,G)})),function(){return e})})}function B(e){return c(e).Ce()}function U(e,t){return c(e).then(void 0,void 0,t)}function x(e,t){return c(e).ke(t)}var H=!1;try{throw new Error}catch(e){H=!!e.stack}var q,V,j=h(),G=function(){},Q=function(){function e(){for(var e,i;r.next;)r=r.next,e=r.Oe,r.Oe=void 0,i=r.domain,i&&(r.domain=void 0,i._e()),t(e,i);for(;h.length;)e=h.pop(),t(e);n=!1}function t(t,r){try{t()}catch(t){if(o)throw r&&r.Ne(),setTimeout(e,0),r&&r._e(),t;setTimeout(function(){throw t},0)}r&&r.Ne()}var r={Oe:void 0,next:null},i=r,n=!1,s=void 0,o=!1,a=!1;try{a=navigator&&("Microsoft Internet Explorer"===navigator.appName||null!=navigator.appVersion.match(/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i))}catch(e){}var h=[];if(Q=function(e){"undefined"!=typeof Framework&&Framework.S()?Framework.setTimeout(e,0):(i=i.next={Oe:e,domain:o&&process.domain,next:null},n||(n=!0,s()))},"object"==typeof process&&"[object process]"===process.toString()&&process.ye)o=!0,s=function(){process.ye(e)};else if("function"!=typeof setImmediate||a)if("undefined"==typeof MessageChannel||a)s=function(){setTimeout(e,0)};else{var c=new MessageChannel;c.port1.onmessage=function(){s=u,c.port1.onmessage=e,e()};var u=function(){c.port2.postMessage(0)};s=function(){setTimeout(e,0),u()}}else s="undefined"!=typeof window?setImmediate.bind(window,e):function(){setImmediate(e)};return Q.Se=function(e){h.push(e),n||(n=!0,s())},Q}(),K=Function.call,Y=e(Array.prototype.slice),z=e(Array.prototype.reduce||function(e,t){var r=0,i=this.length;if(1===arguments.length)for(;;){if(r in this){t=this[r++];break}if(++r>=i)throw new TypeError}for(;r<i;r++)r in this&&(t=e(t,this[r],r));return t}),J=e(Array.prototype.indexOf||function(e){for(var t=0;t<this.length;t++)if(this[t]===e)return t;return-1}),W=e(Array.prototype.map||function(e,t){var r=this,i=[];return z(r,function(n,s,o){i.push(e.call(t,s,o,r))},void 0),i}),X=Object.create||function(e){function t(){}return t.prototype=e,new t},Z=e(Object.prototype.hasOwnProperty),$=Object.keys||function(e){var t=[];for(var r in e)Z(e,r)&&t.push(r);return t},ee=e(Object.prototype.toString);V="undefined"!=typeof ReturnValue?ReturnValue:function(e){this.value=e};var te="From previous event:";c.resolve=c,c.ye=Q,c.ve=!1,"object"==typeof process&&process&&process.De&&process.De.Fe&&(c.ve=!0),c.defer=u,u.prototype.Le=function(){var e=this;return function(t,r){t?e.reject(t):arguments.length>2?e.resolve(Y(arguments,1)):e.resolve(r)}},c.Promise=l,c.Te=l,l.race=p,l.all=F,l.reject=R,l.resolve=c,c.Me=function(e){return e},f.prototype.Me=function(){return this},c.join=function(e,t){return c(e).join(t)},f.prototype.join=function(e){return c([this,e]).Pe(function(e,t){if(e===t)return e;throw new Error("Q can't join: not the same: "+e+" "+t)})},c.race=p,f.prototype.race=function(){return this.then(c.race)},c.Be=f,f.prototype.toString=function(){return"[object Promise]"},f.prototype.then=function(e,t,r){function n(t){try{return"function"==typeof e?e(t):t}catch(e){return R(e)}}function s(e){if("function"==typeof t){i(e,a);try{return t(e)}catch(e){return R(e)}}return R(e)}function o(e){return"function"==typeof r?r(e):e}var a=this,h=u(),l=!1;return c.ye(function(){a.me(function(e){l||(l=!0,h.resolve(n(e)))},"when",[function(e){l||(l=!0,h.resolve(s(e)))}])}),a.me(void 0,"when",[void 0,function(e){var t,r=!1;try{t=o(e)}catch(e){if(r=!0,!c.onerror)throw e;c.onerror(e)}r||h.notify(t)}]),h.Te},c.Ue=function(e,t){return c(e).Ue(t)},f.prototype.Ue=function(e){return e=c(e),this.then(function(t){return e.He(t).xe(t)})},c.when=d,f.prototype.xe=function(e){return this.then(function(){return e})},c.xe=function(e,t){return c(e).xe(t)},f.prototype.qe=function(e){return this.then(function(){throw e})},c.qe=function(e,t){return c(e).qe(t)},c.Ve=g,c.je=v,c.Ge=y,c.Qe=m,f.prototype.Qe=function(){return"pending"===this.Ee().state},c.Ke=E,f.prototype.Ke=function(){return"fulfilled"===this.Ee().state},c.Ye=T,f.prototype.Ye=function(){return"rejected"===this.Ee().state};var re=[],ie=[],ne=[],se=!0;c.ze=I,c.Je=function(){return re.slice()},c.We=function(){I(),se=!1},I(),c.reject=R,c.Ie=b,c.Xe=A,c.Pe=C,f.prototype.Pe=function(e,t){return this.all().then(function(t){return e.apply(void 0,t)},t)},c.async=k,c.Ze=O,c.$e=_,c.et=N,c.Ae=D,f.prototype.Ae=function(e,t){var r=this,i=u();return c.ye(function(){r.me(i.resolve,e,t)}),i.Te},c.get=function(e,t){return c(e).Ae("get",[t])},f.prototype.get=function(e){return this.Ae("get",[e])},c.set=function(e,t,r){return c(e).Ae("set",[t,r])},f.prototype.set=function(e,t){return this.Ae("set",[e,t])},c.tt=c.delete=function(e,t){return c(e).Ae("delete",[t])},f.prototype.tt=f.prototype.delete=function(e){return this.Ae("delete",[e])},c.rt=c.Re=function(e,t,r){return c(e).Ae("post",[t,r])},f.prototype.rt=f.prototype.Re=function(e,t){return this.Ae("post",[e,t])},c.send=c.it=c.nt=function(e,t){return c(e).Ae("post",[t,Y(arguments,2)])},f.prototype.send=f.prototype.it=f.prototype.nt=function(e){return this.Ae("post",[e,Y(arguments,1)])},c.st=function(e,t){return c(e).Ae("apply",[void 0,t])},f.prototype.st=function(e){return this.Ae("apply",[void 0,e])},c.ot=c.He=function(e){return c(e).Ae("apply",[void 0,Y(arguments,1)])},f.prototype.He=function(){return this.Ae("apply",[void 0,Y(arguments)])},c.at=function(e){var t=c(e),r=Y(arguments,1);return function(){return t.Ae("apply",[this,r.concat(Y(arguments))])}},f.prototype.at=function(){var e=this,t=Y(arguments);return function(){return e.Ae("apply",[this,t.concat(Y(arguments))])}},c.keys=function(e){return c(e).Ae("keys",[])},f.prototype.keys=function(){return this.Ae("keys",[])},c.all=F,f.prototype.all=function(){return F(this)},c.ht=L,f.prototype.ht=function(){return L(this)},c.ct=function(e,t,r){return function(){return"undefined"!=typeof console&&"function"==typeof console.warn&&console.warn(t+" is deprecated, use "+r+" instead.",new Error("").stack),e.apply(e,arguments)}}(M,"allResolved","allSettled"),f.prototype.ct=function(){return M(this)},c.Ce=B,f.prototype.Ce=function(){return this.then(function(e){return F(W(e,function(e){function t(){return e.Ee()}return e=c(e),e.then(t,t)}))})},c.fail=c.catch=function(e,t){return c(e).then(void 0,t)},f.prototype.fail=f.prototype.catch=function(e){return this.then(void 0,e)},c.progress=U,f.prototype.progress=function(e){return this.then(void 0,void 0,e)},c.ut=c.finally=function(e,t){return c(e).finally(t)},f.prototype.ut=f.prototype.finally=function(e){if(!e||"function"!=typeof e.apply)throw new Error("Q can't apply finally callback");return e=c(e),this.then(function(t){return e.He().then(function(){return t})},function(t){return e.He().then(function(){throw t})})},c.done=function(e,t,r,i){return c(e).done(t,r,i)},f.prototype.done=function(e,t,r){var n=function(e){c.ye(function(){if(i(e,s),!c.onerror)throw e;c.onerror(e)})},s=e||t||r?this.then(e,t,r):this;"object"==typeof process&&process&&process.domain&&(n=process.domain.bind(n)),s.then(void 0,n)},c.timeout=function(e,t,r){return c(e).timeout(t,r)},f.prototype.timeout=function(e,t){var r=u(),i=setTimeout(function(){t&&"string"!=typeof t||(t=new Error(t||"Timed out after "+e+" ms"),t.code="ETIMEDOUT"),r.reject(t)},e);return this.then(function(e){clearTimeout(i),r.resolve(e)},function(e){clearTimeout(i),r.reject(e)},r.notify),r.Te},c.delay=function(e,t){return void 0===t&&(t=e,e=void 0),c(e).delay(t)},f.prototype.delay=function(e){return this.then(function(t){var r=u();return setTimeout(function(){r.resolve(t)},e),r.Te})},c.lt=function(e,t){return c(e).lt(t)},f.prototype.lt=function(e){var t=u(),r=Y(e);return r.push(t.Le()),this.st(r).fail(t.reject),t.Te},c.pt=function(e){var t=Y(arguments,1);return c(e).lt(t)},f.prototype.pt=function(){var e=Y(arguments),t=u();return e.push(t.Le()),this.st(e).fail(t.reject),t.Te},c.ft=c.dt=function(e){if(void 0===e)throw new Error("Q can't wrap an undefined function");var t=Y(arguments,1);return function(){var r=t.concat(Y(arguments)),i=u();return r.push(i.Le()),c(e).st(r).fail(i.reject),i.Te}},f.prototype.ft=f.prototype.dt=function(){var e=Y(arguments);return e.unshift(this),c.dt.apply(void 0,e)},c.gt=function(e,t){var r=Y(arguments,2);return function(){function i(){return e.apply(t,arguments)}var n=r.concat(Y(arguments)),s=u();return n.push(s.Le()),c(i).st(n).fail(s.reject),s.Te}},f.prototype.gt=function(){var e=Y(arguments,0);return e.unshift(this),c.gt.apply(void 0,e)},c.vt=c.yt=function(e,t,r){return c(e).yt(t,r)},f.prototype.vt=f.prototype.yt=function(e,t){var r=Y(t||[]),i=u();return r.push(i.Le()),this.Ae("post",[e,r]).fail(i.reject),i.Te},c.Et=c.Tt=c.It=function(e,t){var r=Y(arguments,2),i=u();return r.push(i.Le()),c(e).Ae("post",[t,r]).fail(i.reject),i.Te},f.prototype.Et=f.prototype.Tt=f.prototype.It=function(e){var t=Y(arguments,1),r=u();return t.push(r.Le()),this.Ae("post",[e,t]).fail(r.reject),r.Te},c.ke=x,f.prototype.ke=function(e){if(!e)return this;this.then(function(t){c.ye(function(){e(null,t)})},function(t){c.ye(function(){e(t)})})},c.wt=function(){throw new Error("Q.noConflict only works when Q is used as a global")};var oe=h();return c})},function(e,t,r){"use strict";var i=r(5),n=i.Rt.St;!function(e){var t=function(){function e(){}return e}();t.bt=5e3,t.Pt=6,t.At=1e4,t.Ct=.2,t.kt=10,e.Ot=t;var r=function(){function e(){}return e}();r._t="0.0.1",r.Nt=3e4,r.Dt=4e7,r.Ft=1,r.Lt=.8,r.Mt=!1,r.Bt=2e4,e.Ut=r;var i=function(){function e(){}return e}();i.xt=!0,i.Ht=3,i.qt=1e4,e.Vt=i;var s=function(){function e(){}return e}();s.jt=1.1,e.Gt=s;var o=function(){function e(){}return e}();o.Qt=n,o.Kt=2e4,o.Yt=5e3,e.zt=o;var a=function(){function e(){}return e}();a.Jt=[412],e.Wt=a;var h=function(){function e(){}return e}();h.Xt=2e3,h.Zt=!0,h.$t=!1,h.er=1,h.tr=.02,h.rr=!0,h.ir=!1,h.nr=!1,h.sr=1e4,h.or=4e4,h.ar=3700,h.hr=2e4,h.cr=1,h.ur=5,h.lr=.4,h.pr=1,e.dr=h;var c=function(){function e(){}return e}();c.gr=30,c.vr=2e4,c.yr=3e4,e.mr=c;var u=function(){function e(){}return e}();u.Er=3e7,u.Tr=3e4,u.Ir=!1,u.wr=10,e.Sr=u;var l=function(){function e(){}return e}();l.Rr=3,l.br=!1,l.Pr=3e4,l.Ar=.2,l.Cr=.2,l.kr=1e4,e.Or=l;var p=function(){function e(){}return e}();p._r=!1,e.j=p;var f=function(){function e(){}return e}();f.Nr=64e3,f.Dr=5e3,f.Fr=1,f.Lr=1,e.Mr=f;var d=function(){function e(){}return e}();d.Br=4e3,d.Ur=3e4,d.xr=4096,d.Hr=!0,d.qr=5e3,d.Vr=1e4,e.UDPBroadcast=d;var g=function(){function e(){}return e}();g.jr=100,g.Gr=1e3,e.Qr=g;var v=function(){function e(){}return e}();v.Kr=20,v.Yr=20,v.zr=20,v.Jr=5,e.Wr=v;var y=function(){function e(){}return e}();y.Xr="site",y.Zr="externalAs",y.$r="availableSendRate",y.ei="remoteAddress",y.ti="localAddress",y.ri=2e4,e.ii=y}(t.ni||(t.ni={}))},function(e,t,r){"use strict";var i=r(104),n=r(20),s=r(5),o=s.Rt.si,a=(s.Rt.oi,s.Rt.ai),h=s.Rt.hi,c=function(){function e(t){if(this.ci=!1,this.ui="undefined"!=typeof atatus&&null!=atatus,e.li)throw new Error("Error: Instantiation failed: Use AtatusLogger.getInstance() instead of new.");var r,i=void 0!=n.HiveConfig.ErrorMonitor.key?n.HiveConfig.ErrorMonitor.key:o,s=1==n.HiveConfig.ErrorMonitor.enabledRUM,c=1==n.HiveConfig.ErrorMonitor.enableKeyCombination,u=1==n.HiveConfig.ErrorMonitor.enabledErrorFilter;u&&(r=this.pi()),this.version=t,this.ui&&(void 0==n.HiveConfig.ErrorMonitor.enabled&&a||void 0!=n.HiveConfig.ErrorMonitor.enabled&&1==n.HiveConfig.ErrorMonitor.enabled)&&(atatus.config(i,{enableSourcemap:!0,disableRUM:!s,console:!1,version:t,beforeErrorSend:function(e){var t=!1;if(e&&e.customData&&void 0!==e.customData.forceSend&&(t=e.customData.forceSend,delete e.customData.forceSend,0===Object.keys(e.customData).length&&(e.customData=null)),!u||t)return!0;if(!r)return!1;try{var i=!1;if(e.backTraces){for(var n=0,s=e.backTraces;n<s.length;n++){var o=s[n];if(o.f.indexOf(r)>-1&&o.ln>h){i=!0;break}}i&&(e.name=e.name.replace(/%s \[[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]+] /,""),e.name.indexOf("Status Code Error:")>=0&&(e.tags=["Plugin Error Code",e.name.split(":")[1].trim()]))}return i}catch(e){return!1}}}).install(),c&&this.fi(),this.ci=!0,window.console&&console.log("[HiveComm] Error Monitor installed [RUM:"+s+", KeyHandler:"+c+"]"),u&&!r&&this.di("Could not extract error filter"))}return e.gi=function(t){return void 0===t&&(t="3.0.0"),void 0===this.li&&(this.li=new e(t)),this.li},e.prototype.fi=function(){i.yi.gi().vi([16,17,88],function(){try{throw new Error("Upload console logs")}catch(e){atatus.notify(e),window.console&&console.log("[HiveComm] console log uploaded for debugging")}})},e.prototype.pi=function(){try{throw new Error("test")}catch(t){var e=t.stack.match(/(\/\/.*\.js)/i);if(e&&e.length>0)return e[0]}},e.prototype.setUser=function(e){this.ui&&this.ci&&atatus.setUser(e)},e.prototype.mi=function(e){this.te=e},e.prototype.setCustomData=function(e){this.ui&&this.ci&&atatus.setCustomData(e)},e.prototype.di=function(e,t,r,i){var n="";if("string"==typeof t?n=t.trim():void 0!==t&&(r=t),(r instanceof Error||r&&"object"!=typeof r)&&(r={error:r.toString()}),r||(r={}),this.te&&(Object.keys(r).length>0?this.te.warn(n+" "+e,r):this.te.warn(n+" "+e)),n&&(i=i?i.concat([n]):[n]),r.forceSend=!0,this.ui&&this.ci)try{throw new Error(e)}catch(e){atatus.notify(e,r,i)}},e.prototype.setTags=function(e){this.ui&&this.ci&&atatus.setTags(e)},e.prototype.notify=function(e,t){this.ui&&this.ci&&(t||(t={}),t.forceSend=!0,atatus.notify(e,t))},e}();t.ErrorMonitor=c},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.Ei=!1,i.Ti=!0,i.Ii=!1,i.wi="3.5.1",i.Si="bitmovin",i.Ri=!1,i.bi=!0,i.Pi="undefined"!=typeof INCLUDE_VOD_CACHE&&INCLUDE_VOD_CACHE,i.Ai="undefined"!=typeof INCLUDE_UDP_BROADCAST&&INCLUDE_UDP_BROADCAST,i.Ci="undefined"!=typeof INCLUDE_UDP_LEADER_ELECTION&&INCLUDE_UDP_LEADER_ELECTION,i.ki="undefined"!=typeof LEADER_SCORE_EQUALITY&&LEADER_SCORE_EQUALITY,i.Oi="undefined"!=typeof INCLUDE_DEFAULT_NETWORK&&INCLUDE_DEFAULT_NETWORK,i._i="undefined"!=typeof HIVE_RESTRICTED_CONNINFO&&HIVE_RESTRICTED_CONNINFO,i.St="undefined"!=typeof HIVE_DISCOVERY?HIVE_DISCOVERY:"ws://127.0.0.1:8000/hive",i.Ni="undefined"!=typeof P2PDispatcherDetailedLog&&P2PDispatcherDetailedLog,i.Di="undefined"!=typeof NetworkManagerDetailedLog&&NetworkManagerDetailedLog,i.si="undefined"!=typeof ATATUS_KEY?ATATUS_KEY:"592835a6b4204dd197c00488610003e0",i.oi="undefined"!=typeof ATATUS_VERSION?ATATUS_VERSION:"0.8",i.ai="undefined"==typeof ATATUS_DEFAULT_ENABLED||ATATUS_DEFAULT_ENABLED,i.hi=5,i.Fi="undefined"!=typeof HIVE_PLUGIN_TIMEOUT?HIVE_PLUGIN_TIMEOUT:-1,i.Li="undefined"==typeof HIVE_DETECT_PRIVATEIP||HIVE_DETECT_PRIVATEIP,i.Mi=!0,t.Rt=i},function(e,t,r){"use strict";var i=r(0),n=r(40),s=r(27);!function(e){function t(e,t){return t?e+"-"+t:e}function r(e,t){var r=new Uint8Array(e.byteLength+t.byteLength);return r.set(new Uint8Array(e),0),r.set(new Uint8Array(t),e.byteLength),r.buffer}function o(e){var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e),0),t.buffer}function a(e,t,r){void 0===r&&(r=!0);for(var i=0;i<e.length;)if(e[i]===t){if(e.splice(i,1),r)break}else i++}function h(e){return String.fromCharCode.apply(null,new Uint16Array(e))}function c(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var t=new RegExp("[\\?&]"+e+"=([^&#]*)"),r=t.exec(location.search);return null==r?"":decodeURIComponent(r[1].replace(/\+/g," "))}function u(e){for(var t=e.length-1;t>0;t--){var r=Math.floor(i.Framework.random()*(t+1)),n=e[t];e[t]=e[r],e[r]=n}return e}function l(e){var t=new Array;for(var r in e)e.hasOwnProperty(r)&&!/^\d+$/.test(r)&&t.push(r);return t}function p(e){return Object.keys(e).map(function(e){return parseInt(e,10)}).filter(function(e){return!isNaN(e)})}function f(e,t){return e[t]?e[t]:null}function d(e,t){return new s(t).Bi(e).toString()}function g(e){return 0==e.length?0:e.reduce(function(e,t){return e+t})/e.length}function v(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),i=0,n=e.length;i<n;i++)r[i]=e.charCodeAt(i);return t}function y(e,t,r,i){var n=new e(t,r),s=i||r.currentTarget;return s&&Object.defineProperties(n,{currentTarget:{value:s,l:!0,Ui:!1},target:{value:s,l:!0,Ui:!1}}),n}e.xi=new n.Counter;var m=function(){function e(){this.ALPHA=.25,this.Hi=1e8,this.qi=1e4}return e.prototype.Vi=function(){return void 0!==this.ji},e.prototype.Gi=function(e,t){return this.ji=Math.min(this.Hi,t/e*8e3),this},e.prototype.Qi=function(e){return this.ji=Math.max(this.Hi,e),this},e.prototype.Ki=function(e){e.Vi()&&(this.Vi()?this.ji=this.ji*(1-this.ALPHA)+e.ji*this.ALPHA:this.ji=e.ji)},e.prototype.Yi=function(e){return this.Vi()?Math.round(8e3*e/this.ji):NaN},e.prototype.zi=function(){return this.Vi()?this.ji:NaN},e.prototype.Ji=function(){return this.Vi()?this.ji/1e3:NaN},e.prototype.Wi=function(){return this.Vi()?this.ji/1e6:NaN},e.prototype.Xi=function(){return this.Vi()?this.ji>1e6?(this.ji/1e6).toFixed(2)+"Mb/s":this.ji>1e3?(this.ji/1e3).toFixed(2)+"Kb/s":this.ji+"b/s":"NaN"},e}();e.Zi=m,e.$i=t,e.appendBuffer=r,e.en=o,e.tn=a,e.rn=h,e.in=c,e.nn=u,e.sn=l,e.an=p,e.hn=f,e.cn=d,e.un=g,e.pn=v,e.createEvent=y}(t.fn||(t.fn={}))},function(e,t,r){"use strict";function i(e,t,r){return void 0===t&&(t=""),void 0===r&&(r=[]),n(e,t,r,!0)}function n(e,t,r,i){void 0===t&&(t=""),void 0===r&&(r=[]),void 0===i&&(i=!1);for(var s in e)!function(s){if(e.hasOwnProperty(s)){var o=e[s];Array.isArray(o)?o.forEach(function(e,o){"object"==typeof e&&n(e,t+"."+s+"["+o+"]",r,i)}):"object"==typeof o?n(o,t+"."+s,r,i):"number"==typeof o&&isNaN(o)&&(r.push(t+"."+s),i||(e[s]=null))}}(s);return r}function s(e,t){function r(){if(!e())return i.resolve(!0);y.when(t(),r,i.reject)}var i=y.defer();return y.ye(r),i.Te}function o(e,t,r){return void 0===r&&(r=!0),a("GET",e,t,r)}function a(e,t,r,i){void 0===i&&(i=!0);var n=y.defer();try{var s=new XMLHttpRequest;s.open(e,t,i),void 0!=r&&null!=r&&s.setRequestHeader("Content-Type",r),s.onload=function(){200==s.status?n.resolve(s.response):n.reject({status:s.status,reason:s.statusText,body:s.responseText})},s.onerror=function(e){n.reject({status:-1,reason:"Network Error"})},s.send()}catch(e){n.reject({status:-1,reason:e})}return n.Te}function h(e,t,r,i){void 0===i&&(i=!0);var n=y.defer();try{var s=new XMLHttpRequest;s.open("POST",e,i),void 0!=r&&null!=r&&s.setRequestHeader("Content-Type",r),s.onload=function(){200==s.status?n.resolve(s.response):n.reject({status:s.status,reason:s.statusText})},s.onerror=function(e){n.reject({status:-1,reason:"Network Error"})},s.send(t)}catch(e){n.reject({status:-1,reason:e})}return n.Te}function c(e,t){var r,i,n=document.querySelector("base"),s=document.querySelector("head"),o=document.createElement("a"),a=n;return n?r=n.href:a=s.appendChild(document.createElement("base")),a.href=e,o.href=t,i=o.href,n?n.href=r:s.removeChild(a),i}function u(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var r=e[0],i=1;i<e.length;i++){var n=new RegExp("\\{"+(i-1)+"\\}","gm");r=r.replace(n,e[i])}return r}function l(e,t){for(var r in e)e.hasOwnProperty(r)&&t.hasOwnProperty(r)&&(t[r]=e[r])}function p(e,t,r){var i=v(e).dn(!0);for(var n in i)try{if(i.hasOwnProperty(n)&&t.hasOwnProperty(n)&&r.hasOwnProperty(t[n])){var s=t[n],o=i[n];r[s]=f(o,r[s])}}catch(e){}}function f(e,t){var r;switch(typeof t){case"number":r=parseInt(e);break;case"boolean":r="true"===e;break;default:r=e}return r}function d(e,t,r){var i=new E;return i.ticketUrl=e,i.code=t,i.message=T(t),i.detailedMessage=r,i}var g=r(1),v=r(27),y=r(2),m=r(26),E=m.gn.HiveSessionError,T=m.gn.getHiveSessionErrorMessage,I=m.gn.HiveSession,w=r(50),S=r(67),R=r(8),b=r(5),P=r(4),A=b.Rt.Ei;if(A)var C=r(28).HiveRequest,k=r(69).vn;var O=function(){function e(t){if(!t){if(0==Object.keys(e.mapping).length&&!e.yn)return P.ErrorMonitor.gi().di("No registered default HiveRequestFactory tech",e.mn),e.yn=!0,e.En();t=Object.keys(e.mapping)[0]}if(!(t in e.mapping))return e.yn||(P.ErrorMonitor.gi().di("no registered HiveRequestFactory tech for session",{sessionId:t}),e.yn=!0),e.En();var r=e.mapping[t];switch(r.tech){case"HiveJS":return A?r.Tn?new C(t):(r.Tn=!0,new k(t)):e.En();case"HiveJsProxy":return r.Tn?new w.In(t):(r.Tn=!0,new S.wn(t));case"HiveJava":case"StatsJS":return e.En()}}return e.En=function(){return"undefined"!=typeof OriginalXMLHttpRequest?new OriginalXMLHttpRequest:new XMLHttpRequest},e.clear=function(){e.mapping={}},e.Sn=function(t){if(t in e.mapping){var r=e.mapping[t];for(var i in r)"tech"!==i&&delete r[i]}},e.Rn=function(t){t in e.mapping&&delete e.mapping[t]},e.bn=function(t,r){t in e.mapping||(e.mapping[t]={}),e.mapping[t].tech=r},e}();O.mapping={},O.yn=!1,O.mn="[HiveRequestFactory]",t.HiveRequestFactory=O;var _=function(){function e(e,t,r,i){this.Pn=!1,this.ticketUrl=e,this.ticket=t,this.manifest=r,this.An=y.defer(),this.Cn=i,this.Cn&&this.An.resolve(this.Cn)}return e.prototype.ci=function(e){return null!==this.tech&&this.tech.ci(e,this)},e.prototype.kn=function(e){this.Pn!=e&&(this.Pn=e,this.tech&&this.tech.On(this,e))},e.prototype._n=function(){return this.Pn},e.prototype.close=function(e,t){if(void 0===t&&(t=!0),this.Pn=!0,null!=this.tech)return this.tech.Nn(this,e,t)},e.prototype.toString=function(){return this.ticket.toString()},e.prototype.Dn=function(){var e=new I;return e.id=this.id,e.ticketUrl=this.ticketUrl,e.manifest=this.manifest,e.tech=this.tech.Fn(),e},e.prototype.Ln=function(){return this.An.Te},e.prototype.Mn=function(e){this.Cn=e,this.An.resolve(this.Cn)},e}();t.Bn=_;var N=function(){function e(){}return e}();t.Un=N;var D=function(){function e(){this.success=0,this.xn=0,this.Hn=0}return e}();t.qn=D;var F=function(){function e(){this.Vn=0,this.jn=0,this.Gn=new g,this.Qn=new g}return e.prototype.Kn=function(e,t,r,i){void 0===i&&(i=!0);var n=e?this.Gn:this.Qn;n.has(t)||n.set(t,new D);var s=n.get(t);s.Hn+=r,i&&s.success++},e.prototype.Yn=function(e,t){var r=e?this.Gn:this.Qn;r.has(t)||r.set(t,new D),r.get(t).xn++},e.prototype.zn=function(e){this.bandwidth=e},e.prototype.Jn=function(){this.Vn++},e.prototype.Wn=function(){this.jn++},e.prototype.Xn=function(){return this.bandwidth},e.prototype.Zn=function(){return this.Gn},e.prototype.$n=function(){return this.Qn},e.prototype.es=function(){return this.Vn},e.prototype.rs=function(){return this.jn},e}();t.ns=F;var L=function(){function e(){var t=this;if(e.li)throw new Error("Error: Instantiation failed: Use VisibilityChangeListener.getInstance() instead of new.");var r,i;void 0!==document.hidden?(r="hidden",i="visibilitychange"):void 0!==document.msHidden?(r="msHidden",i="msvisibilitychange"):void 0!==document.webkitHidden&&(r="webkitHidden",i="webkitvisibilitychange"),void 0!==document.addEventListener&&void 0!==document[r]?document.addEventListener(i,function(){var e=!document[r];t.ss.forEach(function(r){r.call(t,e)})},!1):e.te&&e.te.debug("warn - visibilityChange listener not supported"),this.ss=new Array}return e.gi=function(t){return t&&(this.te=t),void 0===this.li&&(this.li=new e),this.li},e.prototype.as=function(e){this.ss.push(e)},e}();t.hs=L,t.cs=i,t.us=n,t.ls=s,t.ps=o,t.fs=a,t.ds=h,t.cn=c,t.gs=u,t.vs=l,t.ys=p,t.ms=d;var M=function(){function e(){}return e.getItem=function(e){try{return window.sessionStorage?window.sessionStorage.getItem(e):null}catch(e){return null}},e.setItem=function(e,t){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(e,t),!0)}catch(e){return!1}},e.removeItem=function(e){try{window.sessionStorage&&window.sessionStorage.removeItem(e)}catch(e){return null}},e}();t.Es=M;var B=function(){function e(e){this.Ts=e}return e.prototype.Is=function(e){var t=Date.now();return this.isEqual(this.ws,e)||(this.Ss=t),this.ws=e,t-this.Ss>=this.Ts},e.prototype.isEqual=function(e,t){if(e&&t){return[t.Rs-e.Rs,t.bs-e.bs,t.Ps-e.Ps].reduce(function(e,t){return e&&Math.abs(t)<10},!0)}return!1},e}();t.As=B;var U=function(){function e(){}return e.Cs=function(e){var t=e.Cs();return R.HiveConfig.SensitiveInfo.restrictedConnectivityInfo&&t&&(t=t.replace(/[0-9]*$/,"0")),t},e.ks=function(e){return R.HiveConfig.SensitiveInfo.restrictedConnectivityInfo?R.HiveConfig.SensitiveInfo.hiddenHostnameValue:e.Os()},e}();t._s=U},function(e,t,r){"use strict";var i,n=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},s=r(38),o=r(5),a=o.Rt._i,h=o.Rt.Li;!function(e){var t=function(){function e(){}return e}();t.DashFilterBitrates=null,t.DashRemoveBitrateSize=!1,e.Dash=t;var r=function(){function e(){}return e}();r.Ds=!0,e.Stats=r;var i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t}(s.HiveConfig.DebugLogs);i.TrackerLogs=0,e.DebugLogs=i;var o=function(){function e(){}return e}();o.usiz=null,e.UDPBroadcast=o;var c=function(){function e(){}return e}();c.restrictedConnectivityInfo=a,c.hiddenHostnameValue="[Hidden]",e.SensitiveInfo=c;var u=function(){function e(){}return e}();u.Fs=null,u.Ls=null,e.ClientInfo=u;var l=function(){function e(){}return e}();l.detectPrivateIP=h,e.ConnInfo=l}(i=t.HiveConfig||(t.HiveConfig={})),"undefined"!=typeof window&&(void 0===window.HiveConfig&&(window.HiveConfig={}),window.HiveConfig.Dash=i.Dash,window.HiveConfig.Stats=i.Stats,window.HiveConfig.UDPBroadcast=i.UDPBroadcast,window.HiveConfig.DebugLogs=i.DebugLogs,window.HiveConfig.SensitiveInfo=i.SensitiveInfo,window.HiveConfig.ClientInfo=i.ClientInfo,window.HiveConfig.ConnInfo=i.ConnInfo)},function(e,t,r){"use strict";!function(e){e.Ms="statsClient",e.H="servicesClient",e.Bs="ticketResolver",e.D="identityProvider",e.Us="connInfoProvider",e.xs="peerInfo",e.Hs="streamInfoProvider",e.qs="reporting",e.Vs="statsStore",e.js="trackManager",e.Gs="trackClient"}(t.Qs||(t.Qs={}))},function(e,t,r){"use strict";!function(e){e[e.Ks=0]="AUDIO",e[e.Ys=1]="VIDEO",e[e.zs=2]="METADATA",e[e.Js=3]="OTHER"}(t.Ws||(t.Ws={}))},function(e,t,r){"use strict";r(56);!function(e){e[e.Xs=0]="TRACKER",e[e.K=1]="UDP"}(t.Zs||(t.Zs={}));!function(e){e[e.$s=1]="PLAYER",e[e.eo=2]="P2P_AGENT",e[e.to=3]="PREFETCHER_FIRST_TIER",e[e.ro=4]="PREFETCHER_SECOND_TIER"}(t.io||(t.io={}));var i=function(){function e(){}return e}();t.no=i;var n=function(){function e(e,t,r){this.so=r,this.internalAs=0,this.externalAs=0,this.type=e,r||(this.so=!1),t&&(this.guid=t.guid,this.internalAs=t.internalAs,this.externalAs=t.externalAs,this.oo=t.oo,this.bandwidth=t.bandwidth,this.ao=t.ao,this.ho=t.ho,this.co=t.co,this.timestamp=t.timestamp,this.uo=t.uo,this.lo=t.lo)}return e}();t.po=n},function(e,t,r){r(60),r(33),r(61),r(98)},function(e,t,r){"use strict";function i(){throw new Error("Can't construct. GenericCollection is a mixin.")}e.t=i,i.fo=Object.freeze([]),i.prototype.addEach=function(e){if(e&&Object(e)===e)if("function"==typeof e.forEach)e.forEach(this.add,this);else if("number"==typeof e.length)for(var t=0;t<e.length;t++)this.add(e[t],t);else Object.keys(e).forEach(function(t){this.add(e[t],t)},this);else if(e&&"number"==typeof e.length)for(var t=0;t<e.length;t++)this.add(e[t],t);return this},i.prototype.do=function(e,t){return e.forEach(function(e){this.delete(e,t)},this),this},i.prototype.forEach=function(e){var t=arguments[1];return this.reduce(function(r,i,n,s,o){e.call(t,i,n,s,o)},void 0)},i.prototype.map=function(e){var t=arguments[1],r=[];return this.reduce(function(i,n,s,o,a){r.push(e.call(t,n,s,o,a))},void 0),r},i.prototype.enumerate=function(e){null==e&&(e=0);var t=[];return this.reduce(function(r,i){t.push([e++,i])},void 0),t},i.prototype.group=function(e,t,r){r=r||Object.ae;var i=[],n=[];return this.forEach(function(s,o,a){var h,o=e.call(t,s,o,a),c=n.indexOf(o,r);-1===c?(h=[],i.push([o,h]),n.push(o)):h=i[c][1],h.push(s)}),i},i.prototype.toArray=function(){return this.map(Function.identity)},i.prototype.vo=function(){var e={};return this.reduce(function(t,r,i){e[i]=r},void 0),e},i.prototype.filter=function(e){var t=arguments[1],r=this.de();return this.reduce(function(i,n,s,o,a){e.call(t,n,s,o,a)&&r.add(n,s)},void 0),r},i.prototype.every=function(e){var t=arguments[1];return this.reduce(function(r,i,n,s,o){return r&&e.call(t,i,n,s,o)},!0)},i.prototype.some=function(e){var t=arguments[1];return this.reduce(function(r,i,n,s,o){return r||e.call(t,i,n,s,o)},!1)},i.prototype.all=function(){return this.every(Boolean)},i.prototype.ht=function(){return this.some(Boolean)},i.prototype.min=function(e){e=e||this.yo||Object.mo;var t=!0;return this.reduce(function(r,i){return t?(t=!1,i):e(i,r)<0?i:r},void 0)},i.prototype.max=function(e){e=e||this.yo||Object.mo;var t=!0;return this.reduce(function(r,i){return t?(t=!1,i):e(i,r)>0?i:r},void 0)},i.prototype.Eo=function(e){return e=void 0===e?0:e,this.reduce(function(e,t){return e+t},e)},i.prototype.To=function(e){var t=void 0===e?0:e,r=void 0===e?0:e;return this.reduce(function(e,i){t+=i,r+=1},void 0),t/r},i.prototype.concat=function(){for(var e=this.de(this),t=0;t<arguments.length;t++)e.addEach(arguments[t]);return e},i.prototype.Io=function(){var e=this;return this.reduce(function(t,r){return r.forEach(function(e){this.push(e)},t,e),t},[])},i.prototype.wo=function(){var e=Array.prototype.slice.call(arguments);return e.unshift(this),Array.So(e)},i.prototype.join=function(e){return this.reduce(function(t,r){return void 0===t?r:t+e+r},void 0)},i.prototype.Ro=function(e,t,r){return e=e||this.yo||Object.mo,e.bo?(t=e.bo,e=e.mo||this.yo||Object.mo):t=t||Function.identity,void 0===r&&(r=1),this.map(function(e){return{bo:t(e),value:e}}).sort(function(t,i){return e(t.bo,i.bo)*r}).map(function(e){return e.value})},i.prototype.reversed=function(){return this.de(this).reverse()},i.prototype.clone=function(e,t){if(void 0===e)e=1/0;else if(0===e)return this;var r=this.de();return this.forEach(function(i,n){r.add(Object.clone(i,e-1,t),n)},this),r},i.prototype.only=function(){if(1===this.length)return this.Po()},i.prototype.iterator=function(){return this.Ao.apply(this,arguments)},i.fe={get:function(){return this.length},l:!1,u:!0},Object.defineProperty(i.prototype,"size",i.fe),r(60)},function(e,t,r){function i(){throw new Error("This is an abstract interface. Mix it. Don't construct it")}function n(e,t,r,i){var n,s,o,a=e.active,h=e.Co,c=h.length,u=c;for(a.length>c&&(a.length=c);c--;)a[c]=h[c];for(s=0;s<u;s++)if(o=a[s],!s||h.indexOf(o)>=0){if(n=o[e.ko]||o[e.Oo]||o,!n.call)throw new Error("No event listener for "+e._o+" or "+e.No+" or call on "+n);n.call(o,r,t,i)}}r(12);var s=Object.prototype.hasOwnProperty;e.t=i,i.debug=!0,i.prototype.Do=function(e){this.Fo||Object.defineProperty(this,"__propertyChangeListeners__",{value:{},l:!1,u:!0,Ui:!0});var t=this.Fo;if(!s.call(t,e)){var r=String(e);r=r&&r[0].toUpperCase()+r.slice(1),t[e]={Lo:{Co:[],active:[],ko:"handle"+r+"WillChange",Oo:"handlePropertyWillChange"},Mo:{Co:[],active:[],ko:"handle"+r+"Change",Oo:"handlePropertyChange"}}}return t[e]},i.prototype.Bo=function(e){if(!this.Fo)return!1;if(!e)return!0;var t=this.Fo;return!!s.call(t,e)},i.prototype.Uo=function(e,t,r){this.xo&&!this.Ho&&this.xo();var n,s=i.Do(this,e);n=r?s.Lo:s.Mo,i.qo(this,e),n.Co.push(t);var o=this;return function(){i.Vo(o,e,t,r),o=null}},i.prototype.jo=function(e,t){return i.Uo(this,e,t,!0)},i.prototype.Vo=function(e,t,r){var n,s=i.Do(this,e);n=r?s.Lo:s.Mo;var o=n.Co.lastIndexOf(t);if(-1===o)throw new Error("Can't remove property change listener: does not exist: property name"+JSON.stringify(e));n.Co.splice(o,1)},i.prototype.Go=function(e,t){return i.Vo(this,e,t,!0)},i.prototype.Qo=function(e,t,r){var s,o=i.Do(this,e);if(!o.ci){o.ci=!0,s=r?o.Lo:o.Mo;try{n(s,e,t,this)}finally{o.ci=!1}}},i.prototype.Ko=function(e,t){return i.Qo(this,e,t,!0)},i.prototype.qo=function(e){var t=this.Yo;if(t){if(s.call(t,e))return}else{if(Array.isArray(this))return;if(!Object.isExtensible(this))throw new Error("Can't make property "+JSON.stringify(e)+" observable on "+this+" because object is not extensible");t={},Object.defineProperty(this,"__overriddenPropertyDescriptors__",{value:t,l:!1,Ui:!0,u:!0})}var r;"object"==typeof this.zo?r=this.zo:(r={},Object.defineProperty(this,"__state__",{value:r,Ui:!0,l:!1})),r[e]=this[e];var i,o=this;do{if(i=Object.getOwnPropertyDescriptor(o,e))break;o=Object.getPrototypeOf(o)}while(o);if(i){if(!i.u)return;if(!i.Ui&&!i.set)return}else i={value:void 0,l:!0,Ui:!0,u:!0};t[e]=i;var a;a="value"in i?{get:function(){return i.value},set:function(t){var s,o;if(t!==i.value){if(s=this.Fo[e],!(o=s.ci)){s.ci=!0;try{n(s.Lo,e,i.value,this)}finally{}}if(i.value=t,r[e]=t,!o)try{n(s.Mo,e,t,this)}finally{s.ci=!1}}},l:i.l,u:!0}:{get:i.get,set:function(t){var s,o,a=this[e];if(i.set.call(this,t),(t=this[e])!==a){if(s=this.Fo[e],!(o=s.ci)){s.ci=!0;try{n(s.Lo,e,a,this)}finally{}}if(r[e]=t,!o)try{n(s.Mo,e,t,this)}finally{s.ci=!1}}},l:i.l,u:!0},Object.defineProperty(this,e,a)},i.Do=function(e,t){return e.Do?e.Do(t):i.prototype.Do.call(e,t)},i.Bo=function(e,t){return e.Bo?e.Bo(t):i.prototype.Bo.call(e,t)},i.Uo=function(e,t,r,n){if(Object.Jo(e))return e.Uo?e.Uo(t,r,n):i.prototype.Uo.call(e,t,r,n)},i.Vo=function(e,t,r,n){if(Object.Jo(e))return e.Vo?e.Vo(t,r,n):i.prototype.Vo.call(e,t,r,n)},i.Qo=function(e,t,r,n){if(Object.Jo(e))return e.Qo?e.Qo(t,r,n):i.prototype.Qo.call(e,t,r,n)},i.jo=function(e,t,r){return i.Uo(e,t,r,!0)},i.Go=function(e,t,r){return i.Vo(e,t,r,!0)},i.Ko=function(e,t,r){return i.Qo(e,t,r,!0)},i.qo=function(e,t){return e.qo?e.qo(t):i.prototype.qo.call(e,t)}},function(e,t,r){"use strict";!function(e){e.Wo="snapAccountingManager",e.Xo="membership",e.Zo="partnership",e.$o="inPartnership",e.ea="outPartnership",e.ta="inPrefetcherPartnership",e.ra="outPrefetcherPartnership",e.ia="cache",e.na="livecache",e.sa="vodcache",e.oa="objIndex",e.aa="centrFragment",e.ha="hcache",e.ca="responder",e.ua="requester",e.la="p2pRequester",e.pa="peer",e.fa="contextResolver",e.da="videoPrefetcher",e.ga="prefetchManager",e.va="picker",e.ya="trackerClient",e.ma="scoreUpdater",e.U="serverManager",e.Ea="requestTracker",e.Ta="trackerManager",e.Ia="renderStats",e.wa="udpBroadcaster",e.Sa="udpDiscovery",e.Ci="udpLeaderElection",e.Ra="nodeInfo",e.ba="ipspoofing"}(t.Pa||(t.Pa={}))},function(e,t){e.t=function(){return new Function}},function(e,t,r){"use strict";var i=!0,n={Aa:function(e){return"boolean"!=typeof e?new Error("Argument type: "+typeof e+". Please use a boolean."):(i=e,e?"adapter.js logging disabled":"adapter.js logging enabled")},log:function(){if("object"==typeof window){if(i)return;"undefined"!=typeof console&&"function"==typeof console.log&&console.log.apply(console,arguments)}},Ca:function(e,t,r){var i=e.match(t);return i&&i.length>=r&&parseInt(i[r],10)},ka:function(){var e={};if(e.Oa=null,e.version=null,"undefined"==typeof window||!window.navigator)return e.Oa="Not a browser.",e;if(navigator.mozGetUserMedia)e.Oa="firefox",e.version=this.Ca(navigator.userAgent,/Firefox\/(\d+)\./,1);else if(navigator.webkitGetUserMedia)if(window.webkitRTCPeerConnection)e.Oa="chrome",e.version=this.Ca(navigator.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else{if(!navigator.userAgent.match(/Version\/(\d+).(\d+)/))return e.Oa="Unsupported webkit-based browser with GUM support but no WebRTC support.",e;e.Oa="safari",e.version=this.Ca(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}else if(navigator.mediaDevices&&navigator.userAgent.match(/Edge\/(\d+).(\d+)$/))e.Oa="edge",e.version=this.Ca(navigator.userAgent,/Edge\/(\d+).(\d+)$/,2);else{if(!navigator.mediaDevices||!navigator.userAgent.match(/AppleWebKit\/(\d+)\./))return e.Oa="Not a supported browser.",e;e.Oa="safari",e.version=this.Ca(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}return e},_a:function(){if("object"==typeof window&&window.HTMLMediaElement&&"srcObject"in window.HTMLMediaElement.prototype){var e=URL.createObjectURL.bind(URL),t=URL.revokeObjectURL.bind(URL),r=new Map,i=0;URL.createObjectURL=function(t){if("getTracks"in t){var n="polyblob:"+ ++i;return r.set(n,t),console.log("URL.createObjectURL(stream) is deprecated! Use elem.srcObject = stream instead!"),n}return e(t)},URL.revokeObjectURL=function(e){t(e),r.delete(e)};var n=Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,"src");Object.defineProperty(window.HTMLMediaElement.prototype,"src",{get:function(){return n.get.apply(this)},set:function(e){return this.Na=r.get(e)||null,n.set.apply(this,[e])}});var s=HTMLMediaElement.prototype.setAttribute;HTMLMediaElement.prototype.setAttribute=function(){return 2===arguments.length&&"src"===(""+arguments[0]).toLowerCase()&&(this.Na=r.get(arguments[1])||null),s.apply(this,arguments)}}}};e.t={log:n.log,Aa:n.Aa,Da:n.ka(),Ca:n.Ca,_a:n._a,ka:n.ka.bind(n)}},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(7),s=r(51).Fa,o=r(2),a=r(0),h=r(9),c=r(24),u=r(21),l=r(8);!function(e){e.La="hive-client-track",e.Ma="trackevent",e.Ba="NULLID",e.Ua="";var t=function(){function e(){}return e}();t.xa=0,t.Ha=1,t.qa=2,t.Va=100,t.ja=200,e.Ga=t;!function(e){e[e.Qa=0]="PLAYING",e[e.Ka=1]="BUFFERING",e[e.Ya=2]="PAUSED",e[e.za=3]="SKIP",e[e.Ja=4]="STOPPED",e[e.ERROR=5]="ERROR",e[e.Wa=6]="WINDOW_SIZE",e[e.Xa=7]="FULLSCREEN",e[e.Za=8]="VISIBLE",e[e.HIDDEN=9]="HIDDEN"}(e.$a||(e.$a={}));!function(e){e[e.eh=0]="JAVA_NOT_REACHABLE",e[e.th=1]="JAVA_NOT_READY",e[e.rh=2]="JAVA_WRONG_VERSION",e[e.ih=3]="JAVA_SESSION_BUSY",e[e.nh=4]="JAVA_SESSION_ERROR",e[e.sh=5]="JAVA_TICKET_TIMEOUT"}(e.oh||(e.oh={}));var r=function(){function e(){}return e}();e.ah=r;var p=function(){function e(){}return e}();e.hh=p;var f=function(){function e(){}return e}();e.uh=f;var d=function(){function e(){this.type=t.qa}return e}(),g=function(){function e(){this.sessions=new Array}return e.prototype.lh=function(e,t){var r;this.sessions.forEach(function(t){t.sessionId==e&&(r=t)}),r||(r=new v,r.sessionId=e,this.sessions.push(r)),r.events.push(t)},e}();e.ph=g;var v=function(){function e(){this.events=new Array}return e}();e.fh=v;var y=function(){function t(){this.te=a.Framework.resolve(a.Framework.q.I).log(),this.dh=a.Framework.resolve(h.Qs.Us),this.gh=new Array,this.vh=new Array,this.yh=new Array}return t.prototype.mh=function(e){this.client=e},t.prototype.init=function(e,t){this.Eh=e,this.Th(t),this.te.debug("[TRACK] INIT ID: "+e)},t.prototype.Th=function(e,t){this.app=e,t&&(this.Ih=t)},t.prototype.wh=function(e){this.Sh=e},t.prototype.Rh=function(e){var t=new E(e,this);this.gh.push(t),this.bh=null,this.client.Ph(!0)},t.prototype.Tn=function(e,t,r){if(!this.bh)for(var i=0;i<this.gh.length;i++){var n=this.gh[i];if(n.ticket.sessionId===e){this.te.debug("[TRACK] Activating Track for session "+e),this.bh=n;break}}if(this.bh){if(this.bh.ticket.sessionId!=e)return void this.te.warn("[TRACK] ignoring manifest not matching event "+this.bh.ticket.sessionId+" != "+e);if(!this.bh.Ah){var s=new T(e,t,r);this.bh.Ch(s),this.client.Ph()}}},t.prototype.kh=function(e,t,r){null!=this.bh&&(this.bh.Ah||this.bh.Oh.push(new R(e,t,r)))},t.prototype._h=function(e,t,r){this.vh.push(new w(e,t,r)),this.client.Ph()},t.prototype.Nh=function(e,t,r){this.yh.push(new S(e,t,r)),this.client.Ph()},t.prototype.Dh=function(e){var t=this;e&&e.forEach(function(e){t.yh.push(e)})},t.prototype.Fh=function(){var e=new p;this.Ih?(e.partnerId=this.Ih.partnerId,e.customerId=this.Ih.customerId):l.HiveConfig.ClientInfo.Fs&&l.HiveConfig.ClientInfo.Ls?(e.partnerId=l.HiveConfig.ClientInfo.Fs,e.customerId=l.HiveConfig.ClientInfo.Ls):this.bh&&(e.partnerId=this.bh.ticket.Lh(),e.customerId=this.bh.ticket.Mh()),e.version=this.app.app+"_"+(this.Ih?this.Ih.version:this.app.version),this.Ih&&(e.installVersion=this.Ih.installVersion,e.installTs=this.Ih.installTs);var t=new s;return t.Bh(navigator.userAgent),e.os=t.Uh().name+" "+t.Uh().version,this.Sh&&(e.commVersion=this.Sh.commVersion,e.pluginName=this.Sh.pluginName,e.pluginVersion=this.Sh.pluginVersion,e.playerTech=this.Sh.playerTech,e.playerVersion=this.Sh.playerVersion,this.Sh.telemetryId&&(e.telemetryId=this.Sh.telemetryId)),e},t.prototype.xh=function(){return this.bh?this.bh:this.gh&&this.gh.length>0?this.gh[this.gh.length-1]:void 0},t.prototype.Hh=function(t){var i=this;if(void 0===t&&(t=!0),0==this.gh.length&&0==this.vh.length)return t?o.reject("nothing to send"):(this.te.debug("[TRACK]  NOTHING TO SEND"),null);var n=new r;n.app=e.La,n.createdAt=a.Framework.time(),n.guid=this.Eh,n.name=e.Ma;var s=this.xh();if(s){var h=s.ticket.qh().replace(/[\[\]]/g,"");n.tags=[h],n.tags.push(s.ticket.Lh()),n.tags.push(s.ticket.Mh())}else n.tags=new Array;var c=new g;if(c.peer=this.Fh(),this.gh.forEach(function(e){e.Ah||c.lh(e.ticket.sessionId,e)}),this.vh.forEach(function(e){c.lh(e.sessionId,e)}),this.yh.forEach(function(e){c.lh(e.sessionId,e)}),n.data=c,t)return this.dh.Vh().then(function(e){var t=i.jh(e);return c.lh("null",t),n}).fail(function(e){return n});var u=this.jh(this.dh.Gh());return c.lh("null",u),n},t.prototype.jh=function(e){var t=new d;t.ts=a.Framework.time();var r=e.Qh();return r.Kh()&&(t.pubIp=r.Kh()),r.Cs()&&(t.privIp=n._s.Cs(r)),e.Os()&&(t.hostname=n._s.ks(e)),r.Yh()&&(t.netmask=r.Yh()),r.zh()&&(t.nic=r.zh()),r.Jh()&&(t.nicName=r.Jh()),r.Wh()&&(t.mac=r.Wh()),t},t.prototype.Xh=function(){return this.Ih?this.Ih.userAgent:navigator.userAgent},t.prototype.reset=function(){this.gh=new Array,this.vh=new Array,this.yh=new Array},t.prototype.Zh=function(e){},t}();e.$h=y;var m=function(){function e(e){this.ec=isNaN(l.HiveConfig.DebugLogs.TrackSnapshotLogs)?0:l.HiveConfig.DebugLogs.TrackSnapshotLogs,this.tc=e,this.te=a.Framework.resolve(a.Framework.q.I).log(),this.client=a.Framework.resolve(h.Qs.H),this.tc.mh(this)}return e.prototype.Ph=function(e){void 0===e&&(e=!1);var t=e?c.nc.ic.rc:c.nc.ic.sc;if(this.oc){this.ac-(new Date).getTime()>t&&(a.Framework.clearTimeout(this.oc),this.ac=null,this.hc(t))}else this.hc(t)},e.prototype.cc=function(){this.oc&&(a.Framework.clearTimeout(this.oc),this.ac=this.oc=null)},e.prototype.hc=function(e){var t=this;this.oc=a.Framework.setTimeout(function(){t.uc()},e),this.ac=(new Date).getTime()+e},e.prototype.uc=function(e){var t=this;void 0===e&&(e=!0),this.oc=null,this.ac=null;var r=this.tc.Hh(e);e?(this.te.debug("[TRACK] TAKING A TRACK SNAPSHOT"),r.then(function(e){return t.forward(e)}).fail(function(e){t.te.debug("[TRACK]  ERROR GENERATING/SENDING THE TRACK SNAPSHOT: ",e)}).finally(function(){return t.tc.reset()}).done()):(this.te.debug("[TRACK] FLUSHING TRACK SNAPSHOT"),this.forward(r),this.tc.reset())},e.prototype.forward=function(e){if(this.client&&this.client.lc()&&e){var t=JSON.stringify(e);switch(this.ec){case 0:default:this.te.debug("[TRACK] TRACK EVENT");break;case 1:this.te.debug("[TRACK] TRACK EVENT:"+t)}var r=new u.pc(Services.fc,2,t);this.client.lc().send(r)}},e.prototype.dc=function(e){void 0===e&&(e=!0),e?(this.cc(),this.hc(c.nc.ic.gc)):this.uc(!1)},e}();e.vc=m;var E=function(){function e(e,t){this.createdAt=(new Date).getTime(),this.Ah=!1,this.ticket=e,this.manifests=new Array,this.Oh=new Array,this.tc=t}return e.prototype.Ch=function(e){this.manifests.push(e)},e.prototype.toJSON=function(){var e={};e.type=t.xa,e.ticket={},e.ticket.url=this.ticket.ticketUrl,e.ticket.reqTs=this.ticket.yc,e.ticket.respTs=this.ticket.mc,e.ticket.userAgent=this.tc.Xh(),e.manifests=[],this.manifests.forEach(function(t){var r={};r.url=t.url,r.respTs=t.mc,r.respCode=t.respCode,e.manifests.push(r)});var r=-1,i=-1,n=-1;return this.Oh.forEach(function(e){e.Ec>0&&(-1==r&&(r=e.ts,i=e.Ec),n=e.Ec)}),-1!=r&&(e.playTs=r),-1!=n&&(e.buffTime=n),-1!=i&&(e.initBuffTime=i),e},e}();e.Tc=E;var T=function(){function e(e,t,r){this.eventId=e,this.url=t,this.mc=(new Date).getTime(),this.respCode=r}return e}();e.Ic=T;var I=function(){function e(e,t,r,i){this.ts=(new Date).getTime(),this.sessionId=e,this.sessionId||(this.sessionId="null"),this.event=t,this.wc=r,i&&(this.ts=i)}return e.prototype.toJSON=function(){var e={};return e.type=this.Sc+this.event,e.ts=this.ts,this.wc&&(e.parameters=this.wc),e},e}();e.Rc=I;var w=function(e){function r(r,i,n,s){var o=e.call(this,r,i,n,s)||this;return o.Sc=t.Va,o}return i(r,e),r}(I);e.bc=w;var S=function(e){function r(r,i,n,s){var o=e.call(this,r,i,n,s)||this;return o.Sc=t.ja,o}return i(r,e),r}(I);e.Pc=S;var R=function(){function e(e,t,r){this.ts=(new Date).getTime(),this.Rs=e,this.Ac=t,this.Ec=r}return e}();e.Cc=R}(t.kc||(t.kc={}))},function(e,t,r){"use strict";var i=r(1),n=r(2),s=r(0),o=r(18),a=r(9),h=r(29);!function(e){e[e.IDLE=0]="IDLE",e[e.Oc=1]="PLAY"}(t._c||(t._c={}));var c=function(){function e(e,t,r,i){this.ticket=e,this.Nc=t,this.app=r,this.identity=i,this.Dc=s.Framework.resolve(a.Qs.Vs),this.Fc=s.Framework.resolve(a.Qs.Ms),this.tc=s.Framework.resolve(a.Qs.js),this.Lc=new o.kc.vc(this.tc)}return e.prototype.Th=function(e,t,r){this.app=new u(e,t),this.Dc.Th(this.app),this.tc.Th(this.app,r)},e.prototype.On=function(e){this.Fc.On(e)},e}();t.Mc=c;var u=function(){function e(e,t){this.app=e,this.version=t}return e}();t.Bc=u;var l=function(){function e(){this.Uc=null,this.xc=null,this.Hc=new i,this.te=s.Framework.resolve(s.Framework.q.I).log(),this.te.debug("INIT REPORTING"),this.Nc=s.Framework.resolve(a.Qs.H),this.qc=s.Framework.resolve(a.Qs.D),this.Vc=s.Framework.resolve(a.Qs.Bs)}return e.prototype.initSession=function(e,t){var r=this,i=n.defer(),s=this.qc.jc(),o=this.Vc.Gc(e);return null!=o?s.then(function(e){return r.Qc(e,o,i,t)}).fail(i.reject):i.reject("Ticket URL not valid"),i.Te},e.prototype.close=function(){this.Nc.close()},e.prototype.Qc=function(e,t,r,i){var n=this;this.Uc=e.Kc(),this.xc=e.Yc();var s=this.Nc.init(this.Uc,t),o=this.Vc.resolve(s.zc,t,i);s.Te.then(function(t){o.then(function(t){var i=t.sessionId;if(n.Hc.has(i)){var s=n.Hc.get(i);n.te.warn("SESSION ALREADY EXISTING "+s.Dc.ticket)}else{var o=new u(h.Hive.Jc(),h.Hive.getVersion()),a=new c(t,n.Nc,o,e);a.Dc.init(n.xc,t,o,i),a.tc.init(n.xc,o),a.tc.Rh(t),n.Hc.set(i,a),n.te.debug("SESSION SET ",i),r.resolve(a)}}).fail(function(e){return r.reject(e||"Error resolving the ticket")}),t.onerror(function(e){r.reject("Error establishing connection to Hive Services")})}).fail(function(e){return r.reject(e)}),this.Nc.connect()},e.prototype.Wc=function(e,t){return e.Xc()===t.Xc()&&e.Mh()===t.Mh()&&e.Lh()===t.Lh()},e}();t.Zc=l},function(e,t,r){"use strict";var i=r(38),n=r(49),s=r(39),o=r(5);o.Rt.Ti,o.Rt.Ei,o.Rt.Ii;if(void 0===a)var a=3e4;!function(e){!function(e){var t=function(){function e(){this.monitorPort=n.N.$c?s.tu.eu:s.tu.ru,this.playerPort=n.N.$c?s.tu.iu:s.tu.nu,this.feedbackPeriod=2e3,this.idleTimePeriod=6e4,this.useSessionCheck=n.N.su,this.debugLevel="notice",this.hiveTechOrder=[],this.telemetryId=null,this.silent=!1,this.loggerTimestamp=i.HiveConfig.Framework.LoggerTimestamp,this.pluginTimeout=a,this.onSourceSetCompleted=function(e){},this.onLoadingCompleted=function(e){},this.detectPrivateIP=o.Rt.Li}return e}();e.ou=t;var r=function(){function e(){this.initTimeout=3e4,this.onError=function(e){return!0},this.onActiveSession=function(e){}}return e}();e.au=r;var h=function(){function e(){this.hivePlayerPort="playerPort",this.hiveMonitorPort="monitorPort",this.hiveSilent="silent",this.hiveDebugLevel="debugLevel",this.hiveDebugTimestamp="loggerTimestamp",this.hiveSetupTimeout="setupTimeout",this.hiveJavaTimeout="initTimeout",this.hiveWarnJavaTimeout="warnSlowRespTimeout",this.hiveDetectPrivateIP="detectPrivateIP"}return e}();e.hu=h}(e.ou||(e.ou={}))}(t.gn||(t.gn={}));var h;!function(e){var t=function(){function e(){}return e}();t.enabledRUM=!1,t.enableKeyCombination=!0,t.enabledErrorFilter=!0,e.ErrorMonitor=t}(h=t.HiveConfig||(t.HiveConfig={})),"undefined"!=typeof window&&(void 0===window.HiveConfig&&(window.HiveConfig={}),window.HiveConfig.ErrorMonitor=h.ErrorMonitor)},function(e,t,r){"use strict";function i(){if(this.cu)return this.cu;var e=window&&window.window?window.window.uu:void 0;if(void 0!==e&&e.log&&e.debug&&e.info&&e.warn&&e.error&&(this.cu=e),!this.cu){var t=!(void 0===window.console),r=t?console.log.bind(console):function(){};this.cu={log:r,debug:t&&window.console.debug?window.console.debug.bind(console):r,info:t&&window.console.info?window.console.info.bind(console):r,warn:t&&window.console.warn?window.console.warn.bind(console):r,error:t&&window.console.error?window.console.error.bind(console):r}}return this.cu}t.mn="[HiveServices] ";var n=function(){function e(){}return e}();n.lu=250,t.N=n;var s=function(){function e(e,t,r){this.msgId=t,this.service=e,this.msg=r}return e.prototype.pu=function(){var e=new Uint8Array([this.service>>8,255&this.service]),t=new Uint8Array([this.msgId]),r=[e,t,this.msg];return new Blob(r,{type:"application/octet-binary"})},e.fu=function(t){var r=(String.fromCharCode.apply(null,new Uint8Array(t)),String.fromCharCode.apply(null,new Uint8Array(t.slice(3)))),i=new Uint8Array(t.slice(0,2)),n=new Uint8Array(t.slice(2,3));return new e((i[0]<<8)+i[1],n[0],r)},e}();t.pc=s,t.te=i},function(e,t,r){"use strict";var i=r(0),n=r(6);!function(e){e[e.du=0]="UPPER_LAYER",e[e.gu=1]="CDN",e[e.vu=2]="CDN_PREFETCH",e[e.yu=3]="CDN_COMPENSATION",e[e.mu=4]="P2P",e[e.Eu=5]="P2P_PREFETCH"}(t.Tu||(t.Tu={}));var s=function(){function e(){this.Iu=!1,this.wu=!1,this.Su=0,this.Ru=0,this.bu=0,this.Pu=0,this.Au=0,this.p2pAgenTrafficSuccessQt=0,this.Cu=0,this.srcOtherRespQt=0,this.ku=0,this.Ou=0,this._u=0,this.Nu=0,this.Du=0}return e}();t.Fu=s;var o=function(){function e(e,t,r,n,o){this.Lu=!1,this.type=void 0,this.Mu=new s,this.Bu=!1,this.Uu=!1,this.xu="",this.Hu=new ArrayBuffer(0),this.qu=0,this.type=r,this.Vu=e,this.ju=t,this.Gu=o,this.Qu=n,this.Mu.ku=i.Framework.time()}return e.prototype.Ku=function(){return this.type},e.prototype.Yu=function(){return this.Qu.Yu()},e.prototype.zu=function(){return this.Qu.zu()},e.prototype.Ju=function(){return this.zu()+"-"+this.ju},e.prototype.Wu=function(){return this.Qu.Xu()},e.prototype.Zu=function(){return this.Qu.$u()},e.prototype.loaded=function(){this.el=i.Framework.time()},e.prototype.tl=function(){return this.el?Math.max(1,this.el-this.Mu._u):Math.max(1,this.Mu.Nu-this.Mu._u)},e.prototype.rl=function(){return this.el?Math.max(1,this.el-this.Mu.Ou):Math.max(1,this.Mu.Nu-this.Mu.Ou)},e.prototype.il=function(){return 0!=this.Mu.Au?(new n.fn.Zi).Gi(this.tl(),this.Mu.Au):(new n.fn.Zi).Gi(this.rl(),this.Mu.Ru)},e}();t.nl=o},function(e,t,r){"use strict";var i=r(158),n=r(32),s=r(25),o=s.sl,a=r(2),h=r(0),c=r(160),u=r(166),l=r(3),p=r(6),f=r(1),d=r(15),g=r(4);!function(e){e.ol=!1;var t;!function(e){e[e.al=1]="Have",e[e.hl=2]="Chunk",e[e.Request=3]="Request",e[e.cl=4]="Cancel",e[e.ul=5]="Ack",e[e.ll=6]="Close",e[e.pl=7]="DoNotHave",e[e.fl=8]="OutPartRequest",e[e.dl=9]="OutPartResp",e[e.gl=10]="UDPHandshakeReq",e[e.vl=11]="UDPHandshakeResponse",e[e.yl=12]="UDPSwitchLeadershipRequest",e[e.ml=13]="UDPSwitchAck",e[e.El=14]="Bitrate",e[e.Tl=15]="Haves",e[e.hh=16]="PeerInfo",e[e.Il=17]="Ping",e[e.wl=18]="Pong",e[e.Sl=19]="NoPartnerResp"}(t=e.Rl||(e.Rl={}));var s=function(){function e(e){this.bl=new f,this.te=h.Framework.resolve(h.Framework.q.I).log(),this.Pl=e}return e.prototype.Al=function(e){try{var t=null,r=h.Framework.resolve(d.Pa.pa),i=r.Cl(e);return null==i?(this.te.warn("MSG RECEIVED FROM UNKNOWN SWARM"),null):(t=new c.kl(i,this.Pl.Ol,this.Pl._l,this.Pl),this.bl.has(e)||this.bl.set(e,t),this.bl.get(e))}catch(e){g.ErrorMonitor.gi().di("New dispatcher failed",{error:e})}},e.prototype.Nl=function(e){this.bl.delete(e)},e.prototype.Dl=function(e){return this.bl.get(e)},e}();e.Fl=s;var v=function(){function r(){this.Ll=null,this.Ml=h.Framework.resolve(h.Framework.q.I),this.Bl=new s(this),this.li=r.Ul++,this.xl=h.Framework.time()}return r.prototype.init=function(e,t){this.Ol=e,this._l=t,this.Hl=h.Framework.resolve(h.Framework.q.F)},r.prototype.ql=function(){var e=!1;return this.Bl.bl.forEach(function(t,r){(t.sender.ql()||t.receiver.ql())&&(e=!0)}),e},r.prototype.reset=function(){this.Bl.bl.forEach(function(e,t){e.sender.Vl()})},r.prototype.close=function(e){return this.Bl.Nl(e),0==this.Bl.bl.length&&this.Hl.disconnect(this._l),a("ok")},r.prototype.jl=function(r,i,s){try{this.xl=h.Framework.time();var a=s.pn(),c=a.byteLength,u=o.Ql.Gl.create(a),p=o.Kl(u),f=new n;f.Yl(r),f.zl(i),f.Yl(c),f.zl(p.toString()),f.append(a),f.Jl();var d=f.pn(),v=r===t.hl&&h.Framework.S()?d.byteLength+l.ni.Mr.Nr:d.byteLength;e.ol&&this.Ml.log(i).debug(this.li+" SEND MSG ID "+r+","+v+" HASH "+p.toString()+" TO "+this._l)}catch(e){g.ErrorMonitor.gi().di("ERROR CONSTRUCTING MESSAGE TO PEER","S["+i+"]",{msg:s,_l:this._l})}try{this.Hl.send(this._l,d,v)||this.Ml.log().warn("dropped msg: "+e.Rl[r]+" to "+this._l)}catch(e){this.Ml.log(i).warn("ERROR SENDING MESSAGE TO "+this._l+" "+e.stack)}},r.prototype.Wl=function(i){var s=this;e.ol&&this.Ml.log().debug(this.li+" GOT MSG "+i.byteLength);try{var a=h.Framework.time();this.xl=a,this.Xl(i).then(function(c){if(e.ol&&s.Ml.log().debug(s.li+" RECEIVING "+c.byteLength+" after "+(h.Framework.time()-a)),c.byteLength>r.Zl)throw new RangeError("P2P Message too big to be processed");var l=s.Ll;if(null===l){var f=n.wrap(c),d=f.$l();if(e.ol&&s.Ml.log().debug("MSG ID "+d),d>Object.keys(t).length)return s.Ml.log().warn("MSG OF WRONG ID RECEIVED: "+d),void(s.Ll=null);if(l=s.Ll=new u.ep,l.msgId=d,l.swarmId=f.tp(),l.length=f.$l(),l.hash=f.tp(),l.rp=f.pn(),l.length>r.Zl)throw new RangeError("P2P Message too big to be processed");e.ol&&s.Ml.log(l.swarmId).debug("MSG ID "+l.msgId+" L "+l.length+" SWID "+l.swarmId+" H "+l.hash+" TR "+l.rp.byteLength)}else{if(e.ol&&s.Ml.log().debug("APPENDING TO P2P MESSAGE "+l.msgId),null!=l.rp.byteLength&&l.rp.byteLength>r.Zl)throw new RangeError("P2P Message too big to be processed");l.rp=p.fn.appendBuffer(l.rp,i)}if(l.rp.byteLength===l.length){var g=o.Ql.Gl.create(l.rp);if(o.Kl(g).toString()!==l.hash){return void s.Ml.log(l.swarmId).warn(" INTEGRITY CHECK FAILED ")}var v=s.Bl.Dl(l.swarmId);v||(v=s.Bl.Al(l.swarmId),s.Ml.log(l.swarmId).debug("CREATED NEW DISPATCHER FOR "+s._l)),v.Ae(l),l.rp=null,s.Ll=null}})}catch(e){g.ErrorMonitor.gi().di("ERROR RECEIVING MESSAGE",{error:e}),this.Ll=null}},r.prototype.Xl=function(e){var t=!h.Framework.S()&&navigator.userAgent.toLowerCase().indexOf("firefox")>-1,r=a.defer();if(t){var i=new FileReader;i.onload=function(t){e=this.result,r.resolve(e)},i.onerror=r.reject,i.readAsArrayBuffer(e)}else r.resolve(e);return r.Te},r.prototype.ip=function(){return this.xl},r}();v.np=i.op(r(167)).sp("HiveMsgs"),v.Ul=0,v.Zl=136+Math.ceil(1.2*l.ni.Mr.Nr),e.Mr=v}(t.mu||(t.mu={}))},function(e,t,r){"use strict";var i=r(5);!function(e){e.bi=i.Rt.bi,e.Mi=i.Rt.Mi;var t=function(){function e(){}return e}();t.ap="wss://bee.hivestreaming.com:443/v1/hivejs",t.hp="wss://bee-test.hivestreaming.com:443/v1/hivejs",t.cp={iceServers:[{url:"stun:stun.hivestreaming.com:3478"}]},t.up=3e4,t.sc=3e5,t.rc=8e4,t.gc=1e3,t.lp=3e4,t.pp=100,t.fp=1e4,e.ic=t}(t.nc||(t.nc={}))},function(e,t){function r(e,t,r){null!=e&&("number"==typeof e?this.dp(e,t,r):null==t&&"string"!=typeof e?this.gp(e,256):this.gp(e,t))}function i(){return new r(null)}function n(e,t,r,i,n,s){for(;--s>=0;){var o=t*this[e++]+r[i]+n;n=Math.floor(o/67108864),r[i++]=67108863&o}return n}function s(e,t,r,i,n,s){for(var o=32767&t,a=t>>15;--s>=0;){var h=32767&this[e],c=this[e++]>>15,u=a*h+c*o;h=o*h+((32767&u)<<15)+r[i]+(1073741823&n),n=(h>>>30)+(u>>>15)+a*c+(n>>>30),r[i++]=1073741823&h}return n}function o(e,t,r,i,n,s){for(var o=16383&t,a=t>>14;--s>=0;){var h=16383&this[e],c=this[e++]>>14,u=a*h+c*o;h=o*h+((16383&u)<<14)+r[i]+n,n=(h>>28)+(u>>14)+a*c,r[i++]=268435455&h}return n}function a(e){return Pe.charAt(e)}function h(e,t){var r=Ae[e.charCodeAt(t)];return null==r?-1:r}function c(e){for(var t=this.vp-1;t>=0;--t)e[t]=this[t];e.vp=this.vp,e.v=this.v}function u(e){this.vp=1,this.v=e<0?-1:0,e>0?this[0]=e:e<-1?this[0]=e+this.yp:this.vp=0}function l(e){var t=i();return t.mp(e),t}function p(e,t){var i;if(16==t)i=4;else if(8==t)i=3;else if(256==t)i=8;else if(2==t)i=1;else if(32==t)i=5;else{if(4!=t)return void this.Ep(e,t);i=2}this.vp=0,this.v=0;for(var n=e.length,s=!1,o=0;--n>=0;){var a=8==i?255&e[n]:h(e,n);a<0?"-"==e.charAt(n)&&(s=!0):(s=!1,0==o?this[this.vp++]=a:o+i>this.Tp?(this[this.vp-1]|=(a&(1<<this.Tp-o)-1)<<o,this[this.vp++]=a>>this.Tp-o):this[this.vp-1]|=a<<o,(o+=i)>=this.Tp&&(o-=this.Tp))}8==i&&0!=(128&e[0])&&(this.v=-1,o>0&&(this[this.vp-1]|=(1<<this.Tp-o)-1<<o)),this.Ip(),s&&r.ZERO.wp(this,this)}function f(){for(var e=this.v&this.Sp;this.vp>0&&this[this.vp-1]==e;)--this.vp}function d(e){if(this.v<0)return"-"+this.Rp().toString(e);var t;if(16==e)t=4;else if(8==e)t=3;else if(2==e)t=1;else if(32==e)t=5;else{if(4!=e)return this.bp(e);t=2}var r,i=(1<<t)-1,n=!1,s="",o=this.vp,h=this.Tp-o*this.Tp%t;if(o-- >0)for(h<this.Tp&&(r=this[o]>>h)>0&&(n=!0,s=a(r));o>=0;)h<t?(r=(this[o]&(1<<h)-1)<<t-h,r|=this[--o]>>(h+=this.Tp-t)):(r=this[o]>>(h-=t)&i,h<=0&&(h+=this.Tp,--o)),r>0&&(n=!0),n&&(s+=a(r));return n?s:"0"}function g(){var e=i();return r.ZERO.wp(this,e),e}function v(){return this.v<0?this.Rp():this}function y(e){var t=this.v-e.v;if(0!=t)return t;var r=this.vp;if(0!=(t=r-e.vp))return this.v<0?-t:t;for(;--r>=0;)if(0!=(t=this[r]-e[r]))return t;return 0}function m(e){var t,r=1;return 0!=(t=e>>>16)&&(e=t,r+=16),0!=(t=e>>8)&&(e=t,r+=8),0!=(t=e>>4)&&(e=t,r+=4),0!=(t=e>>2)&&(e=t,r+=2),0!=(t=e>>1)&&(e=t,r+=1),r}function E(){return this.vp<=0?0:this.Tp*(this.vp-1)+m(this[this.vp-1]^this.v&this.Sp)}function T(e,t){var r;for(r=this.vp-1;r>=0;--r)t[r+e]=this[r];for(r=e-1;r>=0;--r)t[r]=0;t.vp=this.vp+e,t.v=this.v}function I(e,t){for(var r=e;r<this.vp;++r)t[r-e]=this[r];t.vp=Math.max(this.vp-e,0),t.v=this.v}function w(e,t){var r,i=e%this.Tp,n=this.Tp-i,s=(1<<n)-1,o=Math.floor(e/this.Tp),a=this.v<<i&this.Sp;for(r=this.vp-1;r>=0;--r)t[r+o+1]=this[r]>>n|a,a=(this[r]&s)<<i;for(r=o-1;r>=0;--r)t[r]=0;t[o]=a,t.vp=this.vp+o+1,t.v=this.v,t.Ip()}function S(e,t){t.v=this.v;var r=Math.floor(e/this.Tp);if(r>=this.vp)return void(t.vp=0);var i=e%this.Tp,n=this.Tp-i,s=(1<<i)-1;t[0]=this[r]>>i;for(var o=r+1;o<this.vp;++o)t[o-r-1]|=(this[o]&s)<<n,t[o-r]=this[o]>>i;i>0&&(t[this.vp-r-1]|=(this.v&s)<<n),t.vp=this.vp-r,t.Ip()}function R(e,t){for(var r=0,i=0,n=Math.min(e.vp,this.vp);r<n;)i+=this[r]-e[r],t[r++]=i&this.Sp,i>>=this.Tp;if(e.vp<this.vp){for(i-=e.v;r<this.vp;)i+=this[r],t[r++]=i&this.Sp,i>>=this.Tp;i+=this.v}else{for(i+=this.v;r<e.vp;)i-=e[r],t[r++]=i&this.Sp,i>>=this.Tp;i-=e.v}t.v=i<0?-1:0,i<-1?t[r++]=this.yp+i:i>0&&(t[r++]=i),t.vp=r,t.Ip()}function b(e,t){var i=this.abs(),n=e.abs(),s=i.vp;for(t.vp=s+n.vp;--s>=0;)t[s]=0;for(s=0;s<n.vp;++s)t[s+i.vp]=i.Pp(0,n[s],t,s,0,i.vp);t.v=0,t.Ip(),this.v!=e.v&&r.ZERO.wp(t,t)}function P(e){for(var t=this.abs(),r=e.vp=2*t.vp;--r>=0;)e[r]=0;for(r=0;r<t.vp-1;++r){var i=t.Pp(r,t[r],e,2*r,0,1);(e[r+t.vp]+=t.Pp(r+1,2*t[r],e,2*r+1,i,t.vp-r-1))>=t.yp&&(e[r+t.vp]-=t.yp,e[r+t.vp+1]=1)}e.vp>0&&(e[e.vp-1]+=t.Pp(r,t[r],e,2*r,0,1)),e.v=0,e.Ip()}function A(e,t,n){var s=e.abs();if(!(s.vp<=0)){var o=this.abs();if(o.vp<s.vp)return null!=t&&t.mp(0),void(null!=n&&this.Ap(n));null==n&&(n=i());var a=i(),h=this.v,c=e.v,u=this.Tp-m(s[s.vp-1]);u>0?(s.Cp(u,a),o.Cp(u,n)):(s.Ap(a),o.Ap(n));var l=a.vp,p=a[l-1];if(0!=p){var f=p*(1<<this.kp)+(l>1?a[l-2]>>this.Op:0),d=this._p/f,g=(1<<this.kp)/f,v=1<<this.Op,y=n.vp,E=y-l,T=null==t?i():t;for(a.Np(E,T),n.Dp(T)>=0&&(n[n.vp++]=1,n.wp(T,n)),r.ONE.Np(l,T),T.wp(a,a);a.vp<l;)a[a.vp++]=0;for(;--E>=0;){var I=n[--y]==p?this.Sp:Math.floor(n[y]*d+(n[y-1]+v)*g);if((n[y]+=a.Pp(0,I,n,E,0,l))<I)for(a.Np(E,T),n.wp(T,n);n[y]<--I;)n.wp(T,n)}null!=t&&(n.Fp(l,t),h!=c&&r.ZERO.wp(t,t)),n.vp=l,n.Ip(),u>0&&n.Lp(u,n),h<0&&r.ZERO.wp(n,n)}}}function C(e){var t=i();return this.abs().Mp(e,null,t),this.v<0&&t.Dp(r.ZERO)>0&&e.wp(t,t),t}function k(e){this.o=e}function O(e){return e.v<0||e.Dp(this.o)>=0?e.Bp(this.o):e}function _(e){return e}function N(e){e.Mp(this.o,null,e)}function D(e,t,r){e.Up(t,r),this.reduce(r)}function F(e,t){e.xp(t),this.reduce(t)}function L(){if(this.vp<1)return 0;var e=this[0];if(0==(1&e))return 0;var t=3&e;return t=t*(2-(15&e)*t)&15,t=t*(2-(255&e)*t)&255,t=t*(2-((65535&e)*t&65535))&65535,t=t*(2-e*t%this.yp)%this.yp,t>0?this.yp-t:-t}function M(e){this.o=e,this.Hp=e.qp(),this.Vp=32767&this.Hp,this.jp=this.Hp>>15,this.Gp=(1<<e.Tp-15)-1,this.Qp=2*e.vp}function B(e){var t=i();return e.abs().Np(this.o.vp,t),t.Mp(this.o,null,t),e.v<0&&t.Dp(r.ZERO)>0&&this.o.wp(t,t),t}function U(e){var t=i();return e.Ap(t),this.reduce(t),t}function x(e){for(;e.vp<=this.Qp;)e[e.vp++]=0;for(var t=0;t<this.o.vp;++t){var r=32767&e[t],i=r*this.Vp+((r*this.jp+(e[t]>>15)*this.Vp&this.Gp)<<15)&e.Sp;for(r=t+this.o.vp,e[r]+=this.o.Pp(0,i,e,t,0,this.o.vp);e[r]>=e.yp;)e[r]-=e.yp,e[++r]++}e.Ip(),e.Fp(this.o.vp,e),e.Dp(this.o)>=0&&e.wp(this.o,e)}function H(e,t){e.xp(t),this.reduce(t)}function q(e,t,r){e.Up(t,r),this.reduce(r)}function V(){return 0==(this.vp>0?1&this[0]:this.v)}function j(e,t){if(e>4294967295||e<1)return r.ONE;var n=i(),s=i(),o=t.Kp(this),a=m(e)-1;for(o.Ap(n);--a>=0;)if(t.Yp(n,s),(e&1<<a)>0)t.zp(s,o,n);else{var h=n;n=s,s=h}return t.Jp(n)}function G(e,t){var r;return r=e<256||t.Wp()?new k(t):new M(t),this.exp(e,r)}function Q(e){var t,r,i,n="",s=0;for(t=0;t<e.length&&e.charAt(t)!=ke;++t)(i=Ce.indexOf(e.charAt(t)))<0||(0==s?(n+=a(i>>2),r=3&i,s=1):1==s?(n+=a(r<<2|i>>4),r=15&i,s=2):2==s?(n+=a(r),n+=a(i>>2),r=3&i,s=3):(n+=a(r<<2|i>>4),n+=a(15&i),s=0));return 1==s&&(n+=a(r<<2)),n}function K(e){var t,r=Q(e),i=new Array;for(t=0;2*t<r.length;++t)i[t]=parseInt(r.substring(2*t,2*t+2),16);return i}/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/
 */
function Y(e,t){return new r(e,t)}function z(e,t){if(t<e.length+11)return alert("Message too long for RSA"),null;for(var i=new Array,n=e.length-1;n>=0&&t>0;){var s=e.charCodeAt(n--);s<128?i[--t]=s:s>127&&s<2048?(i[--t]=63&s|128,i[--t]=s>>6|192):(i[--t]=63&s|128,i[--t]=s>>6&63|128,i[--t]=s>>12|224)}i[--t]=0;for(var o=new SecureRandom,a=new Array;t>2;){for(a[0]=0;0==a[0];)o.Xp(a);i[--t]=a[0]}return i[--t]=2,i[--t]=0,new r(i)}function J(e,t,r){for(var i="",n=0;i.length<t;)i+=r(String.fromCharCode.apply(String,e.concat([(4278190080&n)>>24,(16711680&n)>>16,(65280&n)>>8,255&n]))),n+=1;return i}function W(e,t,i){if(e.length+2*Oe+2>t)throw"Message too long for RSA";var n,s="";for(n=0;n<t-e.length-2*Oe-2;n+=1)s+="\0";var o=rstr_sha1("")+s+""+e,a=new Array(Oe);(new SecureRandom).Xp(a);var h=J(a,o.length,i||rstr_sha1),c=[];for(n=0;n<o.length;n+=1)c[n]=o.charCodeAt(n)^h.charCodeAt(n);var u=J(c,a.length,rstr_sha1),l=[0];for(n=0;n<a.length;n+=1)l[n+1]=a[n]^u.charCodeAt(n);return new r(l.concat(c))}function X(){this.n=null,this.e=0,this.d=null,this.g=null,this.Zp=null,this.$p=null,this.ef=null,this.tf=null}function Z(e,t){this.rf=!0,"string"!=typeof e?(this.n=e,this.e=t):null!=e&&null!=t&&e.length>0&&t.length>0?(this.n=Y(e,16),this.e=parseInt(t,16)):alert("Invalid RSA public key")}function $(e){return e.if(this.e,this.n)}function ee(e){var t=z(e,this.n.nf()+7>>3);if(null==t)return null;var r=this.sf(t);if(null==r)return null;var i=r.toString(16);return 0==(1&i.length)?i:"0"+i}function te(e,t){var r=W(e,this.n.nf()+7>>3,t);if(null==r)return null;var i=this.sf(r);if(null==i)return null;var n=i.toString(16);return 0==(1&n.length)?n:"0"+n}function re(e,t){for(var r="",i=t/4-e.length,n=0;n<i;n++)r+="0";return r+e}function ie(e,t){var r=function(e){return KJUR.crypto.hf.af(e,t)}(e);return this.cf(r,t)}function ne(e,t){var r=KJUR.crypto.hf.uf(e,t,this.n.nf()),i=Y(r,16);return re(this.lf(i).toString(16),this.n.nf())}function se(e){return ie.call(this,e,"sha1")}function oe(e){return ie.call(this,e,"sha256")}function ae(e,t,r){for(var i="",n=0;i.length<t;)i+=hextorstr(r(rstrtohex(e+String.fromCharCode.apply(String,[(4278190080&n)>>24,(16711680&n)>>16,(65280&n)>>8,255&n])))),n+=1;return i}function he(e,t,r){var i=function(e){return KJUR.crypto.hf.pf(e,t)}(rstrtohex(e));return void 0===r&&(r=-1),this.ff(i,t,r)}function ce(e,t,i){var n,s=hextorstr(e),o=s.length,a=this.n.nf()-1,h=Math.ceil(a/8),c=function(e){return KJUR.crypto.hf.pf(e,t)};if(-1===i||void 0===i)i=o;else if(-2===i)i=h-o-2;else if(i<-2)throw"invalid salt length";if(h<o+i+2)throw"data too long";var u="";i>0&&(u=new Array(i),(new SecureRandom).Xp(u),u=String.fromCharCode.apply(String,u));var l=hextorstr(c(rstrtohex("\0\0\0\0\0\0\0\0"+s+u))),p=[];for(n=0;n<h-i-o-2;n+=1)p[n]=0;var f=String.fromCharCode.apply(String,p)+""+u,d=ae(l,f.length,c),g=[];for(n=0;n<f.length;n+=1)g[n]=f.charCodeAt(n)^d.charCodeAt(n);var v=65280>>8*h-a&255;for(g[0]&=~v,n=0;n<o;n++)g.push(l.charCodeAt(n));return g.push(188),re(this.lf(new r(g)).toString(16),this.n.nf())}function ue(e,t,r){var i=new X;return i.df(t,r),i.sf(e)}function le(e,t,r){return ue(e,t,r).toString(16).replace(/^1f+00/,"")}function pe(e){for(var t in KJUR.crypto.hf.gf){var r=KJUR.crypto.hf.gf[t],i=r.length;if(e.substring(0,i)==r){return[t,e.substring(i)]}}return[]}function fe(e,t,r,i){var n=le(t,r,i),s=pe(n);if(0==s.length)return!1;var o=s[0],a=s[1];return a==function(e){return KJUR.crypto.hf.af(e,o)}(e)}function de(e,t){return fe(t,Y(e,16),this.n.toString(16),this.e.toString(16))}function ge(e,t){t=t.replace(_e,""),t=t.replace(/[ \n]+/g,"");var r=Y(t,16);if(r.nf()>this.n.nf())return 0;var i=this.sf(r),n=i.toString(16).replace(/^1f+00/,""),s=pe(n);if(0==s.length)return!1;var o=s[0],a=s[1];return a==function(e){return KJUR.crypto.hf.af(e,o)}(e)}function ve(e,t){t=t.replace(_e,""),t=t.replace(/[ \n]+/g,"");var r=Y(t,16);if(r.nf()>this.n.nf())return 0;var i=this.sf(r),n=i.toString(16).replace(/^1f+00/,""),s=pe(n);if(0==s.length)return!1;s[0];return s[1]==e}function ye(e,t,r,i){var n=function(e){return KJUR.crypto.hf.pf(e,r)}(rstrtohex(e));return void 0===i&&(i=-1),this.vf(n,t,r,i)}function me(e,t,i,n){var s=new r(t,16);if(s.nf()>this.n.nf())return!1;var o,a=function(e){return KJUR.crypto.hf.pf(e,i)},h=hextorstr(e),c=h.length,u=this.n.nf()-1,l=Math.ceil(u/8);if(-1===n||void 0===n)n=c;else if(-2===n)n=l-c-2;else if(n<-2)throw"invalid salt length";if(l<c+n+2)throw"data too long";var p=this.sf(s).yf();for(o=0;o<p.length;o+=1)p[o]&=255;for(;p.length<l;)p.unshift(0);if(188!==p[l-1])throw"encoded message does not end in 0xbc";p=String.fromCharCode.apply(String,p);var f=p.substr(0,l-c-1),d=p.substr(f.length,c),g=65280>>8*l-u&255;if(0!=(f.charCodeAt(0)&g))throw"bits beyond keysize not zero";var v=ae(d,f.length,a),y=[];for(o=0;o<f.length;o+=1)y[o]=f.charCodeAt(o)^v.charCodeAt(o);y[0]&=~g;var m=l-c-n-2;for(o=0;o<m;o+=1)if(0!==y[o])throw"leftmost octets not zero";if(1!==y[m])throw"0x01 marker not found";return d===hextorstr(a(rstrtohex("\0\0\0\0\0\0\0\0"+h+String.fromCharCode.apply(String,y.slice(-n)))))}var Ee={};Ee.userAgent=!1;var Te={};if(void 0===Ie||!Ie)var Ie={};Ie.mf=function(){var e,t,r,i=arguments,n=null;for(e=0;e<i.length;e+=1)for(r=(""+i[e]).split("."),n=Ie,t="YAHOO"==r[0]?1:0;t<r.length;t+=1)n[r[t]]=n[r[t]]||{},n=n[r[t]];return n},Ie.log=function(e,t,r){var i=Ie.Tf.Ef;return!(!i||!i.log)&&i.log(e,t,r)},Ie.register=function(e,t,r){var i,n,s,o,a,h=Ie.De.If;for(h[e]||(h[e]={wf:[],Sf:[]}),i=h[e],n=r.version,s=r.sp,o=Ie.De.ss,i.name=e,i.version=n,i.sp=s,i.wf.push(n),i.Sf.push(s),i.Rf=t,a=0;a<o.length;a+=1)o[a](i);t?(t.VERSION=n,t.bf=s):Ie.log("mainClass is undefined for module "+e,"warn")},Ie.De=Ie.De||{If:[],ss:[]},Ie.De.getVersion=function(e){return Ie.De.If[e]||null},Ie.De.Pf=function(e){var t,r=function(e){var t=0;return parseFloat(e.replace(/\./g,function(){return 1==t++?"":"."}))},i=Ee,n={Af:0,opera:0,Cf:0,kf:0,chrome:0,Of:null,_f:0,Nf:0,Df:0,Ff:0,Lf:null,Mf:0,Bf:0,Uf:i&&i.xf,Hf:!1,os:null},s=e||Ee&&Ee.userAgent,o=Te&&Te.location,a=o&&o.href;return n.Hf=a&&0===a.toLowerCase().indexOf("https"),s&&(/windows|win32/i.test(s)?n.os="windows":/macintosh/i.test(s)?n.os="macintosh":/rhino/i.test(s)&&(n.os="rhino"),/KHTML/.test(s)&&(n.kf=1),t=s.match(/AppleWebKit\/([^\s]*)/),t&&t[1]&&(n.kf=r(t[1]),/ Mobile\//.test(s)?(n.Of="Apple",t=s.match(/OS ([^\s]*)/),t&&t[1]&&(t=r(t[1].replace("_","."))),n.Lf=t,n.Nf=n.Ff=n.Df=0,(t=s.match(/iPad|iPod|iPhone/))&&t[0]&&(n[t[0].toLowerCase()]=n.Lf)):(t=s.match(/NokiaN[^\/]*|Android \d\.\d|webOS\/\d\.\d/),t&&(n.Of=t[0]),/webOS/.test(s)&&(n.Of="WebOS",(t=s.match(/webOS\/([^\s]*);/))&&t[1]&&(n.Bf=r(t[1]))),/ Android/.test(s)&&(n.Of="Android",(t=s.match(/Android ([^\s]*);/))&&t[1]&&(n.Mf=r(t[1])))),t=s.match(/Chrome\/([^\s]*)/),t&&t[1]?n.chrome=r(t[1]):(t=s.match(/AdobeAIR\/([^\s]*)/))&&(n._f=t[0])),n.kf||(t=s.match(/Opera[\s\/]([^\s]*)/),t&&t[1]?(n.opera=r(t[1]),t=s.match(/Version\/([^\s]*)/),t&&t[1]&&(n.opera=r(t[1])),(t=s.match(/Opera Mini[^;]*/))&&(n.Of=t[0])):(t=s.match(/MSIE\s([^;]*)/),t&&t[1]?n.Af=r(t[1]):(t=s.match(/Gecko\/([^\s]*)/))&&(n.Cf=1,(t=s.match(/rv:([^\s\)]*)/))&&t[1]&&(n.Cf=r(t[1])))))),n},Ie.De.qf=Ie.De.Pf(),function(){if(Ie.mf("util","widget","example"),"undefined"!=typeof YAHOO_config){var e,t=YAHOO_config.listener,r=Ie.De.ss,i=!0;if(t){for(e=0;e<r.length;e++)if(r[e]==t){i=!1;break}i&&r.push(t)}}}(),Ie.lang=Ie.lang||{},function(){var e=Ie.lang,t=Object.prototype,r=[],i={Vf:"&amp;",jf:"&lt;",Gf:"&gt;",Qf:"&quot;",Kf:"&#x27;",Yf:"&#x2F;",zf:"&#x60;"},n=["toString","valueOf"],s={isArray:function(e){return"[object Array]"===t.toString.apply(e)},Jf:function(e){return"boolean"==typeof e},Wf:function(e){return"function"==typeof e||"[object Function]"===t.toString.apply(e)},Xf:function(e){return null===e},Zf:function(e){return"number"==typeof e&&isFinite(e)},Jo:function(t){return t&&("object"==typeof t||e.Wf(t))||!1},$f:function(e){return"string"==typeof e},td:function(e){return void 0===e},rd:Ie.De.qf.Af?function(r,i){var s,o,a;for(s=0;s<n.length;s+=1)o=n[s],a=i[o],e.Wf(a)&&a!=t[o]&&(r[o]=a)}:function(){},nd:function(e){return e.replace(/[&<>"'\/`]/g,function(e){return i[e]})},extend:function(r,i,n){if(!i||!r)throw new Error("extend failed, please check that all dependencies are included.");var s,o=function(){};if(o.prototype=i.prototype,r.prototype=new o,r.prototype.constructor=r,r.sd=i.prototype,i.prototype.constructor==t.constructor&&(i.prototype.constructor=i),n){for(s in n)e.hasOwnProperty(n,s)&&(r.prototype[s]=n[s]);e.rd(r.prototype,n)}},od:function(t,r){if(!r||!t)throw new Error("Absorb failed, verify dependencies.");var i,n,s=arguments,o=s[2];if(o&&!0!==o)for(i=2;i<s.length;i+=1)t[s[i]]=r[s[i]];else{for(n in r)!o&&n in t||(t[n]=r[n]);e.rd(t,r)}return t},ad:function(t,r){if(!r||!t)throw new Error("Augment failed, verify dependencies.");var i,n=[t.prototype,r.prototype];for(i=2;i<arguments.length;i+=1)n.push(arguments[i]);return e.od.apply(this,n),t},dump:function(t,r){var i,n,s=[],o="{...}";if(!e.Jo(t))return t+"";if(t instanceof Date||"nodeType"in t&&"tagName"in t)return t;if(e.Wf(t))return"f(){...}";if(r=e.Zf(r)?r:3,e.isArray(t)){for(s.push("["),i=0,n=t.length;i<n;i+=1)e.Jo(t[i])?s.push(r>0?e.dump(t[i],r-1):o):s.push(t[i]),s.push(", ");s.length>1&&s.pop(),s.push("]")}else{s.push("{");for(i in t)e.hasOwnProperty(t,i)&&(s.push(i+" => "),e.Jo(t[i])?s.push(r>0?e.dump(t[i],r-1):o):s.push(t[i]),s.push(", "));s.length>1&&s.pop(),s.push("}")}return s.join("")},hd:function(t,r,i,n){for(var s,o,a,h,c,u,l,p,f,d=[],g=t.length;!((s=t.lastIndexOf("{",g))<0)&&(o=t.indexOf("}",s),!(s+1>o));)l=t.substring(s+1,o),h=l,u=null,a=h.indexOf(" "),a>-1&&(u=h.substring(a+1),h=h.substring(0,a)),c=r[h],i&&(c=i(h,c,u)),e.Jo(c)?e.isArray(c)?c=e.dump(c,parseInt(u,10)):(u=u||"",p=u.indexOf("dump"),p>-1&&(u=u.substring(4)),f=c.toString(),c="[object Object]"===f||p>-1?e.dump(c,parseInt(u,10)):f):e.$f(c)||e.Zf(c)||(c="~-"+d.length+"-~",d[d.length]=l),t=t.substring(0,s)+c+t.substring(o+1),!1===n&&(g=s-1);for(s=d.length-1;s>=0;s-=1)t=t.replace(new RegExp("~-"+s+"-~"),"{"+d[s]+"}","g");return t},trim:function(e){try{return e.replace(/^\s+|\s+$/g,"")}catch(t){return e}},ud:function(){var t,r={},i=arguments,n=i.length;for(t=0;t<n;t+=1)e.od(r,i[t],!0);return r},ld:function(t,i,n,s,o){t=t||0,i=i||{};var a,h,c=n,u=s;if(e.$f(n)&&(c=i[n]),!c)throw new TypeError("method undefined");return e.td(s)||e.isArray(u)||(u=[s]),a=function(){c.apply(i,u||r)},h=o?setInterval(a,t):setTimeout(a,t),{interval:o,cancel:function(){this.interval?clearInterval(h):clearTimeout(h)}}},pd:function(t){return e.Jo(t)||e.$f(t)||e.Zf(t)||e.Jf(t)}};e.hasOwnProperty=t.hasOwnProperty?function(e,t){return e&&e.hasOwnProperty&&e.hasOwnProperty(t)}:function(t,r){return!e.td(t[r])&&t.constructor.prototype[r]!==t[r]},s.od(e,s,!0),Ie.util.Lang=e,e.fd=e.ad,Ie.fd=e.ad,Ie.extend=e.extend}(),Ie.register("yahoo",Ie,{version:"2.9.0",sp:"2800"});/*! CryptoJS v3.1.2 core-fix.js
 * code.google.com/p/crypto-js
 * (c) 2009-2013 by Jeff Mott. All rights reserved.
 * code.google.com/p/crypto-js/wiki/License
 * THIS IS FIX of 'core.js' to fix Hmac issue.
 * https://code.google.com/p/crypto-js/issues/detail?id=84
 * https://crypto-js.googlecode.com/svn-history/r667/branches/3.x/src/core.js
 */
var we=we||function(e,t){var r={},i=r.Ql={},n=i.dd=function(){function e(){}return{extend:function(t){e.prototype=this;var r=new e;return t&&r.gd(t),r.hasOwnProperty("init")||(r.init=function(){r.vd.init.apply(this,arguments)}),r.init.prototype=r,r.vd=this,r},create:function(){var e=this.extend();return e.init.apply(e,arguments),e},init:function(){},gd:function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);e.hasOwnProperty("toString")&&(this.toString=e.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),s=i.Gl=n.extend({init:function(e,t){e=this.yd=e||[],this.md=void 0!=t?t:4*e.length},toString:function(e){return(e||a).stringify(this)},concat:function(e){var t=this.yd,r=e.yd,i=this.md,n=e.md;if(this.Ip(),i%4)for(var s=0;s<n;s++){var o=r[s>>>2]>>>24-s%4*8&255;t[i+s>>>2]|=o<<24-(i+s)%4*8}else for(var s=0;s<n;s+=4)t[i+s>>>2]=r[s>>>2];return this.md+=n,this},Ip:function(){var t=this.yd,r=this.md;t[r>>>2]&=4294967295<<32-r%4*8,t.length=e.ceil(r/4)},clone:function(){var e=n.clone.call(this);return e.yd=this.yd.slice(0),e},random:function(t){for(var r=[],i=0;i<t;i+=4)r.push(4294967296*e.random()|0);return new s.init(r,t)}}),o=r.Ed={},a=o.Td={stringify:function(e){for(var t=e.yd,r=e.md,i=[],n=0;n<r;n++){var s=t[n>>>2]>>>24-n%4*8&255;i.push((s>>>4).toString(16)),i.push((15&s).toString(16))}return i.join("")},parse:function(e){for(var t=e.length,r=[],i=0;i<t;i+=2)r[i>>>3]|=parseInt(e.substr(i,2),16)<<24-i%8*4;return new s.init(r,t/2)}},h=o.Id={stringify:function(e){for(var t=e.yd,r=e.md,i=[],n=0;n<r;n++){var s=t[n>>>2]>>>24-n%4*8&255;i.push(String.fromCharCode(s))}return i.join("")},parse:function(e){for(var t=e.length,r=[],i=0;i<t;i++)r[i>>>2]|=(255&e.charCodeAt(i))<<24-i%4*8;return new s.init(r,t)}},c=o.wd={stringify:function(e){try{return decodeURIComponent(escape(h.stringify(e)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:function(e){return h.parse(unescape(encodeURIComponent(e)))}},u=i.Sd=n.extend({reset:function(){this.Rd=new s.init,this.bd=0},Pd:function(e){"string"==typeof e&&(e=c.parse(e)),this.Rd.concat(e),this.bd+=e.md},Ad:function(t){var r=this.Rd,i=r.yd,n=r.md,o=this.Cd,a=4*o,h=n/a;h=t?e.ceil(h):e.max((0|h)-this.kd,0);var c=h*o,u=e.min(4*c,n);if(c){for(var l=0;l<c;l+=o)this.Od(i,l);var p=i.splice(0,c);r.md-=u}return new s.init(p,u)},clone:function(){var e=n.clone.call(this);return e.Rd=this.Rd.clone(),e},kd:0}),l=(i._d=u.extend({Nd:n.extend(),init:function(e){this.Nd=this.Nd.extend(e),this.reset()},reset:function(){u.reset.call(this),this.Dd()},update:function(e){return this.Pd(e),this.Ad(),this},Fd:function(e){return e&&this.Pd(e),this.Ld()},Cd:16,Md:function(e){return function(t,r){return new e.init(r).Fd(t)}},Bd:function(e){return function(t,r){return new l.Ud.init(e,r).Fd(t)}}}),r.xd={});return r}(Math);!function(e){function t(e,t,r,i,n,s,o){return((e=e+(t&r|~t&i)+n+o)<<s|e>>>32-s)+t}function r(e,t,r,i,n,s,o){return((e=e+(t&i|r&~i)+n+o)<<s|e>>>32-s)+t}function i(e,t,r,i,n,s,o){return((e=e+(t^r^i)+n+o)<<s|e>>>32-s)+t}function n(e,t,r,i,n,s,o){return((e=e+(r^(t|~i))+n+o)<<s|e>>>32-s)+t}for(var s=we,o=s.Ql,a=o.Gl,h=o._d,o=s.xd,c=[],u=0;64>u;u++)c[u]=4294967296*e.abs(e.sin(u+1))|0;o=o.Kl=h.extend({Dd:function(){this.Hd=new a.init([1732584193,4023233417,2562383102,271733878])},Od:function(e,s){for(var o=0;16>o;o++){var a=s+o,h=e[a];e[a]=16711935&(h<<8|h>>>24)|4278255360&(h<<24|h>>>8)}var o=this.Hd.yd,a=e[s+0],h=e[s+1],u=e[s+2],l=e[s+3],p=e[s+4],f=e[s+5],d=e[s+6],g=e[s+7],v=e[s+8],y=e[s+9],m=e[s+10],E=e[s+11],T=e[s+12],I=e[s+13],w=e[s+14],S=e[s+15],R=o[0],b=o[1],P=o[2],A=o[3],R=t(R,b,P,A,a,7,c[0]),A=t(A,R,b,P,h,12,c[1]),P=t(P,A,R,b,u,17,c[2]),b=t(b,P,A,R,l,22,c[3]),R=t(R,b,P,A,p,7,c[4]),A=t(A,R,b,P,f,12,c[5]),P=t(P,A,R,b,d,17,c[6]),b=t(b,P,A,R,g,22,c[7]),R=t(R,b,P,A,v,7,c[8]),A=t(A,R,b,P,y,12,c[9]),P=t(P,A,R,b,m,17,c[10]),b=t(b,P,A,R,E,22,c[11]),R=t(R,b,P,A,T,7,c[12]),A=t(A,R,b,P,I,12,c[13]),P=t(P,A,R,b,w,17,c[14]),b=t(b,P,A,R,S,22,c[15]),R=r(R,b,P,A,h,5,c[16]),A=r(A,R,b,P,d,9,c[17]),P=r(P,A,R,b,E,14,c[18]),b=r(b,P,A,R,a,20,c[19]),R=r(R,b,P,A,f,5,c[20]),A=r(A,R,b,P,m,9,c[21]),P=r(P,A,R,b,S,14,c[22]),b=r(b,P,A,R,p,20,c[23]),R=r(R,b,P,A,y,5,c[24]),A=r(A,R,b,P,w,9,c[25]),P=r(P,A,R,b,l,14,c[26]),b=r(b,P,A,R,v,20,c[27]),R=r(R,b,P,A,I,5,c[28]),A=r(A,R,b,P,u,9,c[29]),P=r(P,A,R,b,g,14,c[30]),b=r(b,P,A,R,T,20,c[31]),R=i(R,b,P,A,f,4,c[32]),A=i(A,R,b,P,v,11,c[33]),P=i(P,A,R,b,E,16,c[34]),b=i(b,P,A,R,w,23,c[35]),R=i(R,b,P,A,h,4,c[36]),A=i(A,R,b,P,p,11,c[37]),P=i(P,A,R,b,g,16,c[38]),b=i(b,P,A,R,m,23,c[39]),R=i(R,b,P,A,I,4,c[40]),A=i(A,R,b,P,a,11,c[41]),P=i(P,A,R,b,l,16,c[42]),b=i(b,P,A,R,d,23,c[43]),R=i(R,b,P,A,y,4,c[44]),A=i(A,R,b,P,T,11,c[45]),P=i(P,A,R,b,S,16,c[46]),b=i(b,P,A,R,u,23,c[47]),R=n(R,b,P,A,a,6,c[48]),A=n(A,R,b,P,g,10,c[49]),P=n(P,A,R,b,w,15,c[50]),b=n(b,P,A,R,f,21,c[51]),R=n(R,b,P,A,T,6,c[52]),A=n(A,R,b,P,l,10,c[53]),P=n(P,A,R,b,m,15,c[54]),b=n(b,P,A,R,h,21,c[55]),R=n(R,b,P,A,v,6,c[56]),A=n(A,R,b,P,S,10,c[57]),P=n(P,A,R,b,d,15,c[58]),b=n(b,P,A,R,I,21,c[59]),R=n(R,b,P,A,p,6,c[60]),A=n(A,R,b,P,E,10,c[61]),P=n(P,A,R,b,u,15,c[62]),b=n(b,P,A,R,y,21,c[63]);o[0]=o[0]+R|0,o[1]=o[1]+b|0,o[2]=o[2]+P|0,o[3]=o[3]+A|0},Ld:function(){var t=this.Rd,r=t.yd,i=8*this.bd,n=8*t.md;r[n>>>5]|=128<<24-n%32;var s=e.floor(i/4294967296);for(r[15+(n+64>>>9<<4)]=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8),r[14+(n+64>>>9<<4)]=16711935&(i<<8|i>>>24)|4278255360&(i<<24|i>>>8),t.md=4*(r.length+1),this.Ad(),t=this.Hd,r=t.yd,i=0;4>i;i++)n=r[i],r[i]=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8);return t},clone:function(){var e=h.clone.call(this);return e.Hd=this.Hd.clone(),e}}),s.Kl=h.Md(o),s.qd=h.Bd(o)}(Math),function(){var e=we,t=e.Ql,r=t.Gl,i=t._d,n=[],t=e.xd.Vd=i.extend({Dd:function(){this.Hd=new r.init([1732584193,4023233417,2562383102,271733878,3285377520])},Od:function(e,t){for(var r=this.Hd.yd,i=r[0],s=r[1],o=r[2],a=r[3],h=r[4],c=0;80>c;c++){if(16>c)n[c]=0|e[t+c];else{var u=n[c-3]^n[c-8]^n[c-14]^n[c-16];n[c]=u<<1|u>>>31}u=(i<<5|i>>>27)+h+n[c],u=20>c?u+(1518500249+(s&o|~s&a)):40>c?u+(1859775393+(s^o^a)):60>c?u+((s&o|s&a|o&a)-1894007588):u+((s^o^a)-899497514),h=a,a=o,o=s<<30|s>>>2,s=i,i=u}r[0]=r[0]+i|0,r[1]=r[1]+s|0,r[2]=r[2]+o|0,r[3]=r[3]+a|0,r[4]=r[4]+h|0},Ld:function(){var e=this.Rd,t=e.yd,r=8*this.bd,i=8*e.md;return t[i>>>5]|=128<<24-i%32,t[14+(i+64>>>9<<4)]=Math.floor(r/4294967296),t[15+(i+64>>>9<<4)]=r,e.md=4*t.length,this.Ad(),this.Hd},clone:function(){var e=i.clone.call(this);return e.Hd=this.Hd.clone(),e}});e.Vd=i.Md(t),e.jd=i.Bd(t)}();/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/ */
var Se;"Microsoft Internet Explorer"==Ee.appName?(r.prototype.Pp=s,Se=30):"Netscape"!=Ee.appName?(r.prototype.Pp=n,Se=26):(r.prototype.Pp=o,Se=28),r.prototype.Tp=Se,r.prototype.Sp=(1<<Se)-1,r.prototype.yp=1<<Se;r.prototype._p=Math.pow(2,52),r.prototype.kp=52-Se,r.prototype.Op=2*Se-52;var Re,be,Pe="0123456789abcdefghijklmnopqrstuvwxyz",Ae=new Array;for(Re="0".charCodeAt(0),be=0;be<=9;++be)Ae[Re++]=be;for(Re="a".charCodeAt(0),be=10;be<36;++be)Ae[Re++]=be;for(Re="A".charCodeAt(0),be=10;be<36;++be)Ae[Re++]=be;k.prototype.Kp=O,k.prototype.Jp=_,k.prototype.reduce=N,k.prototype.zp=D,k.prototype.Yp=F,M.prototype.Kp=B,M.prototype.Jp=U,M.prototype.reduce=x,M.prototype.zp=q,M.prototype.Yp=H,r.prototype.Ap=c,r.prototype.mp=u,r.prototype.gp=p,r.prototype.Ip=f,r.prototype.Np=T,r.prototype.Fp=I,r.prototype.Cp=w,r.prototype.Lp=S,r.prototype.wp=R,r.prototype.Up=b,r.prototype.xp=P,r.prototype.Mp=A,r.prototype.qp=L,r.prototype.Wp=V,r.prototype.exp=j,r.prototype.toString=d,r.prototype.Rp=g,r.prototype.abs=v,r.prototype.Dp=y,r.prototype.nf=E,r.prototype.Bp=C,r.prototype.if=G,r.ZERO=l(0),r.ONE=l(1),/*! asn1-1.0.9.js (c) 2013-2015 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
"undefined"!=typeof KJUR&&KJUR||(KJUR={}),void 0!==KJUR.Gd&&KJUR.Gd||(KJUR.Gd={}),KJUR.Gd.Qd=new function(){this.Kd=function(e){var t=e.toString(16);return t.length%2==1&&(t="0"+t),t},this.Yd=function(e){var t=e.toString(16);if("-"!=t.substr(0,1))t.length%2==1?t="0"+t:t.match(/^[0-7]/)||(t="00"+t);else{var i=t.substr(1),n=i.length;n%2==1?n+=1:t.match(/^[0-7]/)||(n+=2);for(var s="",o=0;o<n;o++)s+="f";t=new r(s,16).zd(e).add(r.ONE).toString(16).replace(/^-/,"")}return t},this.Jd=function(e,t){var r=(KJUR.Gd,we.Ed.Td.parse(e)),i=we.Ed.Wd.stringify(r),n=i.replace(/(.{64})/g,"$1\r\n");return n=n.replace(/\r\n$/,""),"-----BEGIN "+t+"-----\r\n"+n+"\r\n-----END "+t+"-----\r\n"},this.Xd=function(e){var t=KJUR.Gd,r=Object.keys(e);if(1!=r.length)throw"key of param shall be only one.";var i=r[0];if(-1==":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":"+i+":"))throw"undefined key: "+i;if("bool"==i)return new t.Zd(e[i]);if("int"==i)return new t.$d(e[i]);if("bitstr"==i)return new t.eg(e[i]);if("octstr"==i)return new t.tg(e[i]);if("null"==i)return new t.rg(e[i]);if("oid"==i)return new t.ig(e[i]);if("enum"==i)return new t.ng(e[i]);if("utf8str"==i)return new t.sg(e[i]);if("numstr"==i)return new t.og(e[i]);if("prnstr"==i)return new t.ag(e[i]);if("telstr"==i)return new t.hg(e[i]);if("ia5str"==i)return new t.cg(e[i]);if("utctime"==i)return new t.ug(e[i]);if("gentime"==i)return new t.lg(e[i]);if("seq"==i){for(var n=e[i],s=[],o=0;o<n.length;o++){var a=t.Qd.Xd(n[o]);s.push(a)}return new t.pg({fg:s})}if("set"==i){for(var n=e[i],s=[],o=0;o<n.length;o++){var a=t.Qd.Xd(n[o]);s.push(a)}return new t.dg({fg:s})}if("tag"==i){var h=e[i];if("[object Array]"===Object.prototype.toString.call(h)&&3==h.length){var c=t.Qd.Xd(h[2]);return new t.gg({tag:h[0],vg:h[1],yg:c})}var u={};if(void 0!==h.vg&&(u.vg=h.vg),void 0!==h.tag&&(u.tag=h.tag),void 0===h.yg)throw"obj shall be specified for 'tag'.";return u.yg=t.Qd.Xd(h.yg),new t.gg(u)}},this.mg=function(e){return this.Xd(e).Eg()}},KJUR.Gd.Qd.Tg=function(e){for(var t="",i=parseInt(e.substr(0,2),16),n=Math.floor(i/40),s=i%40,t=n+"."+s,o="",a=2;a<e.length;a+=2){var h=parseInt(e.substr(a,2),16),c=("00000000"+h.toString(2)).slice(-8);if(o+=c.substr(1,7),"0"==c.substr(0,1)){t=t+"."+new r(o,2).toString(10),o=""}}return t},KJUR.Gd.Qd.Ig=function(e){var t=function(e){var t=e.toString(16);return 1==t.length&&(t="0"+t),t};if(!e.match(/^[0-9.]+$/))throw"malformed oid string: "+e;var i="",n=e.split("."),s=40*parseInt(n[0])+parseInt(n[1]);i+=t(s),n.splice(0,2);for(var o=0;o<n.length;o++)i+=function(e){var i="",n=new r(e,10),s=n.toString(2),o=7-s.length%7;7==o&&(o=0);for(var a="",h=0;h<o;h++)a+="0";s=a+s;for(var h=0;h<s.length-1;h+=7){var c=s.substr(h,7);h!=s.length-7&&(c="1"+c),i+=t(parseInt(c,2))}return i}(n[o]);return i},KJUR.Gd.wg=function(){this.Sg=function(){if(void 0===this.Rg||null==this.Rg)throw"this.hV is null or undefined.";if(this.Rg.length%2==1)throw"value hex must be even length: n="+"".length+",v="+this.Rg;var e=this.Rg.length/2,t=e.toString(16);if(t.length%2==1&&(t="0"+t),e<128)return t;var r=t.length/2;if(r>15)throw"ASN.1 length too long to represent by 8x: n = "+e.toString(16);return(128+r).toString(16)+t},this.Eg=function(){return(null==this.bg||this.Pg)&&(this.Rg=this.Ag(),this.Cg=this.Sg(),this.bg=this.kg+this.Cg+this.Rg,this.Pg=!1),this.bg},this.Og=function(){return this.Eg(),this.Rg},this.Ag=function(){return""}},KJUR.Gd._g=function(e){KJUR.Gd._g.sd.constructor.call(this);this.Ng=function(){return this.v},this.Dg=function(e){this.bg=null,this.Pg=!0,this.v=e,this.Rg=stohex(this.v)},this.Fg=function(e){this.bg=null,this.Pg=!0,this.v=null,this.Rg=e},this.Ag=function(){return this.Rg},void 0!==e&&("string"==typeof e?this.Dg(e):void 0!==e.Lg?this.Dg(e.Lg):void 0!==e.Mg&&this.Fg(e.Mg))},Ie.lang.extend(KJUR.Gd._g,KJUR.Gd.wg),KJUR.Gd.Bg=function(e){KJUR.Gd.Bg.sd.constructor.call(this);this.Ug=function(e){return utc=e.getTime()+6e4*e.getTimezoneOffset(),new Date(utc)},this.xg=function(e,t,r){var i=this.Hg,n=this.Ug(e),s=String(n.getFullYear());"utc"==t&&(s=s.substr(2,2));var o=i(String(n.getMonth()+1),2),a=i(String(n.getDate()),2),h=i(String(n.getHours()),2),c=i(String(n.getMinutes()),2),u=i(String(n.getSeconds()),2),l=s+o+a+h+c+u;if(!0===r){var p=n.getMilliseconds();if(0!=p){var f=i(String(p),3);f=f.replace(/[0]+$/,""),l=l+"."+f}}return l+"Z"},this.Hg=function(e,t){return e.length>=t?e:new Array(t-e.length+1).join("0")+e},this.Ng=function(){return this.v},this.Dg=function(e){this.bg=null,this.Pg=!0,this.v=e,this.Rg=stohex(e)},this.qg=function(e,t,r,i,n,s){var o=new Date(Date.UTC(e,t-1,r,i,n,s,0));this.Vg(o)},this.Ag=function(){return this.Rg}},Ie.lang.extend(KJUR.Gd.Bg,KJUR.Gd.wg),KJUR.Gd.jg=function(e){KJUR.Gd._g.sd.constructor.call(this);this.Gg=function(e){this.bg=null,this.Pg=!0,this.Qg=e},this.Kg=function(e){this.bg=null,this.Pg=!0,this.Qg.push(e)},this.Qg=new Array,void 0!==e&&void 0!==e.fg&&(this.Qg=e.fg)},Ie.lang.extend(KJUR.Gd.jg,KJUR.Gd.wg),KJUR.Gd.Zd=function(){KJUR.Gd.Zd.sd.constructor.call(this),this.kg="01",this.bg="0101ff"},Ie.lang.extend(KJUR.Gd.Zd,KJUR.Gd.wg),KJUR.Gd.$d=function(e){KJUR.Gd.$d.sd.constructor.call(this),this.kg="02",this.Yg=function(e){this.bg=null,this.Pg=!0,this.Rg=KJUR.Gd.Qd.Yd(e)},this.zg=function(e){var t=new r(String(e),10);this.Yg(t)},this.Jg=function(e){this.Rg=e},this.Ag=function(){return this.Rg},void 0!==e&&(void 0!==e.Wg?this.Yg(e.Wg):void 0!==e.Xg?this.zg(e.Xg):"number"==typeof e?this.zg(e):void 0!==e.Mg&&this.Jg(e.Mg))},Ie.lang.extend(KJUR.Gd.$d,KJUR.Gd.wg),KJUR.Gd.eg=function(e){KJUR.Gd.eg.sd.constructor.call(this),this.kg="03",this.Zg=function(e){this.bg=null,this.Pg=!0,this.Rg=e},this.$g=function(e,t){if(e<0||7<e)throw"unused bits shall be from 0 to 7: u = "+e;var r="0"+e;this.bg=null,this.Pg=!0,this.Rg=r+t},this.ev=function(e){e=e.replace(/0+$/,"");var t=8-e.length%8;8==t&&(t=0);for(var r=0;r<=t;r++)e+="0";for(var i="",r=0;r<e.length-1;r+=8){var n=e.substr(r,8),s=parseInt(n,2).toString(16);1==s.length&&(s="0"+s),i+=s}this.bg=null,this.Pg=!0,this.Rg="0"+t+i},this.tv=function(e){for(var t="",r=0;r<e.length;r++)1==e[r]?t+="1":t+="0";this.ev(t)},this.rv=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=!1;return t},this.Ag=function(){return this.Rg},void 0!==e&&("string"==typeof e&&e.toLowerCase().match(/^[0-9a-f]+$/)?this.Zg(e):void 0!==e.Mg?this.Zg(e.Mg):void 0!==e.iv?this.ev(e.iv):void 0!==e.fg&&this.tv(e.fg))},Ie.lang.extend(KJUR.Gd.eg,KJUR.Gd.wg),KJUR.Gd.tg=function(e){KJUR.Gd.tg.sd.constructor.call(this,e),this.kg="04"},Ie.lang.extend(KJUR.Gd.tg,KJUR.Gd._g),KJUR.Gd.rg=function(){KJUR.Gd.rg.sd.constructor.call(this),this.kg="05",this.bg="0500"},Ie.lang.extend(KJUR.Gd.rg,KJUR.Gd.wg),KJUR.Gd.ig=function(e){var t=function(e){var t=e.toString(16);return 1==t.length&&(t="0"+t),t},i=function(e){var i="",n=new r(e,10),s=n.toString(2),o=7-s.length%7;7==o&&(o=0);for(var a="",h=0;h<o;h++)a+="0";s=a+s;for(var h=0;h<s.length-1;h+=7){var c=s.substr(h,7);h!=s.length-7&&(c="1"+c),i+=t(parseInt(c,2))}return i};KJUR.Gd.ig.sd.constructor.call(this),this.kg="06",this.Jg=function(e){this.bg=null,this.Pg=!0,this.v=null,this.Rg=e},this.nv=function(e){if(!e.match(/^[0-9.]+$/))throw"malformed oid string: "+e;var r="",n=e.split("."),s=40*parseInt(n[0])+parseInt(n[1]);r+=t(s),n.splice(0,2);for(var o=0;o<n.length;o++)r+=i(n[o]);this.bg=null,this.Pg=!0,this.v=null,this.Rg=r},this.sv=function(e){if(void 0===KJUR.Gd.hv.av.ov[e])throw"DERObjectIdentifier oidName undefined: "+e;var t=KJUR.Gd.hv.av.ov[e];this.nv(t)},this.Ag=function(){return this.Rg},void 0!==e&&("string"==typeof e&&e.match(/^[0-2].[0-9.]+$/)?this.nv(e):void 0!==KJUR.Gd.hv.av.ov[e]?this.nv(KJUR.Gd.hv.av.ov[e]):void 0!==e.cv?this.nv(e.cv):void 0!==e.Mg?this.Jg(e.Mg):void 0!==e.name&&this.sv(e.name))},Ie.lang.extend(KJUR.Gd.ig,KJUR.Gd.wg),KJUR.Gd.ng=function(e){KJUR.Gd.ng.sd.constructor.call(this),this.kg="0a",this.Yg=function(e){this.bg=null,this.Pg=!0,this.Rg=KJUR.Gd.Qd.Yd(e)},this.zg=function(e){var t=new r(String(e),10);this.Yg(t)},this.Jg=function(e){this.Rg=e},this.Ag=function(){return this.Rg},void 0!==e&&(void 0!==e.Xg?this.zg(e.Xg):"number"==typeof e?this.zg(e):void 0!==e.Mg&&this.Jg(e.Mg))},Ie.lang.extend(KJUR.Gd.ng,KJUR.Gd.wg),KJUR.Gd.sg=function(e){KJUR.Gd.sg.sd.constructor.call(this,e),this.kg="0c"},Ie.lang.extend(KJUR.Gd.sg,KJUR.Gd._g),KJUR.Gd.og=function(e){KJUR.Gd.og.sd.constructor.call(this,e),this.kg="12"},Ie.lang.extend(KJUR.Gd.og,KJUR.Gd._g),KJUR.Gd.ag=function(e){KJUR.Gd.ag.sd.constructor.call(this,e),this.kg="13"},Ie.lang.extend(KJUR.Gd.ag,KJUR.Gd._g),KJUR.Gd.hg=function(e){KJUR.Gd.hg.sd.constructor.call(this,e),this.kg="14"},Ie.lang.extend(KJUR.Gd.hg,KJUR.Gd._g),KJUR.Gd.cg=function(e){KJUR.Gd.cg.sd.constructor.call(this,e),this.kg="16"},Ie.lang.extend(KJUR.Gd.cg,KJUR.Gd._g),KJUR.Gd.ug=function(e){KJUR.Gd.ug.sd.constructor.call(this,e),this.kg="17",this.Vg=function(e){this.bg=null,this.Pg=!0,this.uv=e,this.v=this.xg(this.uv,"utc"),this.Rg=stohex(this.v)},this.Ag=function(){return void 0===this.uv&&void 0===this.v&&(this.uv=new Date,this.v=this.xg(this.uv,"utc"),this.Rg=stohex(this.v)),this.Rg},void 0!==e&&(void 0!==e.Lg?this.Dg(e.Lg):"string"==typeof e&&e.match(/^[0-9]{12}Z$/)?this.Dg(e):void 0!==e.Mg?this.Fg(e.Mg):void 0!==e.uv&&this.Vg(e.uv))},Ie.lang.extend(KJUR.Gd.ug,KJUR.Gd.Bg),KJUR.Gd.lg=function(e){KJUR.Gd.lg.sd.constructor.call(this,e),this.kg="18",this.lv=!1,this.Vg=function(e){this.bg=null,this.Pg=!0,this.uv=e,this.v=this.xg(this.uv,"gen",this.lv),this.Rg=stohex(this.v)},this.Ag=function(){return void 0===this.uv&&void 0===this.v&&(this.uv=new Date,this.v=this.xg(this.uv,"gen",this.lv),this.Rg=stohex(this.v)),this.Rg},void 0!==e&&(void 0!==e.Lg?this.Dg(e.Lg):"string"==typeof e&&e.match(/^[0-9]{14}Z$/)?this.Dg(e):void 0!==e.Mg?this.Fg(e.Mg):void 0!==e.uv&&this.Vg(e.uv),!0===e.pv&&(this.lv=!0))},Ie.lang.extend(KJUR.Gd.lg,KJUR.Gd.Bg),KJUR.Gd.pg=function(e){KJUR.Gd.pg.sd.constructor.call(this,e),this.kg="30",this.Ag=function(){for(var e="",t=0;t<this.Qg.length;t++){e+=this.Qg[t].Eg()}return this.Rg=e,this.Rg}},Ie.lang.extend(KJUR.Gd.pg,KJUR.Gd.jg),KJUR.Gd.dg=function(e){KJUR.Gd.dg.sd.constructor.call(this,e),this.kg="31",this.fv=!0,this.Ag=function(){for(var e=new Array,t=0;t<this.Qg.length;t++){var r=this.Qg[t];e.push(r.Eg())}return 1==this.fv&&e.sort(),this.Rg=e.join(""),this.Rg},void 0!==e&&void 0!==e.dv&&0==e.dv&&(this.fv=!1)},Ie.lang.extend(KJUR.Gd.dg,KJUR.Gd.jg),KJUR.Gd.gg=function(e){KJUR.Gd.gg.sd.constructor.call(this),this.kg="a0",this.Rg="",this.gv=!0,this.vv=null,this.yv=function(e,t,r){this.kg=t,this.gv=e,this.vv=r,this.gv?(this.Rg=this.vv.Eg(),this.bg=null,this.Pg=!0):(this.Rg=null,this.bg=r.Eg(),this.bg=this.bg.replace(/^../,t),this.Pg=!1)},this.Ag=function(){return this.Rg},void 0!==e&&(void 0!==e.tag&&(this.kg=e.tag),void 0!==e.vg&&(this.gv=e.vg),void 0!==e.yg&&(this.vv=e.yg,this.yv(this.gv,this.kg,this.vv)))},Ie.lang.extend(KJUR.Gd.gg,KJUR.Gd.wg);/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/ */
var Ce="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",ke="=";/*! crypto-1.1.8.js (c) 2013-2016 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
"undefined"!=typeof KJUR&&KJUR||(KJUR={}),void 0!==KJUR.crypto&&KJUR.crypto||(KJUR.crypto={}),KJUR.crypto.hf=new function(){this.gf={sha1:"3021300906052b0e03021a05000414",mv:"302d300d06096086480165030402040500041c",sha256:"3031300d060960864801650304020105000420",Ev:"3041300d060960864801650304020205000430",Tv:"3051300d060960864801650304020305000440",Iv:"3020300c06082a864886f70d020205000410",wv:"3020300c06082a864886f70d020505000410",Sv:"3021300906052b2403020105000414"},this.Rv={wv:"cryptojs",sha1:"cryptojs",mv:"cryptojs",sha256:"cryptojs",Ev:"cryptojs",Tv:"cryptojs",Sv:"cryptojs",bv:"cryptojs",Pv:"cryptojs",Av:"cryptojs",Cv:"cryptojs",kv:"cryptojs",Ov:"cryptojs",_v:"cryptojs",Nv:"cryptojs/jsrsa",Dv:"cryptojs/jsrsa",Fv:"cryptojs/jsrsa",Lv:"cryptojs/jsrsa",Mv:"cryptojs/jsrsa",Bv:"cryptojs/jsrsa",Uv:"cryptojs/jsrsa",xv:"cryptojs/jsrsa",Hv:"cryptojs/jsrsa",qv:"cryptojs/jsrsa",Vv:"cryptojs/jsrsa",jv:"cryptojs/jsrsa",Gv:"cryptojs/jsrsa",Qv:"cryptojs/jsrsa",Kv:"cryptojs/jsrsa",Yv:"cryptojs/jsrsa",zv:"cryptojs/jsrsa",Jv:"cryptojs/jsrsa",Wv:"cryptojs/jsrsa",Xv:"cryptojs/jsrsa",Zv:"cryptojs/jsrsa",$v:"cryptojs/jsrsa",ey:"cryptojs/jsrsa",ty:"cryptojs/jsrsa"},this.iy={wv:we.xd.Kl,sha1:we.xd.Vd,mv:we.xd.ny,sha256:we.xd.sy,Ev:we.xd.oy,Tv:we.xd.ay,Sv:we.xd.hy},this.uy=function(e,t){if(void 0===this.gf[t])throw"alg not supported in Util.DIGESTINFOHEAD: "+t;return this.gf[t]+e},this.uf=function(e,t,r){var i=this.uy(e,t),n=r/4;if(i.length+22>n)throw"key is too short for SigAlg: keylen="+r+","+t;for(var s="0001",o="00"+i,a="",h=n-s.length-o.length,c=0;c<h;c+=2)a+="ff";return s+a+o},this.af=function(e,t){return new KJUR.crypto.py({gy:t}).ly(e)},this.pf=function(e,t){return new KJUR.crypto.py({gy:t}).vy(e)},this.sha1=function(e){return new KJUR.crypto.py({gy:"sha1",yy:"cryptojs"}).ly(e)},this.sha256=function(e){return new KJUR.crypto.py({gy:"sha256",yy:"cryptojs"}).ly(e)},this.my=function(e){return new KJUR.crypto.py({gy:"sha256",yy:"cryptojs"}).vy(e)},this.Tv=function(e){return new KJUR.crypto.py({gy:"sha512",yy:"cryptojs"}).ly(e)},this.Ey=function(e){return new KJUR.crypto.py({gy:"sha512",yy:"cryptojs"}).vy(e)},this.wv=function(e){return new KJUR.crypto.py({gy:"md5",yy:"cryptojs"}).ly(e)},this.Sv=function(e){return new KJUR.crypto.py({gy:"ripemd160",yy:"cryptojs"}).ly(e)},this.Ty=function(e){}},KJUR.crypto.py=function(e){this.Iy=function(e,t){if(null!=e&&void 0===t&&(t=KJUR.crypto.hf.Rv[e]),-1!=":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(e)&&"cryptojs"==t){try{this.wy=KJUR.crypto.hf.iy[e].create()}catch(t){throw"setAlgAndProvider hash alg set fail alg="+e+"/"+t}this.Sy=function(e){this.wy.update(e)},this.Ry=function(e){var t=we.Ed.Td.parse(e);this.wy.update(t)},this.digest=function(){return this.wy.Fd().toString(we.Ed.Td)},this.ly=function(e){return this.Sy(e),this.digest()},this.vy=function(e){return this.Ry(e),this.digest()}}if(-1!=":sha256:".indexOf(e)&&"sjcl"==t){try{this.wy=new sjcl.hash.sha256}catch(t){throw"setAlgAndProvider hash alg set fail alg="+e+"/"+t}this.Sy=function(e){this.wy.update(e)},this.Ry=function(e){var t=sjcl.Py.Mg.by(e);this.wy.update(t)},this.digest=function(){var e=this.wy.Fd();return sjcl.Py.Mg.Ay(e)},this.ly=function(e){return this.Sy(e),this.digest()},this.vy=function(e){return this.Ry(e),this.digest()}}},this.Sy=function(e){throw"updateString(str) not supported for this alg/prov: "+this.Cy+"/"+this.ky},this.Ry=function(e){throw"updateHex(hex) not supported for this alg/prov: "+this.Cy+"/"+this.ky},this.digest=function(){throw"digest() not supported for this alg/prov: "+this.Cy+"/"+this.ky},this.ly=function(e){throw"digestString(str) not supported for this alg/prov: "+this.Cy+"/"+this.ky},this.vy=function(e){throw"digestHex(hex) not supported for this alg/prov: "+this.Cy+"/"+this.ky},void 0!==e&&void 0!==e.gy&&(this.Cy=e.gy,void 0===e.yy&&(this.ky=KJUR.crypto.hf.Rv[this.Cy]),this.Iy(this.Cy,this.ky))},KJUR.crypto.Oy=function(e){this.Iy=function(e,t){if(e=e.toLowerCase(),null==e&&(e="hmacsha1"),e=e.toLowerCase(),"hmac"!=e.substr(0,4))throw"setAlgAndProvider unsupported HMAC alg: "+e;void 0===t&&(t=KJUR.crypto.hf.Rv[e]),this._y=e+"/"+t;var r=e.substr(4);if(-1!=":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(r)&&"cryptojs"==t){try{var i=KJUR.crypto.hf.iy[r];this.mac=we.xd.Ud.create(i,this.Ny)}catch(e){throw"setAlgAndProvider hash alg set fail hashAlg="+r+"/"+e}this.Sy=function(e){this.mac.update(e)},this.Ry=function(e){var t=we.Ed.Td.parse(e);this.mac.update(t)},this.Dy=function(){return this.mac.Fd().toString(we.Ed.Td)},this.Fy=function(e){return this.Sy(e),this.Dy()},this.Ly=function(e){return this.Ry(e),this.Dy()}}},this.Sy=function(e){throw"updateString(str) not supported for this alg/prov: "+this._y},this.Ry=function(e){throw"updateHex(hex) not supported for this alg/prov: "+this._y},this.Dy=function(){throw"digest() not supported for this alg/prov: "+this._y},this.Fy=function(e){throw"digestString(str) not supported for this alg/prov: "+this._y},this.Ly=function(e){throw"digestHex(hex) not supported for this alg/prov: "+this._y},this.My=function(e){if("string"==typeof e){var t=e;return e.length%2!=1&&e.match(/^[0-9A-Fa-f]+$/)||(t=rstrtohex(e)),void(this.Ny=we.Ed.Td.parse(t))}if("object"!=typeof e)throw"KJUR.crypto.Mac unsupported password type: "+e;var t=null;if(void 0!==e.Mg){if(e.Mg.length%2!=0||!e.Mg.match(/^[0-9A-Fa-f]+$/))throw"Mac: wrong hex password: "+e.Mg;t=e.Mg}if(void 0!==e.By&&(t=utf8tohex(e.By)),void 0!==e.Uy&&(t=rstrtohex(e.Uy)),void 0!==e.xy&&(t=Q(e.xy)),void 0!==e.Hy&&(t=b64utohex(e.Hy)),null==t)throw"KJUR.crypto.Mac unsupported password type: "+e;this.Ny=we.Ed.Td.parse(t)},void 0!==e&&(void 0!==e.Ny&&this.My(e.Ny),void 0!==e.gy&&(this.Cy=e.gy,void 0===e.yy&&(this.ky=KJUR.crypto.hf.Rv[this.Cy]),this.Iy(this.Cy,this.ky)))},KJUR.crypto.Signature=function(e){var t=null;if(this.qy=function(){this.Cy.match(/^(.+)with(.+)$/)&&(this.Vy=RegExp.$1.toLowerCase(),this.jy=RegExp.$2.toLowerCase())},this.Gy=function(e,t){for(var r="",i=t/4-e.length,n=0;n<i;n++)r+="0";return r+e},this.Iy=function(e,t){if(this.qy(),"cryptojs/jsrsa"!=t)throw"provider not supported: "+t;if(-1!=":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(this.Vy)){try{this.wy=new KJUR.crypto.py({gy:this.Vy})}catch(e){throw"setAlgAndProvider hash alg set fail alg="+this.Vy+"/"+e}this.init=function(e,t){var r=null;try{r=void 0===t?KEYUTIL.getKey(e):KEYUTIL.getKey(e,t)}catch(e){throw"init failed:"+e}if(!0===r.Qy)this.Ky=r,this.state="SIGN";else{if(!0!==r.rf)throw"init failed.:"+r;this.Yy=r,this.state="VERIFY"}},this.zy=function(e){"string"==typeof e.Jy&&"string"==typeof e.Wy?(this.Jy=e.Jy,this.Wy=e.Wy):this.Ky=e,this.state="SIGN"},this.Xy=function(e){"string"==typeof e.Zy&&"string"==typeof e.Wy?(this.Zy=e.Zy,this.Wy=e.Wy):e instanceof KJUR.crypto.$y?this.Yy=e:e instanceof X&&(this.Yy=e),this.state="VERIFY"},this.em=function(e){var t=new X509;t.tm(e),this.Yy=t.rm,this.state="VERIFY"},this.Sy=function(e){this.wy.Sy(e)},this.Ry=function(e){this.wy.Ry(e)},this.sign=function(){if(this.im=this.wy.digest(),void 0!==this.Jy&&void 0!==this.Wy){var e=new KJUR.crypto.$y({curve:this.Wy});this.nm=e.sm(this.im,this.Jy)}else if(this.Ky instanceof X&&"rsaandmgf1"==this.jy)this.nm=this.Ky.ff(this.im,this.Vy,this.om);else if(this.Ky instanceof X&&"rsa"==this.jy)this.nm=this.Ky.cf(this.im,this.Vy);else if(this.Ky instanceof KJUR.crypto.$y)this.nm=this.Ky.cf(this.im);else{if(!(this.Ky instanceof KJUR.crypto.am))throw"Signature: unsupported public key alg: "+this.jy;this.nm=this.Ky.cf(this.im)}return this.nm},this.hm=function(e){return this.Sy(e),this.sign()},this.sm=function(e){return this.Ry(e),this.sign()},this.verify=function(e){if(this.im=this.wy.digest(),void 0!==this.Zy&&void 0!==this.Wy){return new KJUR.crypto.$y({curve:this.Wy}).cm(this.im,e,this.Zy)}if(this.Yy instanceof X&&"rsaandmgf1"==this.jy)return this.Yy.vf(this.im,e,this.Vy,this.om);if(this.Yy instanceof X&&"rsa"==this.jy)return this.Yy.um(this.im,e);if(this.Yy instanceof KJUR.crypto.$y)return this.Yy.um(this.im,e);if(this.Yy instanceof KJUR.crypto.am)return this.Yy.um(this.im,e);throw"Signature: unsupported public key alg: "+this.jy}}},this.init=function(e,t){throw"init(key, pass) not supported for this alg:prov="+this.lm},this.Xy=function(e){throw"initVerifyByPublicKey(rsaPubKeyy) not supported for this alg:prov="+this.lm},this.em=function(e){throw"initVerifyByCertificatePEM(certPEM) not supported for this alg:prov="+this.lm},this.zy=function(e){throw"initSign(prvKey) not supported for this alg:prov="+this.lm},this.Sy=function(e){throw"updateString(str) not supported for this alg:prov="+this.lm},this.Ry=function(e){throw"updateHex(hex) not supported for this alg:prov="+this.lm},this.sign=function(){throw"sign() not supported for this alg:prov="+this.lm},this.hm=function(e){throw"digestString(str) not supported for this alg:prov="+this.lm},this.sm=function(e){throw"digestHex(hex) not supported for this alg:prov="+this.lm},this.verify=function(e){throw"verify(hSigVal) not supported for this alg:prov="+this.lm},this.pm=e,void 0!==e&&(void 0!==e.gy&&(this.Cy=e.gy,void 0===e.yy?this.ky=KJUR.crypto.hf.Rv[this.Cy]:this.ky=e.yy,this.lm=this.Cy+":"+this.ky,this.Iy(this.Cy,this.ky),this.qy()),void 0!==e.fm&&(this.om=e.fm),void 0!==e.dm)){if(void 0!==e.gm)throw"both prvkeypem and prvkeypas parameters not supported";try{var t=new X;t.vm(e.dm),this.zy(t)}catch(e){throw"fatal error to load pem private key: "+e}}},KJUR.crypto.av=new function(){this.ym={mm:"rsaEncryption",Em:"ecPublicKey",Tm:"dsa",Im:"secp256r1",wm:"secp192k1",Sm:"secp224r1",Rm:"secp256k1",bm:"secp521r1",Pm:"secp384r1",Am:"SHA1withDSA","608648016503040301":"SHA224withDSA","608648016503040302":"SHA256withDSA"}};var Oe=20;X.prototype.sf=$,X.prototype.df=Z,X.prototype.encrypt=ee,X.prototype.Cm=te,X.prototype.type="RSA";/*! rsasign-1.2.7.js (c) 2012 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
var _e=new RegExp("");_e.compile("[^0-9a-f]","gi"),X.prototype.cf=ne,X.prototype.hm=ie,X.prototype.km=se,X.prototype.Om=oe,X.prototype.sign=ie,X.prototype._m=se,X.prototype.Nm=oe,X.prototype.ff=ce,X.prototype.Dm=he,X.prototype.Fm=he,X.Lm=-1,X.Mm=-2,X.prototype.um=ve,X.prototype.Bm=ge,X.prototype.Um=de,X.prototype.verify=ge,X.prototype.xm=de,X.prototype.vf=me,X.prototype.Hm=ye,X.prototype.qm=ye,X.Vm=-2,t.jm=r,t.Gm=X,t.Signature=KJUR.crypto.Signature,t.py=KJUR.crypto.py,t.sl=we,t.Qm=Q,t.Km=K},function(e,t,r){"use strict";var i;!function(e){function t(e){return i[e]}var r=function(){function e(){}return e}();e.HiveSession=r;!function(e){e[e.Ym=0]="GENERIC_ERROR",e[e.zm=1]="NO_TECH_AVAILABLE",e[e.Jm=2]="NO_TECH_RESOLVED",e[e.Wm=3]="TECH_ERROR",e[e.Xm=4]="TICKET_ERROR"}(e.Zm||(e.Zm={}));var i;!function(e){e[e["$m"]=0]="Generic Undefined Error",e[e["eE"]=1]="No Tech available to resolve the ticket",e[e["tE"]=2]="No available Tech could resolved the ticket",e[e["rE"]=3]="Stopped resolving session on last tech onError",e[e["iE"]=4]="The ticket could not be resolved"}(i||(i={}));var n=function(){function e(){}return e}();e.HiveSessionError=n;var s=function(){function e(e,t){this.code=e,this.message=t}return e}();e.HiveTechError=s;!function(e){e[e.nE=0]="NOT_READY",e[e.sE=1]="PLUGIN_ERROR",e[e.oE=2]="SESSION_ERROR",e[e.Xm=3]="TICKET_ERROR",e[e.aE=4]="VERSION_ERROR",e[e.hE=5]="TIMEOUT_ERROR"}(e.cE||(e.cE={}));!function(e){e[e.uE=0]="OK",e[e.lE=1]="HIVE_NOT_ALLOWED",e[e.pE=2]="TICKET_NOT_RESOLVED",e[e.fE=3]="TIMEOUT_RESOLVING_TICKET"}(e.dE||(e.dE={})),e.getHiveSessionErrorMessage=t;var o=function(){function e(e){this.gE=e}return e.prototype.getPluginStatusCode=function(){return this.gE.vE()},e}();e.yE=o}(i=t.gn||(t.gn={})),"undefined"!=typeof window&&(void 0===window.gn&&(window.gn={}),window.gn.getHiveSessionErrorMessage=i.getHiveSessionErrorMessage)},function(e,t,r){var i,n,s;/*!
 * URI.js - Mutating URLs
 *
 * Version: 1.18.10
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
!function(o,a){"use strict";"object"==typeof e&&e.t?e.t=a(r(16),r(16),r(16)):(n=[r(16),r(16),r(16)],i=a,void 0!==(s="function"==typeof i?i.apply(t,n):i)&&(e.t=s))}(0,function(e,t,r,i){"use strict";function n(e,t){var r=arguments.length>=1,i=arguments.length>=2;if(!(this instanceof n))return r?i?new n(e,t):new n(e):new n;if(void 0===e){if(r)throw new TypeError("undefined is not a valid argument for URI");e="undefined"!=typeof location?location.href+"":""}if(null===e&&r)throw new TypeError("null is not a valid argument for URI");return this.href(e),void 0!==t?this.Bi(t):this}function s(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function o(e){return void 0===e?"Undefined":String(Object.prototype.toString.call(e)).slice(8,-1)}function a(e){return"Array"===o(e)}function h(e,t){var r,i,n={};if("RegExp"===o(t))n=null;else if(a(t))for(r=0,i=t.length;r<i;r++)n[t[r]]=!0;else n[t]=!0;for(r=0,i=e.length;r<i;r++){(n&&void 0!==n[e[r]]||!n&&t.test(e[r]))&&(e.splice(r,1),i--,r--)}return e}function c(e,t){var r,i;if(a(t)){for(r=0,i=t.length;r<i;r++)if(!c(e,t[r]))return!1;return!0}var n=o(t);for(r=0,i=e.length;r<i;r++)if("RegExp"===n){if("string"==typeof e[r]&&e[r].match(t))return!0}else if(e[r]===t)return!0;return!1}function u(e,t){if(!a(e)||!a(t))return!1;if(e.length!==t.length)return!1;e.sort(),t.sort();for(var r=0,i=e.length;r<i;r++)if(e[r]!==t[r])return!1;return!0}function l(e){var t=/^\/+|\/+$/g;return e.replace(t,"")}function p(e){return escape(e)}function f(e){return encodeURIComponent(e).replace(/[!'()*]/g,p).replace(/\*/g,"%2A")}function d(e){return function(t,r){return void 0===t?this.mE[e]||"":(this.mE[e]=t||null,this.sp(!r),this)}}function g(e,t){return function(r,i){return void 0===r?this.mE[e]||"":(null!==r&&(r+="",r.charAt(0)===t&&(r=r.substring(1))),this.mE[e]=r,this.sp(!i),this)}}var v=i&&i.EE;n.version="1.18.10";var y=n.prototype,m=Object.prototype.hasOwnProperty;n.mE=function(){return{protocol:null,username:null,password:null,hostname:null,urn:null,port:null,path:null,dn:null,TE:null,IE:n.IE,wE:n.wE}},n.IE=!1,n.wE=!0,n.SE=/^[a-z][a-z0-9.+-]*$/i,n.RE=/[^a-z0-9\.-]/i,n.bE=/(xn--)/i,n.PE=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,n.AE=/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,n.CE=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/gi,n.kE={start:/\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,end:/[\s\r\n]|$/,trim:/[`!()\[\]{};:'".,<>?«»“”„‘’]+$/,OE:/(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g},n._E={NE:"80",DE:"443",FE:"21",LE:"70",ME:"80",BE:"443"},n.UE=/[^a-zA-Z0-9\.-]/,n.xE={a:"href",HE:"cite",link:"href",qE:"href",VE:"src",form:"action",jE:"src",GE:"href",QE:"src",KE:"src",source:"src",track:"src",input:"src",YE:"src",video:"src"},n.zE=function(e){if(e&&e.nodeName){var t=e.nodeName.toLowerCase();if("input"!==t||"image"===e.type)return n.xE[t]}},n.encode=f,n.decode=decodeURIComponent,n.JE=function(){n.encode=escape,n.decode=unescape},n.WE=function(){n.encode=f,n.decode=decodeURIComponent},n.XE={pathname:{encode:{ZE:/%(24|26|2B|2C|3B|3D|3A|40)/gi,map:{"%24":"$","%26":"&","%2B":"+","%2C":",","%3B":";","%3D":"=","%3A":":","%40":"@"}},decode:{ZE:/[\/\?#]/g,map:{Yf:"%2F",$E:"%3F",eT:"%23"}}},tT:{encode:{ZE:/%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi,map:{"%3A":":",rT:"/",iT:"?",nT:"#",sT:"[",oT:"]","%40":"@",aT:"!","%24":"$","%26":"&",hT:"'",cT:"(",uT:")",lT:"*","%2B":"+","%2C":",","%3B":";","%3D":"="}}},pT:{encode:{ZE:/%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi,map:{aT:"!","%24":"$",hT:"'",cT:"(",uT:")",lT:"*","%2B":"+","%2C":",","%3B":";","%3D":"=","%40":"@"}},decode:{ZE:/[\/\?#:]/g,map:{Yf:"%2F",$E:"%3F",eT:"%23",fT:"%3A"}}}},n.dT=function(e,t){var r=n.encode(e+"");return void 0===t&&(t=n.wE),t?r.replace(/%20/g,"+"):r},n.gT=function(e,t){e+="",void 0===t&&(t=n.wE);try{return n.decode(t?e.replace(/\+/g,"%20"):e)}catch(t){return e}};var E,T={encode:"encode",decode:"decode"},I=function(e,t){return function(r){try{return n[t](r+"").replace(n.XE[e][t].ZE,function(r){return n.XE[e][t].map[r]})}catch(e){return r}}};for(E in T)n[E+"PathSegment"]=I("pathname",T[E]),n[E+"UrnPathSegment"]=I("urnpath",T[E]);var w=function(e,t,r){return function(i){var s;s=r?function(e){return n[t](n[r](e))}:n[t];for(var o=(i+"").split(e),a=0,h=o.length;a<h;a++)o[a]=s(o[a]);return o.join(e)}};n.vT=w("/","decodePathSegment"),n.yT=w(":","decodeUrnPathSegment"),n.mT=w("/","encodePathSegment","decode"),n.ET=w(":","encodeUrnPathSegment","decode"),n.TT=I("reserved","encode"),n.parse=function(e,t){var r;return t||(t={}),r=e.indexOf("#"),r>-1&&(t.TE=e.substring(r+1)||null,e=e.substring(0,r)),r=e.indexOf("?"),r>-1&&(t.dn=e.substring(r+1)||null,e=e.substring(0,r)),"//"===e.substring(0,2)?(t.protocol=null,e=e.substring(2),e=n.IT(e,t)):(r=e.indexOf(":"))>-1&&(t.protocol=e.substring(0,r)||null,t.protocol&&!t.protocol.match(n.SE)?t.protocol=void 0:"//"===e.substring(r+1,r+3)?(e=e.substring(r+3),e=n.IT(e,t)):(e=e.substring(r+1),t.urn=!0)),t.path=e,t},n.wT=function(e,t){e=e.replace(/\\/g,"/");var r,i,n=e.indexOf("/");if(-1===n&&(n=e.length),"["===e.charAt(0))r=e.indexOf("]"),t.hostname=e.substring(1,r)||null,t.port=e.substring(r+2,n)||null,"/"===t.port&&(t.port=null);else{var s=e.indexOf(":"),o=e.indexOf("/"),a=e.indexOf(":",s+1);-1!==a&&(-1===o||a<o)?(t.hostname=e.substring(0,n)||null,t.port=null):(i=e.substring(0,n).split(":"),t.hostname=i[0]||null,t.port=i[1]||null)}return t.hostname&&"/"!==e.substring(n).charAt(0)&&(n++,e="/"+e),e.substring(n)||"/"},n.IT=function(e,t){return e=n.ST(e,t),n.wT(e,t)},n.ST=function(e,t){var r,i=e.indexOf("/"),s=e.lastIndexOf("@",i>-1?i:e.length-1);return s>-1&&(-1===i||s<i)?(r=e.substring(0,s).split(":"),t.username=r[0]?n.decode(r[0]):null,r.shift(),t.password=r[0]?n.decode(r.join(":")):null,e=e.substring(s+1)):(t.username=null,t.password=null),e},n.RT=function(e,t){if(!e)return{};if(!(e=e.replace(/&+/g,"&").replace(/^\?*&*|&+$/g,"")))return{};for(var r,i,s,o={},a=e.split("&"),h=a.length,c=0;c<h;c++)r=a[c].split("="),i=n.gT(r.shift(),t),s=r.length?n.gT(r.join("="),t):null,m.call(o,i)?("string"!=typeof o[i]&&null!==o[i]||(o[i]=[o[i]]),o[i].push(s)):o[i]=s;return o},n.sp=function(e){var t="";return e.protocol&&(t+=e.protocol+":"),e.urn||!t&&!e.hostname||(t+="//"),t+=n.bT(e)||"","string"==typeof e.path&&("/"!==e.path.charAt(0)&&"string"==typeof e.hostname&&(t+="/"),t+=e.path),"string"==typeof e.dn&&e.dn&&(t+="?"+e.dn),"string"==typeof e.TE&&e.TE&&(t+="#"+e.TE),t},n.PT=function(e){var t="";return e.hostname?(n.AE.test(e.hostname)?t+="["+e.hostname+"]":t+=e.hostname,e.port&&(t+=":"+e.port),t):""},n.bT=function(e){return n.AT(e)+n.PT(e)},n.AT=function(e){var t="";return e.username&&(t+=n.encode(e.username)),e.password&&(t+=":"+n.encode(e.password)),t&&(t+="@"),t},n.CT=function(e,t,r){var i,s,o,h,c="";for(s in e)if(m.call(e,s)&&s)if(a(e[s]))for(i={},o=0,h=e[s].length;o<h;o++)void 0!==e[s][o]&&void 0===i[e[s][o]+""]&&(c+="&"+n.kT(s,e[s][o],r),!0!==t&&(i[e[s][o]+""]=!0));else void 0!==e[s]&&(c+="&"+n.kT(s,e[s],r));return c.substring(1)},n.kT=function(e,t,r){return n.dT(e,r)+(null!==t?"="+n.dT(t,r):"")},n.OT=function(e,t,r){if("object"==typeof t)for(var i in t)m.call(t,i)&&n.OT(e,i,t[i]);else{if("string"!=typeof t)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");if(void 0===e[t])return void(e[t]=r);"string"==typeof e[t]&&(e[t]=[e[t]]),a(r)||(r=[r]),e[t]=(e[t]||[]).concat(r)}},n._T=function(e,t,r){var i,s,c;if(a(t))for(i=0,s=t.length;i<s;i++)e[t[i]]=void 0;else if("RegExp"===o(t))for(c in e)t.test(c)&&(e[c]=void 0);else if("object"==typeof t)for(c in t)m.call(t,c)&&n._T(e,c,t[c]);else{if("string"!=typeof t)throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");void 0!==r?"RegExp"===o(r)?!a(e[t])&&r.test(e[t])?e[t]=void 0:e[t]=h(e[t],r):e[t]!==String(r)||a(r)&&1!==r.length?a(e[t])&&(e[t]=h(e[t],r)):e[t]=void 0:e[t]=void 0}},n.NT=function(e,t,r,i){switch(o(t)){case"String":break;case"RegExp":for(var s in e)if(m.call(e,s)&&t.test(s)&&(void 0===r||n.NT(e,s,r)))return!0;return!1;case"Object":for(var h in t)if(m.call(t,h)&&!n.NT(e,h,t[h]))return!1;return!0;default:throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter")}switch(o(r)){case"Undefined":return t in e;case"Boolean":return r===Boolean(a(e[t])?e[t].length:e[t]);case"Function":return!!r(e[t],t,e);case"Array":if(!a(e[t]))return!1;return(i?c:u)(e[t],r);case"RegExp":return a(e[t])?!!i&&c(e[t],r):Boolean(e[t]&&e[t].match(r));case"Number":r=String(r);case"String":return a(e[t])?!!i&&c(e[t],r):e[t]===r;default:throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter")}},n.DT=function(){for(var e=[],t=[],r=0,i=0;i<arguments.length;i++){var s=new n(arguments[i]);e.push(s);for(var o=s.FT(),a=0;a<o.length;a++)"string"==typeof o[a]&&t.push(o[a]),o[a]&&r++}if(!t.length||!r)return new n("");var h=new n("").FT(t);return""!==e[0].path()&&"/"!==e[0].path().slice(0,1)||h.path("/"+h.path()),h.normalize()},n.LT=function(e,t){var r,i=Math.min(e.length,t.length);for(r=0;r<i;r++)if(e.charAt(r)!==t.charAt(r)){r--;break}return r<1?e.charAt(0)===t.charAt(0)&&"/"===e.charAt(0)?"/":"":("/"===e.charAt(r)&&"/"===t.charAt(r)||(r=e.substring(0,r).lastIndexOf("/")),e.substring(0,r+1))},n.MT=function(e,t,r){r||(r={});var i=r.start||n.kE.start,s=r.end||n.kE.end,o=r.trim||n.kE.trim,a=r.OE||n.kE.OE,h=/[a-z0-9-]=["']?$/i;for(i.lastIndex=0;;){var c=i.exec(e);if(!c)break;var u=c.index;if(r.BT){var l=e.slice(Math.max(u-3,0),u);if(l&&h.test(l))continue}for(var p=u+e.slice(u).search(s),f=e.slice(u,p),d=-1;;){var g=a.exec(f);if(!g)break;var v=g.index+g[0].length;d=Math.max(d,v)}if(f=d>-1?f.slice(0,d)+f.slice(d).replace(o,""):f.replace(o,""),!(f.length<=c[0].length||r.UT&&r.UT.test(f))){p=u+f.length;var y=t(f,u,p,e);void 0!==y?(y=String(y),e=e.slice(0,u)+y+e.slice(p),i.lastIndex=u+y.length):i.lastIndex=p}}return i.lastIndex=0,e},n.xT=function(t){if(t.match(n.UE)){if(!e)throw new TypeError('Hostname "'+t+'" contains characters other than [A-Z0-9.-] and Punycode.js is not available');if(e.HT(t).match(n.UE))throw new TypeError('Hostname "'+t+'" contains characters other than [A-Z0-9.-]')}},n.wt=function(e){if(e){var t={EE:this.wt()};return i.qT&&"function"==typeof i.qT.wt&&(t.qT=i.qT.wt()),i.VT&&"function"==typeof i.VT.wt&&(t.VT=i.VT.wt()),i.jT&&"function"==typeof i.jT.wt&&(t.jT=i.jT.wt()),t}return i.EE===this&&(i.EE=v),this},y.sp=function(e){return!0===e?this.GT=!0:(void 0===e||this.GT)&&(this.QT=n.sp(this.mE),this.GT=!1),this},y.clone=function(){return new n(this)},y.valueOf=y.toString=function(){return this.sp(!1).QT},y.protocol=d("protocol"),y.username=d("username"),y.password=d("password"),y.hostname=d("hostname"),y.port=d("port"),y.dn=g("query","?"),y.TE=g("fragment","#"),y.search=function(e,t){var r=this.dn(e,t);return"string"==typeof r&&r.length?"?"+r:r},y.hash=function(e,t){var r=this.TE(e,t);return"string"==typeof r&&r.length?"#"+r:r},y.pathname=function(e,t){if(void 0===e||!0===e){var r=this.mE.path||(this.mE.hostname?"/":"");return e?(this.mE.urn?n.yT:n.vT)(r):r}return this.mE.urn?this.mE.path=e?n.ET(e):"":this.mE.path=e?n.mT(e):"/",this.sp(!t),this},y.path=y.pathname,y.href=function(e,t){var r;if(void 0===e)return this.toString();this.QT="",this.mE=n.mE();var i=e instanceof n,s="object"==typeof e&&(e.hostname||e.path||e.pathname);if(e.nodeName){e=e[n.zE(e)]||"",s=!1}if(!i&&s&&void 0!==e.pathname&&(e=e.toString()),"string"==typeof e||e instanceof String)this.mE=n.parse(String(e),this.mE);else{if(!i&&!s)throw new TypeError("invalid input");var o=i?e.mE:e;for(r in o)m.call(this.mE,r)&&(this.mE[r]=o[r])}return this.sp(!t),this},y.is=function(e){var t=!1,i=!1,s=!1,o=!1,a=!1,h=!1,c=!1,u=!this.mE.urn;switch(this.mE.hostname&&(u=!1,i=n.PE.test(this.mE.hostname),s=n.AE.test(this.mE.hostname),t=i||s,o=!t,a=o&&r&&r.has(this.mE.hostname),h=o&&n.RE.test(this.mE.hostname),c=o&&n.bE.test(this.mE.hostname)),e.toLowerCase()){case"relative":return u;case"absolute":return!u;case"domain":case"name":return o;case"sld":return a;case"ip":return t;case"ip4":case"ipv4":case"inet4":return i;case"ip6":case"ipv6":case"inet6":return s;case"idn":return h;case"url":return!this.mE.urn;case"urn":return!!this.mE.urn;case"punycode":return c}return null};var S=y.protocol,R=y.port,b=y.hostname;y.protocol=function(e,t){if(void 0!==e&&e&&(e=e.replace(/:(\/\/)?$/,""),!e.match(n.SE)))throw new TypeError('Protocol "'+e+"\" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]");return S.call(this,e,t)},y.scheme=y.protocol,y.port=function(e,t){if(this.mE.urn)return void 0===e?"":this;if(void 0!==e&&(0===e&&(e=null),e&&(e+="",":"===e.charAt(0)&&(e=e.substring(1)),e.match(/[^0-9]/))))throw new TypeError('Port "'+e+'" contains characters other than [0-9]');return R.call(this,e,t)},y.hostname=function(e,t){if(this.mE.urn)return void 0===e?"":this;if(void 0!==e){var r={};if("/"!==n.wT(e,r))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');e=r.hostname}return b.call(this,e,t)},y.origin=function(e,t){if(this.mE.urn)return void 0===e?"":this;if(void 0===e){var r=this.protocol();return this.KT()?(r?r+"://":"")+this.KT():""}var i=n(e);return this.protocol(i.protocol()).KT(i.KT()).sp(!t),this},y.host=function(e,t){if(this.mE.urn)return void 0===e?"":this;if(void 0===e)return this.mE.hostname?n.PT(this.mE):"";if("/"!==n.wT(e,this.mE))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');return this.sp(!t),this},y.KT=function(e,t){if(this.mE.urn)return void 0===e?"":this;if(void 0===e)return this.mE.hostname?n.bT(this.mE):"";if("/"!==n.IT(e,this.mE))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');return this.sp(!t),this},y.YT=function(e,t){if(this.mE.urn)return void 0===e?"":this;if(void 0===e){var r=n.AT(this.mE);return r?r.substring(0,r.length-1):r}return"@"!==e[e.length-1]&&(e+="@"),n.ST(e,this.mE),this.sp(!t),this},y.zT=function(e,t){var r;return void 0===e?this.path()+this.search()+this.hash():(r=n.parse(e),this.mE.path=r.path,this.mE.dn=r.dn,this.mE.TE=r.TE,this.sp(!t),this)},y.JT=function(e,t){if(this.mE.urn)return void 0===e?"":this;if(void 0===e){if(!this.mE.hostname||this.is("IP"))return"";var r=this.mE.hostname.length-this.domain().length-1;return this.mE.hostname.substring(0,r)||""}var i=this.mE.hostname.length-this.domain().length,o=this.mE.hostname.substring(0,i),a=new RegExp("^"+s(o));return e&&"."!==e.charAt(e.length-1)&&(e+="."),e&&n.xT(e),this.mE.hostname=this.mE.hostname.replace(a,e),this.sp(!t),this},y.domain=function(e,t){if(this.mE.urn)return void 0===e?"":this;if("boolean"==typeof e&&(t=e,e=void 0),void 0===e){if(!this.mE.hostname||this.is("IP"))return"";var r=this.mE.hostname.match(/\./g);if(r&&r.length<2)return this.mE.hostname;var i=this.mE.hostname.length-this.WT(t).length-1;return i=this.mE.hostname.lastIndexOf(".",i-1)+1,this.mE.hostname.substring(i)||""}if(!e)throw new TypeError("cannot set domain empty");if(n.xT(e),!this.mE.hostname||this.is("IP"))this.mE.hostname=e;else{var o=new RegExp(s(this.domain())+"$");this.mE.hostname=this.mE.hostname.replace(o,e)}return this.sp(!t),this},y.WT=function(e,t){if(this.mE.urn)return void 0===e?"":this;if("boolean"==typeof e&&(t=e,e=void 0),void 0===e){if(!this.mE.hostname||this.is("IP"))return"";var i=this.mE.hostname.lastIndexOf("."),n=this.mE.hostname.substring(i+1);return!0!==t&&r&&r.list[n.toLowerCase()]?r.get(this.mE.hostname)||n:n}var o;if(!e)throw new TypeError("cannot set TLD empty");if(e.match(/[^a-zA-Z0-9-]/)){if(!r||!r.is(e))throw new TypeError('TLD "'+e+'" contains characters other than [A-Z0-9]');o=new RegExp(s(this.WT())+"$"),this.mE.hostname=this.mE.hostname.replace(o,e)}else{if(!this.mE.hostname||this.is("IP"))throw new ReferenceError("cannot set TLD on non-domain host");o=new RegExp(s(this.WT())+"$"),this.mE.hostname=this.mE.hostname.replace(o,e)}return this.sp(!t),this},y.XT=function(e,t){if(this.mE.urn)return void 0===e?"":this;if(void 0===e||!0===e){if(!this.mE.path&&!this.mE.hostname)return"";if("/"===this.mE.path)return"/";var r=this.mE.path.length-this.filename().length-1,i=this.mE.path.substring(0,r)||(this.mE.hostname?"/":"");return e?n.vT(i):i}var o=this.mE.path.length-this.filename().length,a=this.mE.path.substring(0,o),h=new RegExp("^"+s(a));return this.is("relative")||(e||(e="/"),"/"!==e.charAt(0)&&(e="/"+e)),e&&"/"!==e.charAt(e.length-1)&&(e+="/"),e=n.mT(e),this.mE.path=this.mE.path.replace(h,e),this.sp(!t),this},y.filename=function(e,t){if(this.mE.urn)return void 0===e?"":this;if("string"!=typeof e){if(!this.mE.path||"/"===this.mE.path)return"";var r=this.mE.path.lastIndexOf("/"),i=this.mE.path.substring(r+1);return e?n.ZT(i):i}var o=!1;"/"===e.charAt(0)&&(e=e.substring(1)),e.match(/\.?\//)&&(o=!0);var a=new RegExp(s(this.filename())+"$");return e=n.mT(e),this.mE.path=this.mE.path.replace(a,e),o?this.$T(t):this.sp(!t),this},y.suffix=function(e,t){if(this.mE.urn)return void 0===e?"":this;if(void 0===e||!0===e){if(!this.mE.path||"/"===this.mE.path)return"";var r,i,o=this.filename(),a=o.lastIndexOf(".");return-1===a?"":(r=o.substring(a+1),i=/^[a-z0-9%]+$/i.test(r)?r:"",e?n.ZT(i):i)}"."===e.charAt(0)&&(e=e.substring(1));var h,c=this.suffix();if(c)h=e?new RegExp(s(c)+"$"):new RegExp(s("."+c)+"$");else{if(!e)return this;this.mE.path+="."+n.mT(e)}return h&&(e=n.mT(e),this.mE.path=this.mE.path.replace(h,e)),this.sp(!t),this},y.FT=function(e,t,r){var i=this.mE.urn?":":"/",n=this.path(),s="/"===n.substring(0,1),o=n.split(i);if(void 0!==e&&"number"!=typeof e&&(r=t,t=e,e=void 0),void 0!==e&&"number"!=typeof e)throw new Error('Bad segment "'+e+'", must be 0-based integer');if(s&&o.shift(),e<0&&(e=Math.max(o.length+e,0)),void 0===t)return void 0===e?o:o[e];if(null===e||void 0===o[e])if(a(t)){o=[];for(var h=0,c=t.length;h<c;h++)(t[h].length||o.length&&o[o.length-1].length)&&(o.length&&!o[o.length-1].length&&o.pop(),o.push(l(t[h])))}else(t||"string"==typeof t)&&(t=l(t),""===o[o.length-1]?o[o.length-1]=t:o.push(t));else t?o[e]=l(t):o.splice(e,1);return s&&o.unshift(""),this.path(o.join(i),r)},y.eI=function(e,t,r){var i,s,o;if("number"!=typeof e&&(r=t,t=e,e=void 0),void 0===t){if(i=this.FT(e,t,r),a(i))for(s=0,o=i.length;s<o;s++)i[s]=n.decode(i[s]);else i=void 0!==i?n.decode(i):void 0;return i}if(a(t))for(s=0,o=t.length;s<o;s++)t[s]=n.encode(t[s]);else t="string"==typeof t||t instanceof String?n.encode(t):t;return this.FT(e,t,r)};var P=y.dn;return y.dn=function(e,t){if(!0===e)return n.RT(this.mE.dn,this.mE.wE);if("function"==typeof e){var r=n.RT(this.mE.dn,this.mE.wE),i=e.call(this,r);return this.mE.dn=n.CT(i||r,this.mE.IE,this.mE.wE),this.sp(!t),this}return void 0!==e&&"string"!=typeof e?(this.mE.dn=n.CT(e,this.mE.IE,this.mE.wE),this.sp(!t),this):P.call(this,e,t)},y.tI=function(e,t,r){var i=n.RT(this.mE.dn,this.mE.wE);if("string"==typeof e||e instanceof String)i[e]=void 0!==t?t:null;else{if("object"!=typeof e)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");for(var s in e)m.call(e,s)&&(i[s]=e[s])}return this.mE.dn=n.CT(i,this.mE.IE,this.mE.wE),"string"!=typeof e&&(r=t),this.sp(!r),this},y.OT=function(e,t,r){var i=n.RT(this.mE.dn,this.mE.wE);return n.OT(i,e,void 0===t?null:t),this.mE.dn=n.CT(i,this.mE.IE,this.mE.wE),"string"!=typeof e&&(r=t),this.sp(!r),this},y._T=function(e,t,r){var i=n.RT(this.mE.dn,this.mE.wE);return n._T(i,e,t),this.mE.dn=n.CT(i,this.mE.IE,this.mE.wE),"string"!=typeof e&&(r=t),this.sp(!r),this},y.NT=function(e,t,r){var i=n.RT(this.mE.dn,this.mE.wE);return n.NT(i,e,t,r)},y.rI=y.tI,y.iI=y.OT,y.nI=y._T,y.sI=y.NT,y.normalize=function(){return this.mE.urn?this.hI(!1).$T(!1).aI(!1).oI(!1).sp():this.hI(!1).uI(!1).cI(!1).$T(!1).aI(!1).oI(!1).sp()},y.hI=function(e){return"string"==typeof this.mE.protocol&&(this.mE.protocol=this.mE.protocol.toLowerCase(),this.sp(!e)),this},y.uI=function(r){return this.mE.hostname&&(this.is("IDN")&&e?this.mE.hostname=e.HT(this.mE.hostname):this.is("IPv6")&&t&&(this.mE.hostname=t.lI(this.mE.hostname)),this.mE.hostname=this.mE.hostname.toLowerCase(),this.sp(!r)),this},y.cI=function(e){return"string"==typeof this.mE.protocol&&this.mE.port===n._E[this.mE.protocol]&&(this.mE.port=null,this.sp(!e)),this},y.$T=function(e){var t=this.mE.path;if(!t)return this;if(this.mE.urn)return this.mE.path=n.ET(this.mE.path),this.sp(!e),this;if("/"===this.mE.path)return this;t=n.mT(t);var r,i,s,o="";for("/"!==t.charAt(0)&&(r=!0,t="/"+t),"/.."!==t.slice(-3)&&"/."!==t.slice(-2)||(t+="/"),t=t.replace(/(\/(\.\/)+)|(\/\.$)/g,"/").replace(/\/{2,}/g,"/"),r&&(o=t.substring(1).match(/^(\.\.\/)+/)||"")&&(o=o[0]);;){if(-1===(i=t.search(/\/\.\.(\/|$)/)))break;0!==i?(s=t.substring(0,i).lastIndexOf("/"),-1===s&&(s=i),t=t.substring(0,s)+t.substring(i+3)):t=t.substring(3)}return r&&this.is("relative")&&(t=o+t.substring(1)),this.mE.path=t,this.sp(!e),this},y.pI=y.$T,y.aI=function(e){return"string"==typeof this.mE.dn&&(this.mE.dn.length?this.dn(n.RT(this.mE.dn,this.mE.wE)):this.mE.dn=null,this.sp(!e)),this},y.oI=function(e){return this.mE.TE||(this.mE.TE=null,this.sp(!e)),this},y.fI=y.aI,y.dI=y.oI,y.JE=function(){var e=n.encode,t=n.decode;n.encode=escape,n.decode=decodeURIComponent;try{this.normalize()}finally{n.encode=e,n.decode=t}return this},y.WE=function(){var e=n.encode,t=n.decode;n.encode=f,n.decode=unescape;try{this.normalize()}finally{n.encode=e,n.decode=t}return this},y.gI=function(){var t=this.clone();t.username("").password("").normalize();var r="";if(t.mE.protocol&&(r+=t.mE.protocol+"://"),t.mE.hostname&&(t.is("punycode")&&e?(r+=e.vI(t.mE.hostname),t.mE.port&&(r+=":"+t.mE.port)):r+=t.host()),t.mE.hostname&&t.mE.path&&"/"!==t.mE.path.charAt(0)&&(r+="/"),r+=t.path(!0),t.mE.dn){for(var i="",s=0,o=t.mE.dn.split("&"),a=o.length;s<a;s++){var h=(o[s]||"").split("=");i+="&"+n.gT(h[0],this.mE.wE).replace(/&/g,"%26"),void 0!==h[1]&&(i+="="+n.gT(h[1],this.mE.wE).replace(/&/g,"%26"))}r+="?"+i.substring(1)}return r+=n.gT(t.hash(),!0)},y.Bi=function(e){var t,r,i,s=this.clone(),o=["protocol","username","password","hostname","port"];if(this.mE.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(e instanceof n||(e=new n(e)),s.mE.protocol)return s;if(s.mE.protocol=e.mE.protocol,this.mE.hostname)return s;for(r=0;i=o[r];r++)s.mE[i]=e.mE[i];return s.mE.path?(".."===s.mE.path.substring(-2)&&(s.mE.path+="/"),"/"!==s.path().charAt(0)&&(t=e.XT(),t=t||(0===e.path().indexOf("/")?"/":""),s.mE.path=(t?t+"/":"")+s.mE.path,s.$T())):(s.mE.path=e.mE.path,s.mE.dn||(s.mE.dn=e.mE.dn)),s.sp(),s},y.yI=function(e){var t,r,i,s,o,a=this.clone().normalize();if(a.mE.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(e=new n(e).normalize(),t=a.mE,r=e.mE,s=a.path(),o=e.path(),"/"!==s.charAt(0))throw new Error("URI is already relative");if("/"!==o.charAt(0))throw new Error("Cannot calculate a URI relative to another relative URI");if(t.protocol===r.protocol&&(t.protocol=null),t.username!==r.username||t.password!==r.password)return a.sp();if(null!==t.protocol||null!==t.username||null!==t.password)return a.sp();if(t.hostname!==r.hostname||t.port!==r.port)return a.sp();if(t.hostname=null,t.port=null,s===o)return t.path="",a.sp();if(!(i=n.LT(s,o)))return a.sp();var h=r.path.substring(i.length).replace(/[^\/]*$/,"").replace(/.*?\//g,"../");return t.path=h+t.path.substring(i.length)||"./",a.sp()},y.ae=function(e){var t,r,i,s=this.clone(),o=new n(e),h={},c={},l={};if(s.normalize(),o.normalize(),s.toString()===o.toString())return!0;if(t=s.dn(),r=o.dn(),s.dn(""),o.dn(""),s.toString()!==o.toString())return!1;if(t.length!==r.length)return!1;h=n.RT(t,this.mE.wE),c=n.RT(r,this.mE.wE);for(i in h)if(m.call(h,i)){if(a(h[i])){if(!u(h[i],c[i]))return!1}else if(h[i]!==c[i])return!1;l[i]=!0}for(i in c)if(m.call(c,i)&&!l[i])return!1;return!0},y.IE=function(e){return this.mE.IE=!!e,this},y.wE=function(e){return this.mE.wE=!!e,this},n})},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(68),s=r(66),o=function(e){function t(r){var i=e.call(this,r)||this;return i.DONE=4,i.LOADING=3,i.HEADERS_RECEIVED=2,i.OPENED=1,i.UNSENT=0,i.mI=!1,i.id=t.Ul++,i}return i(t,e),t.prototype.send=function(){if(this.readyState!==this.OPENED)throw new Error("The object's state must be OPENED.");if(!this.sessionId){var e=Object.keys(t.EI);e.length>0&&(this.sessionId=t.EI[e[0]])}n.wI.II().TI(this,this.sessionId)},t.prototype.abort=function(){n.wI.II().abort(this,this.sessionId)},t}(s.SI);o.EI={},o.Ul=0,t.HiveRequest=o},function(e,t,r){"use strict";var i=r(0),n=r(9),s=r(5),o=s.Rt.wi,a=function(){function e(){}return e.Reporting=function(){return e.app="STATS",i.Framework.resolve(n.Qs.qs)},e.Jc=function(){return this.app},e.getVersion=function(){return this.version},e}();a.version=o,t.Hive=a},function(module,exports,__webpack_require__){var Thrift={RI:"0.9.2",bI:{AI:0,CI:1,BOOL:2,BYTE:3,kI:3,OI:4,_I:6,NI:8,DI:10,FI:11,LI:11,MI:12,BI:13,UI:14,xI:15,HI:16,qI:17},VI:{jI:1,GI:2,QI:3,KI:4},YI:function(e){var t=0;for(var r in e)e.hasOwnProperty(r)&&t++;return t},zI:function(e,t,r){function i(){}i.prototype=t.prototype,e.prototype=new i,e.prototype.name=r||""}};Thrift.JI=function(e){this.message=e},Thrift.zI(Thrift.JI,Error,"TException"),Thrift.JI.prototype.WI=function(){return this.message},Thrift.XI={ZI:0,$I:1,ew:2,tw:3,rw:4,iw:5,nw:6,sw:7,ow:8,aw:9,hw:10},Thrift.cw=function(e,t){this.message=e,this.code="number"==typeof t?t:0},Thrift.zI(Thrift.cw,Thrift.JI,"TApplicationException"),Thrift.cw.prototype.read=function(e){for(;;){var t=e.uw();if(t.lw==Thrift.bI.AI)break;switch(t.pw){case 1:t.lw==Thrift.bI.FI?(t=e.fw(),this.message=t.value):t=e.dw(t.lw);break;case 2:t.lw==Thrift.bI.NI?(t=e.gw(),this.code=t.value):t=e.dw(t.lw);break;default:t=e.dw(t.lw)}e.vw()}e.yw()},Thrift.cw.prototype.write=function(e){e.mw("TApplicationException"),this.message&&(e.Ew("message",Thrift.bI.FI,1),e.Tw(this.WI()),e.Iw()),this.code&&(e.Ew("type",Thrift.bI.NI,2),e.ww(this.code),e.Iw()),e.Sw(),e.Rw()},Thrift.cw.prototype.bw=function(){return this.code},Thrift.Mr=Thrift.Pw=function(e,t){this.url=e,this.Aw=0,this.Cw=0,this.kw=t&&t.kw,this.Ow="",this._w=""},Thrift.Pw.prototype={Nw:function(){try{return new XMLHttpRequest}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}throw"Your browser doesn't support XHR."},flush:function(e,t){var r=this;if(e&&!t||void 0===this.url||""===this.url)return this.Ow;var i=this.Nw();if(i.overrideMimeType&&i.overrideMimeType("application/json"),t&&(i.onreadystatechange=function(){var e=t;return function(){4==this.readyState&&200==this.status&&(r.Dw(this.responseText),e())}}()),i.open("POST",this.url,!!e),i.send(this.Ow),!e||!t){if(4!=i.readyState)throw"encountered an unknown ajax ready state: "+i.readyState;if(200!=i.status)throw"encountered a unknown request status: "+i.status;this._w=i.responseText,this.Fw=this._w.length,this.Aw=this._w.length,this.Cw=0}},Lw:function(e,t,r,i){if("undefined"==typeof jQuery||void 0===jQuery.Mw)throw"Thrift.js requires jQuery 1.5+ to use asynchronous requests";var n=this;return jQuery.Bw({url:this.url,data:t,type:"POST",Uw:!1,contentType:"application/json",xw:"text thrift",Hw:{qw:function(t){return n.Dw(t),i.call(e)}},context:e,success:jQuery.Vw(r).pop()})},Dw:function(e){this._w=e,this.Fw=this._w.length,this.Aw=this._w.length,this.Cw=0},isOpen:function(){return!0},open:function(){},close:function(){},read:function(e){var t=this.Aw-this.Cw;if(0===t)return"";var r=e;t<e&&(r=t);var i=this.jw.substr(this.Cw,r);return this.Cw+=r,i},Gw:function(){return this._w},write:function(e){this.Ow=e},Qw:function(){return this.Ow}},Thrift.Kw=function(e){this.Yw(e)},Thrift.Kw.prototype={Yw:function(e){this.url=e,this.zw=null,this.callbacks=[],this.Jw=[],this.Ow="",this._w="",this.Ww=0,this.Xw=0},flush:function(e,t){var r=this;this.isOpen()?(this.zw.send(this.Ow),this.callbacks.push(function(){var e=t;return function(t){r.Dw(t),e()}}())):this.Jw.push({Zw:this.Ow,$w:t})},eS:function(){var e=this;this.Jw.length>0&&(this.Jw.forEach(function(t){this.zw.send(t.Zw),this.callbacks.push(function(){var r=t.$w;return function(t){e.Dw(t),r()}}())}),this.Jw=[])},tS:function(e){this.Yw(this.url)},rS:function(e){this.callbacks.length&&this.callbacks.shift()(e.data)},iS:function(e){console.log("Thrift WebSocket Error: "+e.toString()),this.zw.close()},Dw:function(e){this._w=e,this.Fw=this._w.length,this.Aw=this._w.length,this.Cw=0},isOpen:function(){return this.zw&&this.zw.readyState==this.zw.OPEN},open:function(){this.zw&&this.zw.readyState!=this.zw.CLOSED||(this.zw=new WebSocket(this.url),this.zw.onopen=this.eS.bind(this),this.zw.onmessage=this.rS.bind(this),this.zw.onerror=this.iS.bind(this),this.zw.onclose=this.tS.bind(this))},close:function(){this.zw.close()},read:function(e){var t=this.Aw-this.Cw;if(0===t)return"";var r=e;t<e&&(r=t);var i=this.jw.substr(this.Cw,r);return this.Cw+=r,i},Gw:function(){return this._w},write:function(e){this.Ow=e},Qw:function(){return this.Ow}},Thrift.nS=Thrift.sS=function(e){this.Pl=e},Thrift.sS.bI={},Thrift.sS.bI[Thrift.bI.BOOL]='"tf"',Thrift.sS.bI[Thrift.bI.BYTE]='"i8"',Thrift.sS.bI[Thrift.bI._I]='"i16"',Thrift.sS.bI[Thrift.bI.NI]='"i32"',Thrift.sS.bI[Thrift.bI.DI]='"i64"',Thrift.sS.bI[Thrift.bI.OI]='"dbl"',Thrift.sS.bI[Thrift.bI.MI]='"rec"',Thrift.sS.bI[Thrift.bI.FI]='"str"',Thrift.sS.bI[Thrift.bI.BI]='"map"',Thrift.sS.bI[Thrift.bI.xI]='"lst"',Thrift.sS.bI[Thrift.bI.UI]='"set"',Thrift.sS.oS={},Thrift.sS.oS.aS=Thrift.bI.BOOL,Thrift.sS.oS.hS=Thrift.bI.BYTE,Thrift.sS.oS.cS=Thrift.bI._I,Thrift.sS.oS.uS=Thrift.bI.NI,Thrift.sS.oS.lS=Thrift.bI.DI,Thrift.sS.oS.pS=Thrift.bI.OI,Thrift.sS.oS.fS=Thrift.bI.MI,Thrift.sS.oS.Lg=Thrift.bI.FI,Thrift.sS.oS.map=Thrift.bI.BI,Thrift.sS.oS.dS=Thrift.bI.xI,Thrift.sS.oS.set=Thrift.bI.UI,Thrift.sS.RI=1,Thrift.sS.prototype={gS:function(){return this.Pl},vS:function(e,t,r){this.yS=[],this.mS=[],this.yS.push([Thrift.sS.RI,'"'+e+'"',t,r])},ES:function(){var e=this.yS.pop();this.TS=this.yS.pop(),this.TS.push(e),this.IS="["+this.TS.join(",")+"]",this.Pl.write(this.IS)},mw:function(e){this.mS.push(this.yS.length),this.yS.push({})},Rw:function(){var e=this.mS.pop(),t=this.yS[e],r="{",i=!0;for(var n in t)i?i=!1:r+=",",r+=n+":"+t[n];r+="}",this.yS[e]=r},Ew:function(e,t,r){this.mS.push(this.yS.length),this.yS.push({wS:'"'+r+'"',SS:Thrift.sS.bI[t]})},Iw:function(){var e=this.yS.pop(),t=this.yS.pop();this.yS[this.yS.length-1][t.wS]="{"+t.SS+":"+e+"}",this.mS.pop()},Sw:function(){},RS:function(e,t,r){this.mS.push(this.yS.length),this.yS.push([Thrift.sS.bI[e],Thrift.sS.bI[t],0])},bS:function(){var e=this.mS.pop();if(e!=this.yS.length){(this.yS.length-e-1)%2!=0&&this.yS.push("");var t=(this.yS.length-e-1)/2;this.yS[e][this.yS[e].length-1]=t;for(var r="}",i=!0;this.yS.length>e+1;){var n=this.yS.pop(),s=this.yS.pop();i?i=!1:r=","+r,isNaN(s)||(s='"'+s+'"'),r=s+":"+n+r}r="{"+r,this.yS[e].push(r),this.yS[e]="["+this.yS[e].join(",")+"]"}},PS:function(e,t){this.mS.push(this.yS.length),this.yS.push([Thrift.sS.bI[e],t])},CS:function(){for(var e=this.mS.pop();this.yS.length>e+1;){var t=this.yS[e+1];this.yS.splice(e+1,1),this.yS[e].push(t)}this.yS[e]="["+this.yS[e].join(",")+"]"},kS:function(e,t){this.mS.push(this.yS.length),this.yS.push([Thrift.sS.bI[e],t])},OS:function(){for(var e=this.mS.pop();this.yS.length>e+1;){var t=this.yS[e+1];this.yS.splice(e+1,1),this.yS[e].push(t)}this.yS[e]="["+this.yS[e].join(",")+"]"},_S:function(e){this.yS.push(e?1:0)},NS:function(e){this.yS.push(e)},DS:function(e){this.yS.push(e)},ww:function(e){this.yS.push(e)},FS:function(e){this.yS.push(e)},LS:function(e){this.yS.push(e)},Tw:function(e){if(null===e)this.yS.push(null);else{for(var t="",r=0;r<e.length;r++){var i=e.charAt(r);t+='"'===i?'\\"':"\\"===i?"\\\\":"\b"===i?"\\b":"\f"===i?"\\f":"\n"===i?"\\n":"\r"===i?"\\r":"\t"===i?"\\t":i}this.yS.push('"'+t+'"')}},MS:function(e){this.Tw(e)},BS:function(){this.US=[],this.Cw=[],"undefined"!=typeof JSON&&"function"==typeof JSON.parse?this.xS=JSON.parse(this.Pl.Gw()):"undefined"!=typeof jQuery?this.xS=jQuery.HS(this.Pl.Gw()):this.xS=eval(this.Pl.Gw());var r={},version=this.xS.shift();if(version!=Thrift.sS.RI)throw"Wrong thrift protocol version: "+version;return r.qS=this.xS.shift(),r.VS=this.xS.shift(),r.jS=this.xS.shift(),this.US.push(this.xS.shift()),r},GS:function(){},QS:function(e){var t={};return t.qS="",this.US[this.US.length-1]instanceof Array&&this.US.push(this.US[this.US.length-1].shift()),t},yw:function(){this.US[this.US.length-2]instanceof Array&&this.US.pop()},uw:function(){var e={},t=-1,r=Thrift.bI.AI;for(var i in this.US[this.US.length-1])if(null!==i){t=parseInt(i,10),this.Cw.push(this.US.length);var n=this.US[this.US.length-1][t];delete this.US[this.US.length-1][t],this.US.push(n);break}if(-1!=t)for(var s in this.US[this.US.length-1])null!==Thrift.sS.oS[s]&&(r=Thrift.sS.oS[s],this.US[this.US.length-1]=this.US[this.US.length-1][s]);return e.qS="",e.lw=r,e.pw=t,e},vw:function(){for(var e=this.Cw.pop();this.US.length>e;)this.US.pop()},KS:function(){var e=this.US.pop(),t=e.shift();t instanceof Array&&(this.US.push(e),e=t,t=e.shift());var r={};return r.YS=Thrift.sS.oS[t],r.zS=Thrift.sS.oS[e.shift()],r.size=e.shift(),this.Cw.push(this.US.length),this.US.push(e.shift()),r},JS:function(){this.vw()},WS:function(){var e=this.US[this.US.length-1],t={};return t.XS=Thrift.sS.oS[e.shift()],t.size=e.shift(),this.Cw.push(this.US.length),this.US.push(e),t},ZS:function(){this.vw()},$S:function(e,t){return this.WS(e,t)},eR:function(){return this.ZS()},tR:function(){var e=this.gw();return null!==e&&"1"==e.value?e.value=!0:e.value=!1,e},rR:function(){return this.gw()},iR:function(){return this.gw()},gw:function(e){void 0===e&&(e=this.US[this.US.length-1]);var t={};if(e instanceof Array)0===e.length?t.value=void 0:t.value=e.shift();else if(e instanceof Object){for(var r in e)if(null!==r){this.US.push(e[r]),delete e[r],t.value=r;break}}else t.value=e,this.US.pop();return t},nR:function(){return this.gw()},sR:function(){return this.gw()},fw:function(){return this.gw()},oR:function(){return this.fw()},dw:function(e){var t,r;switch(e){case Thrift.bI.AI:return null;case Thrift.bI.BOOL:return this.tR();case Thrift.bI.BYTE:return this.rR();case Thrift.bI._I:return this.iR();case Thrift.bI.NI:return this.gw();case Thrift.bI.DI:return this.nR();case Thrift.bI.OI:return this.sR();case Thrift.bI.FI:return this.fw();case Thrift.bI.MI:for(this.QS();;){if(t=this.uw(),t.lw==Thrift.bI.AI)break;this.dw(t.lw),this.vw()}return this.yw(),null;case Thrift.bI.BI:for(t=this.KS(),r=0;r<t.size;r++)r>0&&this.US.length>this.Cw[this.Cw.length-1]+1&&this.US.pop(),this.dw(t.YS),this.dw(t.zS);return this.JS(),null;case Thrift.bI.UI:for(t=this.$S(),r=0;r<t.size;r++)this.dw(t.XS);return this.eR(),null;case Thrift.bI.xI:for(t=this.WS(),r=0;r<t.size;r++)this.dw(t.XS);return this.ZS(),null}}},Thrift.aR=function(e,t,r,i){Thrift.sS.call(this,t,r,i),this.hR=e},Thrift.zI(Thrift.aR,Thrift.sS,"multiplexProtocol"),Thrift.aR.prototype.vS=function(e,t,r){t===Thrift.VI.jI||t===Thrift.VI.KI?Thrift.sS.prototype.vS.call(this,this.hR+":"+e,t,r):Thrift.sS.prototype.vS.call(this,e,t,r)},Thrift.cR=function(){this.uR=0},Thrift.cR.prototype.lR=function(e,t,r){t.vc&&(t=t.vc);var i=this;return t.prototype.pR=function(){return i.uR+=1,i.uR},new t(new Thrift.aR(e,r))},module.t=Thrift},function(e,t,r){"use strict";var i=r(10),n=r(25),s=n.sl,o=function(){function e(e,t,r,i,n,o,a,h){this.fR=h,this.url=e,this.dR=r,this.gR=t,this.vR=i,this.duration=n,this.bitrate=o,this.yR=a;var c=(this.fR?this.fR:this.url).replace(/http(s)?:\/\//,""),u=s.Vd(c).toString(s.Ed.Td);this.mR=u+"-"+this.vR+"-"+this.bitrate}return e.prototype.Yu=function(){return this.gR},e.prototype.ER=function(){return this.vR},e.prototype.TR=function(){return this.duration},e.prototype.IR=function(){return this.bitrate},e.prototype.$u=function(){return this.yR},e.prototype.wR=function(){return this.dR},e.prototype.zu=function(){return this.mR},e.prototype.Xu=function(){return this.url},e.prototype.toString=function(){return i.Ws[this.Yu()]+"-"+this.zu()},e}();t.SR=o},function(e,t,r){(function(e){var n,s;/**
 * @license ByteBuffer.js (c) 2013-2014 Daniel Wirtz <dcode@dcode.io>
 * This version of ByteBuffer.js uses an ArrayBuffer as its backing buffer which is accessed through a DataView and is
 * compatible with modern browsers.
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/ByteBuffer.js for details
 */
!function(o){"use strict";function a(e){function t(e){var t=0;return function(){return t<e.length?e.charCodeAt(t++):null}}function r(){var e=[],t=[];return function(){if(0===arguments.length)return t.join("")+a.apply(String,e);e.length+arguments.length>1024&&(t.push(a.apply(String,e)),e.length=0),Array.prototype.push.apply(e,arguments)}}var n=function(e,t,r){if(void 0===e&&(e=n.RR),void 0===t&&(t=n.bR),void 0===r&&(r=n.PR),!r){if((e|=0)<0)throw RangeError("Illegal capacity");t=!!t,r=!!r}this.buffer=0===e?o:new ArrayBuffer(e),this.view=0===e?null:new DataView(this.buffer),this.offset=0,this.AR=-1,this.CR=e,this.kR=void 0!==t&&!!t,this.OR=!!r};n.VERSION="3.5.5",n._R=!0,n.NR=!1,n.RR=16,n.bR=n.NR,n.PR=!1,n.DR=e||null;var s=n.prototype,o=new ArrayBuffer(0),a=String.fromCharCode;n.FR=function(e,t,r){return new n(e,t,r)},n.concat=function(e,t,r,i){"boolean"!=typeof t&&"string"==typeof t||(i=r,r=t,t=void 0);for(var s,o=0,a=0,h=e.length;a<h;++a)n.LR(e[a])||(e[a]=n.wrap(e[a],t)),(s=e[a].CR-e[a].offset)>0&&(o+=s);if(0===o)return new n(0,r,i);var c,u=new n(o,r,i),l=new Uint8Array(u.buffer);for(a=0;a<h;)c=e[a++],(s=c.CR-c.offset)<=0||(l.set(new Uint8Array(c.buffer).subarray(c.offset,c.CR),u.offset),u.offset+=s);return u.CR=u.offset,u.offset=0,u},n.LR=function(e){return!0===(e&&e instanceof n)},n.type=function(){return ArrayBuffer},n.wrap=function(e,t,r,o){if("string"!=typeof t&&(o=r,r=t,t=void 0),"string"==typeof e)switch(void 0===t&&(t="utf8"),t){case"base64":return n.MR(e,r);case"hex":return n.BR(e,r);case"binary":return n.UR(e,r);case"utf8":return n.xR(e,r);case"debug":return n.HR(e,r);default:throw Error("Unsupported encoding: "+t)}if(null===e||"object"!=typeof e)throw TypeError("Illegal buffer");var a;if(n.LR(e))return a=s.clone.call(e),a.AR=-1,a;if(e instanceof Uint8Array)a=new n(0,r,o),e.length>0&&(a.buffer=e.buffer,a.offset=e.byteOffset,a.CR=e.byteOffset+e.length,a.view=e.length>0?new DataView(e.buffer):null);else if(e instanceof ArrayBuffer)a=new n(0,r,o),e.byteLength>0&&(a.buffer=e,a.offset=0,a.CR=e.byteLength,a.view=e.byteLength>0?new DataView(e):null);else{if("[object Array]"!==Object.prototype.toString.call(e))throw TypeError("Illegal buffer");for(a=new n(e.length,r,o),a.CR=e.length,i=0;i<e.length;++i)a.view.setUint8(i,e[i])}return a},s.qR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=1,this.view.setInt8(t,e),r&&(this.offset+=1),this},s.NS=s.qR,s.VR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view.getInt8(e);return t&&(this.offset+=1),r},s.rR=s.VR,s.jR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=1,this.view.setUint8(t,e),r&&(this.offset+=1),this},s.GR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view.getUint8(e);return t&&(this.offset+=1),r},s.QR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=2,this.view.setInt16(t,e,this.kR),r&&(this.offset+=2),this},s.KR=s.QR,s.YR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=this.view.getInt16(e,this.kR);return t&&(this.offset+=2),r},s.zR=s.YR,s.JR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=2,this.view.setUint16(t,e,this.kR),r&&(this.offset+=2),this},s.WR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=this.view.getUint16(e,this.kR);return t&&(this.offset+=2),r},s.XR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setInt32(t,e,this.kR),r&&(this.offset+=4),this},s.Yl=s.XR,s.ZR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getInt32(e,this.kR);return t&&(this.offset+=4),r},s.$l=s.ZR,s.$R=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setUint32(t,e,this.kR),r&&(this.offset+=4),this},s.eb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getUint32(e,this.kR);return t&&(this.offset+=4),r},e&&(s.tb=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"==typeof t)t=e.dp(t);else if("string"==typeof t)t=e.gp(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.dp(t):"string"==typeof t&&(t=e.gp(t)),r+=8;var n=this.buffer.byteLength;return r>n&&this.resize((n*=2)>r?n:r),r-=8,this.kR?(this.view.setInt32(r,t.low,!0),this.view.setInt32(r+4,t.high,!0)):(this.view.setInt32(r,t.high,!1),this.view.setInt32(r+4,t.low,!1)),i&&(this.offset+=8),this},s.rb=s.tb,s.ib=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+8) <= "+this.buffer.byteLength)}var i=this.kR?new e(this.view.getInt32(t,!0),this.view.getInt32(t+4,!0),!1):new e(this.view.getInt32(t+4,!1),this.view.getInt32(t,!1),!1);return r&&(this.offset+=8),i},s.nb=s.ib,s.sb=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"==typeof t)t=e.dp(t);else if("string"==typeof t)t=e.gp(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.dp(t):"string"==typeof t&&(t=e.gp(t)),r+=8;var n=this.buffer.byteLength;return r>n&&this.resize((n*=2)>r?n:r),r-=8,this.kR?(this.view.setInt32(r,t.low,!0),this.view.setInt32(r+4,t.high,!0)):(this.view.setInt32(r,t.high,!1),this.view.setInt32(r+4,t.low,!1)),i&&(this.offset+=8),this},s.ob=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+8) <= "+this.buffer.byteLength)}var i=this.kR?new e(this.view.getInt32(t,!0),this.view.getInt32(t+4,!0),!0):new e(this.view.getInt32(t+4,!1),this.view.getInt32(t,!1),!0);return r&&(this.offset+=8),i}),s.ab=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setFloat32(t,e,this.kR),r&&(this.offset+=4),this},s.hb=s.ab,s.cb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getFloat32(e,this.kR);return t&&(this.offset+=4),r},s.ub=s.cb,s.lb=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=8;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=8,this.view.setFloat64(t,e,this.kR),r&&(this.offset+=8),this},s.LS=s.lb,s.pb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+8) <= "+this.buffer.byteLength)}var r=this.view.getFloat64(e,this.kR);return t&&(this.offset+=8),r},s.sR=s.pb,n.fb=5,n.gb=function(e){return e>>>=0,e<128?1:e<16384?2:e<1<<21?3:e<1<<28?4:5},n.vb=function(e){return((e|=0)<<1^e>>31)>>>0},n.yb=function(e){return e>>>1^-(1&e)|0},s.mb=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}var i,s=n.gb(e);t+=s;var o=this.buffer.byteLength;return t>o&&this.resize((o*=2)>t?o:t),t-=s,this.view.setUint8(t,i=128|e),e>>>=0,e>=128?(i=e>>7|128,this.view.setUint8(t+1,i),e>=16384?(i=e>>14|128,this.view.setUint8(t+2,i),e>=1<<21?(i=e>>21|128,this.view.setUint8(t+3,i),e>=1<<28?(this.view.setUint8(t+4,e>>28&15),s=5):(this.view.setUint8(t+3,127&i),s=4)):(this.view.setUint8(t+2,127&i),s=3)):(this.view.setUint8(t+1,127&i),s=2)):(this.view.setUint8(t,127&i),s=1),r?(this.offset+=s,this):s},s.Eb=function(e,t){return this.mb(n.vb(e),t)},s.Tb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r,i,n=0,s=0;do{if(i=e+n,!this.OR&&i>this.CR){var o=Error("Truncated");throw o.Ib=!0,o}r=this.view.getUint8(i),n<5&&(s|=(127&r)<<7*n>>>0),++n}while(128==(128&r));return s|=0,t?(this.offset+=n,s):{value:s,length:n}},s.wb=function(e){var t=this.Tb(e);return"object"==typeof t?t.value=n.yb(t.value):t=n.yb(t),t},e&&(n.Sb=10,n.Rb=function(t){"number"==typeof t?t=e.dp(t):"string"==typeof t&&(t=e.gp(t));var r=t.bb()>>>0,i=t.Pb(28).bb()>>>0,n=t.Pb(56).bb()>>>0;return 0==n?0==i?r<16384?r<128?1:2:r<1<<21?3:4:i<16384?i<128?5:6:i<1<<21?7:8:n<128?9:10},n.Ab=function(t){return"number"==typeof t?t=e.dp(t,!1):"string"==typeof t?t=e.gp(t,!1):!1!==t.Cb&&(t=t.kb()),t.shiftLeft(1).zd(t._b(63)).Ob()},n.Nb=function(t){return"number"==typeof t?t=e.dp(t,!1):"string"==typeof t?t=e.gp(t,!1):!1!==t.Cb&&(t=t.kb()),t.Pb(1).zd(t.Db(e.ONE).kb().Rp()).kb()},s.Fb=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"==typeof t)t=e.dp(t);else if("string"==typeof t)t=e.gp(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.dp(t,!1):"string"==typeof t?t=e.gp(t,!1):!1!==t.Cb&&(t=t.kb());var s=n.Rb(t),o=t.bb()>>>0,a=t.Pb(28).bb()>>>0,h=t.Pb(56).bb()>>>0;r+=s;var c=this.buffer.byteLength;switch(r>c&&this.resize((c*=2)>r?c:r),r-=s,s){case 10:this.view.setUint8(r+9,h>>>7&1);case 9:this.view.setUint8(r+8,9!==s?128|h:127&h);case 8:this.view.setUint8(r+7,8!==s?a>>>21|128:a>>>21&127);case 7:this.view.setUint8(r+6,7!==s?a>>>14|128:a>>>14&127);case 6:this.view.setUint8(r+5,6!==s?a>>>7|128:a>>>7&127);case 5:this.view.setUint8(r+4,5!==s?128|a:127&a);case 4:this.view.setUint8(r+3,4!==s?o>>>21|128:o>>>21&127);case 3:this.view.setUint8(r+2,3!==s?o>>>14|128:o>>>14&127);case 2:this.view.setUint8(r+1,2!==s?o>>>7|128:o>>>7&127);case 1:this.view.setUint8(r,1!==s?128|o:127&o)}return i?(this.offset+=s,this):s},s.Lb=function(e,t){return this.Fb(n.Ab(e),t)},s.Mb=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+1) <= "+this.buffer.byteLength)}var i=t,n=0,s=0,o=0,a=0;if(a=this.view.getUint8(t++),n=127&a,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<7,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<14,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<21,128&a&&(a=this.view.getUint8(t++),s=127&a,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<7,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<14,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<21,128&a&&(a=this.view.getUint8(t++),o=127&a,128&a&&(a=this.view.getUint8(t++),o|=(127&a)<<7,128&a))))))))))throw Error("Buffer overrun");var h=e.Ay(n|s<<28,s>>>4|o<<24,!1);return r?(this.offset=t,h):{value:h,length:t-i}},s.Bb=function(t){var r=this.Mb(t);return r&&r.value instanceof e?r.value=n.Nb(r.value):r=n.Nb(r),r}),s.zl=function(e,r){var i=void 0===r;i&&(r=this.offset);var n,s=e.length;if(!this.OR){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");for(n=0;n<s;++n)if(0===e.charCodeAt(n))throw RangeError("Illegal str: Contains NULL-characters");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}s=c.Ub(t(e))[1],r+=s+1;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=s+1,c.xb(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),this.view.setUint8(r++,0),i?(this.offset=r,this):s},s.tp=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var i,n=e,s=-1;return c.Hb(function(){if(0===s)return null;if(e>=this.CR)throw RangeError("Illegal range: Truncated data, "+e+" < "+this.CR);return 0===(s=this.view.getUint8(e++))?null:s}.bind(this),i=r(),!0),t?(this.offset=e,i()):{qb:i(),length:e-n}},s.Vb=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var n,s=r;n=c.Ub(t(e),this.OR)[1],r+=4+n;var o=this.buffer.byteLength;if(r>o&&this.resize((o*=2)>r?o:r),r-=4+n,this.view.setUint32(r,n,this.kR),r+=4,c.xb(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),r!==s+4+n)throw RangeError("Illegal range: Truncated data, "+r+" == "+(r+4+n));return i?(this.offset=r,this):r-s},s.jb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var i,n=0,s=e;n=this.view.getUint32(e,this.kR),e+=4;var o,a=e+n;return c.Hb(function(){return e<a?this.view.getUint8(e++):null}.bind(this),o=r(),this.OR),i=o(),t?(this.offset=e,i):{qb:i,length:e-s}},n.Gb="c",n.Qb="b",s.Kb=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var n,s=r;n=c.Ub(t(e))[1],r+=n;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=n,c.xb(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),i?(this.offset=r,this):r-s},s.Tw=s.Kb,n.Yb=function(e){return c.Ub(t(e))[0]},n.zb=function(e){return c.Ub(t(e))[1]},s.Jb=function(e,t,i){"number"==typeof t&&(i=t,t=void 0);var s=void 0===i;if(s&&(i=this.offset),void 0===t&&(t=n.Gb),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal length: "+e+" (not an integer)");if(e|=0,"number"!=typeof i||i%1!=0)throw TypeError("Illegal offset: "+i+" (not an integer)");if((i>>>=0)<0||i+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+i+" (+0) <= "+this.buffer.byteLength)}var o,a=0,h=i;if(t===n.Gb){if(o=r(),c.Wb(function(){return a<e&&i<this.CR?this.view.getUint8(i++):null}.bind(this),function(e){++a,c.Xb(e,o)}.bind(this)),a!==e)throw RangeError("Illegal range: Truncated data, "+a+" == "+e);return s?(this.offset=i,o()):{qb:o(),length:i-h}}if(t===n.Qb){if(!this.OR){if("number"!=typeof i||i%1!=0)throw TypeError("Illegal offset: "+i+" (not an integer)");if((i>>>=0)<0||i+e>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+i+" (+"+e+") <= "+this.buffer.byteLength)}var u=i+e;if(c.Hb(function(){return i<u?this.view.getUint8(i++):null}.bind(this),o=r(),this.OR),i!==u)throw RangeError("Illegal range: Truncated data, "+i+" == "+u);return s?(this.offset=i,o()):{qb:o(),length:i-h}}throw TypeError("Unsupported metrics: "+t)},s.fw=s.Jb,s.Zb=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var s,o,a=r;s=c.Ub(t(e),this.OR)[1],o=n.gb(s),r+=o+s;var h=this.buffer.byteLength;if(r>h&&this.resize((h*=2)>r?h:r),r-=o+s,r+=this.mb(s,r),c.xb(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),r!==a+s+o)throw RangeError("Illegal range: Truncated data, "+r+" == "+(r+s+o));return i?(this.offset=r,this):r-a},s.$b=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var i,n=this.Tb(e),s=e;e+=n.length,n=n.value;var o=e+n,a=r();return c.Hb(function(){return e<o?this.view.getUint8(e++):null}.bind(this),a,this.OR),i=a(),t?(this.offset=e,i):{qb:i,length:e-s}},s.append=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof n||(e=n.wrap(e,t));var s=e.CR-e.offset;if(s<=0)return this;r+=s;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=s,new Uint8Array(this.buffer,r).set(new Uint8Array(e.buffer).subarray(e.offset,e.CR)),e.offset+=s,i&&(this.offset+=s),this},s.eP=function(e,t){return e.append(this,t),this},s.assert=function(e){return this.OR=!e,this},s.tP=function(){return this.buffer.byteLength},s.clear=function(){return this.offset=0,this.CR=this.buffer.byteLength,this.AR=-1,this},s.clone=function(e){var t=new n(0,this.kR,this.OR);if(e){var r=new ArrayBuffer(this.buffer.byteLength);new Uint8Array(r).set(this.buffer),t.buffer=r,t.view=new DataView(r)}else t.buffer=this.buffer,t.view=this.view;return t.offset=this.offset,t.AR=this.AR,t.CR=this.CR,t},s.compact=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(0===e&&t===this.buffer.byteLength)return this;var r=t-e;if(0===r)return this.buffer=o,this.view=null,this.AR>=0&&(this.AR-=e),this.offset=0,this.CR=0,this;var i=new ArrayBuffer(r);return new Uint8Array(i).set(new Uint8Array(this.buffer).subarray(e,t)),this.buffer=i,this.view=new DataView(i),this.AR>=0&&(this.AR-=e),this.offset=0,this.CR=r,this},s.rP=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(e===t)return new n(0,this.kR,this.OR);var r=t-e,i=new n(r,this.kR,this.OR);return i.offset=0,i.CR=r,i.AR>=0&&(i.AR-=e),this.Ap(i,0,e,t),i},s.Ap=function(e,t,r,i){var s,o;if(!this.OR&&!n.LR(e))throw TypeError("Illegal target: Not a ByteBuffer");if(t=(o=void 0===t)?e.offset:0|t,r=(s=void 0===r)?this.offset:0|r,i=void 0===i?this.CR:0|i,t<0||t>e.buffer.byteLength)throw RangeError("Illegal target range: 0 <= "+t+" <= "+e.buffer.byteLength);if(r<0||i>this.buffer.byteLength)throw RangeError("Illegal source range: 0 <= "+r+" <= "+this.buffer.byteLength);var a=i-r;return 0===a?e:(e.iP(t+a),new Uint8Array(e.buffer).set(new Uint8Array(this.buffer).subarray(r,i),t),s&&(this.offset+=a),o&&(e.offset+=a),this)},s.iP=function(e){var t=this.buffer.byteLength;return t<e?this.resize((t*=2)>e?t:e):this},s.fill=function(e,t,r){var i=void 0===t;if(i&&(t=this.offset),"string"==typeof e&&e.length>0&&(e=e.charCodeAt(0)),void 0===t&&(t=this.offset),void 0===r&&(r=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!=0)throw TypeError("Illegal end: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(t>=r)return this;for(;t<r;)this.view.setUint8(t++,e);return i&&(this.offset=t),this},s.Jl=function(){return this.CR=this.offset,this.offset=0,this},s.mark=function(e){if(e=void 0===e?this.offset:e,!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}return this.AR=e,this},s.order=function(e){if(!this.OR&&"boolean"!=typeof e)throw TypeError("Illegal littleEndian: Not a boolean");return this.kR=!!e,this},s.nP=function(e){return this.kR=void 0===e||!!e,this},s.sP=function(e){return this.kR=void 0!==e&&!e,this},s.oP=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof n||(e=n.wrap(e,t));var s=e.CR-e.offset;if(s<=0)return this;var o,a=s-r;if(a>0){var h=new ArrayBuffer(this.buffer.byteLength+a);o=new Uint8Array(h),o.set(new Uint8Array(this.buffer).subarray(r,this.buffer.byteLength),s),this.buffer=h,this.view=new DataView(h),this.offset+=a,this.AR>=0&&(this.AR+=a),this.CR+=a,r+=a}else o=new Uint8Array(this.buffer);return o.set(new Uint8Array(e.buffer).subarray(e.offset,e.CR),r-s),e.offset=e.CR,i&&(this.offset-=s),this},s.aP=function(e,t){return e.oP(this,t),this},s.hP=function(e){"function"!=typeof e&&(e=console.log.bind(console)),e(this.toString()+"\n-------------------------------------------------------------------\n"+this.cP(!0))},s.uP=function(){return this.CR-this.offset},s.reset=function(){return this.AR>=0?(this.offset=this.AR,this.AR=-1):this.offset=0,this},s.resize=function(e){if(!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal capacity: "+e+" (not an integer)");if((e|=0)<0)throw RangeError("Illegal capacity: 0 <= "+e)}if(this.buffer.byteLength<e){var t=new ArrayBuffer(e);new Uint8Array(t).set(new Uint8Array(this.buffer)),this.buffer=t,this.view=new DataView(t)}return this},s.reverse=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}return e===t?this:(Array.prototype.reverse.call(new Uint8Array(this.buffer).subarray(e,t)),this.view=new DataView(this.buffer),this)},s.dw=function(e){if(!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal length: "+e+" (not an integer)");e|=0}var t=this.offset+e;if(!this.OR&&(t<0||t>this.buffer.byteLength))throw RangeError("Illegal length: 0 <= "+this.offset+" + "+e+" <= "+this.buffer.byteLength);return this.offset=t,this},s.slice=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var r=this.clone();return r.offset=e,r.CR=t,r},s.lP=function(e){var t=this.offset,r=this.CR;if(t>r){var i=t;t=r,r=i}if(!this.OR){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!=0)throw TypeError("Illegal limit: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(!e&&0===t&&r===this.buffer.byteLength)return this.buffer;if(t===r)return o;var n=new ArrayBuffer(r-t);return new Uint8Array(n).set(new Uint8Array(this.buffer).subarray(t,r),0),n},s.pn=s.lP,s.toString=function(e,t,r){if(void 0===e)return"ByteBufferAB(offset="+this.offset+",markedOffset="+this.AR+",limit="+this.CR+",capacity="+this.tP()+")";switch("number"==typeof e&&(e="utf8",t=e,r=t),e){case"utf8":return this.pP(t,r);case"base64":return this.fP(t,r);case"hex":return this.dP(t,r);case"binary":return this.gP(t,r);case"debug":return this.cP();case"columns":return this.vP();default:throw Error("Unsupported encoding: "+e)}};var h=function(){for(var e={},t=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47],r=[],i=0,n=t.length;i<n;++i)r[t[i]]=i;return e.encode=function(e,r){for(var i,n;null!==(i=e());)r(t[i>>2&63]),n=(3&i)<<4,null!==(i=e())?(n|=i>>4&15,r(t[63&(n|i>>4&15)]),n=(15&i)<<2,null!==(i=e())?(r(t[63&(n|i>>6&3)]),r(t[63&i])):(r(t[63&n]),r(61))):(r(t[63&n]),r(61),r(61))},e.decode=function(e,t){function i(e){throw Error("Illegal character code: "+e)}for(var n,s,o;null!==(n=e());)if(s=r[n],void 0===s&&i(n),null!==(n=e())&&(o=r[n],void 0===o&&i(n),t(s<<2>>>0|(48&o)>>4),null!==(n=e()))){if(void 0===(s=r[n])){if(61===n)break;i(n)}if(t((15&o)<<4>>>0|(60&s)>>2),null!==(n=e())){if(void 0===(o=r[n])){if(61===n)break;i(n)}t((3&s)<<6>>>0|o)}}},e.test=function(e){return/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(e)},e}();s.fP=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var i;return h.encode(function(){return e<t?this.view.getUint8(e++):null}.bind(this),i=r()),i()},n.MR=function(e,r,i){if(!i){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if(e.length%4!=0)throw TypeError("Illegal str: Length not a multiple of 4")}var s=new n(e.length/4*3,r,i),o=0;return h.decode(t(e),function(e){s.view.setUint8(o++,e)}),s.CR=o,s},n.btoa=function(e){return n.UR(e).fP()},n.atob=function(e){return n.MR(e).gP()},s.gP=function(e,t){if(e=void 0===e?this.offset:e,t=void 0===t?this.CR:t,!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(e===t)return"";for(var r=[],i=[];e<t;)r.push(this.view.getUint8(e++)),r.length>=1024&&(i.push(String.fromCharCode.apply(String,r)),r=[]);return i.join("")+String.fromCharCode.apply(String,r)},n.UR=function(e,t,r){if(!r&&"string"!=typeof e)throw TypeError("Illegal str: Not a string");for(var i,s=0,o=e.length,a=new n(o,t,r);s<o;){if(i=e.charCodeAt(s),!r&&i>255)throw RangeError("Illegal charCode at "+s+": 0 <= "+i+" <= 255");a.view.setUint8(s++,i)}return a.CR=o,a},s.cP=function(e){for(var t,r=-1,i=this.buffer.byteLength,n="",s="",o="";r<i;){if(-1!==r&&(t=this.view.getUint8(r),n+=t<16?"0"+t.toString(16).toUpperCase():t.toString(16).toUpperCase(),e&&(s+=t>32&&t<127?String.fromCharCode(t):".")),++r,e&&r>0&&r%16==0&&r!==i){for(;n.length<51;)n+=" ";o+=n+s+"\n",n=s=""}r===this.offset&&r===this.CR?n+=r===this.AR?"!":"|":r===this.offset?n+=r===this.AR?"[":"<":r===this.CR?n+=r===this.AR?"]":">":n+=r===this.AR?"'":e||0!==r&&r!==i?" ":""}if(e&&" "!==n){for(;n.length<51;)n+=" ";o+=n+s+"\n"}return e?o:n},n.HR=function(e,t,r){for(var i,s,o=e.length,a=new n((o+1)/3|0,t,r),h=0,c=0,u=!1,l=!1,p=!1,f=!1,d=!1;h<o;){switch(i=e.charAt(h++)){case"!":if(!r){if(l||p||f){d=!0;break}l=p=f=!0}a.offset=a.AR=a.CR=c,u=!1;break;case"|":if(!r){if(l||f){d=!0;break}l=f=!0}a.offset=a.CR=c,u=!1;break;case"[":if(!r){if(l||p){d=!0;break}l=p=!0}a.offset=a.AR=c,u=!1;break;case"<":if(!r){if(l){d=!0;break}l=!0}a.offset=c,u=!1;break;case"]":if(!r){if(f||p){d=!0;break}f=p=!0}a.CR=a.AR=c,u=!1;break;case">":if(!r){if(f){d=!0;break}f=!0}a.CR=c,u=!1;break;case"'":if(!r){if(p){d=!0;break}p=!0}a.AR=c,u=!1;break;case" ":u=!1;break;default:if(!r&&u){d=!0;break}if(s=parseInt(i+e.charAt(h++),16),!r&&(isNaN(s)||s<0||s>255))throw TypeError("Illegal str: Not a debug encoded string");a.view.setUint8(c++,s),u=!0}if(d)throw TypeError("Illegal str: Invalid symbol at "+h)}if(!r){if(!l||!f)throw TypeError("Illegal str: Missing offset or limit");if(c<a.buffer.byteLength)throw TypeError("Illegal str: Not a debug encoded string (is it hex?) "+c+" < "+o)}return a},s.dP=function(e,t){if(e=void 0===e?this.offset:e,t=void 0===t?this.CR:t,!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}for(var r,i=new Array(t-e);e<t;)r=this.view.getUint8(e++),r<16?i.push("0",r.toString(16)):i.push(r.toString(16));return i.join("")},n.BR=function(e,t,r){if(!r){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if(e.length%2!=0)throw TypeError("Illegal str: Length not a multiple of 2")}for(var i,s=e.length,o=new n(s/2|0,t),a=0,h=0;a<s;a+=2){if(i=parseInt(e.substring(a,a+2),16),!r&&(!isFinite(i)||i<0||i>255))throw TypeError("Illegal str: Contains non-hex characters");o.view.setUint8(h++,i)}return o.CR=h,o};var c=function(){var e={};return e.yP=1114111,e.mP=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<128?t(127&r):r<2048?(t(r>>6&31|192),t(63&r|128)):r<65536?(t(r>>12&15|224),t(r>>6&63|128),t(63&r|128)):(t(r>>18&7|240),t(r>>12&63|128),t(r>>6&63|128),t(63&r|128)),r=null},e.Wb=function(e,t){for(var r,i,n,s,o=function(e){e=e.slice(0,e.indexOf(null));var t=Error(e.toString());throw t.name="TruncatedError",t.Hn=e,t};null!==(r=e());)if(0==(128&r))t(r);else if(192==(224&r))null===(i=e())&&o([r,i]),t((31&r)<<6|63&i);else if(224==(240&r))(null===(i=e())||null===(n=e()))&&o([r,i,n]),t((15&r)<<12|(63&i)<<6|63&n);else{if(240!=(248&r))throw RangeError("Illegal starting byte: "+r);(null===(i=e())||null===(n=e())||null===(s=e()))&&o([r,i,n,s]),t((7&r)<<18|(63&i)<<12|(63&n)<<6|63&s)}},e.EP=function(e,t){for(var r,i=null;;){if(null===(r=null!==i?i:e()))break;r>=55296&&r<=57343&&null!==(i=e())&&i>=56320&&i<=57343?(t(1024*(r-55296)+i-56320+65536),i=null):t(r)}null!==i&&t(i)},e.Xb=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<=65535?t(r):(r-=65536,t(55296+(r>>10)),t(r%1024+56320)),r=null},e.xb=function(t,r){e.EP(t,function(t){e.mP(t,r)})},e.Hb=function(t,r){e.Wb(t,function(t){e.Xb(t,r)})},e.TP=function(e){return e<128?1:e<2048?2:e<65536?3:4},e.IP=function(t){for(var r,i=0;null!==(r=t());)i+=e.TP(r);return i},e.Ub=function(t){var r=0,i=0;return e.EP(t,function(t){++r,i+=e.TP(t)}),[r,i]},e}();return s.pP=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var i;try{c.Hb(function(){return e<t?this.view.getUint8(e++):null}.bind(this),i=r())}catch(r){if(e!==t)throw RangeError("Illegal range: Truncated data, "+e+" != "+t)}return i()},n.xR=function(e,r,i){if(!i&&"string"!=typeof e)throw TypeError("Illegal str: Not a string");var s=new n(c.Ub(t(e),!0)[1],r,i),o=0;return c.xb(t(e),function(e){s.view.setUint8(o++,e)}),s.CR=o,s},n}"object"==typeof e&&e&&"object"==typeof t&&t?e.t=function(){var e;try{e=r(90)}catch(e){}return a(e)}():(n=[r(91)],void 0!==(s=function(e){return a(e)}.apply(t,n))&&(e.t=s))}()}).call(t,r(58)(e))},function(e,t,r){"use strict";var i=r(34);e.t=Object,Object.empty=Object.freeze(Object.create(null)),Object.Jo=function(e){return Object(e)===e},Object.wP=function(e){return e&&"function"==typeof e.valueOf&&(e=e.valueOf()),e};var n=new i;Object.hash=function(e){return e&&"function"==typeof e.hash?""+e.hash():Object(e)===e?(n.has(e)||n.set(e,Math.random().toString(36).slice(2)),n.get(e)):""+e};var s=Object.prototype.hasOwnProperty;Object.SP=function(e,t){return s.call(e,t)},Object.has=function(e,t){if("object"!=typeof e)throw new Error("Object.has can't accept non-object: "+typeof e);if(e&&"function"==typeof e.has)return e.has(t);if("string"==typeof t)return t in e&&e[t]!==Object.prototype[t];throw new Error("Key must be a string for Object.has on plain objects")},Object.get=function(e,t,r){if("object"!=typeof e)throw new Error("Object.get can't accept non-object: "+typeof e);return e&&"function"==typeof e.get?e.get(t,r):Object.has(e,t)?e[t]:r},Object.set=function(e,t,r){e&&"function"==typeof e.set?e.set(t,r):e[t]=r},Object.addEach=function(e,t){if(t)if("function"!=typeof t.forEach||t.hasOwnProperty("forEach"))if("number"==typeof t.length)for(var r=0;r<t.length;r++)e[r]=t[r];else Object.keys(t).forEach(function(r){e[r]=t[r]});else!0===t.isMap?t.forEach(function(t,r){e[r]=t}):t.forEach(function(t){e[t[0]]=t[1]});else;return e},Object.forEach=function(e,t,r){for(var i,n=Object.keys(e),s=0;i=n[s];s++)t.call(r,e[i],i,e)},Object.map=function(e,t,r){for(var i,n=Object.keys(e),s=0,o=[];i=n[s];s++)o.push(t.call(r,e[i],i,e));return o},Object.values=function(e){return Object.map(e,Function.identity)},Object.concat=function(){for(var e={},t=0;t<arguments.length;t++)Object.addEach(e,arguments[t]);return e},Object.from=Object.concat,Object.is=function(e,t){return e===t?0!==e||1/e==1/t:e!==e&&t!==t},Object.ae=function(e,t,r,n){if(r=r||Object.ae,e=Object.wP(e),t=Object.wP(t),e===t)return!0;if(Object.Jo(e)){if(n=n||new i,n.has(e))return!0;n.set(e,!0)}if(Object.Jo(e)&&"function"==typeof e.ae)return e.ae(t,r,n);if(Object.Jo(t)&&"function"==typeof t.ae)return t.ae(e,r,n);if(Object.Jo(e)&&Object.Jo(t)&&Object.getPrototypeOf(e)===Object.prototype&&Object.getPrototypeOf(t)===Object.prototype){for(var s in e)if(!r(e[s],t[s],r,n))return!1;for(var s in t)if(!(s in e&&r(t[s],e[s],r,n)))return!1;return!0}return e!==e&&t!==t||(!e||!t)&&e===t},Object.mo=function(e,t){if(e=Object.wP(e),t=Object.wP(t),e===t)return 0;var r=typeof e,i=typeof t;return"number"===r&&"number"===i?e-t:"string"===r&&"string"===i?e<t?-1/0:1/0:e&&"function"==typeof e.mo?e.mo(t):t&&"function"==typeof t.mo?-t.mo(e):0},Object.clone=function(e,t,r){if(e=Object.wP(e),r=r||new i,void 0===t)t=1/0;else if(0===t)return e;if(Object.Jo(e)){if(!r.has(e))if(e&&"function"==typeof e.clone)r.set(e,e.clone(t,r));else{var n=Object.getPrototypeOf(e);if(null!==n&&n!==Object.prototype)throw new Error("Can't clone "+e);var s=Object.create(n);r.set(e,s);for(var o in e)s[o]=Object.clone(e[o],t-1,r)}return r.get(e)}return e},Object.clear=function(e){if(e&&"function"==typeof e.clear)e.clear();else for(var t=Object.keys(e),r=t.length;r;)r--,delete e[t[r]];return e}},function(e,t){!function(){"use strict";function t(e){e.RP&&e.RP(t)}function r(e){return!(e.substr(0,f.length)==f&&"___"===e.substr(e.length-3))}function i(e){if(e!==Object(e))throw new TypeError("Not an object: "+e);var t=e[d];if(t&&t.key===e)return t;if(p(e)){t={key:e};try{return l(e,d,{value:t,Ui:!1,l:!1,u:!1}),t}catch(e){return}}}function n(e){return e.prototype=null,Object.freeze(e)}function s(){m||"undefined"==typeof console||(m=!0,console.warn("WeakMap should be invoked as new WeakMap(), not WeakMap(). This will be an error in the future."))}if("undefined"==typeof ses||!ses.ok||ses.ok()){"undefined"!=typeof ses&&(ses.bP=t);var o=!1;if("function"==typeof WeakMap){var a=WeakMap;if("undefined"!=typeof navigator&&/Firefox/.test(navigator.userAgent));else{var h=new a,c=Object.freeze({});if(h.set(c,1),1===h.get(c))return void(e.t=WeakMap);o=!0}}var u=(Object.prototype.hasOwnProperty,Object.getOwnPropertyNames),l=Object.defineProperty,p=Object.isExtensible,f="weakmap:",d=f+"ident:"+Math.random()+"___";if("undefined"!=typeof crypto&&"function"==typeof crypto.getRandomValues&&"function"==typeof ArrayBuffer&&"function"==typeof Uint8Array){var g=new ArrayBuffer(25),v=new Uint8Array(g);crypto.getRandomValues(v),d=f+"rand:"+Array.prototype.map.call(v,function(e){return(e%36).toString(36)}).join("")+"___"}if(l(Object,"getOwnPropertyNames",{value:function(e){return u(e).filter(r)}}),"getPropertyNames"in Object){var y=Object.PP;l(Object,"getPropertyNames",{value:function(e){return y(e).filter(r)}})}!function(){var e=Object.freeze;l(Object,"freeze",{value:function(t){return i(t),e(t)}});var t=Object.seal;l(Object,"seal",{value:function(e){return i(e),t(e)}});var r=Object.preventExtensions;l(Object,"preventExtensions",{value:function(e){return i(e),r(e)}})}();var m=!1,E=0,T=function(){function e(e,t){var r,n=i(e);return n?c in n?n[c]:t:(r=a.indexOf(e),r>=0?h[r]:t)}function t(e){var t=i(e);return t?c in t:a.indexOf(e)>=0}function r(e,t){var r,n=i(e);return n?n[c]=t:(r=a.indexOf(e),r>=0?h[r]=t:(r=a.length,h[r]=t,a[r]=e)),this}function o(e){var t,r,n=i(e);return n?c in n&&delete n[c]:!((t=a.indexOf(e))<0)&&(r=a.length-1,a[t]=void 0,h[t]=h[r],a[t]=a[r],a.length=r,h.length=r,!0)}this instanceof T||s();var a=[],h=[],c=E++;return Object.create(T.prototype,{AP:{value:n(e)},CP:{value:n(t)},kP:{value:n(r)},OP:{value:n(o)}})};T.prototype=Object.create(Object.prototype,{get:{value:function(e,t){return this.AP(e,t)},Ui:!0,u:!0},has:{value:function(e){return this.CP(e)},Ui:!0,u:!0},set:{value:function(e,t){return this.kP(e,t)},Ui:!0,u:!0},delete:{value:function(e){return this.OP(e)},Ui:!0,u:!0}}),"function"==typeof a?function(){function r(){function e(e,t){return u?c.has(e)?c.get(e):u.AP(e,t):c.get(e,t)}function r(e){return c.has(e)||!!u&&u.CP(e)}function i(e){var t=!!c.delete(e);return u?u.OP(e)||t:t}this instanceof T||s();var h,c=new a,u=void 0,l=!1;return h=o?function(e,t){return c.set(e,t),c.has(e)||(u||(u=new T),u.set(e,t)),this}:function(e,t){if(l)try{c.set(e,t)}catch(r){u||(u=new T),u.kP(e,t)}else c.set(e,t);return this},Object.create(T.prototype,{AP:{value:n(e)},CP:{value:n(r)},kP:{value:n(h)},OP:{value:n(i)},RP:{value:n(function(e){if(e!==t)throw new Error("bogus call to permitHostObjects___");l=!0})}})}o&&"undefined"!=typeof Proxy&&(Proxy=void 0),r.prototype=T.prototype,e.t=r,Object.defineProperty(WeakMap.prototype,"constructor",{value:WeakMap,l:!1,u:!0,Ui:!0})}():("undefined"!=typeof Proxy&&(Proxy=void 0),e.t=T)}}()},function(e,t,r){"use strict";function i(){throw new Error("Can't construct. RangeChanges is a mixin.")}var n=r(34),s=r(47),o=new n;e.t=i,i.prototype._P=function(){return o.has(this)||o.set(this,s()),o.get(this)},i.prototype.NP=function(e){var t=this._P();return e=e||"",t.has(e)||t.set(e,{ci:!1,Mo:[],Lo:[]}),t.get(e)},i.prototype.DP=function(e,t,r){!this.Ho&&this.xo&&this.xo();var i,n=this.NP(t);i=r?n.Lo:n.Mo,i.push(e),Object.defineProperty(this,"dispatchesRangeChanges",{value:!0,Ui:!0,u:!0,l:!1});var s=this;return function(){s&&(s.FP(e,t,r),s=null)}},i.prototype.FP=function(e,t,r){var i,n=this.NP(t);i=r?n.Lo:n.Mo;var s=i.lastIndexOf(e);if(-1===s)throw new Error("Can't remove range change listener: does not exist: token "+JSON.stringify(t));i.splice(s,1)},i.prototype.LP=function(e,t,r,i){var n="Range"+(i?"WillChange":"Change");this._P().forEach(function(s,o){if(!s.ci){s.ci=!0;var a;a=i?s.Lo:s.Mo;var h="handle"+(o.slice(0,1).toUpperCase()+o.slice(1))+n;try{a.slice().forEach(function(n){if(!(a.indexOf(n)<0))if(n[h])n[h](e,t,r,this,i);else{if(!n.call)throw new Error("Handler "+n+" has no method "+h+" and is not callable");n.call(this,e,t,r,this,i)}},this)}finally{s.ci=!1}}},this)},i.prototype.MP=function(e,t){return this.DP(e,t,!0)},i.prototype.BP=function(e,t){return this.FP(e,t,!0)},i.prototype.UP=function(e,t,r){return this.LP(e,t,r,!0)}},function(e,t){function r(){throw new Error("Can't construct. GenericSet is a mixin.")}e.t=r,r.prototype.xP=!0,r.prototype.HP=function(e){var t=this.de(this);return t.addEach(e),t},r.prototype.qP=function(e){return this.de(this.filter(function(t){return e.has(t)}))},r.prototype.VP=function(e){var t=this.de(this);return t.do(e),t},r.prototype.jP=function(e){var t=this.HP(e),r=this.qP(e);return t.VP(r)},r.prototype.GP=function(e){return+this.delete(e)},r.prototype.ae=function(e,t){var r=this;return e&&"function"==typeof e.reduce&&this.length===e.length&&e.reduce(function(e,i){return e&&r.has(i,t)},!0)},r.prototype.toJSON=function(){return this.toArray()},r.prototype.contains=function(e){return this.has(e)},r.prototype.remove=function(e){return this.delete(e)},r.prototype.toggle=function(e){this.has(e)?this.delete(e):this.add(e)}},function(e,t,r){var i,i;!function(t){e.t=t()}(function(){return function e(t,r,n){function s(a,h){if(!r[a]){if(!t[a]){var c="function"==typeof i&&i;if(!h&&c)return i(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var l=r[a]={t:{}};t[a][0].call(l.t,function(e){var r=t[a][1][e];return s(r||e)},l,l.t,e,t,r,n)}return r[a].t}for(var o="function"==typeof i&&i,a=0;a<n.length;a++)s(n[a]);return s}({1:[function(e,t,r){var i=e("./kernel");r.O=i.O;var n=e("./type_binding");r.QP=n.QP;var s=e("./type_binding_scope");r.KP=s.KP},{"./kernel":2,"./type_binding":4,"./type_binding_scope":5}],2:[function(e,t,r){var i=e("./type_binding_scope"),n=e("./lookup"),s=function(){function e(){this.YP=new n.zP}return e.prototype.bind=function(e){this.YP.add(e.JP,e)},e.prototype.WP=function(e){try{this.YP.remove(e)}catch(t){throw new Error("Could not resolve service "+e)}},e.prototype.k=function(){this.YP=new n.zP},e.prototype.resolve=function(e){var t;if(!this.YP.XP(e))return null;t=this.YP.get(e);var r=t[0];if(r.scope===i.KP.ZP&&null!==r.Uw)return r.Uw;var n=this.$P(r.eA);return r.Uw=n,n},e.prototype.tA=function(e){var t,r,i,n,s,o;return s=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,o=/([^\s,]+)/g,t=e.toString().replace(s,""),r=t.indexOf("(")+1,i=t.indexOf(")"),n="function"==typeof Map&&-1!==t.indexOf("class")&&-1===t.indexOf("constructor")?null:t.slice(r,i).match(o),null===n&&(n=[]),n},e.prototype.$P=function(e){var t=this.tA(e);if(0===t.length)return new e;for(var r=[],i=null,n=0;n<t.length;n++){var s=t[n];i=this.resolve(s),r.push(i)}return this.rA(e,r)},e.prototype.rA=function(e,t){return new(Function.prototype.bind.apply(e,[null].concat(t)))},e}();r.O=s},{"./lookup":3,"./type_binding_scope":5}],3:[function(e,t,r){var i=function(){function e(e,t){this.key=e,this.value=new Array,this.value.push(t)}return e}(),n=function(){function e(){this.iA=new Array}return e.prototype.nA=function(e){for(var t=-1,r=0;r<this.iA.length;r++){this.iA[r].key===e&&(t=r)}return t},e.prototype.add=function(e,t){if(null===e||void 0===e)throw new Error("Argument Null");if(null===t||void 0===t)throw new Error("Argument Null");var r=this.nA(e);if(-1!==r){var n=this.iA[r];n.key===e&&n.value.push(t)}else this.iA.push(new i(e,t))},e.prototype.get=function(e){if(null===e||void 0===e)throw new Error("Argument Null");var t=this.nA(e);if(-1===t)throw new Error("Key Not Found");var r=this.iA[t];return r.key===e?r.value:void 0},e.prototype.remove=function(e){if(null===e||void 0===e)throw new Error("Argument Null");var t=this.nA(e);if(-1===t)throw new Error("Key Not Found");this.iA.splice(t,1)},e.prototype.XP=function(e){if(null===e||void 0===e)throw new Error("Argument Null");return-1!==this.nA(e)},e}();r.zP=n},{}],4:[function(e,t,r){var i=e("./type_binding_scope"),n=function(){function e(e,t,r){if(this.JP=e,this.eA=t,this.Uw=null,void 0===r)this.scope=i.KP.sA;else{if(!i.KP[r]){var n="Invalid scope type "+r;throw new Error(n)}this.scope=r}}return e}();r.QP=n},{"./type_binding_scope":5}],5:[function(e,t,r){var i;!function(e){e[e.sA=0]="Transient",e[e.ZP=1]="Singleton"}(i||(i={})),r.KP=i},{}]},{},[1])(1)})},function(e,t,r){"use strict";var i;!function(e){var t=function(){function e(){}return e}();t.LoggerTimestamp=!0,e.Framework=t;var r=function(){function e(){}return e}();r.MetricSnapshotLogs=0,r.TrackSnapshotLogs=0,e.DebugLogs=r}(i=t.HiveConfig||(t.HiveConfig={})),"undefined"!=typeof window&&(void 0===window.HiveConfig&&(window.HiveConfig={}),window.HiveConfig.Framework=i.Framework,window.HiveConfig.DebugLogs=i.DebugLogs)},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.oA="127.0.0.1",i.nu=8999,i.iu=8998,i.ru=8899,i.eu=8898,i.aA="//{0}:{1}/?callback={2}{3}hivePluginId={4}",i.hA="//{0}:{1}/?callback={2}",i.su=!0,i.cA=/((http|https):\/\/(.*):([0-9]*)\/([0-9a-z-]*).ism\/)(.*)/,i.uA="2013.1.1",t.tu=i},function(e,t,r){"use strict";var i=function(){function e(){this.count=0}return e.prototype.next=function(){return++this.count},e}();t.Counter=i;var n=function(){function e(){this.reset()}return e.prototype.add=function(e){e<=0||(this.lA+=e,this.pA++,e>this.fA&&(this.fA=e),e<this.dA&&(this.dA=e))},e.prototype.min=function(e){void 0===e&&(e=!0);var t=this.dA==Number.POSITIVE_INFINITY?0:this.dA;return e&&this.reset(),t},e.prototype.max=function(e){void 0===e&&(e=!0);var t=this.fA==Number.NEGATIVE_INFINITY?0:this.fA;return e&&this.reset(),t},e.prototype.Eo=function(e){void 0===e&&(e=!0);var t=this.lA;return e&&this.reset(),t},e.prototype.un=function(e){void 0===e&&(e=!0);var t=this.pA>0?this.lA/this.pA:0;return e&&this.reset(),t},e.prototype.reset=function(){this.dA=Number.POSITIVE_INFINITY,this.fA=Number.NEGATIVE_INFINITY,this.lA=0,this.pA=0},e}();t.gA=n},function(e,t,r){"use strict";var i=r(38),n=r(1);!function(e){var t;!function(e){e[e.off=0]="off",e[e.error=1]="error",e[e.warn=2]="warn",e[e.notice=3]="notice",e[e.info=4]="info",e[e.debug=5]="debug",e[e.trace=6]="trace"}(t=e.vA||(e.vA={}));var r=function(){function e(){this.timestamp=function(){},this.yA=new n,this.level=t.debug,this.timestamp.toString=function(){var e=new Date;return"["+("0"+e.getUTCHours()).slice(-2)+":"+("0"+e.getUTCMinutes()).slice(-2)+":"+("0"+e.getUTCSeconds()).slice(-2)+":"+("00"+e.getUTCMilliseconds()).slice(-3)+"]"},this.te="undefined"==typeof console?{log:function(){}}:console,this.te.trace||(this.te.trace=this.te.log),this.te.debug||(this.te.debug=this.te.log),this.te.info||(this.te.info=this.te.log),this.te.warn||(this.te.warn=this.te.log),this.te.error||(this.te.error=this.te.log),this.mA(t[this.level])}return e.prototype.mA=function(e,r){i.HiveConfig.Framework.HiveDebugLevel&&void 0!=t[i.HiveConfig.Framework.HiveDebugLevel]?this.level=t[i.HiveConfig.Framework.HiveDebugLevel]:void 0!=t[e]?this.level=t[e]:console.log("Wrong logging level: "+e,t),this.EA(r)},e.prototype.EA=function(e){var r={log:this.TA(this.te.log,t.error,e),error:this.TA(this.te.error,t.error,e),warn:this.TA(this.te.warn,t.warn,e),notice:this.TA(this.te.info,t.notice,e),info:this.TA(this.te.info,t.info,e),debug:this.TA(this.te.debug,t.debug,e),trace:this.TA(this.te.trace,t.trace,e)};e?this.yA.set(e,r):this.IA=r},e.prototype.TA=function(e,t,r){if(!(this.level>=t))return function(){};try{return i.HiveConfig.Framework.LoggerTimestamp?r?Function.prototype.bind.call(e,console,"S["+r+"] %s",this.timestamp):Function.prototype.bind.call(e,console,"%s",this.timestamp):r?Function.prototype.bind.call(e,console,"S["+r+"]"):Function.prototype.bind.call(e,console)}catch(e){}},e.prototype.log=function(e){return e?(this.yA.has(e)||this.mA(t[this.level],e),this.yA.get(e)):this.IA},e}();e.wA=r}(t.SA||(t.SA={}))},function(e,t,r){"use strict";var i=r(27),n=r(25),s=n.Gm,o=n.Qm,a=function(){function e(){this.SourceURLParams={}}return e.prototype.RA=function(e){for(var t in e)if("SourceURLParams"===t)for(var r in e[t])this[t][r]=e[t][r];else this[t]=e[t];this.bA()},e.prototype.PA=function(){var e=this.ContentId+this.SiteId+this.CROId+this.SourceURL,t=new s;t.df("b6614c3e4cd1d14eed6b39ef2bf6b9a3e3d6dfcd26699d7270d887923bcbf83efb3dadb717c0bafb1d48dce361eb369b7cc46e57405ebfbdd86c3175532fe56cc77f473d345b2cb6feafb5ab0e24f364a3d259f27e4a2fd97468265bddfd3ddd3ac64251db650ca0280af2b2c45e8b1c8f040f2c433ac0a157d2b3fd91517253","010001");var r=o(this.Signature);return t.Bm(e,r)},e.prototype.AA=function(e){this.ticketUrl=e;var t=i.parse(e),r=t.path.split("/").slice(3);if(this.SiteId=r[0],this.CROId=r[1],this.ContentId=r[2],this.CA=r[3],t.dn)try{var n=t.dn.split("&");for(var s in n){var o=n[s].split(/=(.+)/);this.SourceURLParams[o[0]]=o[1]}}catch(e){}this.kA=e.indexOf("api-test")>-1},e.prototype.Lh=function(){return this.SiteId},e.prototype.Mh=function(){return this.CROId},e.prototype.Xc=function(){return this.ContentId},e.prototype.OA=function(){return this.CA},e.prototype._A=function(){return this.SourceURL},e.prototype.NA=function(){if(this.DA=this.SourceURL,void 0!=this.SourceURLParams){var e=new Array;for(var t in this.SourceURLParams)e.push(t+"="+this.SourceURLParams[t]);e.length>0&&this.DA&&(this.DA+=(this.DA.indexOf("?")>0?"&":"?")+e.join("&"))}},e.prototype.bA=function(){var e=r(74);this.sessionId=e.FA()},e.prototype.LA=function(){return this.DA||this.NA(),this.DA},e.prototype.qh=function(){return"["+this.SiteId+"/"+this.CROId+"/"+this.ContentId+"]"},e.prototype.MA=function(){return[this.SiteId,this.CROId,this.ContentId]},e.prototype.BA=function(){return this.SourceURL+"-["+this.SiteId+"/"+this.CROId+"/"+this.ContentId+"]"},e.prototype.toString=function(){return this.qh()},e}();a.UA="^https?://api(?:-test)?.hivestreaming.com/v1/events/(?:wildcard/)?",a.xA="CROId",a.HA="SiteId",a.qA="ContentId",t.VA=a},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.jA=55,i.GA=6e5,i.QA=5,i.KA=5,i.YA=5,i.zA=10,i.JA="dist",i.WA="./scenarios/BrokenUdp",i.XA=null,i.ZA=null,i.$A=null,i.eC=!0,i.tC=!0,i.rC=6e4,t.iC=i;var n=function(){function e(){}return e}();n.nC="BwEmulation",t.sC=n},function(e,t,r){"use strict";function i(e,t,r,s){if(!(this instanceof i))return new i(e,t,r,s);t=t||Object.ae,r=r||Object.mo,s=s||Function.he,this.ce=t,this.yo=r,this.le=s,this.pe=new n(null,function(e,r){return t(e.key,r.key)},function(e,t){return r(e.key,t.key)}),this.length=0,this.addEach(e)}var n=(r(12),r(137)),s=r(13),o=r(48),a=r(14);e.t=i,i.oC=i,Object.addEach(i.prototype,s.prototype),Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),i.prototype.de=function(e){return new this.constructor(e,this.ce,this.yo,this.le)},i.prototype.log=function(e,t,r,i){t=t||this.ge,this.pe.log(e,function(e,r,i){t(e.value,r,i)},r,i)},i.prototype.ge=function(e,t){t(" key: "+e.key),t(" value: "+e.value)}},function(e,t,r){"use strict";var i,n=r(55),s=r(1),o=r(22),a=r(0),h=r(3),c=r(10),u=r(28),l=r(11);!function(e){e[e.$s=0]="PLAYER",e[e.aC=1]="LAN",e[e.hC=2]="SITE"}(i=t.cC||(t.cC={}));var p=function(){function e(){this.uC=!1,this.gR=null,this.lC=-1,this.pC=0}return e}();t.fC=p;var f=function(){function e(){this.mn="[Prefetcher] ",this.dC=!0,this.gC=0,this.vC=new s,this.yC=new s}return e.prototype.init=function(e){this.te=a.Framework.resolve(a.Framework.q.I).log(e.sessionId),this.mC=e.EC,this.TC=e.TC,this.IC=e.IC,this.Uw=e.Uw,this.wC=e.wC,this.SC=e.SC,this.RC=e.RC,this.bC=e.bC},e.prototype.PC=function(e,t){this.context=e,this.AC=t,this.RC.PC(t)},e.prototype.CC=function(e){return this.yC.has(e)},e.prototype.kC=function(){return this.AC},e.prototype.OC=function(e,t,r){var o=this,a=new n;this.yC.forEach(function(e,t){a.add(t)});var h=new n;if(h.addEach(e.keys()),this.AC._C()){var c=this.AC._C().bitrate;if(h.add(c),h.forEach(function(e){a.delete(e)}),r){var u=[];a.forEach(function(e){o.yC.has(e)&&o.yC.get(e).NC==i.hC&&(u.push(e),h.add(e))}),u.forEach(function(e){a.delete(e)})}var l=new s;h.forEach(function(t){o.yC.has(t)&&o.yC.get(t).NC==i.hC?l.set(t,i.hC):l.set(t,e.get(t))}),this.DC(a),this.FC(l,t)}},e.prototype.FC=function(e,t){var r=this;e.forEach(function(e,i){0!=i&&r.LC(i,e,t)})},e.prototype.DC=function(e){var t=this;e.forEach(function(e){t.wC.MC(e),t.te.debug(t.mn+"Remove unwanted bitrate "+e),t.yC.delete(e)})},e.prototype.LC=function(e,t,r){this.yC.has(e)?this.BC(e,r):this.yC.has(e)||this.UC(e,t,r)},e.prototype.BC=function(e,t){var r=this.yC.get(e);r.type=t,r.type!=i.hC&&(r.lC=-1),this.wC.xC(e,r)},e.prototype.UC=function(e,t,r){var n=this,s=new p;s.gR=null,s.type=r,s.bitrate=e,s.NC=t,this.yC.set(e,s),this.yC.forEach(function(e,t){n.te.debug(n.mn+"ABT "+t+" S "+i[e.type]+" PREF REASON "+i[e.NC])}),this.wC.xC(e,s)},e.prototype.HC=function(e){var t=this;if(this.yC.has(e.IR())){var r=this.yC.get(e.IR());r.lC>0&&r.qC&&(r.lC=e.duration-(a.Framework.time()-r.qC)-r.pC,r.pC=50),r.gR=e,this.VC(e.IR()),this.yC.forEach(function(r,n){r&&r.type!=i.$s&&n!=e.IR()&&t.jC(r,n)})}else this.te.warn(this.mn+"Fragment "+e.zu()+" triggered prefetch with unknown bitrate. Check logs. This should not happen.")},e.prototype.GC=function(e){var t=this.yC.keys(),r=t.indexOf(e);return-1!=r&&t.splice(r,1),t},e.prototype.QC=function(e){var t=this;e.forEach(function(e){var r=t.yC.get(e);r&&r.type!=i.$s&&t.jC(r,r.bitrate)})},e.prototype.jC=function(e,t){if(e.type!=i.$s){var r=this.AC._C();if(null!=r){var n=this.AC.KC(r.vR,t,c.Ws.Ys);null==n?(this.te.debug(this.mn+"PREFETCHING "+t+" MISSING METADATA "),this.uC(t)):(e.gR=n,this.VC(n.IR()))}else this.te.debug(this.mn+"PLAYER NOT PLAYING "),this.uC(t)}},e.prototype.YC=function(e){var t=this.yC.get(e);t&&t.uC&&(null!=t.gR?(this.te.debug(this.mn+"RESTART PREFETCHING ON AVAILABLE METADATA"),t.uC=!1,this.VC(t.bitrate)):(t.uC=!1,this.jC(t,e)))},e.prototype.zC=function(e){var t=this;e?this.YC(e):this.yC.forEach(function(e,r){t.YC(r)})},e.prototype.VC=function(e){var t=this.AC._C();if(t){var r=this.yC.get(e);if(r){if(r.gR&&t.IR()==e){var i=this.JC(r.gR.ER(),e);this.wC.WC(i)}this.XC(r)}}},e.prototype.XC=function(e){if(e.gR){var t=this.ZC(e.gR);if(null!=t)this.$C(t,e);else{var r=e.bitrate;this.te.debug(this.mn+"PREFETCHING "+r+" STOPPED BECAUSE OF MISSING METADATA "),this.yC.get(r).uC=!0,this.uC(r)}}else e.uC=!0,this.uC(e.bitrate)},e.prototype.$C=function(e,t){var r=this,n=this.ek(e.zu(),e.IR(),e.ER(),t.type);if(n.tk){this.vC.has(e.zu())&&a.Framework.clearTimeout(this.vC.get(e.zu()));var s=n.type==o.Tu.vu,c=1;if(s){var l=Math.max(0,t.lC);c=this.RC.rk(t.type,e.IR(),e.ER(),l)}this.te.debug(this.mn+"PREFETCHING "+e.url+" CDN PREFETCH "+s+" IN "+c+" MSECS");var p=this.yC.get(e.IR());p.gR=e;var f=a.Framework.setTimeout(function(){r.vC.delete(e.zu());var s=new u.HiveRequest(r.TC.sessionId);s.url=e.url,p.qC=a.Framework.time(),r.gC=0;var c=r.TC.ik(s,e,r.context,n.type);c&&(c.Bu=t.type==i.hC||t.type==i.aC,s.onerror=s.onload=function(){if(c.Ku()==o.Tu.vu&&(!s.status||s.status<200||s.status>299)){var t=r.yC.get(e.IR());s=null;var i=t.gR.duration,n=t.gR.duration+h.ni.dr.Xt,u=Math.floor(Math.random()*(n-i))+i;t.lC=u-(a.Framework.time()-t.qC),t.pC=0,r.VC(t.gR.bitrate)}})},c);this.vC.set(e.zu(),f)}},e.prototype.nk=function(){var e=this;this.vC.forEach(function(t,r){e.te.debug(e.mn+"Clearing delayed prefetch timer id "+t),a.Framework.clearTimeout(t),e.vC.delete(r)})},e.prototype.uC=function(e){this.yC.has(e)&&(this.yC.get(e).uC=!0,this.AC.sk(e))},e.prototype.ZC=function(e){var t=this.yC.get(e.IR()),r=e,i=this.ak(r);return i&&i.zu()!=e.zu()?i:i&&i.zu()==t.gR.zu()?e:null},e.prototype.ak=function(e){if(null==e)return null;var t=this.Uw.hk(!0),r=e;if(t)for(;null!=r&&-1!=t.indexOf(r.zu());)if(!(r=this.AC.ck(r)))return r;return r},e.prototype.ek=function(e,t,r,n){var s=this.uk(e),a=s?o.Tu.Eu:o.Tu.vu,h=!1;h=n!=i.$s?!this.vC.has(e)||a!=o.Tu.vu:a==o.Tu.Eu;var c=this.AC.lk(),u=this.pk(r,t,a),l=n==i.hC;return this.te.debug(this.mn+"PREFETCHING "+o.Tu[a]+" (LAN LEADER: "+this.wC.fk()+" SITE LEADER: "+l+") CHECKS FOR "+e+" [HAVES:"+s+" NOTBUFFERING:"+c+" DISTANCE:"+u.valid+"("+u.dk+")]"),{tk:h&&c&&u.valid,type:a}},e.prototype.pk=function(e,t,r){var i=this.AC.gk(e,t);return i<=this.AC.vk()?{dk:i,valid:!0}:{dk:i,valid:!1}},e.prototype.JC=function(e,t){var r=this.AC._C();if(null!=r){var i=r.ER();return this.AC.yk(i,t,e,t)}return-1},e.prototype.uk=function(e){if(this.mC.contains(e)){var t=this.mC.mk(e);if(t.length>=h.ni.dr.er){if(h.ni.dr.rr){var r=[],i=[],n=[],s=this.wC.Ek();return t.forEach(function(e){e.Ik.Tk.type==l.Zs.K&&r.push(e);var t=e.Ik.Tk.internalAs;0!=s&&t&&s==t&&i.push(e),e.Ik.Tk.type==l.Zs.Xs&&n.push(e)}),r.length>0?!this.dC||!this.wk(r,e):!(!this.wC.fk()&&this.wC.Sk()||!(i.length>0))||!(!(n.length>0)||!this.wC.Rk()&&this.wC.bk())}return!0}}return!1},e.prototype.wk=function(e,t){if(this.wC.Pk().length>h.ni.dr.ur)return this.wC.Ak(),e.length==h.ni.dr.cr&&e[0].guid==this.wC.kk().Ck&&a.Framework.random()>h.ni.dr.lr&&this.gC<h.ni.dr.pr&&(this.te.debug("SKIP PREFETCH CYCLE "+this.gC+" TO OFFLOAD LEADER"),this.gC++,!0);return!1},e.prototype.Ok=function(e,t){e._k=e.Vu.id,e.Vu=t,this.te.debug(this.mn+"UPGRADE "+o.Tu[e.Ku()]+" REQ "+e.ju+" FOR "+e.Qu.zu()),e.Ku()==o.Tu.Eu?(e.Mu.p2pAgenTrafficSuccessQt=e.qu,e.Uu?(e.type=o.Tu.mu,this.IC.Nk(e)||(this.te.debug(this.mn+"SET REQUEST TIMED-OUT WAS 0. CDN COMPENSATION"),this.IC.Dk(e.Fk,"TIMED-OUT"))):(e.type=o.Tu.du,this.te.debug(this.mn+"THE HIVE REQ "+e.zu()+" ARRIVED BEFORE THE P2P_PREFETCH INITIALIZED. CHANGE REQUEST TYPE TO "+o.Tu[e.Ku()]))):e.Ku()==o.Tu.vu&&(e.type=o.Tu.du)},e}();t.Lk=f},function(e,t,r){"use strict";function i(e,t,r){if(!(this instanceof i))return new i(e,t,r);var n=this.head=new this.Node;n.next=n,n.Mk=n,this.ce=t||Object.ae,this.le=r||Function.he,this.length=0,this.addEach(e)}function n(e){this.head=e,this.Bk=e.next}function s(e){this.value=e,this.Mk=null,this.next=null}e.t=i;var o=(r(12),r(13)),a=r(62),h=r(14),c=r(35);i.Uk=i,Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.addEach(i.prototype,h.prototype),Object.addEach(i.prototype,c.prototype),i.prototype.de=function(e){return new this.constructor(e,this.ce,this.le)},i.prototype.find=function(e,t,r){t=t||this.ce;for(var i=this.head,n=this.xk(r,i.next);n!==i;){if(t(n.value,e))return n;n=n.next}},i.prototype.Hk=function(e,t,r){t=t||this.ce;for(var i=this.head,n=this.xk(r,i.Mk);n!==i;){if(t(n.value,e))return n;n=n.Mk}},i.prototype.has=function(e,t){return!!this.find(e,t)},i.prototype.get=function(e,t){var r=this.find(e,t);return r?r.value:this.le(e)},i.prototype.delete=function(e,t){var r=this.Hk(e,t);if(r){if(this.qk){var i=[],n=[e];this.UP(i,n,r.index)}return r.delete(),this.length--,this.qk&&(this.Vk(r.next,r.index),this.LP(i,n,r.index)),!0}return!1},i.prototype.GP=function(e,t){t=t||this.ce;for(var r=this.head,i=r.next,n=0;i!==r;)t(e,i.value)&&(i.delete(),n++),i=i.next;return this.length-=n,n},i.prototype.clear=function(){var e,t;this.qk&&(t=this.toArray(),e=[],this.UP(e,t,0)),this.head.next=this.head.Mk=this.head,this.length=0,this.qk&&this.LP(e,t,0)},i.prototype.add=function(e){var t=new this.Node(e);return this.qk&&(t.index=this.length,this.UP([e],[],t.index)),this.head.jk(t),this.length++,this.qk&&this.LP([e],[],t.index),!0},i.prototype.push=function(){var e=this.head;if(this.qk){var t=Array.prototype.slice.call(arguments),r=[],i=this.length;this.UP(t,r,i);var n=this.head.Mk}for(var s=0;s<arguments.length;s++){var o=arguments[s],a=new this.Node(o);e.jk(a)}this.length+=arguments.length,this.qk&&(this.Vk(n.next,void 0===n.index?0:n.index+1),this.LP(t,r,i))},i.prototype.unshift=function(){if(this.qk){var e=Array.prototype.slice.call(arguments),t=[];this.UP(e,t,0)}for(var r=this.head,i=0;i<arguments.length;i++){var n=arguments[i],s=new this.Node(n);r.Gk(s),r=s}this.length+=arguments.length,this.qk&&(this.Vk(this.head.next,0),this.LP(e,t,0))},i.prototype.pop=function(){var e,t=this.head;if(t.Mk!==t){if(e=t.Mk.value,this.qk){var r=[],i=[e],n=this.length-1;this.UP(r,i,n)}t.Mk.delete(),this.length--,this.qk&&this.LP(r,i,n)}return e},i.prototype.shift=function(){var e,t=this.head;if(t.Mk!==t){if(e=t.next.value,this.qk){var r=[],i=[e];this.UP(r,i,0)}t.next.delete(),this.length--,this.qk&&(this.Vk(this.head.next,0),this.LP(r,i,0))}return e},i.prototype.Qk=function(){if(this.head!==this.head.next)return this.head.next.value},i.prototype.Kk=function(e){this.head!==this.head.next?this.head.next.value=e:this.push(e)},i.prototype.Po=function(){return this.Qk()},i.prototype.xk=function(e,t){var r=this.head;if("number"==typeof e){var i=e;if(i>=0)for(e=r.next;i&&(i--,(e=e.next)!=r););else for(e=r;i<0&&(i++,(e=e.Mk)!=r););return e}return e||t},i.prototype.slice=function(e,t){var r=[],i=this.head;for(e=this.xk(e,i.next),t=this.xk(t,i);e!==t&&e!==i;)r.push(e.value),e=e.next;return r},i.prototype.splice=function(e,t){return this.Yk(e,t,Array.prototype.slice.call(arguments,2))},i.prototype.Yk=function(e,t,r){var i=e;e=this.xk(e,this.head),null==t&&(t=1/0),r=Array.from(r);for(var n=[],s=e;t--&&t>=0&&s!==this.head;)n.push(s.value),s=s.next;var o,a;this.qk&&(o=e===this.head?this.length:e.Mk===this.head?0:e.index,a=e.Mk,this.UP(r,n,o));for(var s=e,h=0,s=e;h<n.length;h++,s=s.next)s.delete();null==i&&s===this.head&&(s=this.head.next);for(var h=0;h<r.length;h++){var c=new this.Node(r[h]);s.jk(c)}return this.length+=r.length-n.length,this.qk&&(e===this.head?this.Vk(this.head.next,0):this.Vk(a.next,a.index+1),this.LP(r,n,o)),n},i.prototype.reverse=function(){if(this.qk){var e=this.toArray(),t=e.reversed();this.UP(t,e,0)}var r=this.head;do{var i=r.next;r.next=r.Mk,r.Mk=i,r=r.next}while(r!==this.head);return this.qk&&this.LP(t,e,0),this},i.prototype.sort=function(){this.Yk(0,this.length,this.Ro())},i.prototype.reduce=function(e,t){for(var r=arguments[2],i=this.head,n=i.next;n!==i;)t=e.call(r,t,n.value,n,this),n=n.next;return t},i.prototype.reduceRight=function(e,t){for(var r=arguments[2],i=this.head,n=i.Mk;n!==i;)t=e.call(r,t,n.value,n,this),n=n.Mk;return t},i.prototype.Vk=function(e,t){for(;e!==this.head;)e.index=t++,e=e.next},i.prototype.xo=function(){this.head.index=-1,this.Vk(this.head.next,0),this.qk=!0},i.prototype.Ao=function(){return new n(this.head)},n.prototype.zk=null,Object.defineProperty(n.prototype,"_iterationObject",{get:function(){return this.zk||(this.zk={done:!1,value:null})}}),n.prototype.next=function(){if(this.Bk===this.head)this.Jk.done=!0,this.Jk.value=void 0;else{var e=this.Bk.value;this.Bk=this.Bk.next,this.Jk.value=e}return this.Jk},i.prototype.Node=s,s.prototype.delete=function(){this.Mk.next=this.next,this.next.Mk=this.Mk},s.prototype.jk=function(e){var t=this.Mk;this.Mk=e,e.Mk=t,t.next=e,e.next=this},s.prototype.Gk=function(e){var t=this.next;this.next=e,e.next=t,t.Mk=e,e.Mk=this}},function(e,t,r){"use strict";function i(e,t){if(!(this instanceof i))return new i(e,t);t=t||Function.he,this.le=t,this.pe=Object.create(null),this.length=0,this.addEach(e)}var n=(r(12),r(13)),s=r(48),o=r(14);e.t=i,i.Wk=i,Object.addEach(i.prototype,n.prototype),Object.addEach(i.prototype,s.prototype),Object.addEach(i.prototype,o.prototype),i.prototype.de=function(e){return new this.constructor(e,this.le)},i.prototype.Xk=function(e){if("string"!=typeof e)throw new TypeError("key must be a string but Got "+e)},Object.defineProperty(i.prototype,"$__proto__",{Ui:!0}),Object.defineProperty(i.prototype,"_hasProto",{get:function(){return this.hasOwnProperty("$__proto__")&&void 0!==this.Zk}}),Object.defineProperty(i.prototype,"_protoValue",{get:function(){return this.$k},set:function(e){this.$k=e}}),i.prototype.get=function(e,t){return this.Xk(e),"__proto__"===e?this.eO?this.Zk:arguments.length>1?t:this.le(e):e in this.pe?this.pe[e]:arguments.length>1?t:this.le(e)},i.prototype.set=function(e,t){this.Xk(e);var r="__proto__"===e;return(r?this.eO:e in this.pe)?(this.tO&&this.rO(e,r?this.Zk:this.pe[e]),r?this.Zk=t:this.pe[e]=t,this.tO&&this.iO(e,t),!1):(this.tO&&this.rO(e,void 0),this.length++,r?this.Zk=t:this.pe[e]=t,this.tO&&this.iO(e,t),!0)},i.prototype.has=function(e){return this.Xk(e),"__proto__"===e?this.eO:e in this.pe},i.prototype.delete=function(e){return this.Xk(e),"__proto__"===e?!!this.eO&&(this.tO&&this.rO(e,this.Zk),this.Zk=void 0,this.length--,this.tO&&this.iO(e,void 0),!0):e in this.pe&&(this.tO&&this.rO(e,this.pe[e]),delete this.pe[e],this.length--,this.tO&&this.iO(e,void 0),!0)},i.prototype.clear=function(){var e;this.eO&&(this.tO&&this.rO("__proto__",this.Zk),this.Zk=void 0,this.tO&&this.iO("__proto__",void 0));for(e in this.pe)this.tO&&this.rO(e,this.pe[e]),delete this.pe[e],this.tO&&this.iO(e,void 0);this.length=0},i.prototype.reduce=function(e,t,r){this.eO&&(t=e.call(r,t,"$__proto__","__proto__",this));var i=this.pe;for(var n in this.pe)t=e.call(r,t,i[n],n,this);return t},i.prototype.reduceRight=function(e,t,r){var i=this,n=this.pe;return t=Object.keys(this.pe).reduceRight(function(t,s){return e.call(r,t,n[s],s,i)},t),this.eO?e.call(r,t,this.Zk,"__proto__",i):t},i.prototype.Po=function(){var e;for(e in this.pe)return this.pe[e];return this.Zk},i.prototype.toJSON=function(){return this.vo()}},function(e,t,r){"use strict";function i(){throw new Error("Can't construct. GenericMap is a mixin.")}function n(e,t){this.key=e,this.value=t}var s=r(33),o=r(99),a=r(14);e.t=i,s.addEach(i.prototype,o.prototype),s.addEach(i.prototype,a.prototype),i.prototype.isMap=!0,i.prototype.addEach=function(e){if(e&&s(e)===e)if("function"==typeof e.forEach)!0===e.isMap?e.forEach(function(e,t){this.set(t,e)},this):e.forEach(function(e){this.set(e[0],e[1])},this);else if("number"==typeof e.length)for(var t=0;t<e.length;t++)this.add(e[t],t);else s.keys(e).forEach(function(t){this.set(t,e[t])},this);else if(e&&"number"==typeof e.length)for(var t=0;t<e.length;t++)this.add(e[t],t);return this},i.prototype.get=function(e,t){var r=this.pe.get(new this.nO(e));return r?r.value:arguments.length>1?t:this.le(e)},i.prototype.set=function(e,t){var r=new this.nO(e,t),i=this.pe.get(r),n=!1;return i?(this.tO&&this.rO(e,i.value),i.value=t,this.tO&&this.iO(e,t)):(this.tO&&this.rO(e,void 0),this.pe.add(r)&&(this.length++,n=!0),this.tO&&this.iO(e,t)),n},i.prototype.add=function(e,t){return this.set(t,e)},i.prototype.has=function(e){return this.pe.has(new this.nO(e))},i.prototype.delete=function(e){var t=new this.nO(e);if(this.pe.has(t)){var r=this.pe.get(t).value;return this.tO&&this.rO(e,r),this.pe.delete(t),this.length--,this.tO&&this.iO(e,void 0),!0}return!1},i.prototype.clear=function(){var e;this.tO&&(this.forEach(function(e,t){this.rO(t,e)},this),e=this.keys()),this.pe.clear(),this.length=0,this.tO&&e.forEach(function(e){this.iO(e)},this)},i.prototype.reduce=function(e,t,r){return this.pe.reduce(function(t,i){return e.call(r,t,i.value,i.key,this)},t,this)},i.prototype.reduceRight=function(e,t,r){return this.pe.reduceRight(function(t,i){return e.call(r,t,i.value,i.key,this)},t,this)},i.prototype.keys=function(){return this.map(function(e,t){return t})},i.prototype.values=function(){return this.map(Function.identity)},i.prototype.entries=function(){return this.map(function(e,t){return[t,e]})},i.prototype.sO=function(){return this.entries()},i.prototype.ae=function(e,t){return t=t||s.ae,this===e||(e&&"function"==typeof e.every?e.length===this.length&&e.every(function(e,r){return t(this.get(r),e)},this):s.keys(e).length===this.length&&s.keys(e).every(function(r){return t(this.get(r),e[r])},this))},i.prototype.toJSON=function(){return this.entries()},i.prototype.nO=n,n.prototype.ae=function(e){return s.ae(this.key,e.key)&&s.ae(this.value,e.value)},n.prototype.mo=function(e){return s.mo(this.key,e.key)}},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.$c="https:"===location.protocol,i.su=!0,i.oO=1e4,i.aO=6e4,t.N=i},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(65),s=r(7),o=r(66),a=r(6),h=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.mi=function(e){t.te=e},t.prototype.send=function(){if(t.te&&t.te.debug(this.method+" "+this.url),!this.sessionId){var e=Object.keys(t.EI);e.length>0&&(this.sessionId=t.EI[e[0]])}var r=this,i=new XMLHttpRequest;0===this.url.indexOf("//")&&(this.url=location.protocol+this.url);var o=s.gs(n.cO.hO,n.cO.oA,n.cO.uO,this.sessionId,encodeURIComponent(this.url));i.open("GET",o),this.responseType&&(i.responseType=this.responseType),i.onreadystatechange=function(){},i.onload=function(){if(4===i.readyState)try{r.xu=i.getAllResponseHeaders(),r.response=i.response;var e=i.response.byteLength;"arraybuffer"!==i.responseType&&(r.responseText=i.response),r.readyState=4,r.status=i.status,r.dispatchEvent(a.fn.createEvent(ProgressEvent,"progress",{lengthComputable:!0,loaded:e,total:e,currentTarget:r})),r.dispatchEvent(a.fn.createEvent(Event,"readystatechange",{currentTarget:r,bubbles:!1,cancelable:!1})),r.dispatchEvent(a.fn.createEvent(ProgressEvent,"load",{currentTarget:r,bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:e,total:0})),r.dispatchEvent(a.fn.createEvent(ProgressEvent,"loadend",{currentTarget:r,bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:e,total:0}))}catch(e){t.te&&t.te.warn(e)}},i.onerror=function(e){t.te&&t.te.warn("onError: "+JSON.stringify(e)),r.dispatchEvent(a.fn.createEvent(ErrorEvent,"error",e,r))},i.onabort=function(e){t.te&&t.te.warn("onAbort: "+JSON.stringify(e)),r.dispatchEvent(a.fn.createEvent(ProgressEvent,"abort",e,r))},i.send()},t.prototype.abort=function(){},t}(o.SI);t.In=h},function(e,t,r){var i;!function(n,s){"use strict";var o="model",a="name",h="type",c="vendor",u="version",l="mobile",p="tablet",f={extend:function(e,t){var r={};for(var i in e)t[i]&&t[i].length%2==0?r[i]=t[i].concat(e[i]):r[i]=e[i];return r},has:function(e,t){return"string"==typeof e&&-1!==t.toLowerCase().indexOf(e.toLowerCase())},lO:function(e){return e.toLowerCase()},pO:function(e){return"string"==typeof e?e.replace(/[^\d\.]/g,"").split(".")[0]:void 0},trim:function(e){return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}},d={fO:function(){for(var e,t,r,i,n,s,o,a=0,h=arguments;a<h.length&&!s;){var c=h[a],u=h[a+1];if(void 0===e){e={};for(i in u)u.hasOwnProperty(i)&&(n=u[i],"object"==typeof n?e[n[0]]=void 0:e[n]=void 0)}for(t=r=0;t<c.length&&!s;)if(s=c[t++].exec(this.dO()))for(i=0;i<u.length;i++)o=s[++r],n=u[i],"object"==typeof n&&n.length>0?2==n.length?"function"==typeof n[1]?e[n[0]]=n[1].call(this,o):e[n[0]]=n[1]:3==n.length?"function"!=typeof n[1]||n[1].exec&&n[1].test?e[n[0]]=o?o.replace(n[1],n[2]):void 0:e[n[0]]=o?n[1].call(this,o,n[2]):void 0:4==n.length&&(e[n[0]]=o?n[3].call(this,o.replace(n[1],n[2])):void 0):e[n]=o||void 0;a+=2}return e},Lg:function(e,t){for(var r in t)if("object"==typeof t[r]&&t[r].length>0){for(var i=0;i<t[r].length;i++)if(f.has(t[r][i],e))return"?"===r?void 0:r}else if(f.has(t[r],e))return"?"===r?void 0:r;return e}},g={Oa:{gO:{version:{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419",$E:"/"}}},vO:{yO:{mO:{EO:["SD","KF"]}},TO:{mO:{IO:"7373KT"},vendor:{wO:"APA",SO:"Sprint"}}},os:{RO:{version:{bO:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2000:"NT 5.0",PO:["NT 5.1","NT 5.2"],AO:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],CO:"ARM"}}}},v={Oa:[[/(opera\smini)\/([\w\.-]+)/i,/(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,/(opera).+version\/([\w\.]+)/i,/(opera)[\/\s]+([\w\.]+)/i],[a,u],[/(opios)[\/\s]+([\w\.]+)/i],[[a,"Opera Mini"],u],[/\s(opr)\/([\w\.]+)/i],[[a,"Opera"],u],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i,/(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,/(?:ms|\()(ie)\s([\w\.]+)/i,/(rekonq)\/([\w\.]+)*/i,/(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs)\/([\w\.-]+)/i],[a,u],[/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i],[[a,"IE"],u],[/(edge)\/((\d+)?[\w\.]+)/i],[a,u],[/(yabrowser)\/([\w\.]+)/i],[[a,"Yandex"],u],[/(comodo_dragon)\/([\w\.]+)/i],[[a,/_/g," "],u],[/(micromessenger)\/([\w\.]+)/i],[[a,"WeChat"],u],[/xiaomi\/miuibrowser\/([\w\.]+)/i],[u,[a,"MIUI Browser"]],[/\swv\).+(chrome)\/([\w\.]+)/i],[[a,/(.+)/,"$1 WebView"],u],[/android.+samsungbrowser\/([\w\.]+)/i,/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i],[u,[a,"Android Browser"]],[/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i,/(qqbrowser)[\/\s]?([\w\.]+)/i],[a,u],[/(uc\s?browser)[\/\s]?([\w\.]+)/i,/ucweb.+(ucbrowser)[\/\s]?([\w\.]+)/i,/juc.+(ucweb)[\/\s]?([\w\.]+)/i],[[a,"UCBrowser"],u],[/(dolfin)\/([\w\.]+)/i],[[a,"Dolphin"],u],[/((?:android.+)crmo|crios)\/([\w\.]+)/i],[[a,"Chrome"],u],[/;fbav\/([\w\.]+);/i],[u,[a,"Facebook"]],[/fxios\/([\w\.-]+)/i],[u,[a,"Firefox"]],[/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i],[u,[a,"Mobile Safari"]],[/version\/([\w\.]+).+?(mobile\s?safari|safari)/i],[u,a],[/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[a,[u,d.Lg,g.Oa.gO.version]],[/(konqueror)\/([\w\.]+)/i,/(webkit|khtml)\/([\w\.]+)/i],[a,u],[/(navigator|netscape)\/([\w\.-]+)/i],[[a,"Netscape"],u],[/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i,/(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,/(links)\s\(([\w\.]+)/i,/(gobrowser)\/?([\w\.]+)*/i,/(ice\s?browser)\/v?([\w\._]+)/i,/(mosaic)[\/\s]([\w\.]+)/i],[a,u]],kO:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],[["architecture","amd64"]],[/(ia32(?=;))/i],[["architecture",f.lO]],[/((?:i[346]|x)86)[;\)]/i],[["architecture","ia32"]],[/windows\s(ce|mobile);\sppc;/i],[["architecture","arm"]],[/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],[["architecture",/ower/,"",f.lO]],[/(sun4\w)[;\)]/i],[["architecture","sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i],[["architecture",f.lO]]],vO:[[/\((ipad|playbook);[\w\s\);-]+(rim|apple)/i],[o,c,[h,p]],[/applecoremedia\/[\w\.]+ \((ipad)/],[o,[c,"Apple"],[h,p]],[/(apple\s{0,1}tv)/i],[[o,"Apple TV"],[c,"Apple"]],[/(archos)\s(gamepad2?)/i,/(hp).+(touchpad)/i,/(hp).+(tablet)/i,/(kindle)\/([\w\.]+)/i,/\s(nook)[\w\s]+build\/(\w+)/i,/(dell)\s(strea[kpr\s\d]*[\dko])/i],[c,o,[h,p]],[/(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i],[o,[c,"Amazon"],[h,p]],[/(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i],[[o,d.Lg,g.vO.yO.mO],[c,"Amazon"],[h,l]],[/\((ip[honed|\s\w*]+);.+(apple)/i],[o,c,[h,l]],[/\((ip[honed|\s\w*]+);/i],[o,[c,"Apple"],[h,l]],[/(blackberry)[\s-]?(\w+)/i,/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|huawei|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i,/(hp)\s([\w\s]+\w)/i,/(asus)-?(\w+)/i],[c,o,[h,l]],[/\(bb10;\s(\w+)/i],[o,[c,"BlackBerry"],[h,l]],[/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)/i],[o,[c,"Asus"],[h,p]],[/(sony)\s(tablet\s[ps])\sbuild\//i,/(sony)?(?:sgp.+)\sbuild\//i],[[c,"Sony"],[o,"Xperia Tablet"],[h,p]],[/(?:sony)?(?:(?:(?:c|d)\d{4})|(?:so[-l].+))\sbuild\//i],[[c,"Sony"],[o,"Xperia Phone"],[h,l]],[/\s(ouya)\s/i,/(nintendo)\s([wids3u]+)/i],[c,o,[h,"console"]],[/android.+;\s(shield)\sbuild/i],[o,[c,"Nvidia"],[h,"console"]],[/(playstation\s[34portablevi]+)/i],[o,[c,"Sony"],[h,"console"]],[/(sprint\s(\w+))/i],[[c,d.Lg,g.vO.TO.vendor],[o,d.Lg,g.vO.TO.mO],[h,l]],[/(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i],[c,o,[h,p]],[/(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i,/(zte)-(\w+)*/i,/(alcatel|geeksphone|huawei|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i],[c,[o,/_/g," "],[h,l]],[/(nexus\s9)/i],[o,[c,"HTC"],[h,p]],[/(nexus\s6p)/i],[o,[c,"Huawei"],[h,l]],[/(microsoft);\s(lumia[\s\w]+)/i],[c,o,[h,l]],[/[\s\(;](xbox(?:\sone)?)[\s\);]/i],[o,[c,"Microsoft"],[h,"console"]],[/(kin\.[onetw]{3})/i],[[o,/\./g," "],[c,"Microsoft"],[h,l]],[/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i,/mot[\s-]?(\w+)*/i,/(XT\d{3,4}) build\//i,/(nexus\s6)/i],[o,[c,"Motorola"],[h,l]],[/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],[o,[c,"Motorola"],[h,p]],[/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],[[c,f.trim],[o,f.trim],[h,"smarttv"]],[/hbbtv.+maple;(\d+)/i],[[o,/^/,"SmartTV"],[c,"Samsung"],[h,"smarttv"]],[/\(dtv[\);].+(aquos)/i],[o,[c,"Sharp"],[h,"smarttv"]],[/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i,/((SM-T\w+))/i],[[c,"Samsung"],o,[h,p]],[/smart-tv.+(samsung)/i],[c,[h,"smarttv"],o],[/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i,/(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i,/sec-((sgh\w+))/i],[[c,"Samsung"],o,[h,l]],[/sie-(\w+)*/i],[o,[c,"Siemens"],[h,l]],[/(maemo|nokia).*(n900|lumia\s\d+)/i,/(nokia)[\s_-]?([\w-]+)*/i],[[c,"Nokia"],o,[h,l]],[/android\s3\.[\s\w;-]{10}(a\d{3})/i],[o,[c,"Acer"],[h,p]],[/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i],[[c,"LG"],o,[h,p]],[/(lg) netcast\.tv/i],[c,o,[h,"smarttv"]],[/(nexus\s[45])/i,/lg[e;\s\/-]+(\w+)*/i],[o,[c,"LG"],[h,l]],[/android.+(ideatab[a-z0-9\-\s]+)/i],[o,[c,"Lenovo"],[h,p]],[/linux;.+((jolla));/i],[c,o,[h,l]],[/((pebble))app\/[\d\.]+\s/i],[c,o,[h,"wearable"]],[/android.+;\s(glass)\s\d/i],[o,[c,"Google"],[h,"wearable"]],[/android.+(\w+)\s+build\/hm\1/i,/android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,/android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d\w)?)\s+build/i],[[o,/_/g," "],[c,"Xiaomi"],[h,l]],[/android.+a000(1)\s+build/i],[o,[c,"OnePlus"],[h,l]],[/\s(tablet)[;\/]/i,/\s(mobile)(?:[;\/]|\ssafari)/i],[[h,f.lO],c,o]],OO:[[/windows.+\sedge\/([\w\.]+)/i],[u,[a,"EdgeHTML"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i,/(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,/(icab)[\/\s]([23]\.[\d\.]+)/i],[a,u],[/rv\:([\w\.]+).*(gecko)/i],[u,a]],os:[[/microsoft\s(windows)\s(vista|xp)/i],[a,u],[/(windows)\snt\s6\.2;\s(arm)/i,/(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s]+\w)*/i,/(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i],[a,[u,d.Lg,g.os.RO.version]],[/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],[[a,"Windows"],[u,d.Lg,g.os.RO.version]],[/\((bb)(10);/i],[[a,"BlackBerry"],u],[/(blackberry)\w*\/?([\w\.]+)*/i,/(tizen)[\/\s]([\w\.]+)/i,/(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i,/linux;.+(sailfish);/i],[a,u],[/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i],[[a,"Symbian"],u],[/\((series40);/i],[a],[/mozilla.+\(mobile;.+gecko.+firefox/i],[[a,"Firefox OS"],u],[/(nintendo|playstation)\s([wids34portablevu]+)/i,/(mint)[\/\s\(]?(\w+)*/i,/(mageia|vectorlinux)[;\s]/i,/(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]+)*/i,/(hurd|linux)\s?([\w\.]+)*/i,/(gnu)\s?([\w\.]+)*/i],[a,u],[/(cros)\s[\w]+\s([\w\.]+\w)/i],[[a,"Chromium OS"],u],[/(sunos)\s?([\w\.]+\d)*/i],[[a,"Solaris"],u],[/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i],[a,u],[/(haiku)\s(\w+)/i],[a,u],[/(ip[honead]+)(?:.*os\s([\w]+)*\slike\smac|;\sopera)/i],[[a,"iOS"],[u,/_/g,"."]],[/(mac\sos\sx)\s?([\w\s\.]+\w)*/i,/(macintosh|mac(?=_powerpc)\s)/i],[[a,"Mac OS"],[u,/_/g,"."]],[/((?:open)?solaris)[\/\s-]?([\w\.]+)*/i,/(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i,/(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i,/(unix)\s?([\w\.]+)*/i],[a,u]]},y=function(e,t){if(!(this instanceof y))return new y(e,t)._O();var r=e||(n&&n.navigator&&n.navigator.userAgent?n.navigator.userAgent:""),i=t?f.extend(v,t):v;return this.NO=function(){var e=d.fO.apply(this,i.Oa);return e.pO=f.pO(e.version),e},this.DO=function(){return d.fO.apply(this,i.kO)},this.FO=function(){return d.fO.apply(this,i.vO)},this.LO=function(){return d.fO.apply(this,i.OO)},this.Uh=function(){return d.fO.apply(this,i.os)},this._O=function(){return{qf:this.dO(),Oa:this.NO(),OO:this.LO(),os:this.Uh(),vO:this.FO(),kO:this.DO()}},this.dO=function(){return r},this.Bh=function(e){return r=e,this},this};y.VERSION="0.7.12",y.MO={BO:a,UO:"major",VERSION:u},y.xO={HO:"architecture"},y.qO={VO:o,VENDOR:c,jO:h,GO:"console",QO:l,KO:"smarttv",YO:p,zO:"wearable",JO:"embedded"},y.WO={BO:a,VERSION:u},y.XO={BO:a,VERSION:u},void 0!==t?(void 0!==e&&e.t&&(t=e.t=y),t.Fa=y):r(108)?void 0!==(i=function(){return y}.call(t,r,t,e))&&(e.t=i):n.Fa=y;var m=n.ZO||n.$O;if(void 0!==m){var E=new y;m.qf=E._O(),m.qf.get=function(){return E.dO()},m.qf.set=function(e){E.Bh(e);var t=E._O();for(var r in t)m.qf[r]=t[r]}}}("object"==typeof window?window:this)},function(e,t,r){"use strict";!function(){var t=r(17),i=t.log,n=t.Da;e.t.Da=n,e.t.Ca=t.Ca,e.t.Aa=t.Aa;var s=r(120)||null,o=r(122)||null,a=r(125)||null,h=r(127)||null;switch(n.Oa){case"chrome":if(!s||!s.e_)return void i("Chrome shim is not included in this adapter release.");i("adapter.js shimming chrome."),e.t.t_=s,s.r_(),s.i_(),t._a(),s.n_(),s.e_(),s.s_(),s.o_();break;case"firefox":if(!a||!a.e_)return void i("Firefox shim is not included in this adapter release.");i("adapter.js shimming firefox."),e.t.t_=a,a.r_(),t._a(),a.n_(),a.e_(),a.s_();break;case"edge":if(!o||!o.e_)return void i("MS edge shim is not included in this adapter release.");i("adapter.js shimming edge."),e.t.t_=o,o.r_(),t._a(),o.e_();break;case"safari":if(!h)return void i("Safari shim is not included in this adapter release.");i("adapter.js shimming safari."),e.t.t_=h,h.r_();break;default:i("Unsupported browser!")}}()},function(e,t,r){"use strict";var i=r(29),n=r(2),s=r(7),o=r(128),a=o.gn.ou.a_,h=r(19),c=r(129),u=r(4),l=function(){function e(t,r){this.h_=t,this.options_=new a,void 0!==r[e.c_]&&s.vs(r[e.c_],this.options_)}return e.prototype.Fn=function(){return e.c_},e.prototype.id=function(){return"["+e.c_+"] "},e.prototype.getVersion=function(){return null},e.prototype.u_=function(){return!0},e.prototype.l_=function(){return n.resolve(!0)},e.prototype.initSession=function(e,t){var r=this.p_(e,t.ticket,t.ticket.LA(),t);return s.HiveRequestFactory.bn(r.id,this.Fn()),n.resolve(r)},e.prototype.f_=function(){return this.options().initTimeout},e.prototype.ci=function(e,t){var r=t.manifest.toLowerCase().indexOf("/manifest");if(r>-1){var i=t.manifest.substring(0,r);if(e.indexOf(i)>-1)return!0}else if(e==t.manifest)return!0;return!1},e.prototype.Nn=function(e,t,r){void 0===r&&(r=!0),e.Cn&&(this.h_.te().debug("[StatsJS] stopping session ["+e.id+"] complete close: "+t),e.Cn.Lc.dc(r),e.Cn.Fc.d_(),e.Cn.Fc.reset(t)),t?i.Hive.Reporting().close():this.On(e,!0)},e.prototype.On=function(e,t){var r=t?h._c.IDLE:h._c.Oc;this.h_.te().notice("[HiveComm] client state: "+h._c[r]),e.Cn&&e.Cn.On(r)},e.prototype.g_=function(e,t){var r=this,i=0;return this.v_<t.Ps&&(i=t.Ps-this.v_,this.v_=t.Ps),e.Ln().then(function(){e.Cn.Dc.y_(i,t.bs),e.Cn.tc.kh(t.Rs,t.bs,t.Ps),r.m_()}).done(),n.resolve(!0)},e.prototype.E_=function(e,t,r){return e.Ln().then(function(){e.Cn.tc._h(e.ticket.sessionId,t,r)}).done(),n.resolve(!0)},e.prototype.Nh=function(e,t){return e.Ln().then(function(){e.Cn.tc.Dh([t])}).done(),n.resolve(!0)},e.prototype.onError=function(e){var t=!0;if(void 0!=this.options().onError)try{t=this.options().onError(e)}catch(e){u.ErrorMonitor.gi().di("exception in user-defined onError callback",this.id(),e)}return t},e.prototype.onActiveSession=function(e){var t=this;this.T_(),e.Ln().then(function(r){t.I_=r;var i=new c.w_(t.h_.isLive(),t.h_.S_(),e.ticket.LA());t.I_.R_=i,t.I_.Dc.R_=i,t.h_.wh(t.I_),t.I_.Fc.init(t.I_.Dc,e.id),t.I_.tc.Tn(e.ticket.sessionId,t.h_.b_(),200);var n=t.h_.P_();if(n&&n.length>0&&t.I_.tc.Dh(n),void 0!=t.options_.onActiveSession)try{t.options_.onActiveSession(e.Dn())}catch(e){u.ErrorMonitor.gi().di("exception in user-defined onActiveSession callback",t.id(),e)}}).done()},e.prototype.A_=function(){},e.prototype.C_=function(){},e.prototype.k_=function(e){this.h_=e},e.prototype.options=function(){return this.options_},e.prototype.T_=function(){this.v_=0},e.prototype.p_=function(e,t,r,i){var n=new s.Bn(e,t,r,i);return n.O_=!1,n.id=t.sessionId,n},e.prototype.m_=function(){try{var e=this.h_.__();void 0!=e&&(this.I_.Dc.N_.metrics.bitrateUpN+=e.es(),this.I_.Dc.N_.metrics.bitrateDwnN+=e.rs(),null!=e.Xn()&&(this.I_.Dc.N_.metrics.srcThroughput=e.Xn()),null!=e.Zn()&&this.D_(!0,e.Zn()),null!=e.$n()&&this.D_(!1,e.$n()))}catch(e){u.ErrorMonitor.gi().di("Error accounting extended stats",this.id(),e)}},e.prototype.D_=function(e,t){var r=this,i=0,n=0,s=0,o=0;t.forEach(function(t,a){var h=t.success+t.xn;if(i+=h,o+=t.Hn,n+=t.success,s+=t.xn,e){var c=r.I_.Dc.F_(Number(a));r.L_(c,h,t.success,t.xn,t.Hn)}});var a=this.I_.Dc.M_();this.L_(a,i,n,s,o)},e.prototype.L_=function(e,t,r,i,n){e.srcReqN+=t,e.srcRespN+=r,e.srcRespErrN+=i,e.srcRespQt+=n,e.respFallbackN+=r,e.respFallbackErrN+=i},e}();l.c_="StatsJS",t.StatsJS=l},function(e,t,r){"use strict";var i=r(44),n=r(31),s=r(0),o=r(138),a=r(10),h=r(22),c=r(45),u=r(3),l=function(){function e(e){this.B_=new i,this.te=s.Framework.resolve(s.Framework.q.I).log(e.sessionId),this.wC=e.wC,this.U_=e.x_,this.H_=e.H_,this.q_=e.V_,this.q_.PC(this,this)}return e.prototype.Ak=function(){return null},e.prototype.j_=function(){return this.q_},e.prototype.G_=function(e,t){var r=0,i=0;if(this.B_.length<t)return!0;for(var n=this.B_.keys().reverse(),s=n[0],o=this.B_.get(s).bitrate,a=n.slice(1),h=0;h<a.length;h++){var c=a[h],u=this.B_.get(c),l=u.Q_,p=u.bitrate,f=Math.abs(u.Q_-s);if(p!=o)return!1;if(f<e){if(++i>=t)return!1}else{if(++r>t)return!0;i=Math.max(0,i-1),s=l,o=p}}return!1},e.prototype.K_=function(){return null},e.prototype.Y_=function(e,t){if(this.z_(t)){var r=this._C();if(r){var i=e.IR(),n=r.IR();i>n?this.U_.J_(!0):i<n&&this.U_.J_(!1)}else this.U_.J_(!0);if(this.B_.length>u.ni.mr.gr){var o=this.B_.keys()[0];this.B_.delete(o)}this.B_.set(s.Framework.time(),e)}return this.W_(e,t)},e.prototype.W_=function(e,t){var r=new o.X_;if(this.q_.CC(e.bitrate)){if(this.H_.Z_(e.zu())){r.eN=!0;var i=this.H_.tN(e.zu());this.rN(t,i,r)}if(this.H_.iN(e.zu()))for(var n=this.H_.nN(e.zu()),s=0,a=n;s<a.length;s++){var h=a[s];this.rN(t,h.Ku(),r),r.sN=!0}}else{var u=c.cC.$s;this.wC.fk()&&(u=c.cC.aC),this.q_.LC(e.bitrate,u,u)}return r},e.prototype.rN=function(e,t,r){e!=h.Tu.vu&&e!=h.Tu.Eu||t!=h.Tu.du&&t!=h.Tu.Eu&&t!=h.Tu.vu||(r.oN=!0)},e.prototype.z_=function(e){return e!=h.Tu.Eu&&e!=h.Tu.vu},e.prototype.aN=function(e,t,r){for(var i=[],n=this.H_.nN(t.zu()),s=0,o=n;s<o.length;s++){var a=o[s];a.Ku()!=h.Tu.du&&(this.q_.Ok(a,e),i.push(a._k))}return i},e.prototype.hN=function(e){this.H_.hN(e)},e.prototype.cN=function(e,t){this.H_.cN(e,t)},e.prototype.uN=function(e){this.H_.uN(e)},e.prototype.lN=function(e){this.H_.pN(e)},e.prototype.fN=function(e){this.H_.dN()||this.q_.VC(e)},e.prototype._C=function(){var e=this.B_.keys();return e.length>0?this.B_.get(e[e.length-1]):null},e.prototype.gN=function(){var e=this.B_.keys();if(e.length>0)return e[e.length-1]},e.prototype.vN=function(e){var t=this.yN(e);null!=t&&this.fN(t.bitrate)},e.prototype.yN=function(e){var t=e.mN,r=t.slice(0,t.lastIndexOf("-")),i=r.slice(0,r.lastIndexOf("-")),s=e.EN();return new n.SR(i,s,!0,e.id,e.duration,e.bitrate,!0,this.K_())},e.prototype.lk=function(){return!1},e.prototype.yk=function(e,t,r,i){return 0},e.prototype.vk=function(){return 3e4},e.prototype.TN=function(){return 1e4},e.prototype.ck=function(e){return null},e.prototype.KC=function(e,t,r){return null},e.prototype.S_=function(){return null},e.prototype.isLive=function(){return!1},e.prototype.sk=function(e){},e.prototype.IN=function(){},e.prototype.wN=function(){return null},e.prototype.SN=function(e){},e.prototype.RN=function(){},e.prototype.bN=function(e){},e.prototype.PN=function(e){},e.prototype.AN=function(e){e.Yu()===a.Ws.Ys&&this.cN(e.zu(),e.Ju())},e.prototype.CN=function(){return null},e.prototype.kN=function(e){},e.prototype.gk=function(e,t){return 0},e}();t.ON=l},function(e,t,r){"use strict";function i(e,t,r,s){if(!(this instanceof i))return new i(e,t,r,s);n.call(this,e,t,r,s)}e.t=i;var n=(r(12),r(139)),s=r(36),o=r(14);i._N=i,i.prototype=Object.create(n.prototype),i.prototype.constructor=i,Object.addEach(i.prototype,s.prototype),Object.addEach(i.prototype,o.prototype),i.prototype.NN=!0,i.prototype.add=function(e){return!this.has(e)&&(n.prototype.add.call(this,e),!0)},i.prototype.reduce=function(e,t){var r=this,i=arguments[2];return this.fg.reduce(function(t,n,s){return e.call(i,t,n,s,r)},t)},i.prototype.reduceRight=function(e,t){var r=this,i=arguments[2];return this.fg.reduceRight(function(t,n,s){return e.call(i,t,n,s,r)},t)}},function(e,t,r){var i=r(30);"undefined"==typeof hive&&(hive={}),void 0===hive.DN&&(hive.DN={}),void 0===hive.DN.protocol&&(hive.DN.protocol={}),void 0===hive.DN.protocol.FN&&(hive.DN.protocol.FN={}),hive.DN.protocol.FN.io={1:"PLAYER",$s:1,2:"P2P_AGENT",eo:2,3:"PREFETCHER_FIRST_TIER",to:3,4:"PREFETCHER_SECOND_TIER",ro:4},hive.DN.protocol.FN.LN={1:"Global",MN:1,2:"InternalAs",BN:2,3:"ExternalAs",UN:3},hive.DN.protocol.FN.xN={1:"Internal",HN:1,2:"External",External:2},hive.DN.protocol.FN.no=function(e){this.state=null,this.bitrate=null,this.delta=null,e&&(void 0!==e.state&&(this.state=e.state),void 0!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.delta&&(this.delta=e.delta))},hive.DN.protocol.FN.no.prototype={},hive.DN.protocol.FN.no.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.state=e.gw().value:e.dw(r);break;case 2:r==i.bI.NI?this.bitrate=e.gw().value:e.dw(r);break;case 3:r==i.bI.NI?this.delta=e.gw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.no.prototype.write=function(e){e.mw("TrackerPeerStreamInfo"),null!==this.state&&void 0!==this.state&&(e.Ew("state",i.bI.NI,1),e.ww(this.state),e.Iw()),null!==this.bitrate&&void 0!==this.bitrate&&(e.Ew("bitrate",i.bI.NI,2),e.ww(this.bitrate),e.Iw()),null!==this.delta&&void 0!==this.delta&&(e.Ew("delta",i.bI.NI,3),e.ww(this.delta),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.qN=function(e){this.guid=null,this.internalAs=null,this.externalAs=null,this.oo=null,this.bandwidth=null,this.ao=null,this.privateIp=null,this.publicIp=null,this.ho=null,this.co=null,this.timestamp=null,this.lo=null,this.uo=null,e&&(void 0!==e.guid&&(this.guid=e.guid),void 0!==e.internalAs&&(this.internalAs=e.internalAs),void 0!==e.externalAs&&(this.externalAs=e.externalAs),void 0!==e.oo&&(this.oo=e.oo),void 0!==e.bandwidth&&(this.bandwidth=e.bandwidth),void 0!==e.ao&&(this.ao=e.ao),void 0!==e.privateIp&&(this.privateIp=e.privateIp),void 0!==e.publicIp&&(this.publicIp=e.publicIp),void 0!==e.ho&&(this.ho=e.ho),void 0!==e.co&&(this.co=e.co),void 0!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.lo&&(this.lo=e.lo),void 0!==e.uo&&(this.uo=e.uo))},hive.DN.protocol.FN.qN.prototype={},hive.DN.protocol.FN.qN.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.FI?this.guid=e.oR().value:e.dw(r);break;case 2:r==i.bI.NI?this.internalAs=e.gw().value:e.dw(r);break;case 3:r==i.bI.NI?this.externalAs=e.gw().value:e.dw(r);break;case 4:r==i.bI.NI?this.oo=e.gw().value:e.dw(r);break;case 5:r==i.bI.NI?this.bandwidth=e.gw().value:e.dw(r);break;case 6:r==i.bI.NI?this.ao=e.gw().value:e.dw(r);break;case 7:r==i.bI.MI?(this.privateIp=new InetAddress,this.privateIp.read(e)):e.dw(r);break;case 8:r==i.bI.MI?(this.publicIp=new InetAddress,this.publicIp.read(e)):e.dw(r);break;case 9:if(r==i.bI.xI){var s,o=0;this.ho=[];s=e.WS(),s.XS,o=s.size;for(var a=0;a<o;++a){var h=null;h=new hive.DN.protocol.FN.no,h.read(e),this.ho.push(h)}e.ZS()}else e.dw(r);break;case 10:r==i.bI.OI?this.co=e.sR().value:e.dw(r);break;case 11:r==i.bI.DI?this.timestamp=e.nR().value:e.dw(r);break;case 12:r==i.bI.FI?this.lo=e.fw().value:e.dw(r);break;case 13:r==i.bI.FI?this.uo=e.fw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.qN.prototype.write=function(e){if(e.mw("TrackerPeerInfo"),null!==this.guid&&void 0!==this.guid&&(e.Ew("guid",i.bI.FI,1),e.MS(this.guid),e.Iw()),null!==this.internalAs&&void 0!==this.internalAs&&(e.Ew("internalAs",i.bI.NI,2),e.ww(this.internalAs),e.Iw()),null!==this.externalAs&&void 0!==this.externalAs&&(e.Ew("externalAs",i.bI.NI,3),e.ww(this.externalAs),e.Iw()),null!==this.oo&&void 0!==this.oo&&(e.Ew("nat",i.bI.NI,4),e.ww(this.oo),e.Iw()),null!==this.bandwidth&&void 0!==this.bandwidth&&(e.Ew("bandwidth",i.bI.NI,5),e.ww(this.bandwidth),e.Iw()),null!==this.ao&&void 0!==this.ao&&(e.Ew("watchingBitrate",i.bI.NI,6),e.ww(this.ao),e.Iw()),null!==this.privateIp&&void 0!==this.privateIp&&(e.Ew("privateIp",i.bI.MI,7),this.privateIp.write(e),e.Iw()),null!==this.publicIp&&void 0!==this.publicIp&&(e.Ew("publicIp",i.bI.MI,8),this.publicIp.write(e),e.Iw()),null!==this.ho&&void 0!==this.ho){e.Ew("streams",i.bI.xI,9),e.PS(i.bI.MI,this.ho.length);for(var t in this.ho)this.ho.hasOwnProperty(t)&&(t=this.ho[t],t.write(e));e.CS(),e.Iw()}null!==this.co&&void 0!==this.co&&(e.Ew("rankValue",i.bI.OI,10),e.LS(this.co),e.Iw()),null!==this.timestamp&&void 0!==this.timestamp&&(e.Ew("timestamp",i.bI.DI,11),e.FS(this.timestamp),e.Iw()),null!==this.lo&&void 0!==this.lo&&(e.Ew("publicIpString",i.bI.FI,12),e.Tw(this.lo),e.Iw()),null!==this.uo&&void 0!==this.uo&&(e.Ew("privateIpString",i.bI.FI,13),e.Tw(this.uo),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.VN=function(e){this.partnerId=null,this.customerId=null,e&&(void 0!==e.partnerId&&(this.partnerId=e.partnerId),void 0!==e.customerId&&(this.customerId=e.customerId))},hive.DN.protocol.FN.VN.prototype={},hive.DN.protocol.FN.VN.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.FI?this.partnerId=e.fw().value:e.dw(r);break;case 2:r==i.bI.FI?this.customerId=e.fw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.VN.prototype.write=function(e){e.mw("CustomerKey"),null!==this.partnerId&&void 0!==this.partnerId&&(e.Ew("partnerId",i.bI.FI,1),e.Tw(this.partnerId),e.Iw()),null!==this.customerId&&void 0!==this.customerId&&(e.Ew("customerId",i.bI.FI,2),e.Tw(this.customerId),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.jN=function(e){this.GN=null,this.QN=null,e&&(void 0!==e.GN&&(this.GN=e.GN),void 0!==e.QN&&(this.QN=e.QN))},hive.DN.protocol.FN.jN.prototype={},hive.DN.protocol.FN.jN.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.GN=e.gw().value:e.dw(r);break;case 2:r==i.bI.NI?this.QN=e.gw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.jN.prototype.write=function(e){e.mw("TrackerAsQuery"),null!==this.GN&&void 0!==this.GN&&(e.Ew("asType",i.bI.NI,1),e.ww(this.GN),e.Iw()),null!==this.QN&&void 0!==this.QN&&(e.Ew("asn",i.bI.NI,2),e.ww(this.QN),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.KN=function(e){this.bitrate=null,this.QN=null,this.YN=null,e&&(void 0!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.QN&&(this.QN=e.QN),void 0!==e.YN&&(this.YN=e.YN))},hive.DN.protocol.FN.KN.prototype={},hive.DN.protocol.FN.KN.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.bitrate=e.gw().value:e.dw(r);break;case 2:r==i.bI.MI?(this.QN=new hive.DN.protocol.FN.jN,this.QN.read(e)):e.dw(r);break;case 3:r==i.bI.NI?this.YN=e.gw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.KN.prototype.write=function(e){e.mw("TrackerBitrateQuery"),null!==this.bitrate&&void 0!==this.bitrate&&(e.Ew("bitrate",i.bI.NI,1),e.ww(this.bitrate),e.Iw()),null!==this.QN&&void 0!==this.QN&&(e.Ew("asn",i.bI.MI,2),this.QN.write(e),e.Iw()),null!==this.YN&&void 0!==this.YN&&(e.Ew("streamState",i.bI.NI,3),e.ww(this.YN),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.zN=function(e){this.JN=null,this.WN=null,e&&(void 0!==e.JN&&(this.JN=e.JN),void 0!==e.WN&&(this.WN=e.WN))},hive.DN.protocol.FN.zN.prototype={},hive.DN.protocol.FN.zN.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.JN=e.gw().value:e.dw(r);break;case 2:r==i.bI.MI?(this.WN=new hive.DN.protocol.FN.jN,this.WN.read(e)):e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.zN.prototype.write=function(e){e.mw("TrackerRankQuery"),null!==this.JN&&void 0!==this.JN&&(e.Ew("rankType",i.bI.NI,1),e.ww(this.JN),e.Iw()),null!==this.WN&&void 0!==this.WN&&(e.Ew("asQuery",i.bI.MI,2),this.WN.write(e),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.XN=function(e){this.random=null,this.ZN=null,this.$N=null,this.eD=null,this.tD=null,e&&(void 0!==e.random&&(this.random=e.random),void 0!==e.ZN&&(this.ZN=e.ZN),void 0!==e.$N&&(this.$N=e.$N),void 0!==e.eD&&(this.eD=e.eD),void 0!==e.tD&&(this.tD=e.tD))},hive.DN.protocol.FN.XN.prototype={},hive.DN.protocol.FN.XN.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.random=e.gw().value:e.dw(r);break;case 2:if(r==i.bI.BI){var s,o=0;this.ZN={};s=e.KS(),s.YS,s.zS,o=s.size;for(var a=0;a<o;++a){a>0&&e.US.length>e.Cw[e.Cw.length-1]+1&&e.US.pop();var h=null,c=null;h=new hive.DN.protocol.FN.jN,h.read(e),c=e.gw().value,this.ZN[h]=c}e.JS()}else e.dw(r);break;case 3:if(r==i.bI.BI){var u,l=0;this.$N={};u=e.KS(),u.YS,u.zS,l=u.size;for(var p=0;p<l;++p){p>0&&e.US.length>e.Cw[e.Cw.length-1]+1&&e.US.pop();var f=null,d=null;f=new hive.DN.protocol.FN.KN,f.read(e),d=e.gw().value,this.$N[f]=d}e.JS()}else e.dw(r);break;case 4:if(r==i.bI.BI){var g,v=0;this.eD={};g=e.KS(),g.YS,g.zS,v=g.size;for(var y=0;y<v;++y){y>0&&e.US.length>e.Cw[e.Cw.length-1]+1&&e.US.pop();var m=null,E=null;m=new hive.DN.protocol.FN.KN,m.read(e),E=e.gw().value,this.eD[m]=E}e.JS()}else e.dw(r);break;case 5:if(r==i.bI.xI){var T,I=0;this.tD=[];T=e.WS(),T.XS,I=T.size;for(var w=0;w<I;++w){var S=null;S=e.gw().value,this.tD.push(S)}e.ZS()}else e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.XN.prototype.write=function(e){if(e.mw("TrackerQuery"),null!==this.random&&void 0!==this.random&&(e.Ew("random",i.bI.NI,1),e.ww(this.random),e.Iw()),null!==this.ZN&&void 0!==this.ZN){e.Ew("asns",i.bI.BI,2),e.RS(i.bI.MI,i.bI.NI,i.YI(this.ZN));for(var t=0;t<this.ZN.length;t++){var r=this.ZN[t],n=r.key,s=r.value;n.write(e),e.ww(s)}e.bS(),e.Iw()}if(null!==this.$N&&void 0!==this.$N){e.Ew("watchers",i.bI.BI,3),e.RS(i.bI.MI,i.bI.NI,i.YI(this.$N));for(var t=0;t<this.$N.length;t++){var r=this.$N[t],o=r.key,a=r.value;o.write(e),e.ww(a)}e.bS(),e.Iw()}if(null!==this.eD&&void 0!==this.eD){e.Ew("streamers",i.bI.BI,4),e.RS(i.bI.MI,i.bI.NI,i.YI(this.eD));for(var t=0;t<this.eD.length;t++){var r=this.eD[t],h=r.key,c=r.value;h.write(e),e.ww(c)}e.bS(),e.Iw()}if(null!==this.tD&&void 0!==this.tD){e.Ew("rankings",i.bI.xI,5),e.PS(i.bI.NI,this.tD.length);for(var u in this.tD)this.tD.hasOwnProperty(u)&&(u=this.tD[u],e.ww(u));e.CS(),e.Iw()}e.Sw(),e.Rw()},hive.DN.protocol.FN.rD=function(e){this.JN=null,this.internalAs=null,this.externalAs=null,e&&(void 0!==e.JN&&(this.JN=e.JN),void 0!==e.internalAs&&(this.internalAs=e.internalAs),void 0!==e.externalAs&&(this.externalAs=e.externalAs))},hive.DN.protocol.FN.rD.prototype={},hive.DN.protocol.FN.rD.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.JN=e.gw().value:e.dw(r);break;case 2:r==i.bI.NI?this.internalAs=e.gw().value:e.dw(r);break;case 3:r==i.bI.NI?this.externalAs=e.gw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.rD.prototype.write=function(e){e.mw("TrackerPeerRankingKey"),null!==this.JN&&void 0!==this.JN&&(e.Ew("rankType",i.bI.NI,1),e.ww(this.JN),e.Iw()),null!==this.internalAs&&void 0!==this.internalAs&&(e.Ew("internalAs",i.bI.NI,2),e.ww(this.internalAs),e.Iw()),null!==this.externalAs&&void 0!==this.externalAs&&(e.Ew("externalAs",i.bI.NI,3),e.ww(this.externalAs),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.iD=function(e){this.key=null,this.nD=null,this.sD=null,this.oD=null,this.aD=null,e&&(void 0!==e.key&&(this.key=e.key),void 0!==e.nD&&(this.nD=e.nD),void 0!==e.sD&&(this.sD=e.sD),void 0!==e.oD&&(this.oD=e.oD),void 0!==e.aD&&(this.aD=e.aD))},hive.DN.protocol.FN.iD.prototype={},hive.DN.protocol.FN.iD.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.MI?(this.key=new hive.DN.protocol.FN.rD,this.key.read(e)):e.dw(r);break;case 2:r==i.bI.NI?this.nD=e.gw().value:e.dw(r);break;case 3:r==i.bI.NI?this.sD=e.gw().value:e.dw(r);break;case 4:r==i.bI.OI?this.oD=e.sR().value:e.dw(r);break;case 5:r==i.bI.OI?this.aD=e.sR().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.iD.prototype.write=function(e){e.mw("TrackerPeerRanking"),null!==this.key&&void 0!==this.key&&(e.Ew("key",i.bI.MI,1),this.key.write(e),e.Iw()),null!==this.nD&&void 0!==this.nD&&(e.Ew("ranking",i.bI.NI,2),e.ww(this.nD),e.Iw()),null!==this.sD&&void 0!==this.sD&&(e.Ew("groupSize",i.bI.NI,3),e.ww(this.sD),e.Iw()),null!==this.oD&&void 0!==this.oD&&(e.Ew("cumulatedRankValue",i.bI.OI,4),e.LS(this.oD),e.Iw()),null!==this.aD&&void 0!==this.aD&&(e.Ew("totalOfRankValues",i.bI.OI,5),e.LS(this.aD),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.hD=function(e){this.info=null,this.contentId=null,this.dn=null,this.streamType=null,this.sessionId=null,this.cD=null,e&&(void 0!==e.info&&(this.info=e.info),void 0!==e.contentId&&(this.contentId=e.contentId),void 0!==e.dn&&(this.dn=e.dn),void 0!==e.streamType&&(this.streamType=e.streamType),void 0!==e.sessionId&&(this.sessionId=e.sessionId),void 0!==e.cD&&(this.cD=e.cD))},hive.DN.protocol.FN.hD.prototype={},hive.DN.protocol.FN.hD.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.MI?(this.info=new hive.DN.protocol.FN.qN,this.info.read(e)):e.dw(r);break;case 2:r==i.bI.FI?this.contentId=e.fw().value:e.dw(r);break;case 3:r==i.bI.MI?(this.dn=new hive.DN.protocol.FN.XN,this.dn.read(e)):e.dw(r);break;case 4:r==i.bI.NI?this.streamType=e.gw().value:e.dw(r);break;case 5:r==i.bI.FI?this.sessionId=e.fw().value:e.dw(r);break;case 6:r==i.bI.MI?(this.cD=new hive.DN.protocol.FN.VN,this.cD.read(e)):e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.hD.prototype.write=function(e){e.mw("TrackerRequest"),null!==this.info&&void 0!==this.info&&(e.Ew("info",i.bI.MI,1),this.info.write(e),e.Iw()),null!==this.contentId&&void 0!==this.contentId&&(e.Ew("contentId",i.bI.FI,2),e.Tw(this.contentId),e.Iw()),null!==this.dn&&void 0!==this.dn&&(e.Ew("query",i.bI.MI,3),this.dn.write(e),e.Iw()),null!==this.streamType&&void 0!==this.streamType&&(e.Ew("streamType",i.bI.NI,4),e.ww(this.streamType),e.Iw()),null!==this.sessionId&&void 0!==this.sessionId&&(e.Ew("sessionId",i.bI.FI,5),e.Tw(this.sessionId),e.Iw()),null!==this.cD&&void 0!==this.cD&&(e.Ew("customerKey",i.bI.MI,6),this.cD.write(e),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.uD=function(e){this.lD=null,this.tD=null,this.Tk=null,this.sessionId=null,e&&(void 0!==e.lD&&(this.lD=e.lD),void 0!==e.tD&&(this.tD=e.tD),void 0!==e.Tk&&(this.Tk=e.Tk),void 0!==e.sessionId&&(this.sessionId=e.sessionId))},hive.DN.protocol.FN.uD.prototype={},hive.DN.protocol.FN.uD.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:if(r==i.bI.xI){var s,o=0;this.lD=[];s=e.WS(),s.XS,o=s.size;for(var a=0;a<o;++a){var h=null;h=new hive.DN.protocol.FN.qN,h.read(e),this.lD.push(h)}e.ZS()}else e.dw(r);break;case 2:if(r==i.bI.xI){var c,u=0;this.tD=[];c=e.WS(),c.XS,u=c.size;for(var l=0;l<u;++l){var p=null;p=new hive.DN.protocol.FN.iD,p.read(e),this.tD.push(p)}e.ZS()}else e.dw(r);break;case 3:r==i.bI.MI?(this.Tk=new hive.DN.protocol.FN.qN,this.Tk.read(e)):e.dw(r);break;case 4:r==i.bI.FI?this.sessionId=e.fw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.uD.prototype.write=function(e){if(e.mw("TrackerResponse"),null!==this.lD&&void 0!==this.lD){e.Ew("infos",i.bI.xI,1),e.PS(i.bI.MI,this.lD.length);for(var t in this.lD)this.lD.hasOwnProperty(t)&&(t=this.lD[t],t.write(e));e.CS(),e.Iw()}if(null!==this.tD&&void 0!==this.tD){e.Ew("rankings",i.bI.xI,2),e.PS(i.bI.MI,this.tD.length);for(var r in this.tD)this.tD.hasOwnProperty(r)&&(r=this.tD[r],r.write(e));e.CS(),e.Iw()}null!==this.Tk&&void 0!==this.Tk&&(e.Ew("peerInfo",i.bI.MI,3),this.Tk.write(e),e.Iw()),null!==this.sessionId&&void 0!==this.sessionId&&(e.Ew("sessionId",i.bI.FI,4),e.Tw(this.sessionId),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.pD=function(e){this.timestamp=null,this.contentId=null,this.GN=null,this.QN=null,this.bitrate=null,this.YN=null,this.JN=null,e&&(void 0!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.contentId&&(this.contentId=e.contentId),void 0!==e.GN&&(this.GN=e.GN),void 0!==e.QN&&(this.QN=e.QN),void 0!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.YN&&(this.YN=e.YN),void 0!==e.JN&&(this.JN=e.JN))},hive.DN.protocol.FN.pD.prototype={},hive.DN.protocol.FN.pD.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.timestamp=e.gw().value:e.dw(r);break;case 2:r==i.bI.FI?this.contentId=e.fw().value:e.dw(r);break;case 3:r==i.bI.NI?this.GN=e.gw().value:e.dw(r);break;case 4:r==i.bI.NI?this.QN=e.gw().value:e.dw(r);break;case 5:r==i.bI.NI?this.bitrate=e.gw().value:e.dw(r);break;case 6:r==i.bI.NI?this.YN=e.gw().value:e.dw(r);break;case 7:r==i.bI.NI?this.JN=e.gw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.pD.prototype.write=function(e){e.mw("TrackerStoreIndexKey"),null!==this.timestamp&&void 0!==this.timestamp&&(e.Ew("timestamp",i.bI.NI,1),e.ww(this.timestamp),e.Iw()),null!==this.contentId&&void 0!==this.contentId&&(e.Ew("contentId",i.bI.FI,2),e.Tw(this.contentId),e.Iw()),null!==this.GN&&void 0!==this.GN&&(e.Ew("asType",i.bI.NI,3),e.ww(this.GN),e.Iw()),null!==this.QN&&void 0!==this.QN&&(e.Ew("asn",i.bI.NI,4),e.ww(this.QN),e.Iw()),null!==this.bitrate&&void 0!==this.bitrate&&(e.Ew("bitrate",i.bI.NI,5),e.ww(this.bitrate),e.Iw()),null!==this.YN&&void 0!==this.YN&&(e.Ew("streamState",i.bI.NI,6),e.ww(this.YN),e.Iw()),null!==this.JN&&void 0!==this.JN&&(e.Ew("rankType",i.bI.NI,7),e.ww(this.JN),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.fD=function(e){this.guid=null,this.dD=null,this.key=null,e&&(void 0!==e.guid&&(this.guid=e.guid),void 0!==e.dD&&(this.dD=e.dD),void 0!==e.key&&(this.key=e.key))},hive.DN.protocol.FN.fD.prototype={},hive.DN.protocol.FN.fD.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.FI?this.guid=e.oR().value:e.dw(r);break;case 2:r==i.bI.OI?this.dD=e.sR().value:e.dw(r);break;case 3:r==i.bI.MI?(this.key=new hive.DN.protocol.FN.rD,this.key.read(e)):e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.fD.prototype.write=function(e){e.mw("TrackerStoreRankPeer"),null!==this.guid&&void 0!==this.guid&&(e.Ew("guid",i.bI.FI,1),e.MS(this.guid),e.Iw()),null!==this.dD&&void 0!==this.dD&&(e.Ew("rank",i.bI.OI,2),e.LS(this.dD),e.Iw()),null!==this.key&&void 0!==this.key&&(e.Ew("key",i.bI.MI,3),this.key.write(e),e.Iw()),e.Sw(),e.Rw()},hive.DN.protocol.FN.gD=function(e){this.timestamp=null,this.TI=null,e&&(void 0!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.TI&&(this.TI=e.TI))},hive.DN.protocol.FN.gD.prototype={},hive.DN.protocol.FN.gD.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.DI?this.timestamp=e.nR().value:e.dw(r);break;case 2:r==i.bI.MI?(this.TI=new hive.DN.protocol.FN.hD,this.TI.read(e)):e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.DN.protocol.FN.gD.prototype.write=function(e){e.mw("TrackerRequestQueueMessage"),null!==this.timestamp&&void 0!==this.timestamp&&(e.Ew("timestamp",i.bI.DI,1),e.FS(this.timestamp),e.Iw()),null!==this.TI&&void 0!==this.TI&&(e.Ew("request",i.bI.MI,2),this.TI.write(e),e.Iw()),e.Sw(),e.Rw()}},function(e,t,r){"use strict";var i=r(4),n=function(){function e(e,t,r){this.start=e,this.end=t,this.total=r}return e.prototype.size=function(){var e=this.end-this.start+1;return Number.isInteger(e)||(i.ErrorMonitor.gi().di("Segment Size is a Float",{size:e}),e=Math.round(e)),0==this.end&&0==this.start?0:e},e.prototype.vD=function(){return 0==this.start&&(this.end==this.total-1||this.end==this.total&&0==this.total)},e.prototype.yD=function(){return this.end==this.total-1||this.end==this.total&&0==this.total},e.prototype.mD=function(e){return e.start<=this.start&&this.start<=e.end},e.prototype.toString=function(){return"R[S="+this.start+",E="+this.end+",T="+this.total+"]"},e}();t.ED=n;var s=function(){function e(){}return e.TD=function(e){return e.split("-")},e.ID=function(e){var t=e.split("=",4),r=t[1].substr(0,t[1].indexOf(",")),i=t[2].substr(0,t[2].indexOf(",")),s=t[3].substr(0,t[3].indexOf("]"));return new n(+r,+i,+s)},e}();t.wD=s},function(e,t){e.t=function(e){return e.SD||(e.RD=function(){},e.bD=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{l:!0,get:function(){return e.s}}),Object.defineProperty(e,"id",{l:!0,get:function(){return e.i}}),e.SD=1),e}},function(e,t){function r(e,t){for(var r=0,i=e.length-1;i>=0;i--){var n=e[i];"."===n?e.splice(i,1):".."===n?(e.splice(i,1),r++):r&&(e.splice(i,1),r--)}if(t)for(;r--;r)e.unshift("..");return e}function i(e,t){if(e.filter)return e.filter(t);for(var r=[],i=0;i<e.length;i++)t(e[i],i,e)&&r.push(e[i]);return r}var n=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,s=function(e){return n.exec(e).slice(1)};t.resolve=function(){for(var e="",t=!1,n=arguments.length-1;n>=-1&&!t;n--){var s=n>=0?arguments[n]:process.PD();if("string"!=typeof s)throw new TypeError("Arguments to path.resolve must be strings");s&&(e=s+"/"+e,t="/"===s.charAt(0))}return e=r(i(e.split("/"),function(e){return!!e}),!t).join("/"),(t?"/":"")+e||"."},t.normalize=function(e){var n=t.AD(e),s="/"===o(e,-1);return e=r(i(e.split("/"),function(e){return!!e}),!n).join("/"),e||n||(e="."),e&&s&&(e+="/"),(n?"/":"")+e},t.AD=function(e){return"/"===e.charAt(0)},t.join=function(){var e=Array.prototype.slice.call(arguments,0);return t.normalize(i(e,function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e}).join("/"))},t.CD=function(e,r){function i(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;r>=0&&""===e[r];r--);return t>r?[]:e.slice(t,r-t+1)}e=t.resolve(e).substr(1),r=t.resolve(r).substr(1);for(var n=i(e.split("/")),s=i(r.split("/")),o=Math.min(n.length,s.length),a=o,h=0;h<o;h++)if(n[h]!==s[h]){a=h;break}for(var c=[],h=a;h<n.length;h++)c.push("..");return c=c.concat(s.slice(a)),c.join("/")},t.kD="/",t.OD=":",t._D=function(e){var t=s(e),r=t[0],i=t[1];return r||i?(i&&(i=i.substr(0,i.length-1)),r+i):"."},t.ND=function(e,t){var r=s(e)[2];return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},t.DD=function(e){return s(e)[3]};var o="b"==="ab".substr(-1)?function(e,t,r){return e.substr(t,r)}:function(e,t,r){return t<0&&(t=e.length+t),e.substr(t,r)}},function(e,t,r){"use strict";function i(e,t){Array.prototype[e]||Object.defineProperty(Array.prototype,e,{value:t,Ui:!0,u:!0,l:!1})}function n(e,t,r){this.fg=e,this.start=null==t?0:t,this.end=r}var s=(r(61),r(13)),o=r(62),a=r(34);e.t=Array;var h=Array.prototype.splice,c=Array.prototype.slice;Array.empty=[],Object.freeze&&Object.freeze(Array.empty),Array.from=function(e){var t=[];return t.addEach(e),t},Array.So=function(e){for(var t=[],r=1/0,i=0;i<e.length;i++){var n=e[i];e[i]=n.toArray(),n.length<r&&(r=n.length)}for(var i=0;i<e.length;i++)for(var n=e[i],s=0;s<n.length;s++)s<r&&s in n&&(t[s]=t[s]||[],t[s][i]=n[s]);return t},i("addEach",s.prototype.addEach),i("deleteEach",s.prototype.do),i("toArray",s.prototype.toArray),i("toObject",s.prototype.vo),i("all",s.prototype.all),i("any",s.prototype.ht),i("min",s.prototype.min),i("max",s.prototype.max),i("sum",s.prototype.Eo),i("average",s.prototype.To),i("only",s.prototype.only),i("flatten",s.prototype.Io),i("zip",s.prototype.wo),i("enumerate",s.prototype.enumerate),i("group",s.prototype.group),i("sorted",s.prototype.Ro),i("reversed",s.prototype.reversed),i("constructClone",function(e){var t=new this.constructor;return t.addEach(e),t}),i("has",function(e,t){return-1!==this.find(e,t)}),i("set",function(e,t){return this[e]=t,!0}),i("add",function(e){return this.push(e),!0}),i("delete",function(e,t){var r=this.find(e,t);return-1!==r&&(this.splice(r,1),!0)}),i("deleteAll",function(e,t){t=t||this.ce||Object.ae;for(var r=0,i=0;i<this.length;)t(e,this[i])?(this.Yk(i,1),r++):i++;return r}),i("find",function(e,t){t=t||this.ce||Object.ae;for(var r=0;r<this.length;r++)if(r in this&&t(e,this[r]))return r;return-1}),i("findLast",function(e,t){t=t||this.ce||Object.ae;var r=this.length;do{if(--r in this&&t(this[r],e))return r}while(r>0);return-1}),i("swap",function(e,t,r){var i,n,s,o,a;if(e>this.length&&(this.length=e),void 0!==r){if(i=[e,t],Array.isArray(r)||(r=c.call(r)),s=0,(n=r.length)<1e3){for(s;s<n;s++)i[s+2]=r[s];return h.apply(this,i)}for(a=h.apply(this,i),s;s<n;){for(i=[e+s,0],o=2;o<1002&&s<n;o++,s++)i[o]=r[s];h.apply(this,i)}return a}return void 0!==t?h.call(this,e,t):void 0!==e?h.call(this,e):[]}),i("peek",function(){return this[0]}),i("poke",function(e){this.length>0&&(this[0]=e)}),i("peekBack",function(){if(this.length>0)return this[this.length-1]}),i("pokeBack",function(e){this.length>0&&(this[this.length-1]=e)}),i("one",function(){for(var e in this)if(Object.SP(this,e))return this[e]}),Array.prototype.clear||i("clear",function(){return this.length=0,this}),i("compare",function(e,t){t=t||Object.mo;var r,i,n,s,a;if(this===e)return 0;if(!e||!Array.isArray(e))return o.prototype.mo.call(this,e,t);for(i=Math.min(this.length,e.length),r=0;r<i;r++)if(r in this){if(!(r in e))return-1;if(n=this[r],s=e[r],a=t(n,s))return a}else if(r in e)return 1;return this.length-e.length}),i("equals",function(e,t){t=t||Object.ae;var r,i,n=0,s=this.length;if(this===e)return!0;if(!e||!Array.isArray(e))return o.prototype.ae.call(this,e);if(s!==e.length)return!1;for(;n<s;++n)if(n in this){if(!(n in e))return!1;if(r=this[n],i=e[n],!t(r,i))return!1}else if(n in e)return!1;return!0}),i("clone",function(e,t){if(null==e)e=1/0;else if(0===e)return this;if(t=t||new a,t.has(this))return t.get(this);var r=new Array(this.length);t.set(this,r);for(var i in this)r[i]=Object.clone(this[i],e-1,t);return r}),i("iterate",function(e,t){return new n(this,e,t)}),i("Iterator",n),n.prototype.zk=null,Object.defineProperty(n.prototype,"_iterationObject",{get:function(){return this.zk||(this.zk={done:!1,value:null})}}),n.prototype.next=function(){return this.start===(null==this.end?this.fg.length:this.end)?(this.Jk.done=!0,this.Jk.value=void 0):this.Jk.value=this.fg[this.start++],this.Jk}},function(e,t){e.t=Function,Function.he=function(){},Function.identity=function(e){return e},Function.bo=function(e,t){t=t||Object.mo,e=e||Function.identity;var r=function(r,i){return t(e(r),e(i))};return r.mo=t,r.bo=e,r},Function.get=function(e){return function(t){return Object.get(t,e)}}},function(e,t,r){function i(){throw new Error("Can't construct. GenericOrder is a mixin.")}var n=r(33);e.t=i,i.prototype.ae=function(e,t){if(t=t||this.ce||n.ae,this===e)return!0;if(!e)return!1;return this.length===e.length&&this.wo(e).every(function(e){return t(e[0],e[1])})},i.prototype.mo=function(e,t){if(t=t||this.yo||n.mo,this===e)return 0;if(!e)return 1;var r=Math.min(this.length,e.length),i=this.wo(e).reduce(function(e,i,n){return 0===e?n>=r?e:t(i[0],i[1]):e},0);return 0===i?this.length-e.length:i},i.prototype.toJSON=function(){return this.toArray()}},function(e,t,r){"use strict";function i(e,t,r,n){if(!(this instanceof i))return new i(e,t,r,n);t=t||Object.ae,r=r||Object.hash,n=n||Function.he,this.ce=t,this.ue=r,this.le=n,this.order=new this.FD(void 0,t),this.pe=new this.LD(void 0,function(e,r){return t(e.value,r.value)},function(e){return r(e.value)}),this.length=0,this.addEach(e)}var n=(r(12),r(46)),s=r(100),o=r(13),a=r(36),h=r(14),c=r(35),u=r(101);e.t=i,i.Set=i,Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.addEach(i.prototype,h.prototype),Object.addEach(i.prototype,c.prototype),Object.defineProperty(i.prototype,"size",o.fe),i.prototype.FD=n,i.prototype.LD=s,i.prototype.de=function(e){return new this.constructor(e,this.ce,this.ue,this.le)},i.prototype.has=function(e){var t=new this.order.Node(e);return this.pe.has(t)},i.prototype.get=function(e,t){if(t)throw new Error("Set#get does not support second argument: equals");var r=new this.order.Node(e);return r=this.pe.get(r),r?r.value:this.le(e)},i.prototype.add=function(e){var t=new this.order.Node(e);if(!this.pe.has(t)){var r=this.length;return this.qk&&this.UP([e],[],r),this.order.add(e),t=this.order.head.Mk,this.pe.add(t),this.length++,this.qk&&this.LP([e],[],r),!0}return!1},i.prototype.delete=function(e,t){if(t)throw new Error("Set#delete does not support second argument: equals");var r=new this.order.Node(e);return!!this.pe.has(r)&&(r=this.pe.get(r),this.qk&&this.UP([],[e],r.index),this.pe.delete(r),this.order.splice(r,1),this.length--,this.qk&&this.LP([],[e],r.index),!0)},i.prototype.pop=function(){if(this.length){var e=this.order.head.Mk.value;return this.delete(e),e}},i.prototype.shift=function(){if(this.length){var e=this.order.head.next.value;return this.delete(e),e}},i.prototype.Po=function(){if(this.length>0)return this.pe.Po().value},i.prototype.clear=function(){var e;this.qk&&(e=this.toArray(),this.UP([],e,0)),this.pe.clear(),this.order.clear(),this.length=0,this.qk&&this.LP([],e,0)},i.prototype.reduce=function(e,t){var r=arguments[2],i=0;return this.order.reduce(function(t,n){return e.call(r,t,n,i++,this)},t,this)},i.prototype.reduceRight=function(e,t){var r=arguments[2],i=this.order,n=this.length-1;return i.reduceRight(function(t,i){return e.call(r,t,i,n--,this)},t,this)},i.prototype.Ao=function(){return this.order.Ao()},i.prototype.values=function(){return new u(this)},i.prototype.log=function(){var e=this.pe;return e.log.apply(e,arguments)},i.prototype.xo=function(){this.order.xo()}},function(e,t,r){"use strict";function i(){}e.t=i,i.MD={qP:"+",BD:"-",UD:"+",xD:"+",HD:".",qD:"'",VD:"+",jD:"|"},i.GD={qP:"╋",BD:"━",UD:"┻",xD:"┳",HD:"╭",qD:"╰",VD:"┣",jD:"┃"},i.QD={qP:"╋",BD:"━",UD:"┻",xD:"┳",HD:"┏",qD:"┗",VD:"┣",jD:"┃"}},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.oA="127.0.0.1",i.uO=11983,i.aA="//{0}:{1}/proxy/?callback={2}{3}hivePluginId={4}",i.KD="//{0}:{1}/proxy/{2}/session?manifest={3}",i.hO="//{0}:{1}/proxy/{2}/player?req={3}",i.YD="//{0}:{1}/proxy/{2}/info?{3}",t.cO=i},function(e,t,r){"use strict";var i=r(6),n=r(4),s=function(){function e(e){this.mn="[HiveXHR] ",this.DONE=4,this.LOADING=3,this.HEADERS_RECEIVED=2,this.OPENED=1,this.UNSENT=0,this.username=null,this.password=null,this.zD=[],this.responseType="",this.readyState=this.UNSENT,this.status=0,this.async=!0,this.timeout=0,this.events={},e&&(this.sessionId=e)}return e.prototype.addEventListener=function(e,t,r){this.events[e]=this.events[e]||[],this.events[e].push(t)},e.prototype.removeEventListener=function(e,t,r){this.events[e]&&(this.events[e]=this.events[e].filter(function(e){return e!==t}))},e.prototype.dispatchEvent=function(e){var t=this;this.events[e.type]&&this.events[e.type].forEach(function(r){try{"function"==typeof r?r.call(t,e):"function"==typeof r.E_&&r.E_(e)}catch(r){n.ErrorMonitor.gi().di(t.mn+"Error in callback handler '"+e.type+"'",{error:r})}});var r=this["on"+e.type];if("function"==typeof r)try{r.call(this,e)}catch(t){n.ErrorMonitor.gi().di(this.mn+"Error in callback handler '"+e.type+"'",{error:t})}return!1},e.prototype.msCachingEnabled=function(){return void 0!==this.msCaching},e.prototype.overrideMimeType=function(e){this.mimeType=e},e.register=function(t,r){e.EI[t]=r},e.prototype.JD=function(t){this.sessionId||(this.sessionId=e.EI[t])},e.prototype.open=function(e,t,r,n,s){void 0===r&&(r=!0),void 0===n&&(n=null),void 0===s&&(s=null),this.url=t.trim(),this.method=e,this.username=n,this.password=s,this.async=r,this.readyState=this.OPENED;var o=i.fn.createEvent(Event,"readystatechange",{currentTarget:this});this.dispatchEvent(o)},e.prototype.setRequestHeader=function(e,t){if(this.readyState!==this.OPENED)throw new Error("The object's state must be OPENED.");this.zD.push({key:e,value:t})},e.prototype.getResponseHeader=function(e){var t=this.getAllResponseHeaders();if(t){var r=[];return t.split(/[\r\n]+/).forEach(function(e){var t=e.match(/^([^:]+): ?(.+)$/);t&&(r[t[1]]=t[2])}),r[e.toLowerCase()]}return null},e.prototype.getAllResponseHeaders=function(){return this.xu},e.prototype.onload=function(e){},e.prototype.onloadend=function(e){},e.prototype.onerror=function(e){},e.prototype.onprogress=function(e){},e.prototype.onreadystatechange=function(e){},e.prototype.onabort=function(e){},e.prototype.onloadstart=function(e){},e.prototype.ontimeout=function(e){},e}();s.EI={},s.Ul=0,t.SI=s},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(50),s=r(6),o=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.bn=function(e,r){t.WD[r]=e},t.XD=function(e,r){t.ZD[r]=e},t.prototype.send=function(){if(!this.sessionId){var e=Object.keys(t.ZD);e.length>0&&(this.sessionId=t.ZD[e[0]])}var r=t.WD[this.sessionId],i=t.ZD[this.sessionId];i.te().debug("Intercepted Manifest Request "+this.url),r.$D(this),i.eF(this.url)},t.prototype.tF=function(){var e=this,t=new XMLHttpRequest;t.open("GET",this.url),t.onreadystatechange=function(r){4===t.readyState&&(e.response=t.responseText,e.responseText=t.responseText,e.readyState=4,e.status=t.status,e.onreadystatechange(s.fn.createEvent(Event,"readystatechange",r,e)),e.onload(s.fn.createEvent(ProgressEvent,"load",r,e)),console.debug("Returned Manifest Request "+e.url))},t.send()},t.prototype.rF=function(){e.prototype.send.call(this)},t}(n.In);o.ZD={},o.WD={},t.wn=o},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(15),s=r(0),o=r(29),a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.II=function(){return t.app="JS",s.Framework.resolve(n.Pa.pa)},t}(o.Hive);t.wI=a},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(28),s=r(70),o=r(4),a=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mn="[HiveRequestManifest]",t}return i(t,e),t.bn=function(e,r){t.WD[r]=e},t.XD=function(e,r){t.ZD[r]=e},t.prototype.send=function(){if(!this.sessionId){var e=Object.keys(t.ZD);e.length>0&&(this.sessionId=t.ZD[e[0]])}var r=t.WD[this.sessionId],i=t.ZD[this.sessionId];s.iF(r)||s.iF(i)?(o.ErrorMonitor.gi().di("HiveJS Tech or Comm are not defined",this.mn),this.resolve()):(i.te().debug("Intercepted Manifest Request "+this.url),r.$D(this),i.eF(this.url))},t.prototype.resolve=function(){var e=this,t=new XMLHttpRequest;t.open("GET",this.url),t.onreadystatechange=function(){4===t.readyState&&(e.response=t.responseText,e.responseText=t.responseText,e.readyState=4,e.status=t.status,e.dispatchEvent(new Event("readystatechange")),e.dispatchEvent(new ProgressEvent("onload")),console.debug("Returned Manifest Request "+e.url))},t.send()},t}(n.HiveRequest);a.ZD={},a.WD={},t.vn=a},function(e,t,r){function i(e,r){var i={nF:[],sF:s};return arguments.length>=3&&(i.oF=arguments[2]),arguments.length>=4&&(i.aF=arguments[3]),d(r)?i.hF=r:r&&t.cF(i,r),T(i.hF)&&(i.hF=!1),T(i.oF)&&(i.oF=2),T(i.aF)&&(i.aF=!1),T(i.uF)&&(i.uF=!0),i.aF&&(i.sF=n),a(i,e,i.oF)}function n(e,t){var r=i.lF[t];return r?"["+i.aF[r][0]+"m"+e+"["+i.aF[r][1]+"m":e}function s(e,t){return e}function o(e){var t={};return e.forEach(function(e,r){t[e]=!0}),t}function a(e,r,i){if(e.uF&&r&&b(r.Ee)&&r.Ee!==t.Ee&&(!r.constructor||r.constructor.prototype!==r)){var n=r.Ee(i,e);return m(n)||(n=a(e,n,i)),n}var s=h(e,r);if(s)return s;var d=Object.keys(r),g=o(d);if(e.hF&&(d=Object.getOwnPropertyNames(r)),R(r)&&(d.indexOf("message")>=0||d.indexOf("description")>=0))return c(r);if(0===d.length){if(b(r)){var v=r.name?": "+r.name:"";return e.sF("[Function"+v+"]","special")}if(I(r))return e.sF(RegExp.prototype.toString.call(r),"regexp");if(S(r))return e.sF(Date.prototype.toString.call(r),"date");if(R(r))return c(r)}var y="",E=!1,T=["{","}"];if(f(r)&&(E=!0,T=["[","]"]),b(r)){y=" [Function"+(r.name?": "+r.name:"")+"]"}if(I(r)&&(y=" "+RegExp.prototype.toString.call(r)),S(r)&&(y=" "+Date.prototype.toUTCString.call(r)),R(r)&&(y=" "+c(r)),0===d.length&&(!E||0==r.length))return T[0]+y+T[1];if(i<0)return I(r)?e.sF(RegExp.prototype.toString.call(r),"regexp"):e.sF("[Object]","special");e.nF.push(r);var w;return w=E?u(e,r,i,g,d):d.map(function(t){return l(e,r,i,g,t,E)}),e.nF.pop(),p(w,y,T)}function h(e,t){if(T(t))return e.sF("undefined","undefined");if(m(t)){var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.sF(r,"string")}return y(t)?e.sF(""+t,"number"):d(t)?e.sF(""+t,"boolean"):g(t)?e.sF("null","null"):void 0}function c(e){return"["+Error.prototype.toString.call(e)+"]"}function u(e,t,r,i,n){for(var s=[],o=0,a=t.length;o<a;++o)O(t,String(o))?s.push(l(e,t,r,i,String(o),!0)):s.push("");return n.forEach(function(n){n.match(/^\d+$/)||s.push(l(e,t,r,i,n,!0))}),s}function l(e,t,r,i,n,s){var o,h,c;if(c=Object.getOwnPropertyDescriptor(t,n)||{value:t[n]},c.get?h=c.set?e.sF("[Getter/Setter]","special"):e.sF("[Getter]","special"):c.set&&(h=e.sF("[Setter]","special")),O(i,n)||(o="["+n+"]"),h||(e.nF.indexOf(c.value)<0?(h=g(r)?a(e,c.value,null):a(e,c.value,r-1),h.indexOf("\n")>-1&&(h=s?h.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+h.split("\n").map(function(e){return"   "+e}).join("\n"))):h=e.sF("[Circular]","special")),T(o)){if(s&&n.match(/^\d+$/))return h;o=JSON.stringify(""+n),o.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=e.sF(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=e.sF(o,"string"))}return o+": "+h}function p(e,t,r){var i=0;return e.reduce(function(e,t){return i++,t.indexOf("\n")>=0&&i++,e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1]:r[0]+t+" "+e.join(", ")+" "+r[1]}function f(e){return Array.isArray(e)}function d(e){return"boolean"==typeof e}function g(e){return null===e}function v(e){return null==e}function y(e){return"number"==typeof e}function m(e){return"string"==typeof e}function E(e){return"symbol"==typeof e}function T(e){return void 0===e}function I(e){return w(e)&&"[object RegExp]"===A(e)}function w(e){return"object"==typeof e&&null!==e}function S(e){return w(e)&&"[object Date]"===A(e)}function R(e){return w(e)&&("[object Error]"===A(e)||e instanceof Error)}function b(e){return"function"==typeof e}function P(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function A(e){return Object.prototype.toString.call(e)}function C(e){return e<10?"0"+e.toString(10):e.toString(10)}function k(){var e=new Date,t=[C(e.getHours()),C(e.getMinutes()),C(e.getSeconds())].join(":");return[e.getDate(),F[e.getMonth()],t].join(" ")}function O(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var _=/%[sdj%]/g;t.format=function(e){if(!m(e)){for(var t=[],r=0;r<arguments.length;r++)t.push(i(arguments[r]));return t.join(" ")}for(var r=1,n=arguments,s=n.length,o=String(e).replace(_,function(e){if("%%"===e)return"%";if(r>=s)return e;switch(e){case"%s":return String(n[r++]);case"%d":return Number(n[r++]);case"%j":try{return JSON.stringify(n[r++])}catch(e){return"[Circular]"}default:return e}}),a=n[r];r<s;a=n[++r])g(a)||!w(a)?o+=" "+a:o+=" "+i(a);return o},t.RD=function(e,r){function i(){if(!n){if(process.pF)throw new Error(r);process.fF?console.trace(r):console.error(r),n=!0}return e.apply(this,arguments)}if(T(global.process))return function(){return t.RD(e,r).apply(this,arguments)};if(!0===process.dF)return e;var n=!1;return i};var N,D={};t.gF=function(e){if(T(N)&&(N=process.De.vF||""),e=e.toUpperCase(),!D[e])if(new RegExp("\\b"+e+"\\b","i").test(N)){var r=process.yF;D[e]=function(){var i=t.format.apply(t,arguments);console.error("%s %d: %s",e,r,i)}}else D[e]=function(){};return D[e]},t.Ee=i,i.aF={bold:[1,22],mF:[3,23],EF:[4,24],inverse:[7,27],TF:[37,39],IF:[90,39],wF:[30,39],blue:[34,39],SF:[36,39],green:[32,39],RF:[35,39],red:[31,39],bF:[33,39]},i.lF={PF:"cyan",number:"yellow",AF:"yellow",undefined:"grey",CF:"bold",qb:"green",uv:"magenta",kF:"red"},t.isArray=f,t.Jf=d,t.Xf=g,t.iF=v,t.Zf=y,t.$f=m,t.OF=E,t.td=T,t._F=I,t.Jo=w,t.NF=S,t.DF=R,t.Wf=b,t.FF=P,t.isBuffer=r(105);var F=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];t.log=function(){console.log("%s - %s",k(),t.format.apply(t,arguments))},t.zI=r(106),t.cF=function(e,t){if(!t||!w(t))return e;for(var r=Object.keys(t),i=r.length;i--;)e[r[i]]=t[r[i]];return e}},function(e,t,r){"use strict";var i=r(7),n=r(1),s=r(30);r(112),r(113);var o=r(0),a=r(9),h=r(24),c=r(21),u=r(19),l=r(8),p=r(4),f=r(7);!function(e){var t=function(){function e(){this.metrics=new hive.snapshots.Metrics,this.LF=new hive.snapshots.Traffic,this.MF=new n,this.BF=new n,this.UF=new n,this.player=new hive.snapshots.Player}return e}();e.xF=t;var r=function(){function t(){this.ticket=null,this.HF=0,this.qF=0,this.VF()}return t.prototype.init=function(e,t,r,i){this.te=o.Framework.resolve(o.Framework.q.I).log(i),this.dh=o.Framework.resolve(a.Qs.Us),this.te.debug("[SNAP] INIT STATS STORE - ID: "+e),this.Eh=e,this.ticket=t,this.Th(r)},t.prototype.jF=function(e){this.GF=e},t.prototype.Th=function(e){this.app=e},t.prototype.QF=function(e){this.wC=e},t.prototype.VF=function(){this.KF=new e.xF,this.Eh=null,this.ticket=null,this.reset()},t.prototype.reset=function(){this.N_=new e.xF,this.YF(this.N_.LF),this.zF(this.N_)},t.prototype.YF=function(e){e.reqN=0,e.respFallbackN=0,e.respFallbackErrN=0,e.respP2pN=0,e.reqOtherN=0,e.respFallbackOtherN=0,e.respFallbackOthertErrN=0,e.srcReqN=0,e.srcRespN=0,e.srcRespErrN=0,e.srcReqQt=0,e.srcRespQt=0,e.srcOverQt=0,e.srcOtherReqN=0,e.srcOtherRespN=0,e.srcOtherRespErrN=0,e.srcOtherReqQt=0,e.srcOtherRespQt=0,e.srcOtherOverQt=0,e.p2pSubReqN=0,e.p2pSubRespN=0,e.p2pSubRespPartN=0,e.p2pSubRespErrN=0,e.p2pSubRespExpN=0,e.p2pSubReqQt=0,e.p2pSubRespQt=0,e.p2pDirectQt=0,e.p2pRelayQt=0,e.p2pNatQt=0,e.p2pUdpbQt=0,e.fallAgentRespN=0,e.fallAgentPredHitN=0,e.fallAgentFailedRespN=0,e.fallAgenTrafficSuccessQt=0,e.p2pAgentPredHitN=0,e.p2pAgentPredMissN=0,e.p2pAgentPredPartialHitN=0,e.p2pAgenTrafficSuccessQt=0,e.p2pAgenTrafficFailureQt=0},t.prototype.zF=function(e){e.metrics.videoBufN=0,e.metrics.videoBufQt=0,e.metrics.clientBufferMs=0,e.metrics.lookupNotFound=0,e.metrics.lookupTotal=0,e.metrics.lookupLatency=0,e.metrics.lookupReqAccept=0,e.metrics.lookupReqEstablished=0,e.metrics.lookupFailed=0,e.player.bufferingN=0,e.player.bufferingMs=0},t.prototype.Co=function(e){var t=this;void 0===e&&(e=!0);var r=new hive.snapshots.MetricSnapshot;r.timestamp=o.Framework.time(),r.guid=this.Eh,r.sessionId=this.ticket.sessionId,r.eventId=new EventId,r.eventId.partnerId=this.ticket.Lh(),r.eventId.customerId=this.ticket.Mh(),r.eventId.contentId=this.ticket.Xc();try{var n=new hive.snapshots.ClientInfo;n.clientType=this.JF();var s=this.app.version.split(".");n.majorVersion=parseInt(s[0]),n.minorVersion=parseInt(s[1]),n.patchVersion=parseInt(s[2]),r.client=n}catch(e){this.te.warn("[SNAP] error setting Snapshot ClientInfo",e)}if(this.wC){var a=new hive.snapshots.AgentInfo;a.firstTierBitrates=this.wC.WF(),a.secondTierBitrates=this.wC.XF(),r.agentInfo=a}r.streamInfo=this.R_.ZF(),r.traffic=[];var h=new hive.snapshots.TrafficKey;if(r.traffic.push({key:h,value:this.N_.LF}),this.N_.MF.forEach(function(e,t){var i=new hive.snapshots.TrafficKey;i.bitrate=t,r.traffic.push({key:i,value:e})}),r.metrics=this.N_.metrics,this.GF&&(r.metrics.clientBufferMs=this.GF.min()),r.player=this.N_.player,this.$F){var c=this.$F.eL();this.N_.metrics.prtOutN=c.tL+c.rL,this.N_.metrics.prtInN=c.iL+c.nL;var u=this.$F.sL();u.forEach(function(e,i){t.oL(i,e,r)}),this.N_.UF.filter(function(e,t){return!u.has(t)}).forEach(function(e,i){t.oL(i,e,r)})}return r.connInfo=new hive.snapshots.ConnectivityInfo,e?this.dh.Vh().then(function(e){return r.connInfo.privateIp=i._s.Cs(e.Qh()),t.aL(t.hL(r))}).fail(function(e){return t.aL(t.hL(r))}):(r.connInfo.privateIp=i._s.Cs(this.dh.Gh().Qh()),this.aL(r))},t.prototype.hL=function(e){return e.connInfo.internalAs=this.HF,e.connInfo.externalAs=this.qF,e.connInfo.publicIp=this.cL,e},t.prototype.aL=function(e,t){void 0===t&&(t=[]);var r=f.cs(e,"snapshot");return r.length&&p.ErrorMonitor.gi().di("NaN found in MetricSnapshot","[SNAP]",{keysWithNaN:r,snapshot:e}),t.length=0,t.push.apply(t,r),e},t.prototype.JF=function(){var e;switch(this.app.app){case"JS":e=ClientType.uL;break;case"PROXY":e=ClientType.lL;break;default:e=ClientType.pL}return e},t.prototype.oL=function(e,t,r){var i=this.N_.BF.get(e);t.traffic=i,r.partners||(r.partners=[]);var n=new hive.snapshots.PartnerKey;n.partnerGuid=e,r.partners.push({key:n,value:t})},t.prototype.y_=function(e,t){e>0&&(this.N_.metrics.videoBufN++,this.N_.metrics.videoBufQt+=e,this.N_.player.bufferingN++,this.N_.player.bufferingMs+=e),this.N_.player.playerBufferMs=t},t.prototype.M_=function(){return this.N_.LF},t.prototype.fL=function(){return this.KF.LF},t.prototype.dL=function(e){return this.KF.MF.has(e)||this.KF.MF.set(e,new hive.snapshots.Traffic),this.KF.MF.get(e)},t.prototype.F_=function(e){if(!this.N_.MF.has(e)){var t=new hive.snapshots.Traffic;this.YF(t),this.N_.MF.set(e,t)}return this.N_.MF.get(e)},t.prototype.gL=function(){var e=new hive.snapshots.PartnerTraffic;return e.p2pSuccReq=0,e.p2pFailReq=0,e.p2pPartReq=0,e.p2pSuccReceived=0,e.p2pSuccReceivedLow=0,e.p2pFailReceived=0,e.p2pSuccResp=0,e.p2pFailResp=0,e.p2pPartResp=0,e.p2pSuccSent=0,e.p2pSuccSentLow=0,e.p2pFailSent=0,e},t.prototype.vL=function(e,t){return t.BF.has(e)||t.BF.set(e,this.gL()),t.BF.get(e)},t.prototype.yL=function(e){return this.vL(e,this.N_)},t.prototype.mL=function(e){return this.vL(e,this.KF)},t.prototype.EL=function(e){this.dh=e},t.prototype.TL=function(e){this.$F=e},t.prototype.Zh=function(e){},t}();e.LD=r;var d=function(){function e(){this.IL=isNaN(l.HiveConfig.DebugLogs.MetricSnapshotLogs)?0:l.HiveConfig.DebugLogs.MetricSnapshotLogs,this.state=u._c.Oc,this.client=o.Framework.resolve(a.Qs.H),this.Pl=new s.Pw,this.protocol=new s.nS(this.Pl)}return e.prototype.init=function(e,t){this.te=o.Framework.resolve(o.Framework.q.I).log(t),this.te.debug("[SNAP] INIT CLIENT STATS"),this.pe=e,this.wL()},e.prototype.wL=function(){var e=this;this.SL>-1&&o.Framework.clearInterval(this.SL),this.SL=o.Framework.setInterval(function(){e.snapshot()},h.nc.ic.up)},e.prototype.On=function(e){this.state=e},e.prototype.d_=function(){if(this.pe)return this.snapshot(!1)},e.prototype.reset=function(e){o.Framework.clearInterval(this.SL),this.pe&&(!1===e?this.pe.reset():this.pe.VF())},e.prototype.snapshot=function(e){var t=this;void 0===e&&(e=!0);var r=this.pe.Co(e);e?(this.te.debug("[SNAP] TAKING SNAPSHOT"),r.then(function(e){return t.forward(e)}).fail(function(e){t.te.warn("[SNAP] ERROR FORWARDING SNAPSHOT",e)}).finally(function(){t.pe.reset()})):(this.te.debug("[SNAP] FLUSHING SNAPSHOT"),this.forward(r))},e.prototype.forward=function(e){var t=this;if(this.state===u._c.IDLE)return void this.te.debug("[SNAP] not send - state idle");if(this.client&&this.client.lc()){switch(this.IL){case 0:default:this.te.debug("[SNAP] SENDING SNAPSHOT");break;case 1:this.te.debug("[SNAP] SENDING SNAPSHOT "+JSON.stringify(e));break;case 2:this.te.debug("[SNAP] SENDING SNAPSHOT",e);break;case 3:this.te.debug("[SNAP] SENDING SNAPSHOT "+JSON.stringify(e),e)}this.protocol.vS("SNAPSHOT",s.VI.KI,0),e.write(this.protocol),this.protocol.ES();var r=this.Pl.Qw(),i=this.RL(r,",",4),n=r.slice(i+1,r.length-1),o=new c.pc(Services.fc,1,n);this.client.lc().send(o).fail(function(e){t.te.warn("[SNAP] PROBLEM: ",e)})}},e.prototype.RL=function(e,t,r){return e.split(t,r).join(t).length},e}();e.vc=d}(t.Stats||(t.Stats={}))},function(e,t,r){"use strict";var i=r(2),n=r(27),s=r(114),o=r(0),a=r(24),h=r(21),c=r(5),u=c.Rt.Ri,l=function(){function e(){this.te=o.Framework.resolve(o.Framework.q.I).log(),this.te.debug("INIT SERVICE CLIENT")}return e.prototype.init=function(e,t){var r=this;if(this.bL)this.bL.then(function(){var e={partnerId:t.Lh(),customerId:t.Mh(),contentId:t.Xc(),secret:t.OA()},i=new h.pc(Services.PL,1,JSON.stringify(e));r.connection.send(i)});else{var o=i.defer(),c=a.nc.ic.ap;t.kA&&(u?c=a.nc.ic.hp:(this.te.warn("[HiveComm] Error trying to resolve test ticket against production services - use production ticket or test plugin"),o.reject(new Error("test ticket in production"))));var l=new n(c),p=l.OT({"connection-id":e,partner_id:t.Lh(),customer_id:t.Mh(),content_id:t.Xc(),ticket:t.OA()}).toString();this.connection=new s.AL(p,a.nc.ic.lp,a.nc.ic.pp,a.nc.ic.fp),this.connection.CL(function(){r.te.debug("HIVE SERVICES CONNECTED"),o.resolve(r.connection)}),this.connection.onerror(function(){r.te.warn("Hive Services Connection failed"),o.reject(r.connection)}),this.bL=o.Te}return{zc:this.connection,Te:this.bL}},e.prototype.connect=function(){this.connection&&this.connection.connect(!0)},e.prototype.kL=function(e){},e.prototype.lc=function(){return this.connection},e.prototype.close=function(){this.connection&&(this.bL=null,this.connection.close(!1))},e}();t.OL=l},function(e,t,r){"use strict";r(115);var i=r(2),n=r(1),s=r(0),o=r(42),a=function(){function e(e){this.yc=(new Date).getTime(),this._L=e}return e}(),h=function(){function e(){this.NL=new n,this.te=(s.Framework.resolve(s.Framework.q.I)||console).log(),this.te.debug("INIT TICKET RESOLVER")}return e.prototype.resolve=function(e,t,r){var n=this,s=i.defer();return e&&(e.on(Services.PL,0,function(e){n.DL(e)}),e.on(Services.PL,2,function(e){n.DL(e)}),this.NL.set(t,new a(s))),s.Te},e.prototype.DL=function(e){var t=this,r=(new Date).getTime(),i=JSON.parse(e.msg),n=!1;this.NL.forEach(function(e,s){if(t.FL(s,i)){n=!0;var o=t.LL(s,i);o?(o.yc=e.yc,o.mc=r,e._L.resolve(o)):e._L.reject("Ticket verification failed"),t.NL.delete(o)}}),n||this.te.warn("no pending ticket matching: "+e.msg)},e.prototype.Gc=function(e){if(new RegExp("^https?://api(?:-test)?.hivestreaming.com/v1/events/(?:wildcard/)?").test(e)){var t=this.ML();return t.AA(e),t}return null},e.prototype.ML=function(){return new o.VA},e.prototype.FL=function(e,t){return e.Lh()===t[o.VA.HA]&&e.Mh()===t[o.VA.xA]&&e.Xc()===t[o.VA.qA]},e.prototype.LL=function(e,t){return e.RA(t),e.PA()?e:null},e}();t.BL=h},function(e,t,r){/*! uuid.js
 * Copyright (c) 2010-2012 Robert Kieffer
 * MIT License - http://opensource.org/licenses/mit-license.php
 */
!function(t){"use strict";function i(e,t,r){var i=t&&r||0,n=0;for(t=t||[],e.toLowerCase().replace(/[0-9a-f]{2}/g,function(e){n<16&&(t[i+n++]=d[e])});n<16;)t[i+n++]=0;return t}function n(e,t){var r=t||0,i=f;return i[e[r++]]+i[e[r++]]+i[e[r++]]+i[e[r++]]+"-"+i[e[r++]]+i[e[r++]]+"-"+i[e[r++]]+i[e[r++]]+"-"+i[e[r++]]+i[e[r++]]+"-"+i[e[r++]]+i[e[r++]]+i[e[r++]]+i[e[r++]]+i[e[r++]]+i[e[r++]]}function s(e,t,r){var i=t&&r||0,s=t||[];e=e||{};var o=null!=e.UL?e.UL:m,a=null!=e.xL?e.xL:(new Date).getTime(),h=null!=e.HL?e.HL:T+1,c=a-E+(h-T)/1e4;if(c<0&&null==e.UL&&(o=o+1&16383),(c<0||a>E)&&null==e.HL&&(h=0),h>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");E=a,T=h,m=o,a+=122192928e5;var u=(1e4*(268435455&a)+h)%4294967296;s[i++]=u>>>24&255,s[i++]=u>>>16&255,s[i++]=u>>>8&255,s[i++]=255&u;var l=a/4294967296*1e4&268435455;s[i++]=l>>>8&255,s[i++]=255&l,s[i++]=l>>>24&15|16,s[i++]=l>>>16&255,s[i++]=o>>>8|128,s[i++]=255&o;for(var p=e.qL||y,f=0;f<6;f++)s[i+f]=p[f];return t||n(s)}function o(e,t,r){var i=t&&r||0;"string"==typeof e&&(t="binary"===e?new p(16):null,e=null),e=e||{};var s=e.random||(e.VL||a)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,t)for(var o=0;o<16;o++)t[i+o]=s[o];return t||n(s)}var a,h,c,u,l;t?function(){var e=t.crypto||t.msCrypto;if(!a&&e&&e.getRandomValues)try{var r=new Uint8Array(16);u=a=function(){return e.getRandomValues(r),r},a()}catch(e){}if(!a){var i=new Array(16);h=a=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),i[t]=e>>>((3&t)<<3)&255;return i},"undefined"!=typeof console&&console.warn&&console.warn("[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()")}}():function(){try{var e=r(116).jL;c=a=e&&function(){return e(16)},a()}catch(e){}}();for(var p="function"==typeof Buffer?Buffer:Array,f=[],d={},g=0;g<256;g++)f[g]=(g+256).toString(16).substr(1),d[f[g]]=g;var v=a(),y=[1|v[0],v[1],v[2],v[3],v[4],v[5]],m=16383&(v[6]<<8|v[7]),E=0,T=0,I=o;I.GL=s,I.FA=o,I.parse=i,I.QL=n,I.KL=p,I.YL=a,I.zL=h,I.JL=c,I.WL=u,void 0!==e&&e.t?e.t=I:(l=t.Ck,I.wt=function(){return t.Ck=l,I},t.Ck=I)}("undefined"!=typeof window?window:null)},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(2),s=r(74),o=r(0),a=r(24),h=r(117),c=function(){function e(){this.XL="IdentityStore",this.ZL="IdentityDB",this.Eh=null,this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,o.Framework&&o.Framework.resolve(o.Framework.q.I)?this.te=o.Framework.resolve(o.Framework.q.I).log():this.te=console}return e.prototype.$L=function(){var e=this,t=n.defer(),r=indexedDB.open(this.ZL);return r.onupgradeneeded=function(){var t=r.result;t.createObjectStore(e.XL,{keyPath:"id"})},r.onsuccess=function(){var e=r.result;t.resolve(e)},r.onerror=function(e){t.reject(e)},t.Te},e.prototype.jc=function(){var e=this;if(this.eM)return this.eM;var t=n.defer();if(this.Eh)t.resolve(new h.tM(this.Eh));else if(a.nc.bi&&this.indexedDB){var r=setTimeout(function(){e.te.warn("[HiveComm] timeout retrieving persistent ID - generating random one"),e.Eh=e.rM(),e.te.debug("[HiveComm] Generated UUID: "+e.Eh),t.resolve(new h.tM(e.Eh))},4e3);try{var i=this.$L();i.then(function(i){var n=i.transaction(e.XL,"readwrite"),s=n.objectStore(e.XL),o=s.get("MYID");o.onsuccess=function(){if(clearTimeout(r),e.Eh)t.resolve(new h.tM(e.Eh));else if(null!=o.result&&a.nc.bi){var n=o.result.value;e.te.debug("[HiveComm] Retrieved persistent UUID: "+n),e.Eh=n,i.close(),t.resolve(new h.tM(e.Eh))}else{var s=e.rM();e.iM(i,s),t.resolve(new h.tM(e.Eh))}},o.onerror=function(i){clearTimeout(r),e.Eh||(e.te.warn("[HiveComm] error retrieving persistent UUID: "+i),e.Eh=e.rM(),e.te.debug("[HiveComm] Generated UUID: "+e.Eh)),t.resolve(new h.tM(e.Eh))}}).fail(function(i){clearTimeout(r),e.Eh||(e.te.warn("[HiveComm] error opening indexedDB - generating random id. Error: "+i),e.Eh=e.rM(),e.te.debug("[HiveComm] Generated UUID: "+e.Eh)),t.resolve(new h.tM(e.Eh))})}catch(e){this.Eh=this.rM(),this.te.debug("[HiveComm] Persistence error - Generate UUID: "+this.Eh,e),t.resolve(new h.tM(this.Eh))}}else this.Eh=this.rM(),this.te.debug("[HiveComm] Persistence disabled - Generate UUID: "+this.Eh),t.resolve(new h.tM(this.Eh));return this.eM=t.Te,this.eM},e.prototype.iM=function(e,t){var r=this,i=e.transaction(this.XL,"readwrite");i.objectStore(this.XL).put({id:"MYID",value:t}),i.oncomplete=function(){r.te.debug("[HiveComm] completed UUID persistence"),e.close()},this.te.debug("[HiveComm] Generated UUID: "+t),this.Eh=t},e.prototype.rM=function(){return s.FA()},e}();t.nM=c;var u=function(e){function t(){return e.call(this)||this}return i(t,e),t.prototype.jc=function(){var t=this;if(this.sM)return this.sM;var r=n.defer();return e.prototype.jc.call(this).then(function(e){var i=t.rM(),n=e.Yc(),s=new h.tM(i,n);r.resolve(s)}).fail(function(e){var i=t.rM(),n=new h.tM(i);r.resolve(n)}),this.sM=r.Te,this.sM},t}(c);t.oM=u},function(e,t,r){"use strict";var i=function(){function e(){}return e.prototype.aM=function(e){this.hostname=e},e.prototype.Os=function(){return this.hostname},e.prototype.hM=function(e){this.cM=e},e.prototype.Qh=function(){return this.cM},e}();t.uM=i},function(e,t,r){"use strict";var i=r(2),n=r(0),s=r(9),o=r(118),a=r(4),h=function(){function e(){this.mn="[PreloadConnectivityInfoProvider] ",this.connInfo=window.lM,this.te=n.Framework.resolve(n.Framework.q.I).log(),this.pM=n.Framework.resolve(s.Qs.xs),this.connInfo||a.ErrorMonitor.gi().di("helper undefined",this.mn),this.fM()}return e.prototype.fM=function(){var e=new o.dM;this.pM.hM(e)},e.prototype.Gh=function(){return this.pM},e.prototype.Vh=function(){var e=this;if(!this.connInfo)return i.reject("ConnInfo helper undefined");var t=setTimeout(function(){return e.te.warn(e.mn+"Get connectivity info expired"),e.pM?i.resolve(e.pM):i.reject("expired")},2e3);try{return this.connInfo.Vh().then(function(r){return clearTimeout(t),e.pM=r,r}).fail(function(t){return e.te.debug(e.mn+" get connectivity info failed with error 1: ",t),e.pM?e.pM:i.reject(t)})}catch(e){return this.te.debug(this.mn+" get connectivity info failed with error 2:",e),i.reject(e)}},e.prototype.gM=function(e,t,r){},e}();t.vM=h},function(e,t,r){"use strict";var i=function(){function e(){}return e.prototype.yM=function(e){this.publicIp=e},e.prototype.Kh=function(){return this.publicIp},e.prototype.mM=function(e){this.EM=e},e.prototype.Wh=function(){return this.EM},e.prototype.TM=function(e){this.nic=e},e.prototype.zh=function(){return this.nic},e.prototype.IM=function(e){this.nicName=e},e.prototype.Jh=function(){return this.nicName},e.prototype.wM=function(e){this.privateIp=e},e.prototype.Cs=function(){return this.privateIp},e.prototype.SM=function(e){this.netmask=e},e.prototype.RM=function(){return this.netmask},e.prototype.bM=function(e){this.PM=e},e.prototype.Yh=function(){return null},e}();t.AM=i},function(e,t,r){"use strict";var i=r(2),n=r(1),s=r(0),o=r(9),a=r(78),h=r(119),c=r(8),u=r(24),l=r(52),p=function(){function e(){this.CM=null,this.kM=null,this.OM=null,this._M=null,this.NM=new n,this.publicIp=null,this.DM=[],this.xn=!1,this.FM=null,this.te=s.Framework.resolve(s.Framework.q.I).log(),this.pM=s.Framework.resolve(o.Qs.xs),this.LM=new h.MM,this.BM=[],this.fM(),this.UM()}return e.prototype.fM=function(){var e=new a.AM;this.pM.hM(e)},e.prototype.UM=function(){var e=this;s.Framework.setInterval(function(){e.DM=[],e.BM=[],e.NM=new n,e.publicIp=null,e.xM=null},12e4)},e.prototype.Vh=function(){return this.xM||(this.xM=this.HM()),this.xM},e.prototype.Gh=function(){return this.pM},e.prototype.HM=function(){var e=this,t=i.defer();if(this.FM=s.Framework.setTimeout(function(){t.reject({qM:!0,message:"expired"})},4e3),c.HiveConfig.ConnInfo.detectPrivateIP&&this.VM())try{this.CM=new RTCPeerConnection(null),this.OM=this.CM.createDataChannel("sendChannel",{reliable:!1}),this.kM=new RTCPeerConnection(null),this.kM.ondatachannel=function(r){e._M=r.channel,e._M.onopen=function(r){"open"===e._M.readyState&&(e.te.debug("Collected ips ["+e.NM.keys().join(", ")+"]"),e.kM.close(),e.LM.jM().then(function(t){e.BM=t,e.te.debug("Already known matching ips ["+e.BM.join(",")+"]");var r=e.NM.keys();e.BM.forEach(function(t){r.indexOf(t)>0&&(e.DM.push(t),e.NM.delete(t))}),e.NM.keys().forEach(function(t){e.DM.push(t)})}).fail(function(t){e.te.warn("Get Previous working ips failed with error "+t.message),e.NM.keys().forEach(function(t){e.DM.push(t)})}).finally(function(){e.te.debug("Final private ip list ["+e.DM.join(",")+"]"),t.resolve(e.GM())}))}},this.CM.onicecandidate=function(r){r.candidate&&e.QM(r.candidate.candidate),!r.candidate||e.kM.addIceCandidate(r.candidate).catch(function(r){t.reject({qM:!0,message:r.message}),s.Framework.clearTimeout(e.FM),console.log("Error: Failure during addIceCandidate()")})},this.kM.onicecandidate=function(r){r.candidate&&e.QM(r.candidate.candidate),!r.candidate||e.CM.addIceCandidate(r.candidate).catch(function(r){t.reject({qM:!0,message:r.message}),s.Framework.clearTimeout(e.FM),console.log("Error: Failure during addIceCandidate()")})},this.CM.createOffer().then(function(t){return e.CM.setLocalDescription(t)}).then(function(){return e.kM.setRemoteDescription(e.CM.localDescription)}).then(function(){return e.kM.createAnswer()}).then(function(t){return e.kM.setLocalDescription(t)}).then(function(){return e.CM.setRemoteDescription(e.kM.localDescription)}).catch(function(r){t.reject({qM:!0,message:r.message}),s.Framework.clearTimeout(e.FM),console.log("Error: Failure creating offer")})}catch(e){t.reject({qM:!0,message:e.message})}else{s.Framework.clearTimeout(this.FM);var r=c.HiveConfig.ConnInfo.detectPrivateIP?"webrtc datachannel not supported":"private IP detection disabled";t.reject({qM:!1,message:r})}return t.Te},e.prototype.VM=function(){try{return null!=l.Ca&&null!=l.t_&&"function"==typeof new RTCPeerConnection(null,null).createDataChannel}catch(e){return!1}},e.prototype.QM=function(e){var t=/([0-9]{1,3}(\.[0-9]{1,3}){3})/,r=t.exec(e);if(r){var i=r[0];this.NM.set(i,!0)}},e.prototype.GM=function(){var e=new a.AM;return this.DM.length>0&&e.wM(this.DM[0]),this.publicIp&&e.yM(this.publicIp),this.pM.hM(e),this.pM},e.prototype.gM=function(e,t,r){if(this.publicIp=e,this.KM(),0===r&&this.DM.length>1)this.DM.shift();else if(u.nc.Mi&&0!==r&&-1==this.BM.indexOf(this.DM[0]))this.BM.unshift(this.DM[0]),this.LM.YM(this.BM.slice(0,2));else if(u.nc.Mi&&0!==r&&this.BM.indexOf(this.DM[0])>0){var i=this.BM.indexOf(this.DM[0]);this.BM=this.BM.splice(i,1),this.BM.unshift(this.DM[0]),this.LM.YM(this.BM.slice(0,2))}this.GM()},e.prototype.KM=function(){var e=this.DM.indexOf(this.publicIp);e>-1&&this.DM.splice(e,1)},e}();t.zM=p},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(54),s=r(140),o=r(147),a=r(10),h=r(31),c=r(28),u=r(0);!function(e){function t(t){return this.JM(t)||-1!=t.indexOf(e.WM)}function r(t){return-1!=t.toLowerCase().indexOf(e.XM.toLowerCase())}e.ZM=1,e.$M=2,e.eB=2e3,e.tB=3e4,e.rB=1e4,e.iB=!0,e.nB=!0,e.sB=500,e.oB=10,e.aB=3,e.XM="(format=mpd-time-csf)",e.WM=".m4s",e.hB=".ism/",e.cB=t,e.JM=r;var l=function(t){function n(r,i){var n=t.call(this,i)||this;return n.Ul=0,n.uB=!0,n.ticket=r,n.lB=r._A(),n.pB=n.lB.toLowerCase().substring(0,n.lB.indexOf(e.hB)),n.fB=new o.dB,n.gB=new s.vB(i.sessionId),n}return i(n,t),n.prototype.Ak=function(){return this.ticket},n.prototype.S_=function(){return StreamProtocol.yB},n.prototype.CN=function(){return this.lB},n.prototype.wN=function(){return this.gB.wN()},n.prototype.isLive=function(){return this.gB.mB()},n.prototype.RN=function(){return this.fB},n.prototype.$u=function(e){var t=this.Yu(e);if(t==a.Ws.Ys||t==a.Ws.Ks)return!0},n.prototype.Yu=function(e){if(r(e))return a.Ws.zs;if(this.EB(e))return a.Ws.Js;var t=this.gB.TB(e);return null!=t?t.type:-1!=e.indexOf("audio")?a.Ws.Ks:a.Ws.Js},n.prototype.bN=function(e){var t=this.Yu(e),r=0,i=0,n=0,s=!0,o=!1;if(this.EB(e))s=!0;else if(t!=a.Ws.zs){var c=this.gB.TB(e);null!=c?(r=c.duration,i=c.bitrate,n=c.id,o=this.$u(e)):(this.sk(),this.te.warn("could not extract segment info for "+e))}else s=!1;var u=Math.round(r/1e4);return new h.SR(e,t,s,n,u,i,o,this.K_())},n.prototype.ck=function(e){var t=e.url,r=this.gB.IB(t);return null!=r?this.bN(r.wB):null},n.prototype.lk=function(){return t.prototype.G_.call(this,e.ZM,e.$M)},n.prototype.SN=function(t){var i=t.url,n=i.toLowerCase();if(i===this.lB)return!0;if(null!=this.gB&&this.gB.EB(i))return!0;if(r(i)&&this.gB.SB!==i)return!1;var s=n.indexOf(e.hB);return!!(this.lB&&s>-1&&n.substring(0,s)===this.pB)},n.prototype.PN=function(e){var t=e.RB,r=e.Vu.url,i=this.gB.parse(r,t,e.Vu.mI);e.Vu.responseText=i,e.Vu.response=i,this.q_.zC(),this.bB()},n.prototype.AN=function(e){var r=this;t.prototype.AN.call(this,e),e.Yu()!==a.Ws.Ys&&e.Yu()!==a.Ws.Ks||(e.Yu()===a.Ws.Ys&&this.fB.PB(e),this.gB.AN(e).then(function(t){t&&r.bB(),e.Yu()==a.Ws.Ys&&r.q_.HC(e.Qu)}).done())},n.prototype.K_=function(){return this.ticket.BA()},n.prototype.Y_=function(e,r){var i=e;return i.Q_=u.Framework.time(),t.prototype.Y_.call(this,i,r)},n.prototype.yk=function(e,t,r,i){return this.gB.yk(e,t,r,i)},n.prototype.EB=function(e){return this.gB.EB(e)},n.prototype.bB=function(){var t=this;this.gB.AB?this.gB.AB.CB().then(function(r){if(r)t.uB=!0,t.te.debug("Protection evaluation: can decrypt");else{var i="Protection evaluation: cannot decrypt ["+(e.iB?"error":"disabled")+"]";e.nB?(t.uB=!0,t.te.debug(i+", metadata prefetch enabled")):t.te.warn(i+", metadata prefetch DISABLED")}}).done():this.te.debug("Protection evaluation: not encrypted")},n.prototype.sk=function(){this.uB&&(null==this.kB&&this.gB.mB()?this.OB():this.te.debug("DASH PRE-FETCHING METADATA ALREADY SCHEDULED OR NOT LIVE"))},n.prototype.IN=function(){this.uB&&null!=this.kB&&u.Framework.clearTimeout(this.kB)},n.prototype.OB=function(){var t=this,r=void 0!=this._B?this._B:0,i=e.eB,n=r+i,s=Math.max(1,n-u.Framework.time()+e.sB);this.te.debug("DASH PREFETCHING METADATA "+this.gB.SB+" IN "+s),this.kB=u.Framework.setTimeout(function(){t.NB(t.gB.SB,u.Framework.time())},s)},n.prototype.NB=function(e,t){var r=this._B;if(null==r&&(r=0),r>t)this.OB();else{var i=new c.HiveRequest(this.ticket.sessionId);i.open("GET",e),i.mI=!0,i.send(),this.kB=null,this._B=u.Framework.time()}},n.prototype.kN=function(e){this.gB.authenticationToken=e},n.prototype.gk=function(e,t){var r=this._C(),i=this.gN(),n=r.ER(),s=this.gB.DB(n,r.IR(),e,t),o=u.Framework.time()-i;return Math.max(0,s-o)},n.prototype.TN=function(){return e.rB},n.prototype.KC=function(e,t,r){var i=this.gB.FB(e,t);return null!=i?new h.SR(i.wB,r,!0,e,i.duration,t,!0,this.K_()):null},n.prototype.vk=function(){return e.tB},n}(n.ON);e.LB=l}(t.yB||(t.yB={}))},function(e,t,r){var i=function(e,t,r){function i(e){var t=e.localName;return null==t&&(t=e.MB),null!=t&&""!=t||(t=e.nodeName),t}function n(e){return e.prefix}function s(e){return"string"==typeof e?e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/\//g,"&#x2F;"):e}function o(e){return e.replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#x27;/g,"'").replace(/&#x2F;/g,"/")}function a(s){if(s.nodeType==E.DOCUMENT_NODE){var h,c,u,l=s.firstChild;for(c=0,u=s.childNodes.length;c<u;c+=1)if(s.childNodes[c].nodeType!==E.COMMENT_NODE){l=s.childNodes[c];break}if(r)h=a(l);else{h={};var p=i(l);h[p]=a(l)}return h}if(s.nodeType==E.ELEMENT_NODE){var h=new Object;h.BB=0;for(var f=s.childNodes,d=0;d<f.length;d++){var l=f.item(d),p=i(l);if(h.BB++,null==h[p])h[p]=a(l),h[p+"_asArray"]=new Array(1),h[p+"_asArray"][0]=h[p];else{if(null!=h[p]&&!(h[p]instanceof Array)){var g=h[p];h[p]=new Array,h[p][0]=g,h[p+"_asArray"]=h[p]}for(var v=0;null!=h[p][v];)v++;h[p][v]=a(l)}}for(var y=0;y<s.attributes.length;y++){var T=s.attributes.item(y);h.BB++;for(var I=T.value,w=0,S=e.length;w<S;w++){var R=e[w];try{R.test.call(this,T)&&(I=R.UB.call(this,T.value))}catch(e){R.test.call(this,T),console.error(e)}}h[t+T.name]=I}var b=n(s);return null!=b&&""!=b&&(h.BB++,h.xB=b),1==h.BB&&null!=h["HB"]&&(h=h["HB"]),null!=h["HB"]&&(h.qB=h["HB"],m&&(h.qB=o(h.qB)),delete h["HB"],delete h["VB"]),null!=h["jB"]&&(h.GB=h["jB"],delete h["jB"],delete h["QB"]),null==h.qB&&null==h.GB||(h.toString=function(){return(null!=this.qB?this.qB:"")+(null!=this.GB?this.GB:"")}),h}return s.nodeType==E.TEXT_NODE||s.nodeType==E.CDATA_SECTION_NODE?s.nodeValue:s.nodeType==E.COMMENT_NODE?null:void 0}function h(e,t,r,i){var n="<"+(null!=e&&null!=e.xB?e.xB+":":"")+t;if(null!=r)for(var s=0;s<r.length;s++){var o=r[s],a=e[o];n+=" "+o.substr(1)+"='"+a+"'"}return n+=i?"/>":">"}function c(e,t){return"</"+(null!=e.xB?e.xB+":":"")+t+">"}function u(e,t){return-1!==e.indexOf(t,e.length-t.length)}function l(e,t){return!!(u(t.toString(),"_asArray")||0==t.toString().indexOf("_")||e[t]instanceof Function)}function p(e){var t=0;if(e instanceof Object)for(var r in e)l(e,r)||t++;return t}function f(e){var t=[];if(e instanceof Object)for(var r in e)-1==r.toString().indexOf("__")&&0==r.toString().indexOf("_")&&t.push(r);return t}function d(e){var t="";return null!=e.GB&&(t+="<![CDATA["+e.GB+"]]>"),null!=e.qB&&(t+=m?s(e.qB):e.qB),t}function g(e){var t="";return e instanceof Object?t+=d(e):null!=e&&(t+=m?s(e):e),t}function v(e,t,r){var i="";if(0==e.length)i+=h(e,t,r,!0);else for(var n=0;n<e.length;n++)i+=h(e[n],t,f(e[n]),!1),i+=y(e[n]),i+=c(e[n],t);return i}function y(e){var t="";if(p(e)>0)for(var r in e)if(!l(e,r)){var i=e[r],n=f(i);if(null==i||void 0==i)t+=h(i,r,n,!0);else if(i instanceof Object)if(i instanceof Array)t+=v(i,r,n);else{var s=p(i);s>0||null!=i.qB||null!=i.GB?(t+=h(i,r,n,!1),t+=y(i),t+=c(i,r)):t+=h(i,r,n,!0)}else t+=h(i,r,n,!1),t+=g(i),t+=c(i,r)}return t+=g(e)}null!==t&&void 0!==t||(t="_"),null!==r&&void 0!==r||(r=!1);var m=!1,E={ELEMENT_NODE:1,TEXT_NODE:3,CDATA_SECTION_NODE:4,COMMENT_NODE:8,DOCUMENT_NODE:9};this.KB=function(e){var t;if(window.DOMParser){t=(new window.DOMParser).parseFromString(e,"text/xml")}else 0==e.indexOf("<?")&&(e=e.substr(e.indexOf("?>")+2)),t=new ActiveXObject("Microsoft.XMLDOM"),t.async="false",t.YB(e);return t},this.zB=function(e){return a(e)},this.JB=function(e){var t=this.KB(e);return this.zB(t)},this.WB=function(e){return y(e)},this.XB=function(e){var t=this.WB(e);return this.KB(t)},this.getVersion=function(){return"1.0.11"},this.ZB=function(e){m=e}};e.t=i},function(e,t,r){"use strict";var i=function(){function e(e,t,r,i,n){this.id=e,this.bitrate=t,this.duration=r,this.uri=i,this.wB=n}return e}();t.$B=i},function(e,t,r){"use strict";var i=r(6),n=r(22),s=r(10),o=r(0),a=r(3),h=function(){function e(){this.eU=new i.fn.Zi,this.tU=new i.fn.Zi,this.te=o.Framework.resolve(o.Framework.q.I).log()}return e.prototype.rU=function(e,t){var r=0,i=-1,s=e.Qu.duration;this.eU.Vi()?i=Math.max(10,this.eU.Yi(t)):this.tU.Vi()&&(i=Math.max(10,this.tU.Yi(t))),r=i>-1?Math.max(0,s-i*a.ni.Gt.jt):s/2,e.type==n.Tu.Eu&&(r*=2);var o=Math.max(this.iU(),r);return this.te.debug("TIMER DETAILS duration: "+s+" left: "+t+" downTime: "+i+" fallAvg: "+this.eU.Xi()+" timer: "+o),o},e.prototype.nU=function(e,t){return 5e3},e.prototype.sU=function(e){return this.eU.Vi()?Math.min(this.eU.Yi(e),this.oU()):this.aU()},e.prototype.PB=function(e){if(e.Yu()===s.Ws.Ys)switch(e.Ku()){case n.Tu.gu:case n.Tu.du:case n.Tu.vu:this.eU.Ki(e.il());break;case n.Tu.mu:case n.Tu.Eu:this.tU.Ki(e.il())}},e.prototype.iU=function(){return e.hU},e.prototype.aU=function(){return e.cU},e.prototype.oU=function(){return e.uU},e}();h.hU=500,h.uU=1500,h.cU=500,t.lU=h},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(1),s=r(54),o=r(148),a=r(151),h=r(0),c=r(28),u=r(10),l=r(31),p=r(27);!function(e){function t(t){return this.JM(t)||-1!=t.indexOf(e.WM)}function r(t){return-1!=t.toLowerCase().indexOf(e.XM.toLowerCase())||-1!=t.toLowerCase().indexOf(e.pU.toLowerCase())||-1!=t.toLowerCase().indexOf(e.fU.toLowerCase())}e.dU=1,e.gU=2,e.vU=3e4,e.yU=4e3,e.mU=500,e.EU=!0,e.TU=1e4,e.IU=16,e.wU=3,e.XM=".m3u8",e.pU="(format=m3u8-aapl-v3)",e.fU="(video,format=m3u8-aapl-v3,audiotrack=audio)",e.WM=".ts",e.cB=t,e.JM=r;var f=function(t){function s(e,r,i){var s=t.call(this,i)||this;return s.SU=!1,s.Ul=0,s._B=new n,s.kB=new n,s.ticket=e,s.RU=r,r&&(s.bU=s.PU(e._A())),s.lB=e.LA(),s.fB=new a.AU,s.CU=new o.kU,s}return i(s,t),s.prototype.S_=function(){return StreamProtocol.OU},s.prototype.PU=function(e){var t=e.lastIndexOf("/");return e.substr(0,t)},s.prototype.Ak=function(){return this.ticket},s.prototype.wN=function(){return this.CU.wN()},s.prototype.isLive=function(){return this.CU.isLive()},s.prototype.RN=function(){return this.fB},s.prototype.K_=function(){return this.ticket.BA()},s.prototype.CN=function(){return this.lB},s.prototype.SN=function(e){var t=e.url=this._U(e.url);return t===this.lB?(this.SU&&this.te.debug("SAME MANIFEST "+t+","+this.lB),!0):null!=this.CU&&this.CU.NU(t)?(this.SU&&this.te.debug("CORRECT PLAYLIST "+t+","+this.lB),!0):null!=this.CU&&null!=this.CU.TB(t)?(this.SU&&this.te.debug("CORRECT SEGMENT "+t+","+this.lB),!0):!(!r(t)||this.CU.DU()===t)&&(this.SU&&this.te.debug("FIRST REQUEST FOR MANIFEST "+t+","+this.lB),!1)},s.prototype._U=function(e){return p(e).pI().toString()},s.prototype.Yu=function(e){return r(e)?u.Ws.zs:null!=this.CU.TB(e)?u.Ws.Ys:u.Ws.Js},s.prototype.$u=function(e){var t=this.Yu(e);if(t==u.Ws.Ys||t==u.Ws.Ks)return!0},s.prototype.bN=function(e){var t=e,r=this.Yu(t),i=0,n=0,s=0,o=!0;if(r!=u.Ws.zs){var a=this.CU.TB(t);null!=a&&(i=a.duration,n=a.bitrate,s=a.id)}else if(o=!1,null!=this.CU&&this.CU.FU.has(t)){var n=this.CU.FU.get(t).bitrate;this._B.set(n,h.Framework.time())}return new l.SR(t,r,o,s,i,n,this.$u(t),this.K_())},s.prototype.KC=function(e,t,r){var i=this.CU.FB(e,t);return null!=i?new l.SR(i.wB,r,!0,e,i.duration,t,!0,this.K_()):null},s.prototype.PN=function(e){var t=e.RB,r=e.Wu(),i=this.CU.parse(r,t);if(this.CU.FU.has(r)){var n=this.CU.FU.get(r);this.q_.zC(n.bitrate)}e.Vu.response=i,e.Vu.responseText=i},s.prototype.AN=function(e){t.prototype.AN.call(this,e),e.Yu()!=u.Ws.zs&&e.Yu()!=u.Ws.Js&&(this.fB.PB(e),e.Yu()==u.Ws.Ys&&this.q_.HC(e.Qu))},s.prototype.Y_=function(e,r){var i=e;return i.Q_=h.Framework.time(),t.prototype.Y_.call(this,i,r)},s.prototype.sk=function(t){if(e.EU){null==this.kB.get(t)&&this.CU.isLive()?this.OB(t):this.te.debug("HLS PRE-FETCHING METADATA ALREADY SCHEDULED OR MISSING HLS INFO")}},s.prototype.OB=function(t){var r=this,i=this.CU.LU.get(t);if(null!=i){var n=this._B.has(t),s=this._B.get(t),o=n?s:0,a=null!=i.MU?i.MU[i.MU.length-1].duration:e.yU,c=o+a,u=Math.max(1,c-h.Framework.time()+e.mU);this.te.info("HLS PREFETCHING METADATA "+i.wB+" BITRATE "+t+" IN "+u);var l=h.Framework.setTimeout(function(){r.NB(t,i.wB,h.Framework.time())},u);this.kB.set(t,l)}else this.te.warn("NO STREAM WITH BT "+t)},s.prototype.NB=function(e,t,r){var i=this._B.get(e);if(null==i&&(i=0),i>r)this.OB(e);else{var n=new c.HiveRequest(this.ticket.sessionId);n.open("GET",t),n.mI=!0,n.send(),this.kB.delete(e),this._B.set(e,h.Framework.time())}},s.prototype.IN=function(){var e=this;this.kB.keys().forEach(function(t){var r=e.kB.get(t);h.Framework.clearTimeout(r),e.kB.delete(t)})},s.prototype.lk=function(){return t.prototype.G_.call(this,e.dU,e.gU)},s.prototype.ck=function(e){var t=e.url,r=this.CU.IB(t);return null!=r?this.bN(r.wB):null},s.prototype.yk=function(e,t,r,i){return r-e},s.prototype.vk=function(){return e.vU},s.prototype.TN=function(){return e.TU},s.prototype.gk=function(e,t){var r=this._C(),i=this.gN(),n=r.ER(),s=0;if(e>n)for(var o=this.CU.FB(n,t);o&&o.id<e;)s+=o.duration,this.te.debug("Segment duration "+o.duration+" total msec "+s+"segment id "+o.id),o=o.next;var a=h.Framework.time()-i;return Math.max(0,s-a)},s}(s.ON);e.BU=f}(t.OU||(t.OU={}))},function(e,t,r){"use strict";var i=r(1),n=r(2),s=r(0),o=r(86),a=r(57),h=r(87),c=r(4),u=function(){function e(){this.UU="[CACHE]",this.xU=new i,this.HU=-1,this.qU=[],this.te=s.Framework.resolve(s.Framework.q.I).log()}return e.prototype.init=function(e,t){this.VU=e,this.jU=t},e.prototype.put=function(e){var t=n.defer();try{var r=e.zu(),i=e.xu,s=e.Hu,c=e.Mu.Su-1,u=e.Mu.Su;-1==this.HU&&this.GU();var l=null,p=!1;if(this.xU.has(r)){l=this.xU.get(r);var f=new a.ED(0,c,u);p=!0,l.content.forEach(function(e,t){if(a.wD.ID(t).mD(f))return void(p=!1)})}else{var d=new a.ED(0,c,u).toString();l=new h.QU(e.Qu),e.KU&&(l.YU=e.KU.Ik.Tk),l.content.set(d,new o.zU(u,s,e.Mu,e.Ku())),this.xU.set(r,l),p=!0,this.qU.unshift(r)}null==l.headers&&null!=i&&(l.headers=i),t.resolve(p)}catch(e){t.reject("CACHE PUT ERROR "+e)}return t.Te},e.prototype.get=function(e){var t=n.defer();try{var r=this.xU.get(e);if(null!=r){var i=null;r.content.forEach(function(e,t){if(a.wD.ID(t).vD())return i=e,i.headers=r.headers,void(i.YU=r.YU)}),t.resolve(i)}else t.resolve(null)}catch(e){t.reject("CACHE GET ERROR "+e)}return t.Te},e.prototype.hk=function(e){try{return this.xU.keys()}catch(e){c.ErrorMonitor.gi().di("GET KEYS ERROR",this.UU,e)}},e.prototype.JU=function(e){var t=n.defer();try{t.resolve(this.xU.values())}catch(e){t.reject("CACHE GET ELEMENTS ERROR "+e)}return t.Te},e.prototype.contains=function(e){var t=n.defer();try{this.xU.has(e)?t.resolve(!0):t.resolve(!1)}catch(e){t.reject("CACHE CONTAINS ERROR "+e)}return t.Te},e.prototype.GU=function(){var e=this;this.WU(),this.te.debug(this.UU+" Starting cache periodic purge"),this.HU=s.Framework.setInterval(function(){e.m()},this.jU)},e.prototype.WU=function(){-1!=this.HU&&(this.te.debug(this.UU+" Stopping cache periodic purge"),s.Framework.clearInterval(this.HU),this.HU=-1)},e.prototype.m=function(){var e=this;try{var t=0,r=0,i=0;this.te.debug(this.UU+" RUNNING GC"),this.qU.every(function(i,n){var s=e.xU.get(i).size();return t+s>e.VU?(r=n,!1):(t+=s,!0)})||(i=this.qU.length-r,this.qU.splice(r,this.qU.length-1).forEach(function(t){e.xU.delete(t)})),this.te.debug(this.UU+" GC DONE - REMOVED: "+i+" - CURRENT ITEMS: "+this.xU.length+" SIZE: "+t+" "),0===this.xU.length&&(this.te.debug(this.UU+" Cache contains no items, stopping purge timer"),this.WU())}catch(e){c.ErrorMonitor.gi().di("PURGE FAILED",this.UU,e)}},e.prototype.XU=function(){this.xU=new i,this.qU=[]},e.prototype.ZU=function(){var e=this;this.xU.forEach(function(t,r){e.te.debug("EID="+r),t.content.forEach(function(t,r){e.te.debug("\tRANGE ",r)})})},e}();t.$U=u},function(e,t,r){"use strict";var i=function(){function e(e,t,r,i){this.length=e,this.data=t,this.Mu=r,this.ex=i}return e}();t.zU=i},function(e,t,r){"use strict";var i=r(57),n=r(1),s=function(){function e(e){this.headers=null,this.YU=null,this.tx=0,this.ix=!1,this.Qu=e,this.content=new n}return e.prototype.size=function(){var e=0;return this.content.forEach(function(t,r){e+=i.wD.ID(r).size()}),e},e}();t.QU=s},function(e,t,r){"use strict";!function(e){e[e.nx=0]="ALL",e[e.AS=1]="AS",e[e.hC=2]="SITE"}(t.sx||(t.sx={}))},function(e,t,r){"use strict";var i=r(0),n=r(23),s=r(3),o=r(11),a=r(2),h=r(1),c=r(55),u=r(168),l=r(4),p=function(){function e(){this.ox=!1,this.mn="[UDPLeaderElection] ",this.Hl=i.Framework.resolve(i.Framework.q.F),this.ax=new h,this.hx=new h,this.ux=new h,this.lx=new h,this.px=new h,this.gx=[]}return e.prototype.init=function(e){this.vx=e,this.te=i.Framework.resolve(i.Framework.q.I).log(e.sessionId),this.wC=e.wC,this.yx=e.yx,this.RC=e.RC},e.prototype.mx=function(e,t){var r=this,i=a.defer();try{if(this.ox){var n=null;e.uo&&(n=e.uo);var s=new u.Ex(e.guid,e.co,n,e.so);if(this.ax.has(s.Ck)){var o=this.ax.get(s.Ck);o.Tx==s.Tx&&o.Ix==s.Ix?i.resolve():(this.ax.set(s.Ck,s),this.wx(),this.Sx(s).then(function(){i.resolve()}).fail(function(e){r.ax.delete(s.Ck),r.wx(),i.reject(e)}))}else t?(s.Rx=t,this.te.info(this.mn+" NEW MEMBER GUID "+s.Ck+" RANKING "+s.Tx+" LEADER "+s.Ix),this.ax.set(s.Ck,s),this.wx(),this.Sx(s).then(function(){r.bx(r.ax.get(s.Ck)),i.resolve()}).fail(function(e){r.ax.delete(s.Ck),r.wx(),i.reject(e)})):this.Px(s).then(function(e){s.Rx=e,r.te.info(r.mn+" NEW MEMBER GUID "+s.Ck+" RANKING "+s.Tx+" LEADER "+s.Ix),r.ax.set(s.Ck,s),r.wx(),r.Sx(s).then(function(){i.resolve()}).fail(function(e){r.ax.delete(s.Ck),r.wx(),i.reject(e)})}).fail(function(e){i.reject(e)})}else i.reject("LEADER ELECTION NOT STARTED YET")}catch(e){i.reject("TRIGGER LEADER ELECTION ERROR "+e)}return i.Te},e.prototype.bx=function(e){var t=new o.po(o.Zs.K,null);t.guid=e.Ck,t.so=e.Ix,t.co=e.Tx;var r=[t];this.yx.Ax(r,!1)},e.prototype.Px=function(e){var t=this,r=a.defer();return this.lx.has(e.Ck)||this.ux.has(e.Ck)?r.reject(f.Cx):(this.lx.set(e.Ck,Date.now()),this.Hl.connect(e.Ck).then(function(i){var n=i.Bl.Dl(t.vx.swarmId);null==n?(n=i.Bl.Al(t.vx.swarmId),t.kx(n).then(function(){r.resolve(i)}).fail(function(e){r.reject(e)}).done()):t.px.get(e.Ck)?r.resolve(i):(t.lx.delete(e.Ck),t.kx(n).then(function(){r.resolve(i)}).fail(function(e){r.reject(e)}).done())}).fail(function(i){t.lx.delete(e.Ck),r.reject(i)}).done()),r.Te},e.prototype.kx=function(e){var t=this,r=a.defer(),o=new n.mu.Mr.np.Ox;o.Ck=this._x.Ck,o.Tx=this._x.Tx,o.so=this._x.Ix,o.Nx=this._x.Nx,this.te.debug(this.mn+"MSG uuid "+o.Ck+" rankValue "+o.Tx+" isLeader "+o.so+" stream id "+o.Nx);var h=i.Framework.setTimeout(function(){t.Dx(e._l)},s.ni.UDPBroadcast.Vr);return this.ux.set(e._l,{Fx:h,defer:r}),e.jl(n.mu.Rl.gl,o),r.Te},e.prototype.Dx=function(e){if(this.ux.has(e)){this.te.debug(this.mn+" HANDSHAKE REQ EXPIRED TO "+e);var t=this.ux.get(e);this.ux.delete(e),t.defer.reject("EXPIRED")}},e.prototype.Lx=function(e,t){try{this.te.debug(this.mn+"HANDSHAKE RESP RECEIVED FROM "+t._l);var r=t._l,n=this.ux.get(r);i.Framework.clearTimeout(n.Fx),this.ux.delete(r),n.defer.resolve(t)}catch(e){l.ErrorMonitor.gi().di("HANDSHAKE RESPONSE RECEIVED FAILED",this.mn,e)}},e.prototype.Mx=function(e,t){var r=this;try{var i=new o.po(o.Zs.K,null,e.so);if(i.guid=e.Ck,i.co=e.Tx,e.Nx===this.wC.K_()){var n=t.Bl.Dl(this.vx.swarmId);this.px.set(e.Ck,e.Ck),this.Bx(n,"OK"),this.mx(i,t).then(function(){}).fail(function(e){l.ErrorMonitor.gi().di("LEADER ELECTION FAILED",r.mn,e)})}}catch(e){l.ErrorMonitor.gi().di("HANDSHAKE REQUEST FAILED",this.mn,e)}},e.prototype.Bx=function(e,t){var r=new n.mu.Mr.np.vl;r.accept=t,e.jl(n.mu.Rl.vl,r),this.te.debug(this.mn+"SEND HANDSHAKE RESPONSE TO "+e._l)},e.prototype.Sx=function(e){var t=this,r=a.defer();if(this.Ux()){var i=!1;this.te.info(this.mn+"I HAVE THE HIGHEST SCORE"),e.Ix&&!this.hx.has(e.Ck)&&(i=!0,this.te.info(this.mn+"SEND SWITCH REQUEST TO "+e.Ck),this.xx(e).then(function(){r.resolve()}).fail(function(e){3==e.Hx?(t.te.debug(t.mn+" SWITCH REQUEST WAS CANCELED."),r.resolve()):(e.Hx=2)&&r.reject(e)})),this._x.Ix||null==this.qx||this.qx.Ck==e.Ck||this.hx.has(this.qx.Ck)||(this.te.info("SEND SWITCH REQUEST TO THE ALREADY KNOWN LEADER"),i=!0,this.xx(this.qx).then(function(){r.resolve()}).fail(function(e){3==e.Hx?(t.te.debug(t.mn+" SWITCH REQUEST WAS CANCELED."),r.resolve()):(e.Hx=2)&&r.reject(e)})),null!=this.qx||e.Ix||this._x.Ix||0!=this.hx.length||(this.te.info(this.mn+"BECOME LEADER"),this.Vx()),i||r.resolve()}else this.jx(e)?(this.te.info(this.mn+"PEER "+e.Ck+" HAS THE HIGHEST SCORE"),this.Gx(),this._x.Ix&&e.Ix&&this.stepDown(),this.Qx(e),r.resolve()):r.resolve();return r.Te},e.prototype.Qx=function(e){try{this.te.info(this.mn+"UPDATE THE LEADERSHIP"),null!=this.qx&&this.ax.has(this.qx.Ck)&&(this.ax.get(this.qx.Ck).Ix=!1),this.ax.has(e.Ck)?(this.ax.get(e.Ck).Tx=e.Tx,this.qx=e,this.ax.get(e.Ck).Ix=!0):(this.te.warn(this.mn+"SET A LEADER THAT IS NOT A LAN MEMBER LIST. SHOULD NEVER HAPPEN"),this.ax.set(e.Ck,e),this.qx=e),this.wC.Kx(e),this.te.info(this.mn+"NEW KNOWN LEADER "+this.wC.kk().Ck)}catch(e){l.ErrorMonitor.gi().di(e,this.mn)}},e.prototype.stepDown=function(){this.te.info(this.mn+"STEP DOWN"),this._x.Ix=!1,this.wC.Yx(!1),s.ni.dr.rr&&(this.RC.zx(),this.RC.Jx(!1))},e.prototype.Gx=function(){for(var e=this.hx.keys(),t=0,r=e;t<r.length;t++){var n=r[t],s=this.hx.get(n);this.hx.delete(n),i.Framework.clearTimeout(s.Fx),s.defer.reject({Hx:3,message:"CANCELED PENDING RESPONSES"})}},e.prototype.jx=function(e){return e.Ck==this.gx[0].Ck},e.prototype.Ux=function(){return u.Ex.Dp(this._x,this.gx[0])<0},e.prototype.wx=function(){var e=new c(this.ax.values()),t=e.Ro(u.Ex.Dp);e.push(this._x),this.wC.Wx(t);var r=new c(this.ax.values());this.gx=r.Ro(u.Ex.Dp)},e.prototype.Xx=function(e){this.Zx(e)},e.prototype.Zx=function(e){this.te.info(this.mn+"EVALUATE THE SWITCH REQUEST FROM "+e.Ck);var t=void 0;this.ax.has(e.Ck)?t=this.ax.get(e.Ck):this.te.warn("I RECEIVED A SWITCH REQUEST FROM AN UNKNOWN MEMBER. THIS SHOULD NEVER HAPPEN"),t&&(this._x.Ix?this.Ux()?this.$x(t,!1):(this.stepDown(),this.Gx(),this.Qx(t),this.$x(t,!0)):this.jx(t)?(this.Qx(t),this.$x(t,!0)):this.$x(t,!1))},e.prototype.$x=function(e,t){var r=this;this.eH(e.Rx,t).then(function(){}).fail(function(e){l.ErrorMonitor.gi().di("SEND SWITCH RESPONSE ERROR",r.mn,e)}).done()},e.prototype.eH=function(e,t){var r=a.defer(),i=new n.mu.Mr.np.tH;return i.ok=t,e.Bl.Dl(this.vx.swarmId).jl(n.mu.Rl.ml,i),r.Te},e.prototype.xx=function(e){var t=this,r=a.defer();return this.rH(e.Rx).then(function(i){t.iH(i,e),r.resolve()}).fail(function(e){r.reject(e)}).done(),r.Te},e.prototype.iH=function(e,t){try{e?(this.ax.get(t.Ck).Ix=!1,this.qx=this._x,this.Vx()):(this.Gx(),this.ax.get(t.Ck).Ix=!0,this.stepDown(),this.Qx(t))}catch(e){l.ErrorMonitor.gi().di("HANDLE LEADERSHIP SWITCH RESPONSE ERROR",this.mn,e)}},e.prototype.nH=function(e,t){if(this.hx.has(t)){var r=this.hx.get(t);i.Framework.clearTimeout(r.Fx),this.hx.delete(t),r.defer.resolve(e.ok)}else this.te.warn(this.mn+" SWITCH LEADERSHIP RESPONSE RECEIVED FROM UNKNOWN PEER "+t)},e.prototype.rH=function(e){var t=this,r=a.defer(),o=new n.mu.Mr.np.yl;o.Ck=this._x.Ck,o.Tx=this._x.Tx,this.te.debug(this.mn+"SWITCH LEADERSHIP REQUEST TO "+e._l);var h=i.Framework.setTimeout(function(){t.sH(e._l)},s.ni.UDPBroadcast.qr);this.hx.set(e._l,{Fx:h,defer:r});var c=e.Bl.Dl(this.vx.swarmId);return i.Framework.setTimeout(function(){c.jl(n.mu.Rl.yl,o)},1),r.Te},e.prototype.sH=function(e){if(this.hx.has(e)){this.te.info(this.mn+" SWITCH LEADERSHIP EXPIRED TO "+e);var t=this.hx.get(e);this.hx.delete(e),t.defer.reject({Hx:2,message:"EXPIRED"})}},e.prototype.Vx=function(){this.te.info(this.mn+"BECOMING LAN LEADER"),null!=this.qx&&this.ax.has(this.qx.Ck)&&(this.ax.get(this.qx.Ck).Ix=!1),this._x.Ix=!0,this.qx=this._x,this.wC.Yx(!0),this.wC.Kx(this._x),s.ni.dr.rr&&(this.RC.zx(),this.RC.Jx(!0))},e.prototype.Zh=function(e){this._x=new u.Ex(this.wC.W(),this.wC.oH(),"",!1,this.wC.K_()),this.ox=!0,this.te.info(this.mn+" UDP LEADER ELECTION STARTED")},e.prototype.aH=function(e){this.ax.delete(e),this.wx(),0==this.ax.length?(this._x.Ix=!1,this.qx=null,this.wC.Yx(!1),this.wC.hH(!1),this.RC.zx(),this.RC.Jx(!1)):this.Ux()?this.Vx():this.gx.length>0&&this.Qx(this.gx[0])},e}();t.cH=p;var f;!function(e){e[e.uH=0]="FAILURE",e[e.Cx=1]="ALREADY_PENDING"}(f=t.lH||(t.lH={}))},function(e,t,r){var i,n,s;/**
 * @license Long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/Long.js for details
 */
!function(r,o){n=[],i=o,void 0!==(s="function"==typeof i?i.apply(t,n):i)&&(e.t=s)}(0,function(){"use strict";function e(e,t,r){this.low=0|e,this.high=0|t,this.Cb=!!r}e.pH,Object.defineProperty(e.prototype,"__isLong__",{value:!0,l:!1,u:!1}),e.fH=function(e){return!0===(e&&e.pH)};var t={},r={};e.mp=function(i,n){var s,o;return n?0<=(i>>>=0)&&i<256&&(o=r[i])?o:(s=new e(i,(0|i)<0?-1:0,!0),0<=i&&i<256&&(r[i]=s),s):-128<=(i|=0)&&i<128&&(o=t[i])?o:(s=new e(i,i<0?-1:0,!1),-128<=i&&i<128&&(t[i]=s),s)},e.dp=function(t,r){return r=!!r,isNaN(t)||!isFinite(t)?e.ZERO:!r&&t<=-s?e.MIN_VALUE:!r&&t+1>=s?e.MAX_VALUE:r&&t>=n?e.dH:t<0?e.dp(-t,r).Rp():new e(t%i|0,t/i|0,r)},e.Ay=function(t,r,i){return new e(t,r,i)},e.gp=function(t,r,i){if(0===t.length)throw Error("number format error: empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return e.ZERO;if("number"==typeof r&&(i=r,r=!1),(i=i||10)<2||36<i)throw Error("radix out of range: "+i);var n;if((n=t.indexOf("-"))>0)throw Error('number format error: interior "-" character: '+t);if(0===n)return e.gp(t.substring(1),r,i).Rp();for(var s=e.dp(Math.pow(i,8)),o=e.ZERO,a=0;a<t.length;a+=8){var h=Math.min(8,t.length-a),c=parseInt(t.substring(a,a+h),i);if(h<8){var u=e.dp(Math.pow(i,h));o=o.multiply(u).add(e.dp(c))}else o=o.multiply(s),o=o.add(e.dp(c))}return o.Cb=r,o},e.gH=function(t){return t instanceof e?t:"number"==typeof t?e.dp(t):"string"==typeof t?e.gp(t):new e(t.low,t.high,t.Cb)};var i=4294967296,n=i*i,s=n/2,o=e.mp(1<<24);return e.ZERO=e.mp(0),e.vH=e.mp(0,!0),e.ONE=e.mp(1),e.yH=e.mp(1,!0),e.mH=e.mp(-1),e.MAX_VALUE=e.Ay(-1,2147483647,!1),e.dH=e.Ay(-1,-1,!0),e.MIN_VALUE=e.Ay(0,-2147483648,!1),e.prototype.bb=function(){return this.Cb?this.low>>>0:this.low},e.prototype.EH=function(){return this.Cb?(this.high>>>0)*i+(this.low>>>0):this.high*i+(this.low>>>0)},e.prototype.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix out of range: "+t);if(this.TH())return"0";var r;if(this.IH()){if(this.ae(e.MIN_VALUE)){var i=e.dp(t),n=this.wH(i);return r=n.multiply(i).SH(this),n.toString(t)+r.bb().toString(t)}return"-"+this.Rp().toString(t)}var s=e.dp(Math.pow(t,6),this.Cb);r=this;for(var o="";;){var a=r.wH(s),h=r.SH(a.multiply(s)).bb()>>>0,c=h.toString(t);if(r=a,r.TH())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},e.prototype.RH=function(){return this.high},e.prototype.bH=function(){return this.high>>>0},e.prototype.PH=function(){return this.low},e.prototype.AH=function(){return this.low>>>0},e.prototype.CH=function(){if(this.IH())return this.ae(e.MIN_VALUE)?64:this.Rp().CH();for(var t=0!=this.high?this.high:this.low,r=31;r>0&&0==(t&1<<r);r--);return 0!=this.high?r+33:r+1},e.prototype.TH=function(){return 0===this.high&&0===this.low},e.prototype.IH=function(){return!this.Cb&&this.high<0},e.prototype.kH=function(){return this.Cb||this.high>=0},e.prototype.OH=function(){return 1==(1&this.low)},e.prototype.Wp=function(){return 0==(1&this.low)},e.prototype.ae=function(t){return e.fH(t)||(t=e.gH(t)),(this.Cb===t.Cb||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},e._H=e.prototype.ae,e.prototype.NH=function(e){return!this.ae(e)},e.DH=e.prototype.NH,e.prototype.FH=function(e){return this.mo(e)<0},e.prototype.LH=e.prototype.FH,e.prototype.MH=function(e){return this.mo(e)<=0},e.prototype.BH=e.prototype.MH,e.prototype.UH=function(e){return this.mo(e)>0},e.prototype.xH=e.prototype.UH,e.prototype.HH=function(e){return this.mo(e)>=0},e.prototype.qH=e.prototype.HH,e.prototype.mo=function(t){if(e.fH(t)||(t=e.gH(t)),this.ae(t))return 0;var r=this.IH(),i=t.IH();return r&&!i?-1:!r&&i?1:this.Cb?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.SH(t).IH()?-1:1},e.prototype.Rp=function(){return!this.Cb&&this.ae(e.MIN_VALUE)?e.MIN_VALUE:this.VH().add(e.ONE)},e.prototype.jH=e.prototype.Rp,e.prototype.add=function(t){e.fH(t)||(t=e.gH(t));var r=this.high>>>16,i=65535&this.high,n=this.low>>>16,s=65535&this.low,o=t.high>>>16,a=65535&t.high,h=t.low>>>16,c=65535&t.low,u=0,l=0,p=0,f=0;return f+=s+c,p+=f>>>16,f&=65535,p+=n+h,l+=p>>>16,p&=65535,l+=i+a,u+=l>>>16,l&=65535,u+=r+o,u&=65535,e.Ay(p<<16|f,u<<16|l,this.Cb)},e.prototype.SH=function(t){return e.fH(t)||(t=e.gH(t)),this.add(t.Rp())},e.prototype.sub=e.prototype.SH,e.prototype.multiply=function(t){if(this.TH())return e.ZERO;if(e.fH(t)||(t=e.gH(t)),t.TH())return e.ZERO;if(this.ae(e.MIN_VALUE))return t.OH()?e.MIN_VALUE:e.ZERO;if(t.ae(e.MIN_VALUE))return this.OH()?e.MIN_VALUE:e.ZERO;if(this.IH())return t.IH()?this.Rp().multiply(t.Rp()):this.Rp().multiply(t).Rp();if(t.IH())return this.multiply(t.Rp()).Rp();if(this.FH(o)&&t.FH(o))return e.dp(this.EH()*t.EH(),this.Cb);var r=this.high>>>16,i=65535&this.high,n=this.low>>>16,s=65535&this.low,a=t.high>>>16,h=65535&t.high,c=t.low>>>16,u=65535&t.low,l=0,p=0,f=0,d=0;return d+=s*u,f+=d>>>16,d&=65535,f+=n*u,p+=f>>>16,f&=65535,f+=s*c,p+=f>>>16,f&=65535,p+=i*u,l+=p>>>16,p&=65535,p+=n*c,l+=p>>>16,p&=65535,p+=s*h,l+=p>>>16,p&=65535,l+=r*u+i*c+n*h+s*a,l&=65535,e.Ay(f<<16|d,l<<16|p,this.Cb)},e.prototype.GH=e.prototype.multiply,e.prototype.wH=function(t){if(e.fH(t)||(t=e.gH(t)),t.TH())throw new Error("division by zero");if(this.TH())return this.Cb?e.vH:e.ZERO;var r,i,n;if(this.ae(e.MIN_VALUE)){if(t.ae(e.ONE)||t.ae(e.mH))return e.MIN_VALUE;if(t.ae(e.MIN_VALUE))return e.ONE;return r=this._b(1).wH(t).shiftLeft(1),r.ae(e.ZERO)?t.IH()?e.ONE:e.mH:(i=this.SH(t.multiply(r)),n=r.add(i.wH(t)))}if(t.ae(e.MIN_VALUE))return this.Cb?e.vH:e.ZERO;if(this.IH())return t.IH()?this.Rp().wH(t.Rp()):this.Rp().wH(t).Rp();if(t.IH())return this.wH(t.Rp()).Rp();for(n=e.ZERO,i=this;i.HH(t);){r=Math.max(1,Math.floor(i.EH()/t.EH()));for(var s=Math.ceil(Math.log(r)/Math.LN2),o=s<=48?1:Math.pow(2,s-48),a=e.dp(r),h=a.multiply(t);h.IH()||h.UH(i);)r-=o,a=e.dp(r,this.Cb),h=a.multiply(t);a.TH()&&(a=e.ONE),n=n.add(a),i=i.SH(h)}return n},e.prototype.QH=e.prototype.wH,e.prototype.KH=function(t){return e.fH(t)||(t=e.gH(t)),this.SH(this.wH(t).multiply(t))},e.prototype.Bp=e.prototype.KH,e.prototype.VH=function(){return e.Ay(~this.low,~this.high,this.Cb)},e.prototype.Db=function(t){return e.fH(t)||(t=e.gH(t)),e.Ay(this.low&t.low,this.high&t.high,this.Cb)},e.prototype.YH=function(t){return e.fH(t)||(t=e.gH(t)),e.Ay(this.low|t.low,this.high|t.high,this.Cb)},e.prototype.zd=function(t){return e.fH(t)||(t=e.gH(t)),e.Ay(this.low^t.low,this.high^t.high,this.Cb)},e.prototype.shiftLeft=function(t){return e.fH(t)&&(t=t.bb()),0==(t&=63)?this:t<32?e.Ay(this.low<<t,this.high<<t|this.low>>>32-t,this.Cb):e.Ay(0,this.low<<t-32,this.Cb)},e.prototype.zH=e.prototype.shiftLeft,e.prototype._b=function(t){return e.fH(t)&&(t=t.bb()),0==(t&=63)?this:t<32?e.Ay(this.low>>>t|this.high<<32-t,this.high>>t,this.Cb):e.Ay(this.high>>t-32,this.high>=0?0:-1,this.Cb)},e.prototype.JH=e.prototype._b,e.prototype.Pb=function(t){if(e.fH(t)&&(t=t.bb()),0===(t&=63))return this;var r=this.high;if(t<32){var i=this.low;return e.Ay(i>>>t|r<<32-t,r>>>t,this.Cb)}return 32===t?e.Ay(r,0,this.Cb):e.Ay(r>>>t-32,0,this.Cb)},e.prototype.WH=e.prototype.Pb,e.prototype.kb=function(){return this.Cb?new e(this.low,this.high,!1):this},e.prototype.Ob=function(){return this.Cb?this:new e(this.low,this.high,!0)},e})},function(e,t,r){var i,n,s;/**
 * @license Long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/Long.js for details
 */
!function(r,o){n=[],i=o,void 0!==(s="function"==typeof i?i.apply(t,n):i)&&(e.t=s)}(0,function(){"use strict";function e(e,t,r){this.low=0|e,this.high=0|t,this.Cb=!!r}e.pH,Object.defineProperty(e.prototype,"__isLong__",{value:!0,l:!1,u:!1}),e.fH=function(e){return!0===(e&&e.pH)};var t={},r={};e.mp=function(i,n){var s,o;return n?0<=(i>>>=0)&&i<256&&(o=r[i])?o:(s=new e(i,(0|i)<0?-1:0,!0),0<=i&&i<256&&(r[i]=s),s):-128<=(i|=0)&&i<128&&(o=t[i])?o:(s=new e(i,i<0?-1:0,!1),-128<=i&&i<128&&(t[i]=s),s)},e.dp=function(t,r){return r=!!r,isNaN(t)||!isFinite(t)?e.ZERO:!r&&t<=-s?e.MIN_VALUE:!r&&t+1>=s?e.MAX_VALUE:r&&t>=n?e.dH:t<0?e.dp(-t,r).Rp():new e(t%i|0,t/i|0,r)},e.Ay=function(t,r,i){return new e(t,r,i)},e.gp=function(t,r,i){if(0===t.length)throw Error("number format error: empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return e.ZERO;if("number"==typeof r&&(i=r,r=!1),(i=i||10)<2||36<i)throw Error("radix out of range: "+i);var n;if((n=t.indexOf("-"))>0)throw Error('number format error: interior "-" character: '+t);if(0===n)return e.gp(t.substring(1),r,i).Rp();for(var s=e.dp(Math.pow(i,8)),o=e.ZERO,a=0;a<t.length;a+=8){var h=Math.min(8,t.length-a),c=parseInt(t.substring(a,a+h),i);if(h<8){var u=e.dp(Math.pow(i,h));o=o.multiply(u).add(e.dp(c))}else o=o.multiply(s),o=o.add(e.dp(c))}return o.Cb=r,o},e.gH=function(t){return t instanceof e?t:"number"==typeof t?e.dp(t):"string"==typeof t?e.gp(t):new e(t.low,t.high,t.Cb)};var i=4294967296,n=i*i,s=n/2,o=e.mp(1<<24);return e.ZERO=e.mp(0),e.vH=e.mp(0,!0),e.ONE=e.mp(1),e.yH=e.mp(1,!0),e.mH=e.mp(-1),e.MAX_VALUE=e.Ay(-1,2147483647,!1),e.dH=e.Ay(-1,-1,!0),e.MIN_VALUE=e.Ay(0,-2147483648,!1),e.prototype.bb=function(){return this.Cb?this.low>>>0:this.low},e.prototype.EH=function(){return this.Cb?(this.high>>>0)*i+(this.low>>>0):this.high*i+(this.low>>>0)},e.prototype.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix out of range: "+t);if(this.TH())return"0";var r;if(this.IH()){if(this.ae(e.MIN_VALUE)){var i=e.dp(t),n=this.wH(i);return r=n.multiply(i).SH(this),n.toString(t)+r.bb().toString(t)}return"-"+this.Rp().toString(t)}var s=e.dp(Math.pow(t,6),this.Cb);r=this;for(var o="";;){var a=r.wH(s),h=r.SH(a.multiply(s)).bb()>>>0,c=h.toString(t);if(r=a,r.TH())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},e.prototype.RH=function(){return this.high},e.prototype.bH=function(){return this.high>>>0},e.prototype.PH=function(){return this.low},e.prototype.AH=function(){return this.low>>>0},e.prototype.CH=function(){if(this.IH())return this.ae(e.MIN_VALUE)?64:this.Rp().CH();for(var t=0!=this.high?this.high:this.low,r=31;r>0&&0==(t&1<<r);r--);return 0!=this.high?r+33:r+1},e.prototype.TH=function(){return 0===this.high&&0===this.low},e.prototype.IH=function(){return!this.Cb&&this.high<0},e.prototype.kH=function(){return this.Cb||this.high>=0},e.prototype.OH=function(){return 1==(1&this.low)},e.prototype.Wp=function(){return 0==(1&this.low)},e.prototype.ae=function(t){return e.fH(t)||(t=e.gH(t)),(this.Cb===t.Cb||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},e._H=e.prototype.ae,e.prototype.NH=function(e){return!this.ae(e)},e.DH=e.prototype.NH,e.prototype.FH=function(e){return this.mo(e)<0},e.prototype.LH=e.prototype.FH,e.prototype.MH=function(e){return this.mo(e)<=0},e.prototype.BH=e.prototype.MH,e.prototype.UH=function(e){return this.mo(e)>0},e.prototype.xH=e.prototype.UH,e.prototype.HH=function(e){return this.mo(e)>=0},e.prototype.qH=e.prototype.HH,e.prototype.mo=function(t){if(e.fH(t)||(t=e.gH(t)),this.ae(t))return 0;var r=this.IH(),i=t.IH();return r&&!i?-1:!r&&i?1:this.Cb?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.SH(t).IH()?-1:1},e.prototype.Rp=function(){return!this.Cb&&this.ae(e.MIN_VALUE)?e.MIN_VALUE:this.VH().add(e.ONE)},e.prototype.jH=e.prototype.Rp,e.prototype.add=function(t){e.fH(t)||(t=e.gH(t));var r=this.high>>>16,i=65535&this.high,n=this.low>>>16,s=65535&this.low,o=t.high>>>16,a=65535&t.high,h=t.low>>>16,c=65535&t.low,u=0,l=0,p=0,f=0;return f+=s+c,p+=f>>>16,f&=65535,p+=n+h,l+=p>>>16,p&=65535,l+=i+a,u+=l>>>16,l&=65535,u+=r+o,u&=65535,e.Ay(p<<16|f,u<<16|l,this.Cb)},e.prototype.SH=function(t){return e.fH(t)||(t=e.gH(t)),this.add(t.Rp())},e.prototype.sub=e.prototype.SH,e.prototype.multiply=function(t){if(this.TH())return e.ZERO;if(e.fH(t)||(t=e.gH(t)),t.TH())return e.ZERO;if(this.ae(e.MIN_VALUE))return t.OH()?e.MIN_VALUE:e.ZERO;if(t.ae(e.MIN_VALUE))return this.OH()?e.MIN_VALUE:e.ZERO;if(this.IH())return t.IH()?this.Rp().multiply(t.Rp()):this.Rp().multiply(t).Rp();if(t.IH())return this.multiply(t.Rp()).Rp();if(this.FH(o)&&t.FH(o))return e.dp(this.EH()*t.EH(),this.Cb);var r=this.high>>>16,i=65535&this.high,n=this.low>>>16,s=65535&this.low,a=t.high>>>16,h=65535&t.high,c=t.low>>>16,u=65535&t.low,l=0,p=0,f=0,d=0;return d+=s*u,f+=d>>>16,d&=65535,f+=n*u,p+=f>>>16,f&=65535,f+=s*c,p+=f>>>16,f&=65535,p+=i*u,l+=p>>>16,p&=65535,p+=n*c,l+=p>>>16,p&=65535,p+=s*h,l+=p>>>16,p&=65535,l+=r*u+i*c+n*h+s*a,l&=65535,e.Ay(f<<16|d,l<<16|p,this.Cb)},e.prototype.GH=e.prototype.multiply,e.prototype.wH=function(t){if(e.fH(t)||(t=e.gH(t)),t.TH())throw new Error("division by zero");if(this.TH())return this.Cb?e.vH:e.ZERO;var r,i,n;if(this.ae(e.MIN_VALUE)){if(t.ae(e.ONE)||t.ae(e.mH))return e.MIN_VALUE;if(t.ae(e.MIN_VALUE))return e.ONE;return r=this._b(1).wH(t).shiftLeft(1),r.ae(e.ZERO)?t.IH()?e.ONE:e.mH:(i=this.SH(t.multiply(r)),n=r.add(i.wH(t)))}if(t.ae(e.MIN_VALUE))return this.Cb?e.vH:e.ZERO;if(this.IH())return t.IH()?this.Rp().wH(t.Rp()):this.Rp().wH(t).Rp();if(t.IH())return this.wH(t.Rp()).Rp();for(n=e.ZERO,i=this;i.HH(t);){r=Math.max(1,Math.floor(i.EH()/t.EH()));for(var s=Math.ceil(Math.log(r)/Math.LN2),o=s<=48?1:Math.pow(2,s-48),a=e.dp(r),h=a.multiply(t);h.IH()||h.UH(i);)r-=o,a=e.dp(r,this.Cb),h=a.multiply(t);a.TH()&&(a=e.ONE),n=n.add(a),i=i.SH(h)}return n},e.prototype.QH=e.prototype.wH,e.prototype.KH=function(t){return e.fH(t)||(t=e.gH(t)),this.SH(this.wH(t).multiply(t))},e.prototype.Bp=e.prototype.KH,e.prototype.VH=function(){return e.Ay(~this.low,~this.high,this.Cb)},e.prototype.Db=function(t){return e.fH(t)||(t=e.gH(t)),e.Ay(this.low&t.low,this.high&t.high,this.Cb)},e.prototype.YH=function(t){return e.fH(t)||(t=e.gH(t)),e.Ay(this.low|t.low,this.high|t.high,this.Cb)},e.prototype.zd=function(t){return e.fH(t)||(t=e.gH(t)),e.Ay(this.low^t.low,this.high^t.high,this.Cb)},e.prototype.shiftLeft=function(t){return e.fH(t)&&(t=t.bb()),0==(t&=63)?this:t<32?e.Ay(this.low<<t,this.high<<t|this.low>>>32-t,this.Cb):e.Ay(0,this.low<<t-32,this.Cb)},e.prototype.zH=e.prototype.shiftLeft,e.prototype._b=function(t){return e.fH(t)&&(t=t.bb()),0==(t&=63)?this:t<32?e.Ay(this.low>>>t|this.high<<32-t,this.high>>t,this.Cb):e.Ay(this.high>>t-32,this.high>=0?0:-1,this.Cb)},e.prototype.JH=e.prototype._b,e.prototype.Pb=function(t){if(e.fH(t)&&(t=t.bb()),0===(t&=63))return this;var r=this.high;if(t<32){var i=this.low;return e.Ay(i>>>t|r<<32-t,r>>>t,this.Cb)}return 32===t?e.Ay(r,0,this.Cb):e.Ay(r>>>t-32,0,this.Cb)},e.prototype.WH=e.prototype.Pb,e.prototype.kb=function(){return this.Cb?new e(this.low,this.high,!1):this},e.prototype.Ob=function(){return this.Cb?this:new e(this.low,this.high,!0)},e})},function(e,t,r){"use strict";var i,n=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},s=r(2),o=r(1),a=r(0),h=r(163),c=r(3),u=r(23),l=r(11),p=r(164),f=r(15),d=hive.DN.protocol.FN.qN,g=r(5),v=r(4),y=g.Rt.Ci;!function(e){e[e.XH=1]="ACCEPT",e[e.ZH=2]="REJECT"}(i=t.$H||(t.$H={}));var m;!function(e){e[e.nx=0]="ALL",e[e.eq=1]="IN",e[e.tq=2]="OUT"}(m=t.rq||(t.rq={}));var E=function(e){function t(){var t=e.call(this)||this;return t.iq=new o,t.lx=new o,t.nq=-1,t.sq=-1,t.oq=-1,t.connected=!1,t.Hl=a.Framework.resolve(a.Framework.q.F),t.aq=a.Framework.resolve(f.Pa.$o),t.hq=a.Framework.resolve(f.Pa.ea),t.cq=a.Framework.resolve(f.Pa.ta),t.uq=a.Framework.resolve(f.Pa.ra),t}return n(t,e),t.prototype.init=function(t){e.prototype.init.call(this,t),this.vx=t,this.ticket=t.Cn.ticket,this.yx=t.yx,this.RC=t.RC,this.lq=t.lq},t.prototype.start=function(e){try{this.te.info(this.mn+"PARTNERSHIP STARTED "+e.K_()),this.context=e,this.fR=e.K_(),this.pq(c.ni.Ot.At),this.fq(c.ni.dr.or),this.dq(c.ni.Ut.Nt),this.active=!0}catch(e){v.ErrorMonitor.gi().di("START PARTNERSHIP ERROR",this.mn,e)}},t.prototype.stop=function(){return a.Framework.clearInterval(this.nq),a.Framework.clearInterval(this.sq),a.Framework.clearInterval(this.oq),this.context=null,this.fR=null,this.active=!1,this.gq()},t.prototype.Zh=function(e){this.te.info("PARTNERSHIP SERVER CONNECTED"),this.Eh=e,this.connected=!0,null==this.wC.W()&&this.wC.vq(this.Eh)},t.prototype.yq=function(){this.connected=!1},t.prototype.mq=function(e){try{this.Eq(e)||this.iq.has(e.Tk.guid)||this.lx.has(e.Tk.guid)||e.Tk.guid==this.Eh?this.Tq(e):this.Iq(e),this.wq(e)&&this.Sq(e)}catch(e){v.ErrorMonitor.gi().di("DISCOVERED NEW LAN PEER ERROR",this.mn,e)}},t.prototype.Tq=function(e){if(this.Rq.has(e.Tk.guid)){var t=this.Rq.get(e.Tk.guid);this.Rq.delete(e.Tk.guid),this.iL.set(e.Tk.guid,t),this.wC.hH(!0)}},t.prototype.Sq=function(e){if(this.tL.has(e.Tk.guid)){var t=this.tL.get(e.Tk.guid);this.tL.delete(e.Tk.guid),this.rL.set(e.Tk.guid,t)}},t.prototype.pq=function(e){var t=this;-1!=this.nq&&a.Framework.clearInterval(this.nq),this.nq=a.Framework.setInterval(function(){t.bq(!1)},e)},t.prototype.bq=function(e){var t=this;e&&this.nq&&(a.Framework.clearInterval(this.nq),this.pq(c.ni.Ot.At));try{if(this.connected){this.te.debug(this.mn+"ADDING NEW PEERS IF POSSIBLE, NOW "+this.Rq.length+"/"+c.ni.Ot.Pt+","+this.iL.length+"/infinity OUT RND "+this.tL.length+" OUT LAN "+this.rL.length);var r=[].concat(this.iq.keys()).concat(this.lx.keys()),i=this.yx.Pq(!0),n=void 0;n=this.wC.fk()||this.wC.Rk()?this.cq.Aq(this.wC,c.ni.Ot.Pt,this.Rq.values(),r,i):this.aq.Aq(c.ni.Ot.Pt,this.Rq.values(),r,i),this.Cq=n.kq(),n.Oq().forEach(function(e){t.Iq(e)})}else this.te.warn(this.mn+"NOT RUNNING IN PARTNER CHOICE, SRV DISCONNECTED")}catch(e){v.ErrorMonitor.gi().di("PARTNER CHOICE ERROR",this.mn,e)}},t.prototype.Iq=function(e){var t=this;try{var r=e.Tk.guid,i=e.Tk.uo,n=e.Tk.lo;this.te.debug(this.mn+"IN PARTNER ADD PROCESS "+r),this.Eq(e)||this.iq.has(r)||this.lx.has(r)||this.lq._q(r,i,n)||(this.lx.set(r,Date.now()),this.Hl.connect(r).then(function(i){var n=i.Bl.Dl(t.vx.swarmId);null==n&&(n=i.Bl.Al(t.vx.swarmId));t.lx.get(r);t.lx.delete(r),t.active&&t.Nq(n).then(function(i){if(t.Dq(n,e,i.msg),t.Lq.Fq(!1,!1),t.lq.Mq(r,e.Tk.uo,e.Tk.lo),t.Bq(n),t.Cq.length>0&&!e.Uq()){var s=t.Cq[0];t.xq(s.guid),s.qq.Hq(m.tq),t.Cq.splice(0,1)}}).fail(function(e){t.te.debug(t.mn+"PARTNERSHIP REQ FAILED TO "+r+" BECAUSE "+e),t.Lq.Fq(!1,!0),t.Vq(r)})}).fail(function(e){t.te.debug(t.mn+"FAILED ADDING, REMOVING "+r+" BECAUSE "+e),t.Lq.Fq(!0,!0),t.lx.delete(r),t.yx.aH(r)}).done())}catch(e){v.ErrorMonitor.gi().di("IN PARTNER ADD PROCESS ERROR",this.mn,e)}},t.prototype.jq=function(e,t){var r=this;try{var n=e.guid,s=null,o=null;if(e.uo&&(o=e.uo),e.lo&&(s=e.lo),this.Gq(n))this.te.info(this.mn+"ALREADY OUT PARTNER "+n);else{var u=e.fR,l=t.Bl.Dl(this.vx.swarmId);if(this.fR!==u||c.ni.Ut._t!==e.Qq||this.lq._q(n,o,s))this.te.info(this.mn+"PARTNERSHIP CANNOT BE ESTABLISHED WITH "+n+" CONTEXT ID "+u+" protocol version "+e.Qq),this.Kq(l,i.ZH);else{var p=this.Yq(e);this.yx.Ax([p],!1);var f=this.yx.zq(n),d=f.Uq()||this.tL.length<c.ni.Ot.kt;if(!d){this.te.debug(this.mn+" got out part req from "+n+" - reached max "+this.tL.length+"/"+c.ni.Ot.kt);var g=void 0;g=this.wC.fk()||this.wC.Rk()?this.uq.Jq(this.wC,p,this.tL.values()):this.hq.Jq(this.tL.values()),g&&(this.te.debug(this.mn+" chocking "+g.guid),this.tL.delete(g.guid),g.qq.Hq(m.eq),d=!0)}if(d){var y=new h.Partner(n,this.Lq,l,this.te,!1,f);e.Wq&&y.Xq(e.Wq),this.yx.Zq.has(n)?this.rL.set(n,y):this.tL.set(n,y),this.te.info(this.mn+"ADDED OUT PART "+n),this.Kq(l,i.XH),this.lq.Mq(n,o,s),a.Framework.setTimeout(function(){r.$q(n)},500),this.Lq.eV()}else this.te.info(this.mn+" cannot establish partnership to "+n+" - reached max "+this.tL.length+"/"+c.ni.Ot.kt),this.Kq(l,i.ZH)}}}catch(e){v.ErrorMonitor.gi().di("OUT PART REQUEST RECEIVED ERROR",this.mn,e)}},t.prototype.Yq=function(e){var t=new d;t.guid=e.guid,e.internalAs&&(t.internalAs=e.internalAs),e.externalAs&&(t.externalAs=e.externalAs),e.lo&&(t.lo=e.lo),e.uo&&(t.uo=e.uo);var r=!1,i=this.yx.zq(e.guid);if(i&&(r=i.Tk.so),e.tV){var n=[];e.tV.forEach(function(e){var t=new l.no;t.state=e.YN,t.bitrate=e.bitrate,t.delta=e.delta,n.push(t)}),t.ho=n}return new l.po(l.Zs.Xs,t,r)},t.prototype.Kq=function(e,t){var r=this;this.te.debug(this.mn+"SEND PART RESPONSE TO "+e._l);var n=new u.mu.Mr.np.rV;if(n.accept=t,n.accept===i.XH){this.wC.Ek()&&(n.internalAs=this.wC.Ek()),this.wC.iV()&&(n.externalAs=this.wC.iV()),this.wC.Kh()&&(n.lo=this.wC.Kh()),this.wC.Cs()&&(n.uo=this.wC.Cs()),n.Wq=this.wC.nV();var s=this.wC.sV(),o=[];s.forEach(function(e,t){var i=new u.mu.Mr.np.oV;i.bitrate=t,i.YN=e.type,i.delta=null!=r.wC.aV()?r.wC.aV():-1,o.push(i)}),o.length>0&&n.hV(o)}e.jl(u.mu.Rl.dl,n)},t.prototype.cV=function(e){this.te.warn(this.mn+e)},t.prototype.Dq=function(e,t,r){var i=e._l;if(r.externalAs&&(t.Tk.externalAs=r.externalAs),r.internalAs&&(t.Tk.internalAs=r.internalAs),r.lo&&(t.Tk.lo=r.lo),r.uo&&(t.Tk.uo=r.uo),r.tV){var n=[];r.tV.forEach(function(e){var t=new l.no;t.state=e.YN,t.bitrate=e.bitrate,t.delta=e.delta,n.push(t)}),t.Tk.ho=n}var s=new h.Partner(i,this.Lq,e,this.te,!0,t);return r.Wq&&(s.Wq=r.Wq,e.receiver.uV(r.Wq),e.sender.uV(r.Wq)),t.Tk.type==l.Zs.K?(this.iL.set(i,s),this.wC.lV(!0),this.wC.hH(!0)):(0!=this.wC.Ek()&&this.wC.Ek()===t.Tk.internalAs&&this.wC.lV(!0),this.Rq.set(i,s)),this.te.debug(this.mn+i+" IS NOW IN PARTNER"),s},t.prototype.aH=function(e){this.te.info(this.mn+"GOT PEER DISC "+e),this.pV(e)&&(this.te.info(this.mn+"IN PRT DISC "+e),this.xq(e)),this.Gq(e)&&(this.te.info(this.mn+"OUT PRT DISC "+e),this.tL.delete(e),this.rL.delete(e))},t.prototype.xq=function(e){var t=this;this.te.debug(this.mn+"IN PARTNER REMOVE "+e);var r=this.fV(e);if(this.EC.dV(r),this.Rq.delete(e),this.iL.delete(e),this.iL.length>0)this.wC.lV(!0);else if(0!=this.wC.Ek()){var i=!1;this.Rq.forEach(function(e){t.wC.Ek()===e.Ik.Tk.internalAs&&(i=!0)}),this.wC.lV(i)}else this.wC.lV(!1)},t.prototype.gV=function(e,t){this.te.debug(this.mn+"CLOSE RECEIVED FROM "+e+" TYPE "+m[t.EN()]),t.EN()!=m.nx&&t.EN()!=m.tq||(this.tL.has(e)&&this.tL.delete(e),this.rL.has(e)&&this.rL.delete(e)),t.EN()!=m.nx&&t.EN()!=m.eq||this.xq(e)},t.prototype.Nq=function(e){var t=this,r=s.defer();try{var i=new u.mu.Mr.np.vV;i.guid=this.Eh,i.fR=this.fR,i.Qq=c.ni.Ut._t,i.Wq=this.wC.nV(),this.wC.Ek()&&(i.internalAs=this.wC.Ek()),this.wC.iV()&&(i.externalAs=this.wC.iV()),this.wC.Cs()&&(i.uo=this.wC.Cs()),this.wC.Kh()&&(i.lo=this.wC.Kh());var n=this.wC.sV(),o=[];n.forEach(function(e,r){var i=new u.mu.Mr.np.oV;i.bitrate=r,i.YN=e.type,i.delta=null!=t.wC.aV()?t.wC.aV():-1,o.push(i)}),o.length>0&&i.hV(o),this.te.debug(this.mn+"SEND PART REQ TO "+e._l+" WITH ID "+i.fR+" internalAS "+i.internalAs+" externalAs "+i.externalAs+" private ip "+i.uo+" public ip "+i.lo+" rGuid "+this.wC.nV());var h=a.Framework.setTimeout(function(){t.yV(r,e._l)},c.ni.Ot.bt);this.iq.set(e._l,{Fx:h,defer:r}),e.jl(u.mu.Rl.fl,i)}catch(e){r.reject(e)}return r.Te},t.prototype.mV=function(e,t){var r=t._l,n=this.iq.get(r);n?(a.Framework.clearTimeout(n.Fx),this.iq.delete(r),e.accept===i.XH?n.defer.resolve({Pl:t,msg:e}):n.defer.reject("NOT ACCEPTED")):this.te.warn(this.mn+"OUT PART FROM UNKNOWN PEER "+r)},t.prototype.yV=function(e,t){if(this.iq.has(t)){this.te.debug(this.mn+"PART REQ EXPIRED TO "+t);var r=this.iq.get(t);this.iq.delete(t),r.defer.reject("EXPIRED")}},t.prototype.gq=function(){var e=s.defer(),t=this.Rq.values();this.iL.forEach(function(e,r){t.push(e)});var r=t.slice().map(function(e){return e.qq.close()});return s.all(r).then(function(t){e.resolve("resolved")}).fail(function(t){e.reject("could not close")}),e.Te},t.prototype.Vq=function(e){this.Hl.disconnect(e)},t.prototype.fq=function(e){var t=this;-1!=this.sq&&a.Framework.clearInterval(this.sq),this.sq=a.Framework.setInterval(function(){t.EV()},e)},t.prototype.EV=function(){if(this.wC.Sk()&&!this.wC.fk()&&y){var e=this.wC.kk(),t=this.context._C().bitrate;if(t&&this.pV(e.Ck)){var r=this.fV(e.Ck);this.TV(r.qq,t)}}},t.prototype.TV=function(e,t){var r=new u.mu.Mr.np.El;r.guid=this.Eh,r.bitrate=t,this.te.debug(this.mn+"ANNOUNCE BITRATE "+r.bitrate+" TO PEER GUID "+e._l),e.jl(u.mu.Rl.El,r)},t.prototype.IV=function(e){try{this.te.debug(this.mn+"RECEIVED BITRATE "+e.bitrate+" FROM PEER GUID "+e.guid),this.yx.Zq.has(e.wV())&&(this.yx.Zq.get(e.guid).SV(e.bitrate),this.RC.RV())}catch(e){v.ErrorMonitor.gi().di("Error handling receiving bitrate info",this.mn,e)}},t.prototype.bV=function(e){var t=e.guid,r=this.fV(t);r&&this.PV(r,e),r=this.AV(t),r&&this.PV(r,e),this.lq.Mq(t,e.uo,e.lo)},t.prototype.PV=function(e,t){var r=e.Ik.Tk;if(t.uo&&(r.uo=t.uo),t.lo&&(r.lo=t.lo),t.externalAs&&(r.externalAs=t.externalAs),t.internalAs&&(r.internalAs=t.internalAs),t.tV){var i=[];t.tV.forEach(function(e){var t=new l.no;t.bitrate=e.bitrate,t.delta=e.delta,t.state=e.YN,i.push(t)}),r.ho=i}},t.prototype.dq=function(e){var t=this;this.oq&&a.Framework.clearInterval(this.oq),this.oq=a.Framework.setInterval(function(){t.CV()},e)},t.prototype.CV=function(){var e=this;if(this.wC.Cs()||this.wC.Kh()||this.wC.Ek()||this.wC.iV()){var t=this.kV(),r=new u.mu.Mr.np.OV;r.guid=this.wC.W(),this.wC.Cs()&&(r.uo=this.wC.Cs()),this.wC.Kh()&&(r.lo=this.wC.Kh()),this.wC.iV()&&(r.externalAs=this.wC.iV()),this.wC.Ek()&&(r.internalAs=this.wC.Ek());var i=this.wC.sV(),n=[];i.forEach(function(t,r){var i=new u.mu.Mr.np.oV;i.bitrate=r,i.YN=t.type,i.delta=null!=e.wC.aV()?e.wC.aV():-1,n.push(i)}),n.length>0&&r.hV(n),t.forEach(function(e,t){e.qq.jl(u.mu.Rl.hh,r)})}},t.prototype.kV=function(){var e=new o;return this.tL.forEach(function(t,r){e.has(r)||e.set(r,t)}),this.rL.forEach(function(t,r){e.has(r)||e.set(r,t)}),this.iL.forEach(function(t,r){e.has(r)||e.set(r,t)}),this.Rq.forEach(function(t,r){e.has(r)||e.set(r,t)}),e},t}(p._V);t.NV=E},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.DV=!0,i.FV=3e4,i.LV=6e4,i.MV=3e4,t.BV=i;var n=function(){function e(){}return e}();n.Xr="site",n.Zr="externalAs",n.$r="availableSendRate",n.ei="remoteAddress",n.ti="localAddress",t.UV=n},function(e,t,r){"use strict";var i=function(){function e(e,t){this.xV=e,this.HV=t}return e.prototype.kq=function(){return this.HV},e.prototype.Oq=function(){return this.xV},e}();t.qV=i},function(e,t,r){"use strict";var i=function(){function e(){}return e.VV=function(e,t){var r=e.GV.jV(!1),i=t.GV.jV(!1);return r>i?1:r<i?0:-1},e}();t.QV=i;var n=function(){function e(){}return e.VV=function(e,t){var r=e.KV.jV(!1),i=t.KV.jV(!1);return r>i?1:r<i?0:-1},e}();t.YV=n},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(97),s=r(7),o=r(18),a=r(2),h=r(5),c=h.Rt.Fi;-1==c&&(c=3e4);var u=function(e){function t(t,r){var i=e.call(this,r)||this;return i.pluginName="bitmovin",i.zV=!1,i.JV=void 0,i.player=t,i.player.initSession=function(e){return i.WV(),i.XV(e).timeout(c,i.mn+" Hive Plugin initialization timeout").then(function(e){return i.ZV(),e.Dn()}).catch(function(e){return i.$V(),i.WV(),i.te().debug(i.mn+" error occurred resolving the ticket - "+(e.stack||e.message||e)),a.reject(e)})},i.te().notice(i.mn+"registered plugin [name:"+i.ej()+"][id: "+i.tj()+"][version: "+i.rj()+"]"),i}return i(t,e),t.prototype.ZV=function(){var e=this;this.zV||(this.player.addEventHandler("onReady",function(){if(e.te().debug("bitmovin.player.EVENT.ON_READY"),e.eF()){!!e.player.getConfig().ij&&e.player.getConfig().ij.nj&&e.sj(!1),e.oj()&&(e.aj=new s.ns)}}),this.player.addEventHandler("onPlay",function(){e.te().debug("bitmovin.player.EVENT.ON_PLAY"),e.hj(o.kc.$a.Qa)}),this.player.addEventHandler("onError",function(t){e.te().debug("bitmovin.player.EVENT.ON_ERROR");var r=-1,i=null;if(null!=t)try{r=t.code,i=JSON.stringify(t,null)}catch(e){i=t}e.onError(r,i)}),this.player.addEventHandler("onPlaybackFinished",function(){e.te().debug("bitmovin.player.EVENT.ON_PLAYBACK_FINISHED"),e.cj(o.kc.$a.Ja,{code:1})}),this.player.addEventHandler("onSeek",function(){e.te().debug("bitmovin.player.EVENT.ON_SEEK"),e.cj(o.kc.$a.za)}),this.player.addEventHandler("onFullscreenEnter",function(){e.te().debug("bitmovin.player.EVENT.ON_FULLSCREEN_ENTER"),e.cj(o.kc.$a.Xa,{value:!0})}),this.player.addEventHandler("onFullscreenExit",function(){e.te().debug("bitmovin.player.EVENT.ON_FULLSCREEN_EXIT"),e.cj(o.kc.$a.Xa,{value:!1})}),this.player.addEventHandler("onSegmentRequestFinished",function(t){var r=t.mimeType.indexOf("video")>=0;if(void 0===e.uj){var i=e.player.getPlaybackVideoData();i&&i.bitrate&&e.lj(i.bitrate)}if(t.success){if(!t.isInit&&e.uj){var n=8*t.size/t.downloadTime;e.aj.Kn(r,e.uj,t.size),e.aj.zn(n)}}else e.aj.Yn(r,e.uj)}),0===this.getPlayerVersion().indexOf("7")?this.pj():0===this.getPlayerVersion().indexOf("6")&&this.fj(),this.zV=!0)},t.prototype.fj=function(){var e=this;this.player.addEventHandler("onStartBuffering",function(){e.te().debug("bitmovin.player.EVENT.ON_START_BUFFERING"),e.sj()}),this.player.addEventHandler("onStopBuffering",function(){e.te().debug("bitmovin.player.EVENT.ON_STOP_BUFFERING"),e.dj()}),this.player.addEventHandler("onPause",function(){e.te().debug("bitmovin.player.EVENT.ON_PAUSE"),e.hj(o.kc.$a.Ya)}),this.player.addEventHandler("onVideoDownloadQualityChange",function(t){e.S_()===StreamProtocol.OU?e.lj(t.targetQuality):e.lj(t.targetQuality.split("br")[1])})},t.prototype.pj=function(){var e=this;this.player.addEventHandler("onStallStarted",function(){e.te().debug("bitmovin.player.EVENT.ON_STALL_STARTED"),e.sj()}),this.player.addEventHandler("onStallEnded",function(){e.te().debug("bitmovin.player.EVENT.ON_STALL_ENDED"),e.dj()}),this.player.addEventHandler("onPaused",function(){e.te().debug("bitmovin.player.EVENT.ON_PAUSED"),e.hj(o.kc.$a.Ya)}),this.player.addEventHandler("onVideoDownloadQualityChanged",function(t){e.lj(t.targetQuality&&t.targetQuality.bitrate||t.gj&&t.gj.bitrate)})},t.prototype.lj=function(e){this.te().debug("newBitrate",e),this.uj&&e>this.uj?this.aj.Jn():this.uj&&this.uj>e&&this.aj.Wn(),this.uj=e},t.prototype.hj=function(e){void 0!=this.JV&&this.JV===e||(this.cj(e),this.JV=e)},t.prototype.b_=function(){var e=this.S_();return e===StreamProtocol.OU?this.player.getConfig().source.hls:e===StreamProtocol.yB?this.player.getConfig().source.dash:void 0},t.prototype.getCurrentTime=function(){return null!=this.player?Math.round(1e3*this.player.getCurrentTime()):0},t.prototype.vj=function(){return null!=this.player&&null!=this.player.getVideoBufferLength&&this.player.getVideoBufferLength()>0?Math.max(0,Math.round(1e3*this.player.getVideoBufferLength())):0},t.prototype.yj=function(){if(this.player){var e=this.player.getFigure();return{width:e.offsetWidth,height:e.offsetHeight}}},t.prototype.isFullscreen=function(){return this.player.isFullscreen()},t.prototype.isLive=function(){return this.player.isLive()},t.prototype.ci=function(){return!0},t.prototype.S_=function(){if(this.player){var e=this.player.getStreamType();if("hls"===e)return StreamProtocol.OU;if("dash"===e)return StreamProtocol.yB}return null},t.prototype.__=function(){var e=this.aj;return this.aj=new s.ns,e},t.prototype.ej=function(){return this.pluginName},t.prototype.rj=function(){return this.mj()},t.prototype.Ej=function(){if(this.player)return this.player.getPlayerType()},t.prototype.getPlayerVersion=function(){return void 0!==bitmovin.player.version?bitmovin.player.version:this.player.getVersion()},t}(n.gn.Plugin);t.Tj=u;var l=function(e,t){new u(e,t)};bitmovin.initHiveSDN=l},function(e,t,r){"use strict";var i=r(1),n=r(2),s=r(0),o=r(102),a=r(103),h=r(26),c=r(38),u=r(7),l=r(107),p=r(18),f=r(109),d=r(9),g=r(111),v=r(53),y=r(29),m=r(4),E=r(42),T=r(49),I=r(5),w=o.gn.ou,S=a.gn.Ij,R=h.gn.Zm,b=h.gn.dE,P=h.gn.HiveTechError,A=h.gn.cE,C=h.gn.yE,k=I.Rt.wi,O=I.Rt.Ti,_=I.Rt.Ei,N=I.Rt.Ii;(_||N)&&r(8).HiveConfig,t.version=k;!function(e){var a=function(){function e(e){this.wj=[S[S.HiveJava],S[S.HiveJsProxy],S[S.HiveJS],S[S.StatsJS]],this.Sj=new i,this.Rj=new Array,this.bj=new Array,this.Pj=null,this.Aj=0,this.Cj=0,this.mn="[HiveComm] ",this.kj=0,this.Oj=u.Es.getItem("hivePluginId"),this.Oj||(this.Oj=Math.abs(Math.floor(68719476736*Math.random())).toString(16),u.Es.setItem("hivePluginId",this.Oj)),m.ErrorMonitor.gi(t.version),this.options_=new w._j,this.Nj(e),u.vs(e,this.options_),u.ys(window.location.href,new w.Dj,this.options_),o.Lj.Fj(this.options_),this.cu=s.Framework.resolve(s.Framework.q.I),c.HiveConfig.Framework.LoggerTimestamp=this.options().loggerTimestamp,this.cu.mA(this.options().debugLevel),m.ErrorMonitor.gi().mi(this.cu.log());var r=s.Framework.resolve(d.Qs.D),n=s.Framework.resolve(d.Qs.Us);r.jc().then(function(e){m.ErrorMonitor.gi().setUser(e.Kc())});var a={};new l.Mj(this),n.Vh().then(function(e){a={pIPAddr:e.Qh().Cs()},m.ErrorMonitor.gi().setCustomData(a)}),window.uu=this.cu.log(),this.Bj(),this.Uj=new C(this);var h=this.options().idleTimePeriod>this.options().feedbackPeriod?this.options().idleTimePeriod:T.N.aO;this.xj=new u.As(h)}return e.prototype.options=function(){return this.options_},e.prototype.te=function(){return this.Pj?this.cu.log(this.Pj.id):this.cu.log()},e.prototype.Hj=function(){if(this.te)return this.cu.level},e.prototype.tj=function(){return this.Oj},e.prototype.mj=function(){return t.version},e.prototype.qj=function(){for(var e=0,t=this.bj;e<t.length;e++){var r=t[e];r.tech.k_(this),"HiveJS"===r.tech.Fn()&&r.tech.Vj&&r.tech.Vj.k_(this)}},e.prototype.Nj=function(e){var t=new v.StatsJS(this,e);if(this.Sj.set(v.StatsJS.c_,t),_){var i=r(130).HiveJS;this.Sj.set(i.c_,new i(this,e,t))}if(N){var n=r(196).HiveJsProxy;this.Sj.set(n.c_,new n(this,e,t))}if(O){var s=r(198).HiveJava;this.Sj.set(s.c_,new s(this,e))}var o=e.hiveTechOrder;if(!o||o instanceof Array)if(o&&o.length>0)for(var a=o.length;a--;){var h=o[a];"string"!=typeof h||-1==this.wj.indexOf(h)?(console.warn(this.mn+'The "'+h+'" Hive tech is undefined'),o.splice(a,1)):"string"==typeof h&&this.Sj.has(h)||console.warn(this.mn+'The "'+h+'" Hive tech is not enabled on this plugin')}else o=this.wj;else console.warn(this.mn+"hiveTechOrder value not accepted. It must be an array of strings"),o=this.wj;e.hiveTechOrder=o},e.prototype.XV=function(e){var t=this;this.te().notice(this.mn+"resolving "+e);var r=n.defer();if(!e)return r.reject(u.ms("",R.Xm,"No ticket provided.")),r.Te;this.jj(e);var i=this.Gj().values();0==i.length&&r.reject(u.ms(e,R.zm));var s,o,a=!1,h=!1,c=0,l=null;return u.ls(function(){return!a&&!h&&c<i.length&&!s},function(){var r=i[c++];r.C_();var u;return u=r.u_()&&!o?t.LL(e):n.resolve(null),u.then(function(i){null!=i&&(o=i);var s=r.f_();return r.initSession(e,o).timeout(s,"["+r.Fn()+"] Error: initialization timed out after "+s+"ms").then(function(e){l=e,t.Qj(l,r),a=!0,!r.u_()&&o&&o.tc.reset(),t.te().notice(t.mn+"initializing Session:["+l.id+"] Ticket:"+l.ticket.toString()+" HiveTech:["+l.tech.Fn()+"]"),n.resolve(!0)},function(i){i instanceof Error&&(i=new P(A.hE,i.message),r.A_(i)),i.ticketUrl=e,h=!r.onError(i),t.te().debug(t.mn+"tech "+r.Fn()+": "+i.message),n.resolve(!0)})},function(e){s=e,n.resolve(!0)})}).then(function(){s?r.reject(u.ms(e,R.Xm,s)):h?r.reject(u.ms(e,R.Wm)):a?r.resolve(l):r.reject(u.ms(e,R.zm))}).catch(function(i){m.ErrorMonitor.gi().di("Error resolving ticket promise",t.mn,i),r.reject(u.ms(e,R.Ym,i.toString()))}).done(),r.Te},e.prototype.LL=function(e){var t=this;return y.Hive.Reporting().initSession(e,!1).then(function(r){return t.te().debug(t.mn+"verified ticket "+e),t.wh(r),r}).catch(function(e){return n.reject("Ticket not verified, error: "+e.message)})},e.prototype.Gj=function(){var e=JSON.parse(JSON.stringify(this.options().hiveTechOrder)),t=new i;for(var r in e)this.Sj.has(e[r])&&t.set(e[r],this.Sj.get(e[r]));return t},e.prototype.jj=function(e){var t=m.ErrorMonitor.gi();try{var r=new E.VA;r.AA(e),r.Lh()&&r.Mh()&&r.Xc()?t.setTags([r.Lh(),r.Mh(),r.Xc()]):t.di("Ticket not valid, we could not resolve the triple partnerId/CustomerId/ContentId",this.mn,{partnerId:r.Lh(),customerId:r.Mh(),contentId:r.Xc()})}catch(e){this.te().warn(this.mn+" "+e.message,e),t.notify(e)}},e.prototype.wh=function(e){var r={commVersion:t.version,pluginName:this.ej(),pluginVersion:this.rj(),playerTech:this.Ej(),playerVersion:this.getPlayerVersion(),telemetryId:this.Kj()};e.tc.wh(r)},e.prototype.$V=function(){window.HiveRequest=XMLHttpRequest,u.HiveRequestFactory.clear(),y.Hive.Reporting().close()},e.prototype.Yj=function(e){this.Pj&&this.Pj.tech?(e.sessionId=this.Pj.id,this.Pj.tech.Nh(this.Pj,e)):this.Rj.push(e)},e.prototype.P_=function(){var e=this.Rj;return this.Rj=new Array,e},e.prototype.Bj=function(){var e=this,t=window;t.addEventListener?t.addEventListener("beforeunload",function(){e.zj(!0,!1)},!1):t.attachEvent("onbeforeunload",function(){e.zj(!0,!1)})},e.prototype.closeHiveSession=function(e){this.te().debug("Manually Closing Session"+(e?" because: "+e:""));var t=this.oj();t&&u.HiveRequestFactory.Sn(t.id),this.WV(!0)},e.prototype.WV=function(e){var t=this;this.zj(e),!1===e?this.Pj&&this.bj.every(function(e){return e.id!==t.Pj.id})&&this.bj.unshift(this.Pj):this.bj.length=0,this.Jj(),this.Pj=null,this.Aj=0,this.Cj=0},e.prototype.Qj=function(e,t){e.tech=t,this.bj.push(e)},e.prototype.eF=function(e){if(null==this.Pj){for(var t=e||this.b_(),r=0;r<this.bj.length;r++){var i=this.bj[r];if(i.ci(t))return this.Pj=i,this.Pj.Cn?this.Pj.Cn.Nc.kL(this.Pj.ticket):this.Wj(),this.bj.length=0,this.Pj.tech.onActiveSession(this.Pj),this.te().notice(this.mn+"activating Session:["+this.Pj.id+"] Ticket:"+this.Pj.ticket.toString()+" HiveTech:["+this.Pj.tech.Fn()+"]"),this.Xj(),!0}this.te().warn(this.mn+"Closing sessions - the active stream doesn't match any initialized sessions"),this.te().warn(this.mn+"Active:"+t+" - initialized: "+this.bj.length),this.WV()}return!1},e.prototype.oj=function(){if(this.Pj)return this.Pj.Dn()},e.prototype.Wj=function(){var e=!1;this.bj.forEach(function(t){t.Cn&&(e=!0)}),e&&y.Hive.Reporting().close()},e.prototype.Zj=function(){if(null!=this.Pj){if(this.Pj.ci(this.b_()))return!0;this.te().warn(this.mn+"Session src mismatch: "+this.b_()+" != "+this.Pj.manifest),this.WV()}return!1},e.prototype.zj=function(e,t){if(void 0===t&&(t=!0),null!=this.Pj)this.te().notice(this.mn+"Stopping session ["+this.Pj.id+"]"),this.Pj.close(e,t);else if(this.bj.length>0){var r=this.bj[0];this.te().notice(this.mn+"Attempt to stopping session ["+r.id+"]"),r.close(e,t)}},e.prototype.Xj=function(){var e=this;null==this.$j&&(this.$j=setInterval(function(){e.eG()},this.options().feedbackPeriod),this.eG())},e.prototype.Jj=function(){clearInterval(this.$j),this.$j=null},e.prototype.eG=function(){var e=this;if(this.Zj()){if(!this.ci())return void this.WV();var t=new u.Un;t.Rs=this.getCurrentTime(),t.bs=this.vj(),t.Ps=this.Aj,t.width=this.yj().width,t.height=this.yj().height,t.tG=this.isFullscreen(),this.Pj.kn(this.xj.Is(t)),this.Pj.tech.g_(this.Pj,t).fail(function(t){e.te().warn(e.mn+"stats handling failed",t),e.Jj()})}},e.prototype.rG=function(){var e=this;try{u.hs.gi(this.te()).as(function(t){var r=e.iG();r&&!r._n()&&(e.cj(t?p.kc.$a.Za:p.kc.$a.HIDDEN),e.te().debug(t?"visible":"hidden"))})}catch(e){m.ErrorMonitor.gi().di("error setting up the visibilityChange listener",this.mn,{error:e})}},e.prototype.sj=function(e){this.Zj()&&this.Cj<=0&&(this.Cj=Date.now(),(void 0==e||e)&&this.cj(p.kc.$a.Ka))},e.prototype.dj=function(){var e=0==this.Aj;if(this.Cj>0){var t=Date.now()-this.Cj;return this.Aj+=t,this.te().debug(this.mn+"reporting new buffering event of "+t),this.Cj=0,e&&this.eG(),!0}return!1},e.prototype.onError=function(e,t,r){void 0===r&&(r=!0),this.cj(p.kc.$a.ERROR,{code:-1,"player-code":e}),r&&this.WV()},e.prototype.cj=function(e,t){var r=this,i=this.iG();null==i||i!=this.Pj&&i.tech.Fn()===S[S.HiveJava]||i.tech.E_(i,e,t).fail(function(e){r.te().warn(r.mn+"error in forwarding player event to tech",e)})},e.prototype.iG=function(){return this.Pj?this.Pj:this.bj&&this.bj.length>0?this.bj[0]:void 0},e.prototype.nG=function(){this.kj=0},e.prototype.sG=function(e,t){this.nG();this.kj+=e<<28,t&&0===e&&(this.kj+=1<<4*(6-S[t.Fn()])),e>0&&m.ErrorMonitor.gi().di("Status Code Error",this.mn,{code:b[e]},["Plugin Error Code",b[e]])},e.prototype.vE=function(){return this.kj},e.prototype.Kj=function(){return this.options().telemetryId},e}();e.Plugin=a}(t.gn||(t.gn={})),s.Framework.Z(new f.oG),s.Framework.ie("peer0",new g.aG),s.Framework.ne("peer0"),window.HiveRequestFactory=u.HiveRequestFactory},function(e,t){if(!RegExp.escape){var r=/[-[\]{}()*+?.\\^$|,#\s]/g;RegExp.escape=function(e){return e.replace(r,"\\$&")}}},function(e,t,r){"use strict";function i(){throw new Error("Can't construct. MapChanges is a mixin.")}var n=r(34),s=r(46);e.t=i;var o=(Object.prototype.hasOwnProperty,new n),a=null;i.prototype.hG=function(){return o.has(this)||(a||(a=r(47)),o.set(this,a())),o.get(this)},i.prototype.cG=function(e){var t=this.hG();return e=e||"",t.has(e)||t.set(e,{Lo:new s,Mo:new s}),t.get(e)},i.prototype.uG=function(e,t,r){!this.Ho&&this.xo&&this.xo();var i,n=this.cG(t);i=r?n.Lo:n.Mo,i.push(e),Object.defineProperty(this,"dispatchesMapChanges",{value:!0,Ui:!0,u:!0,l:!1});var s=this;return function(){s&&(s.lG(e,t,r),s=null)}},i.prototype.lG=function(e,t,r){var i,n=this.cG(t);i=r?n.Lo:n.Mo;var s=i.Hk(e);if(!s)throw new Error("Can't remove map change listener: does not exist: token "+JSON.stringify(t));s.delete()},i.prototype.iO=function(e,t,r){var i="Map"+(r?"WillChange":"Change");this.hG().forEach(function(n,s){if(!n.ci){n.ci=!0;var o;o=r?n.Lo:n.Mo;var a="handle"+(s.slice(0,1).toUpperCase()+s.slice(1))+i;try{o.forEach(function(r){if(r[a])r[a](t,e,this);else{if(!r.call)throw new Error("Handler "+r+" has no method "+a+" and is not callable");r.call(r,t,e,this)}},this)}finally{n.ci=!1}}},this)},i.prototype.pG=function(e,t){return this.uG(e,t,!0)},i.prototype.fG=function(e,t){return this.lG(e,t,!0)},i.prototype.rO=function(e,t){return this.iO(e,t,!0)}},function(e,t,r){"use strict";function i(e,t,r,n){if(!(this instanceof i))return new i(e,t,r,n);t=t||Object.ae,r=r||Object.hash,n=n||Function.he,this.ce=t,this.ue=r,this.le=n;var s=this;this.dG=new this.gG(null,function(){return new s.vG}),this.length=0,this.addEach(e)}var n=(r(12),r(47)),s=r(46),o=r(13),a=r(36),h=r(64),c=r(14);Object.prototype.hasOwnProperty;e.t=i,i.yG=i,Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.addEach(i.prototype,c.prototype),i.prototype.gG=n,i.prototype.vG=s,i.prototype.de=function(e){return new this.constructor(e,this.ce,this.ue,this.le)},i.prototype.has=function(e){var t=this.ue(e);return this.dG.get(t).has(e)},i.prototype.get=function(e,t){if(t)throw new Error("FastSet#get does not support second argument: equals");var r=this.ue(e),i=this.dG;return i.has(r)?i.get(r).get(e):this.le(e)},i.prototype.delete=function(e,t){if(t)throw new Error("FastSet#delete does not support second argument: equals");var r=this.ue(e),i=this.dG;if(i.has(r)){var n=i.get(r);if(n.delete(e))return this.length--,0===n.length&&i.delete(r),!0}return!1},i.prototype.clear=function(){this.dG.clear(),this.length=0},i.prototype.add=function(e){var t=this.ue(e),r=this.dG;return r.has(t)||r.set(t,new this.vG(null,this.ce)),!r.get(t).has(e)&&(r.get(t).add(e),this.length++,!0)},i.prototype.reduce=function(e,t){var r=arguments[2],i=0;return this.dG.reduce(function(t,n){return n.reduce(function(t,n){return e.call(r,t,n,i++,this)},t,this)},t,this)},i.prototype.Po=function(){if(this.length>0)return this.dG.Po().Po()},i.prototype.Ao=function(){return this.dG.values().Io().Ao()},i.prototype.log=function(e,t,r,i){e=e||h.QD,t=t||this.ge,r||(r=console.log,i=console),r=r.bind(i);var n=this.dG,s=n.keys();s.forEach(function(o,a){var h,c;a===s.length-1?(h=e.qD,c=" "):0===a?(h=e.xD,c=e.jD):(h=e.VD,c=e.jD);var u=n.get(o);r.call(i,h+e.BD+e.xD+" "+o),u.forEach(function(n,s){var o,a;s===u.head.Mk?(o=e.qD,a=" "):(o=e.VD,a=e.jD);var h;t(s,function(t){h?r.call(i,c+" "+a+"  "+t):(r.call(i,c+" "+o+e.BD+e.BD+t),h=!0)},function(t){r.call(i,c+" "+e.jD+"  "+t)})})})},i.prototype.ge=function(e,t){var r=e.value;Object(r)===r?JSON.stringify(r,null,4).split("\n").forEach(function(e){t(" "+e)}):t(" "+r)}},function(e,t,r){"use strict";function i(e){if(!(this instanceof i))return new i(e);if(Array.isArray(e)||"string"==typeof e)return i.Ao(e);if((e=n(e))instanceof i)return e;if(e.next)this.next=function(){return e.next()};else if(e.Ao){var t=e.Ao();this.next=function(){return t.next()}}else{if("[object Function]"!==n.prototype.toString.call(e))throw new TypeError("Can't iterate "+e);this.next=e}}e.t=i;var n=r(33),s=r(13);i.prototype.forEach=s.prototype.forEach,i.prototype.map=s.prototype.map,i.prototype.filter=s.prototype.filter,i.prototype.every=s.prototype.every,i.prototype.some=s.prototype.some,i.prototype.ht=s.prototype.ht,i.prototype.all=s.prototype.all,i.prototype.min=s.prototype.min,i.prototype.max=s.prototype.max,i.prototype.Eo=s.prototype.Eo,i.prototype.To=s.prototype.To,i.prototype.Io=s.prototype.Io,i.prototype.wo=s.prototype.wo,i.prototype.enumerate=s.prototype.enumerate,i.prototype.Ro=s.prototype.Ro,i.prototype.group=s.prototype.group,i.prototype.reversed=s.prototype.reversed,i.prototype.toArray=s.prototype.toArray,i.prototype.vo=s.prototype.vo,i.prototype.iterator=s.prototype.iterator,i.prototype.zk=null,n.defineProperty(i.prototype,"_iterationObject",{get:function(){return this.zk||(this.zk={done:!1,value:void 0})}}),i.prototype.de=function(e){var t=[];return t.addEach(e),t},i.prototype.mG=function(e){var t=i(this),r=arguments[1],s=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;return new t.constructor(function(){if(!0!==t.Jk.done){var i=e.call(r,t.next().value,s++,t);t.Jk.value=i}return t.Jk})},i.prototype.EG=function(e){var t=i(this),r=arguments[1],s=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;return new t.constructor(function(){for(var i;;){if(i=t.next(),!0===i.done)return i;if(e.call(r,i.value,s++,t))return i}})},i.prototype.reduce=function(e){var t,r=i(this),s=arguments[1],o=arguments[2],a=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;if(t=r.next(),!0===t.done){if(arguments.length>1)return arguments[1];throw TypeError("cannot reduce a value from an empty iterator with no initial value")}for(s=arguments.length>1?e.call(o,s,t.value,a,r):t.value,a++;;){if(t=r.next(),!0===t.done)return s;s=e.call(o,s,t.value,a,r),a++}},i.prototype.concat=function(){return i.concat(Array.prototype.concat.apply(this,arguments))},i.prototype.TG=function(e){var t,r,s=i(this),o=arguments[1],a=!1,h=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;for(;;){if(r=s.next(),!0===r.done)break;if(!e.call(o,r.value,h,s)){a=!0,t=r.value;break}h++}return a?s.constructor([t]).concat(s):s.constructor([])},i.prototype.IG=function(e){var t=i(this),r=arguments[1],s=0;if("[object Function]"!=n.prototype.toString.call(e))throw new TypeError;return new t.constructor(function(){if(!0!==t.Jk.done){var i=t.next().value;e.call(r,i,s++,t)?t.Jk.value=i:(t.Jk.done=!0,t.Jk.value=void 0)}return t.Jk})},i.prototype.wG=function(){return i.So(Array.prototype.concat.apply(this,arguments))},i.prototype.SG=function(e){return i.count(e).wG(this)},i.Ao=function(e){var t;return t=0,new i(function(){if("object"==typeof e)for(;!(t in e);){if(t>=e.length){this.Jk.done=!0,this.Jk.value=void 0;break}t+=1}else t>=e.length&&(this.Jk.done=!0,this.Jk.value=void 0);return this.Jk.done||(this.Jk.value=e[t],t+=1),this.Jk})},i.RG=function(e,t){var r;return arguments.length<2&&(t=1/0),new i(function(){var n,s;return r&&(s=r()),r&&!0!==s.done||(t>0?(t--,n=i.Ao(e),s=(r=n.next.bind(n))()):(this.Jk.done=!0,s=this.Jk)),s})},i.concat=function(e){e=i(e);var t;return new i(function(){var r,n;return t&&(n=t()),n&&!0!==n.done?n:(n=e.next(),!1===n.done?(r=i(n.value),(t=r.next.bind(r))()):n)})},i.So=function(e){return e=i(e).map(i),new i(0===e.length?[]:function(){var t,r,i=e.map(function(e){return r=e.next(),!0===r.done&&(t=!0),r.value});return t?(this.Jk.done=!0,this.Jk.value=void 0):this.Jk.value=i,this.Jk})},i.wo=function(){return i.So(Array.prototype.slice.call(arguments))},i.chain=function(){return i.concat(Array.prototype.slice.call(arguments))},i.range=function(e,t,r){return arguments.length<3&&(r=1),arguments.length<2&&(t=e,e=0),e=e||0,r=r||1,new i(function(){e>=t&&(this.Jk.done=!0,this.Jk.value=void 0);var i=e;return e+=r,this.Jk.value=i,this.Jk})},i.count=function(e,t){return i.range(e,1/0,t)},i.repeat=function(e,t){return new i.range(t).mG(function(){return e})}},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20),s=n.gn.ou.ou,o=n.gn.ou.hu;!function(e){!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.authTokenEnabled=!0,t.dashRemoveBitrateSize=!1,t.dashFilterBitrates=null,t.staticPartnerId=null,t.staticCustomerId=null,t.audioMetrics=!0,t.logJsonSnapshots=void 0,t}return i(t,e),t}(s);e._j=t;var r=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.hiveAuthTokenEnabled="authTokenEnabled",t.hiveDashRemoveBitrateSize="dashRemoveBitrateSize",t.hiveDashFilterBitrates="dashFilterBitrates",t.hiveLogJsonSnapshots="logJsonSnapshots",t.hiveStaticPartnerId="staticPartnerId",t.hiveStaticCustomerId="staticCustomerId",t.hiveAudioMetrics="audioMetrics",t}return i(t,e),t}(o);e.Dj=r}(e.ou||(e.ou={}))}(t.gn||(t.gn={}));var a=function(){function e(){}return e.Fj=function(e){"dashRemoveBitrateSize"in e&&e.dashRemoveBitrateSize&&window.HiveConfig&&window.HiveConfig.Dash&&(window.HiveConfig.Dash.DashRemoveBitrateSize=e.dashRemoveBitrateSize),"dashFilterBitrates"in e&&e.dashFilterBitrates&&window.HiveConfig&&window.HiveConfig.Dash&&(window.HiveConfig.Dash.DashFilterBitrates=e.dashFilterBitrates),"staticCustomerId"in e&&e.staticCustomerId&&window.HiveConfig&&window.HiveConfig.ClientInfo&&(window.HiveConfig.ClientInfo.Ls=e.staticCustomerId),"staticPartnerId"in e&&e.staticPartnerId&&window.HiveConfig&&window.HiveConfig.ClientInfo&&(window.HiveConfig.ClientInfo.Fs=e.staticPartnerId),"audioMetrics"in e&&!e.audioMetrics&&window.HiveConfig&&window.HiveConfig.Stats&&(window.HiveConfig.Stats.Ds=e.audioMetrics),"detectPrivateIP"in e&&"boolean"==typeof e.detectPrivateIP&&window.HiveConfig&&window.HiveConfig.ConnInfo&&(window.HiveConfig.ConnInfo.detectPrivateIP=e.detectPrivateIP),"logJsonSnapshots"in e&&e.logJsonSnapshots&&window.HiveConfig&&window.HiveConfig.DebugLogs&&(window.HiveConfig.DebugLogs.MetricSnapshotLogs=1,window.HiveConfig.DebugLogs.TrackSnapshotLogs=1,window.HiveConfig.DebugLogs.TrackerLogs=1)},e}();t.Lj=a},function(e,t,r){"use strict";!function(e){!function(e){e[e.HiveJS=0]="HiveJS",e[e.HiveJava=1]="HiveJava",e[e.StatsJS=2]="StatsJS",e[e.HiveJsProxy=3]="HiveJsProxy"}(e.Ij||(e.Ij={}))}(t.gn||(t.gn={}))},function(e,t,r){"use strict";var i=function(){function e(){var t=this;if(this.bG=new Array,this.callbacks=new Array,e.li)throw new Error("Error: Instantiation failed: Use KeyHandlerHiveComm.getInstance() instead of new.");var r={};document.addEventListener("keydown",function(e){r[e.keyCode]=!0,t.PG(r)},!0),document.addEventListener("keyup",function(e){r={}},!0)}return e.gi=function(){return void 0===this.li&&(this.li=new e),this.li},e.prototype.vi=function(e,t){this.bG.push(e),this.callbacks.push(t)},e.prototype.PG=function(e){for(var t=this,r=0;r<this.bG.length;r++)!function(r){var i=!0;t.bG[r].forEach(function(t){void 0!=e[t]&&e[t]||(i=!1)}),i&&t.callbacks[r]()}(r)},e}();t.yi=i},function(e,t){e.t=function(e){return e&&"object"==typeof e&&"function"==typeof e.rP&&"function"==typeof e.fill&&"function"==typeof e.AG}},function(e,t){"function"==typeof Object.create?e.t=function(e,t){e.CG=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,l:!1,Ui:!0,u:!0}})}:e.t=function(e,t){e.CG=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}},function(e,t,r){"use strict";var i=r(39),n=r(49),s=r(7),o=r(4),a=function(){function e(e){this.kG=n.N.$c?9989:9988,this.OG=-1,this.h_=e,this._G()}return e.prototype._G=function(){var e=this;this.h_.options().silent&&(HiveConfig&&(HiveConfig.ConnInfo.detectPrivateIP=!0),void 0===this.NG&&(this.url="//"+i.tu.oA+":"+this.kG+"/feedback",this.h_.te().info("starting periodic alive ping to hive tester ["+this.url+"]"),this.NG=setInterval(function(){e.DG()},n.N.oO)))},e.prototype.DG=function(){var e=this,t=this.h_.oj(),r=void 0;t&&(r="S["+t.id+"]");var i=this.h_.getCurrentTime();i>this.OG?(this.h_.te().info("sending hive tester ping ["+i+" > "+this.OG+"]"),s.ps(this.url).then(function(e){},function(t){o.ErrorMonitor.gi().di("error sending hive tester ping",r,{error:t}),clearInterval(e.NG)})):this.h_.te().warn("not sending hive tester ping ["+i+" <= "+this.OG+"]"),this.OG=i},e}();t.Mj=a},function(e,t){(function(t){e.t=t}).call(t,{})},function(e,t,r){"use strict";var i=r(37),n=r(110),s=r(41),o=r(0),a=function(){function e(){}return e.prototype.apply=function(e){e.bind(new i.QP(o.Framework.q.T,n.FG,i.KP.ZP)),e.bind(new i.QP(o.Framework.q.I,s.SA.wA))},e}();t.oG=a},function(e,t,r){"use strict";var i=r(63),n=function(){function e(){this.LG=new i,this.MG=new i,"undefined"!=typeof global?this.BG=global:this.BG=window}return e.prototype.S=function(){return!1},e.prototype.UG=function(e,t,r){},e.prototype.A=function(){},e.prototype.time=function(){return+new Date},e.prototype.setTimeout=function(e,t){var r=this,i=this.BG.setTimeout(function(){r.LG.delete(i),e()},t);return this.LG.add(i),i},e.prototype.clearTimeout=function(e){return this.LG.delete(e),this.BG.clearTimeout(e),!0},e.prototype.setInterval=function(e,t){var r=this.BG.setInterval(function(){e()},t);return this.MG.add(r),r},e.prototype.clearInterval=function(e){return this.MG.delete(e),this.BG.clearInterval(e),!0},e.prototype.C=function(){var e=this;this.LG.forEach(function(t){return e.clearTimeout(t)}),this.MG.forEach(function(t){return e.clearInterval(t)})},e}();t.FG=n},function(e,t,r){"use strict";var i=r(37),n=r(0),s=r(41),o=r(19),a=r(9),h=r(18),c=r(71),u=r(72),l=r(73),p=r(75),f=r(76),d=r(5),g=d.Rt.Oi;if(g)var v=r(77).vM;else var y=r(79).zM;var m=function(){function e(){}return e.prototype.apply=function(e){e.bind(new i.QP(a.Qs.qs,o.Zc,i.KP.ZP)),e.bind(new i.QP(a.Qs.H,u.OL,i.KP.ZP)),e.bind(new i.QP(a.Qs.Bs,l.BL,i.KP.ZP)),e.bind(new i.QP(a.Qs.D,p.oM,i.KP.ZP)),e.bind(new i.QP(n.Framework.q.I,s.SA.wA,i.KP.ZP)),g?e.bind(new i.QP(a.Qs.Us,v,i.KP.ZP)):e.bind(new i.QP(a.Qs.Us,y,i.KP.ZP)),e.bind(new i.QP(a.Qs.xs,f.uM,i.KP.ZP)),e.bind(new i.QP(a.Qs.Vs,c.Stats.LD,i.KP.sA)),e.bind(new i.QP(a.Qs.Ms,c.Stats.vc,i.KP.sA)),e.bind(new i.QP(a.Qs.js,h.kc.$h,i.KP.sA)),e.bind(new i.QP(a.Qs.Gs,h.kc.vc,i.KP.sA))},e}();t.aG=m},function(e,t,r){var i=r(30);"undefined"==typeof hive&&(hive={}),void 0===hive.snapshots&&(hive.snapshots={}),hive.snapshots.Traffic=function(e){this.reqN=null,this.respFallbackN=null,this.respFallbackErrN=null,this.respP2pN=null,this.reqOtherN=null,this.respFallbackOtherN=null,this.respFallbackOthertErrN=null,this.srcReqN=null,this.srcRespN=null,this.srcRespErrN=null,this.srcReqQt=null,this.srcRespQt=null,this.srcOverQt=null,this.srcOtherReqN=null,this.srcOtherRespN=null,this.srcOtherRespErrN=null,this.srcOtherReqQt=null,this.srcOtherRespQt=null,this.srcOtherOverQt=null,this.p2pSubReqN=null,this.p2pSubRespN=null,this.p2pSubRespPartN=null,this.p2pSubRespErrN=null,this.p2pSubRespExpN=null,this.p2pSubReqQt=null,this.p2pSubRespQt=null,this.p2pDirectQt=null,this.p2pRelayQt=null,this.p2pNatQt=null,this.p2pUdpbQt=null,this.fallAgentRespN=null,this.fallAgentPredHitN=null,this.fallAgentFailedRespN=null,this.fallAgentPredMissN=null,this.fallAgentPredPartialHitN=null,this.fallAgenTrafficSuccessQt=null,this.fallAgenTrafficFailureQt=null,this.p2pAgentPredHitN=null,this.p2pAgentPredMissN=null,this.p2pAgentPredPartialHitN=null,this.p2pAgenTrafficSuccessQt=null,this.p2pAgenTrafficFailureQt=null,this.respP2pOtherN=null,this.lCacheRespN=null,this.lCacheRespQt=null,this.p2pOutSiteLowPrio=null,e&&(void 0!==e.reqN&&(this.reqN=e.reqN),void 0!==e.respFallbackN&&(this.respFallbackN=e.respFallbackN),void 0!==e.respFallbackErrN&&(this.respFallbackErrN=e.respFallbackErrN),void 0!==e.respP2pN&&(this.respP2pN=e.respP2pN),void 0!==e.reqOtherN&&(this.reqOtherN=e.reqOtherN),void 0!==e.respFallbackOtherN&&(this.respFallbackOtherN=e.respFallbackOtherN),void 0!==e.respFallbackOthertErrN&&(this.respFallbackOthertErrN=e.respFallbackOthertErrN),void 0!==e.srcReqN&&(this.srcReqN=e.srcReqN),void 0!==e.srcRespN&&(this.srcRespN=e.srcRespN),void 0!==e.srcRespErrN&&(this.srcRespErrN=e.srcRespErrN),void 0!==e.srcReqQt&&(this.srcReqQt=e.srcReqQt),void 0!==e.srcRespQt&&(this.srcRespQt=e.srcRespQt),void 0!==e.srcOverQt&&(this.srcOverQt=e.srcOverQt),void 0!==e.srcOtherReqN&&(this.srcOtherReqN=e.srcOtherReqN),void 0!==e.srcOtherRespN&&(this.srcOtherRespN=e.srcOtherRespN),void 0!==e.srcOtherRespErrN&&(this.srcOtherRespErrN=e.srcOtherRespErrN),void 0!==e.srcOtherReqQt&&(this.srcOtherReqQt=e.srcOtherReqQt),void 0!==e.srcOtherRespQt&&(this.srcOtherRespQt=e.srcOtherRespQt),void 0!==e.srcOtherOverQt&&(this.srcOtherOverQt=e.srcOtherOverQt),void 0!==e.p2pSubReqN&&(this.p2pSubReqN=e.p2pSubReqN),void 0!==e.p2pSubRespN&&(this.p2pSubRespN=e.p2pSubRespN),void 0!==e.p2pSubRespPartN&&(this.p2pSubRespPartN=e.p2pSubRespPartN),void 0!==e.p2pSubRespErrN&&(this.p2pSubRespErrN=e.p2pSubRespErrN),void 0!==e.p2pSubRespExpN&&(this.p2pSubRespExpN=e.p2pSubRespExpN),void 0!==e.p2pSubReqQt&&(this.p2pSubReqQt=e.p2pSubReqQt),void 0!==e.p2pSubRespQt&&(this.p2pSubRespQt=e.p2pSubRespQt),void 0!==e.p2pDirectQt&&(this.p2pDirectQt=e.p2pDirectQt),void 0!==e.p2pRelayQt&&(this.p2pRelayQt=e.p2pRelayQt),void 0!==e.p2pNatQt&&(this.p2pNatQt=e.p2pNatQt),void 0!==e.p2pUdpbQt&&(this.p2pUdpbQt=e.p2pUdpbQt),void 0!==e.fallAgentRespN&&(this.fallAgentRespN=e.fallAgentRespN),void 0!==e.fallAgentPredHitN&&(this.fallAgentPredHitN=e.fallAgentPredHitN),void 0!==e.fallAgentFailedRespN&&(this.fallAgentFailedRespN=e.fallAgentFailedRespN),void 0!==e.fallAgentPredMissN&&(this.fallAgentPredMissN=e.fallAgentPredMissN),void 0!==e.fallAgentPredPartialHitN&&(this.fallAgentPredPartialHitN=e.fallAgentPredPartialHitN),void 0!==e.fallAgenTrafficSuccessQt&&(this.fallAgenTrafficSuccessQt=e.fallAgenTrafficSuccessQt),void 0!==e.fallAgenTrafficFailureQt&&(this.fallAgenTrafficFailureQt=e.fallAgenTrafficFailureQt),void 0!==e.p2pAgentPredHitN&&(this.p2pAgentPredHitN=e.p2pAgentPredHitN),void 0!==e.p2pAgentPredMissN&&(this.p2pAgentPredMissN=e.p2pAgentPredMissN),void 0!==e.p2pAgentPredPartialHitN&&(this.p2pAgentPredPartialHitN=e.p2pAgentPredPartialHitN),void 0!==e.p2pAgenTrafficSuccessQt&&(this.p2pAgenTrafficSuccessQt=e.p2pAgenTrafficSuccessQt),void 0!==e.p2pAgenTrafficFailureQt&&(this.p2pAgenTrafficFailureQt=e.p2pAgenTrafficFailureQt),void 0!==e.respP2pOtherN&&(this.respP2pOtherN=e.respP2pOtherN),void 0!==e.lCacheRespN&&(this.lCacheRespN=e.lCacheRespN),void 0!==e.lCacheRespQt&&(this.lCacheRespQt=e.lCacheRespQt),void 0!==e.p2pOutSiteLowPrio&&(this.p2pOutSiteLowPrio=e.p2pOutSiteLowPrio))},hive.snapshots.Traffic.prototype={},hive.snapshots.Traffic.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.reqN=e.gw().value:e.dw(r);break;case 2:r==i.bI.OI?this.respFallbackN=e.sR().value:e.dw(r);break;case 3:r==i.bI.NI?this.respFallbackErrN=e.gw().value:e.dw(r);break;case 4:r==i.bI.OI?this.respP2pN=e.sR().value:e.dw(r);break;case 5:r==i.bI.NI?this.reqOtherN=e.gw().value:e.dw(r);break;case 6:r==i.bI.NI?this.respFallbackOtherN=e.gw().value:e.dw(r);break;case 7:r==i.bI.NI?this.respFallbackOthertErrN=e.gw().value:e.dw(r);break;case 8:r==i.bI.NI?this.srcReqN=e.gw().value:e.dw(r);break;case 9:r==i.bI.NI?this.srcRespN=e.gw().value:e.dw(r);break;case 10:r==i.bI.NI?this.srcRespErrN=e.gw().value:e.dw(r);break;case 11:r==i.bI.DI?this.srcReqQt=e.nR().value:e.dw(r);break;case 12:r==i.bI.DI?this.srcRespQt=e.nR().value:e.dw(r);break;case 13:r==i.bI.DI?this.srcOverQt=e.nR().value:e.dw(r);break;case 14:r==i.bI.NI?this.srcOtherReqN=e.gw().value:e.dw(r);break;case 15:r==i.bI.NI?this.srcOtherRespN=e.gw().value:e.dw(r);break;case 16:r==i.bI.NI?this.srcOtherRespErrN=e.gw().value:e.dw(r);break;case 17:r==i.bI.DI?this.srcOtherReqQt=e.nR().value:e.dw(r);break;case 18:r==i.bI.DI?this.srcOtherRespQt=e.nR().value:e.dw(r);break;case 19:r==i.bI.DI?this.srcOtherOverQt=e.nR().value:e.dw(r);break;case 20:r==i.bI.NI?this.p2pSubReqN=e.gw().value:e.dw(r);break;case 21:r==i.bI.NI?this.p2pSubRespN=e.gw().value:e.dw(r);break;case 22:r==i.bI.OI?this.p2pSubRespPartN=e.sR().value:e.dw(r);break;case 23:r==i.bI.OI?this.p2pSubRespErrN=e.sR().value:e.dw(r);break;case 24:r==i.bI.NI?this.p2pSubRespExpN=e.gw().value:e.dw(r);break;case 25:r==i.bI.DI?this.p2pSubReqQt=e.nR().value:e.dw(r);break;case 26:r==i.bI.DI?this.p2pSubRespQt=e.nR().value:e.dw(r);break;case 27:r==i.bI.DI?this.p2pDirectQt=e.nR().value:e.dw(r);break;case 28:r==i.bI.DI?this.p2pRelayQt=e.nR().value:e.dw(r);break;case 29:r==i.bI.DI?this.p2pNatQt=e.nR().value:e.dw(r);break;case 30:r==i.bI.DI?this.p2pUdpbQt=e.nR().value:e.dw(r);break;case 31:r==i.bI.NI?this.fallAgentRespN=e.gw().value:e.dw(r);break;case 32:r==i.bI.NI?this.fallAgentPredHitN=e.gw().value:e.dw(r);break;case 33:r==i.bI.NI?this.fallAgentFailedRespN=e.gw().value:e.dw(r);break;case 34:r==i.bI.NI?this.fallAgentPredMissN=e.gw().value:e.dw(r);break;case 35:r==i.bI.NI?this.fallAgentPredPartialHitN=e.gw().value:e.dw(r);break;case 36:r==i.bI.DI?this.fallAgenTrafficSuccessQt=e.nR().value:e.dw(r);break;case 37:r==i.bI.DI?this.fallAgenTrafficFailureQt=e.nR().value:e.dw(r);break;case 38:r==i.bI.NI?this.p2pAgentPredHitN=e.gw().value:e.dw(r);break;case 39:r==i.bI.NI?this.p2pAgentPredMissN=e.gw().value:e.dw(r);break;case 40:r==i.bI.NI?this.p2pAgentPredPartialHitN=e.gw().value:e.dw(r);break;case 41:r==i.bI.DI?this.p2pAgenTrafficSuccessQt=e.nR().value:e.dw(r);break;case 42:r==i.bI.DI?this.p2pAgenTrafficFailureQt=e.nR().value:e.dw(r);break;case 43:r==i.bI.NI?this.respP2pOtherN=e.gw().value:e.dw(r);break;case 44:r==i.bI.NI?this.lCacheRespN=e.gw().value:e.dw(r);break;case 45:r==i.bI.DI?this.lCacheRespQt=e.nR().value:e.dw(r);break;case 46:r==i.bI.DI?this.p2pOutSiteLowPrio=e.nR().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.Traffic.prototype.write=function(e){e.mw("Traffic"),null!==this.reqN&&void 0!==this.reqN&&(e.Ew("reqN",i.bI.NI,1),e.ww(this.reqN),e.Iw()),null!==this.respFallbackN&&void 0!==this.respFallbackN&&(e.Ew("respFallbackN",i.bI.OI,2),e.LS(this.respFallbackN),e.Iw()),null!==this.respFallbackErrN&&void 0!==this.respFallbackErrN&&(e.Ew("respFallbackErrN",i.bI.NI,3),e.ww(this.respFallbackErrN),e.Iw()),null!==this.respP2pN&&void 0!==this.respP2pN&&(e.Ew("respP2pN",i.bI.OI,4),e.LS(this.respP2pN),e.Iw()),null!==this.reqOtherN&&void 0!==this.reqOtherN&&(e.Ew("reqOtherN",i.bI.NI,5),e.ww(this.reqOtherN),e.Iw()),null!==this.respFallbackOtherN&&void 0!==this.respFallbackOtherN&&(e.Ew("respFallbackOtherN",i.bI.NI,6),e.ww(this.respFallbackOtherN),e.Iw()),null!==this.respFallbackOthertErrN&&void 0!==this.respFallbackOthertErrN&&(e.Ew("respFallbackOthertErrN",i.bI.NI,7),e.ww(this.respFallbackOthertErrN),e.Iw()),null!==this.srcReqN&&void 0!==this.srcReqN&&(e.Ew("srcReqN",i.bI.NI,8),e.ww(this.srcReqN),e.Iw()),null!==this.srcRespN&&void 0!==this.srcRespN&&(e.Ew("srcRespN",i.bI.NI,9),e.ww(this.srcRespN),e.Iw()),null!==this.srcRespErrN&&void 0!==this.srcRespErrN&&(e.Ew("srcRespErrN",i.bI.NI,10),e.ww(this.srcRespErrN),e.Iw()),null!==this.srcReqQt&&void 0!==this.srcReqQt&&(e.Ew("srcReqQt",i.bI.DI,11),e.FS(this.srcReqQt),e.Iw()),null!==this.srcRespQt&&void 0!==this.srcRespQt&&(e.Ew("srcRespQt",i.bI.DI,12),e.FS(this.srcRespQt),e.Iw()),null!==this.srcOverQt&&void 0!==this.srcOverQt&&(e.Ew("srcOverQt",i.bI.DI,13),e.FS(this.srcOverQt),e.Iw()),null!==this.srcOtherReqN&&void 0!==this.srcOtherReqN&&(e.Ew("srcOtherReqN",i.bI.NI,14),e.ww(this.srcOtherReqN),e.Iw()),null!==this.srcOtherRespN&&void 0!==this.srcOtherRespN&&(e.Ew("srcOtherRespN",i.bI.NI,15),e.ww(this.srcOtherRespN),e.Iw()),null!==this.srcOtherRespErrN&&void 0!==this.srcOtherRespErrN&&(e.Ew("srcOtherRespErrN",i.bI.NI,16),e.ww(this.srcOtherRespErrN),e.Iw()),null!==this.srcOtherReqQt&&void 0!==this.srcOtherReqQt&&(e.Ew("srcOtherReqQt",i.bI.DI,17),e.FS(this.srcOtherReqQt),e.Iw()),null!==this.srcOtherRespQt&&void 0!==this.srcOtherRespQt&&(e.Ew("srcOtherRespQt",i.bI.DI,18),e.FS(this.srcOtherRespQt),e.Iw()),null!==this.srcOtherOverQt&&void 0!==this.srcOtherOverQt&&(e.Ew("srcOtherOverQt",i.bI.DI,19),e.FS(this.srcOtherOverQt),e.Iw()),null!==this.p2pSubReqN&&void 0!==this.p2pSubReqN&&(e.Ew("p2pSubReqN",i.bI.NI,20),e.ww(this.p2pSubReqN),e.Iw()),null!==this.p2pSubRespN&&void 0!==this.p2pSubRespN&&(e.Ew("p2pSubRespN",i.bI.NI,21),e.ww(this.p2pSubRespN),e.Iw()),null!==this.p2pSubRespPartN&&void 0!==this.p2pSubRespPartN&&(e.Ew("p2pSubRespPartN",i.bI.OI,22),e.LS(this.p2pSubRespPartN),e.Iw()),null!==this.p2pSubRespErrN&&void 0!==this.p2pSubRespErrN&&(e.Ew("p2pSubRespErrN",i.bI.OI,23),e.LS(this.p2pSubRespErrN),e.Iw()),null!==this.p2pSubRespExpN&&void 0!==this.p2pSubRespExpN&&(e.Ew("p2pSubRespExpN",i.bI.NI,24),e.ww(this.p2pSubRespExpN),e.Iw()),null!==this.p2pSubReqQt&&void 0!==this.p2pSubReqQt&&(e.Ew("p2pSubReqQt",i.bI.DI,25),e.FS(this.p2pSubReqQt),e.Iw()),null!==this.p2pSubRespQt&&void 0!==this.p2pSubRespQt&&(e.Ew("p2pSubRespQt",i.bI.DI,26),e.FS(this.p2pSubRespQt),e.Iw()),null!==this.p2pDirectQt&&void 0!==this.p2pDirectQt&&(e.Ew("p2pDirectQt",i.bI.DI,27),e.FS(this.p2pDirectQt),e.Iw()),null!==this.p2pRelayQt&&void 0!==this.p2pRelayQt&&(e.Ew("p2pRelayQt",i.bI.DI,28),e.FS(this.p2pRelayQt),e.Iw()),null!==this.p2pNatQt&&void 0!==this.p2pNatQt&&(e.Ew("p2pNatQt",i.bI.DI,29),e.FS(this.p2pNatQt),e.Iw()),null!==this.p2pUdpbQt&&void 0!==this.p2pUdpbQt&&(e.Ew("p2pUdpbQt",i.bI.DI,30),e.FS(this.p2pUdpbQt),e.Iw()),null!==this.fallAgentRespN&&void 0!==this.fallAgentRespN&&(e.Ew("fallAgentRespN",i.bI.NI,31),e.ww(this.fallAgentRespN),e.Iw()),null!==this.fallAgentPredHitN&&void 0!==this.fallAgentPredHitN&&(e.Ew("fallAgentPredHitN",i.bI.NI,32),e.ww(this.fallAgentPredHitN),e.Iw()),null!==this.fallAgentFailedRespN&&void 0!==this.fallAgentFailedRespN&&(e.Ew("fallAgentFailedRespN",i.bI.NI,33),e.ww(this.fallAgentFailedRespN),e.Iw()),null!==this.fallAgentPredMissN&&void 0!==this.fallAgentPredMissN&&(e.Ew("fallAgentPredMissN",i.bI.NI,34),e.ww(this.fallAgentPredMissN),e.Iw()),null!==this.fallAgentPredPartialHitN&&void 0!==this.fallAgentPredPartialHitN&&(e.Ew("fallAgentPredPartialHitN",i.bI.NI,35),e.ww(this.fallAgentPredPartialHitN),e.Iw()),null!==this.fallAgenTrafficSuccessQt&&void 0!==this.fallAgenTrafficSuccessQt&&(e.Ew("fallAgenTrafficSuccessQt",i.bI.DI,36),e.FS(this.fallAgenTrafficSuccessQt),e.Iw()),null!==this.fallAgenTrafficFailureQt&&void 0!==this.fallAgenTrafficFailureQt&&(e.Ew("fallAgenTrafficFailureQt",i.bI.DI,37),e.FS(this.fallAgenTrafficFailureQt),e.Iw()),null!==this.p2pAgentPredHitN&&void 0!==this.p2pAgentPredHitN&&(e.Ew("p2pAgentPredHitN",i.bI.NI,38),e.ww(this.p2pAgentPredHitN),e.Iw()),null!==this.p2pAgentPredMissN&&void 0!==this.p2pAgentPredMissN&&(e.Ew("p2pAgentPredMissN",i.bI.NI,39),e.ww(this.p2pAgentPredMissN),e.Iw()),null!==this.p2pAgentPredPartialHitN&&void 0!==this.p2pAgentPredPartialHitN&&(e.Ew("p2pAgentPredPartialHitN",i.bI.NI,40),e.ww(this.p2pAgentPredPartialHitN),e.Iw()),null!==this.p2pAgenTrafficSuccessQt&&void 0!==this.p2pAgenTrafficSuccessQt&&(e.Ew("p2pAgenTrafficSuccessQt",i.bI.DI,41),e.FS(this.p2pAgenTrafficSuccessQt),e.Iw()),null!==this.p2pAgenTrafficFailureQt&&void 0!==this.p2pAgenTrafficFailureQt&&(e.Ew("p2pAgenTrafficFailureQt",i.bI.DI,42),e.FS(this.p2pAgenTrafficFailureQt),e.Iw()),null!==this.respP2pOtherN&&void 0!==this.respP2pOtherN&&(e.Ew("respP2pOtherN",i.bI.NI,43),e.ww(this.respP2pOtherN),e.Iw()),null!==this.lCacheRespN&&void 0!==this.lCacheRespN&&(e.Ew("lCacheRespN",i.bI.NI,44),e.ww(this.lCacheRespN),e.Iw()),null!==this.lCacheRespQt&&void 0!==this.lCacheRespQt&&(e.Ew("lCacheRespQt",i.bI.DI,45),e.FS(this.lCacheRespQt),e.Iw()),null!==this.p2pOutSiteLowPrio&&void 0!==this.p2pOutSiteLowPrio&&(e.Ew("p2pOutSiteLowPrio",i.bI.DI,46),e.FS(this.p2pOutSiteLowPrio),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.Metrics=function(e){this.upBW=null,this.downBW=null,this.memN=null,this.prtInN=null,this.prtOutN=null,this.initVideoBufQt=null,this.videoAvgBufQt=null,this.videoBufQt=null,this.videoBufN=null,this.initAudioBufQt=null,this.audioAvgBufQt=null,this.audioBufQt=null,this.audioBufN=null,this.bitrateUpN=null,this.bitrateDwnN=null,this.delay=null,this.delayEnforcement=null,this.lookupReqEstablished=null,this.lookupReqAccept=null,this.fallbackAvgTp=null,this.srcThroughput=null,this.diskReadTimeout=null,this.diskReadRate=null,this.diskStoreRate=null,this.diskRemoveRate=null,this.diskCacheSize=null,this.clientBufferMs=null,this.lookupTotal=null,this.lookupNotFound=null,this.lookupFailed=null,this.lookupLatency=null,this.trackerFailed=null,this.trackerLatency=null,this.snapshotFailed=null,this.snapshotLatency=null,e&&(void 0!==e.upBW&&(this.upBW=e.upBW),void 0!==e.downBW&&(this.downBW=e.downBW),void 0!==e.memN&&(this.memN=e.memN),void 0!==e.prtInN&&(this.prtInN=e.prtInN),void 0!==e.prtOutN&&(this.prtOutN=e.prtOutN),void 0!==e.initVideoBufQt&&(this.initVideoBufQt=e.initVideoBufQt),void 0!==e.videoAvgBufQt&&(this.videoAvgBufQt=e.videoAvgBufQt),void 0!==e.videoBufQt&&(this.videoBufQt=e.videoBufQt),void 0!==e.videoBufN&&(this.videoBufN=e.videoBufN),void 0!==e.initAudioBufQt&&(this.initAudioBufQt=e.initAudioBufQt),void 0!==e.audioAvgBufQt&&(this.audioAvgBufQt=e.audioAvgBufQt),void 0!==e.audioBufQt&&(this.audioBufQt=e.audioBufQt),void 0!==e.audioBufN&&(this.audioBufN=e.audioBufN),void 0!==e.bitrateUpN&&(this.bitrateUpN=e.bitrateUpN),void 0!==e.bitrateDwnN&&(this.bitrateDwnN=e.bitrateDwnN),void 0!==e.delay&&(this.delay=e.delay),void 0!==e.delayEnforcement&&(this.delayEnforcement=e.delayEnforcement),void 0!==e.lookupReqEstablished&&(this.lookupReqEstablished=e.lookupReqEstablished),void 0!==e.lookupReqAccept&&(this.lookupReqAccept=e.lookupReqAccept),void 0!==e.fallbackAvgTp&&(this.fallbackAvgTp=e.fallbackAvgTp),void 0!==e.srcThroughput&&(this.srcThroughput=e.srcThroughput),void 0!==e.diskReadTimeout&&(this.diskReadTimeout=e.diskReadTimeout),void 0!==e.diskReadRate&&(this.diskReadRate=e.diskReadRate),void 0!==e.diskStoreRate&&(this.diskStoreRate=e.diskStoreRate),void 0!==e.diskRemoveRate&&(this.diskRemoveRate=e.diskRemoveRate),void 0!==e.diskCacheSize&&(this.diskCacheSize=e.diskCacheSize),void 0!==e.clientBufferMs&&(this.clientBufferMs=e.clientBufferMs),void 0!==e.lookupTotal&&(this.lookupTotal=e.lookupTotal),void 0!==e.lookupNotFound&&(this.lookupNotFound=e.lookupNotFound),void 0!==e.lookupFailed&&(this.lookupFailed=e.lookupFailed),void 0!==e.lookupLatency&&(this.lookupLatency=e.lookupLatency),void 0!==e.trackerFailed&&(this.trackerFailed=e.trackerFailed),void 0!==e.trackerLatency&&(this.trackerLatency=e.trackerLatency),void 0!==e.snapshotFailed&&(this.snapshotFailed=e.snapshotFailed),void 0!==e.snapshotLatency&&(this.snapshotLatency=e.snapshotLatency))},hive.snapshots.Metrics.prototype={},hive.snapshots.Metrics.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.upBW=e.gw().value:e.dw(r);break;case 2:r==i.bI.NI?this.downBW=e.gw().value:e.dw(r);break;case 3:r==i.bI.NI?this.memN=e.gw().value:e.dw(r);break;case 4:r==i.bI.NI?this.prtInN=e.gw().value:e.dw(r);break;case 5:r==i.bI.NI?this.prtOutN=e.gw().value:e.dw(r);break;case 6:r==i.bI.DI?this.initVideoBufQt=e.nR().value:e.dw(r);break;case 7:r==i.bI.OI?this.videoAvgBufQt=e.sR().value:e.dw(r);break;case 8:r==i.bI.DI?this.videoBufQt=e.nR().value:e.dw(r);break;case 9:r==i.bI.NI?this.videoBufN=e.gw().value:e.dw(r);break;case 10:r==i.bI.NI?this.initAudioBufQt=e.gw().value:e.dw(r);break;case 11:r==i.bI.OI?this.audioAvgBufQt=e.sR().value:e.dw(r);break;case 12:r==i.bI.DI?this.audioBufQt=e.nR().value:e.dw(r);break;case 13:r==i.bI.NI?this.audioBufN=e.gw().value:e.dw(r);break;case 14:r==i.bI.NI?this.bitrateUpN=e.gw().value:e.dw(r);break;case 15:r==i.bI.NI?this.bitrateDwnN=e.gw().value:e.dw(r);break;case 16:r==i.bI.NI?this.delay=e.gw().value:e.dw(r);break;case 17:r==i.bI.NI?this.delayEnforcement=e.gw().value:e.dw(r);break;case 18:r==i.bI.NI?this.lookupReqEstablished=e.gw().value:e.dw(r);break;case 19:r==i.bI.NI?this.lookupReqAccept=e.gw().value:e.dw(r);break;case 20:r==i.bI.OI?this.fallbackAvgTp=e.sR().value:e.dw(r);break;case 21:r==i.bI.OI?this.srcThroughput=e.sR().value:e.dw(r);break;case 22:r==i.bI.NI?this.diskReadTimeout=e.gw().value:e.dw(r);break;case 23:r==i.bI.OI?this.diskReadRate=e.sR().value:e.dw(r);break;case 24:r==i.bI.OI?this.diskStoreRate=e.sR().value:e.dw(r);break;case 25:r==i.bI.OI?this.diskRemoveRate=e.sR().value:e.dw(r);break;case 26:r==i.bI.DI?this.diskCacheSize=e.nR().value:e.dw(r);break;case 27:r==i.bI.NI?this.clientBufferMs=e.gw().value:e.dw(r);break;case 28:r==i.bI.NI?this.lookupTotal=e.gw().value:e.dw(r);break;case 29:r==i.bI.NI?this.lookupNotFound=e.gw().value:e.dw(r);break;case 30:r==i.bI.NI?this.lookupFailed=e.gw().value:e.dw(r);break;case 31:r==i.bI.NI?this.lookupLatency=e.gw().value:e.dw(r);break;case 32:r==i.bI.NI?this.trackerFailed=e.gw().value:e.dw(r);break;case 33:r==i.bI.NI?this.trackerLatency=e.gw().value:e.dw(r);break;case 34:r==i.bI.NI?this.snapshotFailed=e.gw().value:e.dw(r);break;case 35:r==i.bI.NI?this.snapshotLatency=e.gw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.Metrics.prototype.write=function(e){e.mw("Metrics"),null!==this.upBW&&void 0!==this.upBW&&(e.Ew("upBW",i.bI.NI,1),e.ww(this.upBW),e.Iw()),null!==this.downBW&&void 0!==this.downBW&&(e.Ew("downBW",i.bI.NI,2),e.ww(this.downBW),e.Iw()),null!==this.memN&&void 0!==this.memN&&(e.Ew("memN",i.bI.NI,3),e.ww(this.memN),e.Iw()),null!==this.prtInN&&void 0!==this.prtInN&&(e.Ew("prtInN",i.bI.NI,4),e.ww(this.prtInN),e.Iw()),null!==this.prtOutN&&void 0!==this.prtOutN&&(e.Ew("prtOutN",i.bI.NI,5),e.ww(this.prtOutN),e.Iw()),null!==this.initVideoBufQt&&void 0!==this.initVideoBufQt&&(e.Ew("initVideoBufQt",i.bI.DI,6),e.FS(this.initVideoBufQt),e.Iw()),null!==this.videoAvgBufQt&&void 0!==this.videoAvgBufQt&&(e.Ew("videoAvgBufQt",i.bI.OI,7),e.LS(this.videoAvgBufQt),e.Iw()),null!==this.videoBufQt&&void 0!==this.videoBufQt&&(e.Ew("videoBufQt",i.bI.DI,8),e.FS(this.videoBufQt),e.Iw()),null!==this.videoBufN&&void 0!==this.videoBufN&&(e.Ew("videoBufN",i.bI.NI,9),e.ww(this.videoBufN),e.Iw()),null!==this.initAudioBufQt&&void 0!==this.initAudioBufQt&&(e.Ew("initAudioBufQt",i.bI.NI,10),e.ww(this.initAudioBufQt),e.Iw()),null!==this.audioAvgBufQt&&void 0!==this.audioAvgBufQt&&(e.Ew("audioAvgBufQt",i.bI.OI,11),e.LS(this.audioAvgBufQt),e.Iw()),null!==this.audioBufQt&&void 0!==this.audioBufQt&&(e.Ew("audioBufQt",i.bI.DI,12),e.FS(this.audioBufQt),e.Iw()),null!==this.audioBufN&&void 0!==this.audioBufN&&(e.Ew("audioBufN",i.bI.NI,13),e.ww(this.audioBufN),e.Iw()),null!==this.bitrateUpN&&void 0!==this.bitrateUpN&&(e.Ew("bitrateUpN",i.bI.NI,14),e.ww(this.bitrateUpN),e.Iw()),null!==this.bitrateDwnN&&void 0!==this.bitrateDwnN&&(e.Ew("bitrateDwnN",i.bI.NI,15),e.ww(this.bitrateDwnN),e.Iw()),null!==this.delay&&void 0!==this.delay&&(e.Ew("delay",i.bI.NI,16),e.ww(this.delay),e.Iw()),null!==this.delayEnforcement&&void 0!==this.delayEnforcement&&(e.Ew("delayEnforcement",i.bI.NI,17),e.ww(this.delayEnforcement),e.Iw()),null!==this.lookupReqEstablished&&void 0!==this.lookupReqEstablished&&(e.Ew("lookupReqEstablished",i.bI.NI,18),e.ww(this.lookupReqEstablished),e.Iw()),null!==this.lookupReqAccept&&void 0!==this.lookupReqAccept&&(e.Ew("lookupReqAccept",i.bI.NI,19),e.ww(this.lookupReqAccept),e.Iw()),null!==this.fallbackAvgTp&&void 0!==this.fallbackAvgTp&&(e.Ew("fallbackAvgTp",i.bI.OI,20),e.LS(this.fallbackAvgTp),e.Iw()),null!==this.srcThroughput&&void 0!==this.srcThroughput&&(e.Ew("srcThroughput",i.bI.OI,21),e.LS(this.srcThroughput),e.Iw()),null!==this.diskReadTimeout&&void 0!==this.diskReadTimeout&&(e.Ew("diskReadTimeout",i.bI.NI,22),e.ww(this.diskReadTimeout),e.Iw()),null!==this.diskReadRate&&void 0!==this.diskReadRate&&(e.Ew("diskReadRate",i.bI.OI,23),e.LS(this.diskReadRate),e.Iw()),null!==this.diskStoreRate&&void 0!==this.diskStoreRate&&(e.Ew("diskStoreRate",i.bI.OI,24),e.LS(this.diskStoreRate),e.Iw()),null!==this.diskRemoveRate&&void 0!==this.diskRemoveRate&&(e.Ew("diskRemoveRate",i.bI.OI,25),e.LS(this.diskRemoveRate),e.Iw()),null!==this.diskCacheSize&&void 0!==this.diskCacheSize&&(e.Ew("diskCacheSize",i.bI.DI,26),e.FS(this.diskCacheSize),e.Iw()),null!==this.clientBufferMs&&void 0!==this.clientBufferMs&&(e.Ew("clientBufferMs",i.bI.NI,27),e.ww(this.clientBufferMs),e.Iw()),null!==this.lookupTotal&&void 0!==this.lookupTotal&&(e.Ew("lookupTotal",i.bI.NI,28),e.ww(this.lookupTotal),e.Iw()),null!==this.lookupNotFound&&void 0!==this.lookupNotFound&&(e.Ew("lookupNotFound",i.bI.NI,29),e.ww(this.lookupNotFound),e.Iw()),null!==this.lookupFailed&&void 0!==this.lookupFailed&&(e.Ew("lookupFailed",i.bI.NI,30),e.ww(this.lookupFailed),e.Iw()),null!==this.lookupLatency&&void 0!==this.lookupLatency&&(e.Ew("lookupLatency",i.bI.NI,31),e.ww(this.lookupLatency),e.Iw()),null!==this.trackerFailed&&void 0!==this.trackerFailed&&(e.Ew("trackerFailed",i.bI.NI,32),e.ww(this.trackerFailed),e.Iw()),null!==this.trackerLatency&&void 0!==this.trackerLatency&&(e.Ew("trackerLatency",i.bI.NI,33),e.ww(this.trackerLatency),e.Iw()),null!==this.snapshotFailed&&void 0!==this.snapshotFailed&&(e.Ew("snapshotFailed",i.bI.NI,34),e.ww(this.snapshotFailed),e.Iw()),null!==this.snapshotLatency&&void 0!==this.snapshotLatency&&(e.Ew("snapshotLatency",i.bI.NI,35),e.ww(this.snapshotLatency),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.PartnerTraffic=function(e){this.p2pSuccReq=null,this.p2pFailReq=null,this.p2pPartReq=null,this.p2pSuccReceived=null,this.p2pSuccReceivedLow=null,this.p2pFailReceived=null,this.p2pSuccResp=null,this.p2pFailResp=null,this.p2pPartResp=null,this.p2pSuccSent=null,this.p2pSuccSentLow=null,this.p2pFailSent=null,e&&(void 0!==e.p2pSuccReq&&(this.p2pSuccReq=e.p2pSuccReq),void 0!==e.p2pFailReq&&(this.p2pFailReq=e.p2pFailReq),void 0!==e.p2pPartReq&&(this.p2pPartReq=e.p2pPartReq),void 0!==e.p2pSuccReceived&&(this.p2pSuccReceived=e.p2pSuccReceived),void 0!==e.p2pSuccReceivedLow&&(this.p2pSuccReceivedLow=e.p2pSuccReceivedLow),void 0!==e.p2pFailReceived&&(this.p2pFailReceived=e.p2pFailReceived),void 0!==e.p2pSuccResp&&(this.p2pSuccResp=e.p2pSuccResp),void 0!==e.p2pFailResp&&(this.p2pFailResp=e.p2pFailResp),void 0!==e.p2pPartResp&&(this.p2pPartResp=e.p2pPartResp),void 0!==e.p2pSuccSent&&(this.p2pSuccSent=e.p2pSuccSent),void 0!==e.p2pSuccSentLow&&(this.p2pSuccSentLow=e.p2pSuccSentLow),void 0!==e.p2pFailSent&&(this.p2pFailSent=e.p2pFailSent))},hive.snapshots.PartnerTraffic.prototype={},hive.snapshots.PartnerTraffic.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.DI?this.p2pSuccReq=e.nR().value:e.dw(r);break;case 2:r==i.bI.DI?this.p2pFailReq=e.nR().value:e.dw(r);break;case 3:r==i.bI.DI?this.p2pPartReq=e.nR().value:e.dw(r);break;case 4:r==i.bI.DI?this.p2pSuccReceived=e.nR().value:e.dw(r);break;case 5:r==i.bI.DI?this.p2pSuccReceivedLow=e.nR().value:e.dw(r);break;case 10:r==i.bI.DI?this.p2pFailReceived=e.nR().value:e.dw(r);break;case 6:r==i.bI.DI?this.p2pSuccResp=e.nR().value:e.dw(r);break;case 11:r==i.bI.DI?this.p2pFailResp=e.nR().value:e.dw(r);break;case 7:r==i.bI.DI?this.p2pPartResp=e.nR().value:e.dw(r);break;case 8:r==i.bI.DI?this.p2pSuccSent=e.nR().value:e.dw(r);break;case 9:r==i.bI.DI?this.p2pSuccSentLow=e.nR().value:e.dw(r);break;case 12:r==i.bI.DI?this.p2pFailSent=e.nR().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.PartnerTraffic.prototype.write=function(e){e.mw("PartnerTraffic"),null!==this.p2pSuccReq&&void 0!==this.p2pSuccReq&&(e.Ew("p2pSuccReq",i.bI.DI,1),e.FS(this.p2pSuccReq),e.Iw()),null!==this.p2pFailReq&&void 0!==this.p2pFailReq&&(e.Ew("p2pFailReq",i.bI.DI,2),e.FS(this.p2pFailReq),e.Iw()),null!==this.p2pPartReq&&void 0!==this.p2pPartReq&&(e.Ew("p2pPartReq",i.bI.DI,3),e.FS(this.p2pPartReq),e.Iw()),null!==this.p2pSuccReceived&&void 0!==this.p2pSuccReceived&&(e.Ew("p2pSuccReceived",i.bI.DI,4),e.FS(this.p2pSuccReceived),e.Iw()),null!==this.p2pSuccReceivedLow&&void 0!==this.p2pSuccReceivedLow&&(e.Ew("p2pSuccReceivedLow",i.bI.DI,5),e.FS(this.p2pSuccReceivedLow),e.Iw()),null!==this.p2pFailReceived&&void 0!==this.p2pFailReceived&&(e.Ew("p2pFailReceived",i.bI.DI,10),e.FS(this.p2pFailReceived),e.Iw()),null!==this.p2pSuccResp&&void 0!==this.p2pSuccResp&&(e.Ew("p2pSuccResp",i.bI.DI,6),e.FS(this.p2pSuccResp),e.Iw()),null!==this.p2pFailResp&&void 0!==this.p2pFailResp&&(e.Ew("p2pFailResp",i.bI.DI,11),e.FS(this.p2pFailResp),e.Iw()),null!==this.p2pPartResp&&void 0!==this.p2pPartResp&&(e.Ew("p2pPartResp",i.bI.DI,7),e.FS(this.p2pPartResp),e.Iw()),null!==this.p2pSuccSent&&void 0!==this.p2pSuccSent&&(e.Ew("p2pSuccSent",i.bI.DI,8),e.FS(this.p2pSuccSent),e.Iw()),null!==this.p2pSuccSentLow&&void 0!==this.p2pSuccSentLow&&(e.Ew("p2pSuccSentLow",i.bI.DI,9),e.FS(this.p2pSuccSentLow),e.Iw()),null!==this.p2pFailSent&&void 0!==this.p2pFailSent&&(e.Ew("p2pFailSent",i.bI.DI,12),e.FS(this.p2pFailSent),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.PartnerMetrics=function(e){this.rateReceived=null,this.rateSent=null,this.handshakeDelay=null,e&&(void 0!==e.rateReceived&&(this.rateReceived=e.rateReceived),void 0!==e.rateSent&&(this.rateSent=e.rateSent),void 0!==e.handshakeDelay&&(this.handshakeDelay=e.handshakeDelay))},hive.snapshots.PartnerMetrics.prototype={},hive.snapshots.PartnerMetrics.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.OI?this.rateReceived=e.sR().value:e.dw(r);break;case 2:r==i.bI.OI?this.rateSent=e.sR().value:e.dw(r);break;case 3:r==i.bI.DI?this.handshakeDelay=e.nR().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.PartnerMetrics.prototype.write=function(e){e.mw("PartnerMetrics"),null!==this.rateReceived&&void 0!==this.rateReceived&&(e.Ew("rateReceived",i.bI.OI,1),e.LS(this.rateReceived),e.Iw()),null!==this.rateSent&&void 0!==this.rateSent&&(e.Ew("rateSent",i.bI.OI,2),e.LS(this.rateSent),e.Iw()),null!==this.handshakeDelay&&void 0!==this.handshakeDelay&&(e.Ew("handshakeDelay",i.bI.DI,3),e.FS(this.handshakeDelay),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.ConnectivityInfo=function(e){this.upBW=null,this.downBW=null,this.externalAs=null,this.internalAs=null,this.publicIp=null,this.privateIp=null,e&&(void 0!==e.upBW&&(this.upBW=e.upBW),void 0!==e.downBW&&(this.downBW=e.downBW),void 0!==e.externalAs&&(this.externalAs=e.externalAs),void 0!==e.internalAs&&(this.internalAs=e.internalAs),void 0!==e.publicIp&&(this.publicIp=e.publicIp),void 0!==e.privateIp&&(this.privateIp=e.privateIp))},hive.snapshots.ConnectivityInfo.prototype={},hive.snapshots.ConnectivityInfo.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.upBW=e.gw().value:e.dw(r);break;case 2:r==i.bI.NI?this.downBW=e.gw().value:e.dw(r);break;case 3:r==i.bI.NI?this.externalAs=e.gw().value:e.dw(r);break;case 4:r==i.bI.NI?this.internalAs=e.gw().value:e.dw(r);break;case 5:r==i.bI.FI?this.publicIp=e.fw().value:e.dw(r);break;case 6:r==i.bI.FI?this.privateIp=e.fw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.ConnectivityInfo.prototype.write=function(e){e.mw("ConnectivityInfo"),null!==this.upBW&&void 0!==this.upBW&&(e.Ew("upBW",i.bI.NI,1),e.ww(this.upBW),e.Iw()),null!==this.downBW&&void 0!==this.downBW&&(e.Ew("downBW",i.bI.NI,2),e.ww(this.downBW),e.Iw()),null!==this.externalAs&&void 0!==this.externalAs&&(e.Ew("externalAs",i.bI.NI,3),e.ww(this.externalAs),e.Iw()),null!==this.internalAs&&void 0!==this.internalAs&&(e.Ew("internalAs",i.bI.NI,4),e.ww(this.internalAs),e.Iw()),null!==this.publicIp&&void 0!==this.publicIp&&(e.Ew("publicIp",i.bI.FI,5),e.Tw(this.publicIp),e.Iw()),null!==this.privateIp&&void 0!==this.privateIp&&(e.Ew("privateIp",i.bI.FI,6),e.Tw(this.privateIp),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.Partner=function(e){this.connInfo=null,this.traffic=null,this.metrics=null,this.inPart=null,this.outPart=null,this.udp=null,e&&(void 0!==e.connInfo&&(this.connInfo=e.connInfo),void 0!==e.traffic&&(this.traffic=e.traffic),void 0!==e.metrics&&(this.metrics=e.metrics),void 0!==e.inPart&&(this.inPart=e.inPart),void 0!==e.outPart&&(this.outPart=e.outPart),void 0!==e.udp&&(this.udp=e.udp))},hive.snapshots.Partner.prototype={},hive.snapshots.Partner.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.MI?(this.connInfo=new hive.snapshots.ConnectivityInfo,this.connInfo.read(e)):e.dw(r);break;case 2:r==i.bI.MI?(this.traffic=new hive.snapshots.PartnerTraffic,this.traffic.read(e)):e.dw(r);break;case 3:r==i.bI.MI?(this.metrics=new hive.snapshots.PartnerMetrics,this.metrics.read(e)):e.dw(r);break;case 4:r==i.bI.BOOL?this.inPart=e.tR().value:e.dw(r);break;case 5:r==i.bI.BOOL?this.outPart=e.tR().value:e.dw(r);break;case 6:r==i.bI.BOOL?this.udp=e.tR().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.Partner.prototype.write=function(e){e.mw("Partner"),null!==this.connInfo&&void 0!==this.connInfo&&(e.Ew("connInfo",i.bI.MI,1),this.connInfo.write(e),e.Iw()),null!==this.traffic&&void 0!==this.traffic&&(e.Ew("traffic",i.bI.MI,2),this.traffic.write(e),e.Iw()),null!==this.metrics&&void 0!==this.metrics&&(e.Ew("metrics",i.bI.MI,3),this.metrics.write(e),e.Iw()),null!==this.inPart&&void 0!==this.inPart&&(e.Ew("inPart",i.bI.BOOL,4),e._S(this.inPart),e.Iw()),null!==this.outPart&&void 0!==this.outPart&&(e.Ew("outPart",i.bI.BOOL,5),e._S(this.outPart),e.Iw()),null!==this.udp&&void 0!==this.udp&&(e.Ew("udp",i.bI.BOOL,6),e._S(this.udp),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.StreamInfo=function(e){this.url=null,this.streamType=null,this.streamProtocol=null,e&&(void 0!==e.url&&(this.url=e.url),void 0!==e.streamType&&(this.streamType=e.streamType),void 0!==e.streamProtocol&&(this.streamProtocol=e.streamProtocol))},hive.snapshots.StreamInfo.prototype={},hive.snapshots.StreamInfo.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.FI?this.url=e.fw().value:e.dw(r);break;case 2:r==i.bI.NI?this.streamType=e.gw().value:e.dw(r);break;case 3:r==i.bI.NI?this.streamProtocol=e.gw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.StreamInfo.prototype.write=function(e){e.mw("StreamInfo"),null!==this.url&&void 0!==this.url&&(e.Ew("url",i.bI.FI,1),e.Tw(this.url),e.Iw()),null!==this.streamType&&void 0!==this.streamType&&(e.Ew("streamType",i.bI.NI,2),e.ww(this.streamType),e.Iw()),null!==this.streamProtocol&&void 0!==this.streamProtocol&&(e.Ew("streamProtocol",i.bI.NI,3),e.ww(this.streamProtocol),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.ClientInfo=function(e){this.clientType=null,this.majorVersion=null,this.minorVersion=null,this.patchVersion=null,e&&(void 0!==e.clientType&&(this.clientType=e.clientType),void 0!==e.majorVersion&&(this.majorVersion=e.majorVersion),void 0!==e.minorVersion&&(this.minorVersion=e.minorVersion),void 0!==e.patchVersion&&(this.patchVersion=e.patchVersion))},hive.snapshots.ClientInfo.prototype={},hive.snapshots.ClientInfo.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.clientType=e.gw().value:e.dw(r);break;case 2:r==i.bI.BYTE?this.majorVersion=e.rR().value:e.dw(r);break;case 3:r==i.bI.BYTE?this.minorVersion=e.rR().value:e.dw(r);break;case 4:r==i.bI._I?this.patchVersion=e.iR().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.ClientInfo.prototype.write=function(e){e.mw("ClientInfo"),null!==this.clientType&&void 0!==this.clientType&&(e.Ew("clientType",i.bI.NI,1),e.ww(this.clientType),e.Iw()),null!==this.majorVersion&&void 0!==this.majorVersion&&(e.Ew("majorVersion",i.bI.BYTE,2),e.NS(this.majorVersion),e.Iw()),null!==this.minorVersion&&void 0!==this.minorVersion&&(e.Ew("minorVersion",i.bI.BYTE,3),e.NS(this.minorVersion),e.Iw()),null!==this.patchVersion&&void 0!==this.patchVersion&&(e.Ew("patchVersion",i.bI._I,4),e.DS(this.patchVersion),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.AgentInfo=function(e){this.firstTierBitrates=null,this.secondTierBitrates=null,e&&(void 0!==e.firstTierBitrates&&(this.firstTierBitrates=e.firstTierBitrates),void 0!==e.secondTierBitrates&&(this.secondTierBitrates=e.secondTierBitrates))},hive.snapshots.AgentInfo.prototype={},hive.snapshots.AgentInfo.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:if(r==i.bI.UI){var s,o=0;this.firstTierBitrates=[];s=e.$S(),s.XS,o=s.size;for(var a=0;a<o;++a){var h=null;h=e.gw().value,this.firstTierBitrates.push(h)}e.eR()}else e.dw(r);break;case 2:if(r==i.bI.UI){var c,u=0;this.secondTierBitrates=[];c=e.$S(),c.XS,u=c.size;for(var l=0;l<u;++l){var p=null;p=e.gw().value,this.secondTierBitrates.push(p)}e.eR()}else e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.AgentInfo.prototype.write=function(e){if(e.mw("AgentInfo"),null!==this.firstTierBitrates&&void 0!==this.firstTierBitrates){e.Ew("firstTierBitrates",i.bI.UI,1),e.kS(i.bI.NI,this.firstTierBitrates.length);for(var t in this.firstTierBitrates)this.firstTierBitrates.hasOwnProperty(t)&&(t=this.firstTierBitrates[t],e.ww(t));e.OS(),e.Iw()}if(null!==this.secondTierBitrates&&void 0!==this.secondTierBitrates){e.Ew("secondTierBitrates",i.bI.UI,2),e.kS(i.bI.NI,this.secondTierBitrates.length);for(var r in this.secondTierBitrates)this.secondTierBitrates.hasOwnProperty(r)&&(r=this.secondTierBitrates[r],e.ww(r));e.OS(),e.Iw()}e.Sw(),e.Rw()},hive.snapshots.TrafficKey=function(e){this.bitrate=null,this.AS=null,this.partnerGuid=null,e&&(void 0!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.AS&&(this.AS=e.AS),void 0!==e.partnerGuid&&(this.partnerGuid=e.partnerGuid))},hive.snapshots.TrafficKey.prototype={},hive.snapshots.TrafficKey.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.bitrate=e.gw().value:e.dw(r);break;case 2:r==i.bI.NI?this.AS=e.gw().value:e.dw(r);break;case 3:r==i.bI.FI?this.partnerGuid=e.fw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.TrafficKey.prototype.write=function(e){e.mw("TrafficKey"),null!==this.bitrate&&void 0!==this.bitrate&&(e.Ew("bitrate",i.bI.NI,1),e.ww(this.bitrate),e.Iw()),null!==this.AS&&void 0!==this.AS&&(e.Ew("AS",i.bI.NI,2),e.ww(this.AS),e.Iw()),null!==this.partnerGuid&&void 0!==this.partnerGuid&&(e.Ew("partnerGuid",i.bI.FI,3),e.Tw(this.partnerGuid),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.PartnerKey=function(e){this.bitrate=null,this.AS=null,this.partnerGuid=null,e&&(void 0!==e.bitrate&&(this.bitrate=e.bitrate),void 0!==e.AS&&(this.AS=e.AS),void 0!==e.partnerGuid&&(this.partnerGuid=e.partnerGuid))},hive.snapshots.PartnerKey.prototype={},hive.snapshots.PartnerKey.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.NI?this.bitrate=e.gw().value:e.dw(r);break;case 2:r==i.bI.NI?this.AS=e.gw().value:e.dw(r);break;case 3:r==i.bI.FI?this.partnerGuid=e.fw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.PartnerKey.prototype.write=function(e){e.mw("PartnerKey"),null!==this.bitrate&&void 0!==this.bitrate&&(e.Ew("bitrate",i.bI.NI,1),e.ww(this.bitrate),e.Iw()),null!==this.AS&&void 0!==this.AS&&(e.Ew("AS",i.bI.NI,2),e.ww(this.AS),e.Iw()),null!==this.partnerGuid&&void 0!==this.partnerGuid&&(e.Ew("partnerGuid",i.bI.FI,3),e.Tw(this.partnerGuid),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.Player=function(e){this.bufferingN=null,this.bufferingMs=null,this.initBufferingN=null,this.initBufferingMs=null,this.seekBufferingN=null,this.seekBufferingMs=null,this.playerBufferMs=null,e&&(void 0!==e.bufferingN&&(this.bufferingN=e.bufferingN),void 0!==e.bufferingMs&&(this.bufferingMs=e.bufferingMs),void 0!==e.initBufferingN&&(this.initBufferingN=e.initBufferingN),void 0!==e.initBufferingMs&&(this.initBufferingMs=e.initBufferingMs),void 0!==e.seekBufferingN&&(this.seekBufferingN=e.seekBufferingN),void 0!==e.seekBufferingMs&&(this.seekBufferingMs=e.seekBufferingMs),void 0!==e.playerBufferMs&&(this.playerBufferMs=e.playerBufferMs))},hive.snapshots.Player.prototype={},hive.snapshots.Player.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI._I?this.bufferingN=e.iR().value:e.dw(r);break;case 2:r==i.bI.NI?this.bufferingMs=e.gw().value:e.dw(r);break;case 3:r==i.bI._I?this.initBufferingN=e.iR().value:e.dw(r);break;case 4:r==i.bI.NI?this.initBufferingMs=e.gw().value:e.dw(r);break;case 5:r==i.bI._I?this.seekBufferingN=e.iR().value:e.dw(r);break;case 6:r==i.bI.NI?this.seekBufferingMs=e.gw().value:e.dw(r);break;case 36:r==i.bI.NI?this.playerBufferMs=e.gw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.Player.prototype.write=function(e){e.mw("Player"),null!==this.bufferingN&&void 0!==this.bufferingN&&(e.Ew("bufferingN",i.bI._I,1),e.DS(this.bufferingN),e.Iw()),null!==this.bufferingMs&&void 0!==this.bufferingMs&&(e.Ew("bufferingMs",i.bI.NI,2),e.ww(this.bufferingMs),e.Iw()),null!==this.initBufferingN&&void 0!==this.initBufferingN&&(e.Ew("initBufferingN",i.bI._I,3),e.DS(this.initBufferingN),e.Iw()),null!==this.initBufferingMs&&void 0!==this.initBufferingMs&&(e.Ew("initBufferingMs",i.bI.NI,4),e.ww(this.initBufferingMs),e.Iw()),null!==this.seekBufferingN&&void 0!==this.seekBufferingN&&(e.Ew("seekBufferingN",i.bI._I,5),e.DS(this.seekBufferingN),e.Iw()),null!==this.seekBufferingMs&&void 0!==this.seekBufferingMs&&(e.Ew("seekBufferingMs",i.bI.NI,6),e.ww(this.seekBufferingMs),e.Iw()),null!==this.playerBufferMs&&void 0!==this.playerBufferMs&&(e.Ew("playerBufferMs",i.bI.NI,36),e.ww(this.playerBufferMs),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.MetricSnapshot=function(e){this.timestamp=null,this.guid=null,this.eventId=null,this.streamInfo=null,this.metrics=null,this.traffic=null,this.snapshotInfo=null,this.agentInfo=null,this.connInfo=null,this.partners=null,this.player=null,this.client=null,this.sessionId=null,e&&(void 0!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.guid&&(this.guid=e.guid),void 0!==e.eventId&&(this.eventId=e.eventId),void 0!==e.streamInfo&&(this.streamInfo=e.streamInfo),void 0!==e.metrics&&(this.metrics=e.metrics),void 0!==e.traffic&&(this.traffic=e.traffic),void 0!==e.snapshotInfo&&(this.snapshotInfo=e.snapshotInfo),void 0!==e.agentInfo&&(this.agentInfo=e.agentInfo),void 0!==e.connInfo&&(this.connInfo=e.connInfo),void 0!==e.partners&&(this.partners=e.partners),void 0!==e.player&&(this.player=e.player),void 0!==e.client&&(this.client=e.client),void 0!==e.sessionId&&(this.sessionId=e.sessionId))},hive.snapshots.MetricSnapshot.prototype={},hive.snapshots.MetricSnapshot.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.DI?this.timestamp=e.nR().value:e.dw(r);break;case 2:r==i.bI.FI?this.guid=e.fw().value:e.dw(r);break;case 3:r==i.bI.MI?(this.eventId=new EventId,this.eventId.read(e)):e.dw(r);break;case 4:r==i.bI.MI?(this.streamInfo=new hive.snapshots.StreamInfo,this.streamInfo.read(e)):e.dw(r);break;case 5:r==i.bI.MI?(this.metrics=new hive.snapshots.Metrics,this.metrics.read(e)):e.dw(r);break;case 6:if(r==i.bI.BI){var s,o=0;this.traffic={};s=e.KS(),s.YS,s.zS,o=s.size;for(var a=0;a<o;++a){a>0&&e.US.length>e.Cw[e.Cw.length-1]+1&&e.US.pop();var h=null,c=null;h=new hive.snapshots.TrafficKey,h.read(e),c=new hive.snapshots.Traffic,c.read(e),this.traffic[h]=c}e.JS()}else e.dw(r);break;case 7:r==i.bI.MI?(this.snapshotInfo=new SnapshotInfo,this.snapshotInfo.read(e)):e.dw(r);break;case 8:r==i.bI.MI?(this.agentInfo=new hive.snapshots.AgentInfo,this.agentInfo.read(e)):e.dw(r);break;case 9:r==i.bI.MI?(this.connInfo=new hive.snapshots.ConnectivityInfo,this.connInfo.read(e)):e.dw(r);break;case 10:if(r==i.bI.BI){var u,l=0;this.partners={};u=e.KS(),u.YS,u.zS,l=u.size;for(var p=0;p<l;++p){p>0&&e.US.length>e.Cw[e.Cw.length-1]+1&&e.US.pop();var f=null,d=null;f=new hive.snapshots.PartnerKey,f.read(e),d=new hive.snapshots.Partner,d.read(e),this.partners[f]=d}e.JS()}else e.dw(r);break;case 11:r==i.bI.MI?(this.player=new hive.snapshots.Player,this.player.read(e)):e.dw(r);break;case 12:r==i.bI.MI?(this.client=new hive.snapshots.ClientInfo,this.client.read(e)):e.dw(r);break;case 13:r==i.bI.FI?this.sessionId=e.fw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.MetricSnapshot.prototype.write=function(e){if(e.mw("MetricSnapshot"),null!==this.timestamp&&void 0!==this.timestamp&&(e.Ew("timestamp",i.bI.DI,1),e.FS(this.timestamp),e.Iw()),null!==this.guid&&void 0!==this.guid&&(e.Ew("guid",i.bI.FI,2),e.Tw(this.guid),e.Iw()),null!==this.eventId&&void 0!==this.eventId&&(e.Ew("eventId",i.bI.MI,3),this.eventId.write(e),e.Iw()),null!==this.streamInfo&&void 0!==this.streamInfo&&(e.Ew("streamInfo",i.bI.MI,4),this.streamInfo.write(e),e.Iw()),null!==this.metrics&&void 0!==this.metrics&&(e.Ew("metrics",i.bI.MI,5),this.metrics.write(e),e.Iw()),null!==this.traffic&&void 0!==this.traffic){e.Ew("traffic",i.bI.BI,6),e.RS(i.bI.MI,i.bI.MI,i.YI(this.traffic));for(var t=0;t<this.traffic.length;t++){var r=this.traffic[t],n=r.key,s=r.value;n.write(e),s.write(e)}e.bS(),e.Iw()}if(null!==this.snapshotInfo&&void 0!==this.snapshotInfo&&(e.Ew("snapshotInfo",i.bI.MI,7),this.snapshotInfo.write(e),e.Iw()),null!==this.agentInfo&&void 0!==this.agentInfo&&(e.Ew("agentInfo",i.bI.MI,8),this.agentInfo.write(e),e.Iw()),null!==this.connInfo&&void 0!==this.connInfo&&(e.Ew("connInfo",i.bI.MI,9),this.connInfo.write(e),e.Iw()),null!==this.partners&&void 0!==this.partners){e.Ew("partners",i.bI.BI,10),e.RS(i.bI.MI,i.bI.MI,i.YI(this.partners));for(var t=0;t<this.partners.length;t++){var r=this.partners[t],o=r.key,a=r.value;o.write(e),a.write(e)}e.bS(),e.Iw()}null!==this.player&&void 0!==this.player&&(e.Ew("player",i.bI.MI,11),this.player.write(e),e.Iw()),null!==this.client&&void 0!==this.client&&(e.Ew("client",i.bI.MI,12),this.client.write(e),e.Iw()),null!==this.sessionId&&void 0!==this.sessionId&&(e.Ew("sessionId",i.bI.FI,13),e.Tw(this.sessionId),e.Iw()),e.Sw(),e.Rw()},hive.snapshots.JsonMetricSnapshot=function(e){this.timestamp=null,this.guid=null,this.eventId=null,this.streamInfo=null,this.metrics=null,this.traffic=null,this.snapshotInfo=null,this.agentInfo=null,this.connInfo=null,this.partners=null,this.player=null,this.client=null,this.sessionId=null,e&&(void 0!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.guid&&(this.guid=e.guid),void 0!==e.eventId&&(this.eventId=e.eventId),void 0!==e.streamInfo&&(this.streamInfo=e.streamInfo),void 0!==e.metrics&&(this.metrics=e.metrics),void 0!==e.traffic&&(this.traffic=e.traffic),void 0!==e.snapshotInfo&&(this.snapshotInfo=e.snapshotInfo),void 0!==e.agentInfo&&(this.agentInfo=e.agentInfo),void 0!==e.connInfo&&(this.connInfo=e.connInfo),void 0!==e.partners&&(this.partners=e.partners),void 0!==e.player&&(this.player=e.player),void 0!==e.client&&(this.client=e.client),void 0!==e.sessionId&&(this.sessionId=e.sessionId))},hive.snapshots.JsonMetricSnapshot.prototype={},hive.snapshots.JsonMetricSnapshot.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.DI?this.timestamp=e.nR().value:e.dw(r);break;case 2:r==i.bI.FI?this.guid=e.fw().value:e.dw(r);break;case 3:r==i.bI.MI?(this.eventId=new EventId,this.eventId.read(e)):e.dw(r);break;case 4:r==i.bI.MI?(this.streamInfo=new hive.snapshots.StreamInfo,this.streamInfo.read(e)):e.dw(r);break;case 5:r==i.bI.MI?(this.metrics=new hive.snapshots.Metrics,this.metrics.read(e)):e.dw(r);break;case 6:if(r==i.bI.BI){var s,o=0;this.traffic={};s=e.KS(),s.YS,s.zS,o=s.size;for(var a=0;a<o;++a){a>0&&e.US.length>e.Cw[e.Cw.length-1]+1&&e.US.pop();var h=null,c=null;h=e.fw().value,c=new hive.snapshots.Traffic,c.read(e),this.traffic[h]=c}e.JS()}else e.dw(r);break;case 7:r==i.bI.MI?(this.snapshotInfo=new SnapshotInfo,this.snapshotInfo.read(e)):e.dw(r);break;case 8:r==i.bI.MI?(this.agentInfo=new hive.snapshots.AgentInfo,this.agentInfo.read(e)):e.dw(r);break;case 9:r==i.bI.MI?(this.connInfo=new hive.snapshots.ConnectivityInfo,this.connInfo.read(e)):e.dw(r);break;case 10:if(r==i.bI.BI){var u,l=0;this.partners={};u=e.KS(),u.YS,u.zS,l=u.size;for(var p=0;p<l;++p){p>0&&e.US.length>e.Cw[e.Cw.length-1]+1&&e.US.pop();var f=null,d=null;f=e.fw().value,d=new hive.snapshots.Partner,d.read(e),this.partners[f]=d}e.JS()}else e.dw(r);break;case 11:r==i.bI.MI?(this.player=new hive.snapshots.Player,this.player.read(e)):e.dw(r);break;case 12:r==i.bI.MI?(this.client=new hive.snapshots.ClientInfo,this.client.read(e)):e.dw(r);break;case 13:r==i.bI.FI?this.sessionId=e.fw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},hive.snapshots.JsonMetricSnapshot.prototype.write=function(e){if(e.mw("JsonMetricSnapshot"),null!==this.timestamp&&void 0!==this.timestamp&&(e.Ew("timestamp",i.bI.DI,1),e.FS(this.timestamp),e.Iw()),null!==this.guid&&void 0!==this.guid&&(e.Ew("guid",i.bI.FI,2),e.Tw(this.guid),e.Iw()),null!==this.eventId&&void 0!==this.eventId&&(e.Ew("eventId",i.bI.MI,3),this.eventId.write(e),e.Iw()),null!==this.streamInfo&&void 0!==this.streamInfo&&(e.Ew("streamInfo",i.bI.MI,4),this.streamInfo.write(e),e.Iw()),null!==this.metrics&&void 0!==this.metrics&&(e.Ew("metrics",i.bI.MI,5),this.metrics.write(e),e.Iw()),null!==this.traffic&&void 0!==this.traffic){e.Ew("traffic",i.bI.BI,6),e.RS(i.bI.FI,i.bI.MI,i.YI(this.traffic));for(var t in this.traffic)if(this.traffic.hasOwnProperty(t)){var r=this.traffic[t];e.Tw(t),r.write(e)}e.bS(),e.Iw()}if(null!==this.snapshotInfo&&void 0!==this.snapshotInfo&&(e.Ew("snapshotInfo",i.bI.MI,7),this.snapshotInfo.write(e),e.Iw()),null!==this.agentInfo&&void 0!==this.agentInfo&&(e.Ew("agentInfo",i.bI.MI,8),this.agentInfo.write(e),e.Iw()),null!==this.connInfo&&void 0!==this.connInfo&&(e.Ew("connInfo",i.bI.MI,9),this.connInfo.write(e),e.Iw()),null!==this.partners&&void 0!==this.partners){e.Ew("partners",i.bI.BI,10),e.RS(i.bI.FI,i.bI.MI,i.YI(this.partners));for(var n in this.partners)if(this.partners.hasOwnProperty(n)){var s=this.partners[n];e.Tw(n),s.write(e)}e.bS(),e.Iw()}null!==this.player&&void 0!==this.player&&(e.Ew("player",i.bI.MI,11),this.player.write(e),e.Iw()),null!==this.client&&void 0!==this.client&&(e.Ew("client",i.bI.MI,12),this.client.write(e),e.Iw()),null!==this.sessionId&&void 0!==this.sessionId&&(e.Ew("sessionId",i.bI.FI,13),e.Tw(this.sessionId),e.Iw()),e.Sw(),e.Rw()}},function(e,t,r){var i=r(30);StreamType={1:"LIVE",LIVE:1,2:"VOD",xG:2},StreamProtocol={1:"DASH",yB:1,2:"HDS",HG:2,3:"HLS",OU:3,4:"SS",qG:4},ClientType={1:"JAVA",VG:1,2:"STATS_ONLY",pL:2,3:"JS_DIRECT",uL:3,4:"JS_PROXY",lL:4},EventId=function(e){this.partnerId=null,this.customerId=null,this.contentId=null,this.tags=null,e&&(void 0!==e.partnerId&&(this.partnerId=e.partnerId),void 0!==e.customerId&&(this.customerId=e.customerId),void 0!==e.contentId&&(this.contentId=e.contentId),void 0!==e.tags&&(this.tags=e.tags))},EventId.prototype={},EventId.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.FI?this.partnerId=e.fw().value:e.dw(r);break;case 2:r==i.bI.FI?this.customerId=e.fw().value:e.dw(r);break;case 3:r==i.bI.FI?this.contentId=e.fw().value:e.dw(r);break;case 4:if(r==i.bI.xI){var s,o=0;this.tags=[];s=e.WS(),s.XS,o=s.size;for(var a=0;a<o;++a){var h=null;h=e.fw().value,this.tags.push(h)}e.ZS()}else e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},EventId.prototype.write=function(e){if(e.mw("EventId"),null!==this.partnerId&&void 0!==this.partnerId&&(e.Ew("partnerId",i.bI.FI,1),e.Tw(this.partnerId),e.Iw()),null!==this.customerId&&void 0!==this.customerId&&(e.Ew("customerId",i.bI.FI,2),e.Tw(this.customerId),e.Iw()),null!==this.contentId&&void 0!==this.contentId&&(e.Ew("contentId",i.bI.FI,3),e.Tw(this.contentId),e.Iw()),null!==this.tags&&void 0!==this.tags){e.Ew("tags",i.bI.xI,4),e.PS(i.bI.FI,this.tags.length);for(var t in this.tags)this.tags.hasOwnProperty(t)&&(t=this.tags[t],e.Tw(t));e.CS(),e.Iw()}e.Sw(),e.Rw()},SnapshotInfo=function(e){this.timestamp=null,this.apiServer=null,this.clientIp=null,e&&(void 0!==e.timestamp&&(this.timestamp=e.timestamp),void 0!==e.apiServer&&(this.apiServer=e.apiServer),void 0!==e.clientIp&&(this.clientIp=e.clientIp))},SnapshotInfo.prototype={},SnapshotInfo.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.DI?this.timestamp=e.nR().value:e.dw(r);break;case 2:r==i.bI.FI?this.apiServer=e.fw().value:e.dw(r);break;case 3:r==i.bI.FI?this.clientIp=e.fw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},SnapshotInfo.prototype.write=function(e){e.mw("SnapshotInfo"),null!==this.timestamp&&void 0!==this.timestamp&&(e.Ew("timestamp",i.bI.DI,1),e.FS(this.timestamp),e.Iw()),null!==this.apiServer&&void 0!==this.apiServer&&(e.Ew("apiServer",i.bI.FI,2),e.Tw(this.apiServer),e.Iw()),null!==this.clientIp&&void 0!==this.clientIp&&(e.Ew("clientIp",i.bI.FI,3),e.Tw(this.clientIp),e.Iw()),e.Sw(),e.Rw()},InetAddress=function(e){this.address=null,this.port=null,e&&(void 0!==e.address&&(this.address=e.address),void 0!==e.port&&(this.port=e.port))},InetAddress.prototype={},InetAddress.prototype.read=function(e){for(e.QS();;){var t=e.uw(),r=(t.qS,t.lw),n=t.pw;if(r==i.bI.AI)break;switch(n){case 1:r==i.bI.FI?this.address=e.oR().value:e.dw(r);break;case 2:r==i.bI.NI?this.port=e.gw().value:e.dw(r);break;default:e.dw(r)}e.vw()}e.yw()},InetAddress.prototype.write=function(e){e.mw("InetAddress"),null!==this.address&&void 0!==this.address&&(e.Ew("address",i.bI.FI,1),e.MS(this.address),e.Iw()),null!==this.port&&void 0!==this.port&&(e.Ew("port",i.bI.NI,2),e.ww(this.port),e.Iw()),e.Sw(),e.Rw()}},function(e,t,r){"use strict";var i=r(2),n=r(21),s=function(){function e(e,t){this.msg=e,this.jG=Date.now()+t,this.GG=i.defer()}return e.prototype.QG=function(){return Date.now()>=this.jG},e}(),o=function(){function e(e,t,r,i,n,s,o){void 0===t&&(t=3e4),void 0===r&&(r=100),void 0===i&&(i=3e4),void 0===n&&(n=15e3),void 0===s&&(s=Date),void 0===o&&(o=!1),this.KG=1,this.YG=-1,this.zG=-1,this.qq={},this.JG=[],this.WG=[],this.XG=!1,this.ZG=!0,this.$G=e,this.eQ=Array(),this.lp=t,this.pp=r,this.fp=i,this.tQ=n,this.rQ=s,this.XG=o||/MSIE 10/i.test(navigator.userAgent)||/MSIE 9/i.test(navigator.userAgent)||/rv:11.0/i.test(navigator.userAgent)||/Edge./i.test(navigator.userAgent)}return e.prototype.Ae=function(e){var t=e.service+"_"+e.msgId,r=this.qq[t];null!=r?r(e):n.te().error(n.mn+"Could not find a dispatcher for ",e,t,this.qq)},e.prototype.on=function(e,t,r){this.qq[e+"_"+t]=r},e.prototype.onerror=function(e){this.JG.push(e)},e.prototype.CL=function(e){this.WG.push(e)},e.prototype.iQ=function(){var e=this;if(!window.WebSocket)return void this.JG.forEach(function(e){return e("WebSocket not defined")});var t=new WebSocket(this.$G);return t.binaryType="arraybuffer",t.onopen=function(t){e.nQ(),n.te().debug(n.mn+"HiveServicesConnection established to "+e.$G),e.zG=(new e.rQ).getTime(),e.sQ(),e.WG.forEach(function(t){return t(e)}),e.oQ(),e.aQ()},t.onclose=function(t){e.close(e.ZG),e.connect()},t.onmessage=function(t){e.Ae(n.pc.fu(t.data))},t.onerror=function(t){e.close(!0),e.JG.forEach(function(e){return e(t.toString())})},t},e.prototype.isOpen=function(){return null!=this.ME&&this.ME.readyState==this.ME.OPEN},e.prototype.connect=function(e){var t=this;e&&(this.ZG=!0),this.ZG&&1!=this.isOpen()&&(this.YG>0||(this.zG>-1&&(new this.rQ).getTime()-this.zG>this.lp?(this.KG=n.N.lu,this.zG=-1):this.KG=Math.min(2*this.KG,this.lp),this.YG=window.setTimeout(function(){t.YG=-1,n.te().debug(n.mn+"Connection attempt to "+t.$G+" [t:"+t.KG+" hb:"+t.XG+"]"),t.ME=t.iQ(),t.KG=Math.max(t.KG,n.N.lu)},this.KG)))},e.prototype.nQ=function(){this.YG>-1&&(clearTimeout(this.YG),this.YG=-1)},e.prototype.close=function(e){this.ZG=void 0!=e&&e,n.te().debug(n.mn+"Closing connection [reconnect:"+this.ZG+"]"),this.nQ(),null!=this.ME&&(this.ME.close(),this.ME=null)},e.prototype.sQ=function(){for(;this.eQ.length>0;){var e=this.eQ.pop();try{e.QG()?e.GG.reject(new Error("Message expired")):(this.oQ(),this.ME.send(e.msg.pu()))}catch(t){if(t.code===DOMException.INVALID_STATE_ERR){this.eQ.push(e);break}n.te().error(n.mn+"Failed to send the message, dropped: ",t.code,t.name),e.GG.reject(t)}}this.aQ()},e.prototype.oQ=function(){this.hQ&&(clearTimeout(this.hQ),this.hQ=null)},e.prototype.aQ=function(){var e=this;this.XG&&!this.hQ&&(this.hQ=window.setInterval(function(){e.send(new n.pc(Services.cQ,0,""))},this.tQ))},e.prototype.send=function(e,t){if(void 0===t&&(t=this.fp),this.eQ.length>=this.pp)throw new Error("HiveServices connection cannot queue more messages");var r=new s(e,t);return this.eQ.push(r),this.ME&&this.sQ(),r.GG.Te},e.prototype.uQ=function(e){this.XG=e,this.XG&&this.aQ()},e.prototype.lQ=function(){return null!=this.ME},e}();t.AL=o},function(e,t){Services={1:"REMOTE_EXECUTOR",pQ:1,2:"PEER_FORWARDER",fQ:2,3:"PEER_INDEX",dQ:3,4:"PEER_BROADCAST",gQ:4,5:"PEER_FILTER",vQ:5,6:"PEER_LOGGING",yQ:6,7:"HIVEJS_TRACKER",mQ:7,8:"PEER_SYSTEM",EQ:8,9:"HIVEJS_SNAPSHOTS",fc:9,10:"HIVEJS_TICKETS",PL:10,11:"HIVEJS_KEEPALIVE",cQ:11,12:"HIVEJS_FORWARDING",TQ:12}},function(e,t){e.t=function(){return new Function}},function(e,t,r){"use strict";var i=function(){function e(e,t){this.Uc=e,this.xc=t}return e.prototype.Kc=function(){return this.Uc},e.prototype.Yc=function(){return this.xc?this.xc:this.Uc},e}();t.tM=i},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(78),s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.Yh=function(){return this.PM?this.PM:null},t}(n.AM);t.dM=s},function(e,t,r){"use strict";var i=r(70),n=r(2),s=r(0),o=r(24),a=function(){function e(){this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,this.te=s.Framework.resolve(s.Framework.q.I).log()}return e.prototype.$L=function(){var e=n.defer(),t=this.indexedDB.open("PrivateIPDB");return t.onupgradeneeded=function(){t.result.createObjectStore("PrivateIPStore",{keyPath:"id"})},t.onsuccess=function(){var r=t.result;e.resolve(r)},t.onerror=function(t){e.reject(t)},e.Te},e.prototype.jM=function(){var e=this;if(this.IQ)return this.IQ;var t=setTimeout(function(){e.te.warn("Private list retrieval timeout"),r.reject("Private list timeout")},4e3),r=n.defer();if(o.nc.Mi&&this.indexedDB){this.$L().then(function(n){var s=n.transaction("PrivateIPStore","readwrite"),o=s.objectStore("PrivateIPStore"),a=o.get("iplist");a.onsuccess=function(){clearTimeout(t);var e=[];i.iF(a.result)||i.iF(a.result.value)||(e=a.result.value.split("|")),r.resolve(e),n.close()},a.onerror=function(i){clearTimeout(t),e.te.warn("I got an error on indexed db "+i.message),r.reject("Error on indexedDB "+i.message)}}).fail(function(i){clearTimeout(t),e.te.warn("DB is not open with error"+i.message),r.reject("DB is not open with error "+i.message)})}else clearTimeout(t),r.reject({message:"DB is not ready or enabled"});return this.IQ=r.Te,this.IQ},e.prototype.YM=function(e){var t=this;if(o.nc.Mi&&this.indexedDB){var r=e.join("|");this.$L().then(function(i){var n=i.transaction("PrivateIPStore","readwrite");n.objectStore("PrivateIPStore").put({id:"iplist",value:r}),n.oncomplete=function(){t.te.debug("Storing site matched ips ["+e.join(",")+"]"),i.close()}}).fail(function(e){t.te.warn("DB is not open with error "+e.message)})}},e}();t.MM=a},function(e,t,r){"use strict";var i=r(17).log,n=r(17).Da,s={i_:function(){window.MediaStream=window.MediaStream||window.webkitMediaStream},s_:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this.wQ},set:function(e){var t=this;this.wQ&&(this.removeEventListener("track",this.wQ),this.removeEventListener("addstream",this.SQ)),this.addEventListener("track",this.wQ=e),this.addEventListener("addstream",this.SQ=function(e){e.stream.addEventListener("addtrack",function(r){var i=new Event("track");i.track=r.track,i.receiver={track:r.track},i.ho=[e.stream],t.dispatchEvent(i)}),e.stream.getTracks().forEach(function(t){var r=new Event("track");r.track=t,r.receiver={track:t},r.ho=[e.stream],this.dispatchEvent(r)}.bind(this))}.bind(this))}})},o_:function(){if("object"==typeof window&&window.RTCPeerConnection&&!("getSenders"in RTCPeerConnection.prototype)&&"createDTMFSender"in RTCPeerConnection.prototype){RTCPeerConnection.prototype.getSenders=function(){return this.RQ};var e=RTCPeerConnection.prototype.addStream,t=RTCPeerConnection.prototype.removeStream;RTCPeerConnection.prototype.addStream=function(t){var r=this;r.RQ=r.RQ||[],e.apply(r,[t]),t.getTracks().forEach(function(e){r.RQ.push({track:e,get bQ(){return void 0===this.PQ&&("audio"===e.kind?this.PQ=r.createDTMFSender(e):this.PQ=null),this.PQ}})})},RTCPeerConnection.prototype.removeStream=function(e){var r=this;r.RQ=r.RQ||[],t.apply(r,[e]),e.getTracks().forEach(function(e){var t=r.RQ.find(function(t){return t.track===e});t&&r.RQ.splice(r.RQ.indexOf(t),1)})}}},n_:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this.AQ},set:function(e){var t=this;if(this.AQ=e,this.src&&URL.revokeObjectURL(this.src),!e)return void(this.src="");this.src=URL.createObjectURL(e),e.addEventListener("addtrack",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)}),e.addEventListener("removetrack",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)})}}))},e_:function(){window.RTCPeerConnection||(window.RTCPeerConnection=function(e,t){return i("PeerConnection"),e&&e.CQ&&(e.kQ=e.CQ),new webkitRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=webkitRTCPeerConnection.prototype,webkitRTCPeerConnection.OQ&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return webkitRTCPeerConnection.OQ}}));var e=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(t,r,i){var n=this,s=arguments;if(arguments.length>0&&"function"==typeof t)return e.apply(this,arguments);if(0===e.length&&(0===arguments.length||"function"!=typeof arguments[0]))return e.apply(this,[]);var o=function(e){var t={};return e.result().forEach(function(e){var r={id:e.id,timestamp:e.timestamp,type:{_Q:"local-candidate",NQ:"remote-candidate"}[e.type]||e.type};e.names().forEach(function(t){r[t]=e.DQ(t)}),t[r.id]=r}),t},a=function(e){return new Map(Object.keys(e).map(function(t){return[t,e[t]]}))};if(arguments.length>=2){var h=function(e){s[1](a(o(e)))};return e.apply(this,[h,arguments[0]])}return new Promise(function(t,r){e.apply(n,[function(e){t(a(o(e)))},r])}).then(r,i)},n.version<51&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){var e=arguments,r=this,i=new Promise(function(i,n){t.apply(r,[e[0],i,n])});return e.length<2?i:i.then(function(){e[1].apply(null,[])},function(t){e.length>=3&&e[2].apply(null,[t])})}}),n.version<52&&["createOffer","createAnswer"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){var e=this;if(arguments.length<1||1===arguments.length&&"object"==typeof arguments[0]){var r=1===arguments.length?arguments[0]:void 0;return new Promise(function(i,n){t.apply(e,[i,n,r])})}return t.apply(this,arguments)}}),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){return arguments[0]=new("addIceCandidate"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}});var t=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?t.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}};e.t={i_:s.i_,s_:s.s_,o_:s.o_,n_:s.n_,e_:s.e_,r_:r(121)}},function(e,t,r){"use strict";var i=r(17).log,n=r(17).Da;e.t=function(){var e=function(e){if("object"!=typeof e||e.FQ||e.optional)return e;var t={};return Object.keys(e).forEach(function(r){if("require"!==r&&"advanced"!==r&&"mediaSource"!==r){var i="object"==typeof e[r]?e[r]:{LQ:e[r]};void 0!==i.MQ&&"number"==typeof i.MQ&&(i.min=i.max=i.MQ);var n=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):"deviceId"===t?"sourceId":t};if(void 0!==i.LQ){t.optional=t.optional||[];var s={};"number"==typeof i.LQ?(s[n("min",r)]=i.LQ,t.optional.push(s),s={},s[n("max",r)]=i.LQ,t.optional.push(s)):(s[n("",r)]=i.LQ,t.optional.push(s))}void 0!==i.MQ&&"number"!=typeof i.MQ?(t.FQ=t.FQ||{},t.FQ[n("",r)]=i.MQ):["min","max"].forEach(function(e){void 0!==i[e]&&(t.FQ=t.FQ||{},t.FQ[n(e,r)]=i[e])})}}),e.BQ&&(t.optional=(t.optional||[]).concat(e.BQ)),t},t=function(t,r){if(t=JSON.parse(JSON.stringify(t)),t&&t.YE&&(t.YE=e(t.YE)),t&&"object"==typeof t.video){var s=t.video.UQ;s=s&&("object"==typeof s?s:{LQ:s});var o=n.version<59;if(s&&("user"===s.MQ||"environment"===s.MQ||"user"===s.LQ||"environment"===s.LQ)&&(!navigator.mediaDevices.xQ||!navigator.mediaDevices.xQ().UQ||o)&&(delete t.video.UQ,"environment"===s.MQ||"environment"===s.LQ))return navigator.mediaDevices.HQ().then(function(n){n=n.filter(function(e){return"videoinput"===e.kind});var o=n.find(function(e){return-1!==e.label.toLowerCase().indexOf("back")})||n.length&&n[n.length-1];return o&&(t.video.qQ=s.MQ?{MQ:o.qQ}:{LQ:o.qQ}),t.video=e(t.video),i("chrome: "+JSON.stringify(t)),r(t)});t.video=e(t.video)}return i("chrome: "+JSON.stringify(t)),r(t)},r=function(e){return{name:{VQ:"NotAllowedError",jQ:"OverconstrainedError"}[e.name]||e.name,message:e.message,GQ:e.QQ,toString:function(){return this.name+(this.message&&": ")+this.message}}},s=function(e,i,n){t(e,function(e){navigator.webkitGetUserMedia(e,i,function(e){n(r(e))})})};navigator.getUserMedia=s;var o=function(e){return new Promise(function(t,r){navigator.getUserMedia(e,t,r)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:o,HQ:function(){return new Promise(function(e){var t={YE:"audioinput",video:"videoinput"};return MediaStreamTrack.getSources(function(r){e(r.map(function(e){return{label:e.label,kind:t[e.kind],qQ:e.id,KQ:""}}))})})},xQ:function(){return{qQ:!0,YQ:!0,UQ:!0,zQ:!0,height:!0,width:!0}}}),navigator.mediaDevices.getUserMedia){var a=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(e){return t(e,function(e){return a(e).then(function(t){if(e.YE&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException("","NotFoundError");return t},function(e){return Promise.reject(r(e))})})}}else navigator.mediaDevices.getUserMedia=function(e){return o(e)};void 0===navigator.mediaDevices.addEventListener&&(navigator.mediaDevices.addEventListener=function(){i("Dummy mediaDevices.addEventListener called.")}),void 0===navigator.mediaDevices.removeEventListener&&(navigator.mediaDevices.removeEventListener=function(){i("Dummy mediaDevices.removeEventListener called.")})}},function(e,t,r){"use strict";function i(e){var t=e.filter(function(e){return"audio"===e.kind}),r=e.filter(function(e){return"video"===e.kind});for(e=[];t.length||r.length;)t.length&&e.push(t.shift()),r.length&&e.push(r.shift());return e}function n(e){var t=!1;return e=JSON.parse(JSON.stringify(e)),e.filter(function(e){if(e&&(e.JQ||e.url)){var r=e.JQ||e.url,i="string"==typeof r;return i&&(r=[r]),r=r.filter(function(e){return 0!==e.indexOf("turn:")||-1===e.indexOf("transport=udp")||-1!==e.indexOf("turn:[")||t?0===e.indexOf("stun:")&&o.version>=14393:(t=!0,!0)}),delete e.url,e.JQ=i?r[0]:r,!!r.length}return!1})}var s=r(123),o=r(17).Da,a={e_:function(){if(window.WQ&&(window.RTCIceCandidate||(window.RTCIceCandidate=function(e){return e}),window.RTCSessionDescription||(window.RTCSessionDescription=function(e){return e}),o.version<15025)){var e=Object.getOwnPropertyDescriptor(MediaStreamTrack.prototype,"enabled");Object.defineProperty(MediaStreamTrack.prototype,"enabled",{set:function(t){e.set.call(this,t);var r=new Event("enabled");r.enabled=t,this.dispatchEvent(r)}})}window.RTCPeerConnection=function(e){var t=this,r=document.createDocumentFragment();if(["addEventListener","removeEventListener","dispatchEvent"].forEach(function(e){t[e]=r[e].bind(r)}),this.onicecandidate=null,this.onaddstream=null,this.XQ=null,this.onremovestream=null,this.onsignalingstatechange=null,this.oniceconnectionstatechange=null,this.ZQ=null,this.onnegotiationneeded=null,this.ondatachannel=null,this.$Q=[],this.eK=[],this.getLocalStreams=function(){return t.$Q},this.getRemoteStreams=function(){return t.eK},this.localDescription=new RTCSessionDescription({type:"",sdp:""}),this.remoteDescription=new RTCSessionDescription({type:"",sdp:""}),this.signalingState="stable",this.iceConnectionState="new",this.iceGatheringState="new",this.tK={rK:"all",iceServers:[]},e&&e.CQ)switch(e.CQ){case"all":case"relay":this.tK.rK=e.CQ}this.iK=e&&"max-bundle"===e.nK,e&&e.iceServers&&(this.tK.iceServers=n(e.iceServers)),this.sK=e,this.oK=[],this.aK=[]},window.RTCPeerConnection.prototype.hK=function(){var e=new Event("icegatheringstatechange");this.dispatchEvent(e),null!==this.ZQ&&this.ZQ(e)},window.RTCPeerConnection.prototype.cK=function(){var e=this,t=s.uK(e.localDescription.sdp);this.aK.forEach(function(r){if(r.candidate&&0!==Object.keys(r.candidate).length)t[r.candidate.sdpMLineIndex+1]+="a="+r.candidate.candidate+"\r\n";else for(var i=1;i<t.length;i++)-1===t[i].indexOf("\r\na=end-of-candidates\r\n")&&(t[i]+="a=end-of-candidates\r\n");if(e.localDescription.sdp=t.join(""),e.dispatchEvent(r),null!==e.onicecandidate&&e.onicecandidate(r),!r.candidate&&"complete"!==e.iceGatheringState){e.oK.every(function(e){return e.lK&&"completed"===e.lK.state})&&"complete"!==e.pK&&(e.iceGatheringState="complete",e.hK())}}),this.aK=[]},window.RTCPeerConnection.prototype.getConfiguration=function(){return this.sK},window.RTCPeerConnection.prototype.addStream=function(e){if(o.version>=15025)this.$Q.push(e);else{var t=e.clone();e.getTracks().forEach(function(e,r){var i=t.getTracks()[r];e.addEventListener("enabled",function(e){i.enabled=e.enabled})}),this.$Q.push(t)}this.fK()},window.RTCPeerConnection.prototype.removeStream=function(e){var t=this.$Q.indexOf(e);t>-1&&(this.$Q.splice(t,1),this.fK())},window.RTCPeerConnection.prototype.getSenders=function(){return this.oK.filter(function(e){return!!e.dK}).map(function(e){return e.dK})},window.RTCPeerConnection.prototype.getReceivers=function(){return this.oK.filter(function(e){return!!e.gK}).map(function(e){return e.gK})},window.RTCPeerConnection.prototype.vK=function(e,t){var r={yK:[],mK:[],EK:[]},i=function(e,t){e=parseInt(e,10);for(var r=0;r<t.length;r++)if(t[r].TK===e||t[r].IK===e)return t[r]},n=function(e,t,r,n){var s=i(e.parameters.wK,r),o=i(t.parameters.wK,n);return s&&o&&s.name.toLowerCase()===o.name.toLowerCase()};return e.yK.forEach(function(i){for(var s=0;s<t.yK.length;s++){var o=t.yK[s];if(i.name.toLowerCase()===o.name.toLowerCase()&&i.SK===o.SK){if("rtx"===i.name.toLowerCase()&&i.parameters&&o.parameters.wK&&!n(i,o,e.yK,t.yK))continue;o=JSON.parse(JSON.stringify(o)),o.RK=Math.min(i.RK,o.RK),r.yK.push(o),o.bK=o.bK.filter(function(e){for(var t=0;t<i.bK.length;t++)if(i.bK[t].type===e.type&&i.bK[t].PK===e.PK)return!0;return!1});break}}}),e.mK.forEach(function(e){for(var i=0;i<t.mK.length;i++){var n=t.mK[i];if(e.uri===n.uri){r.mK.push(n);break}}}),r},window.RTCPeerConnection.prototype.AK=function(e,t){var r=this,i=new RTCIceGatherer(r.tK),n=new RTCIceTransport(i);i.CK=function(o){var a=new Event("icecandidate");a.candidate={sdpMid:e,sdpMLineIndex:t};var h=o.candidate,c=!h||0===Object.keys(h).length;c?void 0===i.state&&(i.state="completed"):(h.kK="RTCP"===n.kK?2:1,a.candidate.candidate=s.OK(h));var u=s.uK(r.localDescription.sdp);u[a.candidate.sdpMLineIndex+1]+=c?"a=end-of-candidates\r\n":"a="+a.candidate.candidate+"\r\n",r.localDescription.sdp=u.join("");var l=r._K?r._K:r.oK,p=l.every(function(e){return e.lK&&"completed"===e.lK.state});switch(r.iceGatheringState){case"new":c||r.aK.push(a),c&&p&&r.aK.push(new Event("icecandidate"));break;case"gathering":r.cK(),c||(r.dispatchEvent(a),null!==r.onicecandidate&&r.onicecandidate(a)),p&&(r.dispatchEvent(new Event("icecandidate")),null!==r.onicecandidate&&r.onicecandidate(new Event("icecandidate")),r.iceGatheringState="complete",r.hK())}},n.NK=function(){r.DK()};var o=new RTCDtlsTransport(n);return o.FK=function(){r.DK()},o.onerror=function(){o.state="failed",r.DK()},{lK:i,LK:n,MK:o}},window.RTCPeerConnection.prototype.BK=function(e,t,r){var i=this.vK(e.UK,e.xK);t&&e.dK&&(i.HK=e.qK,i.VK={jK:s.GK},e.QK.length&&(i.VK.KK=e.QK[0].KK),e.dK.send(i)),r&&e.gK&&("video"===e.kind&&e.QK&&o.version<15019&&e.QK.forEach(function(e){delete e.YK}),i.HK=e.QK,i.VK={jK:e.jK},e.qK.length&&(i.VK.KK=e.qK[0].KK),e.gK.zK(i))},window.RTCPeerConnection.prototype.setLocalDescription=function(e){var t,r,i=this;if("offer"===e.type)this._K&&(t=s.uK(e.sdp),r=t.shift(),t.forEach(function(e,t){var r=s.JK(e);i._K[t].UK=r}),this.oK=this._K,delete this._K);else if("answer"===e.type){t=s.uK(i.remoteDescription.sdp),r=t.shift();var n=s.WK(r,"a=ice-lite").length>0;t.forEach(function(e,t){var o=i.oK[t],a=o.lK,h=o.LK,c=o.MK,u=o.UK,l=o.xK;if("0"!==e.split("\n",1)[0].split(" ",2)[1]&&!o.XK){var p=s.ZK(e,r),f=s.$K(e,r);n&&(f.eY="server"),i.iK&&0!==t||(h.start(a,p,n?"controlling":"controlled"),c.start(f));var d=i.vK(u,l);i.BK(o,d.yK.length>0,!1)}})}switch(this.localDescription={type:e.type,sdp:e.sdp},e.type){case"offer":this.tY("have-local-offer");break;case"answer":this.tY("stable");break;default:throw new TypeError('unsupported type "'+e.type+'"')}var o=arguments.length>1&&"function"==typeof arguments[1];if(o){var a=arguments[1];window.setTimeout(function(){a(),"new"===i.iceGatheringState&&(i.iceGatheringState="gathering",i.hK()),i.cK()},0)}var h=Promise.resolve();return h.then(function(){o||("new"===i.iceGatheringState&&(i.iceGatheringState="gathering",i.hK()),window.setTimeout(i.cK.bind(i),500))}),h},window.RTCPeerConnection.prototype.setRemoteDescription=function(e){var t=this,r=new MediaStream,i=[],n=s.uK(e.sdp),a=n.shift(),h=s.WK(a,"a=ice-lite").length>0;switch(this.iK=s.WK(a,"a=group:BUNDLE ").length>0,n.forEach(function(n,c){var u=s.rY(n),l=u[0].substr(2).split(" "),p=l[0],f="0"===l[1],d=s.iY(n,a),g=s.WK(n,"a=mid:");if(g=g.length?g[0].substr(6):s.nY(),"application"===p&&"DTLS/SCTP"===l[2])return void(t.oK[c]={sY:g,XK:!0});var v,y,m,E,T,I,w,S,R,b,P,A,C=s.JK(n);f||(P=s.ZK(n,a),A=s.$K(n,a),A.eY="client"),S=s.oY(n);var k,O=s.WK(n,"a=ssrc:").map(function(e){return s.aY(e)}).filter(function(e){return"cname"===e.hY})[0];O&&(k=O.value);var _=s.WK(n,"a=end-of-candidates",a).length>0,N=s.WK(n,"a=candidate:").map(function(e){return s.QM(e)}).filter(function(e){return"1"===e.kK});if("offer"!==e.type||f)"answer"!==e.type||f||(v=t.oK[c],y=v.lK,m=v.LK,E=v.MK,T=v.dK,I=v.gK,w=v.qK,R=v.UK,t.oK[c].QK=S,t.oK[c].xK=C,t.oK[c].jK=k,(h||_)&&N.length&&m.cY(N),t.iK&&0!==c||(m.start(y,P,"controlling"),E.start(A)),t.BK(v,"sendrecv"===d||"recvonly"===d,"sendrecv"===d||"sendonly"===d),!I||"sendrecv"!==d&&"sendonly"!==d?delete v.gK:(b=I.track,i.push([b,I]),r.addTrack(b)));else{var D=t.iK&&c>0?{lK:t.oK[0].lK,LK:t.oK[0].LK,MK:t.oK[0].MK}:t.AK(g,c);if(!_||t.iK&&0!==c||D.LK.cY(N),R=RTCRtpReceiver.uY(p),o.version<15019&&(R.yK=R.yK.filter(function(e){return"rtx"!==e.name})),w=[{KK:1001*(2*c+2)}],"sendrecv"!==d&&"sendonly"!==d||(I=new RTCRtpReceiver(D.MK,p),b=I.track,i.push([b,I]),r.addTrack(b)),t.$Q.length>0&&t.$Q[0].getTracks().length>=c){var F;"audio"===p?F=t.$Q[0].getAudioTracks()[0]:"video"===p&&(F=t.$Q[0].getVideoTracks()[0]),F&&(o.version>=15019&&"video"===p&&(w[0].YK={KK:1001*(2*c+2)+1}),T=new RTCRtpSender(F,D.MK))}t.oK[c]={lK:D.lK,LK:D.LK,MK:D.MK,UK:R,xK:C,dK:T,gK:I,kind:p,sY:g,jK:k,qK:w,QK:S},t.BK(t.oK[c],!1,"sendrecv"===d||"sendonly"===d)}}),this.remoteDescription={type:e.type,sdp:e.sdp},e.type){case"offer":this.tY("have-remote-offer");break;case"answer":this.tY("stable");break;default:throw new TypeError('unsupported type "'+e.type+'"')}return r.getTracks().length&&(t.eK.push(r),window.setTimeout(function(){var e=new Event("addstream");e.stream=r,t.dispatchEvent(e),null!==t.onaddstream&&window.setTimeout(function(){t.onaddstream(e)},0),i.forEach(function(e){var i=e[0],n=e[1],s=new Event("track");s.track=i,s.receiver=n,s.ho=[r],t.dispatchEvent(s),null!==t.XQ&&window.setTimeout(function(){t.XQ(s)},0)})},0)),arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.close=function(){this.oK.forEach(function(e){e.LK&&e.LK.stop(),e.MK&&e.MK.stop(),e.dK&&e.dK.stop(),e.gK&&e.gK.stop()}),this.tY("closed")},window.RTCPeerConnection.prototype.tY=function(e){this.signalingState=e;var t=new Event("signalingstatechange");this.dispatchEvent(t),null!==this.onsignalingstatechange&&this.onsignalingstatechange(t)},window.RTCPeerConnection.prototype.fK=function(){var e=new Event("negotiationneeded");this.dispatchEvent(e),null!==this.onnegotiationneeded&&this.onnegotiationneeded(e)},window.RTCPeerConnection.prototype.DK=function(){var e,t=this,r={lY:0,closed:0,pY:0,fY:0,connected:0,dY:0,xn:0};if(this.oK.forEach(function(e){r[e.LK.state]++,r[e.MK.state]++}),r.connected+=r.dY,e="new",r.xn>0?e="failed":r.pY>0||r.fY>0?e="connecting":r.gY>0?e="disconnected":r.lY>0?e="new":(r.connected>0||r.dY>0)&&(e="connected"),e!==t.iceConnectionState){t.iceConnectionState=e;var i=new Event("iceconnectionstatechange");this.dispatchEvent(i),null!==this.oniceconnectionstatechange&&this.oniceconnectionstatechange(i)}},window.RTCPeerConnection.prototype.createOffer=function(){var e=this;if(this._K)throw new Error("createOffer called while there is a pending offer.");var t;1===arguments.length&&"function"!=typeof arguments[0]?t=arguments[0]:3===arguments.length&&(t=arguments[2]);var r=[],n=0,a=0;if(this.$Q.length&&(n=this.$Q[0].getAudioTracks().length,a=this.$Q[0].getVideoTracks().length),t){if(t.FQ||t.optional)throw new TypeError("Legacy mandatory/optional constraints not supported.");void 0!==t.vY&&(n=t.vY),void 0!==t.yY&&(a=t.yY)}for(this.$Q.length&&this.$Q[0].getTracks().forEach(function(e){r.push({kind:e.kind,track:e,mY:"audio"===e.kind?n>0:a>0}),"audio"===e.kind?n--:"video"===e.kind&&a--});n>0||a>0;)n>0&&(r.push({kind:"audio",mY:!0}),n--),a>0&&(r.push({kind:"video",mY:!0}),a--);r=i(r);var h=s.EY(),c=[];r.forEach(function(t,r){var i=t.track,n=t.kind,a=s.nY(),h=e.iK&&r>0?{lK:c[0].lK,LK:c[0].LK,MK:c[0].MK}:e.AK(a,r),u=RTCRtpSender.uY(n);o.version<15019&&(u.yK=u.yK.filter(function(e){return"rtx"!==e.name})),u.yK.forEach(function(e){"H264"===e.name&&void 0===e.parameters["TY"]&&(e.parameters["TY"]="1")});var l,p,f=[{KK:1001*(2*r+1)}];i&&(o.version>=15019&&"video"===n&&(f[0].YK={KK:1001*(2*r+1)+1}),l=new RTCRtpSender(i,h.MK)),t.mY&&(p=new RTCRtpReceiver(h.MK,n)),c[r]={lK:h.lK,LK:h.LK,MK:h.MK,UK:u,xK:null,dK:l,gK:p,kind:n,sY:a,qK:f,QK:null}}),this.iK&&(h+="a=group:BUNDLE "+c.map(function(e){return e.sY}).join(" ")+"\r\n"),r.forEach(function(t,r){var i=c[r];h+=s.IY(i,i.UK,"offer",e.$Q[0])}),this._K=c;var u=new RTCSessionDescription({type:"offer",sdp:h});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,u),Promise.resolve(u)},window.RTCPeerConnection.prototype.createAnswer=function(){var e=this,t=s.EY();this.iK&&(t+="a=group:BUNDLE "+this.oK.map(function(e){return e.sY}).join(" ")+"\r\n"),this.oK.forEach(function(r){if(r.XK)return void(t+="m=application 0 DTLS/SCTP 5000\r\nc=IN IP4 0.0.0.0\r\na=mid:"+r.sY+"\r\n");var i=e.vK(r.UK,r.xK);t+=s.IY(r,i,"answer",e.$Q[0])});var r=new RTCSessionDescription({type:"answer",sdp:t});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,r),Promise.resolve(r)},window.RTCPeerConnection.prototype.addIceCandidate=function(e){if(e){var t=e.sdpMLineIndex;if(e.sdpMid)for(var r=0;r<this.oK.length;r++)if(this.oK[r].sY===e.sdpMid){t=r;break}var i=this.oK[t];if(i){var n=Object.keys(e.candidate).length>0?s.QM(e.candidate):{};if("tcp"===n.protocol&&(0===n.port||9===n.port))return Promise.resolve();if("1"!==n.kK)return Promise.resolve();i.LK.wY(n);var o=s.uK(this.remoteDescription.sdp);o[t+1]+=(n.type?e.candidate.trim():"a=end-of-candidates")+"\r\n",this.remoteDescription.sdp=o.join("")}}else for(var a=0;a<this.oK.length;a++)if(this.oK[a].LK.wY({}),this.iK)return Promise.resolve();return arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},window.RTCPeerConnection.prototype.getStats=function(){var e=[];this.oK.forEach(function(t){["rtpSender","rtpReceiver","iceGatherer","iceTransport","dtlsTransport"].forEach(function(r){t[r]&&e.push(t[r].getStats())})});var t=arguments.length>1&&"function"==typeof arguments[1]&&arguments[1],r=function(e){return{SY:"inbound-rtp",RY:"outbound-rtp",bY:"candidate-pair",_Q:"local-candidate",NQ:"remote-candidate"}[e.type]||e.type};return new Promise(function(i){var n=new Map;Promise.all(e).then(function(e){e.forEach(function(e){Object.keys(e).forEach(function(t){e[t].type=r(e[t]),n.set(t,e[t])})}),t&&window.setTimeout(t,0,n),i(n)})})}}};e.t={e_:a.e_,r_:r(124)}},function(e,t,r){"use strict";var i={};i.nY=function(){return Math.random().toString(36).substr(2,10)},i.GK=i.nY(),i.rY=function(e){return e.trim().split("\n").map(function(e){return e.trim()})},i.uK=function(e){return e.split("\nm=").map(function(e,t){return(t>0?"m="+e:e).trim()+"\r\n"})},i.WK=function(e,t){return i.rY(e).filter(function(e){return 0===e.indexOf(t)})},i.QM=function(e){var t;t=0===e.indexOf("a=candidate:")?e.substring(12).split(" "):e.substring(10).split(" ");for(var r={PY:t[0],kK:t[1],protocol:t[2].toLowerCase(),AY:parseInt(t[3],10),CY:t[4],port:parseInt(t[5],10),type:t[7]},i=8;i<t.length;i+=2)switch(t[i]){case"raddr":r.kY=t[i+1];break;case"rport":r.OY=parseInt(t[i+1],10);break;case"tcptype":r._Y=t[i+1];break;default:r[t[i]]=t[i+1]}return r},i.OK=function(e){var t=[];t.push(e.PY),t.push(e.kK),t.push(e.protocol.toUpperCase()),t.push(e.AY),t.push(e.CY),t.push(e.port);var r=e.type;return t.push("typ"),t.push(r),"host"!==r&&e.kY&&e.OY&&(t.push("raddr"),t.push(e.kY),t.push("rport"),t.push(e.OY)),e._Y&&"tcp"===e.protocol.toLowerCase()&&(t.push("tcptype"),t.push(e._Y)),"candidate:"+t.join(" ")},i.NY=function(e){return e.substr(14).split(" ")},i.DY=function(e){var t=e.substr(9).split(" "),r={TK:parseInt(t.shift(),10)};return t=t[0].split("/"),r.name=t[0],r.SK=parseInt(t[1],10),r.RK=3===t.length?parseInt(t[2],10):1,r},i.FY=function(e){var t=e.TK;return void 0!==e.IK&&(t=e.IK),"a=rtpmap:"+t+" "+e.name+"/"+e.SK+(1!==e.RK?"/"+e.RK:"")+"\r\n"},i.LY=function(e){var t=e.substr(9).split(" ");return{id:parseInt(t[0],10),direction:t[0].indexOf("/")>0?t[0].split("/")[1]:"sendrecv",uri:t[1]}},i.MY=function(e){return"a=extmap:"+(e.id||e.BY)+(e.direction&&"sendrecv"!==e.direction?"/"+e.direction:"")+" "+e.uri+"\r\n"},i.UY=function(e){for(var t,r={},i=e.substr(e.indexOf(" ")+1).split(";"),n=0;n<i.length;n++)t=i[n].trim().split("="),r[t[0].trim()]=t[1];return r},i.xY=function(e){var t="",r=e.TK;if(void 0!==e.IK&&(r=e.IK),e.parameters&&Object.keys(e.parameters).length){var i=[];Object.keys(e.parameters).forEach(function(t){i.push(t+"="+e.parameters[t])}),t+="a=fmtp:"+r+" "+i.join(";")+"\r\n"}return t},i.HY=function(e){var t=e.substr(e.indexOf(" ")+1).split(" ");return{type:t.shift(),PK:t.join(" ")}},i.qY=function(e){var t="",r=e.TK;return void 0!==e.IK&&(r=e.IK),e.bK&&e.bK.length&&e.bK.forEach(function(e){t+="a=rtcp-fb:"+r+" "+e.type+(e.PK&&e.PK.length?" "+e.PK:"")+"\r\n"}),t},i.aY=function(e){var t=e.indexOf(" "),r={KK:parseInt(e.substr(7,t-7),10)},i=e.indexOf(":",t);return i>-1?(r.hY=e.substr(t+1,i-t-1),r.value=e.substr(i+1)):r.hY=e.substr(t+1),r},i.VY=function(e){var t=i.WK(e,"a=mid:")[0];if(t)return t.substr(6)},i.jY=function(e){var t=e.substr(14).split(" ");return{algorithm:t[0].toLowerCase(),value:t[1]}},i.$K=function(e,t){return{eY:"auto",GY:i.WK(e+t,"a=fingerprint:").map(i.jY)}},i.QY=function(e,t){var r="a=setup:"+t+"\r\n";return e.GY.forEach(function(e){r+="a=fingerprint:"+e.algorithm+" "+e.value+"\r\n"}),r},i.ZK=function(e,t){var r=i.rY(e);return r=r.concat(i.rY(t)),{KY:r.filter(function(e){return 0===e.indexOf("a=ice-ufrag:")})[0].substr(12),password:r.filter(function(e){return 0===e.indexOf("a=ice-pwd:")})[0].substr(10)}},i.YY=function(e){return"a=ice-ufrag:"+e.KY+"\r\na=ice-pwd:"+e.password+"\r\n"},i.JK=function(e){for(var t={yK:[],mK:[],EK:[],VK:[]},r=i.rY(e),n=r[0].split(" "),s=3;s<n.length;s++){var o=n[s],a=i.WK(e,"a=rtpmap:"+o+" ")[0];if(a){var h=i.DY(a),c=i.WK(e,"a=fmtp:"+o+" ");switch(h.parameters=c.length?i.UY(c[0]):{},h.bK=i.WK(e,"a=rtcp-fb:"+o+" ").map(i.HY),t.yK.push(h),h.name.toUpperCase()){case"RED":case"ULPFEC":t.EK.push(h.name.toUpperCase())}}}return i.WK(e,"a=extmap:").forEach(function(e){t.mK.push(i.LY(e))}),t},i.zY=function(e,t){var r="";r+="m="+e+" ",r+=t.yK.length>0?"9":"0",r+=" UDP/TLS/RTP/SAVPF ",r+=t.yK.map(function(e){return void 0!==e.IK?e.IK:e.TK}).join(" ")+"\r\n",r+="c=IN IP4 0.0.0.0\r\n",r+="a=rtcp:9 IN IP4 0.0.0.0\r\n",t.yK.forEach(function(e){r+=i.FY(e),r+=i.xY(e),r+=i.qY(e)});var n=0;return t.yK.forEach(function(e){e.JY>n&&(n=e.JY)}),n>0&&(r+="a=maxptime:"+n+"\r\n"),r+="a=rtcp-mux\r\n",t.mK.forEach(function(e){r+=i.MY(e)}),r},i.oY=function(e){var t,r=[],n=i.JK(e),s=-1!==n.EK.indexOf("RED"),o=-1!==n.EK.indexOf("ULPFEC"),a=i.WK(e,"a=ssrc:").map(function(e){return i.aY(e)}).filter(function(e){return"cname"===e.hY}),h=a.length>0&&a[0].KK,c=i.WK(e,"a=ssrc-group:FID").map(function(e){var t=e.split(" ");return t.shift(),t.map(function(e){return parseInt(e,10)})});c.length>0&&c[0].length>1&&c[0][0]===h&&(t=c[0][1]),n.yK.forEach(function(e){if("RTX"===e.name.toUpperCase()&&e.parameters.wK){var i={KK:h,WY:parseInt(e.parameters.wK,10),YK:{KK:t}};r.push(i),s&&(i=JSON.parse(JSON.stringify(i)),i.XY={KK:t,ZY:o?"red+ulpfec":"red"},r.push(i))}}),0===r.length&&h&&r.push({KK:h});var u=i.WK(e,"b=");return u.length&&(0===u[0].indexOf("b=TIAS:")?u=parseInt(u[0].substr(7),10):0===u[0].indexOf("b=AS:")&&(u=parseInt(u[0].substr(5),10)),r.forEach(function(e){e.$Y=u})),r},i.ez=function(e){var t={},r=i.WK(e,"a=ssrc:").map(function(e){return i.aY(e)}).filter(function(e){return"cname"===e.hY})[0];r&&(t.jK=r.value,t.KK=r.KK);var n=i.WK(e,"a=rtcp-rsize");t.tz=n.length>0,t.rz=0===n.length;var s=i.WK(e,"a=rtcp-mux");return t.iz=s.length>0,t},i.nz=function(e){var t,r=i.WK(e,"a=msid:");if(1===r.length)return t=r[0].substr(7).split(" "),{stream:t[0],track:t[1]};var n=i.WK(e,"a=ssrc:").map(function(e){return i.aY(e)}).filter(function(e){return"msid"===e.hY});return n.length>0?(t=n[0].value.split(" "),{stream:t[0],track:t[1]}):void 0},i.EY=function(){return"v=0\r\no=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},i.IY=function(e,t,r,n){var s=i.zY(e.kind,t);if(s+=i.YY(e.lK.sz()),s+=i.QY(e.MK.sz(),"offer"===r?"actpass":"active"),s+="a=mid:"+e.sY+"\r\n",e.direction?s+="a="+e.direction+"\r\n":e.dK&&e.gK?s+="a=sendrecv\r\n":e.dK?s+="a=sendonly\r\n":e.gK?s+="a=recvonly\r\n":s+="a=inactive\r\n",e.dK){var o="msid:"+n.id+" "+e.dK.track.id+"\r\n";s+="a="+o,s+="a=ssrc:"+e.qK[0].KK+" "+o,e.qK[0].YK&&(s+="a=ssrc:"+e.qK[0].YK.KK+" "+o,s+="a=ssrc-group:FID "+e.qK[0].KK+" "+e.qK[0].YK.KK+"\r\n")}return s+="a=ssrc:"+e.qK[0].KK+" cname:"+i.GK+"\r\n",e.dK&&e.qK[0].YK&&(s+="a=ssrc:"+e.qK[0].YK.KK+" cname:"+i.GK+"\r\n"),s},i.iY=function(e,t){for(var r=i.rY(e),n=0;n<r.length;n++)switch(r[n]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return r[n].substr(2)}return t?i.iY(t):"sendrecv"},i.oz=function(e){return i.rY(e)[0].split(" ")[0].substr(2)},i.Ye=function(e){return"0"===e.split(" ",2)[1]},e.t=i},function(e,t,r){"use strict";e.t=function(){var e=function(e){return{name:{VQ:"NotAllowedError"}[e.name]||e.name,message:e.message,GQ:e.GQ,toString:function(){return this.name}}},t=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(r){return t(r).catch(function(t){return Promise.reject(e(t))})}}},function(e,t,r){"use strict";var i=r(17).Da,n={s_:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this.wQ},set:function(e){this.wQ&&(this.removeEventListener("track",this.wQ),this.removeEventListener("addstream",this.SQ)),this.addEventListener("track",this.wQ=e),this.addEventListener("addstream",this.SQ=function(e){e.stream.getTracks().forEach(function(t){var r=new Event("track");r.track=t,r.receiver={track:t},r.ho=[e.stream],this.dispatchEvent(r)}.bind(this))}.bind(this))}})},n_:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this.mozSrcObject},set:function(e){this.mozSrcObject=e}}))},e_:function(){if("object"==typeof window&&(window.RTCPeerConnection||window.mozRTCPeerConnection)){window.RTCPeerConnection||(window.RTCPeerConnection=function(e,t){if(i.version<38&&e&&e.iceServers){for(var r=[],n=0;n<e.iceServers.length;n++){var s=e.iceServers[n];if(s.hasOwnProperty("urls"))for(var o=0;o<s.JQ.length;o++){var a={url:s.JQ[o]};0===s.JQ[o].indexOf("turn")&&(a.username=s.username,a.az=s.az),r.push(a)}else r.push(e.iceServers[n])}e.iceServers=r}return new mozRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=mozRTCPeerConnection.prototype,mozRTCPeerConnection.OQ&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return mozRTCPeerConnection.OQ}}),window.RTCSessionDescription=mozRTCSessionDescription,window.RTCIceCandidate=mozRTCIceCandidate),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){return arguments[0]=new("addIceCandidate"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}});var e=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?e.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())};var t=function(e){var t=new Map;return Object.keys(e).forEach(function(r){t.set(r,e[r]),t[r]=e[r]}),t},r={SY:"inbound-rtp",RY:"outbound-rtp",bY:"candidate-pair",_Q:"local-candidate",NQ:"remote-candidate"},n=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(e,s,o){return n.apply(this,[e||null]).then(function(e){if(i.version<48&&(e=t(e)),i.version<53&&!s)try{e.forEach(function(e){e.type=r[e.type]||e.type})}catch(t){if("TypeError"!==t.name)throw t;e.forEach(function(t,i){e.set(i,Object.assign({},t,{type:r[t.type]||t.type}))})}return e}).then(s,o)}}}};e.t={s_:n.s_,n_:n.n_,e_:n.e_,r_:r(126)}},function(e,t,r){"use strict";var i=r(17).log,n=r(17).Da;e.t=function(){var e=function(e){return{name:{hz:"NotAllowedError",VQ:"NotAllowedError"}[e.name]||e.name,message:{"The operation is insecure.":"The request is not allowed by the user agent or the platform in the current context."}[e.message]||e.message,GQ:e.GQ,toString:function(){return this.name+(this.message&&": ")+this.message}}},t=function(t,r,s){var o=function(e){if("object"!=typeof e||e.cz)return e;var t=[];return Object.keys(e).forEach(function(r){if("require"!==r&&"advanced"!==r&&"mediaSource"!==r){var i=e[r]="object"==typeof e[r]?e[r]:{LQ:e[r]};if(void 0===i.min&&void 0===i.max&&void 0===i.MQ||t.push(r),void 0!==i.MQ&&("number"==typeof i.MQ?i.min=i.max=i.MQ:e[r]=i.MQ,delete i.MQ),void 0!==i.LQ){e.BQ=e.BQ||[];var n={};"number"==typeof i.LQ?n[r]={min:i.LQ,max:i.LQ}:n[r]=i.LQ,e.BQ.push(n),delete i.LQ,Object.keys(i).length||delete e[r]}}}),t.length&&(e.cz=t),e};return t=JSON.parse(JSON.stringify(t)),n.version<38&&(i("spec: "+JSON.stringify(t)),t.YE&&(t.YE=o(t.YE)),t.video&&(t.video=o(t.video)),i("ff37: "+JSON.stringify(t))),navigator.mozGetUserMedia(t,r,function(t){s(e(t))})},r=function(e){return new Promise(function(r,i){t(e,r,i)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:r,addEventListener:function(){},removeEventListener:function(){}}),navigator.mediaDevices.HQ=navigator.mediaDevices.HQ||function(){return new Promise(function(e){e([{kind:"audioinput",qQ:"default",label:"",KQ:""},{kind:"videoinput",qQ:"default",label:"",KQ:""}])})},n.version<41){var s=navigator.mediaDevices.HQ.bind(navigator.mediaDevices);navigator.mediaDevices.HQ=function(){return s().then(void 0,function(e){if("NotFoundError"===e.name)return[];throw e})}}if(n.version<49){var o=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(t){return o(t).then(function(e){if(t.YE&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach(function(e){e.stop()}),new DOMException("The object can not be found here.","NotFoundError");return e},function(t){return Promise.reject(e(t))})}}navigator.getUserMedia=function(e,r,i){if(n.version<44)return t(e,r,i);console.warn("navigator.getUserMedia has been replaced by navigator.mediaDevices.getUserMedia"),navigator.mediaDevices.getUserMedia(e).then(r,i)}}},function(e,t,r){"use strict";var i={r_:function(){navigator.getUserMedia||(navigator.webkitGetUserMedia?navigator.getUserMedia=navigator.webkitGetUserMedia.bind(navigator):navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&(navigator.getUserMedia=function(e,t,r){navigator.mediaDevices.getUserMedia(e).then(t,r)}.bind(navigator)))}};e.t={r_:i.r_}},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20);!function(e){!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(n.gn.ou.au);e.a_=t}(e.ou||(e.ou={}))}(t.gn||(t.gn={}))},function(e,t,r){"use strict";var i=function(){function e(e,t,r){this.isLive=e,this.protocol=t,this.SB=r}return e.prototype.ZF=function(){var e=new hive.snapshots.StreamInfo;return e.streamType=this.isLive?StreamType.LIVE:StreamType.xG,e.streamProtocol=this.protocol,e.url=this.SB,e},e}();t.w_=i},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(2),s=r(52),o=r(0),a=r(131),h=r(68),c=r(19),u=r(53),l=r(195),p=r(26),f=r(7),d=r(69),g=r(4),v=r(41),y=l.gn.ou,m=p.gn.HiveTechError,E=p.gn.cE,T=function(e){function t(r,i,n){var s=e.call(this,r,i)||this;return s.options_=new y.uz,void 0!=i[t.c_]&&f.vs(i[t.c_],s.options_),s.Vj=n,s}return i(t,e),t.prototype.Fn=function(){return t.c_},t.prototype.getVersion=function(){return null},t.prototype.u_=function(){return!0},t.prototype.l_=function(){return h.wI.II?this.lz()&&this.VM()?n.resolve(!0):n.reject(new m(E.nE,"WebRTC DataChannels not supported by browser")):n.reject(new m(E.nE,"Not included in the page"))},t.prototype.initSession=function(e,t){var r=this;return this.l_().then(function(){var i=t.ticket;r.T_();var n=i.LA();0===n.indexOf("//")&&(n=location.protocol+n);var s=r.p_(e,i,n,t);return d.vn.bn(r,s.id),d.vn.XD(r.h_,s.id),f.HiveRequestFactory.bn(s.id,r.Fn()),window&&window.pz&&window.pz(r.h_.Hj()>v.SA.vA.info,s.id),s})},t.prototype.ci=function(e,t){var r=t.manifest.toLowerCase(),i=e.toLowerCase(),n=r.indexOf(".ism/manifest");if(n>-1){var s=r.substring(0,n);if(i.indexOf(s)>-1)return i.indexOf(".ism/manifest(format=mpd-time-csf)")>-1?this.fz?(t.ticket.SourceURL=e,!0):this.dz(t,"The player does not use HiveRequest, downgrading to StatsJS"):this.dz(t,"Protocol not supported by HiveJS tech, downgrading to StatsJS")}else if(i===r)return!!this.fz||this.dz(t,"The player does not use HiveRequest, downgrading to StatsJS");return!1},t.prototype.Nn=function(t,r){window&&window.gz&&window.gz(),e.prototype.Nn.call(this,t,r);var i=h.wI.II();if(i){i.vz(t.id).On(c._c.IDLE)}r&&(f.HiveRequestFactory.Rn(t.id),i.yz())},t.prototype.dz=function(e,t){return e.tech=this.Vj,f.HiveRequestFactory.bn(e.id,u.StatsJS.c_),this.fz&&this.fz.resolve(),this.fz=void 0,this.h_.te().warn("[HiveJS] "+t),this.onError(new m(E.oE,t)),window&&window.gz&&window.gz(),!0},t.prototype.$D=function(e){this.fz=e},t.prototype.onActiveSession=function(e){var t=this;o.Framework.J().apply(new a.mz(!0));var r=h.wI.II();if(r.start(e.Cn,!1).then(function(i){if(t.T_(),t.I_=e.Cn,t.I_.Th(h.wI.Jc(),h.wI.getVersion()),t.I_.Fc.init(t.I_.Dc,e.ticket.sessionId),e.authenticationToken){var n=r.vz(e.ticket.sessionId);n&&n.Tz.Ez.kN(e.authenticationToken)}t.fz&&r.TI(t.fz,e.Cn.ticket.sessionId),t.I_.tc.Tn(e.ticket.sessionId,t.h_.b_(),200);var s=t.h_.P_();s&&s.length>0&&t.I_.tc.Dh(s),t.h_.wh(t.I_)}),void 0!=this.options().onActiveSession)try{this.options().onActiveSession(e.Dn())}catch(e){g.ErrorMonitor.gi().di("exception in user-defined onActiveSession callback","[HiveJS]",e)}},t.prototype.On=function(e,t){},t.prototype.p_=function(e,t,r,i){var n=new f.Bn(e,t,r,i);return n.O_=!0,n.id=n.ticket.sessionId,n},t.prototype.m_=function(){},t.prototype.lz=function(){return"safari"!=s.Da.Oa},t.prototype.VM=function(){try{return null!=s.Ca&&null!=s.t_&&"function"==typeof new RTCPeerConnection(null,null).createDataChannel}catch(e){return!1}},t}(u.StatsJS);T.c_="HiveJS",t.HiveJS=T},function(e,t,r){"use strict";var i=r(37),n=r(0),s=r(41),o=r(9),a=r(19),h=r(72),c=r(73),u=r(75),l=r(71),p=r(18),f=r(15),d=r(132),g=r(135),v=r(136),y=r(85),m=r(152),E=r(153),T=r(154),I=r(155),w=r(156),S=r(92),R=r(169),b=r(170),P=r(171),A=r(45),C=r(23),k=r(172),O=r(176),_=r(177),N=r(178),D=r(179),F=r(181),L=r(182),M=r(183),B=r(184),U=r(76),x=r(185),H=r(186),q=r(188),V=r(5),j=r(189),G=V.Rt.Pi,Q=V.Rt.Ai,K=V.Rt.Ci,Y=V.Rt.Oi;if(Q)var z=r(190).Iz,J=r(192).wz;if(K)var W=r(89).cH;if(G)var X=r(193).Sz;if(Y)var Z=r(77).vM;else var $=r(79).zM;var ee=function(){function e(e){this.Rz=!1,e&&(this.Rz=e)}return e.prototype.apply=function(e){this.Rz?Y&&e.bind(new i.QP(o.Qs.Us,Z,i.KP.ZP)):(e.bind(new i.QP(o.Qs.qs,a.Zc,i.KP.ZP)),e.bind(new i.QP(o.Qs.H,h.OL,i.KP.ZP)),e.bind(new i.QP(o.Qs.Bs,c.BL,i.KP.ZP)),e.bind(new i.QP(o.Qs.D,u.oM,i.KP.ZP)),e.bind(new i.QP(n.Framework.q.I,s.SA.wA,i.KP.ZP)),e.bind(new i.QP(o.Qs.Ms,l.Stats.vc,i.KP.sA)),e.bind(new i.QP(o.Qs.js,p.kc.$h,i.KP.sA)),e.bind(new i.QP(o.Qs.Gs,p.kc.vc,i.KP.sA)),Y?e.bind(new i.QP(o.Qs.Us,Z,i.KP.ZP)):e.bind(new i.QP(o.Qs.Us,$,i.KP.ZP))),e.bind(new i.QP(f.Pa.Wo,j.bz,i.KP.sA)),e.bind(new i.QP(o.Qs.xs,U.uM,i.KP.ZP)),e.bind(new i.QP(f.Pa.Ia,M.Pz,i.KP.ZP)),e.bind(new i.QP(f.Pa.pa,d.Az,i.KP.ZP)),e.bind(new i.QP(f.Pa.ha,g.Cz,i.KP.sA)),e.bind(new i.QP(f.Pa.fa,v.kz,i.KP.sA)),e.bind(new i.QP(f.Pa.ia,m.Sr,i.KP.sA)),e.bind(new i.QP(f.Pa.na,y.$U,i.KP.sA)),G&&e.bind(new i.QP(f.Pa.sa,X,i.KP.sA)),e.bind(new i.QP(f.Pa.ua,E.Oz,i.KP.sA)),"undefined"!=typeof HiveOriginalXMLHttpRequest?e.bind(new i.QP(n.Framework.q.B,HiveOriginalXMLHttpRequest)):e.bind(new i.QP(n.Framework.q.B,XMLHttpRequest)),e.bind(new i.QP(f.Pa.Ta,L._z,i.KP.ZP)),e.bind(new i.QP(f.Pa.ya,T.Nz,i.KP.sA)),e.bind(new i.QP(n.Framework.q.F,k.Dz,i.KP.ZP)),e.bind(new i.QP(f.Pa.U,O.Fz,i.KP.ZP)),e.bind(new i.QP(f.Pa.aa,B.Lz,i.KP.sA)),e.bind(new i.QP(f.Pa.oa,I.Mz,i.KP.sA)),e.bind(new i.QP(f.Pa.Xo,w.Qr,i.KP.sA)),e.bind(new i.QP(f.Pa.Zo,S.NV,i.KP.sA)),e.bind(new i.QP(f.Pa.$o,H.Bz,i.KP.sA)),e.bind(new i.QP(f.Pa.ea,H.Uz,i.KP.sA)),e.bind(new i.QP(f.Pa.ta,q.xz,i.KP.sA)),e.bind(new i.QP(f.Pa.ra,q.Hz,i.KP.sA)),e.bind(new i.QP(f.Pa.ba,x.Vt,i.KP.sA)),e.bind(new i.QP(f.Pa.la,R.qz,i.KP.sA)),e.bind(new i.QP(f.Pa.ca,b.Vz,i.KP.sA)),e.bind(new i.QP(f.Pa.ma,P.jz,i.KP.sA)),e.bind(new i.QP(f.Pa.va,D.Gz,i.KP.sA)),e.bind(new i.QP(f.Pa.da,A.Lk,i.KP.sA)),e.bind(new i.QP(f.Pa.ga,F.Qz,i.KP.sA)),e.bind(new i.QP(n.Framework.q.L,C.mu.Mr,i.KP.sA)),e.bind(new i.QP(f.Pa.Ea,_.mr,i.KP.sA)),Q&&(e.bind(new i.QP(f.Pa.Sa,z,i.KP.sA)),e.bind(new i.QP(f.Pa.wa,J,i.KP.sA))),K&&e.bind(new i.QP(f.Pa.Ci,W,i.KP.sA)),e.bind(new i.QP(f.Pa.Ra,N.Kz,i.KP.sA))},e}();t.mz=ee},function(e,t,r){"use strict";var i=r(2),n=r(25),s=n.sl,o=r(0),a=r(40),h=r(15),c=r(3),u=r(19),l=r(1),p=r(133),f=r(43),d=r(9),g=r(134),v=r(5),y=r(4),m=v.Rt.Ai,E=v.Rt.Ci,T=v.Rt.ki,I=function(){function e(e){this.state=u._c.Oc,this.requestTimeout=-1,this.te=o.Framework.resolve(o.Framework.q.I).log(e.ticket.sessionId),this.mn="S["+e.ticket.sessionId+"]",this.Hl=o.Framework.resolve(o.Framework.q.F),this.sessionId=e.ticket.sessionId,this.Cn=e,this.TC=o.Framework.resolve(h.Pa.ha),this.Uw=o.Framework.resolve(h.Pa.ia),this.yx=o.Framework.resolve(h.Pa.Xo),this.Yz=o.Framework.resolve(h.Pa.ua),this.EC=o.Framework.resolve(h.Pa.oa),this.SC=o.Framework.resolve(h.Pa.Zo),this.zz=o.Framework.resolve(h.Pa.ma),this.Jz=o.Framework.resolve(h.Pa.ca),this.Wz=o.Framework.resolve(h.Pa.ya),this.IC=o.Framework.resolve(h.Pa.la),this.Tz=o.Framework.resolve(h.Pa.fa),this.H_=o.Framework.resolve(h.Pa.Ea),this.wC=o.Framework.resolve(h.Pa.Ra),this.V_=o.Framework.resolve(h.Pa.da),this.RC=o.Framework.resolve(h.Pa.ga),this.bC=o.Framework.resolve(h.Pa.aa),this.lq=o.Framework.resolve(h.Pa.ba),this.x_=o.Framework.resolve(h.Pa.Wo),(m||o.Framework.S()&&f.iC.eC)&&(this.Xz=o.Framework.resolve(h.Pa.wa),this.Zz=o.Framework.resolve(h.Pa.Sa)),(E||o.Framework.S()&&f.iC.tC)&&(this.$z=o.Framework.resolve(h.Pa.Ci)),this.swarmId=this.eJ(e.ticket.qh()),this.x_.init(this),this.Yz.init(this),this.bC.init(this),this.lq.init(this),this.SC.init(this),this.Jz.init(this),this.Wz.init(this),this.IC.init(this),this.Tz.init(this),this.TC.init(this),this.yx.init(this),this.V_.init(this),this.RC.init(this),this.H_.init(this),(E||o.Framework.S()&&f.iC.tC)&&this.$z.init(this),(m||o.Framework.S()&&f.iC.eC)&&this.Zz.init(this)}return e.prototype.init=function(e,t){T?this.tJ(!1):this.tJ(!0),this.wC.uV(this.Cn.identity.Yc()),this.Uw.init(c.ni.Sr.Er,c.ni.Sr.Tr);var r=this.Tz.PC(e,t);this.wC.rJ(this.Tz.Ez.K_());var i=new p.iJ(r);this.Cn.R_=i,this.Cn.Dc.R_=i,this.Wz.start(this.Tz,this.yx),(m||o.Framework.S()&&f.iC.eC)&&this.Zz.nJ(this.yx);var n=[this.yx,this.SC,this.Wz,this.Cn.Dc,this.Cn.tc,this.lq];(m||o.Framework.S()&&f.iC.eC)&&n.push(this.Zz),(E||o.Framework.S()&&f.iC.tC)&&n.push(this.$z),(s=this.Hl).start.apply(s,[e.sessionId].concat(n)),this.Cn.Dc.TL(this.SC),this.Cn.Dc.QF(this.wC),this.wC.sJ(e);var s},e.prototype.tJ=function(e){e&&"undefined"!=typeof navigator&&navigator.hardwareConcurrency?(this.wC.oJ(navigator.hardwareConcurrency),this.wC.aJ(navigator.hardwareConcurrency)):(this.wC.oJ(1),this.wC.aJ(1)),this.te.debug(this.mn+"My score "+this.wC.oH())},e.prototype.eJ=function(e){return s.Vd(e).toString(s.Ed.Td)},e.prototype.TI=function(e){this.hJ(),this.TC.TI(e)},e.prototype.On=function(e){if(this.state!=e)switch(this.te.info("Switching state "+u._c[this.state]+" -> "+u._c[e]),this.state=e,this.state){case u._c.IDLE:this.yx.stop(),this.SC.stop(),this.RC.cJ(),this.RC.uJ(),this.Wz.lJ(),this.Zz&&this.Zz.pJ(),this.Cn.On(u._c.IDLE),this.Uw.XU(),this.bC.fJ(),this.TC.dJ(),this.x_.gJ();break;case u._c.Oc:this.yx.start(),this.SC.start(this.Tz.Ez),this.RC.vJ(),this.Wz.yJ(),this.Zz&&this.Zz.mJ(),this.Cn.On(u._c.Oc),this.x_.EJ()}},e.prototype.hJ=function(){var e=this;try{o.Framework.clearTimeout(this.requestTimeout),this.On(u._c.Oc),this.requestTimeout=o.Framework.setTimeout(function(){e.On(u._c.IDLE)},3e4)}catch(e){y.ErrorMonitor.gi().di("Error on request timeout",this.mn,e)}},e}();t.TJ=I;var w=function(){function e(){this.Ul=new a.Counter,this.IJ=!1,this.Hc=new l,this.wJ=new l,this.SJ=!1,this.RJ=!1,this.bJ=o.Framework.resolve(h.Pa.Ta),this.PJ=o.Framework.resolve(h.Pa.Ia),this.dh=o.Framework.resolve(d.Qs.Us),this.PJ.init(this)}return e.prototype.start=function(e,t){this.te=o.Framework.resolve(o.Framework.q.I).log(e.ticket.sessionId);var r=e.ticket,n=r.sessionId;if(this.Hc.has(n))this.te.warn("SESSION ALREADY ACTIVE "+n);else{g.AJ.mh(e.Lc.client);var s=new I(e);s.init(r,t),this.dh.Vh().then(function(e){var t=e.Qh(),r=t.Cs();r&&s.wC.wM(r)}).done(),e.Dc.EL(this.dh),this.te.info("PEER CONTEXT STARTED"),this.Hc.set(n,s),this.wJ.set(s.swarmId,n)}return 1!=this.Hc.length&&!this.RJ||o.Framework.S()||(this.bJ.init(),this.RJ=!1),i.resolve(r.SourceURL)},e.prototype.yz=function(){this.RJ=!0},e.prototype.Cl=function(e){if(this.wJ.has(e)){var t=this.wJ.get(e);return this.Hc.get(t)}return null},e.prototype.vz=function(e){return this.Hc.get(e)},e.prototype.CJ=function(e){return this.Hc.has(e)?this.Hc.get(e).TC:null},e.prototype.TI=function(e,t){this.vz(t).TI(e)},e.prototype.On=function(e,t){o.Framework.S()&&this.vz(e).On(t)},e.prototype.abort=function(e,t){this.CJ(t).abort(e)},e}();t.Az=w},function(e,t,r){"use strict";var i=function(){function e(e){this.AC=e}return e.prototype.ZF=function(){var e=new hive.snapshots.StreamInfo;return e.streamType=this.AC.isLive()?StreamType.LIVE:StreamType.xG,e.streamProtocol=this.AC.S_(),e.url=this.AC.CN(),e},e}();t.iJ=i},function(e,t,r){"use strict";var i=r(18),n=i.kc.ah,s=r(0),o=r(21),a=function(){function e(){}return e.mh=function(e){this.client=e},e.kJ=function(e,t,r,i,a){var h=new n;h.app=e,h.guid=i,h.createdAt=s.Framework.time(),h.name=r,h.tags=t,h.data=JSON.parse(a);var c=new o.pc(Services.fc,2,JSON.stringify(h));this.client&&this.client.lc().send(c)},e}();t.AJ=a},function(e,t,r){"use strict";var i=r(1),n=r(2),s=r(22),o=r(6),a=r(3),h=r(0),c=r(10),u=r(15),l=r(40),p=r(4),f=function(){function e(){this.OJ=new i,this._J=!1,this.NJ=0,this.DJ=5,this.PJ=h.Framework.resolve(u.Pa.Ia),this.FJ=new l.gA}return e.prototype.init=function(e){this.te=h.Framework.resolve(h.Framework.q.I).log(e.sessionId),this.mn="S["+e.sessionId+"]",this.EC=e.EC,this.Uw=e.Uw,this.SC=e.SC,this.Dc=e.Cn.Dc,this.sessionId=e.Cn.ticket.sessionId,this.Yz=e.Yz,this.IC=e.IC,this.LJ=e.Tz,this.wC=e.wC,this.bC=e.bC,this.x_=e.x_,this.Dc.jF(this.FJ)},e.prototype.TI=function(e){try{var t=e.url;this.te.info("HIVE REQ "+t),e.Du=h.Framework.time();var r=this.LJ.MJ(e),i=r.bN(e.url);this.x_.BJ(i),this.ik(e,i,r,s.Tu.du)}catch(e){p.ErrorMonitor.gi().di("PLAYER REQUEST ERROR",this.mn,e)}},e.prototype.ik=function(e,t,r,i){var n=this;if(t.$u()){if(t.Yu()==c.Ws.Ys){var a=r.Y_(t,i);if(a.oN)return this.te.debug("DO NOT CONTINUE WITH THE REQUEST "+t.zu()+". ALREADY REQUESTED  "+a.eN+" PENDING REQUEST "+a.sN),null;if(a.sN&&i==s.Tu.du){var h=this.UJ(e,t,r,i);return h.length>0?(h.forEach(function(t){var r=n.OJ.get(t);n.OJ.set(e.id,r),n.OJ.delete(t)}),null):(this.te.info("PREFETCH UPGRADE FAILED. THIS SHOULD NOT HAPPEN. CHECK FOR MULTIPLE PLAYER REQUESTS FOR THE SAME FRAGMENT"),this.xJ(e,t,r,i))}return this.xJ(e,t,r,i)}return this.xJ(e,t,r,i)}var u=o.fn.xi.next(),l=new s.nl(e,u,i,t,r);return this.OJ.set(e.id,l),l.type=s.Tu.gu,this.HJ(l),l},e.prototype.xJ=function(e,t,r,i){var n=this,a=o.fn.xi.next(),h=new s.nl(e,a,i,t,r);if(this.OJ.set(e.id,h),t.Yu()==c.Ws.Ys&&(r.hN(h),i!==s.Tu.vu&&i!==s.Tu.Eu)){var u=t.bitrate,l=this.wC.qJ();0!=u&&(this.wC.VJ(u),u!=l&&(this._J=!0,this.NJ=0),this._J&&this.NJ++,this.NJ==this.DJ&&(this.SC.EV(),this._J=!1,this.NJ=0))}return this.jJ(t.zu()).then(function(e){null!=e?(n.x_.GJ(h,e),n.QJ(h,e),r.cN(h.zu(),h.Ju()),r.fN(t.bitrate)):(n.KJ(t,h),h.Yu()==c.Ws.Ys&&(r.lN(h),h.type==s.Tu.du&&n.FJ.add(0)))}),h},e.prototype.UJ=function(e,t,r,i){return r.aN(e,t,i)},e.prototype.jJ=function(e){return this.Uw.get(e)},e.prototype.KJ=function(e,t){this.EC.contains(e.zu())?(this.te.debug("OBJ IDX CONTAINS "+t.zu()),t.Ku()==s.Tu.vu&&(t.type=s.Tu.Eu),this.Iu(t)):t.Ku()!=s.Tu.Eu?this.HJ(t):(p.ErrorMonitor.gi().di("P2P PREFETCH FAILED BECAUSE OBJECT INDEX DOES NOT CONTAIN REQUEST ENTITY",this.mn,{mR:t.zu()}),t.Gu.cN(t.zu(),t.Ju()))},e.prototype.dJ=function(){var e=this;this.OJ.forEach(function(t){return e.abort(t.Vu)})},e.prototype.abort=function(e){if(this.OJ.has(e.id)){var t=this.OJ.get(e.id),r=t.Ju();this.te.debug("REQUEST "+r+" ABORTED "),this.IC.Qe(r)?this.IC.YJ(r):this.Yz.Qe(r)&&this.Yz.YJ(r),this.OJ.delete(e.id)}},e.prototype.Iu=function(e){e.type==s.Tu.du&&(e.type=s.Tu.mu),e.type==s.Tu.Eu&&(e.Uu=!0),this.IC.TI(e)},e.prototype.zJ=function(e){if(0!=e.qu&&(e.Mu.Ru=e.qu,this.te.info("ALREADY DOWNLOADED "+e.Mu.Ru+" BYTES"),e.Mu.bu=e.qu),!a.ni.j._r&&e.qu&&(e.Mu.Ru=0),this.x_.JJ(e),e.type!=s.Tu.Eu)e.type=s.Tu.yu,this.HJ(e);else if(e.Yu()==c.Ws.Ys){e.Gu.uN(e.zu()),e.Gu.cN(e.zu(),e.Ju());var t=e.Qu;t.bitrate&&e.Gu.fN(t.bitrate)}},e.prototype.WJ=function(e){var t=this;this.te.info("SUCCESS FROM P2P FOR "+e.Wu()+" [REQ "+e.ju+"] ["+s.Tu[e.type]+"] AFTER "+e.rl()+" [bw:"+e.il().Xi()+"]"),this.XJ(e),this.ZJ(e,this.z_(e.type)),this.bC.$J(e);var r=this.Yz.eW().zi();this.x_.tW(e,r),this.rW(e).then(function(){e.Gu.AN(e),t.iW()}).finally(function(){t.z_(e.type)&&t.nW(e),t.OJ.delete(e.Vu.id)})},e.prototype.HJ=function(e){this.x_.sW(e),this.Yz.TI(e)},e.prototype.oW=function(e){this.iW();var t=this.Yz.eW().zi();this.x_.aW(e,t),e.Yu()==c.Ws.Ys&&(e.Gu.uN(e.zu()),e.Gu.cN(e.zu(),e.Ju())),this.hW(e)},e.prototype.cW=function(e){var t=this;this.XJ(e),this.ZJ(e,this.z_(e.type)),e.type==s.Tu.yu&&this.te.debug("CDN COMPENSATION TIME "+(e.Mu.Nu-e.Vu.Du)+" / "+(e.Mu.Nu-e.Mu.ku)+" P2P TIME "+(e.Mu._u-e.Mu.Ou)),-1==[c.Ws.zs,c.Ws.Js].indexOf(e.Yu())&&this.bC.$J(e);var r=this.Yz.eW().zi();this.x_.uW(e,r),this.rW(e).then(function(){e.Yu()==c.Ws.zs&&e.Gu.PN(e),-1==[c.Ws.zs,c.Ws.Js].indexOf(e.Yu())&&e.Gu.AN(e),t.iW()}).catch(function(e){t.te.error(e)}).finally(function(){t.z_(e.type)&&t.nW(e),t.OJ.delete(e.Vu.id)})},e.prototype.XJ=function(e){e.type==s.Tu.Eu&&(e.Mu.p2pAgenTrafficSuccessQt=e.Mu.Ru),e.type==s.Tu.vu&&(e.Mu.Cu=e.Mu.Au,e.Bu&&(e.Mu.srcOtherRespQt=e.Mu.Au)),e.Mu.Su=e.Mu.Au+e.Mu.Ru,e.Vu.total=e.Mu.Su},e.prototype.ZJ=function(e,t){if(this.lW(e),t){var r=o.fn.createEvent(ProgressEvent,"progress",{lengthComputable:!0,total:e.Mu.Su,loaded:e.Mu.Su,currentTarget:e.Vu});e.Vu.dispatchEvent(r),e.Qu.wR()||(e.Vu.response=e.RB,e.Vu.responseText=e.RB)}},e.prototype.nW=function(e){var t=e.Vu;this.te.info("RESPOND TO THE PLAYER "+e.zu()+" SIZE "+(h.Framework.S()?t.total:e.Hu.byteLength)),t.status=200,t.readyState=4,"string"==typeof t.response&&"arraybuffer"===t.responseType&&(t.response=o.fn.pn(t.response)),"text"!=t.responseType&&""!=t.responseType&&delete t.responseText,e.Qu.wR()&&(t.response=h.Framework.S()?null:o.fn.en(e.Hu));var r=o.fn.createEvent(Event,"readystatechange",{currentTarget:t}),i=o.fn.createEvent(ProgressEvent,"load",{bubbles:!1,cancelable:!1,lengthComputable:!1,total:e.Qu.wR()?e.Hu.byteLength:e.RB.length,currentTarget:t}),n=o.fn.createEvent(ProgressEvent,"loadend",{bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:t.total,total:0,currentTarget:t});t.dispatchEvent(r),t.dispatchEvent(i),t.dispatchEvent(n)},e.prototype.hW=function(e){this.OJ.delete(e.Vu.id);var t=e.Vu,r={bubbles:!1,cancelable:!1,lengthComputable:!1,loaded:t.total,total:0,currentTarget:t};e.xhr.status&&e.xhr.status>0?(t.status=e.xhr.status,t.xu=e.xu):t.status=404,t.readyState=4,t.dispatchEvent(o.fn.createEvent(Event,"readystatechange",r)),t.dispatchEvent(o.fn.createEvent(ProgressEvent,"load",r)),t.dispatchEvent(o.fn.createEvent(ProgressEvent,"loadend",r))},e.prototype.rW=function(e){var t=this;return e.Qu.$u()?this.Uw.put(e).then(function(r){r&&t.SC.pW(e.Qu,e.Mu.Su,e.KU)}):n.resolve(!0)},e.prototype.QJ=function(e,t){var r=this;e.Hu=t.data,e.xu=t.headers,e.YU=t.YU,e.Mu=t.Mu;var i=e.Gu.RN().sU(t.length);this.te.info("SCHEDULE DELIVERY OF "+e.zu()+" IN "+i+" SIZE "+(h.Framework.S()?t.length:e.Hu.byteLength)+" BYTES"),h.Framework.setTimeout(function(){r.fW(e)},i)},e.prototype.fW=function(e){this.te.debug("DELIVERY OF "+e.zu()),this.ZJ(e,!0),this.OJ.delete(e.Vu.id);var t=e.Vu.Du-e.Mu.Nu;this.te.info("FRAGMENT PREFETCHED "+t+" MSECS BEFORE PLAYER REQUEST"),t>0&&e.Yu()==c.Ws.Ys&&this.FJ.add(t);var r=0;r=e.Mu.Ou>0?e.Vu.Du-e.Mu.Ou:e.Vu.Du-e.Mu._u,this.te.info("FRAGMENT REQUESTED "+r+" MSECS BEFORE PLAYER REQUEST"),this.nW(e)},e.prototype.z_=function(e){return e!=s.Tu.Eu&&e!=s.Tu.vu},e.prototype.lW=function(e){if(e.type!==s.Tu.yu)e.xu=e.Vu.xu=e.xu;else{var t="\nContent-Range: bytes=0-"+(e.size-1)+"/"+e.size+"\n";t+="Content-Length: "+e.size+"\n",e.xu=e.Vu.xu=t}null!=e.xu&&-1!=e.xu.indexOf("Access-Control-Allow-Origin")||(e.xu+="\nAccess-Control-Allow-Origin:*")},e.prototype.iW=function(){h.Framework.S()||this.PJ.render()},e}();t.Cz=f},function(e,t,r){"use strict";var i=r(80),n=r(84),s=r(0),o=function(){function e(){this.SC=null,this.Hl=s.Framework.resolve(s.Framework.q.F)}return e.prototype.init=function(e){this.te=s.Framework.resolve(s.Framework.q.I).log(e.sessionId),this.vx=e,this.SC=e.SC},e.prototype.PC=function(e,t){var r=null,s=e._A();return n.OU.cB(s)?this.Ez=r=new n.OU.BU(e,t,this.vx):i.yB.cB(s)?this.Ez=r=new i.yB.LB(e,this.vx):this.te.warn("COULD NOT FIND A CONTEXT FOR "+s),null!=r&&this.dW(this.Ez),r},e.prototype.dW=function(e){var t=this;null!=this.SC?this.SC.stop().then(function(r){t.SC.start(e)}):this.SC.start(e)},e.prototype.MJ=function(e){if(null==this.Ez)this.te.warn("FIRST REQUEST, COULD NOT FIND RIGHT CONTEXT "+e.url);else if(!this.Ez.SN(e))return this.te.warn("REQUEST DOES NOT BELONG TO THE CURRENT CONTEXT "+e.url),null;return this.Ez},e}();t.kz=o},function(e,t,r){"use strict";function i(e,t,r,n){if(!(this instanceof i))return new i(e,t,r,n);this.ce=t||Object.ae,this.yo=r||Object.mo,this.le=n||Function.he,this.root=null,this.length=0,this.addEach(e)}function n(e){this.value=e,this.left=null,this.right=null,this.length=1}function s(e,t,r){if(this.set=e,this.Mk=null,this.end=r,t){var i=this.set.gW(t);i&&(this.set.vW(i.value),this.Mk=i.yW())}}e.t=i;var o=(r(12),r(13)),a=r(36),h=r(14),c=r(35),u=r(64);i.mW=i,Object.addEach(i.prototype,o.prototype),Object.addEach(i.prototype,a.prototype),Object.addEach(i.prototype,h.prototype),Object.addEach(i.prototype,c.prototype),i.prototype.NN=!0,i.prototype.de=function(e){return new this.constructor(e,this.ce,this.yo,this.le)},i.prototype.has=function(e,t){if(t)throw new Error("SortedSet#has does not support second argument: equals");return!!this.root&&(this.vW(e),this.ce(e,this.root.value))},i.prototype.get=function(e,t){if(t)throw new Error("SortedSet#get does not support second argument: equals");return this.root&&(this.vW(e),this.ce(e,this.root.value))?this.root.value:this.le(e)},i.prototype.add=function(e){var t=new this.Node(e);if(!this.root)return this.qk&&this.UP([e],[],0),this.root=t,this.length++,this.qk&&this.LP([e],[],0),!0;if(this.vW(e),!this.ce(e,this.root.value)){var r=this.yo(e,this.root.value);if(0===r)throw new Error("SortedSet cannot contain incomparable but inequal values: "+e+" and "+this.root.value);return this.qk&&this.UP([e],[],this.root.index),r<0?(t.right=this.root,t.left=this.root.left,this.root.left=null,this.root.EW()):(t.left=this.root,t.right=this.root.right,this.root.right=null,this.root.EW()),t.EW(),this.root=t,this.length++,this.qk&&this.LP([e],[],this.root.index),!0}return!1},i.prototype.delete=function(e,t){if(t)throw new Error("SortedSet#delete does not support second argument: equals");if(this.root&&(this.vW(e),this.ce(e,this.root.value))){var r=this.root.index;if(this.qk&&this.UP([],[e],r),this.root.left){var i=this.root.right;this.root=this.root.left,this.vW(e),this.root.right=i}else this.root=this.root.right;return this.length--,this.root&&this.root.EW(),this.qk&&this.LP([],[e],r),!0}return!1},i.prototype.indexOf=function(e,t){if(t)throw new Error("SortedSet#indexOf does not support second argument: startIndex");return this.root&&(this.vW(e),this.ce(e,this.root.value))?this.root.index:-1},i.prototype.find=function(e,t,r){if(t)throw new Error("SortedSet#find does not support second argument: equals");if(r)throw new Error("SortedSet#find does not support third argument: index");if(this.root&&(this.vW(e),this.ce(e,this.root.value)))return this.root},i.prototype.TW=function(e){if(this.root){for(e=e||this.root;e.right;)e=e.right;return e}},i.prototype.IW=function(e){if(this.root){for(e=e||this.root;e.left;)e=e.left;return e}},i.prototype.wW=function(e){if(this.root)return this.vW(e),this.yo(this.root.value,e)>0?this.root.yW():this.root},i.prototype.SW=function(e){if(this.root)return this.vW(e),this.yo(this.root.value,e)>=0?this.root.yW():this.root},i.prototype.gW=function(e){if(this.root)return this.vW(e),this.yo(this.root.value,e)>=0?this.root:this.root.RW()},i.prototype.bW=function(e){if(this.root)return this.vW(e),this.yo(this.root.value,e)<=0?this.root.RW():this.root},i.prototype.pop=function(){if(this.root){var e=this.TW();return this.delete(e.value),e.value}},i.prototype.shift=function(){if(this.root){var e=this.IW();return this.delete(e.value),e.value}},i.prototype.push=function(){this.addEach(arguments)},i.prototype.unshift=function(){this.addEach(arguments)},i.prototype.slice=function(e,t){e=e||0,t=t||this.length,e<0&&(e+=this.length),t<0&&(t+=this.length);var r=[];if(this.root)for(this.PW(e);this.root.index<t&&(r.push(this.root.value),this.root.right);)this.vW(this.root.RW().value);return r},i.prototype.splice=function(e,t){return this.Yk(e,t,Array.prototype.slice.call(arguments,2))},i.prototype.Yk=function(e,t,r){if(void 0===e&&void 0===t)return[];e=e||0,e<0&&(e+=this.length),void 0===t&&(t=1/0);var i=[];if(this.root){this.PW(e);for(var n=0;n<t;n++){i.push(this.root.value);var s=this.root.RW();if(this.delete(this.root.value),!s)break;this.vW(s.value)}}return this.addEach(r),i},i.prototype.vW=function(e){var t,r,i,s,o,a;if(this.root){for(t=r=i=new this.Node,a=new this.Node,o=this.root;;){var h=this.yo(e,o.value);if(h<0){if(!o.left)break;if(this.yo(e,o.left.value)<0&&(s=o.left,o.left=s.right,o.EW(),s.right=o,s.EW(),o=s,!o.left))break;s=new n,s.right=o,s.left=a.left,a.left=s,i.left=o,i.EW(),i=o,o=o.left}else{if(!(h>0))break;if(!o.right)break;if(this.yo(e,o.right.value)>0&&(s=o.right,o.right=s.left,o.EW(),s.left=o,s.EW(),o=s,!o.right))break;s=new n,s.left=o,s.right=a.right,a.right=s,r.right=o,r.EW(),r=o,o=o.right}}for(r.right=o.left,r.EW(),i.left=o.right,i.EW(),o.left=t.right,o.right=t.left;a.left;)a.left.right.EW(),a.left=a.left.left;for(;a.right;)a.right.left.EW(),a.right=a.right.right;o.EW(),this.root=o}},i.prototype.PW=function(e){if(this.root){for(var t=this.root,r=this.root.index;r!==e;)if(r>e&&t.left)t=t.left,r-=1+(t.right?t.right.length:0);else{if(!(r<e&&t.right))break;t=t.right,r+=1+(t.left?t.left.length:0)}return this.vW(t.value),this.root.index===e}return!1},i.prototype.reduce=function(e,t,r){return this.root&&(t=this.root.reduce(e,t,0,r,this)),t},i.prototype.reduceRight=function(e,t,r){return this.root&&(t=this.root.reduceRight(e,t,this.length-1,r,this)),t},i.prototype.min=function(e){var t=this.IW(e);if(t)return t.value},i.prototype.max=function(e){var t=this.TW(e);if(t)return t.value},i.prototype.Po=function(){return this.min()},i.prototype.clear=function(){var e;this.qk&&(e=this.toArray(),this.UP([],e,0)),this.root=null,this.length=0,this.qk&&this.LP([],e,0)},i.prototype.Ao=function(e,t){return new this.Iterator(this,e,t)},i.prototype.Iterator=s,i.prototype.summary=function(){return this.root?this.root.summary():"()"},i.prototype.log=function(e,t,r,i){e=e||u.GD,t=t||this.ge,r||(r=console.log,i=console),r=r.bind(i),this.root&&this.root.log(e,t,r,r)},i.prototype.ge=function(e,t,r){t(" "+e.value)},i.AW=u,i.prototype.Node=n,n.prototype.reduce=function(e,t,r,i,n,s){if(s=s||0,this.left){var o=this.left.length;t=this.left.reduce(e,t,r,i,n,s+1),r+=o}return t=e.call(i,t,this.value,r,n,this,s),r+=1,this.right&&(t=this.right.reduce(e,t,r,i,n,s+1)),t},n.prototype.reduceRight=function(e,t,r,i,n,s){return s=s||0,this.right&&(t=this.right.reduce(e,t,r,i,n,s+1),r-=this.right.length),t=e.call(i,t,this.value,this.value,n,this,s),r-=1,this.left&&(t=this.left.reduce(e,t,r,i,n,s+1)),t},n.prototype.EW=function(){this.length=1+(this.left?this.left.length:0)+(this.right?this.right.length:0),this.index=this.left?this.left.length:0},n.prototype.kW=function(){var e=1;if(e+=this.left?this.left.kW():0,e+=this.right?this.right.kW():0,this.length!==e)throw new Error("Integrity check failed: "+this.summary());return e},n.prototype.RW=function(){var e=this;if(e.right){for(e=e.right;e.left;)e=e.left;return e}},n.prototype.yW=function(){var e=this;if(e.left){for(e=e.left;e.right;)e=e.right;return e}},n.prototype.summary=function(){var e=this.value||"-";return e+=" <"+this.length,this.left||this.right?"("+e+" "+(this.left?this.left.summary():"()")+", "+(this.right?this.right.summary():"()")+")":"("+e+")"},n.prototype.log=function(e,t,r,i){var n,s=this;n=this.left&&this.right?e.qP:this.left?e.UD:this.right?e.xD:e.BD;var o;this.left&&this.left.log(e,t,function(t){o?i(e.jD+" "+t):(o=!0,i(e.HD+e.BD+t))},function(e){i("  "+e)});var a;t(this,function(t){a?r((s.right?e.jD:" ")+t):(a=!0,r(n+t))},function(t){i((s.left?e.jD:" ")+t)});var h;this.right&&this.right.log(e,t,function(t){h?r("  "+t):(h=!0,r(e.qD+e.BD+t))},function(t){r(e.jD+" "+t)})},s.prototype.zk=null,Object.defineProperty(s.prototype,"_iterationObject",{get:function(){return this.zk||(this.zk={done:!1,value:null})}}),s.prototype.next=function(){var e;return e=this.Mk?this.set.bW(this.Mk.value):this.set.IW(),e?void 0!==this.end&&this.set.yo(e.value,this.end)>=0?(this.Jk.done=!0,this.Jk.value=void 0):(this.Mk=e,this.Jk.value=e.value):(this.Jk.done=!0,this.Jk.value=void 0),this.Jk}},function(e,t,r){"use strict";var i=function(){function e(){this.eN=!1,this.sN=!1,this.oN=!1}return e}();t.X_=i},function(e,t,r){"use strict";function i(e,t,r,n){if(!(this instanceof i))return new i(e,t,r,n);Array.isArray(e)?(this.fg=e,e=e.splice(0,e.length)):this.fg=[],this.ce=t||Object.ae,this.yo=r||Object.mo,this.le=n||Function.he,this.length=0,this.addEach(e)}function n(e,t,r){for(var i=0,n=e.length-1;i<=n;){var s=i+n>>1,o=r(t,e[s]);if(o>0)i=s+1;else{if(!(o<0))return s;n=s-1}}return-(i+1)}function s(e,t,r,i){var s=n(e,t,r);if(s<0)return-1;for(;s>0&&i(t,e[s-1]);)s--;return i(t,e[s])?s:-1}function o(e,t,r,i){var s=n(e,t,r);if(s<0)return-1;for(;s<e.length-1&&i(t,e[s+1]);)s++;return i(t,e[s])?s:-1}function a(e,t,r){var i=n(e,t,r);if(i<0)return-i-1;for(var s=e.length-1;i<s&&0===r(t,e[i+1]);)i++;return i}e.t=i;var h=(r(12),r(13)),c=r(14),u=r(35);i.OW=i,Object.addEach(i.prototype,h.prototype),Object.addEach(i.prototype,c.prototype),Object.addEach(i.prototype,u.prototype),i.prototype.NN=!0,i.prototype.de=function(e){return new this.constructor(e,this.ce,this.yo,this.le)},i.prototype.has=function(e,t){if(t)throw new Error("SortedSet#has does not support second argument: equals");var r=n(this.fg,e,this.yo);return r>=0&&this.ce(this.fg[r],e)},i.prototype.get=function(e,t){if(t)throw new Error("SortedArray#get does not support second argument: equals");var r=s(this.fg,e,this.yo,this.ce);return-1!==r?this.fg[r]:this.le(e)},i.prototype.add=function(e){var t=a(this.fg,e,this.yo);return this.qk&&this.UP([e],[],t),this.fg.splice(t,0,e),this.length++,this.qk&&this.LP([e],[],t),!0},i.prototype.delete=function(e,t){if(t)throw new Error("SortedArray#delete does not support second argument: equals");var r=s(this.fg,e,this.yo,this.ce);return-1!==r&&(this.qk&&this.UP([],[e],r),this.fg.splice(r,1),this.length--,this.qk&&this.LP([],[e],r),!0)},i.prototype.GP=function(e,t){if(t){var r=this.fg.GP(e,t);return this.length-=r,r}var i=s(this.fg,e,this.yo,this.ce);if(-1!==i){for(var n=i;this.ce(e,this.fg[n]);)n++;var o=this.slice(i,n);return this.qk&&this.UP([],o,i),this.fg.splice(i,o.length),this.length-=o.length,this.qk&&this.LP([],o,i),o.length}return 0},i.prototype.indexOf=function(e){return s(this.fg,e,this.yo,this.ce)},i.prototype.lastIndexOf=function(e){return o(this.fg,e,this.yo,this.ce)},i.prototype.find=function(e,t,r){if(t)throw new Error("SortedArray#find does not support second argument: equals");if(r)throw new Error("SortedArray#find does not support third argument: index");return s(this.fg,e,this.yo,this.ce)},i.prototype.Hk=function(e,t,r){if(t)throw new Error("SortedArray#findLast does not support second argument: equals");if(r)throw new Error("SortedArray#findLast does not support third argument: index");return o(this.fg,e,this.yo,this.ce)},i.prototype.push=function(){this.addEach(arguments)},i.prototype.unshift=function(){this.addEach(arguments)},i.prototype.pop=function(){var e=this.fg.pop();return this.length=this.fg.length,e},i.prototype.shift=function(){var e=this.fg.shift();return this.length=this.fg.length,e},i.prototype.slice=function(){return this.fg.slice.apply(this.fg,arguments)},i.prototype.splice=function(e,t){return this.Yk(e,t,Array.prototype.slice.call(arguments,2))},i.prototype.Yk=function(e,t,r){if(void 0===e&&void 0===t)return[];e=e||0,e<0&&(e+=this.length),void 0===t&&(t=1/0);var i=this.slice(e,e+t);return this.qk&&this.UP(r,i,e),this.fg.splice(e,t),this.length-=i.length,this.qk&&this.LP([],i,e),this.addEach(r),i},i.prototype.reduce=function(e,t){var r=arguments[2];return this.fg.reduce(function(t,i,n){return e.call(r,t,i,n,this)},t,this)},i.prototype.reduceRight=function(){var e=arguments[2];return this.fg.reduceRight(function(t,r,i){return callback.call(e,t,r,i,this)},basis,this)},i.prototype.min=function(){if(this.length)return this.fg[0]},i.prototype.max=function(){if(this.length)return this.fg[this.length-1]},i.prototype.Po=function(){return this.fg.Po()},i.prototype.clear=function(){var e;this.qk&&(e=this.fg.slice(),this.UP([],e,0)),this.length=0,this.fg.clear(),this.qk&&this.LP([],e,0)},i.prototype.ae=function(e,t){return this.fg.ae(e,t)},i.prototype.mo=function(e,t){return this.fg.mo(e,t)},i.prototype.Ao=function(e,t){return new this.Iterator(this.fg,e,t)},i.prototype.toJSON=function(){return this.toArray()},i.prototype.Iterator=Array.prototype.Iterator},function(e,t,r){"use strict";var i=r(1),n=r(44),s=r(2);r(141),r(143);var o=r(81),a=r(0),h=r(144),c=r(10),u=r(82),l=r(145),p=r(146),f=r(80),d=r(8),g=function(){function e(e){this.isLive=!1,this.te=a.Framework&&a.Framework.resolve(a.Framework.q.I)?a.Framework.resolve(a.Framework.q.I).log(e):console,this._W=new DashParser,this.reset()}return e.prototype.NW=function(e){var t="";return-1!==e.indexOf("/")&&(-1!==e.indexOf("?")&&(e=e.substring(0,e.indexOf("?"))),t=e.substring(0,e.lastIndexOf("/")+1)),t},e.prototype.mB=function(){return this.isLive},e.prototype.wN=function(){return this.DW.values().map(function(e){return e.bandwidth})},e.prototype.reset=function(){this.DW=new i},e.prototype.FW=function(){return this.LW},e.prototype.parse=function(t,r,i){this.reset(),this.SB=t,this.manifest=this._W.parse(r,this.NW(t)),this.isLive="static"!==this.manifest.type;for(var n=this.manifest.MW,s=this.manifest.BW[0],o=s.UW,a=0;a<o.length;a++){var u=s.xW[a],l=-1!=u.mimeType.indexOf("audio")?c.Ws.Ks:c.Ws.Ys;l===c.Ws.Ys&&u.HW&&this.qW(u.HW);for(var p=u.jW.VW,f=u.jW.media,d=parseInt(u.jW.GW),g=0;g<u.QW.length;g++){var v=u.QW[g],y=new h.KW;y.type=l,y.bandwidth=parseInt(v.bandwidth),y.GW=d,y.VW=n+""+p,y.VW=y.VW.replace(e.YW,""+y.bandwidth),i||this.te.debug("QualityLevel "+c.Ws[l]+" "+y.bandwidth);var m=n+""+f;m=m.replace(e.YW,""+y.bandwidth),y.zW=m;var E=parseInt(y.bandwidth+""),T=this.JW(u.jW.XW[0].WW,m,E,l);y.ZW=T.$W,y.eX=T.tX;var I=m.substr(0,m.lastIndexOf("="));I=I.substr(0,I.lastIndexOf("=")),this.DW.set(I,y)}}return this.LW=!0,this.rX(r,i)},e.prototype.JW=function(t,r,i,s){var o,a=new n,h=new n,c=0,l=0;return t.forEach(function(t){if(t.d){t.vp?c=parseInt(t.vp):c+=l;var n=parseInt(t.d),p=r.replace(e.iX,c+""),f=new u.$B(c,i,n,p,p);f.type=s,o&&(o.next=f),a.set(p,f),h.set(c,f),o=f;var d=0;t.r&&(d=parseInt(t.r));for(var g=0;g<d;g++){c+=n;var p=r.replace(e.iX,c+""),f=new u.$B(c,i,n,p,p);f.type=s,o&&(o.next=f),a.set(p,f),h.set(c,f),o=f}l=n}}),{$W:a,tX:h}},e.prototype.qW=function(e){if(e){if(e.nX){var t=e.nX;this.AB&&!this.AB.sX()&&this.AB instanceof l.oX||(this.AB=new l.oX(t.aX,t.hX,this.authenticationToken))}else this.AB&&this.AB instanceof p.cX||(this.AB=new p.cX);this.AB&&f.yB.iB&&this.AB.init()}},e.prototype.uX=function(e){var t=e.substr(0,e.lastIndexOf("="));return t=t.substr(0,t.lastIndexOf("=")),this.DW.get(t)},e.prototype.TB=function(e){return this.uX(e).ZW.get(e)},e.prototype.EB=function(e){var t=!1;return this.DW.forEach(function(r,i){r.VW===e&&(t=!0)}),t},e.prototype.IB=function(e){var t=this.TB(e);return null!=t?t.next:null},e.prototype.yk=function(e,t,r,i){var n;if(this.DW.forEach(function(e,t){e.bandwidth===i&&(n=e)}),n&&n.eX.has(e)&&n.eX.has(r)){for(var s=n.eX.get(e),o=n.eX.get(r),a=0,h=s;h&&h!=o;)a+=h.duration,h=h.next;return Math.round(a/(n.GW/1e3))}return 0},e.prototype.AN=function(t){var r=this,i=s.defer(),n=this.TB(t.Wu());if(!n||n.next)return i.resolve(!1),i.Te;var o=s.defer();if(this.AB)f.yB.iB?this.AB.CB().then(function(e){e?r.AB.decrypt(t.Hu).then(function(e){o.resolve(r.lX(e))}).fail(function(e){return o.reject(!0)}):o.reject(!1)}):o.reject(!1);else try{var a=this.lX(t.Hu);o.resolve(a)}catch(e){this.te.warn("error extracting duration",e),o.reject(!0)}return o.Te.then(function(t){if(!isNaN(t)){var s=n.id+t;r.te.debug("found next fragment: "+n.id+" -> "+s+" duration: "+t),r.DW.forEach(function(r,i){if(r.type===n.type){var o=r.zW.replace(e.iX,n.id+""),a=r.zW.replace(e.iX,s+""),h=r.ZW.get(o);if(!r.ZW.has(a)&&h){h.duration=t;var c=new u.$B(s,r.bandwidth,t,a,a);c.type=h.type,h.next=c,r.ZW.set(a,c),r.eX.set(s,c)}}})}i.resolve(!1)}).fail(function(e){r.te.debug("could not extract duration from "+t.Wu()+" [reevaluate: "+e+"]"),i.resolve(e)}),i.Te},e.prototype.lX=function(e){e instanceof Uint8Array&&(e=e.buffer);var t=ISOBoxer.pX(e),r=t.fetch("tfhd"),i=t.fetch("trun"),n=r?r.fX:0;if(i){var s=0;return i.dX.forEach(function(e){s+=e.gX}),isNaN(s)&&n>0&&(s=n*i.dX.length),s}},e.prototype.rX=function(e,t){var r=this.vX();if(!t&&(this.isLive||r||d.HiveConfig.Dash.DashRemoveBitrateSize))try{var i=new o({}),n=i.JB(e);this.isLive&&this.yX(n),(r||d.HiveConfig.Dash.DashRemoveBitrateSize)&&this.mX(n,r,d.HiveConfig.Dash.DashRemoveBitrateSize);return i.WB(n)}catch(e){this.te.error(e)}return e},e.prototype.yX=function(e){var t=this,r=Math.max(1,f.yB.aB),i=Math.max(1,f.yB.oB),n=0,s=0;return e.EX&&e.EX.TX&&e.EX.TX.xW.forEach(function(e){if("video"===e.IX&&e.jW&&e.jW.wX){for(var o=e.jW.wX.WW,a=parseInt(e.jW.SX),h=i*a,c=0,u=0,l=0;l<o.length&&r>0;l++){var p=o[l];c=l;var f=p.RX?parseInt(p.RX):1;f>r?(u=r,r=0):(r-=f,u=f)}for(var d=o.length-1;d>=0&&(h>0&&d>=c);d--){var p=o[d],f=p.RX?parseInt(p.RX):1,g=0;if(!p.bX)throw new Error("missing segment duration");g=parseInt(p.bX);var v=f*g;if((d>c||d==c&&0==u)&&h>=v)h-=v,o.splice(d,1),n+=f,s+=v;else{var y=Math.ceil(h/g);d==c&&(y=Math.min(y,f-u));var m=g*y;p.RX=f-y+"",h-=m,n+=y,s+=m}}t.te.debug("DASH trimmed "+n+" segments for total duration: "+s)}}),e},e.prototype.vX=function(){if(d.HiveConfig.Dash.DashFilterBitrates)try{var e=null;e="string"==typeof d.HiveConfig.Dash.DashFilterBitrates?d.HiveConfig.Dash.DashFilterBitrates.split(","):d.HiveConfig.Dash.DashFilterBitrates;var t=[];return e.forEach(function(e){var r=parseInt(e);isNaN(r)||t.push(r)}),t}catch(e){this.te.warn("[HiveJs] error parsing DashFilterBitrates: "+d.HiveConfig.Dash.DashFilterBitrates)}},e.prototype.mX=function(e,t,r){var i=this;if(e.EX&&e.EX.TX){var n=[];e.EX.TX.xW.forEach(function(e){if("video"===e.IX&&e.QW){var s=e.QW;s.sort(function(e,t){return isNaN(e.PX)&&(e.PX=parseInt(e.PX)),isNaN(t.PX)&&(t.PX=parseInt(t.PX)),e.PX-t.PX});for(var o=s.length-1;o>=0;o--)r&&(delete s[o].AX,delete s[o].CX),t&&-1==t.indexOf(o)?s.splice(o,1):n.push(s[o].PX);i.te.debug("DASH filtered-in bitrates: "+n.reverse().join(" ")+" - removed size: "+r)}})}},e.prototype.DB=function(e,t,r,i){var n;if(this.DW.forEach(function(e,t){e.bandwidth===i&&(n=e)}),n&&n.eX.has(e)&&n.eX.has(r)){for(var s=n.eX.get(e),o=n.eX.get(r),a=0,h=s;h&&h!=o;)a+=h.duration,h=h.next;return Math.round(a/(n.GW/1e3))}return 0},e.prototype.FB=function(e,t){var r;return this.DW.forEach(function(e,i){e.bandwidth===t&&(r=e)}),r&&r.eX.has(e)?r.eX.get(e):null},e}();g.YW="$Bandwidth$",g.iX="$Time$",t.vB=g},function(e,t,r){/*!
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */
var i=r(142),n=r(81);DashParser=function(){var e=/^([-])?P(([\d.]*)Y)?(([\d.]*)M)?(([\d.]*)D)?T?(([\d.]*)H)?(([\d.]*)M)?(([\d.]*)S)?/,t=/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\.[0-9]*)?)?(?:([+-])([0-9]{2})([0-9]{2}))?/,r=/^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/,s=[{type:"duration",test:function(t){for(var r=["minBufferTime","mediaPresentationDuration","minimumUpdatePeriod","timeShiftBufferDepth","maxSegmentDuration","maxSubsegmentDuration","suggestedPresentationDelay","start","starttime","duration"],i=r.length,n=0;n<i;n++)if(t.nodeName===r[n])return e.test(t.value);return!1},UB:function(t){var r=e.exec(t),i=31536e3*parseFloat(r[2]||0)+2592e3*parseFloat(r[4]||0)+86400*parseFloat(r[6]||0)+3600*parseFloat(r[8]||0)+60*parseFloat(r[10]||0)+parseFloat(r[12]||0);return void 0!==r[1]&&(i=-i),i}},{type:"datetime",test:function(e){return t.test(e.value)},UB:function(e){var r,i=t.exec(e);if(r=Date.UTC(parseInt(i[1],10),parseInt(i[2],10)-1,parseInt(i[3],10),parseInt(i[4],10),parseInt(i[5],10),i[6]&&parseInt(i[6],10)||0,i[7]&&1e3*parseFloat(i[7])||0),i[9]&&i[10]){var n=60*parseInt(i[9],10)+parseInt(i[10],10);r+=("+"===i[8]?-1:1)*n*60*1e3}return new Date(r)}},{type:"numeric",test:function(e){return r.test(e.value)},UB:function(e){return parseFloat(e)}}],o=function(){var e,t,r,i;return i=[{name:"profiles",ud:!1},{name:"width",ud:!1},{name:"height",ud:!1},{name:"sar",ud:!1},{name:"frameRate",ud:!1},{name:"audioSamplingRate",ud:!1},{name:"mimeType",ud:!1},{name:"segmentProfiles",ud:!1},{name:"codecs",ud:!1},{name:"maximumSAPPeriod",ud:!1},{name:"startsWithSap",ud:!1},{name:"maxPlayoutRate",ud:!1},{name:"codingDependency",ud:!1},{name:"scanType",ud:!1},{name:"FramePacking",ud:!0},{name:"AudioChannelConfiguration",ud:!0},{name:"ContentProtection",ud:!0}],e={},e.name="AdaptationSet",e.kX=!1,e.isArray=!0,e.parent=null,e.children=[],e.properties=i,t={},t.name="Representation",t.kX=!1,t.isArray=!0,t.parent=e,t.children=[],t.properties=i,e.children.push(t),r={},r.name="SubRepresentation",r.kX=!1,r.isArray=!0,r.parent=t,r.children=[],r.properties=i,t.children.push(r),e},a=function(){var e,t,r,i;return i=[{name:"SegmentBase",ud:!0},{name:"SegmentTemplate",ud:!0},{name:"SegmentList",ud:!0}],e={},e.name="Period",e.kX=!1,e.isArray=!0,e.parent=null,e.children=[],e.properties=i,t={},t.name="AdaptationSet",t.kX=!1,t.isArray=!0,t.parent=e,t.children=[],t.properties=i,e.children.push(t),r={},r.name="Representation",r.kX=!1,r.isArray=!0,r.parent=t,r.children=[],r.properties=i,t.children.push(r),e},h=function(){var e,t,r,i,n;return n=[{name:"BaseURL",ud:!0,OX:function(e,t){return 0===t.indexOf("http://")?t:e+t}}],e={},e.name="mpd",e.kX=!0,e.isArray=!0,e.parent=null,e.children=[],e.properties=n,t={},t.name="Period",t.kX=!1,t.isArray=!0,t.parent=null,t.children=[],t.properties=n,e.children.push(t),r={},r.name="AdaptationSet",r.kX=!1,r.isArray=!0,r.parent=t,r.children=[],r.properties=n,t.children.push(r),i={},i.name="Representation",i.kX=!1,i.isArray=!0,i.parent=r,i.children=[],i.properties=n,r.children.push(i),e},c=function(){var e=[];return e.push(o()),e.push(a()),e.push(h()),e};return{parse:function(e,t){var r,o=new n(s,"",!0),a=new i(c());new Date;try{r=o.JB(e),new Date,r.hasOwnProperty("BaseURL")?(r.MW=r._X[0],0!==r.MW.toString().indexOf("http")&&(r.MW=t+r.MW)):r.MW=t,r.hasOwnProperty("Location")&&(r.Location=r.NX[0]),a.DX(r),new Date}catch(t){return console.log("parsing the manifest failed","parse",e),null}return r}}}},function(e,t,r){var n=function(e){var t;for(t=[],i=0,len=e.length;i<len;i+=1)e[i].kX?t.push("root"):t.push(e[i].name);var r=function(e,t){var r;if(null!==e&&null!==t)for(r in e)e.hasOwnProperty(r)&&(t.hasOwnProperty(r)||(t[r]=e[r]))},n=function(e,t,i){var n,s,o,a,h;if(null!==e&&0!==e.length)for(n=0,s=e.length;n<s;n+=1)o=e[n],t.hasOwnProperty(o.name)&&(i.hasOwnProperty(o.name)?o.ud&&(a=t[o.name],h=i[o.name],"object"==typeof a&&"object"==typeof h?r(a,h):null!=o.OX?i[o.name]=o.OX(a,h):i[o.name]=a+h):i[o.name]=t[o.name])},s=function(e,t){var r,i,o,a,h,c,u,l=e;if(null!==l.children&&0!==l.children.length)for(r=0,i=l.children.length;r<i;r+=1)if(c=l.children[r],t.hasOwnProperty(c.name))if(c.isArray)for(h=t[c.name+"_asArray"],o=0,a=h.length;o<a;o+=1)u=h[o],n(l.properties,t,u),s(c,u);else u=t[c.name],n(l.properties,t,u),s(c,u)},o=function(r){var i,n,a,h,c,u,l;if(null===r)return r;if("object"!=typeof r)return r;for(i=0,n=t.length;i<n;i+=1)"root"===t[i]&&(c=e[i],u=r,s(c,u));for(h in r)if(r.hasOwnProperty(h)){if(-1!==(a=t.indexOf(h)))if(c=e[a],c.isArray)for(l=r[h+"_asArray"],i=0,n=l.length;i<n;i+=1)u=l[i],s(c,u);else u=r[h],s(c,u);o(r[h])}return r};return{DX:o}};e.t=n},function(e,t,r){/*! codem-isoboxer v0.2.2 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */
"undefined"==typeof ISOBoxer&&(ISOBoxer={}),ISOBoxer.pX=function(e){return new i(e).parse()},ISOBoxer.fn={},ISOBoxer.fn.FX=function(e,t){var r=t||"utf-8";if("undefined"!=typeof TextDecoder)return new TextDecoder(r).decode(e);var i=[],n=0;if("utf-8"===r)for(;n<e.byteLength;){var s=e.getUint8(n++);s<128||(s<224?(s=(31&s)<<6,s|=63&e.getUint8(n++)):s<240?(s=(15&s)<<12,s|=(63&e.getUint8(n++))<<6,s|=63&e.getUint8(n++)):(s=(7&s)<<18,s|=(63&e.getUint8(n++))<<12,s|=(63&e.getUint8(n++))<<6,s|=63&e.getUint8(n++))),i.push(String.fromCharCode(s))}else for(;n<e.byteLength;)i.push(String.fromCharCode(e.getUint8(n++)));return i.join("")},t.pX=ISOBoxer.pX,t.fn=ISOBoxer.fn,ISOBoxer.LX=function(e){this.offset=void 0===e?0:e};var i=function(e){this.MX=new DataView(e),this.BX=new ISOBoxer.LX,this.UX=[]};i.prototype.fetch=function(e){var t=this.xX(e,!0);return t.length?t[0]:null},i.prototype.xX=function(e,t){var r=[];return i.HX.call(this,e,r,t),r},i.prototype.parse=function(){for(this.BX.offset=0,this.UX=[];this.BX.offset<this.MX.byteLength;){var e=n.parse(this);if(void 0===e.type)break;this.UX.push(e)}return this},i.HX=function(e,t,r){this.type&&this.type==e&&t.push(this);for(var n in this.UX){if(t.length&&r)return;i.HX.call(this.UX[n],e,t,r)}};var n=function(){this.BX=new ISOBoxer.LX};n.parse=function(e){var t=new n;return t.qX=e.BX.offset,t.VX=e.VX?e.VX:e,t.MX=e.MX,t.jX=e,t.GX(),e.BX.offset=t.MX.byteOffset+t.MX.byteLength,t},n.prototype.QX=function(e){var t=null;switch(e){case 8:t=this.MX.getInt8(this.BX.offset-this.MX.byteOffset);break;case 16:t=this.MX.getInt16(this.BX.offset-this.MX.byteOffset);break;case 32:t=this.MX.getInt32(this.BX.offset-this.MX.byteOffset);break;case 64:var r=this.MX.getInt32(this.BX.offset-this.MX.byteOffset),i=this.MX.getInt32(this.BX.offset-this.MX.byteOffset+4);t=r*Math.pow(2,32)+i}return this.BX.offset+=e>>3,t},n.prototype.KX=function(e){var t=null;switch(e){case 8:t=this.MX.getUint8(this.BX.offset-this.MX.byteOffset);break;case 16:t=this.MX.getUint16(this.BX.offset-this.MX.byteOffset);break;case 24:var r=this.MX.getUint16(this.BX.offset-this.MX.byteOffset),i=this.MX.getUint8(this.BX.offset-this.MX.byteOffset+2);t=(r<<8)+i;break;case 32:t=this.MX.getUint32(this.BX.offset-this.MX.byteOffset);break;case 64:var r=this.MX.getUint32(this.BX.offset-this.MX.byteOffset),i=this.MX.getUint32(this.BX.offset-this.MX.byteOffset+4);t=r*Math.pow(2,32)+i}return this.BX.offset+=e>>3,t},n.prototype.YX=function(e){for(var t="",r=0;r<e;r++){var i=this.KX(8);t+=String.fromCharCode(i)}return t},n.prototype.zX=function(){for(var e="";;){var t=this.KX(8);if(0==t)break;e+=String.fromCharCode(t)}return e},n.prototype.JX=function(e){return this.KX(e/2)+this.KX(e/2)/Math.pow(2,e/2)},n.prototype.GX=function(){if(this.BX.offset=this.qX,this.qX+8>this.MX.buffer.byteLength)return void(this.VX.WX=!0);switch(this.size=this.KX(32),this.type=this.YX(4),1==this.size&&(this.XX=this.KX(64)),"uuid"==this.type&&(this.ZX=this.YX(16)),this.size){case 0:this.MX=new DataView(this.MX.buffer,this.qX,this.MX.byteLength-this.BX.offset);break;case 1:this.qX+this.size>this.MX.buffer.byteLength?(this.WX=!0,this.VX.WX=!0):this.MX=new DataView(this.MX.buffer,this.qX,this.XX);break;default:this.qX+this.size>this.MX.buffer.byteLength?(this.WX=!0,this.VX.WX=!0):this.MX=new DataView(this.MX.buffer,this.qX,this.size)}!this.WX&&this.$X[this.type]&&this.$X[this.type].call(this)},n.prototype.eZ=function(){this.version=this.KX(8),this.tZ=this.KX(24)},n.prototype.$X={},["moov","trak","tref","mdia","minf","stbl","edts","dinf","mvex","moof","traf","mfra","udta","meco","strk","vttc"].forEach(function(e){n.prototype.$X[e]=function(){for(this.UX=[];this.BX.offset-this.MX.byteOffset<this.MX.byteLength;)this.UX.push(n.parse(this))}}),n.prototype.$X.rZ=function(){this.eZ(),this.iZ=this.KX(32),this.entries=[];for(var e=1;e<=this.iZ;e++){var t={};1==this.version?(t.nZ=this.KX(64),t.sZ=this.QX(64)):(t.nZ=this.KX(32),t.sZ=this.QX(32)),t.oZ=this.QX(16),t.aZ=this.QX(16),this.entries.push(t)}},n.prototype.$X.hZ=function(){this.eZ(),this.cZ=this.zX(),this.value=this.zX(),this.GW=this.KX(32),this.uZ=this.KX(32),this.lZ=this.KX(32),this.id=this.KX(32),this.pZ=new DataView(this.MX.buffer,this.BX.offset,this.MX.byteLength-(this.BX.offset-this.qX))},n.prototype.$X.fZ=n.prototype.$X.dw=function(){this.data=new DataView(this.MX.buffer,this.BX.offset,this.MX.byteLength-(this.BX.offset-this.qX))},n.prototype.$X.dZ=n.prototype.$X.gZ=function(){for(this.vZ=this.YX(4),this.yZ=this.KX(32),this.mZ=[];this.BX.offset-this.MX.byteOffset<this.MX.byteLength;)this.mZ.push(this.YX(4))},n.prototype.$X.EZ=function(){this.eZ(),this.TZ=this.KX(32),this.IZ=this.YX(4),this.tT=[this.KX(32),this.KX(32),this.KX(32)],this.name=this.zX()},n.prototype.$X.wZ=function(){this.data=new DataView(this.MX.buffer,this.BX.offset,this.MX.byteLength-(this.BX.offset-this.qX))},n.prototype.$X.SZ=function(){this.eZ(),1==this.version?(this.RZ=this.KX(64),this.bZ=this.KX(64),this.GW=this.KX(32),this.duration=this.KX(64)):(this.RZ=this.KX(32),this.bZ=this.KX(32),this.GW=this.KX(32),this.duration=this.KX(32));var e=this.KX(16);this.pad=e>>15,this.language=String.fromCharCode(96+(e>>10&31),96+(e>>5&31),96+(31&e)),this.TZ=this.KX(16)},n.prototype.$X.PZ=function(){this.eZ(),this.AZ=this.KX(32)},n.prototype.$X.CZ=function(){this.eZ(),1==this.version?(this.RZ=this.KX(64),this.bZ=this.KX(64),this.GW=this.KX(32),this.duration=this.KX(64)):(this.RZ=this.KX(32),this.bZ=this.KX(32),this.GW=this.KX(32),this.duration=this.KX(32)),this.rate=this.JX(32),this.volume=this.JX(16),this.kZ=this.KX(16),this.OZ=[this.KX(32),this.KX(32)],this.matrix=[];for(var e=0;e<9;e++)this.matrix.push(this.JX(32));this.TZ=[];for(var e=0;e<6;e++)this.TZ.push(this.KX(32));this._Z=this.KX(32)},n.prototype.$X.NZ=function(){var e=new DataView(this.MX.buffer,this.BX.offset,this.MX.byteLength-(this.BX.offset-this.qX));this.DZ=ISOBoxer.fn.FX(e)},n.prototype.$X.FZ=function(){this.eZ(),this.LZ=this.KX(32),this.GW=this.KX(32),0==this.version?(this.MZ=this.KX(32),this.BZ=this.KX(32)):(this.MZ=this.KX(64),this.BZ=this.KX(64)),this.tT=this.KX(16),this.UZ=this.KX(16),this.xZ=[];for(var e=0;e<this.UZ;e++){var t={},r=this.KX(32);t.HZ=r>>31&1,t.qZ=2147483647&r,t.VZ=this.KX(32);var i=this.KX(32);t.jZ=i>>31&1,t.GZ=i>>28&7,t.QZ=268435455&i,this.xZ.push(t)}},n.prototype.$X.KZ=function(){this.eZ(),this.YZ=this.KX(32),this.zZ=[];for(var e=0;e<this.YZ;e++){var t={};t.JZ=this.KX(32),t.WZ=[];for(var r=0;r<t.JZ;r++){var i={};i.level=this.KX(8),i.XZ=this.KX(24),t.WZ.push(i)}this.zZ.push(t)}},n.prototype.$X.ZZ=function(){this.eZ(),1==this.version?this.$Z=this.KX(64):this.$Z=this.KX(32)},n.prototype.$X.e$=function(){this.eZ(),this.t$=this.KX(32),1&this.tZ&&(this.r$=this.KX(64)),2&this.tZ&&(this.i$=this.KX(32)),8&this.tZ&&(this.fX=this.KX(32)),16&this.tZ&&(this.n$=this.KX(32)),32&this.tZ&&(this.s$=this.KX(32))},n.prototype.$X.o$=function(){this.eZ(),1==this.version?(this.RZ=this.KX(64),this.bZ=this.KX(64),this.t$=this.KX(32),this.kZ=this.KX(32),this.duration=this.KX(64)):(this.RZ=this.KX(32),this.bZ=this.KX(32),this.t$=this.KX(32),this.kZ=this.KX(32),this.duration=this.KX(32)),this.OZ=[this.KX(32),this.KX(32)],this.a$=this.KX(16),this.h$=this.KX(16),this.volume=this.JX(16),this.c$=this.KX(16),this.matrix=[];for(var e=0;e<9;e++)this.matrix.push(this.JX(32));this.width=this.KX(32),this.height=this.KX(32)},n.prototype.$X.u$=function(){this.eZ(),this.l$=this.KX(32),1&this.tZ&&(this.p$=this.QX(32)),4&this.tZ&&(this.f$=this.KX(32)),this.dX=[];for(var e=0;e<this.l$;e++){var t={};256&this.tZ&&(t.gX=this.KX(32)),512&this.tZ&&(t.d$=this.KX(32)),1024&this.tZ&&(t.g$=this.KX(32)),2048&this.tZ&&(0==this.version?t.v$=this.KX(32):t.v$=this.QX(32)),this.dX.push(t)}},n.prototype.$X.y$=function(){var e=new DataView(this.MX.buffer,this.BX.offset,this.MX.byteLength-(this.BX.offset-this.qX));this.m$=ISOBoxer.fn.FX(e)},n.prototype.$X.E$=function(){var e=new DataView(this.MX.buffer,this.BX.offset,this.MX.byteLength-(this.BX.offset-this.qX));this.config=ISOBoxer.fn.FX(e)},n.prototype.$X.T$=function(){}},function(e,t,r){"use strict";var i=function(){function e(){}return e}();t.KW=i},function(e,t,r){"use strict";var i=r(2),n=r(0),s=function(){function e(e,t){this.name=e,this.I$=t}return e}(),o=function(){function e(e,t,r){this.mn="[AES Manager] ",this.w$="AES-CBC",this.xn=!1,this.te=n.Framework&&n.Framework.resolve(n.Framework.q.I)?n.Framework.resolve(n.Framework.q.I).log():console,this.S$=e,this.R$=t,this.te.debug(this.mn+"Starting Dash AES Manager"),r&&(this.b$=r)}return e.prototype.init=function(){var e=this;try{this.P$();var t=i.defer();this.A$().then(function(){return t.resolve(!0)}).fail(function(r){e.te.warn(e.mn+r),t.resolve(!1)}),this.C$=t.Te}catch(e){this.te.warn(this.mn+"Error initializing AES Manager",e)}},e.prototype.CB=function(){return this.C$?this.C$:i.resolve(!1)},e.prototype.A$=function(){var e=this;if(this.k$)return this.k$;var t=i.defer();return this.O$().then(function(r){window.crypto.subtle.importKey("raw",r,{name:e.w$},!1,["decrypt"]).then(function(e){t.resolve(e)},function(e){t.reject("error importing key: "+e.toString())})}).fail(function(e){return t.reject(e)}),this.k$=t.Te,this.k$},e.prototype.P$=function(){for(var e=2,t=this.R$.length,r=[];e<t;e+=2)r.push(parseInt(this.R$.substr(e,2),16));this.I$=new Uint8Array(r)},e.prototype.decrypt=function(e){var t=this,r=i.defer(),n=new s(this.w$,this.I$);return this.k$.then(function(t){return window.crypto.subtle.decrypt(n,t,e).then(function(e){r.resolve(e)})}).catch(function(e){t.te.warn(t.mn+"decrypt error",e),t.xn=!0,t.C$=i.resolve(!1),r.reject(e)}),r.Te},e.prototype.O$=function(){var e=i.defer(),t=new XMLHttpRequest;return t.responseType="arraybuffer",t.open("GET",this.S$),this.b$&&t.setRequestHeader("Authorization",this.b$),t.onload=function(){if(200===t.status){var r=new Uint8Array(t.response);e.resolve(r)}else e.reject("error downloading key - status: "+t.status)},t.onerror=function(){e.reject("error downloading key")},t.send(),e.Te},e.prototype.sX=function(){return this.xn},e}();t.oX=o},function(e,t,r){"use strict";var i=r(2),n=function(){function e(){}return e.prototype.init=function(){},e.prototype.CB=function(){return i.resolve(!1)},e.prototype.decrypt=function(e){return i.reject("unsupported")},e.prototype.sX=function(){return!1},e}();t.cX=n},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(83),s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(n.lU);t.dB=s},function(e,t,r){"use strict";var i=r(4),n=r(149),s=r(1),o=r(150),a=r(82),h=r(0),c=r(6),u=r(84),l=function(){function e(){this.FU=new s,this._$=null,this.N$=null,this.te=(h.Framework.resolve(h.Framework.q.I)||console).log()}return e.prototype.parse=function(e,t){var r=new n.D$;if(r.push(t),r.manifest.playlists)this.F$(e,r.manifest);else{var i=this.L$(e,r.manifest);if(i&&(this.live=!i.M$),this.live)return this.B$(r.manifest,t)}return t},e.prototype.FB=function(e,t){if(this.LU.has(t)){return this.LU.get(t).eX.get(e)}return null},e.prototype.wN=function(){return this.FU.values().map(function(e){return e.bitrate})},e.prototype.isLive=function(){return this.live},e.prototype.TB=function(e){return null==this.ZW?null:this.ZW.get(e)},e.prototype.IB=function(e){var t=this.ZW.get(e);if(t){var r=t.bitrate;return this.LU.get(r).eX.get(t.id+1)}return null},e.prototype.NU=function(e){return this.FU.has(e)},e.prototype.DU=function(){return this.U$},e.prototype.F$=function(e,t){var r=this;this.U$=e,this.x$=t,this.FU=new s,this.ZW=new s,this.LU=new s,this.x$.playlists.forEach(function(t){var i=c.fn.cn(e,t.uri),n=t.attributes.BANDWIDTH,s=new o.H$(n,t.uri,i);r.FU.set(i,s),r.LU.set(n,s)})},e.prototype.L$=function(e,t){var r=this,n=this.FU.get(e);if(!n)return void this.te.warn("Playlist url doesn't match any playlist in the master file");var s=null!=t.q$?t.q$:0,o=new Array,h=s-1,u=n.eX.get(h);return t.MU.forEach(function(t){var h=c.fn.cn(e,t.uri),l=Math.round(1e3*t.duration),p=n.bitrate;Number.isInteger(p)||(i.ErrorMonitor.gi().di("Segment Bitrate is a Float",{bitrate:p}),p=Math.round(p));var f=new a.$B(s,p,l,t.uri,h);r.ZW.set(h,f),n.eX.set(s,f),o.push(f),u&&(u.next=f),u=f,s++}),this._$=n,n.update(t.q$,t.V$,t.M$,t.j$,o),n},e.prototype.B$=function(e,t){for(var r=t.split("\n"),i=Math.max(1,u.OU.wU),n=null,s=0,o=e.MU.length-1;o>=i-1;o--){var a=e.MU[o];if(n=a.uri,s>=u.OU.IU)break;s+=a.duration}var h="";for(o=0;o<r.length&&(h=h+r[o]+"\n",r[o].trim()!==n);o++);return h},e}();t.kU=l},function(e,t,r){var i=function(){var e={};e.yg={},e.yg.create=Object.create||function(e){function t(){}return t.prototype=e,new t},e.yg.G$=function(e,t,r){for(var i in e)hasOwnProp.call(e,i)&&t.call(r||this,i,e[i])},e.yg.ud=function(e,t){if(!t)return e;for(var r in t)hasOwnProp.call(t,r)&&(e[r]=t[r]);return e},e.yg.Q$=function(t,r){var i,n,s;t=e.yg.rP(t);for(i in r)hasOwnProp.call(r,i)&&(n=t[i],s=r[i],e.yg.K$(n)&&e.yg.K$(s)?t[i]=e.yg.Q$(n,s):t[i]=r[i]);return t},e.yg.rP=function(t){return e.yg.ud({},t)},e.yg.K$=function(e){return!!e&&"object"==typeof e&&"[object Object]"===e.toString()&&e.constructor===Object},e.yg.isArray=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},mergeOptions=function(t,r){var i,n,s;t=e.yg.rP(t);for(i in r)r.hasOwnProperty(i)&&(n=t[i],s=r[i],e.yg.K$(n)&&e.yg.K$(s)?t[i]=e.util.Y$(n,s):t[i]=r[i]);return t},e.Y$=mergeOptions;var t=function(){this.init=function(){var e={};this.on=function(t,r){e[t]||(e[t]=[]),e[t].push(r)},this.off=function(t,r){var i;return!!e[t]&&(i=e[t].indexOf(r),e[t].splice(i,1),i>-1)},this.z$=function(t){var r,i,n,s;if(r=e[t])for(s=Array.prototype.slice.call(arguments,1),n=r.length,i=0;i<n;++i)r[i].apply(this,s)},this.J$=function(){e={}}}};t.prototype.W$=function(e){this.on("data",function(t){e.push(t)})},e.X$=t;var r,i,n,s=function(){},o=function(){return new RegExp('(?:^|,)((?:[^=]*)=(?:"[^"]*"|[^,]*))')}(),a=function(e){for(var t,r=e.split(o),i=r.length,n={};i--;)""!==r[i]&&(t=/([^=]*)=(.*)/.exec(r[i]).slice(1),t[0]=t[0].replace(/^\s+|\s+$/g,""),t[1]=t[1].replace(/^\s+|\s+$/g,""),t[1]=t[1].replace(/^['"](.*)['"]$/g,"$1"),n[t[0]]=t[1]);return n},t=e.X$;return r=function(){var e="";r.prototype.init.call(this),this.push=function(t){var r;for(e+=t,r=e.indexOf("\n");r>-1;r=e.indexOf("\n"))this.z$("data",e.substring(0,r)),e=e.substring(r+1)}},r.prototype=new t,i=function(){i.prototype.init.call(this)},i.prototype=new t,i.prototype.push=function(e){var t,r;if(e=e.replace(/^\s+|\s+$/g,""),0!==e.length){if("#"!==e[0])return void this.z$("data",{type:"uri",uri:e});if(0!==e.indexOf("#EXT"))return void this.z$("data",{type:"comment",text:e.slice(1)});if(e=e.replace("\r",""),t=/^#EXTM3U/.exec(e))return void this.z$("data",{type:"tag",Z$:"m3u"});if(t=/^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(e))return r={type:"tag",Z$:"inf"},t[1]&&(r.duration=parseFloat(t[1])),t[2]&&(r.title=t[2]),void this.z$("data",r);if(t=/^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(e))return r={type:"tag",Z$:"targetduration"},t[1]&&(r.duration=parseInt(t[1],10)),void this.z$("data",r);if(t=/^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(e))return r={type:"tag",Z$:"totalduration"},t[1]&&(r.duration=parseInt(t[1],10)),void this.z$("data",r);if(t=/^#EXT-X-VERSION:?([0-9.]*)?/.exec(e))return r={type:"tag",Z$:"version"},t[1]&&(r.version=parseInt(t[1],10)),void this.z$("data",r);if(t=/^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(e))return r={type:"tag",Z$:"media-sequence"},t[1]&&(r.number=parseInt(t[1],10)),void this.z$("data",r);if(t=/^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(e))return r={type:"tag",Z$:"discontinuity-sequence"},t[1]&&(r.number=parseInt(t[1],10)),void this.z$("data",r);if(t=/^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(e))return r={type:"tag",Z$:"playlist-type"},t[1]&&(r.$$=t[1]),void this.z$("data",r);if(t=/^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(e))return r={type:"tag",Z$:"byterange"},t[1]&&(r.length=parseInt(t[1],10)),t[2]&&(r.offset=parseInt(t[2],10)),void this.z$("data",r);if(t=/^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(e))return r={type:"tag",Z$:"allow-cache"},t[1]&&(r.tk=!/NO/.test(t[1])),void this.z$("data",r);if(t=/^#EXT-X-STREAM-INF:?(.*)$/.exec(e))return r={type:"tag",Z$:"stream-inf"},t[1]&&(r.attributes=a(t[1]),r.attributes.e0&&function(){var e=r.attributes.e0.split("x"),t={};e[0]&&(t.width=parseInt(e[0],10)),e[1]&&(t.height=parseInt(e[1],10)),r.attributes.e0=t}(),r.attributes.BANDWIDTH&&(r.attributes.BANDWIDTH=parseInt(r.attributes.BANDWIDTH,10)),r.attributes["t0"]&&(r.attributes["t0"]=parseInt(r.attributes["t0"],10))),void this.z$("data",r);if(t=/^#EXT-X-ENDLIST/.exec(e))return void this.z$("data",{type:"tag",Z$:"endlist"});if(t=/^#EXT-X-DISCONTINUITY/.exec(e))return void this.z$("data",{type:"tag",Z$:"discontinuity"});if(t=/^#EXT-X-KEY:?(.*)$/.exec(e))return r={type:"tag",Z$:"key"},t[1]&&(r.attributes=a(t[1]),r.attributes.hX&&("0x"===r.attributes.hX.substring(0,2)&&(r.attributes.hX=r.attributes.hX.substring(2)),r.attributes.hX=r.attributes.hX.match(/.{8}/g),r.attributes.hX[0]=parseInt(r.attributes.hX[0],16),r.attributes.hX[1]=parseInt(r.attributes.hX[1],16),r.attributes.hX[2]=parseInt(r.attributes.hX[2],16),r.attributes.hX[3]=parseInt(r.attributes.hX[3],16),r.attributes.hX=new Uint32Array(r.attributes.hX))),void this.z$("data",r);this.z$("data",{type:"tag",data:e.slice(4,e.length)})}},n=function(){var t,o=this,a=[],h={};n.prototype.init.call(this),this.r0=new r,this.i0=new i,this.r0.W$(this.i0),this.manifest={n0:!0},this.i0.on("data",function(r){({tag:function(){(({s0:function(){this.manifest.n0=r.tk,"allowed"in r||(this.z$("info",{message:"defaulting allowCache to YES"}),this.manifest.n0=!0)},o0:function(){var e={};"length"in r&&(h.o0=e,e.length=r.length,"offset"in r||(this.z$("info",{message:"defaulting offset to zero"}),r.offset=0)),"offset"in r&&(h.o0=e,e.offset=r.offset)},a0:function(){this.manifest.M$=!0},h0:function(){"mediaSequence"in this.manifest||(this.manifest.q$=0,this.z$("info",{message:"defaulting media sequence to zero"})),"discontinuitySequence"in this.manifest||(this.manifest.V$=0,this.z$("info",{message:"defaulting discontinuity sequence to zero"})),r.duration>=0&&(h.duration=r.duration),this.manifest.MU=a},key:function(){return r.attributes?"NONE"===r.attributes.c0?void(t=null):r.attributes.EE?(r.attributes.c0||this.z$("warn",{message:"defaulting key method to AES-128"}),t={method:r.attributes.c0||"AES-128",uri:r.attributes.EE},void(void 0!==r.attributes.hX&&(t.I$=r.attributes.hX))):void this.z$("warn",{message:"ignoring key declaration without URI"}):void this.z$("warn",{message:"ignoring key declaration without attribute list"})},u0:function(){if(!isFinite(r.number))return void this.z$("warn",{message:"ignoring invalid media sequence: "+r.number});this.manifest.q$=r.number},l0:function(){if(!isFinite(r.number))return void this.z$("warn",{message:"ignoring invalid discontinuity sequence: "+r.number});this.manifest.V$=r.number},p0:function(){if(!/VOD|EVENT/.test(r.$$))return void this.z$("warn",{message:"ignoring unknown playlist type: "+r.f0});this.manifest.$$=r.$$},d0:function(){if(this.manifest.playlists=a,!r.attributes)return void this.z$("warn",{message:"ignoring empty stream-inf attributes"});h.attributes||(h.attributes={}),h.attributes=e.Y$(h.attributes,r.attributes)},g0:function(){h.g0=!0},v0:function(){if(!isFinite(r.duration)||r.duration<0)return void this.z$("warn",{message:"ignoring invalid target duration: "+r.duration});this.manifest.j$=r.duration},y0:function(){if(!isFinite(r.duration)||r.duration<0)return void this.z$("warn",{message:"ignoring invalid total duration: "+r.duration});this.manifest.m0=r.duration}})[r.Z$]||s).call(o)},uri:function(){h.uri=r.uri,a.push(h),!this.manifest.j$||"duration"in h||(this.z$("warn",{message:"defaulting segment duration to the target duration"}),h.duration=this.manifest.j$),t&&(h.key=t),h={}},E0:function(){}})[r.type].call(o)})},n.prototype=new t,n.prototype.push=function(e){this.r0.push(e)},n.prototype.end=function(){this.r0.push("\n")},e.T0=r,e.I0=i,e.D$=n,e}();e.t=i},function(e,t,r){"use strict";var i=r(1),n=function(){function e(e,t,r){this.eX=new i,this.bitrate=e,this.uri=t,this.wB=r}return e.prototype.update=function(e,t,r,i,n){this.q$=e,this.V$=t,this.M$=r,this.j$=i,this.MU=n,this.updated=!0},e}();t.H$=n},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(83),s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(n.lU);t.AU=s},function(e,t,r){"use strict";var i=r(15),n=r(0),s=r(3),o=r(2),a=r(5),h=a.Rt.Pi,c=function(){function e(){this.te=n.Framework.resolve(n.Framework.q.I).log(),this.w0=n.Framework.resolve(i.Pa.na),h&&s.ni.Sr.Ir&&(this.S0=n.Framework.resolve(i.Pa.sa))}return e.prototype.init=function(e,t){this.w0.init(e,t),h&&s.ni.Sr.Ir&&this.S0.init(e,t)},e.prototype.put=function(e){var t=this,r=o.defer(),i=!1;return!e.Gu.isLive()&&h&&s.ni.Sr.Ir?this.S0.put(e).then(function(e){i=e}).fail(function(e){t.te.error(e)}).finally(function(){r.resolve(i)}):this.w0.put(e).then(function(e){i=e}).fail(function(e){t.te.error(e)}).finally(function(){r.resolve(i)}),r.Te},e.prototype.get=function(e){var t=this,r=o.defer(),i=null;return this.contains(e).then(function(n){n?t.w0.get(e).then(function(r){null==r&&h&&s.ni.Sr.Ir?t.S0.get(e).then(function(e){i=e}):i=r}).fail(function(e){t.te.error(e)}).finally(function(){r.resolve(i)}):r.resolve(i)}).fail(function(e){t.te.error(e)}).finally(function(){r.resolve(i)}),r.Te},e.prototype.contains=function(e){var t=this,r=o.defer(),i=!1;return this.w0.contains(e).then(function(r){!i&&h&&s.ni.Sr.Ir?t.S0.contains(e).then(function(e){i=e}):i=r}).fail(function(e){t.te.error(e)}).finally(function(){r.resolve(i)}),r.Te},e.prototype.hk=function(e){return!e&&h&&s.ni.Sr.Ir?this.S0.hk(e):this.w0.hk(e)},e.prototype.JU=function(e){var t=this,r=o.defer(),i=[];return!e&&h&&s.ni.Sr.Ir?this.S0.JU(e).then(function(e){i=e}).fail(function(e){t.te.error(e)}).finally(function(){r.resolve(i)}):this.w0.JU(e).then(function(e){i=e}).fail(function(e){t.te.error(e)}).finally(function(){r.resolve(i)}),r.Te},e.prototype.XU=function(){this.w0.XU()},e}();t.Sr=c},function(e,t,r){"use strict";var i=r(1),n=r(22),s=r(6),o=r(3),a=r(0),h=r(10),c=function(){function e(){this.R0=new i,this.ji=new s.fn.Zi}return e.prototype.init=function(e){this.te=a.Framework.resolve(a.Framework.q.I).log(e.sessionId),this.b0=e.TC},e.prototype.TI=function(e){var t=this,r=a.Framework.resolve(a.Framework.q.B),i=!1,n=e.Ju(),c=e.Vu,u=e.Wu();e.xhr=r,e.Mu._u=a.Framework.time(),this.te.debug("FRL ISSUE REQ FOR FRAGMENT "+e.Qu.toString()+"-"+e.Mu.Ru+" ["+h.Ws[e.Yu()]+"] TO FALLBACK "),e.Qu.wR()&&(r.responseType="arraybuffer"),this.P0(e.type)&&c.range&&e.Yu()!=h.Ws.zs&&r.setRequestHeader("Range","bytes="+c.range),o.ni.j._r&&this.A0(e.type)&&0!=e.Mu.Ru&&(this.te.info("SET RANGE bytes="+e.Mu.Ru+"-"),r.setRequestHeader("Range","bytes="+e.Mu.Ru+"-")),c.zD.forEach(function(e){"range"!==e.key.toLowerCase()&&r.setRequestHeader(e.key,e.value)}),c.async&&c.timeout>0&&(r.timeout=c.timeout),c.mimeType&&r.overrideMimeType(c.mimeType),c.withCredentials&&(r.withCredentials=c.withCredentials),r.onloadstart=function(e){var t=s.fn.createEvent(Event,"loadstart",e,c);c.dispatchEvent(t)},r.onabort=function(e){if(!i){var t=s.fn.createEvent(Event,"abort",e,c);c.dispatchEvent(t)}},r.ontimeout=function(r){if(!i){t.error(e,n);var o=s.fn.createEvent(ProgressEvent,"timeout",r,c);c.dispatchEvent(o)}},r.onreadystatechange=function(e){if(c&&(r.readyState===XMLHttpRequest.HEADERS_RECEIVED&&(c.xu=r.getAllResponseHeaders()),r.readyState<XMLHttpRequest.DONE||r.readyState===XMLHttpRequest.DONE&&0===r.status)){c.readyState=r.readyState;var t=s.fn.createEvent(Event,"readystatechange",e,c);c.dispatchEvent(t)}},r.onprogress=function(i){if(!t.A0(e.type)){var n=s.fn.createEvent(ProgressEvent,"progress",i,c);c.dispatchEvent(n),r.total=i.total}e.Mu.Au=i.total},r.onload=function(h){if(i=!0,c.status=r.status,h&&0!=h.total&&(e.Mu.Au=h.total),e.xu=r.getAllResponseHeaders(),r.status<200||r.status>299)return t.te.debug("FRL SERVER RETURNED ERROR CODE "+r.status),void t.error(e,n);e.Qu.wR()?t.P0(e.type)?e.Hu=r.response:t.A0(e.type)&&(o.ni.j._r?e.Hu=a.Framework.S()?null:s.fn.appendBuffer(e.Hu,r.response):e.Hu=r.response):e.RB=r.responseText,e.loaded(),t.R0.delete(n),e.Mu.Nu=a.Framework.time(),t.C0(e),t.k0(e),t.b0.cW(e),r=null},r.onerror=function(){i||t.error(e,n)},this.R0.set(n,e),r.open("GET",u,c.async,c.username,c.password),r.send()},e.prototype.error=function(e,t){var r="COULD NOT DOWNLOAD "+e.Wu()+" status: "+e.xhr.status;e.type==n.Tu.vu?this.te.debug(r):this.te.warn(r),this.O0(e),this.R0.delete(t),this.b0.oW(e)},e.prototype.Qe=function(e){return this.R0.has(e)},e.prototype.P0=function(e){return e==n.Tu.vu||e==n.Tu.gu||e==n.Tu.du},e.prototype.A0=function(e){return e==n.Tu.yu},e.prototype.YJ=function(e){var t=this.R0.get(e);this.R0.delete(e),t&&t.xhr&&t.xhr.abort()},e.prototype.k0=function(e){this.te.info("SUCCESS FROM FALLBACK FOR "+e.Wu()+" ["+n.Tu[e.type]+"]["+e.Mu.Au+"] AFTER "+e.tl()+" [curr:"+e.il().Xi()+" avg:"+this.ji.Xi()+"]")},e.prototype.O0=function(e){},e.prototype.eW=function(){return this.ji},e.prototype.C0=function(e){e.Yu()===h.Ws.Ys&&this.ji.Ki(e.il())},e}();t.Oz=c},function(e,t,r){"use strict";var i=r(2);r(56);var n=r(0),s=r(3),o=r(15),a=r(45),h=r(54),c=r(11),u=r(88),l=hive.DN.protocol.FN.VN,p=r(9),f=r(8),d=r(5),g=r(4),v=d.Rt.Ci,y=function(){function e(){this._0=isNaN(f.HiveConfig.DebugLogs.TrackerLogs)?0:f.HiveConfig.DebugLogs.TrackerLogs,this.mn="[TRACKER] ",this.qF=0,this.N0=0,this.D0=/([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{0,4}){5})/,this.F0=!0,this.Hl=n.Framework.resolve(n.Framework.q.F),this.dh=n.Framework.resolve(p.Qs.Us),this.bJ=n.Framework.resolve(o.Pa.Ta)}return e.prototype.init=function(e){this.te=n.Framework.resolve(n.Framework.q.I).log(e.sessionId),this.sessionId=e.sessionId,this.Yz=e.Yz,this.wC=e.wC,this.V_=e.V_,this.L0=e.RC,this.bJ.M0(e.sessionId,this),this.B0=u.sx.nx},e.prototype.start=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];this.context=e,this.Nx=e.Ez.K_(),this.ticket=e.Ez.Ak(),this.ss=t},e.prototype.U0=function(e){this.x0=e},e.prototype.yJ=function(){var e=this;this.lJ(),this.H0=n.Framework.setInterval(function(){e.q0()},s.ni.zt.Kt),this.q0()},e.prototype.lJ=function(){this.H0&&n.Framework.clearInterval(this.H0)},e.prototype.V0=function(){var e=this,t=i.defer(),r=new hive.DN.protocol.FN.hD,n=this.context.Ez,s=n.isLive()?StreamType.LIVE:StreamType.xG;r.sessionId=this.sessionId;var o=new l;return this.x0?(o.partnerId=this.x0.partnerId,o.customerId=this.x0.customerId):f.HiveConfig.ClientInfo.Fs&&f.HiveConfig.ClientInfo.Ls?(o.partnerId=f.HiveConfig.ClientInfo.Fs,o.customerId=f.HiveConfig.ClientInfo.Ls):(o.partnerId=this.ticket.Lh(),o.customerId=this.ticket.Mh()),r.cD=o,r.streamType=s,r.contentId=this.wC.K_(),this.dh.Vh().then(function(t){e.j0=t.Qh().Cs(),e.wC.wM(e.j0)}).fail(function(t){e.te.warn(e.mn+"Get connectivity info failed with error ",t)}).finally(function(){try{var i=new hive.snapshots.ConnectivityInfo;i.publicIp=e.cL,i.privateIp=e.j0,r.info=e.G0(i,n),r.dn=e.Q0(n,r.info),t.resolve(r)}catch(r){g.ErrorMonitor.gi().di("Prepare tracker info and query failed",e.mn,r),t.reject("ERROR")}}).done(),t.Te},e.prototype.K0=function(){var e=new Array;return this.B0==u.sx.nx?e.push(hive.DN.protocol.FN.LN.MN):this.B0==u.sx.AS?e.push(hive.DN.protocol.FN.LN.UN):this.B0==u.sx.hC?e.push(hive.DN.protocol.FN.LN.BN):this.te.warn("Wrong locality mode"),e},e.prototype.Q0=function(e,t){var r=this,i=new hive.DN.protocol.FN.XN;return i.random=s.ni.Wr.Kr,t.externalAs&&!this.qF&&(this.qF=t.externalAs),t.internalAs&&!this.N0&&(this.N0=t.internalAs),i.tD=this.K0(),i.ZN=[],this.qF>0&&this.Y0(i.ZN,hive.DN.protocol.FN.xN.External,this.qF,s.ni.Wr.Yr),this.N0>0&&(this.Y0(i.ZN,hive.DN.protocol.FN.xN.HN,this.N0,s.ni.Wr.zr),i.$N=[],e.wN().forEach(function(e){var t=r.z0(hive.DN.protocol.FN.xN.HN,r.N0,e,-1);i.$N.push({key:t,value:1})}),i.eD=[],this.wC.sV().forEach(function(e,t){var n=r.z0(hive.DN.protocol.FN.xN.HN,r.N0,t,e.type==a.cC.hC?hive.DN.protocol.FN.io.to:-1);i.eD.push({key:n,value:s.ni.Wr.Jr})})),i},e.prototype.z0=function(e,t,r,i){var n=new hive.DN.protocol.FN.jN;n.GN=e,n.QN=t;var s=new hive.DN.protocol.FN.KN;return s.bitrate=r,s.QN=n,-1!=i&&s.YN,s},e.prototype.Y0=function(e,t,r,i){var n=new hive.DN.protocol.FN.jN;n.GN=t,n.QN=r,e.push({key:n,value:i})},e.prototype.G0=function(e,t){var r=new hive.DN.protocol.FN.qN;if(n.Framework.S()?r.guid=this.Eh:r.guid=btoa(this.Eh),r.timestamp=n.Framework.time(),r.oo=void 0,this.wC.iV()&&(r.externalAs=this.wC.iV()),this.wC.Ek()&&(r.internalAs=this.wC.Ek()),null!=e){r.lo=e.publicIp;var i=new InetAddress;i.address=e.publicIp,r.publicIp=i,r.uo=e.privateIp;var s=new InetAddress;s.address=e.privateIp,r.privateIp=s}if(!this.wC.fk()&&this.wC.Sk()&&v?r.co=1:r.co=this.wC.J0(),this.context.Ez instanceof h.ON){r.ho=new Array;var o=t._C();null!=o&&(r.ao=o.bitrate);var c=t.j_();this.wC.sV().forEach(function(e,t){if(e.gR){var i=new hive.DN.protocol.FN.no;switch(i.bitrate=t,e.type){case a.cC.$s:i.state=hive.DN.protocol.FN.io.eo;break;case a.cC.aC:i.state=hive.DN.protocol.FN.io.ro;break;case a.cC.hC:i.state=hive.DN.protocol.FN.io.to}i.delta=c.JC(e.gR.ER(),t),r.ho.push(i)}})}return r},e.prototype.q0=function(){var e=this;this.te.debug(this.mn+" PREPARE REQUEST"),this.V0().then(function(t){var r=e.mn+"SENDING TRACKER REQUEST [ privateIp:"+t.info.uo+" rank:"+t.info.co+"]";switch(e._0){case 0:default:e.te.debug(r);break;case 1:e.te.debug(r+" "+JSON.stringify(t));break;case 2:e.te.debug(r,t);break;case 3:e.te.debug(r+" "+JSON.stringify(t),t)}e.bJ.W0(t)},function(t){g.ErrorMonitor.gi().di("tracker error1",e.mn,t)}).catch(function(t){g.ErrorMonitor.gi().di("tracker error2",e.mn,t)})},e.prototype.X0=function(e){this.B0=e},e.prototype.ZJ=function(e){var t=this;switch(this._0){case 1:this.te.debug(this.mn+this.context.Ez.Ak()+" Tracker Response: "+JSON.stringify(e));break;case 2:this.te.debug(this.mn+this.context.Ez.Ak()+" Tracker Response: ",e);break;case 3:this.te.debug(this.mn+this.context.Ez.Ak()+" Tracker Response: "+JSON.stringify(e),e)}this.qF=e.Tk.externalAs,this.N0=e.Tk.internalAs,this.cL=e.Tk.lo,this.j0=e.Tk.uo,this.wC.yM(this.cL),this.wC.Z0(this.N0),this.wC.$0(this.qF),this.dh.gM(this.cL,this.j0,this.N0),this.te.debug(this.mn+"Reporting from tracker public IP:"+this.cL+" private IP: "+this.j0+" ExtAs:"+this.qF+" inAs:"+this.N0),!this.wC.fk()&&this.wC.Sk()&&v?this.L0.Jx(!1):this.L0.e1(e.tD,e.lD);var r=this.t1(e);this.ss.forEach(function(e){return e.Ax(r,t.F0)}),this.F0=!1},e.prototype.t1=function(e){for(var t=[],r=0,i=e.lD;r<i.length;r++){var n=i[r],s=new c.po(c.Zs.Xs,n);t.push(s)}return t},e.prototype.aH=function(e){},e.prototype.Zh=function(e){this.Eh=e,this.te.info(this.mn+"CONNECTED "+this.Eh),this.L0.i1(),this.yJ()},e.prototype.yq=function(){},e}();t.Nz=y},function(e,t,r){"use strict";var i=r(1),n=r(0),s=r(6),o=function(){function e(e,t){this.id=e,this.size=t}return e}(),a=function(){function e(){this.n1=new i,this.s1=new i,this.te=n.Framework.resolve(n.Framework.q.I).log()}return e.prototype.put=function(e,t){var r=e.mN,i=e.size;e.bitrate;this.n1.has(r)||(this.n1.set(r,new o(r,i)),this.s1.set(r,new Array)),this.s1.get(r).push(t)},e.prototype.contains=function(e){return this.s1.has(e)},e.prototype.mk=function(e){return this.s1.get(e)},e.prototype.o1=function(e){return this.n1.get(e)},e.prototype.dV=function(e){var t=this;this.s1.forEach(function(r,i){s.fn.tn(r,e,!1),0===r.length&&(t.s1.delete(i),t.n1.delete(i))})},e.prototype.ZU=function(){var e=this;this.s1.forEach(function(t,r){e.te.debug("OBJIDX FR "+r+" PS "+t.map(function(e){return e.qq.Pl._l}).reduce(function(e,t){return e+","+t}))})},e}();t.Mz=a},function(e,t,r){"use strict";var i=r(1),n=r(3),s=r(0),o=r(6),a=r(11),h=r(157),c=r(43),u=r(89),l=r(5),p=r(4),f=l.Rt.Ci,d=function(){function e(){this.Eh=null,this.a1=new i,this.Zq=new i}return e.prototype.init=function(e){this.te=s.Framework.resolve(s.Framework.q.I).log(e.sessionId),this.mn="S["+e.sessionId+"]",this.SC=e.SC,this.wC=e.wC,this.h1=e.x_,(f||s.Framework.S()&&c.iC.tC)&&(this.$z=e.$z),this.start()},e.prototype.start=function(){this.c1=!0},e.prototype.stop=function(){this.c1=!1},e.prototype.Ax=function(e,t){var r=this;try{if(this.c1){var i=[];e.forEach(function(e){var t=null;r.u1(),e.guid!=r.Eh&&(e.type==a.Zs.Xs?t=r.l1(e):f||s.Framework.S()&&c.iC.tC?(t=r.f1(e),r.$z.mx(e).then(function(){r.SC.mq(r.Zq.get(e.guid))}).fail(function(t){t&&t!=u.lH.Cx&&(r.Zq.delete(e.guid),p.ErrorMonitor.gi().di("LEADER ELECTION FAILED WITH ERROR",r.mn,t))})):t=r.f1(e)),t&&i.push(t.Tk.guid)}),this.g_(),t&&this.SC.bq(t),i.length>0&&this.te.debug("DISCOVERED NEW "+i.length+"/"+e.length+": ["+i.join(", ")+"]")}}catch(e){p.ErrorMonitor.gi().di("DISCOVERED PEERS FAILED",this.mn,e)}},e.prototype.g_=function(){var e=this.a1.length+this.Zq.length;this.h1.d1(e)},e.prototype.u1=function(){this.a1.length>=n.ni.Qr.jr&&this.g1(this.a1),this.Zq.length>=n.ni.Qr.Gr&&this.g1(this.Zq)},e.prototype.g1=function(e){var t=e.keys()[s.Framework.random()*this.a1.length];e.delete(t)},e.prototype.f1=function(e){var t=null;return this.a1.has(e.guid)?(t=this.a1.get(e.guid),this.a1.delete(e.guid),this.Zq.set(e.guid,t)):this.Zq.has(e.guid)&&(t=this.Zq.get(e.guid)),t?(t.U0(e),null):(t=new h.v1(e),this.Zq.set(e.guid,t),t)},e.prototype.l1=function(e){var t=null;if(this.Zq.has(e.guid))this.f1(e);else{if(!this.a1.has(e.guid))return t=new h.v1(e),this.a1.set(e.guid,t),t;t=this.a1.get(e.guid),t.U0(e)}return null},e.prototype.Pq=function(e,t){var r=[];return this.c1&&(f||s.Framework.S()&&c.iC.tC?r=o.fn.nn(this.a1.values()):(r=this.a1.values(),this.Zq.forEach(function(e,t){r.push(e)}),r=o.fn.nn(r))),e?r:t?r.slice(0,t):r.slice(0,2*n.ni.Ot.Pt)},e.prototype.zq=function(e){return this.a1.has(e)?this.a1.get(e):this.Zq.has(e)?this.Zq.get(e):null},e.prototype.Zh=function(e){this.te.info("MEMBERSHIP SERVER CONNECTED"),this.Eh=e,this.wC.vq(this.Eh)},e.prototype.yq=function(){},e.prototype.aH=function(e){this.te.debug("Peer "+e+" disconnected"),this.a1.delete(e),this.Zq.delete(e),this.g_()},e}();t.Qr=d},function(e,t,r){"use strict";var i=r(11),n=function(){function e(e){this.Tk=e}return e.prototype.Uq=function(){return this.Tk.type===i.Zs.K},e.prototype.U0=function(e){this.Tk.type==i.Zs.Xs&&e.type==i.Zs.K?this.Tk.type=i.Zs.K:this.Tk.type==i.Zs.Xs&&e.type==i.Zs.Xs||this.Tk.type==i.Zs.K&&e.type==i.Zs.K?this.m1(this.Tk,e):this.Tk.type==i.Zs.K&&e.type==i.Zs.Xs&&(this.m1(this.Tk,e),this.Tk.type=i.Zs.K)},e.prototype.SV=function(e){this.Tk.ao=e},e.prototype.m1=function(e,t){e.internalAs=this.E1(e.internalAs,t.internalAs),e.externalAs=this.E1(e.externalAs,t.externalAs),e.oo=this.E1(e.oo,t.oo),e.bandwidth=this.E1(e.bandwidth,t.bandwidth),e.ao=this.E1(e.ao,t.ao),e.uo=this.E1(e.uo,t.uo),e.lo=this.E1(e.lo,t.lo),e.co=this.E1(e.co,t.co),e.timestamp=this.E1(e.timestamp,t.timestamp),t.so&&(e.so=this.E1(e.so,t.so)),t.ho&&(e.ho=t.ho)},e.prototype.E1=function(e,t){return e?t&&e!=t&&(e=t):t&&(e=t),e},e}();t.v1=n},function(e,t,r){(function(e){var i,n,s;/**
 * @license ProtoBuf.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/ProtoBuf.js for details
 */
!function(o){"use strict";function a(e){var t={};return t.T1=e,t.DR=e.DR||null,t.VERSION="4.0.0-b3",t.I1={},t.I1.w1=0,t.I1.S1=1,t.I1.R1=2,t.I1.b1=3,t.I1.P1=4,t.I1.A1=5,t.C1=[t.I1.w1,t.I1.S1,t.I1.A1],t.O1={_1:{name:"int32",N1:t.I1.w1,defaultValue:0},D1:{name:"uint32",N1:t.I1.w1,defaultValue:0},F1:{name:"sint32",N1:t.I1.w1,defaultValue:0},L1:{name:"int64",N1:t.I1.w1,defaultValue:t.DR?t.DR.ZERO:void 0},M1:{name:"uint64",N1:t.I1.w1,defaultValue:t.DR?t.DR.vH:void 0},B1:{name:"sint64",N1:t.I1.w1,defaultValue:t.DR?t.DR.ZERO:void 0},U1:{name:"bool",N1:t.I1.w1,defaultValue:!1},H1:{name:"double",N1:t.I1.S1,defaultValue:0},qb:{name:"string",N1:t.I1.R1,defaultValue:""},Hn:{name:"bytes",N1:t.I1.R1,defaultValue:null},q1:{name:"fixed32",N1:t.I1.A1,defaultValue:0},V1:{name:"sfixed32",N1:t.I1.A1,defaultValue:0},j1:{name:"fixed64",N1:t.I1.S1,defaultValue:t.DR?t.DR.vH:void 0},G1:{name:"sfixed64",N1:t.I1.S1,defaultValue:t.DR?t.DR.ZERO:void 0},float:{name:"float",N1:t.I1.A1,defaultValue:0},Q1:{name:"enum",N1:t.I1.w1,defaultValue:0},message:{name:"message",N1:t.I1.R1,defaultValue:null},group:{name:"group",N1:t.I1.b1,defaultValue:null}},t.K1=[t.O1._1,t.O1.F1,t.O1.V1,t.O1.D1,t.O1.q1,t.O1.L1,t.O1.B1,t.O1.G1,t.O1.M1,t.O1.j1,t.O1.U1,t.O1.qb,t.O1.Hn],t.Y1=1,t.z1=536870911,t.J1=!1,t.W1=!0,t.X1=!0,t.hf=function(){Object.create||(Object.create=function(e){function t(){}if(arguments.length>1)throw Error("Object.create polyfill only accepts the first parameter.");return t.prototype=e,new t});var e={};e.Z1=!1;try{e.Z1="function"==typeof r(16).e2&&"function"==typeof r(59).resolve}catch(e){}return e.t2=function(){for(var e=[function(){return new XMLHttpRequest},function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml3.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")}],t=null,r=0;r<e.length;r++){try{t=e[r]()}catch(e){continue}break}if(!t)throw Error("XMLHttpRequest is not supported");return t},e.fetch=function(t,i){if(i&&"function"!=typeof i&&(i=null),e.Z1)if(i)r(16).i2(t,function(e,t){i(e?null:""+t)});else try{return r(16).e2(t)}catch(e){return null}else{var n=e.t2();if(n.open("GET",t,!!i),n.setRequestHeader("Accept","text/plain"),"function"==typeof n.overrideMimeType&&n.overrideMimeType("text/plain"),!i)return n.send(null),200==n.status||0==n.status&&"string"==typeof n.responseText?n.responseText:null;if(n.onreadystatechange=function(){4==n.readyState&&i(200==n.status||0==n.status&&"string"==typeof n.responseText?n.responseText:null)},4==n.readyState)return;n.send(null)}},e.isArray=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},e}(),t.Lang={OPEN:"{",n2:"}",s2:"[",o2:"]",a2:",",EQUAL:"=",h2:";",c2:",",u2:'"',l2:'"',f2:"'",d2:"'",g2:"(",v2:")",m2:"<",E2:">",T2:/[\s\{\}=;\[\],'"\(\)<>]/g,I2:/^(?:required|optional|repeated|map)$/,jO:/^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/,BO:/^[a-zA-Z_][a-zA-Z_0-9]*$/,w2:/^[a-zA-Z][a-zA-Z_0-9]*$/,S2:/^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,R2:/^(?:\.[a-zA-Z][a-zA-Z_0-9]*)+$/,b2:/^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/,P2:/^(?:[1-9][0-9]*|0)$/,A2:/^0[xX][0-9a-fA-F]+$/,C2:/^0[0-7]+$/,O2:/^([0-9]*(\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/,_2:/^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,N2:/^\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,D2:/\s/,FI:/(?:"([^"\\]*(?:\\.[^"\\]*)*)")|(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g,BOOL:/^(?:true|false)$/i},t.F2=function(e,t){var r={},i=function(e){this.source=""+e,this.index=0,this.line=1,this.stack=[],this.L2=!1,this.M2=t.l2},n=i.prototype;n.YX=function(){t.FI.lastIndex=this.index-1;var e;if(null!==(e=t.FI.exec(this.source))){var r=void 0!==e[1]?e[1]:e[2];return this.index=t.FI.lastIndex,this.stack.push(this.M2),r}throw Error("Unterminated string at line "+this.line+", index "+this.index)},n.next=function(){if(this.stack.length>0)return this.stack.shift();if(this.index>=this.source.length)return null;if(this.L2)return this.L2=!1,this.YX();var e,r;do{for(e=!1;t.D2.test(r=this.source.charAt(this.index));)if(this.index++,"\n"===r&&this.line++,this.index===this.source.length)return null;if("/"===this.source.charAt(this.index))if("/"===this.source.charAt(++this.index)){for(;"\n"!==this.source.charAt(this.index);)if(++this.index==this.source.length)return null;this.index++,this.line++,e=!0}else{if("*"!==this.source.charAt(this.index))throw Error("Unterminated comment at line "+this.line+": /"+this.source.charAt(this.index));for(r="";r+(r=this.source.charAt(this.index))!=="*/";)if(this.index++,"\n"===r&&this.line++,this.index===this.source.length)return null;this.index++,e=!0}}while(e);if(this.index===this.source.length)return null;var i=this.index;if(t.T2.lastIndex=0,t.T2.test(this.source.charAt(i)))++i;else for(++i;i<this.source.length&&!t.T2.test(this.source.charAt(i));)i++;var n=this.source.substring(this.index,this.index=i);return n===t.u2?(this.L2=!0,this.M2=t.l2):n===t.f2&&(this.L2=!0,this.M2=t.d2),n},n.Qk=function(){if(0===this.stack.length){var e=this.next();if(null===e)return null;this.stack.push(e)}return this.stack[0]},n.toString=function(){return"Tokenizer("+this.index+"/"+this.source.length+" at line "+this.line+")"},r.B2=i;var s=function(e){this.U2=new i(e)},o=s.prototype;return o.parse=function(){for(var e,t={name:"[ROOT]",H2:null,q2:[],V2:[],imports:[],options:{},DN:[]},r=!0;e=this.U2.next();)switch(e){case"package":if(!r||null!==t.H2)throw Error("Unexpected package at line "+this.U2.line);t.H2=this.j2(e);break;case"import":if(!r)throw Error("Unexpected import at line "+this.U2.line);t.imports.push(this.G2(e));break;case"message":this.Q2(t,null,e),r=!1;break;case"enum":this.K2(t,e),r=!1;break;case"option":this.Y2(t,e);break;case"service":this.z2(t,e);break;case"extend":this.J2(t,e);break;case"syntax":t.W2=this.X2(t);break;default:throw Error("Unexpected token at line "+this.U2.line+": "+e)}return delete t.name,t},o.Z2=function(e){var r=1;if("-"==e.charAt(0)&&(r=-1,e=e.substring(1)),t.P2.test(e))return r*parseInt(e,10);if(t.A2.test(e))return r*parseInt(e.substring(2),16);if(t.C2.test(e))return r*parseInt(e.substring(1),8);if(t.O2.test(e))return"inf"===e?r*(1/0):"nan"===e?NaN:r*parseFloat(e);throw Error("Illegal number at line "+this.U2.line+": "+(r<0?"-":"")+e)},o.e3=function(){var e,r,i="";do{if(r=this.U2.next(),i+=this.U2.next(),(e=this.U2.next())!==r)throw Error("Illegal end of string at line "+this.U2.line+": "+e);e=this.U2.Qk()}while(e===t.u2||e===t.f2);return i},o.t3=function(e,r){var i=-1,n=1;if("-"==e.charAt(0)&&(n=-1,e=e.substring(1)),t.P2.test(e))i=parseInt(e);else if(t.A2.test(e))i=parseInt(e.substring(2),16);else{if(!t.C2.test(e))throw Error("Illegal id at line "+this.U2.line+": "+(n<0?"-":"")+e);i=parseInt(e.substring(1),8)}if(i=n*i|0,!r&&i<0)throw Error("Illegal id at line "+this.U2.line+": "+(n<0?"-":"")+e);return i},o.j2=function(e){if(e=this.U2.next(),!t.S2.test(e))throw Error("Illegal package name at line "+this.U2.line+": "+e);var r=e;if((e=this.U2.next())!=t.h2)throw Error("Illegal end of package at line "+this.U2.line+": "+e);return r},o.G2=function(e){if(e=this.U2.Qk(),"public"===e&&(this.U2.next(),e=this.U2.Qk()),e!==t.u2&&e!==t.f2)throw Error("Illegal start of import at line "+this.U2.line+": "+e);var r=this.e3();if((e=this.U2.next())!==t.h2)throw Error("Illegal end of import at line "+this.U2.line+": "+e);return r},o.Y2=function(e,r){r=this.U2.next();var i=!1;if(r==t.g2&&(i=!0,r=this.U2.next()),!t.S2.test(r)&&!/google\.protobuf\./.test(r))throw Error("Illegal option name in message "+e.name+" at line "+this.U2.line+": "+r);var n=r;if(r=this.U2.next(),i){if(r!==t.v2)throw Error("Illegal end in message "+e.name+", option "+n+" at line "+this.U2.line+": "+r);n="("+n+")",r=this.U2.next(),t.R2.test(r)&&(n+=r,r=this.U2.next())}if(r!==t.EQUAL)throw Error("Illegal operator in message "+e.name+", option "+n+" at line "+this.U2.line+": "+r);var s;if((r=this.U2.Qk())===t.u2||r===t.f2)s=this.e3();else if(this.U2.next(),t.b2.test(r))s=this.Z2(r,!0);else if(t.BOOL.test(r))s="true"===r;else{if(!t.S2.test(r))throw Error("Illegal option value in message "+e.name+", option "+n+" at line "+this.U2.line+": "+r);s=r}if((r=this.U2.next())!==t.h2)throw Error("Illegal end of option in message "+e.name+", option "+n+" at line "+this.U2.line+": "+r);e.options[n]=s},o.r3=function(e,r){for(var i;;){if(null===(i=this.U2.next()))throw Error("Unexpected EOF in "+e.name+", "+r+" at line "+this.U2.line);if(i===t.h2)break}},o.z2=function(e,r){if(r=this.U2.next(),!t.BO.test(r))throw Error("Illegal service name at line "+this.U2.line+": "+r);var i=r,n={name:i,i3:{},options:{}};if((r=this.U2.next())!==t.OPEN)throw Error("Illegal start of service "+i+" at line "+this.U2.line+": "+r);do{if("option"===(r=this.U2.next()))this.Y2(n,r);else if("rpc"===r)this.n3(n,r);else if(r!==t.n2)throw Error("Illegal type of service "+i+" at line "+this.U2.line+": "+r)}while(r!==t.n2);e.DN.push(n)},o.n3=function(e,r){var i=r;if(r=this.U2.next(),!t.BO.test(r))throw Error("Illegal method name in service "+e.name+" at line "+this.U2.line+": "+r);var n=r,s={TI:null,response:null,s3:!1,o3:!1,options:{}};if((r=this.U2.next())!==t.g2)throw Error("Illegal start of request type in service "+e.name+"#"+n+" at line "+this.U2.line+": "+r);if(r=this.U2.next(),"stream"===r.toLowerCase()&&(s.s3=!0,r=this.U2.next()),!t.S2.test(r))throw Error("Illegal request type in service "+e.name+"#"+n+" at line "+this.U2.line+": "+r);if(s.TI=r,(r=this.U2.next())!=t.v2)throw Error("Illegal end of request type in service "+e.name+"#"+n+" at line "+this.U2.line+": "+r);if(r=this.U2.next(),"returns"!==r.toLowerCase())throw Error("Illegal delimiter in service "+e.name+"#"+n+" at line "+this.U2.line+": "+r);if((r=this.U2.next())!=t.g2)throw Error("Illegal start of response type in service "+e.name+"#"+n+" at line "+this.U2.line+": "+r);if(r=this.U2.next(),"stream"===r.toLowerCase()&&(s.o3=!0,r=this.U2.next()),s.response=r,(r=this.U2.next())!==t.v2)throw Error("Illegal end of response type in service "+e.name+"#"+n+" at line "+this.U2.line+": "+r);if((r=this.U2.next())===t.OPEN){do{if("option"===(r=this.U2.next()))this.Y2(s,r);else if(r!==t.n2)throw Error("Illegal start of option inservice "+e.name+"#"+n+" at line "+this.U2.line+": "+r)}while(r!==t.n2);this.U2.Qk()===t.h2&&this.U2.next()}else if(r!==t.h2)throw Error("Illegal delimiter in service "+e.name+"#"+n+" at line "+this.U2.line+": "+r);void 0===e[i]&&(e[i]={}),e[i][n]=s},o.Q2=function(e,r,i){var n={},s="group"===i;if(i=this.U2.next(),!t.BO.test(i))throw Error("Illegal "+(s?"group":"message")+" name"+(e?" in message "+e.name:"")+" at line "+this.U2.line+": "+i);if(n.name=i,s){if((i=this.U2.next())!==t.EQUAL)throw Error("Illegal id assignment after group "+n.name+" at line "+this.U2.line+": "+i);i=this.U2.next();try{r.id=this.t3(i)}catch(e){throw Error("Illegal field id value for group "+n.name+"#"+r.name+" at line "+this.U2.line+": "+i)}n.a3=!0}if(n.h3=[],n.V2=[],n.q2=[],n.options={},n.c3={},i=this.U2.next(),i===t.s2&&r&&(this.u3(n,r,i),i=this.U2.next()),i!==t.OPEN)throw Error("Illegal start of "+(s?"group":"message")+" "+n.name+" at line "+this.U2.line+": "+i);for(;;){if((i=this.U2.next())===t.n2){i=this.U2.Qk(),i===t.h2&&this.U2.next();break}if(t.I2.test(i))this.l3(n,i);else if("oneof"===i)this.f3(n,i);else if("enum"===i)this.K2(n,i);else if("message"===i)this.Q2(n,null,i);else if("option"===i)this.Y2(n,i);else if("extensions"===i)n.extensions=this.d3(n,i);else if("extend"===i)this.J2(n,i);else{if(!t.S2.test(i))throw Error("Illegal token in message "+n.name+" at line "+this.U2.line+": "+i);this.l3(n,"optional",i)}}return e.q2.push(n),n},o.l3=function(e,r,i){var n={},s=null;if(n.g3=r,n.options={},r=void 0!==i?i:this.U2.next(),"map"===n.g3){if(r!==t.m2)throw Error("Illegal token in message "+e.name+" at line "+this.U2.line+": "+r);if(r=this.U2.next(),!t.jO.test(r)&&!t.S2.test(r))throw Error("Illegal token in message "+e.name+" at line "+this.U2.line+": "+r);if(n.keytype=r,(r=this.U2.next())!==t.c2)throw Error("Illegal token in message "+e.name+" at line "+this.U2.line+": "+r);if(r=this.U2.next(),!t.jO.test(r)&&!t.S2.test(r))throw Error("Illegal token in message "+e.name+" at line "+this.U2.line+": "+r);if(n.type=r,(r=this.U2.next())!==t.E2)throw Error("Illegal token in message "+e.name+" at line "+this.U2.line+": "+r);if(r=this.U2.next(),!t.BO.test(r))throw Error("Illegal token in message "+e.name+" at line "+this.U2.line+": "+r);if(n.name=r,(r=this.U2.next())!==t.EQUAL)throw Error("Illegal token in field "+e.name+"#"+n.name+" at line "+this.line+": "+r);r=this.U2.next();try{n.id=this.t3(r)}catch(t){throw Error("Illegal field id in message "+e.name+"#"+n.name+" at line "+this.U2.line+": "+r)}if(r=this.U2.next(),r===t.s2&&(this.u3(e,n,r),r=this.U2.next()),r!==t.h2)throw Error("Illegal delimiter in message "+e.name+"#"+n.name+" at line "+this.U2.line+": "+r)}else if("group"===r){if(s=this.Q2(e,n,r),!/^[A-Z]/.test(s.name))throw Error("Group names must start with a capital letter");n.type=s.name,n.name=s.name.toLowerCase(),r=this.U2.Qk(),r===t.h2&&this.U2.next()}else{if(!t.jO.test(r)&&!t.S2.test(r))throw Error("Illegal field type in message "+e.name+" at line "+this.U2.line+": "+r);if(n.type=r,r=this.U2.next(),!t.BO.test(r))throw Error("Illegal field name in message "+e.name+" at line "+this.U2.line+": "+r);if(n.name=r,(r=this.U2.next())!==t.EQUAL)throw Error("Illegal token in field "+e.name+"#"+n.name+" at line "+this.U2.line+": "+r);r=this.U2.next();try{n.id=this.t3(r)}catch(t){throw Error("Illegal field id in message "+e.name+"#"+n.name+" at line "+this.U2.line+": "+r)}if(r=this.U2.next(),r===t.s2&&(this.u3(e,n,r),r=this.U2.next()),r!==t.h2)throw Error("Illegal delimiter in message "+e.name+"#"+n.name+" at line "+this.U2.line+": "+r)}return e.h3.push(n),n},o.f3=function(e,r){if(r=this.U2.next(),!t.BO.test(r))throw Error("Illegal oneof name in message "+e.name+" at line "+this.U2.line+": "+r);var i,n=r,s=[];if((r=this.U2.next())!==t.OPEN)throw Error("Illegal start of oneof "+n+" at line "+this.U2.line+": "+r);for(;this.U2.Qk()!==t.n2;)i=this.l3(e,"optional"),i.v3=n,s.push(i.id);this.U2.next(),e.c3[n]=s},o.u3=function(e,r,i){for(var n=!0;;){if((i=this.U2.next())===t.o2)break;if(i===t.a2){if(n)throw Error("Illegal start of options in message "+e.name+"#"+r.name+" at line "+this.U2.line+": "+i);i=this.U2.next()}this.y3(e,r,i),n=!1}},o.y3=function(e,r,i){var n=!1;if(i===t.g2&&(i=this.U2.next(),n=!0),!t.S2.test(i))throw Error("Illegal field option in "+e.name+"#"+r.name+" at line "+this.U2.line+": "+i);var s=i;if(i=this.U2.next(),n){if(i!==t.v2)throw Error("Illegal delimiter in "+e.name+"#"+r.name+" at line "+this.U2.line+": "+i);s="("+s+")",i=this.U2.next(),t.R2.test(i)&&(s+=i,i=this.U2.next())}if(i!==t.EQUAL)throw Error("Illegal token in "+e.name+"#"+r.name+" at line "+this.U2.line+": "+i);var o;if((i=this.U2.Qk())===t.u2||i===t.f2)o=this.e3();else if(t.b2.test(i,!0))o=this.Z2(this.U2.next(),!0);else if(t.BOOL.test(i))o="true"===this.U2.next().toLowerCase();else{if(!t.S2.test(i))throw Error("Illegal value in message "+e.name+"#"+r.name+", option "+s+" at line "+this.U2.line+": "+i);o=this.U2.next()}r.options[s]=o},o.K2=function(e,r){var i={};if(r=this.U2.next(),!t.BO.test(r))throw Error("Illegal enum name in message "+e.name+" at line "+this.U2.line+": "+r);if(i.name=r,(r=this.U2.next())!==t.OPEN)throw Error("Illegal start of enum "+i.name+" at line "+this.U2.line+": "+r);for(i.values=[],i.options={};;){if((r=this.U2.next())===t.n2){r=this.U2.Qk(),r===t.h2&&this.U2.next();break}if("option"==r)this.Y2(i,r);else{if(!t.BO.test(r))throw Error("Illegal name in enum "+i.name+" at line "+this.U2.line+": "+r);this.m3(i,r)}}e.V2.push(i)},o.m3=function(e,r){var i={};if(i.name=r,(r=this.U2.next())!==t.EQUAL)throw Error("Illegal token in enum "+e.name+" at line "+this.U2.line+": "+r);r=this.U2.next();try{i.id=this.t3(r,!0)}catch(t){throw Error("Illegal id in enum "+e.name+" at line "+this.U2.line+": "+r)}if(e.values.push(i),(r=this.U2.next())===t.s2){var n={options:{}};this.u3(e,n,r),r=this.U2.next()}if(r!==t.h2)throw Error("Illegal delimiter in enum "+e.name+" at line "+this.U2.line+": "+r)},o.d3=function(r,i){var n=[];if(i=this.U2.next(),"min"===i?n.push(e.Y1):"max"===i?n.push(e.z1):n.push(this.Z2(i)),"to"!==(i=this.U2.next()))throw Error("Illegal extensions delimiter in message "+r.name+" at line "+this.U2.line+": "+i);if(i=this.U2.next(),"min"===i?n.push(e.Y1):"max"===i?n.push(e.z1):n.push(this.Z2(i)),(i=this.U2.next())!==t.h2)throw Error("Illegal extensions delimiter in message "+r.name+" at line "+this.U2.line+": "+i);return n},o.J2=function(e,r){if(r=this.U2.next(),!t.S2.test(r))throw Error("Illegal message name at line "+this.U2.line+": "+r);var i={};if(i.E3=r,i.h3=[],(r=this.U2.next())!==t.OPEN)throw Error("Illegal start of extend "+i.name+" at line "+this.U2.line+": "+r);for(;;){if((r=this.U2.next())===t.n2){r=this.U2.Qk(),r==t.h2&&this.U2.next();break}if(t.I2.test(r))this.l3(i,r);else{if(!t.S2.test(r))throw Error("Illegal token in extend "+i.name+" at line "+this.U2.line+": "+r);this.l3(i,"optional",r)}}return e.q2.push(i),i},o.X2=function(e){var r=this.U2.next();if(r!==t.EQUAL)throw Error("Illegal token at line "+this.U2.line+": "+r);if((r=this.U2.Qk())!==t.u2&&r!==t.f2)throw Error("Illegal token at line "+this.U2.line+": "+r);var i=this.e3();if((r=this.U2.next())!==t.h2)throw Error("Illegal token at line "+this.U2.line+": "+r);return i},o.toString=function(){return"Parser"},r.D$=s,r}(t,t.Lang),t.T3=function(t){function r(r){if("string"==typeof r&&(r=t.O1[r]),void 0===r.defaultValue)throw Error("default value for type "+r.name+" is not supported");return r==t.O1.Hn?new e(0):r.defaultValue}function i(e,r){if(e&&"number"==typeof e.low&&"number"==typeof e.high&&"boolean"==typeof e.Cb&&e.low===e.low&&e.high===e.high)return new t.DR(e.low,e.high,void 0===r?e.Cb:r);if("string"==typeof e)return t.DR.gp(e,r||!1,10);if("number"==typeof e)return t.DR.dp(e,r||!1);throw Error("not convertible to Long")}function n(e,r){var i=r.Tb(),s=7&i,o=i>>>3;switch(s){case t.I1.w1:do{i=r.GR()}while(128==(128&i));break;case t.I1.S1:r.offset+=8;break;case t.I1.R1:i=r.Tb(),r.offset+=i;break;case t.I1.b1:n(o,r);break;case t.I1.P1:if(o===e)return!1;throw Error("Illegal GROUPEND after unknown group: "+o+" ("+e+" expected)");case t.I1.A1:r.offset+=4;break;default:throw Error("Illegal wire type in unknown group "+e+": "+s)}return!0}var s={},o=function(e,t,r){this.I3=e,this.parent=t,this.name=r,this.className},a=o.prototype;a.w3=function(){for(var e=this.name,t=this;;){if(null==(t=t.parent))break;e=t.name+"."+e}return e},a.toString=function(e){return(e?this.className+" ":"")+this.w3()},a.sp=function(){throw Error(this.toString(!0)+" cannot be built directly")},s.S3=o;var h=function(e,t,r,i,n){o.call(this,e,t,r),this.className="Namespace",this.children=[],this.options=i||{},this.W2=n||"proto2"},c=h.prototype=Object.create(o.prototype);c.R3=function(e){if(null==(e=e||null))return this.children.slice();for(var t=[],r=0,i=this.children.length;r<i;++r)this.children[r]instanceof e&&t.push(this.children[r]);return t},c.b3=function(e){var t;if(t=this.P3(e.name))if(t instanceof p.A3&&t.name!==t.C3&&null===this.P3(t.C3))t.name=t.C3;else{if(!(e instanceof p.A3&&e.name!==e.C3&&null===this.P3(e.C3)))throw Error("Duplicate name in namespace "+this.toString(!0)+": "+e.name);e.name=e.C3}this.children.push(e)},c.P3=function(e){for(var t="number"==typeof e?"id":"name",r=0,i=this.children.length;r<i;++r)if(this.children[r][t]===e)return this.children[r];return null},c.resolve=function(e,t){var r="string"==typeof e?e.split("."):e,i=this,n=0;if(""===r[n]){for(;null!==i.parent;)i=i.parent;n++}var o;do{do{if(!(o=i.P3(r[n]))||!(o instanceof s.S3)||t&&o instanceof s.pc.A3){i=null;break}i=o,n++}while(n<r.length);if(null!=i)break;if(null!==this.parent)return this.parent.resolve(e,t)}while(null!=i);return i},c.O3=function(e){var t=[],r=e;do{t.unshift(r.name),r=r.parent}while(null!==r);for(var i=1;i<=t.length;i++){var n=t.slice(t.length-i);if(e===this.resolve(n,!(e instanceof s.pc.A3)))return n.join(".")}return e.w3()},c.sp=function(){for(var e,t={},r=this.children,i=0,n=r.length;i<n;++i)(e=r[i])instanceof h&&(t[e.name]=e.sp());return Object.defineProperty&&Object.defineProperty(t,"$options",{value:this._3()}),t},c._3=function(){for(var e={},t=Object.keys(this.options),r=0,i=t.length;r<i;++r){var n=t[r],s=this.options[t[r]];e[n]=s}return e},c.N3=function(e){return void 0===e?this.options:void 0!==this.options[e]?this.options[e]:null},s.D3=h;var u=function(e,r,i,n){if(this.type=e,this.F3=r,this.L3=i,this.W2=n,i&&t.K1.indexOf(e)<0)throw Error("Invalid map key type: "+e.name)},l=u.prototype;l.M3=r,l.B3=function(r){var n=function(e,t){throw Error("Illegal value for "+this.toString(!0)+" of type "+this.type.name+": "+e+" ("+t+")")}.bind(this);switch(this.type){case t.O1._1:case t.O1.F1:case t.O1.V1:return("number"!=typeof r||r===r&&r%1!=0)&&n(typeof r,"not an integer"),r>4294967295?0|r:r;case t.O1.D1:case t.O1.q1:return("number"!=typeof r||r===r&&r%1!=0)&&n(typeof r,"not an integer"),r<0?r>>>0:r;case t.O1.L1:case t.O1.B1:case t.O1.G1:if(t.DR)try{return i(r,!1)}catch(e){n(typeof r,e.message)}else n(typeof r,"requires Long.js");case t.O1.M1:case t.O1.j1:if(t.DR)try{return i(r,!0)}catch(e){n(typeof r,e.message)}else n(typeof r,"requires Long.js");case t.O1.U1:return"boolean"!=typeof r&&n(typeof r,"not a boolean"),r;case t.O1.float:case t.O1.H1:return"number"!=typeof r&&n(typeof r,"not a number"),r;case t.O1.qb:return"string"==typeof r||r&&r instanceof String||n(typeof r,"not a string"),""+r;case t.O1.Hn:return e.LR(r)?r:e.wrap(r,"base64");case t.O1.Q1:var s=this.F3.R3(t.T3.x3.U3);for(a=0;a<s.length;a++){if(s[a].name==r)return s[a].id;if(s[a].id==r)return s[a].id}if("proto3"===this.W2)return("number"!=typeof r||r===r&&r%1!=0)&&n(typeof r,"not an integer"),(r>4294967295||r<0)&&n(typeof r,"not in range for uint32"),r;n(r,"not a valid enum value");case t.O1.group:case t.O1.message:if(r&&"object"==typeof r||n(typeof r,"object expected"),r instanceof this.F3.H3)return r;if(r instanceof t.q3.pc){var o={};for(var a in r)r.hasOwnProperty(a)&&(o[a]=r[a]);r=o}return new this.F3.H3(r)}throw Error("[INTERNAL] Illegal value for "+this.toString(!0)+": "+r+" (undefined type "+this.type+")")},l.V3=function(r,i){if(null===i)return 0;var n;switch(this.type){case t.O1._1:return i<0?e.Rb(i):e.gb(i);case t.O1.D1:return e.gb(i);case t.O1.F1:return e.gb(e.vb(i));case t.O1.q1:case t.O1.V1:case t.O1.float:return 4;case t.O1.L1:case t.O1.M1:return e.Rb(i);case t.O1.B1:return e.Rb(e.Ab(i));case t.O1.j1:case t.O1.G1:return 8;case t.O1.U1:return 1;case t.O1.Q1:return e.gb(i);case t.O1.H1:return 8;case t.O1.qb:return n=e.zb(i),e.gb(n)+n;case t.O1.Hn:if(i.uP()<0)throw Error("Illegal value for "+this.toString(!0)+": "+i.uP()+" bytes remaining");return e.gb(i.uP())+i.uP();case t.O1.message:return n=this.F3.j3(i),e.gb(n)+n;case t.O1.group:return(n=this.F3.j3(i))+e.gb(r<<3|t.I1.P1)}throw Error("[INTERNAL] Illegal value to encode in "+this.toString(!0)+": "+i+" (unknown type)")},l.G3=function(r,i,n){if(null===i)return n;switch(this.type){case t.O1._1:i<0?n.Fb(i):n.mb(i);break;case t.O1.D1:n.mb(i);break;case t.O1.F1:n.Eb(i);break;case t.O1.q1:n.$R(i);break;case t.O1.V1:n.XR(i);break;case t.O1.L1:case t.O1.M1:n.Fb(i);break;case t.O1.B1:n.Lb(i);break;case t.O1.j1:n.sb(i);break;case t.O1.G1:n.tb(i);break;case t.O1.U1:"string"==typeof i?n.mb("false"===i.toLowerCase()?0:!!i):n.mb(i?1:0);break;case t.O1.Q1:n.mb(i);break;case t.O1.float:n.ab(i);break;case t.O1.H1:n.lb(i);break;case t.O1.qb:n.Zb(i);break;case t.O1.Hn:if(i.uP()<0)throw Error("Illegal value for "+this.toString(!0)+": "+i.uP()+" bytes remaining");var s=i.offset;n.mb(i.uP()),n.append(i),i.offset=s;break;case t.O1.message:var o=(new e).nP();this.F3.encode(i,o),n.mb(o.offset),n.append(o.Jl());break;case t.O1.group:this.F3.encode(i,n),n.mb(r<<3|t.I1.P1);break;default:throw Error("[INTERNAL] Illegal value to encode in "+this.toString(!0)+": "+i+" (unknown type)")}return n},l.decode=function(e,r,i){if(r!=this.type.N1)throw Error("Unexpected wire type for element");var n,s;switch(this.type){case t.O1._1:return 0|e.Tb();case t.O1.D1:return e.Tb()>>>0;case t.O1.F1:return 0|e.wb();case t.O1.q1:return e.eb()>>>0;case t.O1.V1:return 0|e.ZR();case t.O1.L1:return e.Mb();case t.O1.M1:return e.Mb().Ob();case t.O1.B1:return e.Bb();case t.O1.j1:return e.ob();case t.O1.G1:return e.ib();case t.O1.U1:return!!e.Tb();case t.O1.Q1:return e.Tb();case t.O1.float:return e.ub();case t.O1.H1:return e.sR();case t.O1.qb:return e.$b();case t.O1.Hn:if(s=e.Tb(),e.uP()<s)throw Error("Illegal number of bytes for "+this.toString(!0)+": "+s+" required but got only "+e.uP());return n=e.clone(),n.CR=n.offset+s,e.offset+=s,n;case t.O1.message:return s=e.Tb(),this.F3.decode(e,s);case t.O1.group:return this.F3.decode(e,-1,i)}throw Error("[INTERNAL] Illegal decode type")},l.Q3=function(r){if(!this.L3)throw Error("valueFromString() called on non-map-key element");switch(this.type){case t.O1._1:case t.O1.F1:case t.O1.V1:case t.O1.D1:case t.O1.q1:return this.B3(parseInt(r));case t.O1.L1:case t.O1.B1:case t.O1.G1:case t.O1.M1:case t.O1.j1:return this.B3(r);case t.O1.U1:return"true"===r;case t.O1.qb:return this.B3(r);case t.O1.Hn:return e.UR(r)}},l.K3=function(e){if(!this.L3)throw Error("valueToString() called on non-map-key element");return this.type===t.O1.Hn?e.toString("binary"):e.toString()},s.Element=u;var p=function(e,r,i,n,s,o){h.call(this,e,r,i,n,o),this.className="Message",this.extensions=[t.Y1,t.z1],this.H3=null,this.a3=!!s,this.Y3=null,this.z3=null,this.J3=null},f=p.prototype=Object.create(h.prototype);f.sp=function(r){if(this.H3&&!r)return this.H3;var i=function(t,r){function i(r,n,s,o,a){var h=void 0;if(null===r||"object"!=typeof r){if(o==t.O1.Q1)for(var c=a.R3(t.T3.x3.U3),u=0;u<c.length;u++)if(c[u].id===r){r=c[u].name;break}h=r}else if(r instanceof e)h=n?r.fP():r.lP();else if(t.hf.isArray(r)){var l=r;h=[];for(var p=0;p<l.length;p++)h.push(i(l[p],n,s,o,a))}else if(r instanceof t.Map){var f=r.entries();h={};for(var d=f.next();!d.done;d=f.next())h[r.W3.K3(d.value[0])]=i(d.value[1],n,s,r.X3.type,r.X3.F3)}else if(r instanceof t.DR)h=s?r.toString():new t.DR(r);else{h={};var g=r.Z3,v=void 0;for(var u in r)if(r.hasOwnProperty(u)){var y=r[u];g&&(v=g.P3(u)),h[u]=i(y,n,s,v.type,v.F3)}}return h}var n=r.R3(t.T3.pc.A3),s=r.R3(t.T3.pc.e4),o=function(i,o){t.q3.pc.call(this);for(var a=0,h=s.length;a<h;++a)this[s[a].name]=null;for(a=0,h=n.length;a<h;++a){var c=n[a];this[c.name]=c.t4?[]:c.map?new t.Map(c):null,!c.required&&"proto3"!==r.W2||null===c.defaultValue||(this[c.name]=c.defaultValue)}if(arguments.length>0){var u;if(1!==arguments.length||"object"!=typeof i||"function"==typeof i.encode||t.hf.isArray(i)||i instanceof t.Map||i instanceof e||i instanceof ArrayBuffer||t.DR&&i instanceof t.DR)for(a=0,h=arguments.length;a<h;++a)void 0!==(u=arguments[a])&&this.r4(n[a].name,u);else this.r4(i)}},a=o.prototype=Object.create(t.q3.pc.prototype);a.add=function(e,i,n){var s=r.J3[e];if(!n){if(!s)throw Error(this+"#"+e+" is undefined");if(!(s instanceof t.T3.pc.A3))throw Error(this+"#"+e+" is not a field: "+s.toString(!0));if(!s.t4)throw Error(this+"#"+e+" is not a repeated field")}null===this[s.name]&&(this[s.name]=[]),this[s.name].push(n?i:s.B3(i,!0))},a.i4=a.add,a.set=function(e,i,n){if(e&&"object"==typeof e){n=i;for(var s in e)e.hasOwnProperty(s)&&void 0!==(i=e[s])&&this.r4(s,i,n);return this}var o=r.J3[e];if(n)this[o.name]=i;else{if(!o)throw Error(this+"#"+e+" is not a field: undefined");if(!(o instanceof t.T3.pc.A3))throw Error(this+"#"+e+" is not a field: "+o.toString(!0));this[o.name]=i=o.B3(i)}return o.v3&&(null!==i?(null!==this[o.v3.name]&&(this[this[o.v3.name]]=null),this[o.v3.name]=o.name):o.v3.name===e&&(this[o.v3.name]=null)),this},a.r4=a.set,a.get=function(e,i){if(i)return this[e];var n=r.J3[e];if(!(n&&n instanceof t.T3.pc.A3))throw Error(this+"#"+e+" is not a field: undefined");if(!(n instanceof t.T3.pc.A3))throw Error(this+"#"+e+" is not a field: "+n.toString(!0));return this[n.name]},a.n4=a.get;for(var h=0;h<n.length;h++){var c=n[h];c instanceof t.T3.pc.s4||r.I3.options.W1&&function(e){var t=e.C3.replace(/(_[a-zA-Z])/g,function(e){return e.toUpperCase().replace("_","")});t=t.substring(0,1).toUpperCase()+t.substring(1);var i=e.C3.replace(/([A-Z])/g,function(e){return"_"+e}),n=function(t,r){return this[e.name]=r?t:e.B3(t),this},s=function(){return this[e.name]};null===r.P3("set"+t)&&(a["set"+t]=n),null===r.P3("set_"+i)&&(a["set_"+i]=n),null===r.P3("get"+t)&&(a["get"+t]=s),null===r.P3("get_"+i)&&(a["get_"+i]=s)}(c)}a.encode=function(t,i){"boolean"==typeof t&&(i=t,t=void 0);var n=!1;t||(t=new e,n=!0);var s=t.kR;try{return r.encode(this,t.nP(),i),(n?t.Jl():t).nP(s)}catch(e){throw t.nP(s),e}},a.j3=function(){return r.j3(this)},a.o4=function(t){var i=!1;t||(t=new e,i=!0);var n=(new e).nP();return r.encode(this,n).Jl(),t.mb(n.uP()),t.append(n),i?t.Jl():t},a.a4=function(){try{return this.encode().pn()}catch(e){throw e.h4&&(e.h4=e.h4.pn()),e}},a.pn=a.a4,a.c4=function(){try{return this.encode().lP()}catch(e){throw e.h4&&(e.h4=e.h4.lP()),e}},a.lP=a.c4,a.u4=function(){try{return this.encode().fP()}catch(e){throw e.h4&&(e.h4=e.h4.fP()),e}},a.fP=a.u4,a.l4=function(){try{return this.encode().dP()}catch(e){throw e.h4&&(e.h4=e.h4.dP()),e}},a.dP=a.l4,a.f4=function(e,r){return i(this,!!e,!!r,t.O1.message,this.Z3)},a.d4=function(){return JSON.stringify(i(this,!0,!0,t.O1.message,this.Z3))},o.decode=function(t,i){"string"==typeof t&&(t=e.wrap(t,i||"base64")),t=t instanceof e?t:e.wrap(t);var n=t.kR;try{var s=r.decode(t.nP());return t.nP(n),s}catch(e){throw t.nP(n),e}},o.g4=function(t,i){if("string"==typeof t&&(t=e.wrap(t,i||"base64")),t=t instanceof e?t:e.wrap(t),t.uP()<1)return null;var n=t.offset,s=t.Tb();if(t.uP()<s)return t.offset=n,null;try{var o=r.decode(t.slice(t.offset,t.offset+s).nP());return t.offset+=s,o}catch(e){throw t.offset+=s,e}},o.v4=function(e){return o.decode(e,"base64")},o.y4=function(e){return o.decode(e,"hex")},o.m4=function(e){return new o(JSON.parse(e))},a.toString=function(){return r.toString()};return Object.defineProperty&&(Object.defineProperty(o,"$options",{value:r._3()}),Object.defineProperty(a,"$options",{value:o.E4}),Object.defineProperty(o,"$type",{value:r}),Object.defineProperty(a,"$type",{value:r})),o}(t,this);this.Y3=[],this.z3={},this.J3={};for(var n,s=0,o=this.children.length;s<o;s++)if((n=this.children[s])instanceof m)i[n.name]=n.sp();else if(n instanceof p)i[n.name]=n.sp();else if(n instanceof p.A3)n.sp(),this.Y3.push(n),this.z3[n.id]=n,this.J3[n.name]=n;else if(!(n instanceof p.e4||n instanceof T))throw Error("Illegal reflect child of "+this.toString(!0)+": "+children[s].toString(!0));return this.H3=i},f.encode=function(e,t,r){for(var i,n,s=null,o=0,a=this.Y3.length;o<a;++o)i=this.Y3[o],n=e[i.name],i.required&&null===n?null===s&&(s=i):i.encode(r?n:i.B3(n),t);if(null!==s){var h=Error("Missing at least one required field for "+this.toString(!0)+": "+s);throw h.h4=t,h}return t},f.j3=function(e){for(var t,r,i=0,n=0,s=this.Y3.length;n<s;++n){if(t=this.Y3[n],r=e[t.name],t.required&&null===r)throw Error("Missing at least one required field for "+this.toString(!0)+": "+t);i+=t.j3(r)}return i},f.decode=function(e,r,i){r="number"==typeof r?r:-1;for(var s,o,a,h,c=e.offset,u=new this.H3;e.offset<c+r||-1===r&&e.uP()>0;){if(s=e.Tb(),o=7&s,a=s>>>3,o===t.I1.P1){if(a!==i)throw Error("Illegal group end indicator for "+this.toString(!0)+": "+a+" ("+(i?i+" expected":"not a group")+")");break}if(h=this.z3[a])if(h.t4&&!h.options.T4)u[h.name].push(h.decode(o,e));else if(h.map){var l=h.decode(o,e);u[h.name].set(l[0],l[1])}else u[h.name]=h.decode(o,e),h.v3&&(null!==this[h.v3.name]&&(this[this[h.v3.name]]=null),u[h.v3.name]=h.name);else switch(o){case t.I1.w1:e.Tb();break;case t.I1.A1:e.offset+=4;break;case t.I1.S1:e.offset+=8;break;case t.I1.R1:var p=e.Tb();e.offset+=p;break;case t.I1.b1:for(;n(a,e););break;default:throw Error("Illegal wire type for unknown field "+a+" in "+this.toString(!0)+"#decode: "+o)}}for(var f=0,d=this.Y3.length;f<d;++f)if(h=this.Y3[f],null===u[h.name]){if(h.required){var g=Error("Missing at least one required field for "+this.toString(!0)+": "+h.name);throw g.I4=u,g}t.X1&&null!==h.defaultValue&&(u[h.name]=h.defaultValue)}return u},s.pc=p;var d=function(e,t,r,i,n,s,a,h,c,u){o.call(this,e,t,s),this.className="Message.Field",this.required="required"===r,this.t4="repeated"===r,this.map="map"===r,this.w4=i||null,this.type=n,this.F3=null,this.id=a,this.options=h||{},this.defaultValue=null,this.v3=c||null,this.W2=u||"proto2",this.C3=this.name,this.S4=null,this.R4=null,!this.I3.options.J1||this instanceof p.s4||(this.name=d.b4(this.name))};d.b4=function(e){return e.replace(/_([a-zA-Z])/g,function(e,t){return t.toUpperCase()})};var g=d.prototype=Object.create(o.prototype);g.sp=function(){this.S4=new u(this.type,this.F3,!1,this.W2),this.map&&(this.R4=new u(this.w4,void 0,!0,this.W2)),this.defaultValue=void 0!==this.options.default?this.B3(this.options.default):null,"proto3"!==this.W2||this.t4||this.map||(this.defaultValue=this.S4.M3(this.type))},g.B3=function(e,r){r=r||!1;var i=function(e,t){throw Error("Illegal value for "+this.toString(!0)+" of type "+this.type.name+": "+e+" ("+t+")")}.bind(this);if(null===e)return this.required&&i(typeof e,"required"),"proto3"===this.W2&&this.type!==t.O1.message&&i(typeof e,"proto3 field without field presence cannot be null"),null;var n;if(this.t4&&!r){t.hf.isArray(e)||(e=[e]);var s=[];for(n=0;n<e.length;n++)s.push(this.S4.B3(e[n]));return s}return this.map&&!r?e instanceof t.Map?e:(e instanceof Object||i(typeof e,"expected ProtoBuf.Map or raw object for map field"),new t.Map(this,e)):(!this.t4&&t.hf.isArray(e)&&i(typeof e,"no array expected"),this.S4.B3(e))},g.P4=function(e){if("proto3"!==this.W2)return null!==e;switch(this.type){case t.O1._1:case t.O1.F1:case t.O1.V1:case t.O1.D1:case t.O1.q1:return 0!==e;case t.O1.L1:case t.O1.B1:case t.O1.G1:case t.O1.M1:case t.O1.j1:return 0!==e.low||0!==e.high;case t.O1.U1:return e;case t.O1.float:case t.O1.H1:return 0!==e;case t.O1.qb:return e.length>0;case t.O1.Hn:return e.uP()>0;case t.O1.Q1:return 0!==e;case t.O1.message:return null!==e;default:return!0}},g.encode=function(r,i){if(null===this.type||"object"!=typeof this.type)throw Error("[INTERNAL] Unresolved type in "+this.toString(!0)+": "+this.type);if(null===r||this.t4&&0==r.length)return i;try{if(this.t4){var n;if(this.options.T4&&t.C1.indexOf(this.type.N1)>=0){i.mb(this.id<<3|t.I1.R1),i.iP(i.offset+=1);var s=i.offset;for(n=0;n<r.length;n++)this.S4.G3(this.id,r[n],i);var o=i.offset-s,a=e.gb(o);if(a>1){var h=i.slice(s,i.offset);s+=a-1,i.offset=s,i.append(h)}i.mb(o,s-a)}else for(n=0;n<r.length;n++)i.mb(this.id<<3|this.type.N1),this.S4.G3(this.id,r[n],i)}else this.map?r.forEach(function(r,n,s){var o=e.gb(8|this.w4.N1)+this.R4.V3(1,n)+e.gb(16|this.type.N1)+this.S4.V3(2,r);i.mb(this.id<<3|t.I1.R1),i.mb(o),i.mb(8|this.w4.N1),this.R4.G3(1,n,i),i.mb(16|this.type.N1),this.S4.G3(2,r,i)},this):this.P4(r)&&(i.mb(this.id<<3|this.type.N1),this.S4.G3(this.id,r,i))}catch(e){throw Error("Illegal value for "+this.toString(!0)+": "+r+" ("+e+")")}return i},g.j3=function(r){if(r=this.B3(r),null===this.type||"object"!=typeof this.type)throw Error("[INTERNAL] Unresolved type in "+this.toString(!0)+": "+this.type);if(null===r||this.t4&&0==r.length)return 0;var i=0;try{if(this.t4){var n,s;if(this.options.T4&&t.C1.indexOf(this.type.N1)>=0){for(i+=e.gb(this.id<<3|t.I1.R1),s=0,n=0;n<r.length;n++)s+=this.S4.V3(this.id,r[n]);i+=e.gb(s),i+=s}else for(n=0;n<r.length;n++)i+=e.gb(this.id<<3|this.type.N1),i+=this.S4.V3(this.id,r[n])}else this.map?r.forEach(function(r,n,s){var o=e.gb(8|this.w4.N1)+this.R4.V3(1,n)+e.gb(16|this.type.N1)+this.S4.V3(2,r);i+=e.gb(this.id<<3|t.I1.R1),i+=e.gb(o),i+=o},this):this.P4(r)&&(i+=e.gb(this.id<<3|this.type.N1),i+=this.S4.V3(this.id,r))}catch(e){throw Error("Illegal value for "+this.toString(!0)+": "+r+" ("+e+")")}return i},g.decode=function(e,r,i){var n,s;if(!(!this.map&&e==this.type.N1||!i&&this.t4&&this.options.T4&&e==t.I1.R1||this.map&&e==t.I1.R1))throw Error("Illegal wire type for field "+this.toString(!0)+": "+e+" ("+this.type.N1+" expected)");if(e==t.I1.R1&&this.t4&&this.options.T4&&t.C1.indexOf(this.type.N1)>=0&&!i){s=r.Tb(),s=r.offset+s;for(var o=[];r.offset<s;)o.push(this.decode(this.type.N1,r,!0));return o}if(this.map){var a=this.R4.M3(this.w4);if(n=this.S4.M3(this.type),s=r.Tb(),r.uP()<s)throw Error("Illegal number of bytes for "+this.toString(!0)+": "+s+" required but got only "+r.uP());var h=r.clone();for(h.CR=h.offset+s,r.offset+=s;h.uP()>0;){var c=h.Tb();e=7&c;var u=c>>>3;if(1===u)a=this.R4.decode(h,e,u);else{if(2!==u)throw Error("Unexpected tag in map field key/value submessage");n=this.S4.decode(h,e,u)}}return[a,n]}return this.S4.decode(r,e,this.id)},s.pc.A3=d;var v=function(e,t,r,i,n,s,o){d.call(this,e,t,r,null,i,n,s,o),this.A4};v.prototype=Object.create(d.prototype),s.pc.s4=v;var y=function(e,t,r){o.call(this,e,t,r),this.h3=[]};s.pc.e4=y;var m=function(e,t,r,i,n){h.call(this,e,t,r,i,n),this.className="Enum",this.object=null};(m.prototype=Object.create(h.prototype)).sp=function(){for(var e={},t=this.R3(m.U3),r=0,i=t.length;r<i;++r)e[t[r].name]=t[r].id;return Object.defineProperty&&Object.defineProperty(e,"$options",{value:this._3()}),this.object=e},s.x3=m;var E=function(e,t,r,i){o.call(this,e,t,r),this.className="Enum.Value",this.id=i};E.prototype=Object.create(o.prototype),s.x3.U3=E;var T=function(e,t,r,i){o.call(this,e,t,r),this.C4=i};T.prototype=Object.create(o.prototype),s.O4=T;var I=function(e,t,r,i){h.call(this,e,t,r,i),this.className="Service",this.H3=null};(I.prototype=Object.create(h.prototype)).sp=function(r){return this.H3&&!r?this.H3:this.H3=function(t,r){for(var i=function(e){t.q3._4.call(this),this.N4=e||function(e,t,r){setTimeout(r.bind(this,Error("Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services")),0)}},n=i.prototype=Object.create(t.q3._4.prototype),s=r.R3(t.T3._4.D4),o=0;o<s.length;o++)!function(t){n[t.name]=function(i,n){try{try{i=t.F4.H3.decode(e.wrap(i))}catch(e){if(!(e instanceof TypeError))throw e}if(!(i&&i instanceof t.F4.H3))return void setTimeout(n.bind(this,Error("Illegal request type provided to service method "+r.name+"#"+t.name)),0);this.N4(t.w3(),i,function(e,i){if(e)return void n(e);try{i=t.L4.H3.decode(i)}catch(e){}if(!(i&&i instanceof t.L4.H3))return void n(Error("Illegal response type received in service method "+r.name+"#"+t.name));n(null,i)})}catch(e){setTimeout(n.bind(this,e),0)}},i[t.name]=function(e,r,n){new i(e)[t.name](r,n)},Object.defineProperty&&(Object.defineProperty(i[t.name],"$options",{value:t._3()}),Object.defineProperty(n[t.name],"$options",{value:i[t.name].E4}))}(s[o]);return Object.defineProperty&&(Object.defineProperty(i,"$options",{value:r._3()}),Object.defineProperty(n,"$options",{value:i.E4}),Object.defineProperty(i,"$type",{value:r}),Object.defineProperty(n,"$type",{value:r})),i}(t,this)},s._4=I;var w=function(e,t,r,i){o.call(this,e,t,r),this.className="Service.Method",this.options=i||{}};(w.prototype=Object.create(o.prototype))._3=c._3,s._4.M4=w;var S=function(e,t,r,i,n,s,o,a){w.call(this,e,t,r,a),this.className="Service.RPCMethod",this.B4=i,this.U4=n,this.x4=s,this.H4=o,this.F4=null,this.L4=null};return S.prototype=Object.create(w.prototype),s._4.D4=S,s}(t),t.q3=function(e,t,i){function n(e,t){t.W2=e,t.q2&&t.q2.forEach(function(t){n(e,t)}),t.V2&&t.V2.forEach(function(t){n(e,t)})}var s=function(e){this.q4=new i.D3(this,null,""),this.V4=this.q4,this.j4=!1,this.result=null,this.files={},this.G4=null,this.options=e||{},this.W2="proto3"===this.options.W2?"proto3":"proto2"},o=s.prototype;return o.reset=function(){this.V4=this.q4},o.Q4=function(e){if("string"!=typeof e||!t.S2.test(e))throw Error("Illegal package: "+e);var r,n,s=e.split(".");for(r=0;r<s.length;r++)if(!t.BO.test(s[r]))throw Error("Illegal package: "+s[r]);for(r=0;r<s.length;r++)n=this.V4.P3(s[r]),null===n&&this.V4.b3(n=new i.D3(this,this.V4,s[r])),this.V4=n;return this},s.K4=function(r){if("string"!=typeof r.name||!t.BO.test(r.name))return!1;if(void 0!==r.values||void 0!==r.i3)return!1;var i;if(void 0!==r.h3){if(!e.hf.isArray(r.h3))return!1;var n,o=[];for(i=0;i<r.h3.length;i++){if(!s.Y4(r.h3[i]))return!1;if(n=parseInt(r.h3[i].id,10),o.indexOf(n)>=0)return!1;o.push(n)}o=null}if(void 0!==r.V2){if(!e.hf.isArray(r.V2))return!1;for(i=0;i<r.V2.length;i++)if(!s.z4(r.V2[i]))return!1}if(void 0!==r.q2){if(!e.hf.isArray(r.q2))return!1;for(i=0;i<r.q2.length;i++)if(!s.K4(r.q2[i])&&!s.J4(r.q2[i]))return!1}if(void 0!==r.extensions&&(!e.hf.isArray(r.extensions)||2!==r.extensions.length||"number"!=typeof r.extensions[0]||"number"!=typeof r.extensions[1]))return!1;if("proto3"===r.W2){for(i=0;i<r.h3.length;i++){var a=r.h3[i];if("required"===a.g3)return!1;if(a.default)return!1;if(a.options)for(var h=Object.keys(a.options),c=0;c<h.length;c++)if("default"===h[c])return!1}if(r.extensions)return!1}return!0},s.Y4=function(e){if("string"!=typeof e.g3||"string"!=typeof e.name||"string"!=typeof e.type||void 0===e.id)return!1;if(!(t.I2.test(e.g3)&&t.BO.test(e.name)&&t.S2.test(e.type)&&t._2.test(""+e.id)))return!1;if(void 0!==e.options){if("object"!=typeof e.options)return!1;for(var r,i=Object.keys(e.options),n=0;n<i.length;n++)if("string"!=typeof(r=i[n])||"string"!=typeof e.options[r]&&"number"!=typeof e.options[r]&&"boolean"!=typeof e.options[r])return!1}return!0},s.z4=function(r){if("string"!=typeof r.name||!t.BO.test(r.name))return!1;if(void 0===r.values||!e.hf.isArray(r.values)||0==r.values.length)return!1;for(var i=0;i<r.values.length;i++){if("object"!=typeof r.values[i])return!1;if("string"!=typeof r.values[i].name||void 0===r.values[i].id)return!1;if(!t.BO.test(r.values[i].name)||!t.N2.test(""+r.values[i].id))return!1}return"proto3"!==r.W2||0===r.values[0].id},o.create=function(t){if(!t)return this;if(e.hf.isArray(t)||(t=[t]),0===t.length)return this;var r=[];for(r.push(t);r.length>0;){if(t=r.pop(),!e.hf.isArray(t))throw Error("Not a valid namespace: "+JSON.stringify(t));for(;t.length>0;){var n=t.shift();if(s.K4(n)){var o=new i.pc(this,this.V4,n.name,n.options,n.a3,n.W2),a={};if(n.c3)for(var h=Object.keys(n.c3),c=0,u=h.length;c<u;++c)o.b3(a[h[c]]=new i.pc.e4(this,o,h[c]));if(n.h3&&n.h3.length>0)for(c=0,u=n.h3.length;c<u;++c){var l=n.h3[c];if(null!==o.P3(l.id))throw Error("Duplicate field id in message "+o.name+": "+l.id);if(l.options)for(var p=Object.keys(l.options),f=0,d=p.length;f<d;++f){if("string"!=typeof p[f])throw Error("Illegal field option name in message "+o.name+"#"+l.name+": "+p[f]);if("string"!=typeof l.options[p[f]]&&"number"!=typeof l.options[p[f]]&&"boolean"!=typeof l.options[p[f]])throw Error("Illegal field option value in message "+o.name+"#"+l.name+"#"+p[f]+": "+l.options[p[f]])}var g=null;if("string"==typeof l.v3&&void 0===(g=a[l.v3]))throw Error("Illegal oneof in message "+o.name+"#"+l.name+": "+l.v3);l=new i.pc.A3(this,o,l.g3,l.keytype,l.type,l.name,l.id,l.options,g,n.W2),g&&g.h3.push(l),o.b3(l)}var v=[];if(void 0!==n.V2&&n.V2.length>0)for(c=0;c<n.V2.length;c++)v.push(n.V2[c]);if(n.q2&&n.q2.length>0)for(c=0;c<n.q2.length;c++)v.push(n.q2[c]);if(n.extensions&&(o.extensions=n.extensions,o.extensions[0]<e.Y1&&(o.extensions[0]=e.Y1),o.extensions[1]>e.z1&&(o.extensions[1]=e.z1)),this.V4.b3(o),v.length>0){r.push(t),t=v,v=null,this.V4=o,o=null;continue}v=null,o=null}else if(s.z4(n)){for(o=new i.x3(this,this.V4,n.name,n.options,n.W2),c=0;c<n.values.length;c++)o.b3(new i.x3.U3(this,o,n.values[c].name,n.values[c].id));this.V4.b3(o),o=null}else if(s.W4(n)){o=new i._4(this,this.V4,n.name,n.options);for(c in n.i3)n.i3.hasOwnProperty(c)&&o.b3(new i._4.D4(this,o,c,n.i3[c].TI,n.i3[c].response,n.i3[c].s3,n.i3[c].o3,n.i3[c].options));this.V4.b3(o),o=null}else{if(!s.J4(n))throw Error("Not a valid definition: "+JSON.stringify(n));if(o=this.V4.resolve(n.E3))for(c=0;c<n.h3.length;c++){if(null!==o.P3(n.h3[c].id))throw Error("Duplicate extended field id in message "+o.name+": "+n.h3[c].id);if(n.h3[c].id<o.extensions[0]||n.h3[c].id>o.extensions[1])throw Error("Illegal extended field id in message "+o.name+": "+n.h3[c].id+" ("+o.extensions.join(" to ")+" expected)");var y=n.h3[c].name;this.options.J1&&(y=i.pc.A3.b4(n.h3[c].name)),l=new i.pc.s4(this,o,n.h3[c].g3,n.h3[c].type,this.V4.w3()+"."+y,n.h3[c].id,n.h3[c].options);var m=new i.O4(this,this.V4,n.h3[c].name,l);l.A4=m,this.V4.b3(m),o.b3(l)}else if(!/\.?google\.protobuf\./.test(n.E3))throw Error("Extended message "+n.E3+" is not defined")}n=null}t=null,this.V4=this.V4.parent}return this.j4=!1,this.result=null,this},o.X4=function(t,i){if("string"==typeof i){if(e.hf.Z1&&(i=r(59).resolve(i)),!0===this.files[i])return this.reset(),this;this.files[i]=!0}else if("object"==typeof i){var s=i.root;e.hf.Z1&&(s=r(59).resolve(s));var o=[s,i.Z4].join("/");if(!0===this.files[o])return this.reset(),this;this.files[o]=!0}if(t.imports&&t.imports.length>0){var a,h="/",c=!1;"object"==typeof i?(this.G4=i.root,c=!0,a=this.G4,i=i.Z4,(a.indexOf("\\")>=0||i.indexOf("\\")>=0)&&(h="\\")):"string"==typeof i?this.G4?a=this.G4:i.indexOf("/")>=0?""===(a=i.replace(/\/[^\/]*$/,""))&&(a="/"):i.indexOf("\\")>=0?(a=i.replace(/\\[^\\]*$/,""),h="\\"):a=".":a=null;for(var u=0;u<t.imports.length;u++)if("string"==typeof t.imports[u]){if(!a)throw Error("Cannot determine import root: File name is unknown");var l=t.imports[u];if(/^google\/protobuf\//.test(l))continue;if(l=a+h+l,!0===this.files[l])continue;/\.proto$/i.test(l)&&!e.F2&&(l=l.replace(/\.proto$/,".json"));var p=e.hf.fetch(l);if(null===p)throw Error("Failed to import '"+l+"' in '"+i+"': File not found");/\.json$/i.test(l)?this.X4(JSON.parse(p+""),l):this.X4(new e.F2.D$(p+"").parse(),l)}else i?/\.(\w+)$/.test(i)?this.X4(t.imports[u],i.replace(/^(.+)\.(\w+)$/,function(e,t,r){return t+"_import"+u+"."+r})):this.X4(t.imports[u],i+"_import"+u):this.X4(t.imports[u]);c&&(this.G4=null)}t.H2&&this.Q4(t.H2),t.W2&&n(t.W2,t);var f=this.V4;return t.options&&Object.keys(t.options).forEach(function(e){f.options[e]=t.options[e]}),t.q2&&(this.create(t.q2),this.V4=f),t.V2&&(this.create(t.V2),this.V4=f),t.DN&&(this.create(t.DN),this.V4=f),t.e6&&this.create(t.e6),this.reset(),this},s.W4=function(e){return!("string"!=typeof e.name||!t.BO.test(e.name)||"object"!=typeof e.i3)},s.J4=function(r){if("string"!=typeof r.E3||!t.S2.test(r.E3))return!1;var i;if(void 0!==r.h3){if(!e.hf.isArray(r.h3))return!1;var n,o=[];for(i=0;i<r.h3.length;i++){if(!s.Y4(r.h3[i]))return!1;if(n=parseInt(r.id,10),o.indexOf(n)>=0)return!1;o.push(n)}o=null}return!0},o.t6=function(){var r;if(null!=this.V4&&"object"!=typeof this.V4.type){if(this.V4 instanceof i.D3)for(var n=this.V4.children,s=0,o=n.length;s<o;++s)this.V4=n[s],this.t6();else if(this.V4 instanceof i.pc.A3){if(t.jO.test(this.V4.type))this.V4.type=e.O1[this.V4.type];else{if(!t.S2.test(this.V4.type))throw Error("Illegal type reference in "+this.V4.toString(!0)+": "+this.V4.type);if(!(r=(this.V4 instanceof i.pc.s4?this.V4.A4.parent:this.V4.parent).resolve(this.V4.type,!0)))throw Error("Unresolvable type reference in "+this.V4.toString(!0)+": "+this.V4.type);if(this.V4.F3=r,r instanceof i.x3){if(this.V4.type=e.O1.Q1,"proto3"===this.V4.W2&&"proto3"!==r.W2)throw Error("Proto3 message refers to proto2 enum; this is not allowed due to differing enum semantics in proto3")}else{if(!(r instanceof i.pc))throw Error("Illegal type reference in "+this.V4.toString(!0)+": "+this.V4.type);this.V4.type=r.a3?e.O1.group:e.O1.message}}if(this.V4.map){if(!t.jO.test(this.V4.w4))throw Error("Illegal key type for map field in "+this.V4.toString(!0)+": "+this.V4.type);this.V4.w4=e.O1[this.V4.w4]}}else if(this.V4 instanceof e.T3.x3.U3);else if(this.V4 instanceof e.T3._4.M4){if(!(this.V4 instanceof e.T3._4.D4))throw Error("Illegal service type in "+this.V4.toString(!0));if(!((r=this.V4.parent.resolve(this.V4.B4))&&r instanceof e.T3.pc))throw Error("Illegal type reference in "+this.V4.toString(!0)+": "+this.V4.B4);if(this.V4.F4=r,!((r=this.V4.parent.resolve(this.V4.U4))&&r instanceof e.T3.pc))throw Error("Illegal type reference in "+this.V4.toString(!0)+": "+this.V4.U4);this.V4.L4=r}else if(!(this.V4 instanceof e.T3.pc.e4||this.V4 instanceof e.T3.O4))throw Error("Illegal object in namespace: "+typeof this.V4+":"+this.V4);this.reset()}},o.sp=function(e){if(this.reset(),this.j4||(this.t6(),this.j4=!0,this.result=null),null===this.result&&(this.result=this.q4.sp()),e){for(var t="string"==typeof e?e.split("."):e,r=this.result,i=0;i<t.length;i++){if(!r[t[i]]){r=null;break}r=r[t[i]]}return r}return this.result},o.r6=function(e){return e?this.q4.resolve(e):this.q4},o.toString=function(){return"Builder"},s.pc=function(){},s._4=function(){},s}(t,t.Lang,t.T3),t.Map=function(e){function t(e){var t=0;return{next:function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}}var r=function(t,r){if(!t.map)throw Error("field is not a map");if(this.C4=t,this.W3=new e.T3.Element(t.w4,null,!0,t.W2),this.X3=new e.T3.Element(t.type,t.F3,!1,t.W2),this.map={},Object.defineProperty(this,"size",{get:function(){return Object.keys(this.map).length}}),r)for(var i=Object.keys(r),n=0;n<i.length;n++){var s=this.W3.Q3(i[n]),o=this.X3.B3(r[i[n]]);this.map[this.W3.K3(s)]={key:s,value:o}}},i=r.prototype;return i.clear=function(){this.map={}},i.delete=function(e){var t=this.W3.K3(this.W3.B3(e)),r=t in this.map;return delete this.map[t],r},i.entries=function(){for(var e,r=[],i=Object.keys(this.map),n=0;n<i.length;n++)r.push([(e=this.map[i[n]]).key,e.value]);return t(r)},i.keys=function(){for(var e=[],r=Object.keys(this.map),i=0;i<r.length;i++)e.push(this.map[r[i]].key);return t(e)},i.values=function(){for(var e=[],r=Object.keys(this.map),i=0;i<r.length;i++)e.push(this.map[r[i]].value);return t(e)},i.forEach=function(e,t){for(var r,i=Object.keys(this.map),n=0;n<i.length;n++)e.call(t,(r=this.map[i[n]]).value,r.key,this)},i.set=function(e,t){var r=this.W3.B3(e),i=this.X3.B3(t);return this.map[this.W3.K3(r)]={key:r,value:i},this},i.get=function(e){var t=this.W3.K3(this.W3.B3(e));if(t in this.map)return this.map[t].value},i.has=function(e){return this.W3.K3(this.W3.B3(e))in this.map},r}(t),t.i6=function(e,r,i){return("string"==typeof r||r&&"string"==typeof r.Z4&&"string"==typeof r.root)&&(i=r,r=void 0),t.op(new t.F2.D$(e).parse(),r,i)},t.n6=t.i6,t.s6=function(e,r,i){if(r&&"object"==typeof r?(i=r,r=null):r&&"function"==typeof r||(r=null),r)return t.hf.fetch("string"==typeof e?e:e.root+"/"+e.Z4,function(n){if(null===n)return void r(Error("Failed to fetch file"));try{r(null,t.i6(n,i,e))}catch(e){r(e)}});var n=t.hf.fetch("object"==typeof e?e.root+"/"+e.Z4:e);return null===n?null:t.i6(n,i,e)},t.o6=t.s6,t.a6=function(e){return e=e||{},void 0===e.J1&&(e.J1=t.J1),void 0===e.W1&&(e.W1=t.W1),new t.q3(e)},t.op=function(e,r,i){return("string"==typeof r||r&&"string"==typeof r.Z4&&"string"==typeof r.root)&&(i=r,r=null),r&&"object"==typeof r||(r=t.a6()),"string"==typeof e&&(e=JSON.parse(e)),r.X4(e,i),r.t6(),r},t.h6=function(e,r,i){if(r&&"object"==typeof r?(i=r,r=null):r&&"function"==typeof r||(r=null),r)return t.hf.fetch("string"==typeof e?e:e.root+"/"+e.Z4,function(n){if(null===n)return void r(Error("Failed to fetch file"));try{r(null,t.op(JSON.parse(n),i,e))}catch(e){r(e)}});var n=t.hf.fetch("object"==typeof e?e.root+"/"+e.Z4:e);return null===n?null:t.op(JSON.parse(n),i,e)},t}"object"==typeof e&&e&&"object"==typeof t&&t?e.t=a(r(32)):(n=[r(159)],i=a,void 0!==(s="function"==typeof i?i.apply(t,n):i)&&(e.t=s))}()}).call(t,r(58)(e))},function(e,t,r){(function(e){var n,s;/**
 * @license ByteBuffer.js (c) 2013-2014 Daniel Wirtz <dcode@dcode.io>
 * This version of ByteBuffer.js uses an ArrayBuffer as its backing buffer which is accessed through a DataView and is
 * compatible with modern browsers.
 * Released under the Apache License, Version 2.0
 * see: https://github.com/dcodeIO/ByteBuffer.js for details
 */
!function(o){"use strict";function a(e){function t(e){var t=0;return function(){return t<e.length?e.charCodeAt(t++):null}}function r(){var e=[],t=[];return function(){if(0===arguments.length)return t.join("")+a.apply(String,e);e.length+arguments.length>1024&&(t.push(a.apply(String,e)),e.length=0),Array.prototype.push.apply(e,arguments)}}var n=function(e,t,r){if(void 0===e&&(e=n.RR),void 0===t&&(t=n.bR),void 0===r&&(r=n.PR),!r){if((e|=0)<0)throw RangeError("Illegal capacity");t=!!t,r=!!r}this.buffer=0===e?o:new ArrayBuffer(e),this.view=0===e?null:new DataView(this.buffer),this.offset=0,this.AR=-1,this.CR=e,this.kR=void 0!==t&&!!t,this.OR=!!r};n.VERSION="3.5.5",n._R=!0,n.NR=!1,n.RR=16,n.bR=n.NR,n.PR=!1,n.DR=e||null;var s=n.prototype,o=new ArrayBuffer(0),a=String.fromCharCode;n.FR=function(e,t,r){return new n(e,t,r)},n.concat=function(e,t,r,i){"boolean"!=typeof t&&"string"==typeof t||(i=r,r=t,t=void 0);for(var s,o=0,a=0,h=e.length;a<h;++a)n.LR(e[a])||(e[a]=n.wrap(e[a],t)),(s=e[a].CR-e[a].offset)>0&&(o+=s);if(0===o)return new n(0,r,i);var c,u=new n(o,r,i),l=new Uint8Array(u.buffer);for(a=0;a<h;)c=e[a++],(s=c.CR-c.offset)<=0||(l.set(new Uint8Array(c.buffer).subarray(c.offset,c.CR),u.offset),u.offset+=s);return u.CR=u.offset,u.offset=0,u},n.LR=function(e){return!0===(e&&e instanceof n)},n.type=function(){return ArrayBuffer},n.wrap=function(e,t,r,o){if("string"!=typeof t&&(o=r,r=t,t=void 0),"string"==typeof e)switch(void 0===t&&(t="utf8"),t){case"base64":return n.MR(e,r);case"hex":return n.BR(e,r);case"binary":return n.UR(e,r);case"utf8":return n.xR(e,r);case"debug":return n.HR(e,r);default:throw Error("Unsupported encoding: "+t)}if(null===e||"object"!=typeof e)throw TypeError("Illegal buffer");var a;if(n.LR(e))return a=s.clone.call(e),a.AR=-1,a;if(e instanceof Uint8Array)a=new n(0,r,o),e.length>0&&(a.buffer=e.buffer,a.offset=e.byteOffset,a.CR=e.byteOffset+e.length,a.view=e.length>0?new DataView(e.buffer):null);else if(e instanceof ArrayBuffer)a=new n(0,r,o),e.byteLength>0&&(a.buffer=e,a.offset=0,a.CR=e.byteLength,a.view=e.byteLength>0?new DataView(e):null);else{if("[object Array]"!==Object.prototype.toString.call(e))throw TypeError("Illegal buffer");for(a=new n(e.length,r,o),a.CR=e.length,i=0;i<e.length;++i)a.view.setUint8(i,e[i])}return a},s.qR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=1,this.view.setInt8(t,e),r&&(this.offset+=1),this},s.NS=s.qR,s.VR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view.getInt8(e);return t&&(this.offset+=1),r},s.rR=s.VR,s.jR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=1,this.view.setUint8(t,e),r&&(this.offset+=1),this},s.GR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view.getUint8(e);return t&&(this.offset+=1),r},s.QR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=2,this.view.setInt16(t,e,this.kR),r&&(this.offset+=2),this},s.KR=s.QR,s.YR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=this.view.getInt16(e,this.kR);return t&&(this.offset+=2),r},s.zR=s.YR,s.JR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=2,this.view.setUint16(t,e,this.kR),r&&(this.offset+=2),this},s.WR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=this.view.getUint16(e,this.kR);return t&&(this.offset+=2),r},s.XR=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setInt32(t,e,this.kR),r&&(this.offset+=4),this},s.Yl=s.XR,s.ZR=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getInt32(e,this.kR);return t&&(this.offset+=4),r},s.$l=s.ZR,s.$R=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setUint32(t,e,this.kR),r&&(this.offset+=4),this},s.eb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getUint32(e,this.kR);return t&&(this.offset+=4),r},e&&(s.tb=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"==typeof t)t=e.dp(t);else if("string"==typeof t)t=e.gp(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.dp(t):"string"==typeof t&&(t=e.gp(t)),r+=8;var n=this.buffer.byteLength;return r>n&&this.resize((n*=2)>r?n:r),r-=8,this.kR?(this.view.setInt32(r,t.low,!0),this.view.setInt32(r+4,t.high,!0)):(this.view.setInt32(r,t.high,!1),this.view.setInt32(r+4,t.low,!1)),i&&(this.offset+=8),this},s.rb=s.tb,s.ib=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+8) <= "+this.buffer.byteLength)}var i=this.kR?new e(this.view.getInt32(t,!0),this.view.getInt32(t+4,!0),!1):new e(this.view.getInt32(t+4,!1),this.view.getInt32(t,!1),!1);return r&&(this.offset+=8),i},s.nb=s.ib,s.sb=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"==typeof t)t=e.dp(t);else if("string"==typeof t)t=e.gp(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.dp(t):"string"==typeof t&&(t=e.gp(t)),r+=8;var n=this.buffer.byteLength;return r>n&&this.resize((n*=2)>r?n:r),r-=8,this.kR?(this.view.setInt32(r,t.low,!0),this.view.setInt32(r+4,t.high,!0)):(this.view.setInt32(r,t.high,!1),this.view.setInt32(r+4,t.low,!1)),i&&(this.offset+=8),this},s.ob=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+8) <= "+this.buffer.byteLength)}var i=this.kR?new e(this.view.getInt32(t,!0),this.view.getInt32(t+4,!0),!0):new e(this.view.getInt32(t+4,!1),this.view.getInt32(t,!1),!0);return r&&(this.offset+=8),i}),s.ab=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=4,this.view.setFloat32(t,e,this.kR),r&&(this.offset+=4),this},s.hb=s.ab,s.cb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=this.view.getFloat32(e,this.kR);return t&&(this.offset+=4),r},s.ub=s.cb,s.lb=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=8;var i=this.buffer.byteLength;return t>i&&this.resize((i*=2)>t?i:t),t-=8,this.view.setFloat64(t,e,this.kR),r&&(this.offset+=8),this},s.LS=s.lb,s.pb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+8) <= "+this.buffer.byteLength)}var r=this.view.getFloat64(e,this.kR);return t&&(this.offset+=8),r},s.sR=s.pb,n.fb=5,n.gb=function(e){return e>>>=0,e<128?1:e<16384?2:e<1<<21?3:e<1<<28?4:5},n.vb=function(e){return((e|=0)<<1^e>>31)>>>0},n.yb=function(e){return e>>>1^-(1&e)|0},s.mb=function(e,t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}var i,s=n.gb(e);t+=s;var o=this.buffer.byteLength;return t>o&&this.resize((o*=2)>t?o:t),t-=s,this.view.setUint8(t,i=128|e),e>>>=0,e>=128?(i=e>>7|128,this.view.setUint8(t+1,i),e>=16384?(i=e>>14|128,this.view.setUint8(t+2,i),e>=1<<21?(i=e>>21|128,this.view.setUint8(t+3,i),e>=1<<28?(this.view.setUint8(t+4,e>>28&15),s=5):(this.view.setUint8(t+3,127&i),s=4)):(this.view.setUint8(t+2,127&i),s=3)):(this.view.setUint8(t+1,127&i),s=2)):(this.view.setUint8(t,127&i),s=1),r?(this.offset+=s,this):s},s.Eb=function(e,t){return this.mb(n.vb(e),t)},s.Tb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r,i,n=0,s=0;do{if(i=e+n,!this.OR&&i>this.CR){var o=Error("Truncated");throw o.Ib=!0,o}r=this.view.getUint8(i),n<5&&(s|=(127&r)<<7*n>>>0),++n}while(128==(128&r));return s|=0,t?(this.offset+=n,s):{value:s,length:n}},s.wb=function(e){var t=this.Tb(e);return"object"==typeof t?t.value=n.yb(t.value):t=n.yb(t),t},e&&(n.Sb=10,n.Rb=function(t){"number"==typeof t?t=e.dp(t):"string"==typeof t&&(t=e.gp(t));var r=t.bb()>>>0,i=t.Pb(28).bb()>>>0,n=t.Pb(56).bb()>>>0;return 0==n?0==i?r<16384?r<128?1:2:r<1<<21?3:4:i<16384?i<128?5:6:i<1<<21?7:8:n<128?9:10},n.Ab=function(t){return"number"==typeof t?t=e.dp(t,!1):"string"==typeof t?t=e.gp(t,!1):!1!==t.Cb&&(t=t.kb()),t.shiftLeft(1).zd(t._b(63)).Ob()},n.Nb=function(t){return"number"==typeof t?t=e.dp(t,!1):"string"==typeof t?t=e.gp(t,!1):!1!==t.Cb&&(t=t.kb()),t.Pb(1).zd(t.Db(e.ONE).kb().Rp()).kb()},s.Fb=function(t,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"==typeof t)t=e.dp(t);else if("string"==typeof t)t=e.gp(t);else if(!(t&&t instanceof e))throw TypeError("Illegal value: "+t+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof t?t=e.dp(t,!1):"string"==typeof t?t=e.gp(t,!1):!1!==t.Cb&&(t=t.kb());var s=n.Rb(t),o=t.bb()>>>0,a=t.Pb(28).bb()>>>0,h=t.Pb(56).bb()>>>0;r+=s;var c=this.buffer.byteLength;switch(r>c&&this.resize((c*=2)>r?c:r),r-=s,s){case 10:this.view.setUint8(r+9,h>>>7&1);case 9:this.view.setUint8(r+8,9!==s?128|h:127&h);case 8:this.view.setUint8(r+7,8!==s?a>>>21|128:a>>>21&127);case 7:this.view.setUint8(r+6,7!==s?a>>>14|128:a>>>14&127);case 6:this.view.setUint8(r+5,6!==s?a>>>7|128:a>>>7&127);case 5:this.view.setUint8(r+4,5!==s?128|a:127&a);case 4:this.view.setUint8(r+3,4!==s?o>>>21|128:o>>>21&127);case 3:this.view.setUint8(r+2,3!==s?o>>>14|128:o>>>14&127);case 2:this.view.setUint8(r+1,2!==s?o>>>7|128:o>>>7&127);case 1:this.view.setUint8(r,1!==s?128|o:127&o)}return i?(this.offset+=s,this):s},s.Lb=function(e,t){return this.Fb(n.Ab(e),t)},s.Mb=function(t){var r=void 0===t;if(r&&(t=this.offset),!this.OR){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+1) <= "+this.buffer.byteLength)}var i=t,n=0,s=0,o=0,a=0;if(a=this.view.getUint8(t++),n=127&a,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<7,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<14,128&a&&(a=this.view.getUint8(t++),n|=(127&a)<<21,128&a&&(a=this.view.getUint8(t++),s=127&a,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<7,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<14,128&a&&(a=this.view.getUint8(t++),s|=(127&a)<<21,128&a&&(a=this.view.getUint8(t++),o=127&a,128&a&&(a=this.view.getUint8(t++),o|=(127&a)<<7,128&a))))))))))throw Error("Buffer overrun");var h=e.Ay(n|s<<28,s>>>4|o<<24,!1);return r?(this.offset=t,h):{value:h,length:t-i}},s.Bb=function(t){var r=this.Mb(t);return r&&r.value instanceof e?r.value=n.Nb(r.value):r=n.Nb(r),r}),s.zl=function(e,r){var i=void 0===r;i&&(r=this.offset);var n,s=e.length;if(!this.OR){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");for(n=0;n<s;++n)if(0===e.charCodeAt(n))throw RangeError("Illegal str: Contains NULL-characters");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}s=c.Ub(t(e))[1],r+=s+1;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=s+1,c.xb(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),this.view.setUint8(r++,0),i?(this.offset=r,this):s},s.tp=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var i,n=e,s=-1;return c.Hb(function(){if(0===s)return null;if(e>=this.CR)throw RangeError("Illegal range: Truncated data, "+e+" < "+this.CR);return 0===(s=this.view.getUint8(e++))?null:s}.bind(this),i=r(),!0),t?(this.offset=e,i()):{qb:i(),length:e-n}},s.Vb=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var n,s=r;n=c.Ub(t(e),this.OR)[1],r+=4+n;var o=this.buffer.byteLength;if(r>o&&this.resize((o*=2)>r?o:r),r-=4+n,this.view.setUint32(r,n,this.kR),r+=4,c.xb(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),r!==s+4+n)throw RangeError("Illegal range: Truncated data, "+r+" == "+(r+4+n));return i?(this.offset=r,this):r-s},s.jb=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var i,n=0,s=e;n=this.view.getUint32(e,this.kR),e+=4;var o,a=e+n;return c.Hb(function(){return e<a?this.view.getUint8(e++):null}.bind(this),o=r(),this.OR),i=o(),t?(this.offset=e,i):{qb:i,length:e-s}},n.Gb="c",n.Qb="b",s.Kb=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var n,s=r;n=c.Ub(t(e))[1],r+=n;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=n,c.xb(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),i?(this.offset=r,this):r-s},s.Tw=s.Kb,n.Yb=function(e){return c.Ub(t(e))[0]},n.zb=function(e){return c.Ub(t(e))[1]},s.Jb=function(e,t,i){"number"==typeof t&&(i=t,t=void 0);var s=void 0===i;if(s&&(i=this.offset),void 0===t&&(t=n.Gb),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal length: "+e+" (not an integer)");if(e|=0,"number"!=typeof i||i%1!=0)throw TypeError("Illegal offset: "+i+" (not an integer)");if((i>>>=0)<0||i+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+i+" (+0) <= "+this.buffer.byteLength)}var o,a=0,h=i;if(t===n.Gb){if(o=r(),c.Wb(function(){return a<e&&i<this.CR?this.view.getUint8(i++):null}.bind(this),function(e){++a,c.Xb(e,o)}.bind(this)),a!==e)throw RangeError("Illegal range: Truncated data, "+a+" == "+e);return s?(this.offset=i,o()):{qb:o(),length:i-h}}if(t===n.Qb){if(!this.OR){if("number"!=typeof i||i%1!=0)throw TypeError("Illegal offset: "+i+" (not an integer)");if((i>>>=0)<0||i+e>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+i+" (+"+e+") <= "+this.buffer.byteLength)}var u=i+e;if(c.Hb(function(){return i<u?this.view.getUint8(i++):null}.bind(this),o=r(),this.OR),i!==u)throw RangeError("Illegal range: Truncated data, "+i+" == "+u);return s?(this.offset=i,o()):{qb:o(),length:i-h}}throw TypeError("Unsupported metrics: "+t)},s.fw=s.Jb,s.Zb=function(e,r){var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var s,o,a=r;s=c.Ub(t(e),this.OR)[1],o=n.gb(s),r+=o+s;var h=this.buffer.byteLength;if(r>h&&this.resize((h*=2)>r?h:r),r-=o+s,r+=this.mb(s,r),c.xb(t(e),function(e){this.view.setUint8(r++,e)}.bind(this)),r!==a+s+o)throw RangeError("Illegal range: Truncated data, "+r+" == "+(r+s+o));return i?(this.offset=r,this):r-a},s.$b=function(e){var t=void 0===e;if(t&&(e=this.offset),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var i,n=this.Tb(e),s=e;e+=n.length,n=n.value;var o=e+n,a=r();return c.Hb(function(){return e<o?this.view.getUint8(e++):null}.bind(this),a,this.OR),i=a(),t?(this.offset=e,i):{qb:i,length:e-s}},s.append=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof n||(e=n.wrap(e,t));var s=e.CR-e.offset;if(s<=0)return this;r+=s;var o=this.buffer.byteLength;return r>o&&this.resize((o*=2)>r?o:r),r-=s,new Uint8Array(this.buffer,r).set(new Uint8Array(e.buffer).subarray(e.offset,e.CR)),e.offset+=s,i&&(this.offset+=s),this},s.eP=function(e,t){return e.append(this,t),this},s.assert=function(e){return this.OR=!e,this},s.tP=function(){return this.buffer.byteLength},s.clear=function(){return this.offset=0,this.CR=this.buffer.byteLength,this.AR=-1,this},s.clone=function(e){var t=new n(0,this.kR,this.OR);if(e){var r=new ArrayBuffer(this.buffer.byteLength);new Uint8Array(r).set(this.buffer),t.buffer=r,t.view=new DataView(r)}else t.buffer=this.buffer,t.view=this.view;return t.offset=this.offset,t.AR=this.AR,t.CR=this.CR,t},s.compact=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(0===e&&t===this.buffer.byteLength)return this;var r=t-e;if(0===r)return this.buffer=o,this.view=null,this.AR>=0&&(this.AR-=e),this.offset=0,this.CR=0,this;var i=new ArrayBuffer(r);return new Uint8Array(i).set(new Uint8Array(this.buffer).subarray(e,t)),this.buffer=i,this.view=new DataView(i),this.AR>=0&&(this.AR-=e),this.offset=0,this.CR=r,this},s.rP=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(e===t)return new n(0,this.kR,this.OR);var r=t-e,i=new n(r,this.kR,this.OR);return i.offset=0,i.CR=r,i.AR>=0&&(i.AR-=e),this.Ap(i,0,e,t),i},s.Ap=function(e,t,r,i){var s,o;if(!this.OR&&!n.LR(e))throw TypeError("Illegal target: Not a ByteBuffer");if(t=(o=void 0===t)?e.offset:0|t,r=(s=void 0===r)?this.offset:0|r,i=void 0===i?this.CR:0|i,t<0||t>e.buffer.byteLength)throw RangeError("Illegal target range: 0 <= "+t+" <= "+e.buffer.byteLength);if(r<0||i>this.buffer.byteLength)throw RangeError("Illegal source range: 0 <= "+r+" <= "+this.buffer.byteLength);var a=i-r;return 0===a?e:(e.iP(t+a),new Uint8Array(e.buffer).set(new Uint8Array(this.buffer).subarray(r,i),t),s&&(this.offset+=a),o&&(e.offset+=a),this)},s.iP=function(e){var t=this.buffer.byteLength;return t<e?this.resize((t*=2)>e?t:e):this},s.fill=function(e,t,r){var i=void 0===t;if(i&&(t=this.offset),"string"==typeof e&&e.length>0&&(e=e.charCodeAt(0)),void 0===t&&(t=this.offset),void 0===r&&(r=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!=0)throw TypeError("Illegal end: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(t>=r)return this;for(;t<r;)this.view.setUint8(t++,e);return i&&(this.offset=t),this},s.Jl=function(){return this.CR=this.offset,this.offset=0,this},s.mark=function(e){if(e=void 0===e?this.offset:e,!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}return this.AR=e,this},s.order=function(e){if(!this.OR&&"boolean"!=typeof e)throw TypeError("Illegal littleEndian: Not a boolean");return this.kR=!!e,this},s.nP=function(e){return this.kR=void 0===e||!!e,this},s.sP=function(e){return this.kR=void 0!==e&&!e,this},s.oP=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.OR){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof n||(e=n.wrap(e,t));var s=e.CR-e.offset;if(s<=0)return this;var o,a=s-r;if(a>0){var h=new ArrayBuffer(this.buffer.byteLength+a);o=new Uint8Array(h),o.set(new Uint8Array(this.buffer).subarray(r,this.buffer.byteLength),s),this.buffer=h,this.view=new DataView(h),this.offset+=a,this.AR>=0&&(this.AR+=a),this.CR+=a,r+=a}else o=new Uint8Array(this.buffer);return o.set(new Uint8Array(e.buffer).subarray(e.offset,e.CR),r-s),e.offset=e.CR,i&&(this.offset-=s),this},s.aP=function(e,t){return e.oP(this,t),this},s.hP=function(e){"function"!=typeof e&&(e=console.log.bind(console)),e(this.toString()+"\n-------------------------------------------------------------------\n"+this.cP(!0))},s.uP=function(){return this.CR-this.offset},s.reset=function(){return this.AR>=0?(this.offset=this.AR,this.AR=-1):this.offset=0,this},s.resize=function(e){if(!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal capacity: "+e+" (not an integer)");if((e|=0)<0)throw RangeError("Illegal capacity: 0 <= "+e)}if(this.buffer.byteLength<e){var t=new ArrayBuffer(e);new Uint8Array(t).set(new Uint8Array(this.buffer)),this.buffer=t,this.view=new DataView(t)}return this},s.reverse=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}return e===t?this:(Array.prototype.reverse.call(new Uint8Array(this.buffer).subarray(e,t)),this.view=new DataView(this.buffer),this)},s.dw=function(e){if(!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal length: "+e+" (not an integer)");e|=0}var t=this.offset+e;if(!this.OR&&(t<0||t>this.buffer.byteLength))throw RangeError("Illegal length: 0 <= "+this.offset+" + "+e+" <= "+this.buffer.byteLength);return this.offset=t,this},s.slice=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var r=this.clone();return r.offset=e,r.CR=t,r},s.lP=function(e){var t=this.offset,r=this.CR;if(t>r){var i=t;t=r,r=i}if(!this.OR){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!=0)throw TypeError("Illegal limit: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(!e&&0===t&&r===this.buffer.byteLength)return this.buffer;if(t===r)return o;var n=new ArrayBuffer(r-t);return new Uint8Array(n).set(new Uint8Array(this.buffer).subarray(t,r),0),n},s.pn=s.lP,s.toString=function(e,t,r){if(void 0===e)return"ByteBufferAB(offset="+this.offset+",markedOffset="+this.AR+",limit="+this.CR+",capacity="+this.tP()+")";switch("number"==typeof e&&(e="utf8",t=e,r=t),e){case"utf8":return this.pP(t,r);case"base64":return this.fP(t,r);case"hex":return this.dP(t,r);case"binary":return this.gP(t,r);case"debug":return this.cP();case"columns":return this.vP();default:throw Error("Unsupported encoding: "+e)}};var h=function(){for(var e={},t=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47],r=[],i=0,n=t.length;i<n;++i)r[t[i]]=i;return e.encode=function(e,r){for(var i,n;null!==(i=e());)r(t[i>>2&63]),n=(3&i)<<4,null!==(i=e())?(n|=i>>4&15,r(t[63&(n|i>>4&15)]),n=(15&i)<<2,null!==(i=e())?(r(t[63&(n|i>>6&3)]),r(t[63&i])):(r(t[63&n]),r(61))):(r(t[63&n]),r(61),r(61))},e.decode=function(e,t){function i(e){throw Error("Illegal character code: "+e)}for(var n,s,o;null!==(n=e());)if(s=r[n],void 0===s&&i(n),null!==(n=e())&&(o=r[n],void 0===o&&i(n),t(s<<2>>>0|(48&o)>>4),null!==(n=e()))){if(void 0===(s=r[n])){if(61===n)break;i(n)}if(t((15&o)<<4>>>0|(60&s)>>2),null!==(n=e())){if(void 0===(o=r[n])){if(61===n)break;i(n)}t((3&s)<<6>>>0|o)}}},e.test=function(e){return/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(e)},e}();s.fP=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var i;return h.encode(function(){return e<t?this.view.getUint8(e++):null}.bind(this),i=r()),i()},n.MR=function(e,r,i){if(!i){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if(e.length%4!=0)throw TypeError("Illegal str: Length not a multiple of 4")}var s=new n(e.length/4*3,r,i),o=0;return h.decode(t(e),function(e){s.view.setUint8(o++,e)}),s.CR=o,s},n.btoa=function(e){return n.UR(e).fP()},n.atob=function(e){return n.MR(e).gP()},s.gP=function(e,t){if(e=void 0===e?this.offset:e,t=void 0===t?this.CR:t,!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(e===t)return"";for(var r=[],i=[];e<t;)r.push(this.view.getUint8(e++)),r.length>=1024&&(i.push(String.fromCharCode.apply(String,r)),r=[]);return i.join("")+String.fromCharCode.apply(String,r)},n.UR=function(e,t,r){if(!r&&"string"!=typeof e)throw TypeError("Illegal str: Not a string");for(var i,s=0,o=e.length,a=new n(o,t,r);s<o;){if(i=e.charCodeAt(s),!r&&i>255)throw RangeError("Illegal charCode at "+s+": 0 <= "+i+" <= 255");a.view.setUint8(s++,i)}return a.CR=o,a},s.cP=function(e){for(var t,r=-1,i=this.buffer.byteLength,n="",s="",o="";r<i;){if(-1!==r&&(t=this.view.getUint8(r),n+=t<16?"0"+t.toString(16).toUpperCase():t.toString(16).toUpperCase(),e&&(s+=t>32&&t<127?String.fromCharCode(t):".")),++r,e&&r>0&&r%16==0&&r!==i){for(;n.length<51;)n+=" ";o+=n+s+"\n",n=s=""}r===this.offset&&r===this.CR?n+=r===this.AR?"!":"|":r===this.offset?n+=r===this.AR?"[":"<":r===this.CR?n+=r===this.AR?"]":">":n+=r===this.AR?"'":e||0!==r&&r!==i?" ":""}if(e&&" "!==n){for(;n.length<51;)n+=" ";o+=n+s+"\n"}return e?o:n},n.HR=function(e,t,r){for(var i,s,o=e.length,a=new n((o+1)/3|0,t,r),h=0,c=0,u=!1,l=!1,p=!1,f=!1,d=!1;h<o;){switch(i=e.charAt(h++)){case"!":if(!r){if(l||p||f){d=!0;break}l=p=f=!0}a.offset=a.AR=a.CR=c,u=!1;break;case"|":if(!r){if(l||f){d=!0;break}l=f=!0}a.offset=a.CR=c,u=!1;break;case"[":if(!r){if(l||p){d=!0;break}l=p=!0}a.offset=a.AR=c,u=!1;break;case"<":if(!r){if(l){d=!0;break}l=!0}a.offset=c,u=!1;break;case"]":if(!r){if(f||p){d=!0;break}f=p=!0}a.CR=a.AR=c,u=!1;break;case">":if(!r){if(f){d=!0;break}f=!0}a.CR=c,u=!1;break;case"'":if(!r){if(p){d=!0;break}p=!0}a.AR=c,u=!1;break;case" ":u=!1;break;default:if(!r&&u){d=!0;break}if(s=parseInt(i+e.charAt(h++),16),!r&&(isNaN(s)||s<0||s>255))throw TypeError("Illegal str: Not a debug encoded string");a.view.setUint8(c++,s),u=!0}if(d)throw TypeError("Illegal str: Invalid symbol at "+h)}if(!r){if(!l||!f)throw TypeError("Illegal str: Missing offset or limit");if(c<a.buffer.byteLength)throw TypeError("Illegal str: Not a debug encoded string (is it hex?) "+c+" < "+o)}return a},s.dP=function(e,t){if(e=void 0===e?this.offset:e,t=void 0===t?this.CR:t,!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}for(var r,i=new Array(t-e);e<t;)r=this.view.getUint8(e++),r<16?i.push("0",r.toString(16)):i.push(r.toString(16));return i.join("")},n.BR=function(e,t,r){if(!r){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if(e.length%2!=0)throw TypeError("Illegal str: Length not a multiple of 2")}for(var i,s=e.length,o=new n(s/2|0,t),a=0,h=0;a<s;a+=2){if(i=parseInt(e.substring(a,a+2),16),!r&&(!isFinite(i)||i<0||i>255))throw TypeError("Illegal str: Contains non-hex characters");o.view.setUint8(h++,i)}return o.CR=h,o};var c=function(){var e={};return e.yP=1114111,e.mP=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<128?t(127&r):r<2048?(t(r>>6&31|192),t(63&r|128)):r<65536?(t(r>>12&15|224),t(r>>6&63|128),t(63&r|128)):(t(r>>18&7|240),t(r>>12&63|128),t(r>>6&63|128),t(63&r|128)),r=null},e.Wb=function(e,t){for(var r,i,n,s,o=function(e){e=e.slice(0,e.indexOf(null));var t=Error(e.toString());throw t.name="TruncatedError",t.Hn=e,t};null!==(r=e());)if(0==(128&r))t(r);else if(192==(224&r))null===(i=e())&&o([r,i]),t((31&r)<<6|63&i);else if(224==(240&r))(null===(i=e())||null===(n=e()))&&o([r,i,n]),t((15&r)<<12|(63&i)<<6|63&n);else{if(240!=(248&r))throw RangeError("Illegal starting byte: "+r);(null===(i=e())||null===(n=e())||null===(s=e()))&&o([r,i,n,s]),t((7&r)<<18|(63&i)<<12|(63&n)<<6|63&s)}},e.EP=function(e,t){for(var r,i=null;;){if(null===(r=null!==i?i:e()))break;r>=55296&&r<=57343&&null!==(i=e())&&i>=56320&&i<=57343?(t(1024*(r-55296)+i-56320+65536),i=null):t(r)}null!==i&&t(i)},e.Xb=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<=65535?t(r):(r-=65536,t(55296+(r>>10)),t(r%1024+56320)),r=null},e.xb=function(t,r){e.EP(t,function(t){e.mP(t,r)})},e.Hb=function(t,r){e.Wb(t,function(t){e.Xb(t,r)})},e.TP=function(e){return e<128?1:e<2048?2:e<65536?3:4},e.IP=function(t){for(var r,i=0;null!==(r=t());)i+=e.TP(r);return i},e.Ub=function(t){var r=0,i=0;return e.EP(t,function(t){++r,i+=e.TP(t)}),[r,i]},e}();return s.pP=function(e,t){if(void 0===e&&(e=this.offset),void 0===t&&(t=this.CR),!this.OR){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!=0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var i;try{c.Hb(function(){return e<t?this.view.getUint8(e++):null}.bind(this),i=r())}catch(r){if(e!==t)throw RangeError("Illegal range: Truncated data, "+e+" != "+t)}return i()},n.xR=function(e,r,i){if(!i&&"string"!=typeof e)throw TypeError("Illegal str: Not a string");var s=new n(c.Ub(t(e),!0)[1],r,i),o=0;return c.xb(t(e),function(e){s.view.setUint8(o++,e)}),s.CR=o,s},n}"object"==typeof e&&e&&"object"==typeof t&&t?e.t=function(){var e;try{e=r(90)}catch(e){}return a(e)}():(n=[r(91)],void 0!==(s=function(e){return a(e)}.apply(t,n))&&(e.t=s))}()}).call(t,r(58)(e))},function(e,t,r){"use strict";var i=r(2),n=r(0),s=r(23),o=r(43),a=r(161),h=r(5),c=r(4),u=h.Rt.Ni,l=h.Rt.Ci,p=function(){function e(e,t,r,i){this.te=n.Framework.resolve(n.Framework.q.I).log(e.sessionId),this.mn="S["+e.sessionId+"]",this.Ol=t,this._l=r,this.swarmId=e.swarmId,this.Pl=i,this.receiver=new a.c6(t,r,e),this.sender=new a.u6(t,r,e,this),this.IC=e.IC,this.SC=e.SC,this.Jz=e.Jz,(l||n.Framework.S()&&o.iC.tC)&&(this.$z=e.$z)}return e.prototype.ql=function(){return this.sender.ql()||this.receiver.ql()},e.prototype.close=function(){var e=this,t=i.defer();return this.sender.l6().then(function(r){e.receiver.close(r).then(function(r){e.Hq(r).then(function(r){e.Pl.close(r).then(function(e){t.resolve(e)})})})}),t.Te},e.prototype.Hq=function(e){this.te.debug("SEND CLOSE TO "+this._l);var t=new s.mu.Mr.np.ll;return t.p6(e),this.jl(s.mu.Rl.ll,t),i(this.swarmId)},e.prototype.Ae=function(e){try{switch(u&&this.te.debug("DISPATCH "+e.msgId),e.msgId){case s.mu.Rl.hl:var t=s.mu.Mr.np.hl.decode(e.rp);this.receiver.f6(t);break;case s.mu.Rl.ul:var r=s.mu.Mr.np.ul.decode(e.rp);this.sender.d6(r.g6);break;case s.mu.Rl.cl:var i=s.mu.Mr.np.cl.decode(e.rp);this.sender.v6(i.g6);break;case s.mu.Rl.fl:u&&this.te.debug("RECEIVED OUT PART,DECODING ");var n=s.mu.Mr.np.vV.decode(e.rp);u&&this.te.debug("RECEIVED OUT PART FROM "+n.guid),this.SC.jq(n,this.Pl);break;case s.mu.Rl.dl:u&&this.te.debug("RECEIVED OUT PART RESP ");var o=s.mu.Mr.np.rV.decode(e.rp);u&&this.te.debug("RECEIVED OUT PART RESP FROM "+o.accept),this.SC.mV(o,this.Pl);break;case s.mu.Rl.al:var a=s.mu.Mr.np.al.decode(e.rp);u&&this.te.debug("RECEIVED HAVE FOR "+a.mN+" FROM "+this._l),this.SC.y6(this._l,a);break;case s.mu.Rl.ll:var h=s.mu.Mr.np.ll.decode(e.rp);u&&this.te.debug("RECEIVED CLOSE FROM "+this._l),this.SC.gV(this._l,h);break;case s.mu.Rl.Request:var l=s.mu.Mr.np.Request.decode(e.rp);u&&this.te.debug("RECEIVED REQUEST FOR "+l.mN+" FROM "+this._l),this.Jz.Y_(this._l,l,this);break;case s.mu.Rl.pl:var p=s.mu.Mr.np.pl.decode(e.rp);u&&this.te.debug("DoNotHave "+p.g6),this.IC.m6(p);break;case s.mu.Rl.gl:var f=s.mu.Mr.np.Ox.decode(e.rp);u&&this.te.debug("UDP HANDSHAKE MESSAGE RECEIVED FROM "+f.Ck),this.$z.Mx(f,this.Pl);break;case s.mu.Rl.vl:var d=s.mu.Mr.np.vl.decode(e.rp);u&&this.te.debug("UDP HANDSHAKE MESSAGE RESPONSE RECEIVED FROM "+this._l),this.$z.Lx(d,this.Pl);break;case s.mu.Rl.yl:var g=s.mu.Mr.np.yl.decode(e.rp);u&&this.te.debug("SWITCH LEADERSHIP REQUEST RECEIVED FROM "+this._l),this.$z.Xx(g);break;case s.mu.Rl.ml:var v=s.mu.Mr.np.tH.decode(e.rp);u&&this.te.debug("UDP SWITCH ACKNOWLEDGMENT RESPONSE FROM "+this._l),this.$z.nH(v,this._l);break;case s.mu.Rl.El:var y=s.mu.Mr.np.El.decode(e.rp);u&&this.te.debug("BITRATE INFO "+y.bitrate+" FROM "+y.guid),this.SC.IV(y);break;case s.mu.Rl.Tl:var m=s.mu.Mr.np.Tl.decode(e.rp);u&&this.te.debug("RECEIVED BATCH HAVES FOR FROM "+this._l),this.SC.E6(this._l,m);break;case s.mu.Rl.hh:var E=s.mu.Mr.np.OV.decode(e.rp);u&&this.te.debug("RECEIVED PEER INFO FROM "+this._l),this.SC.bV(E);break;case s.mu.Rl.Il:var T=s.mu.Mr.np.Il.decode(e.rp);u&&this.te.debug("RECEIVED PING FROM "+this._l),this.SC.T6(T);break;case s.mu.Rl.wl:var I=s.mu.Mr.np.wl.decode(e.rp);u&&this.te.debug("RECEIVED PONG FROM "+this._l),this.SC.I6(I);break;case s.mu.Rl.Sl:var w=s.mu.Mr.np.w6.decode(e.rp);u&&this.te.debug("RECEIVED NON PARTNER MESSAGE FROM "+this._l),this.IC.S6(this._l,w);break;default:this.te.warn("UNKNOWN MESSAGE TYPE "+e.msgId)}}catch(e){c.ErrorMonitor.gi().di("P2P DISPATCHER ERROR",this.mn,e)}},e.prototype.jl=function(e,t){this.Pl.jl(e,this.swarmId,t)},e}();t.kl=p},function(e,t,r){"use strict";var i=r(44),n=r(32),s=r(2),o=r(23),a=r(0),h=r(6),c=r(162),u=r(3),l=r(92),p=r(4),f=function(){function e(e,t,r){this.R6=new i,this.b6=new i,this.P6=null,this.ol=o.mu.ol,this.Ol=e,this._l=t,this.IC=r.IC,this.wC=r.wC,this.Hl=a.Framework.resolve(a.Framework.q.F),this.te=a.Framework.resolve(a.Framework.q.I).log(r.sessionId),this.mn="S["+r.sessionId+"]"}return e.prototype.uV=function(e){this.A6=e},e.prototype.ql=function(){return!(0===this.R6.keys().length&&null===this.P6)},e.prototype.C6=function(e){var t=new o.mu.Mr.np.Request;t.mN=e.zu(),t.g6=e.Fk,this.ol&&this.te.debug("INITIATING TR-"+e.Fk+" TIMEOUT: "+e.k6+" FRAGMENT: "+e.zu()+" FROM: "+this._l),this.R6.set(e.Fk,e),this.b6.set(e.Fk,a.Framework.time()),e.KU.qq.jl(o.mu.Rl.Request,t)},e.prototype.f6=function(e){var t=e.g6,r=e.data.lP(),i=e.O6,n=e.tx,s=e.headers;if(this.ol&&this.te.debug("RCV Chunk "+r.byteLength),!this.R6.has(t))return void this.te.warn("Received chunk of expired transfer id "+t);null==this.P6?(this.ol&&this.te.debug("INITIATED TR-"+t+",SIZE="+n),this.P6=this.R6.get(t),this.P6.Fk=t,this._6(t,this.P6.KU),null!=s?this.P6.xu=s:this.te.warn("HEADERS NULL IN FIRST CHUNK"),this.IC.F0(this._l,this.P6,i,n),this.P6.qu=i,a.Framework.S()||(this.P6.Hu=r)):(this._6(t,this.P6.KU),this.P6.qu+=i,a.Framework.S()||(this.P6.Hu=h.fn.appendBuffer(this.P6.Hu,r)));var o=a.Framework.S()?this.P6.qu:this.P6.Hu.byteLength;if(this.ol&&this.te.debug("RECEIVED "+o+"/"+n+" TRID "+t),o==n){this.ol&&this.te.debug("RCV ALL DATA "+o+" TR-"+this.P6.ju),this.P6.Mu.Ru=o,a.Framework.clearTimeout(this.P6.Fx),this.R6.delete(t);var c=a.Framework.time()-this.b6.get(t);this.te.debug("RCV ALL DATA FROM "+this._l+" AFTER "+c+" mseconds"),this.b6.delete(t),this.IC.HC(t,this.P6),this.P6=null}},e.prototype._6=function(e,t){this.ol&&this.te.debug("SEND ACK "+e+" TO "+this._l);var r=new o.mu.Mr.np.ul;r.g6=e,t.qq.jl(o.mu.Rl.ul,r)},e.prototype.close=function(e){var t=this,r=s.defer();return null!=this.P6&&this.N6(this.P6.Fk),this.R6.keys().slice().forEach(function(e){t.N6(e)}),r.resolve(l.rq.nx),r.Te},e.prototype.N6=function(e){if(this.R6.has(e)){var t=this.R6.get(e);t.Mu.Ru=t.qu,this.te.debug("SEND CANCEL FOR "+e+" TO "+this._l),this.b6.delete(e);var r=new o.mu.Mr.np.cl;r.g6=e,t.KU.qq.jl(o.mu.Rl.cl,r),null!==this.P6&&this.P6.Ju()===t.Ju()&&(this.P6=null),this.R6.delete(e)}else this.te.warn("CLEAN UP NOT PENDING "+e)},e}();t.c6=f;var d=function(){function e(e,t,r,n){this.ol=o.mu.ol,this.D6=null,this.F6=new Array,this.L6=new i,this.M6=0,this.close=null,this.Ol=e,this._l=t,this.B6=r.Jz,this.qq=n,this.bC=r.bC,this.te=a.Framework.resolve(a.Framework.q.I).log(r.sessionId),this.mn="S["+r.sessionId+"]",this.Hl=a.Framework.resolve(a.Framework.q.F)}return e.prototype.uV=function(e){this.A6=e},e.prototype.U6=function(e,t,r,i,n){var s=this;this.ol&&this.te.info("SEND FRAGMENT "+e+" TO "+this._l);var o=new c.x6;o.g6=t,o.mN=e,o.H6=n,o.headers=i,o.q6=r,o.V6=Math.ceil(o.q6/u.ni.Mr.Nr),o.j6=0,this.F6.push(o),this.ol&&this.F6.forEach(function(e){s.te.debug(s._l+" PENDING OUT "+e)}),null===this.D6?this.G6():this.ol&&this.te.debug(this._l+" OUT MSG NOT NULL")},e.prototype.d6=function(e){this.ol&&this.te.debug("ONGOING "+e+" GOT ACK"),null!==this.D6&&this.D6.g6.toString()===e.toString()?this.Q6(!1):this.te.warn("RECEIVED ACK FOR UNKNOWN TR-"+e)},e.prototype.v6=function(e){null!=this.D6&&this.D6.g6===e?(this.te.debug("GOT CANCEL FOR ONGOING TR-"+e),this.te.debug("TRANSPORT CANCEL STATS "+this.Ol+","+this._l+","+e),this.L6.delete(e),0!=this.D6.j6?this.B6.K6(this._l,this.A6,this.D6.j6,this.D6.q6):this.B6.Y6(this._l,this.A6,this.D6.q6),this.D6=null,this.G6()):this.F6=this.F6.filter(function(t){return t.g6!==e})},e.prototype.G6=function(){try{if(null===this.D6&&0!==this.F6.length){var e=this.F6.shift();this.D6=e,this.ol&&this.te.debug("DATA TO SEND LENGTH "+this.D6.q6+" IN "+this.D6.V6+" CHUNKS WITH TR-"+this.D6.g6),this.Q6(!0)}}catch(e){p.ErrorMonitor.gi().di("ERROR SEND FRAGMENT",this.mn,e),this.Vl()}},e.prototype.Q6=function(e){e&&(this.L6.set(this.D6.g6,a.Framework.time()),this.M6=this.D6.V6);try{if(null!=this.D6)if(0===this.D6.V6)this.te.debug("FINISHED SENDING TRANSFER "+this.D6.g6+" WITH "+this.D6.j6+" BYTES"),this.L6.delete(this.D6.g6),this.B6.z6(this._l,this.A6,this.D6.q6),this.D6=null,this.J6(),this.G6();else{this.ol&&this.te.debug("A CHUNK");var t=Math.min(this.D6.j6+u.ni.Mr.Nr,this.D6.q6),r=t-this.D6.j6,i=new o.mu.Mr.np.hl;if(i.g6=this.D6.g6,i.tx=this.D6.q6,i.O6=r,e&&null!=this.D6.headers&&(i.headers=this.D6.headers),a.Framework.S()||null==this.D6.H6)i.data=n.wrap(new ArrayBuffer(0));else if(i.data=this.bC.W6(this.D6.mN,this.M6-this.D6.V6),null==i.data){var s=this.D6.H6.slice(this.D6.j6,t);i.data=n.wrap(s)}this.D6.j6=this.D6.j6+r,this.qq.jl(o.mu.Rl.hl,i),this.ol&&this.te.debug("SND ["+this.D6.j6+"-"+(this.D6.j6+r)+"/"+this.D6.q6+"] TO "+this._l+" OF TR-"+this.D6.g6),this.D6.V6--}else this.te.debug("NO MESSAGE TO SEND")}catch(e){p.ErrorMonitor.gi().di("ERROR SENDING CHUNK",this.mn,e),this.Vl()}},e.prototype.ql=function(){return!(0===this.F6.length&&null===this.D6)},e.prototype.l6=function(){var e=s.defer();return this.F6.length=0,this.ql()?this.close=e:e.resolve("CLOSE"),e.Te},e.prototype.J6=function(){this.close&&this.close.resolve("CLOSED")},e.prototype.Vl=function(){this.D6=null},e}();t.u6=d},function(e,t,r){"use strict";var i=function(){function e(){this.headers=null}return e}();t.x6=i},function(e,t,r){"use strict";var i=r(1),n=r(0),s=r(3),o=r(15),a=function(){function e(e,t,r,s,a,h){this.X6=0,this.Z6=0,this.e8=0,this.t8=new Array,this.r8=new Array,this.R6=new i,this.te=s,this.qq=r,this.guid=e,this.Ik=h,this.i8=a,this.U_=t,this.GV=n.Framework.resolve(o.Pa.ma),this.KV=n.Framework.resolve(o.Pa.ma),this.n8=n.Framework.time()}return e.prototype.Xq=function(e){this.Wq=e,this.qq&&(this.qq.receiver.uV(this.Wq),this.qq.sender.uV(this.Wq))},e.prototype.s8=function(e,t,r){var i=Math.max(1,t);for(r&&(this.Z6+=i,this.X6+=e);this.t8.length>s.ni.Or.Rr;)this.t8.pop();var n=e/i;this.t8.unshift(n)},e.prototype.o8=function(e){this.R6.has(e)?this.te.warn(this.guid+" DUPLICATE {} PENDING REQUESTS "+e):this.R6.set(e,n.Framework.time())},e.prototype.a8=function(e,t,r,i,s,o){if(this.R6.has(e)){var a=this.R6.get(e),h=n.Framework.time()-a;this.R6.delete(e),i&&this.s8(t,h,!0),this.GV.success(t),this.U_.h8(this.Wq,t,r,s,o)}else this.te.warn("REQUEST "+e+" DOES NOT EXIST")},e.prototype.c8=function(e,t,r,i,n,o){if(this.R6.has(e)){var a=this.R6.get(e);this.R6.delete(e),s.ni.Or.br?this.s8(t,a,!0):this.s8(0,a,!0),this.GV.u8(t,i),this.U_.l8(this.Wq,t,r,i,n,o)}else this.te.warn(this.guid+"{} REQUEST "+e+" DOES NOT EXIST")},e.prototype.Dk=function(e,t,r){if(this.R6.has(e)){var i=this.R6.get(e);this.R6.delete(e),this.s8(0,i,!0),this.GV.xn(),this.U_.p8(this.Wq,r,t)}else this.te.warn(this.guid+"{} REQUEST "+e+" DOES NOT EXIST")},e.prototype.f8=function(e,t){this.U_.d8(e,t,!0)},e.prototype.g8=function(e,t){this.U_.v8(e,t,!0)},e.prototype.y8=function(e,t,r){this.U_.m8(e,t,r,!0)},e.prototype.E8=function(){var e=this.t8.reduce(function(e,t){return e+t},0);return this.t8.length>0?e/this.t8.length:0},e.prototype.T8=function(e){this.e8=e},e.prototype.I8=function(){return this.e8},e.prototype.Uq=function(){return this.Ik.Uq()},e}();t.Partner=a},function(e,t,r){"use strict";var i=r(32),n=r(1),s=r(0),o=r(11),a=r(23),h=r(3),c=r(4),u=r(165),l=function(){function e(){this.mn="[PART] ",this.Rq=new n,this.iL=new n,this.tL=new n,this.rL=new n,this.w8=!1,this.S8=!1,this.R8=!0,this.active=!1,this.b8(),this.Cq=[]}return e.prototype.init=function(e){this.te=s.Framework.resolve(s.Framework.q.I).log(e.sessionId),this.wC=e.wC,this.Uw=e.Uw,this.zz=e.zz,this.EC=e.EC,this.Lq=e.x_},e.prototype.wq=function(e){return this.Gq(e.Tk.guid)},e.prototype.Gq=function(e){return this.rL.has(e)||this.tL.has(e)},e.prototype.AV=function(e){return this.tL.has(e)?this.tL.get(e):this.rL.get(e)},e.prototype.Eq=function(e){return this.pV(e.Tk.guid)},e.prototype.pV=function(e){return this.iL.has(e)||this.Rq.has(e)},e.prototype.fV=function(e){return this.iL.has(e)?this.iL.get(e):this.Rq.get(e)},e.prototype.$q=function(e){var t=this;try{if(this.R8)if(this.Gq(e)){var r=this.AV(e),i=this.zz.P8(!1),n=[];this.Uw.JU(this.context.isLive()).then(function(s){t.te.debug(t.mn+"SEND ALL HAVES TO "+e+","+s.length);for(var o=0;o<s.length;o++){var h=0;h=t.context.isLive()?s[o].size():s[o].tx;var c=s[o].Qu,u=new a.mu.Mr.np.al;u.A8(c.zu()),u.C8(h),u.k8(i);var l=c;u.vq(l.ER()),u.O8(l.bitrate),u._8(l.duration),u.p6(l.Yu()),n.push(u)}if(n.length>0){var p=new a.mu.Mr.np.Tl;p.N8(n),r.qq.jl(a.mu.Rl.Tl,p)}})}else this.te.debug(this.mn+"NO PEER TO SEND TO "+e)}catch(e){c.ErrorMonitor.gi().di("SEND ALL HAVES ERROR",this.mn,e)}},e.prototype.pW=function(e,t,r){var i=this;if(this.R8){var n=this.tL.values();this.rL.forEach(function(e,t){n.push(e)});var s=this.zz.P8(!1);n.forEach(function(n){(!r||r&&n.guid!=r.guid)&&i.D8(n.qq,e,t,s)})}},e.prototype.D8=function(e,t,r,i){this.w8&&this.te.debug(this.mn+"SEND HAVE TO "+e._l+" FOR "+t.zu());var n=new a.mu.Mr.np.al;n.A8(t.zu()),n.C8(r),n.k8(i);var s=t;n.vq(s.ER()),n.O8(s.bitrate),n._8(s.duration),n.p6(s.Yu()),e.jl(a.mu.Rl.al,n)},e.prototype.y6=function(e,t){if(this.pV(e)){this.S8&&this.te.debug(this.mn+"HAVE RECEIVED FROM "+e+": "+t.mN);var r=this.fV(e);r.T8(t.F8()),this.EC.put(t,r),this.context.vN(t)}else this.te.info(this.mn+"REC HAVE FROM UNKNOWN PEER "+e)},e.prototype.E6=function(e,t){var r=this;if(this.pV(e)){this.S8&&this.te.debug(this.mn+" BATCH HAVES RECEIVED FROM "+e);var i=this.fV(e);t.L8().forEach(function(e){i.T8(e.F8()),r.EC.put(e,i)}),this.context.vN(t.L8()[0])}else this.te.info(this.mn+"REC HAVE FROM UNKNOWN PEER "+e)},e.prototype.Bq=function(e){var t=new a.mu.Mr.np.Il;t.id=this.wC.W(),t.M8=s.Framework.time(),this.te.debug(this.mn+"REQUEST PING TO PEER GUID "+e._l),e.jl(a.mu.Rl.Il,t)},e.prototype.T6=function(e){var t=e.id;if(!this.Gq(t))return void this.te.warn(this.mn+"RECEIVED A PING REQUEST FROM AN UNKNOWN PEER "+t);var r=-1;e.M8&&(r=e.M8),this.B8(this.AV(t).qq,r)},e.prototype.b8=function(){for(var e="",t=0;t<h.ni.Mr.Nr;t++)e+=String.fromCharCode(33+93*Math.random());for(var r=new ArrayBuffer(e.length),n=new Uint8Array(r),s=e.length,t=0;t<s;t++)n[t]=e.charCodeAt(t);this.U8=i.wrap(n)},e.prototype.B8=function(e,t){var r=new a.mu.Mr.np.wl;r.id=this.wC.W(),r.M8=t,this.U8||this.b8(),r.data=this.U8,r.x8=h.ni.Mr.Nr,this.te.debug(this.mn+"SEND PONG TO PEER GUID "+e._l),e.jl(a.mu.Rl.wl,r)},e.prototype.I6=function(e){var t=e.id;if(!this.pV(t))return void this.te.warn(this.mn+"RECEIVED A PONG FROM AN UNKNOWN PEER "+t);var r=s.Framework.time();if(e.M8&&e.M8>0){var i=r-e.M8,n=this.fV(t);e.x8==e.data.pn().byteLength?n.s8(e.x8,i,!0):this.te.warn(this.mn+"I received a pong with wrong data size")}else this.te.warn(this.mn+"I received a wrong startTs "+e.M8+" from "+t)},e.prototype.sL=function(){try{var e=new n;return this.H8(this.iL,e),this.H8(this.Rq,e),e}catch(e){c.ErrorMonitor.gi().di("GET PARTNERS SNAPSHOTS ERROR",this.mn,e)}},e.prototype.H8=function(e,t){var r=this;e.forEach(function(e,i){var n=new hive.snapshots.Partner;n.inPart=!0,n.outPart=r.Gq(i),n.connInfo=new hive.snapshots.ConnectivityInfo;var s=void 0;e.Ik.Tk.lo&&(s=e.Ik.Tk.lo);var a=void 0;e.Ik.Tk.uo&&(a=e.Ik.Tk.uo),n.connInfo.publicIp=s,n.connInfo.privateIp=a,n.connInfo.externalAs=e.Ik.Tk.externalAs,n.connInfo.internalAs=e.Ik.Tk.internalAs;var h=r.q8();h.rateReceived=e.E8(),n.metrics=h,n.udp=e.Ik.Tk.type==o.Zs.K,t.set(e.Wq,n)})},e.prototype.eL=function(){return new u.V8(this.iL.length,this.Rq.length,this.rL.length,this.tL.length)},e.prototype.q8=function(){var e=new hive.snapshots.PartnerMetrics;return e.rateReceived=0,e.rateSent=0,e.handshakeDelay=0,e},e}();t._V=l},function(e,t,r){"use strict";var i=function(){function e(e,t,r,i){this.iL=e,this.nL=t,this.rL=r,this.tL=i}return e}();t.V8=i},function(e,t,r){"use strict";var i=function(){function e(){}return e}();t.ep=i},function(e,t){e.t={H2:"HiveMsgs",q2:[{name:"Chunk",h3:[{g3:"required",type:"int32",name:"transferId",id:1},{g3:"required",type:"int32",name:"totalSize",id:2},{g3:"required",type:"int32",name:"chunkSize",id:3},{g3:"required",type:"bytes",name:"data",id:4},{g3:"optional",type:"string",name:"headers",id:5}]},{name:"Haves",h3:[{g3:"repeated",type:"Have",name:"have",id:1}]},{name:"Have",h3:[{g3:"required",type:"string",name:"fragmentId",id:1},{g3:"required",type:"int32",name:"size",id:2},{g3:"required",type:"int32",name:"type",id:3},{g3:"required",type:"int32",name:"id",id:4},{g3:"required",type:"int32",name:"bitrate",id:5},{g3:"required",type:"int32",name:"duration",id:6},{g3:"required",type:"float",name:"uploadScore",id:7}]},{name:"Ping",h3:[{g3:"required",type:"string",name:"id",id:1},{g3:"required",type:"uint64",name:"startTs",id:2}]},{name:"Pong",h3:[{g3:"required",type:"string",name:"id",id:1},{g3:"required",type:"bytes",name:"data",id:2},{g3:"required",type:"int32",name:"dataSize",id:3},{g3:"required",type:"uint64",name:"startTs",id:4}]},{name:"Request",h3:[{g3:"required",type:"string",name:"fragmentId",id:1},{g3:"required",type:"int32",name:"transferId",id:2}]},{name:"DoNotHave",h3:[{g3:"required",type:"int32",name:"transferId",id:1}]},{name:"NoPartners",h3:[{g3:"required",type:"int32",name:"transferId",id:1}]},{name:"Cancel",h3:[{g3:"required",type:"int32",name:"transferId",id:1}]},{name:"Ack",h3:[{g3:"optional",type:"int32",name:"transferId",id:1}]},{name:"Close",h3:[{g3:"required",type:"int32",name:"type",id:1}]},{name:"StreamCharacteristics",h3:[{g3:"required",type:"int32",name:"streamState",id:1},{g3:"required",type:"int32",name:"bitrate",id:2},{g3:"required",type:"int32",name:"delta",id:3}]},{name:"OutPartnershipRequest",h3:[{g3:"required",type:"string",name:"guid",id:1},{g3:"required",type:"string",name:"contextId",id:2},{g3:"required",type:"string",name:"p2pProtocolVersion",id:3},{g3:"optional",type:"int32",name:"internalAs",id:4},{g3:"optional",type:"int32",name:"externalAs",id:5},{g3:"optional",type:"string",name:"publicIpString",id:6},{g3:"optional",type:"string",name:"privateIpString",id:7},{g3:"required",type:"string",name:"reportingGuid",id:8},{g3:"repeated",type:"StreamCharacteristics",name:"streamCharacteristics",id:9}]},{name:"OutPartnershipResponse",h3:[{g3:"required",type:"int32",name:"accept",id:1},{g3:"optional",type:"int32",name:"internalAs",id:2},{g3:"optional",type:"int32",name:"externalAs",id:3},{g3:"optional",type:"string",name:"publicIpString",id:4},{g3:"optional",type:"string",name:"privateIpString",id:5},{g3:"optional",type:"string",name:"reportingGuid",id:6},{g3:"repeated",type:"StreamCharacteristics",name:"streamCharacteristics",id:7}]},{name:"PeerInfoMessage",h3:[{g3:"required",type:"string",name:"guid",id:1},{g3:"optional",type:"string",name:"publicIpString",id:2},{g3:"optional",type:"string",name:"privateIpString",id:3},{g3:"optional",type:"int32",name:"internalAs",id:4},{g3:"optional",type:"int32",name:"externalAs",id:5},{g3:"repeated",type:"StreamCharacteristics",name:"streamCharacteristics",id:6}]},{name:"UDPHandshakeMessage",h3:[{g3:"required",type:"string",name:"uuid",id:1},{g3:"required",type:"string",name:"streamId",id:2},{g3:"required",type:"float",name:"udpScore",id:3},{g3:"required",type:"bool",name:"isLeader",id:4}]},{name:"UDPHandshakeResponse",h3:[{g3:"required",type:"string",name:"accept",id:1}]},{name:"UDPSwitchLeadershipRequest",h3:[{g3:"required",type:"string",name:"uuid",id:1},{g3:"required",type:"float",name:"udpScore",id:2}]},{name:"UDPSwitchLeadershipAck",h3:[{g3:"required",type:"bool",name:"ok",id:1}]},{name:"Bitrate",h3:[{g3:"required",type:"string",name:"guid",id:1},{g3:"required",type:"int32",name:"bitrate",id:2}]}]}},function(e,t,r){"use strict";var i=r(3),n=function(){function e(e,t,r,i,n){this.Tx=0,this.Ix=!1,this.Nx="",this.Ck=e,this.Tx=t,r&&(this.address=r),i&&(this.Ix=i),n&&(this.Nx=n)}return e.Dp=function(e,t){var r=0;return r=e.Tx>t.Tx?1:e.Tx<t.Tx?-1:0,0!=r?-r:i.ni.UDPBroadcast.Hr?t.Ck.localeCompare(e.Ck):e.Ck.localeCompare(t.Ck)},e}();t.Ex=n},function(e,t,r){"use strict";var i=r(1),n=r(40),s=r(0),o=r(15),a=r(10),h=r(11),c=function(){function e(){this.Ul=new n.Counter,this.j8=new i,this.G8=new i,this.Q8=s.Framework.resolve(o.Pa.va)}return e.prototype.init=function(e){this.te=s.Framework.resolve(s.Framework.q.I).log(e.sessionId),this.EC=e.EC,this.SC=e.SC,this.TC=e.TC,this.wC=e.wC,this.U_=e.x_,this.Q8.K8(e.wC)},e.prototype.TI=function(e){this.te.debug("FRL ISSUE REQ FOR FRAGMENT "+e.Qu.toString()+"-"+e.Mu.Ru+" ["+a.Ws[e.Yu()]+"] TO P2P"),this.j8.set(e.Ju(),e);var t=this.Ul.next();e.Fk=t,this.G8.set(t,e.Ju()),this.W0(e)},e.prototype.W0=function(e){var t=e.zu(),r=e.Ju(),i=this.Y8(t);e.size=this.EC.o1(t).size;var n=this.Q8.z8(i,e.type);null!=n?(this.te.info("SEND REQUEST "+e.Fk+" FOR "+r+" TO "+n.qq._l+" (LAN LEADER "+n.Ik.Tk.so+" iAS "+n.Ik.Tk.internalAs+" eAS "+n.Ik.Tk.externalAs+" privateIp "+n.Ik.Tk.uo+" ) out of "+i.length+" type "+h.Zs[n.Ik.Tk.type]+" size:"+e.size),e.KU=n,e.YU=n.Ik.Tk,e.KU.o8(e.Fk),e.Mu.Iu=!0,e.Mu.Ou=s.Framework.time(),this.U_.J8(e),this.Nk(e)?n.qq.receiver.C6(e):this.Dk(e.Fk,"TIMED-OUT")):this.Dk(e.Fk,"NO PARTNERS FOUND FOR REQUEST")},e.prototype.Y8=function(e){var t=this,r=[];return this.EC.mk(e).forEach(function(e){t.SC.pV(e.guid)?r.push(e):t.te.warn("I HAVE A HAVE FROM A NON IN-PARTNER "+e.guid)}),r},e.prototype.Nk=function(e){var t=this,r=!1,i=0;null==e.size?(i=this.EC.o1(e.zu()).size,this.te.warn("request size not set - this should not happen")):i=e.size;var n=e.Gu.RN().rU(e,i);return e.k6=n,n>0&&(r=!0,null==e.Fx&&(e.Fx=s.Framework.setTimeout(function(){t.U_.W8(e),t.Dk(e.Fk,"TIMED-OUT")},n))),r},e.prototype.Dk=function(e,t){this.te.info(t+" "+e);var r=this.X8(e,!0);this.te.info("REQUEST "+e+" FOR "+r.Ju()+" FAILED BECAUSE "+t),r&&this.TC.zJ(r)},e.prototype.X8=function(e,t){if(this.G8.has(e)){var r=this.G8.get(e);this.G8.delete(e);var i=this.j8.get(r);if(this.j8.delete(r),s.Framework.clearTimeout(i.Fx),t&&this.SC.pV(i.KU.qq._l)){i.KU.qq.receiver.N6(e);var n=i.Yu()==a.Ws.Ys;0!=i.qu?i.KU.c8(i.Fk,i.qu,i.Mu.p2pAgenTrafficSuccessQt,i.size,n,i.type):i.KU.Dk(i.Fk,n,i.size)}return i}return this.te.warn("CALLED CANCEL REQUEST ON NON EXISTING SESSION"),null},e.prototype.YJ=function(e){if(this.j8.has(e)){var t=this.j8.get(e).Fk;this.X8(t,!0)}},e.prototype.F0=function(e,t,r,i){this.te.debug("FRL DOWNLOADING "+t.Ju()+" FROM "+e+" P2P")},e.prototype.HC=function(e,t){if(this.te.debug("FRL PROMISED FRAGMENT "+t.Ju()+" RETURNED FROM P2P SIZE "+t.Mu.Ru),t=this.X8(e,!1)){t.Mu.Nu=s.Framework.time();var r=t.Yu()==a.Ws.Ys;t.KU.a8(t.Fk,t.size,t.Mu.p2pAgenTrafficSuccessQt,!0,r,t.type),this.TC.WJ(t)}else this.te.warn("TRIED TO REMOVE A NON EXISTING REQUEST "+e+" (THIS SHOULD NOT HAPPEN. AT LEAST NOT TOO OFTEN)")},e.prototype.m6=function(e){var t=e.Z8();if(this.G8.has(t)){this.te.debug("DO NOT HAVE RECEIVED FOR "+t);var r=this.X8(t,!1),i=r.Yu()==a.Ws.Ys;r.KU.Dk(r.Fk,i,r.size),this.TC.zJ(r)}else this.te.warn("UNKNOWN DO NOT HAVE "+t)},e.prototype.S6=function(e,t){var r=t.g6;if(this.G8.has(r)){this.te.debug("REJECTED BY NON PARTNER FOR "+r),this.SC.xq(e);var i=this.X8(r,!1);this.TC.zJ(i)}},e.prototype.Qe=function(e){return this.j8.has(e)},e}();t.qz=c},function(e,t,r){"use strict";var i=r(0),n=r(23),s=r(4),o=function(){function e(){}return e.prototype.init=function(e){this.te=i.Framework.resolve(i.Framework.q.I).log(e.sessionId),this.mn="S["+e.sessionId+"]",this.vx=e,this.EC=e.EC,this.Uw=e.Uw,this.SC=e.SC,this.zz=e.zz,this.wC=e.wC,this.U_=e.x_},e.prototype.Y_=function(e,t,r){try{if(this.SC.Gq(e)){var i=this.SC.AV(e);this.e5(e,t,i)}else this.t5(e,t,r)}catch(e){s.ErrorMonitor.gi().di("GOT ERROR ON SERVING REQUEST",this.mn,{error:e})}},e.prototype.z6=function(e,t,r){if(this.zz.success(r),this.SC.Gq(e)){var i=this.SC.AV(e);i.KV.success(r),i.f8(r,t)}},e.prototype.K6=function(e,t,r,i){if(this.zz.u8(r,i),this.SC.Gq(e)){var n=this.SC.AV(e);n.KV.u8(r,i),n.y8(r,i,t)}},e.prototype.Y6=function(e,t,r){if(this.zz.xn(),this.SC.Gq(e)){var i=this.SC.AV(e);i.KV.xn(),i.g8(r,t)}},e.prototype.e5=function(e,t,r){var i=this;this.Uw.get(t.mN).then(function(n){n?(i.te.debug("SENDING TO "+e+","+t.mN+","+t.g6+","+n.length+" DL "+n.length),r.qq.sender.U6(t.mN,t.g6,n.length,n.headers,n.data)):(i.te.debug("RECEIVED REQUEST FOR "+t.mN+" FROM "+e+" CAN'T BE SERVED"),i.r5(t.g6,r))})},e.prototype.r5=function(e,t){this.te.info("SEND DO NOT HAVE "+e+" TO "+t.qq.Ol);var r=new n.mu.Mr.np.pl;r.i5(e),t.qq.jl(n.mu.Rl.pl,r)},e.prototype.t5=function(e,t,r){this.te.warn("GOT REQUEST FROM NON-PARTNER "+e+" FOR "+t.mN);var i=new n.mu.Mr.np.w6;i.i5(t.g6),r.jl(n.mu.Rl.Sl,i)},e}();t.Vz=o},function(e,t,r){"use strict";var i,n=r(44),s=r(0),o=r(3);!function(e){e[e.n5=0]="S",e[e.s5=1]="F",e[e.o5=2]="PF"}(i||(i={}));var a=function(){function e(e){this.ts=e}return e}(),h=function(){function e(){this.a5=0,this.h5=0,this.c5=0,this.u5=0,this.l5=0,this.p5=0}return e}(),c=function(){function e(){this.f5=new n}return e.prototype.success=function(e){this.event(i.n5,e,e)},e.prototype.xn=function(){this.event(i.s5,0,0)},e.prototype.u8=function(e,t){this.event(i.o5,e,t)},e.prototype.event=function(e,t,r){var i=new a(s.Framework.time());i.vp=e,i.d5=t,i.g5=t/r,i.v5=(r-t)/r,this.f5.set(i.ts,i),this.y5()},e.prototype.y5=function(){var e=this,t=s.Framework.time(),r=t-2*o.ni.Or.Pr;if(r>0){var i=[];this.f5.forEach(function(e,t){t<r&&i.push(t)}),i.forEach(function(t){e.f5.delete(t)})}},e.prototype.jV=function(e){var t=0,r=this.m5(e,o.ni.Or.Pr);if(null!=r){var i=r.h5+r.c5+r.u5;t=0==i?0:(r.h5+r.u5*o.ni.Or.Ar)/i}return t},e.prototype.P8=function(e){var t=0,r=this.m5(e,o.ni.Or.Pr);if(null!=r){var i=r.h5+r.c5+r.u5;t=0==i?0:(r.c5+r.u5*o.ni.Or.Cr)/i}return t},e.prototype.E5=function(e){var t=this.m5(!1,e);return null!=t?t.a5:0},e.prototype.m5=function(e,t){if(0!=this.f5.keys().length){var r=new h,o=s.Framework.time(),a=o-t;a<0&&(a=0);var c=new n;return this.f5.forEach(function(e,t){t>=a&&c.set(t,e)}),c.forEach(function(e,t){switch(r.a5+=e.d5,e.vp){case i.n5:r.h5++;break;case i.s5:r.c5++;break;default:r.u5++,r.l5+=e.g5,r.p5+=e.v5}}),r}return null},e}();c.Cr=.2,c.Ar=.2,t.jz=c},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(1),s=r(2),o=r(0),a=r(173),h=r(175),c=r(93);t.T5||(t.T5={});var u=function(e){function t(){var t=e.call(this)||this;return t.I5=!1,t.w5=new n,t.Ul=1,t.qc=o.Framework.resolve(o.Framework.q.D),t.S5=o.Framework.resolve(o.Framework.q.U),t.channelManager=new a.R5(t.te,t.S5,t),t.S5.init(t,t.te,t.channelManager),t.b5(),t}return i(t,e),t.prototype.start=function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];var i=o.Framework.resolve(o.Framework.q.I).log(e),n=null;return 0==this.ss.keys().length?(i.debug("TRIGGERING CONNECT "),n=this.P5(),this.A5(e,t)):(i.debug("ALREADY CONNECTED "),n=this.qc.jc(),this.A5(e,t),this.S5.lQ()&&this.C5(this.Eh,e)),n},t.prototype.P5=function(){var e=this,t=o.Framework.N._;"localhost"===t&&(t="127.0.0.1:"+location.port),this.te.debug("CONNECTING..");var r=s.defer();return this.qc.jc().then(function(i){var n=i.Kc();return e.te.debug("MY IDENTITY ",n),e.Eh=n,e.S5.start(t,n,r),r.Te}),null},t.prototype.k5=function(){return s.resolve(new n)},t.prototype.connect=function(e){var t=this,r=s.defer();return this.w5.has(e)?(this.te.debug("Already connected to "+e+", ignoring"),r.resolve(this.w5.get(e))):this.channelManager.O5(this.Eh,e).then(function(r){return t.connected(e,r)}).then(function(e){return r.resolve(e)}).fail(function(t){r.reject("CONN TO "+e+" CANNOT BE ESTABLISHED ")}),r.Te},t.prototype.send=function(e,t,r){return!!this.channelManager.send(e,t)||(this._5(e),!1)},t.prototype.N5=function(e,t,r){if(this.I5&&this.te.debug("REC BUF "+r.byteLength+" "+r),this.w5.has(e)){this.I5&&this.te.debug("PROC MSG FROM "+e);this.w5.get(e).Wl(r)}else this.te.warn("RECEIVED MSG FROM PEER "+e+" BUT IT IS NOT CONNECTED")},t.prototype.connected=function(e,t){if(this.w5.has(e))this.te.debug("RECONNECTED TO "+e+", RESETTING STATE"),this.w5.get(e).reset();else{this.te.info("CONNECTED TO "+e);var r=t.Rx;r.init(this.Eh,e),this.w5.set(e,r)}return s.resolve(this.w5.get(e))},t.prototype.D5=function(e,t){this.te.debug("FAILED CONN TO "+t),e.reject("CONN TO "+t+" CANNOT BE ESTABLISHED ")},t.prototype.F5=function(e,t){this.te.info(e+" connected to me"),this.connected(e,t)},t.prototype._5=function(e){this.w5.has(e)?(this.te.info("Connection closed to "+e),this.w5.delete(e),this.L5(e)):this.te.warn("TRYING TO REMOVE A PEER THAT IS NOT THERE: "+e)},t.prototype.b5=function(){var e=this;c.BV.DV&&o.Framework.setInterval(function(){var t=o.Framework.time();e.w5.forEach(function(r,i){var n=t-r.ip();n>c.BV.LV&&(e.te.debug("closing stale connection to "+i+" [unused for: "+n+"ms]"),e.disconnect(i))})},c.BV.FV)},t.prototype.M5=function(){},t.prototype.disconnect=function(e){this.w5.has(e)&&this.channelManager.disconnect(e)},t}(h.B5);u.$r="availableSendRate",u.ei="remoteAddress",u.ti="localAddress",t.Dz=u},function(e,t,r){"use strict";var i=r(2),n=r(0),s=r(174),o=r(93),a=function(){function e(e,t,r){this.te=e,this.S5=t,this.U5=r,this.x5={iceServers:[{url:"stun:stun.hivestreaming.com:3478"}]},this.Ul=1,this.H5=null,this.q5={},this.V5={}}return e.prototype.O5=function(e,t){var r=null;if(t in this.V5){var n=i.defer();n.reject("OTHER ALREADY TRYING TO CONNECT"),r=n.Te}else{this.U5.I5&&this.te.info("Initiating connection to "+t);var s=this.j5(e,t);r=this.G5(s,t).connect(t)}return r},e.prototype.Q5=function(e){e.K5 in this.V5&&(delete this.q5[e.label],delete this.V5[e.K5]),e.open&&(this.U5._5(e.K5),e.open=!1)},e.prototype.send=function(e,t){this.U5.I5&&this.te.debug("DATA "+t.byteLength+" "+t);var r=this.V5[e];return!(!r||!r.channel)&&(r.channel.send(t),!0)},e.prototype.z$=function(e,t){var r=t.channel;if(r&&r.label&&this.q5[r.label]){var i=this.q5[r.label],n=i[e];n.call(i,t)}else{var s="handle_"+e,n=this[s];n?n.call(this,t):this.te.warn("Handler "+s+" not found or channel "+r.label+" not active")}},e.prototype.handle_offer=function(e){if(this.U5.I5&&this.te.info("received an offer from "+e.peer.guid+" on channel "+e.channel.label),this.V5[e.peer.guid]&&e.peer<this.U5.Eh)this.S5.Y5(this.U5.Eh,e.peer.guid,e.channel.label);else{var t=this.G5(e.channel.label,e.peer.guid),r=this.z5(t);t.offer(e,r)}},e.prototype.z5=function(e){var t=this;return n.Framework.setTimeout(function(){t.te.warn("INCOMING CONNECTION FROM "+e.K5+" TIMED OUT"),e.close()},o.BV.MV)},e.prototype.G5=function(e,t){var r=new s.J5(this,this.U5,e,this.H5,this.x5,t);return this.q5[e]=r,this.V5[t]=r,r},e.prototype.handle_offer_rejected=function(e){this.U5.I5&&this.te.debug("remote peer rejected ",e);var t=this.V5[e.W5];t&&t.close(),delete this.V5[e.W5],delete this.q5[e.channel]},e.prototype.j5=function(e,t){return e.substring(0,Math.max(8,e.length))+":"+t.substring(0,Math.max(8,t.length))+":"+this.Ul++},e.prototype.disconnect=function(e){var t=this.V5[e];t&&t.close()},e}();t.R5=a},function(e,t,r){"use strict";var i=(r(52),r(2)),n=r(0),s=function(){function e(e,t,r,i,s,o){var a=this;this.channelManager=e,this.U5=t,this.label=r,this.H5=i,this.x5=s,this.K5=o,this.I5=!1,this.pM=null,this.channel=null,this.X5=null,this.Z5=5,this.timeout=5e3,this.open=!1,this.e9=!1,this.t9=new Array,this.r9=function(){return!!this.channel&&"connecting"===this.channel.readyState},this.te=n.Framework.resolve(n.Framework.q.I).log(),this.mn="[ch:"+this.label+"] ",this.Rx=n.Framework.resolve(n.Framework.q.L),this.Rx.init(this.U5.Eh,o),this.pM=new RTCPeerConnection(this.x5,this.H5),this.pM.onicecandidate=function(e){e&&e.candidate&&(a.t9.push(e.candidate),a.e9&&a.i9())},this.pM.onnegotiationneeded=function(){a.createOffer().then(function(e){return a.n9(e)}).then(function(e){a.I5&&a.te.debug(a.mn+"Sending offer to "+a.K5+" [candidates: "+a.t9.length+"]");var t=a.t9;a.t9=new Array;var r=a.channelManager.S5.offer(a.U5.Eh,a.K5,a,t,e);return a.e9=!0,r}).catch(function(e){a.te.error(a.mn+" "+e),a.close()})},this.pM.oniceconnectionstatechange=function(e){"disconnected"===a.pM.iceConnectionState&&a.close(),"failed"===a.pM.iceConnectionState&&(a.te.debug(a.mn+"Closing channel since it couldnt be established to "+a.K5),a.close())},this.pM.onsignalingstatechange=function(e){"closed"===e.signalingState&&a.close()}}return e.prototype.s9=function(){var e=this;if(this.channel&&"open"!=this.channel.readyState){if(this.I5&&this.te.debug(this.mn+"Check connection "+this.K5),this.Z5<=0)return this.te.debug(this.mn+"Closing channel since it couldnt be established to "+this.K5),void this.close();this.Z5-=1,this.X5=n.Framework.setTimeout(function(){return e.s9()},this.timeout)}},e.prototype.close=function(){this.I5&&this.te.debug(this.mn+"Closing connection to "+this.K5),this.channelManager.Q5(this),this.pM&&"closed"!==this.pM.signalingState&&(this.pM.close(),this.channel&&this.channel.close())},e.prototype.connect=function(e){var t=this;this.I5&&this.te.debug(this.mn+"Connecting to "+e),this.K5=e,this.channel=this.pM.createDataChannel(this.label);var r=this.o9(!0,-1);return this.X5=n.Framework.setTimeout(function(){return t.s9()},this.timeout),r},e.prototype.a9=function(e){var t=i.defer();return this.pM.setRemoteDescription(e,function(){return t.resolve("OK")},t.reject),t.Te},e.prototype.n9=function(e){var t=this,r=i.defer();return"closed"!==this.pM.signalingState?this.pM.setLocalDescription(e,function(){return r.resolve(t.pM.localDescription)},r.reject):r.reject,r.Te},e.prototype.createOffer=function(){var e=this,t=i.defer();return this.pM.createOffer(t.resolve,function(t){e.te.error(e.mn+" "+t),e.close()}),t.Te},e.prototype.createAnswer=function(){var e=i.defer();return this.pM.createAnswer(e.resolve,e.reject),e.Te},e.prototype.offer=function(e,t){var r=this;this.I5&&(this.te.debug(this.mn+"Received an offer from "+this.K5),this.te.debug(this.mn+"Offer:",e)),this.pM.ondatachannel=function(e){r.channel=e.channel,r.o9(!1,t)};var i=new RTCSessionDescription(e.channel.offer);this.K5=e.peer.guid,this.a9(i).then(function(t){if("closed"!==r.pM.signalingState)return r.update_ice_candidates(e),r.createAnswer()}).then(function(e){return r.n9(e)}).then(function(e){r.te.debug(r.mn+"Sending back an answer [candidates: "+r.t9.length+"]");var t=r.t9;r.t9=new Array,r.channelManager.S5.answer(r,e,t,r.K5),r.e9=!0}).catch(function(e){r.te.error(r.mn+" "+e),r.close()})},e.prototype.answer=function(e){var t=this;this.I5&&this.te.debug(this.mn+"Answer: ",e);var r=new RTCSessionDescription(e.answer);this.a9(r).then(function(){"closed"!==t.pM.signalingState&&t.update_ice_candidates(e)}).catch(function(e){t.close(),t.te.error(t.mn+" "+e)})},e.prototype.update_ice_candidates=function(e){var t=this;e.channel.ice_candidates.forEach(function(e){t.I5&&t.te.debug(t.mn+"got ICE cand: ",e);var r=new RTCIceCandidate(e);t.pM.addIceCandidate(r,function(){},function(e){return t.te.warn(t.mn+"FAILED UPDATING ICE CANDIDATE",e)})})},e.prototype.o9=function(e,t){var r=this,n=i.defer();return this.channel.onopen=function(i){return r.h9(n,e,t)},this.channel.onclose=function(e){r.close(),n.reject(r)},this.channel.onmessage=function(e){return r.Rx.Wl(e.data)},this.channel.onerror=function(e){r.te.error(r.mn+" -- WebRTC channel error",e),r.close()},n.Te},e.prototype.h9=function(e,t,r){this.open=!0,e.resolve(this),t||(this.U5.F5(this.K5,this),r&&n.Framework.clearTimeout(r))},e.prototype.i9=function(){var e=this,t=this.t9;if(this.t9=new Array,t&&t.length>0){var r=t.length;this.channelManager.S5.c9(this.U5.Eh,this,t,this.K5).then(function(t){e.I5&&e.te.debug(e.mn+"sent "+r+" more candidates")}).catch(function(t){e.te.error(e.mn+" "+t)})}},e}();t.J5=s},function(e,t,r){"use strict";var i=r(1),n=r(0),s=function(){function e(){this.ss=new i,this.te=n.Framework.resolve(n.Framework.q.I).log()}return e.prototype.A5=function(e,t){this.te.info("SET LISTENERS FOR "+e+","+t.length),this.ss.set(e,t)},e.prototype.u9=function(e){this.ss.delete(e)},e.prototype.l9=function(){this.ss.length>0&&this.ss.forEach(function(e,t){e.forEach(function(e){e.yq&&e.yq()})})},e.prototype.C5=function(e,t){var r=this;this.ss.length>0&&(t?this.ss.get(t).forEach(function(t){try{t.Zh&&t.Zh(e)}catch(e){r.te.error("Cannot fire server connected on "+t)}}):this.ss.forEach(function(t,i){t.forEach(function(t){try{t.Zh&&t.Zh(e)}catch(e){r.te.error("Cannot fire server connected on "+t)}})}))},e.prototype.L5=function(e){this.ss.length>0&&this.ss.forEach(function(t,r){t.forEach(function(t){t.aH&&t.aH(e)})})},e}();t.B5=s},function(e,t,r){"use strict";var i=r(2),n=r(0),s=r(21),o=function(){function e(){this.Ul=1,this.client=n.Framework.resolve(n.Framework.q.H)}return e.prototype.init=function(e,t,r){this.U5=e,this.te=t,this.channelManager=r},e.prototype.lQ=function(){return this.client.lc().lQ()},e.prototype.start=function(e,t,r){var i=this;this.te.debug("MY ID "+t),this.Eh=t,this.client&&this.client.lc()?this.client.lc().on(Services.TQ,1,function(e){i.p9(e.msg)}):this.te.error("error getting active services connection"),this.U5.C5(this.Eh)},e.prototype.p9=function(e){var t=JSON.parse(e);this.U5.I5&&this.te.debug("RCV MSG FROM SRV ",t),this.channelManager.z$(t.msgName,t.msg)},e.prototype.f9=function(e,t,r){var n=this.wrap(t,e,r);if(this.client&&this.client.lc()){var o=JSON.stringify(n);this.U5.I5&&this.te.debug(" FORWARDING REQUEST : "+o);var a=new s.pc(Services.TQ,0,o);return this.client.lc().send(a)}return i.reject()},e.prototype.wrap=function(e,t,r){return{msgId:this.Ul++,destination:r,msg:e,msgName:t}},e.prototype.c9=function(e,t,r,i){var n={channel:{label:t.label,ice_candidates:r}};return this.f9("update_ice_candidates",n,i)},e.prototype.offer=function(e,t,r,i,s){var o={peer:{guid:e,first_seen:n.Framework.time()},channel:{label:r.label,ice_candidates:i,offer:s}};return this.f9("offer",o,r.K5)},e.prototype.Y5=function(e,t,r){this.U5.I5&&this.te.debug("Discovery service rejects offer from peer "+t+" on channel "+r);var i={W5:e,channel:r};return this.f9("answer",i,t)},e.prototype.answer=function(e,t,r,i){var n={answer:t,d9:this.U5.Eh,channel:{label:e.label,ice_candidates:r}};return this.f9("answer",n,i)},e}();t.Fz=o},function(e,t,r){"use strict";var i=r(1),n=r(3),s=r(0),o=function(){function e(){this.eN=new i,this.g9=[],this.R6=new i,this.v9=new i}return e.prototype.init=function(e){this.te=s.Framework.resolve(s.Framework.q.I).log(e.sessionId),this.TC=e.TC,this.y9()},e.prototype.y9=function(){var e=this;s.Framework.setInterval(function(){e.m9()},n.ni.mr.vr)},e.prototype.m9=function(){var e=this;this.R6.values().filter(function(e){return s.Framework.time()-e.Mu.ku>n.ni.mr.yr}).forEach(function(t){e.TC.abort(t.Vu),e.cN(t.zu(),t.Ju())})},e.prototype.hN=function(e){this.E9(e.zu(),e.Ju()),this.R6.set(e.Ju(),e)},e.prototype.cN=function(e,t){this.R6.delete(t),this.T9(e,t)},e.prototype.pN=function(e){this.I9(e)},e.prototype.uN=function(e){this.eN.delete(e)},e.prototype.I9=function(e){if(this.eN.set(e.zu(),e.Ku()),this.g9.push(e.zu()),this.eN.length>n.ni.mr.gr){var t=this.g9[0];this.eN.delete(t),this.g9.splice(0,1)}},e.prototype.Z_=function(e){return this.eN.has(e)},e.prototype.tN=function(e){return this.eN.get(e)},e.prototype.E9=function(e,t){if(this.v9.has(e))this.v9.get(e).push(t);else{var r=[];r.push(t),this.v9.set(e,r)}},e.prototype.T9=function(e,t){if(this.v9.has(e)){var r=this.v9.get(e),i=r.indexOf(t);-1==i?this.te.warn("I CANNOT FIND THE REQUEST ID "+t):r.splice(i,1),0==r.length&&this.v9.delete(e)}else this.te.warn("TRIED TO REMOVE AN OBJECT THAT DOES NOT EXIST")},e.prototype.nN=function(e){var t=[];if(this.w9(e))for(var r=this.v9.get(e),i=0;i<r.length;i++)this.R6.has(r[i])&&t.push(this.R6.get(r[i]));return t},e.prototype.w9=function(e){return this.v9.has(e)},e.prototype.dN=function(){return 0!=this.R6.length},e.prototype.iN=function(e){return this.v9.has(e)},e}();t.mr=o},function(e,t,r){"use strict";var i=r(1),n=r(3),s=r(25),o=s.sl,a=function(){function e(){this.Tx=0,this.S9=0,this.ao=-1,this.R9=!1,this.b9=!1,this.P9=!1,this.A9=!1,this.C9=new i}return e.prototype.vq=function(e){this.k9=e},e.prototype.W=function(){return this.k9},e.prototype.oJ=function(e){this.Tx=e},e.prototype.oH=function(){return this.Tx},e.prototype.aJ=function(e){this.S9=e},e.prototype.J0=function(){return this.S9},e.prototype.rJ=function(e){var t=o.Vd(e+"_"+n.ni.Ut._t).toString(o.Ed.Td);this.fR=t},e.prototype.K_=function(){return this.fR},e.prototype.Yx=function(e){this.R9=e},e.prototype.fk=function(){return this.R9},e.prototype.hH=function(e){this.P9=e},e.prototype.Sk=function(){return this.P9},e.prototype.lV=function(e){this.A9=e},e.prototype.bk=function(){return this.A9},e.prototype.Z0=function(e){this.O9=e},e.prototype.Ek=function(){return this.O9},e.prototype.$0=function(e){this._9=e},e.prototype.iV=function(){return this._9},e.prototype.Kx=function(e){this.N9=e},e.prototype.kk=function(){return this.N9},e.prototype.D9=function(e){this.b9=e},e.prototype.Rk=function(){return this.b9},e.prototype.VJ=function(e){this.ao=e},e.prototype.qJ=function(){return this.ao},e.prototype.Wx=function(e){this.gx=e},e.prototype.Pk=function(){return this.gx},e.prototype.wM=function(e){this.privateIp=e},e.prototype.Cs=function(){return this.privateIp},e.prototype.yM=function(e){this.publicIp=e},e.prototype.Kh=function(){return this.publicIp},e.prototype.uV=function(e){this.Wq=e},e.prototype.nV=function(){return this.Wq},e.prototype.WC=function(e){this.delta=e},e.prototype.aV=function(){return this.delta},e.prototype.xC=function(e,t){this.C9.set(e,t)},e.prototype.MC=function(e){this.C9.delete(e)},e.prototype.sV=function(){return this.C9},e.prototype.WF=function(){return this.Rk()?this.C9.keys():[]},e.prototype.XF=function(){return this.Rk()?[]:this.C9.keys()},e.prototype.sJ=function(e){this.ticket=e},e.prototype.Ak=function(){return this.ticket},e}();t.Kz=a},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(11),s=r(180),o=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.z8=function(t,r){var i=[],s=[],o=[],a=this.wC.Ek();return t.forEach(function(e){e.Ik.Tk.type==n.Zs.K&&i.push(e);var t=e.Ik.Tk.internalAs;0!=a&&t&&a==t&&s.push(e),e.Ik.Tk.type==n.Zs.Xs&&o.push(e)}),i.length>0?e.prototype.z8.call(this,i,r):s.length>0?e.prototype.z8.call(this,s,r):e.prototype.z8.call(this,o,r)},t}(s.F9);t.Gz=o},function(e,t,r){"use strict";var i=r(0),n=r(3),s=function(){function e(){this.te=i.Framework.resolve(i.Framework.q.I).log()}return e.prototype.K8=function(e){this.wC=e},e.prototype.z8=function(e,t){return this.L9(e)[0]},e.prototype.M9=function(e,t){return n.ni.Mr.Fr*(e.E8()/t)+n.ni.Mr.Lr*(1-e.I8())},e.prototype.L9=function(e){var t=this,r=.1;r+=e.map(function(e){return e.E8()}).reduce(function(e,t){return e+t});var i=e.sort(function(e,i){return t.M9(i,r)-t.M9(e,r)}),n=[];return i.forEach(function(e){n.push(e.guid+":"+t.M9(e,r))}),this.te.debug("SC ["+n.join(", ")+"]"),i},e}();t.F9=s},function(e,t,r){"use strict";var i=r(45),n=r(1),s=r(55),o=r(6),a=r(3),h=r(0),c=r(43),u=r(88),l=r(5),p=l.Rt.Ci,f=function(){function e(){this.B9=!1}return e.prototype.init=function(e){this.te=h.Framework.resolve(h.Framework.q.I).log(e.sessionId),this.wC=e.wC,this.Wz=e.Wz,this.yx=e.yx,this.V_=e.V_},e.prototype.PC=function(e){this.AC=e},e.prototype.i1=function(){this.B9=!0,this.vJ()},e.prototype.zx=function(){if(a.ni.dr.ir)return void this.U9();var e=!this.wC.Sk()||this.wC.fk()||!p;this.te.debug("REQUEST REMOTE ELECTION "+e),e?this.U9():this.x9()},e.prototype.U9=function(){var e=this.wC.Ek(),t=e&&0!=e?u.sx.hC:u.sx.AS;this.Wz.X0(t)},e.prototype.x9=function(){this.Wz.X0(u.sx.nx)},e.prototype.vJ=function(){var e=this;this.cJ(),this.H9=h.Framework.setInterval(function(){e.zx()},a.ni.dr.sr),this.zx()},e.prototype.cJ=function(){this.H9&&h.Framework.clearInterval(this.H9)},e.prototype.uJ=function(){this.V_.nk(),this.AC.IN()},e.prototype.Jx=function(e){var t=new n;if(e){this.q9().forEach(function(e){t.set(e,i.cC.aC)});var r=!1,s=i.cC.aC;this.wC.Rk()&&(s=i.cC.hC,r=!0),this.V_.OC(t,s,r)}else this.V_.OC(t,i.cC.$s,!1)},e.prototype.e1=function(e,t){var r=this,h=this.V9(t),c=this.V_.kC().isLive();if(e&&e.length>0){var u=new s;u.addEach(e);var l=a.ni.dr.$t||u.some(function(e){var t=o.fn.hn(hive.DN.protocol.FN.LN,e.key.JN);return r.te.info("GOT RANKING "+t+",CRV "+e.oD+",RV "+e.nD+",GS "+e.sD),r.j9(e)}),p=null!=h&&0!=h.length;if(this.te.debug("Tracker reports ["+h.keys().join(", ")+"]  bitrates"),this.te.debug("ISLive "+c+" DoElect "+l),a.ni.dr.Zt&&c){var f=this.q9();if(p&&l){this.wC.D9(!0),this.te.info("BECOMING SITE LEADER");var d=new n;f.forEach(function(e){d.set(e,i.cC.aC)}),h.forEach(function(e,t){r.yx.Zq.has(e)||d.set(t,i.cC.hC)}),this.V_.OC(d,i.cC.hC,!1)}else{this.wC.D9(!1);var g=i.cC.$s,v=new n;this.wC.Sk()&&this.wC.fk()&&(g=i.cC.aC,f.forEach(function(e){v.set(e,i.cC.aC)})),this.V_.OC(v,g,!1)}}}else if(c){a.ni.dr.$t?this.wC.D9(!0):this.wC.D9(!1);var y=new n,g=i.cC.$s;if(this.wC.Sk()&&this.wC.fk()){var m=this.q9();m.forEach(function(e){y.set(e,i.cC.aC)}),g=i.cC.aC}a.ni.dr.$t&&(g=i.cC.hC),this.V_.OC(y,g,!1)}},e.prototype.RV=function(){var e=this.q9(),t=new n;e.forEach(function(e){t.set(e,i.cC.aC)});var r=!1,s=i.cC.aC;this.wC.Rk()&&(s=i.cC.hC,r=!0),this.V_.OC(t,s,r)},e.prototype.q9=function(){var e=new s;return this.yx.Zq.forEach(function(t,r){t.Tk.ao&&!e.has(t.Tk.ao)&&e.add(t.Tk.ao)}),e.toArray()},e.prototype.V9=function(e){var t=new n,r=this.wC.Ek();return e.forEach(function(e){null!=e.ao&&(r>0?r===e.internalAs&&t.set(e.ao,e.guid):t.set(e.ao,e.guid))}),t},e.prototype.j9=function(e){if(e.sD<2)return!1;var t=Math.max(1,Math.round(e.sD*a.ni.dr.tr));return p||h.Framework.S()&&c.iC.tC?e.nD<t&&(this.wC.fk()||!this.wC.Sk()):e.nD<t},e.prototype.rk=function(e,t,r,n){var s=1,o=this.AC.gk(r,t),c=a.ni.dr.ar*h.Framework.random();if(e==i.cC.aC){var u=this.AC.TN(),l=u-c;s=Math.max(1,o-l)}else if(e==i.cC.hC){var p=a.ni.dr.hr-c;s=Math.max(1,o-p)+n}return s=Math.round(s)},e}();t.Qz=f},function(e,t,r){"use strict";var i=r(0),n=r(1),s=r(21),o=r(30),a=r(4);r(56);var h=function(){function e(){this.G9=!1,this.mn="[TRACKER] ",this.Q9=new n,this.Pl=new o.Pw,this.protocol=new o.nS(this.Pl),this.te=i.Framework.resolve(i.Framework.q.I).log(),i.Framework.S()||(this.client=i.Framework.resolve(i.Framework.q.H))}return e.prototype.M0=function(e,t){return this.te.debug("TRACKER CLIENT REGISTERED "+e),this.Q9.has(e)||this.Q9.set(e,t),this.Q9.get(e)},e.prototype.Nl=function(e){this.Q9.delete(e)},e.prototype.Dl=function(e){return this.Q9.get(e)},e.prototype.W0=function(e){var t=this;if(this.client&&this.client.lc()){var r=this.K9(e),i=new s.pc(Services.mQ,1,r),n=this.client.lc().send(i);n.then(function(){return t.te.info("TRACKER REQUEST SENT")}),n.fail(function(e){t.te.warn("TRACKER PROBLEM: ",e)})}else this.te.warn("SERVICES CONNECTION DOWN, CAN'T SEND TRACKER REQUEST ",e)},e.prototype.init=function(){var e=this;this.te.debug("TRACKER MANAGER INIT"),this.client&&this.client.lc()?this.client.lc().on(Services.mQ,10,function(t){try{var r=e.Y9(t.msg);if(e.Q9.has(r.sessionId)){e.Q9.get(r.sessionId).ZJ(r)}else e.te.warn("SESSION ID NOT VALID OR NULL "+r.sessionId)}catch(t){a.ErrorMonitor.gi().di("Tracker Manager initialization failure",e.mn,t)}}):i.Framework.S()||this.te.warn(this.mn+" CANNOT GET ACTIVE CONNECTION")},e.prototype.Y9=function(e){var t='[1, "TRACKER_RESP", 4, 0,'+e+"]";this.Pl.Dw(t);var r=(this.protocol.BS(),new hive.DN.protocol.FN.uD);return r.read(this.protocol),r.lD.map(function(e){e.guid=atob(e.guid),e.publicIp=new InetAddress,e.publicIp.address=e.lo,e.privateIp=new InetAddress,e.privateIp.address=e.uo}),r.Tk.guid=atob(r.Tk.guid),r.Tk.publicIp=new InetAddress,r.Tk.publicIp.address=r.Tk.lo,r.Tk.privateIp=new InetAddress,r.Tk.privateIp.address=r.Tk.uo,this.protocol.GS(),this.G9&&this.te.debug("RESP "+JSON.stringify(r)),r},e.prototype.K9=function(e){this.protocol.vS("TRACKER_REQ",o.VI.KI,0),e.write(this.protocol),this.protocol.ES();var t=this.Pl.Qw(),r=this.RL(t,",",4);return t.slice(r+1,t.length-1)},e.prototype.RL=function(e,t,r){return e.split(t,r).join(t).length},e}();t._z=h},function(e,t,r){"use strict";var i=r(8),n=function(){function e(){this.z9=0,this.J9=0,this.W9=0,this.X9=0,this.Z9=0,this.e7=0,this.t7=0,this.r7=0,this.i7=0,this.n7=0,this.s7=0,this.partners={}}return e}();t.o7=n;var s=function(){function e(){this.Ck="",this.a7=0,this.h7=0,this.c7=0,this.u7=0}return e}();t.l7=s;var o=function(){function e(){}return e.prototype.init=function(e){this.peer=e},e.prototype.p7=function(e){var t=this;this.peer.Hc.forEach(function(r,i){e[i]||(e[i]=new n);var s=e[i];s.Ck=r.Cn.Dc.Eh;var o=r.Cn.Dc.KF.LF,a=t.f7(o.p2pSubRespQt),h=t.f7(o.srcRespQt);s.z9+=a,s.J9+=h,s.X9+=t.f7(o.srcReqN),s.Z9+=t.f7(o.srcRespN),s.e7+=t.f7(o.srcRespErrN),s.t7+=t.f7(o.srcRespQt),s.r7+=t.f7(o.p2pSubReqN),s.i7+=t.f7(o.p2pSubRespN),s.n7+=t.f7(o.p2pSubRespErrN),s.s7+=t.f7(o.p2pSubRespQt),s.W9=a/(h+a)*100})},e.prototype.f7=function(e){return e||0},e.prototype.d7=function(e){var t=this;this.peer.Hc.forEach(function(r,i){e[i]||(e[i]=new n);var o=e[i];o.Ck=r.Cn.Dc.Eh,r.Cn.Dc.KF.BF.forEach(function(e,r){o.partners[r]||(o.partners[r]=new s);var i=o.partners[r];i.Ck=r,i.a7+=t.f7(e.p2pSuccSent),i.h7+=t.f7(e.p2pSuccReceived),i.c7+=t.f7(e.p2pSuccReq),i.u7+=t.f7(e.p2pFailReq)})})},e.prototype.render=function(){var e={};this.p7(e),this.d7(e);try{i.HiveConfig.Stats.render&&i.HiveConfig.Stats.render(e)}catch(e){console.warn("error in rendering local stats",e)}},e}();t.Pz=o},function(e,t,r){"use strict";var i=r(32),n=r(1),s=r(0),o=r(3),a=function(){function e(){this.g7=new n,this.v7=new n}return e.prototype.init=function(e){this.te=s.Framework.resolve(s.Framework.q.I).log(e.sessionId)},e.prototype.$J=function(e){var t=e.zu(),r=e.Hu,n=e.Mu.Su,a=Math.ceil(n/o.ni.Mr.Nr),h=e.Qu.bitrate,c=0,u=Math.min(o.ni.Mr.Nr,n);this.y7(t,h);for(var l=u-c;a>0;){var p=null;s.Framework.S()||(p=i.wrap(r.slice(c,u))),c+=l,this.g7.get(t).push(p),a--,u=Math.min(c+o.ni.Mr.Nr,n),l=u-c}},e.prototype.y7=function(e,t){if(this.v7.has(t)&&this.v7.get(t).length>o.ni.Sr.wr){var r=this.v7.get(t)[0];this.g7.delete(r),this.v7.get(t).shift()}if(this.v7.has(t))this.v7.get(t).push(e),this.g7.set(e,[]);else{var i=[e];this.v7.set(t,i),this.g7.set(e,[])}},e.prototype.W6=function(e,t){return this.g7.has(e)?this.g7.get(e)[t]:null},e.prototype.m7=function(e){return this.v7.get(e)},e.prototype.fJ=function(){this.g7=new n,this.v7=new n},e}();t.Lz=a},function(e,t,r){"use strict";var i=r(1),n=r(3),s=r(0),o=r(25),a=(o.sl,function(){function e(){this.mn="[IPSpoofing] ",this.E7=n.ni.Vt.xt}return e.prototype.init=function(e){this.te=s.Framework.resolve(s.Framework.q.I).log(e.sessionId),this.SC=e.SC,this.T7=new i,this.I7=new i,this.E7&&this.w7()},e.prototype._q=function(e,t,r){if(!this.E7)return!1;if(this.T7.has(e)||!t||!r)return!1;var i=this.S7(t,r);if(i&&this.I7.has(i)){if(this.I7.get(i).length>=n.ni.Vt.Ht)return this.te.debug(this.mn+"Spoofing rule violated for "+e+" with privateIp "+t+" publicIp "+r),!0}return!1},e.prototype.Mq=function(e,t,r){if(this.E7&&r&&t){var i=this.S7(t,r),n=this.T7.get(e);n&&n!=i&&this.R7(e,n),this.b7(e,i)}},e.prototype.P7=function(e){this.E7&&this.dV(e)},e.prototype.aH=function(e){this.E7&&this.dV(e)},e.prototype.b7=function(e,t){this.T7.set(e,t);var r=[];this.I7.has(t)&&(r=this.I7.get(t),-1!=r.indexOf(e))||(r.push(e),this.I7.set(t,r))},e.prototype.dV=function(e){var t=this.T7.get(e);t?(this.R7(e,t),this.T7.delete(e)):this.te.warn(this.mn+"no ip pair for guid "+e)},e.prototype.R7=function(e,t){var r=this.I7.get(t),i=r.indexOf(e);-1!=i?(r.splice(i,1),0==r.length?this.I7.delete(t):this.I7.set(e,r)):this.te.warn(this.mn+"pair list "+t+" does not contain guid "+e)},e.prototype.S7=function(e,t){return t+":"+e},e.prototype.w7=function(){var e=this;s.Framework.setInterval(function(){var t=[];e.I7.forEach(function(r,i){if(r.length>n.ni.Vt.Ht){for(var s=[],o=n.ni.Vt.Ht;o<r.length;o++)s.push(r[o]);e.te.warn("IpSpoofing violation for "+i+" - closing: "+s),t.concat(s)}}),t.forEach(function(t){e.SC.Vq(t)})},n.ni.Vt.qt)},e}());t.Vt=a},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(187),s=r(3),o=r(95),a=r(0),h=function(e){function t(){var t=e.call(this)||this;return t.type="Score",t}return i(t,e),t.prototype.A7=function(e,t){return t.sort(o.QV.VV),t.slice(0,e)},t.prototype.C7=function(e,t,r,i){return i.filter(function(e){return t.every(function(t){return t.guid!=e.Tk.guid})&&-1==r.indexOf(e.Tk.guid)}).slice(0,e)},t}(n.k7);t.Bz=h;var c=function(){function e(){}return e.prototype.Jq=function(e){var t=e.filter(function(e){return!e.qq.Pl.ql()}),r=a.Framework.time(),i=t.filter(function(e){return r-e.n8>s.ni.Ut.Bt});return i.length>0?(i.sort(o.YV.VV),i.slice(0,1)[0]):null},e}();t.Uz=c},function(e,t,r){"use strict";var i=r(94),n=r(3),s=r(0),o=function(){function e(){this.te=s.Framework.resolve(s.Framework.q.I).log()}return e.prototype.Aq=function(e,t,r,o){var a=[],h=[],c=Math.round(e*(1-n.ni.Ot.Ct)),u=Math.max(t.length-c,0),l=e-t.length+u;if(u>0){var p=t.filter(function(e){return!e.qq.Pl.ql()}),f=s.Framework.time(),d=p.filter(function(e){return f-e.n8>n.ni.Ut.Bt}),g=Math.min(d.length,u);h=this.A7(g,d);var v=[],y=[];h.forEach(function(e){v.push(e.guid),y.push(e.GV.jV(!1))})}return l>0&&(a=this.C7(l,t,r,o)),this.te.debug("[PART] A/R: "+l+"/"+u+" ["+a.map(function(e){return e.Tk.guid.substring(0,8)})+"/"+h.map(function(e){return e.guid.substring(0,8)})+"] P:["+t.map(function(e){return e.guid.substring(0,8)})+"] M:["+o.map(function(e){return e.Tk.guid.substring(0,8)})+"]"),new i.qV(a,h)},e}();t.k7=o},function(e,t,r){"use strict";var i=r(1),n=r(94),s=r(3),o=r(0),a=r(6),h=r(95),c=function(){function e(){}return e.prototype.Aq=function(e,t,r,i,a){this.wC=e;var h=[],c=[],u=Math.round(t*(1-s.ni.Ot.Ct)),l=Math.max(r.length-u,0),p=t-r.length+l;if(l>0){var f=r.filter(function(e){return!e.qq.Pl.ql()}),d=o.Framework.time(),g=f.filter(function(e){return d-e.n8>s.ni.Ut.Bt}),v=Math.min(g.length,l);c=this.A7(v,g),c.length>v&&(p+=c.length-v);var y=[],m=[];c.forEach(function(e){y.push(e.guid),m.push(e.GV.jV(!1))})}return p>0&&(h=this.C7(p,r,i,a)),new n.qV(h,c)},e.prototype.A7=function(e,t){var r=this;t.sort(h.QV.VV);var i=t.slice(0,e);return t.slice(e,t.length).forEach(function(e){r.O7(e.Ik)&&i.push(e)}),i},e.prototype.C7=function(e,t,r,i){var n=this,o=[],a=[],h=[],c=[],u=[],l=this.wC.Ek();l||(l=-1);var p=[];t.forEach(function(e){p.push(e.guid)});var f=Math.floor(e*s.ni.Ut.Ft),d=this.wC.sV();i.forEach(function(e){var t=e.Tk.ho;if(t){var r=n.so(e,t,l,d);r.Ix?r._7?o.push(e):a.push(e):n.N7(e,s.ni.Ut.Dt)?n.O7(e)?u.push(e):c.push(e):h.push(e)}else u.push(e)});var g=this.D7(o,a,h,c,u,e,e,f);return g.slice(0,Math.min(g.length,e))},e.prototype.D7=function(e,t,r,i,n,h,c,u){var l=[],p=[];e.length>0&&o.Framework.random()<s.ni.Ut.Lt&&(e=a.fn.nn(e),p=e.slice(0,Math.min(e.length,u)),l.push.apply(l,p),c=h-p.length);var f=[];t.length>0&&(t=a.fn.nn(t),f=t.slice(0,Math.min(t.length,u)),l.push.apply(l,f),c=h-f.length);var d=[];r.length>0&&(r=a.fn.nn(r),d=r.slice(0,Math.min(r.length,u)),l.push.apply(l,d),c=h-d.length);var g=null;if(i.length>0){i=a.fn.nn(i),g=i.slice(0,Math.min(i.length,c));c=h-((d.length>0?d.length:0)-g.length)}var v=[];return c>0&&n.length>0&&(n=a.fn.nn(n),v=n.slice(0,Math.min(n.length,c)),l.push.apply(l,v)),l},e.prototype.so=function(e,t,r,n){var s=!1,o=!1,a=new i;t.forEach(function(e){a.set(e.bitrate,e)});var h=new i;return a.forEach(function(e,t){n.has(t)&&h.set(t,e)}),h.keys().length>0&&h.forEach(function(t,i){var a=n.get(i);if(a&&t.state>=2&&a.type>=1){var h=e.Tk.internalAs;h>0&&h==r&&(o=!0),s=!0}}),{Ix:s,_7:o}},e.prototype.N7=function(e,t){var r=this.wC.aV(),i=this.wC.qJ(),n=this.F7(e,i);return(0!=r||0!=n)&&(r<n&&r>n+t)},e.prototype.O7=function(e){var t=this.wC.aV(),r=this.wC.qJ(),i=this.F7(e,r);return 0==t&&0==i||t>i},e.prototype.F7=function(e,t){var r=e.Tk.ho,i=0;return r&&r.forEach(function(e){e.bitrate==t&&(i=e.delta)}),i},e}();t.xz=c;var u=function(){function e(){this.te=o.Framework.resolve(o.Framework.q.I).log()}return e.prototype.Jq=function(e,t,r){var n=this;this.wC=e;var a=this.wC.sV(),h=t.ho;if(h){var c=r.filter(function(e){return!e.qq.Pl.ql()}),u=o.Framework.time(),l=c.filter(function(e){return u-e.n8>s.ni.Ut.Bt});if(0==h.filter(function(e){return a.has(e.bitrate)}).length)return null;var p=this.L7(l),f=this.M7(a,p);if(f)return f;var d=a.keys().length,g=l.length,v=Math.round(g/d),y=p.keys().filter(function(e){return a.has(e)}),m=new i;y.forEach(function(e){m.set(e,p.get(e))});var E=this.B7(m,v);return null!=E?E:(h.forEach(function(e){var t=m.get(e.bitrate);if(null!=t){var r=n.U7(t);if(r.length>0&&!s.ni.Ut.Mt)return r[0]}}),null)}return null},e.prototype.L7=function(e){var t=new i;return e.forEach(function(e){var r=e.Ik.Tk.ao;if(r||(r=-1),t.has(r)){var i=t.get(r);i.push(e),t.set(r,i)}else t.set(r,[e])}),t},e.prototype.U7=function(e){return e.filter(function(e){if(0==e.KV.E5(s.ni.Or.kr))return e})},e.prototype.B7=function(e,t){var r=[];e.forEach(function(e,t){r.push({bitrate:t,x7:e.length})}),r.sort(function(e,t){return e.x7>t.x7?1:e.x7<t.x7?0:-1});var i=null;return r.forEach(function(r){if(e.get(r.bitrate).length>t){var n=e.get(r.bitrate);n.length>0&&(n.sort(h.YV.VV),i=n[0])}}),i},e.prototype.M7=function(e,t){var r=this,i=null;if(t.has(-1))i=t.get(-1)[0];else{t.filter(function(t,r){return!e.has(r)}).forEach(function(e,t){var n=r.U7(e);if(n.length>0)return void(i=n[0])})}return i},e}();t.Hz=u},function(e,t,r){"use strict";var i=r(0),n=r(10),s=r(31),o=r(22),a=r(11),h=r(8),c=r(3),u=function(){function e(){this.H7=!0===h.HiveConfig.Stats.Ds,this.q7=null}return e.prototype.init=function(e){this.te=i.Framework.resolve(i.Framework.q.I).log(e.sessionId),this.mn="S["+e.sessionId+"]",this.Dc=e.Cn.Dc,this.wC=e.wC,this.EJ()},e.prototype.d1=function(e){this.Dc.N_.metrics.memN=e,this.Dc.KF.metrics.memN=e},e.prototype.Fq=function(e,t){this.Dc.N_.metrics.lookupTotal++,this.Dc.KF.metrics.lookupTotal++,e?(this.Dc.N_.metrics.lookupNotFound++,this.Dc.KF.metrics.lookupNotFound++,this.Dc.N_.metrics.lookupFailed++,this.Dc.KF.metrics.lookupFailed++):t?(this.Dc.N_.metrics.lookupFailed++,this.Dc.KF.metrics.lookupFailed++):(this.Dc.N_.metrics.lookupReqEstablished++,this.Dc.KF.metrics.lookupReqEstablished++)},e.prototype.eV=function(){this.Dc.N_.metrics.lookupReqAccept++,this.Dc.KF.metrics.lookupReqAccept++},e.prototype.h8=function(e,t,r,i,n){if(this.H7||i){var s=n==o.Tu.Eu,a=this.Dc.mL(e),h=this.Dc.yL(e);a.p2pSuccReq++,a.p2pSuccReceived+=t,h.p2pSuccReq++,h.p2pSuccReceived+=t,s&&(a.p2pSuccReceivedLow+=t,h.p2pSuccReceivedLow+=t),r>0&&!s&&(a.p2pSuccReceivedLow+=t,h.p2pSuccReceivedLow+=t)}},e.prototype.l8=function(e,t,r,i,n,s){if(this.H7||n){var a=s==o.Tu.Eu,h=this.Dc.mL(e),c=this.Dc.yL(e);h.p2pFailReq++,h.p2pSuccReceived+=t,h.p2pFailReceived+=i-t,c.p2pSuccReq++,c.p2pSuccReceived+=t,c.p2pFailReceived+=i-t,a&&(h.p2pSuccReceivedLow+=t,c.p2pSuccReceivedLow+=t),r>0&&!a&&(h.p2pSuccReceivedLow+=t,c.p2pSuccReceivedLow+=t)}},e.prototype.p8=function(e,t,r){if(this.H7||r){var i=this.Dc.mL(e),n=this.Dc.yL(e);i.p2pFailReq++,i.p2pFailReceived+=t,n.p2pFailReq++,n.p2pFailReceived+=t}},e.prototype.d8=function(e,t,r){if(this.H7||r){var i=this.Dc.mL(t),n=this.Dc.yL(t);i.p2pSuccResp++,i.p2pSuccSent+=e,n.p2pSuccResp++,n.p2pSuccSent+=e}},e.prototype.m8=function(e,t,r,i){if(this.H7||i){var n=this.Dc.mL(r),s=this.Dc.yL(r);n.p2pPartResp++,n.p2pSuccSent+=e,n.p2pFailSent+=t-e,s.p2pPartResp++,s.p2pSuccSent+=e,s.p2pFailSent+=t-e}},e.prototype.v8=function(e,t,r){if(this.H7||r){var i=this.Dc.mL(t),n=this.Dc.yL(t);i.p2pFailResp++,i.p2pFailSent+=e,n.p2pFailResp++,n.p2pFailSent+=e}},e.prototype.J_=function(e){e?this.Dc.N_.metrics.bitrateUpN++:this.Dc.N_.metrics.bitrateDwnN++},e.prototype.BJ=function(e){if(-1==[n.Ws.zs,n.Ws.Js].indexOf(e.Yu())){var t=e.Yu()!=n.Ws.Ks;if((this.H7||t)&&(this.Dc.fL().reqN++,this.Dc.M_().reqN++,e.Yu()==n.Ws.Ys)){var r=e;if(r.bitrate){var i=r.bitrate;this.Dc.dL(i).reqN++,this.Dc.F_(i).reqN++}}}else this.Dc.fL().reqOtherN++,this.Dc.M_().reqOtherN++},e.prototype.sW=function(e){var t=e.Yu()!=n.Ws.Ks;if(this.H7||t){var r=this.Dc.fL(),i=this.Dc.M_(),s=null,a=null;if(-1==[n.Ws.zs,n.Ws.Js].indexOf(e.Yu())){if(r.srcReqN++,i.srcReqN++,t){var h=this.V7(e);h&&(s=this.Dc.dL(h),a=this.Dc.F_(h),s.srcReqN++,a.srcReqN++)}if(e.Ku()==o.Tu.vu&&(r.srcOtherReqN++,i.srcOtherReqN++,t)){var h=this.V7(e);h&&(s.srcOtherReqN++,a.srcOtherReqN++)}}}},e.prototype.J8=function(e){if(this.Dc.fL().p2pSubReqN++,this.Dc.M_().p2pSubReqN++,e.Yu()==n.Ws.Ys){var t=this.V7(e);t&&(this.Dc.dL(t).p2pSubReqN++,this.Dc.F_(t).p2pSubReqN++)}},e.prototype.j7=function(e,t){this.G7(e,this.Dc.M_()),this.G7(e,this.Dc.fL());var r=this.V7(e);r&&e.Yu()===n.Ws.Ys&&(this.G7(e,this.Dc.dL(r)),this.G7(e,this.Dc.F_(r))),isNaN(t)||(this.Dc.N_.metrics.srcThroughput=t)},e.prototype.uW=function(e,t){var r=e.Yu()!=n.Ws.Ks;(this.H7||r)&&(-1!=[n.Ws.zs,n.Ws.Js].indexOf(e.Yu())?(this.Dc.fL().respFallbackOtherN++,this.Dc.M_().respFallbackOtherN++):this.j7(e,t))},e.prototype.aW=function(e,t){if(-1!=[n.Ws.zs,n.Ws.Js].indexOf(e.Yu()))this.Dc.fL().respFallbackOthertErrN++,this.Dc.M_().respFallbackOthertErrN++;else{var r=e.Yu()!=n.Ws.Ks;if(this.H7||r)if(this.z_(e.type)){if(this.Dc.M_().respFallbackErrN++,this.Dc.fL().respFallbackErrN++,r){var i=this.V7(e);i&&(this.Dc.dL(i).respFallbackErrN++,this.Dc.F_(i).respFallbackErrN++)}if(0==e.Mu.Au&&(this.Dc.M_().srcRespErrN++,this.Dc.fL().srcRespErrN++,r)){var i=this.V7(e);i&&e.Yu()===n.Ws.Ys&&(this.Dc.dL(i).srcRespErrN++,this.Dc.F_(i).srcRespErrN++)}this.j7(e,t)}else if(-1!=c.ni.Wt.Jt.indexOf(e.Vu.status))this.Dc.fL().fallAgentFailedRespN++,this.Dc.M_().fallAgentFailedRespN++,this.Dc.fL().reqN--,this.Dc.M_().reqN--;else{if(0==e.Mu.Au&&(this.Dc.fL().srcOtherRespErrN++,this.Dc.M_().srcOtherRespErrN++),!r){var i=this.V7(e);i&&e.Yu()===n.Ws.Ys&&(this.Dc.dL(i).srcOtherRespErrN++,this.Dc.F_(i).srcOtherRespErrN++)}this.j7(e,t)}}},e.prototype.GJ=function(e,t){if(t.ex==o.Tu.Eu)this.Dc.M_().respP2pN++,this.Dc.fL().respP2pN++;else if(t.ex==o.Tu.vu)this.Dc.M_().respFallbackN++,this.Dc.fL().respFallbackN++;else if(t.ex==o.Tu.du){this.Dc.M_().lCacheRespN++,this.Dc.fL().lCacheRespN++;var r=i.Framework.S()?t.length:e.Hu.byteLength;this.Dc.M_().lCacheRespQt+=r,this.Dc.fL().lCacheRespQt+=r}},e.prototype.tW=function(e,t){var r=e.Yu()!=n.Ws.Ks;(this.H7||r)&&this.j7(e,t)},e.prototype.JJ=function(e){if(0!=e.qu){this.Dc.fL().p2pSubRespErrN++,this.Dc.M_().p2pSubRespErrN++;if(e.Yu()==n.Ws.Ys){var t=this.V7(e);t&&(this.Dc.dL(t).p2pSubRespErrN++,this.Dc.F_(t).p2pSubRespErrN++)}}},e.prototype.W8=function(e){if(this.Dc.fL().p2pSubRespExpN++,this.Dc.M_().p2pSubRespExpN++,e.Yu()==n.Ws.Ys){var t=this.V7(e);t&&(this.Dc.dL(t).p2pSubRespExpN++,this.Dc.F_(t).p2pSubRespExpN++)}},e.prototype.G7=function(e,t){var r=e.Mu.Su,i=e.Mu.Au,s=e.Mu.Ru,o=e.Mu.bu,h=e.Mu.Pu;if(e.Yu()!=n.Ws.zs){if(e.Mu.Iu&&o&&o<r){var c=o/r;t.p2pSubRespPartN+=c,this.z_(e.type)||(t.p2pAgenTrafficFailureQt+=r-s)}if(0!=h&&(h==r&&t.lCacheRespN++,t.lCacheRespQt+=e.Mu.Pu),0!=s)if(s==r&&(this.z_(e.type)&&t.respP2pN++,t.p2pSubRespN++),t.p2pSubReqQt+=r,t.p2pSubRespQt+=s,t.p2pAgenTrafficSuccessQt+=e.Mu.p2pAgenTrafficSuccessQt,t.p2pDirectQt+=s,e.KU.Ik.Tk.type==a.Zs.K)t.p2pUdpbQt+=s,t.p2pNatQt+=s;else{var u=this.wC.Ek();if(u&&u>0)if(null!=e.YU){var l=e.YU.internalAs;u===l&&(t.p2pNatQt+=s)}else this.te.warn("Missing partner info")}}if(0!=i){if(this.Q7(e.type)&&(t.srcOtherReqQt+=e.Mu.Au),i==r)this.Q7(e.type)?(t.srcOtherRespN++,t.srcOtherRespQt+=e.Mu.Au,t.srcOtherOverQt+=e.Mu.Au,t.fallAgentRespN++):t.respFallbackN++,t.srcRespN++;else{t.srcRespErrN++;var p=i/(s+i);t.respFallbackN=p,t.respP2pN=1-p,this.Q7(e.type)&&(t.srcOtherRespErrN++,t.srcOtherRespQt+=e.Mu.Au,t.srcOtherOverQt+=e.Mu.Au,t.fallAgenTrafficFailureQt+=e.Mu.Au)}t.srcReqQt+=e.Mu.Au,t.srcRespQt+=e.Mu.Au,t.srcOverQt+=e.Mu.Au,this.Q7(e.type)&&(t.fallAgenTrafficSuccessQt+=e.Mu.Cu)}},e.prototype.V7=function(e){var t=null;if(e.Qu instanceof s.SR){var r=e.Qu;r.bitrate&&(t=r.bitrate)}return t},e.prototype.z_=function(e){return e!=o.Tu.Eu&&e!=o.Tu.vu},e.prototype.Q7=function(e){return!this.z_(e)},e.prototype.EJ=function(){this.K7()},e.prototype.gJ=function(){i.Framework.clearInterval(this.q7),this.q7=null},e.prototype.K7=function(){var e=this;null!=this.q7&&(this.q7=i.Framework.setInterval(function(){e.Dc.qF=e.wC.iV(),e.Dc.HF=e.wC.Ek(),e.Dc.cL=e.wC.Kh()},c.ni.ii.ri))},e}();t.bz=u},function(e,t,r){"use strict";var i=r(0),n=r(3),s=r(11),o=r(191),a=r(8),h=function(){function e(){this.Y7=!1,this.mn="[UDPBDiscovery] ",this.z7=-1}return e.prototype.init=function(e){this.te=i.Framework.resolve(i.Framework.q.I).log(e.sessionId),this.J7=e.Xz,this.wC=e.wC},e.prototype.nJ=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.ss=e,this.fR=this.wC.K_()},e.prototype.W7=function(){var e=this;this.te.debug(this.mn+"START UDP BROADCAST SERVER"),this.J7.W7(n.ni.UDPBroadcast.Br,function(t,r){if(e.z7>-1){var i=o.X7.fu(r);if(i.Ck!=e.guid&&i.Nx==e.fR&&i.Qq===n.ni.Ut._t){e.te.debug(e.mn+"I RECEIVED A MESSAGE FROM "+i.Ck);var a=new s.po(s.Zs.K,null,i.so);a.guid=i.Ck,a.uo=t,a.co=i.co,e.ss.forEach(function(e){return e.Ax([a],!1)})}}})},e.prototype.mJ=function(){var e=this;this.te.info(this.mn+"START BROADCAST EVERY "+n.ni.UDPBroadcast.Ur),-1!=this.z7&&i.Framework.clearInterval(this.z7),this.z7=i.Framework.setInterval(function(){e.Z7()},n.ni.UDPBroadcast.Ur),this.Z7()},e.prototype.pJ=function(){-1!=this.z7&&i.Framework.clearInterval(this.z7)},e.prototype.Z7=function(){var e=new o.X7(this.fR,this.wC.W(),this.wC.oH(),this.wC.fk(),n.ni.Ut._t);this.te.info(this.mn+"BROADCAST MESSAGE contextId "+e.Nx+" id "+e.Ck+" udpscore "+e.co+" lan leader "+e.so+" protobufVersion "+e.Qq),a.HiveConfig.UDPBroadcast.usiz&&(n.ni.UDPBroadcast.xr=a.HiveConfig.UDPBroadcast.usiz),this.J7.eee(n.ni.UDPBroadcast.Br,n.ni.UDPBroadcast.xr,e.pu())},e.prototype.Zh=function(e){this.te.info("UDPDISCOVERY SERVER CONNECTED"),this.Y7||(this.guid=e,this.W7(),this.mJ())},e}();t.Iz=h},function(e,t,r){"use strict";var i=function(){function e(e,t,r,i,n){this.Nx=e,this.Ck=t,this.co=r,this.so=i,this.Qq=n}return e.prototype.pu=function(){var e={Nx:this.Nx,Ck:this.Ck,co:this.co,so:this.so,Qq:this.Qq};return JSON.stringify(e,this.tee)},e.prototype.tee=function(e,t){if(null!==t)return t},e.fu=function(t){var r=t,i=JSON.parse(r);return new e(i.Nx,i.Ck,i.co,i.so,i.Qq)},e}();t.X7=i},function(e,t,r){"use strict";var i=r(0),n=function(){function e(){this.mn="[ProxyUDPB]",this.te=i.Framework.resolve(i.Framework.q.I).log(),this.J7=window.ree,this.J7||this.te.error(this.mn+" helper undefined")}return e.prototype.W7=function(e,t){try{this.J7&&this.J7.W7(e,t)}catch(e){this.te.warn(this.mn+e)}},e.prototype.iee=function(){try{this.J7&&this.J7.iee()}catch(e){this.te.warn(this.mn+e)}},e.prototype.eee=function(e,t,r){try{this.J7&&this.J7.eee(e,t,r)}catch(e){this.te.warn(this.mn+e)}},e.prototype.pJ=function(){try{this.J7&&this.J7.pJ()}catch(e){this.te.warn(this.mn+e)}},e.prototype.nee=function(e,t){try{this.J7&&this.J7.nee(e,t)}catch(e){this.te.warn(this.mn+e)}},e}();t.wz=n},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(85),s=r(194),o=r(86),a=r(87),h=r(57),c=r(22),u=r(31),l=r(2),p=r(4),f=function(e){function t(){var t=e.call(this)||this;return t.see.onerror=function(e){p.ErrorMonitor.gi().di("Shared Worker error",{error:e.message})},t.oee.onerror=function(e){p.ErrorMonitor.gi().di("Web Worker error",{error:e.type})},t.see.port.start(),t}return i(t,e),t.prototype.aee=function(){var e=this;setTimeout(function(){e.hee()},1e3)},t.prototype.hee=function(){var e=this;this.see.port.onmessage=function(t){e.te.debug("LRU length : "+t.data.response)},this.te.debug("Send message"),this.see.port.postMessage({type:s.uee.cee}),this.aee()},t.prototype.contains=function(e){var t=this,r=l.defer();if(this.xU.has(e))r.resolve(!0);else{var i=!1,n=setTimeout(function(){i=!0,t.te.debug("VOD CONTAINS TIMEDOUT : "+e),r.resolve(!1)},1e3);this.see.port.onmessage=function(e){clearTimeout(n),i||(e.data.response?r.resolve(!0):r.resolve(!1))},this.see.onerror=function(e){t.te.error(e)},this.see.port.postMessage({type:s.uee.lee,pee:e})}return r.Te},t.prototype.fee=function(e){var t=l.defer(),r=this.xU.get(e);if(null!=r){var i=null;r.content.forEach(function(e,t){if(h.wD.ID(t).vD())return i=e,i.headers=r.headers,void(i.YU=r.YU)}),t.resolve(i)}else t.resolve(null);return t.Te},t.prototype.get=function(e){var t=this,r=l.defer();if(this.xU.has(e))this.fee(e).then(function(e){r.resolve(e)});else{this.te.debug("SHAREDWORKER: Permission Request to READ");var i=Date.now();this.dee(s.uee.gee,i).then(function(n){t.te.debug("SHAREDWORKER: Permission Request To READ : "+n),n?t.vee(e).then(function(e){t.te.debug("SHAREDWORKER:  Read Completed "),t.see.port.postMessage({type:s.uee.yee,id:i}),r.resolve(e)}):r.resolve(null)})}return r.Te},t.prototype.vee=function(e){var t=this,r=l.defer(),i=null,n=!1,a=setTimeout(function(){n=!0,r.resolve(i)},1e3);return this.oee.onmessage=function(h){if(clearTimeout(a),!n){if(h.data.response){var u=new c.Fu;u.Iu=!1,u.wu=!0,u.Su=h.data.data.length,u.Ru=0,u.Pu=h.data.data.length,u.Au=0,i=new o.zU(h.data.data.length,h.data.data.content,u,c.Tu.du),i.headers=h.data.data.mee}else t.see.port.postMessage({type:s.uee.Eee,pee:e});r.resolve(i)}},this.oee.postMessage({type:s.uee.Tee,pee:e}),r.Te},t.prototype.m=function(){var e=this;this.te.debug("FLUSHING IN-MEMORY CACHE");for(var t=[],r=0;r<this.qU.length;r++)this.xU.get(this.qU[r]).ix||t.push(this.qU[r]);this.te.debug("Flush "+t.length+" in memory"),t.length>0?this.Iee(t).then(function(t){e.wee()}):this.wee()},t.prototype.wee=function(){var e=this,t=0,r=0;this.te.debug("PURGING PERSISTENTDB's IN-MEMORY CACHE"),this.qU.every(function(i,n){var s=e.xU.get(i).size();return t+s>e.VU?(r=n,e.te.debug("CACHE TOO BIG "+(t+s)),!1):(t+=s,!0)})||this.qU.splice(r,this.qU.length-1).forEach(function(t){e.xU.delete(t)}),this.GU()},t.prototype.Iee=function(e){var t=this,r=l.defer();this.te.debug("SHAREDWORKER:  Permission Request To Write ");var i=Date.now();return this.dee(s.uee.See,i).then(function(n){t.te.debug("SHAREDWORKER:  Permission Request To WRITE : "+n),n?(t.te.debug("Flush the contents"),t.Ree(e).then(function(e){t.te.debug("SHAREDWORKER:  WRITE COMPLETED"),t.see.port.postMessage({type:s.uee.bee,id:i}),r.resolve(e)})):r.resolve(n)}),r.Te},t.prototype.Ree=function(e){var t=this,r=l.defer();return this.Pee(e[0]).then(function(i){if(i)e.shift(),0==e.length?r.resolve(!0):t.Ree(e).then(function(e){r.resolve(e)});else{var n=!1,o=setTimeout(function(){n=!0,e.shift(),0==e.length?r.resolve(!1):t.Ree(e).then(function(e){r.resolve(e)})},1e3);t.oee.onmessage=function(i){i.data&&(t.xU.get(e[0]).ix=!0,t.see.port.postMessage({type:s.uee.Aee,pee:e[0],size:t.xU.get(e[0]).size()})),clearTimeout(o),n||(e.shift(),0==e.length?i.data?r.resolve(!0):r.resolve(!1):t.Ree(e).then(function(e){r.resolve(e)}))},t.oee.onerror=function(e){t.te.error(e)};var a=t.xU.get(e[0]),c=null,u=null;a.content.forEach(function(e,t){if(h.wD.ID(t).vD())return c=e,u=t,void(c.headers=a.headers)});var l={mR:a.Qu.zu(),headers:a.headers,length:a.size(),Cee:u,content:c.data,Qu:a.Qu};t.oee.postMessage({type:s.uee.kee,data:l})}}),r.Te},t.prototype.Pee=function(e){var t=this,r=l.defer(),i=!1,n=setTimeout(function(){i=!0,r.resolve(!1)},1e3);return this.see.port.onmessage=function(s){clearTimeout(n),i||(t.te.debug("SHAREDWORKER:  CONTAINS REQUEST : "+e+" : "+s.data.response),s.data.response?r.resolve(!0):r.resolve(!1))},this.see.onerror=function(e){t.te.error(e),r.resolve(!1)},this.see.port.postMessage({type:s.uee.lee,pee:e}),r.Te},t.prototype.dee=function(e,t){var r=this,i=l.defer(),n=!1,o=setTimeout(function(){n=!0,i.resolve(!1)},2e3);return this.see.port.onmessage=function(t){clearTimeout(o),n?e==s.uee.gee?r.see.port.postMessage({type:s.uee.yee}):e==s.uee.See&&r.see.port.postMessage({type:s.uee.bee}):i.resolve(t.data.response)},this.see.onerror=function(e){r.te.error(e)},this.see.port.postMessage({type:e,id:t}),i.Te},t.prototype.hk=function(e){return[]},t.prototype.JU=function(e){var t=this,r=l.defer(),i=[],n=Date.now();return this.dee(s.uee.gee,n).then(function(e){if(e){var o=!1,h=setTimeout(function(){o=!0,t.see.port.postMessage({type:s.uee.yee,id:n}),r.resolve(i)},4e3);t.oee.onmessage=function(e){if(clearTimeout(h),e.data.response&&null!=e.data)for(var c=0;c<e.data.elements.length;c++){var l=new u.SR(e.data.elements[c].url,e.data.elements[c].gR,e.data.elements[c].dR,e.data.elements[c].vR,e.data.elements[c].duration,e.data.elements[c].bitrate,e.data.elements[c].yR),p=new a.QU(l);p.headers=e.data.elements[c].mee,p.tx=e.data.elements[c].length,i.push(p)}t.see.port.postMessage({type:s.uee.yee,id:n}),o||r.resolve(i)},t.oee.onerror=function(e){p.ErrorMonitor.gi().di("GET ELEMENTS ERROR",{error:e}),t.see.port.postMessage({type:s.uee.yee,id:n})},t.oee.postMessage({type:s.uee.Oee})}}),r.resolve(null),r.Te},t}(n.$U);t.Sz=f},function(e,t,r){"use strict";var i=function(){function e(){}return e}();i.See="write_request",i.lee="contains_request",i.Aee="write_id_operation",i.gee="read_request",i.yee="read_completed",i.bee="write_completed",i.Eee="update_lru",i.cee="lru_stats",i.Tee="read_operation",i.Oee="read_elements_operation",i._ee="read_keys_operation",i.kee="write_operation",t.uee=i},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20);!function(e){!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(n.gn.ou.au);e.uz=t}(e.ou||(e.ou={}))}(t.gn||(t.gn={}))},function(e,t,r){"use strict";var i=r(2),n=r(7),s=r(197),o=r(26),a=o.gn.HiveTechError,h=o.gn.cE,c=r(65),u=r(19),l=r(18),p=r(42),f=r(50),d=r(8),g=r(4),v=r(53),y=r(29),m=r(67),E=(r(51),navigator),T=function(){function e(e,t,r){this.mn="[HiveJsProxy]",this.Nee=0,this.h_=e,this.options_=new s.gn.ou.Dee,this.Fee(t),this.l_(),this.Vj=r}return e.prototype.Fn=function(){return e.c_},e.prototype.getVersion=function(){return this.version},e.prototype.u_=function(){return!1},e.prototype.l_=function(){var e=this;if(null==this.Lee||Date.now()-this.Nee>1e4){var t="//"+c.cO.oA+":"+c.cO.uO+"/version.json";this.Lee=n.ps(t).then(function(t){var r=JSON.parse(t);return e.state=r.state,e.version=r.version,"ready"===e.state?"ready":(e.te().warn(e.id()+"Client not ready: "+e.state),i.reject(new a(h.nE,"state "+e.state)))},function(t){var r="Client not reachable";return void 0!=t&&void 0!=t.status&&-1!=t.status&&(r="Client check returned "+t.status),e.te().warn(e.id()+r),i.reject(new a(h.nE,r))}).catch(function(e){return e instanceof a?i.reject(e):i.reject(new a(h.nE,"error parsing response"))}),this.Nee=Date.now()}return this.Lee},e.prototype.initSession=function(e,t){var r=this;return this.l_().then(function(){return r.XV(e).then(function(t){var i=r.p_(e,t);if(null!=i)return m.wn.XD(r.h_,i.id),m.wn.bn(r,i.id),n.HiveRequestFactory.bn(i.id,r.Fn()),i;throw new a(h.Xm,"error generating session")})}).catch(function(e){return e instanceof a?i.reject(e):i.reject(new a(h.Xm,"generic error resolving ticket"))})},e.prototype.$D=function(e){this.fz=e},e.prototype.f_=function(){return this.options_.initTimeout},e.prototype.ci=function(e,t){var r=t.manifest.toLowerCase(),i=e.toLowerCase(),n=r.indexOf(".ism/manifest");if(n>-1){var s=r.substring(0,n);if(i.indexOf(s)>-1)return i.indexOf(".ism/manifest(format=mpd-time-csf)")>-1?this.fz?(t.ticket.SourceURL=e,!0):this.dz(t,"The player does not use HiveRequest, downgrading to StatsJS"):this.dz(t,"Protocol not supported by HiveJsProxy tech, downgrading to StatsJS")}else if(i===r)return!!this.fz||this.dz(t,"The player does not use HiveRequest, downgrading to StatsJS");return!1},e.prototype.dz=function(e,t){var r=this;return e.tech=this.Vj,y.Hive.Reporting().initSession(e.ticket.ticketUrl,!1).then(function(t){e.Mn(t);t.ticket;r.te().debug("[HiveJSProxy] downgrade verified ticket "+e.ticket.ticketUrl),r.h_.wh(t)}).fail(function(e){g.ErrorMonitor.gi().di("Error initializing session when downgrading session tech",r.mn,{error:e})}),this.fz&&this.fz.tF(),this.fz=void 0,n.HiveRequestFactory.bn(e.id,v.StatsJS.c_),this.h_.te().warn("[HiveJsProxy] "+t),this.onError(new a(h.oE,t)),!0},e.prototype.Nn=function(e,t){var r=this;this.te().debug(this.id()+"Stopping session "+e.id+" [onUnload:"+t+"]");var i="//"+c.cO.oA+":"+c.cO.uO+"/proxy/"+e.id+"/stop";t&&E.sendBeacon?(E.sendBeacon(i),this.te().debug(this.id()+"session stopped ["+e.id+"][beacon]")):n.ps(i,null,!t).then(function(){r.te().debug(r.id()+"session stopped ["+e.id+"]"+(t?"[sync]":""))},function(i){r.te().warn(r.id()+"session close error ["+e.id+"]"+(t?"[sync]":""),i)})},e.prototype.On=function(e,t){var r=t?u._c.IDLE:u._c.Oc;this.te().debug(this.id()+"idle state: "+u._c[r])},e.prototype.g_=function(e,t){var r=this,s="playing-point="+t.Rs;s+="&buffer-length="+t.bs,s+="&total-buffering="+t.Ps,s+="&width="+t.width,s+="&height="+t.height,s+="&fullscreen="+t.tG;var o="//"+c.cO.oA+":"+c.cO.uO+"/proxy/"+e.id+"/stats/put?"+s;return n.ps(o).fail(function(e){return r.te().warn(r.id()+"error sending feedback to Hive Client",e),i.reject(e)})},e.prototype.E_=function(e,t,r){var s=this,o="//"+c.cO.oA+":"+c.cO.uO+"/proxy/"+e.id+"/event?type="+t;if(void 0!=r)for(var a in r)o+="&"+a+"="+r[a];return this.te().debug(this.id()+"event "+l.kc.$a[t],void 0!=r?r:""),n.ps(o).fail(function(e){return s.te().warn(s.id()+"error sending feedback event to Hive Client",e),i.reject(e)})},e.prototype.Nh=function(e,t){return i.resolve(!0)},e.prototype.onError=function(e){var t=!0;if(void 0!=this.options_.onError)try{t=this.options_.onError(e)}catch(e){g.ErrorMonitor.gi().di("exception in user-defined onError callback",this.id(),e)}return t},e.prototype.onActiveSession=function(e){var t=this.h_.b_();0===t.indexOf("//")&&(t=location.protocol+t);var r=n.gs(c.cO.KD,c.cO.oA,c.cO.uO,e.id,t);if(e.authenticationToken&&this.version>="3.0.1"?n.ds(r,JSON.stringify({authenticationToken:e.authenticationToken})):n.ps(r),this.wh(e),f.In.mi(this.te()),this.fz&&this.fz.rF(),this.Mee(e),void 0!=this.options_.onActiveSession)try{this.options_.onActiveSession(e.Dn())}catch(e){g.ErrorMonitor.gi().di("exception in user-defined onActiveSession callback",this.id(),e)}},e.prototype.A_=function(){},e.prototype.C_=function(){},e.prototype.k_=function(e){this.h_=e},e.prototype.id=function(){return"["+e.c_+"] "},e.prototype.Fee=function(t){void 0!=t[e.c_]&&n.vs(t[e.c_],this.options_)},e.prototype.XV=function(e){var t=this;this.te().debug(this.id()+"resolving ticket: "+e);var r=this.Bee(e),s=JSON.stringify(this.Uee());return n.ds(r,s,"application/json").then(function(r){var i=JSON.parse(r);return t.te().debug(t.id()+"resolved ticket "+e+" -> "+i.manifest),i},function(r){return t.te().warn(t.id()+"ticket "+e+" resolve error: "+r),i.reject(new a(h.Xm,r))}).catch(function(e){return e instanceof a?i.reject(e):i.reject(new a(h.sE,e))})},e.prototype.Bee=function(e){return e=encodeURIComponent(e),n.gs(c.cO.aA,c.cO.oA,c.cO.uO,e,"&",this.h_.tj())},e.prototype.p_=function(e,t){var r=new p.VA;r.AA(e);var i=new n.Bn(e,r,t.manifest,null);return i.O_=!0,i.id=t.sessionId,i.ticket.sessionId=i.id,i},e.prototype.Uee=function(){var e={};e.HiveConfig={};for(var t in window.HiveConfig){e.HiveConfig[t]={};for(var r in window.HiveConfig[t])e.HiveConfig[t][r]=window.HiveConfig[t][r]}return e},e.prototype.Mee=function(e){var t=this;if(void 0!==d.HiveConfig.Stats.render){var r="//"+c.cO.oA+":"+c.cO.uO+"/proxy/"+e.id+"/stats/get";if("undefined"!=typeof EventSource){var i=new EventSource(r);i.onmessage=function(e){t.xee(e.data)},i.onerror=function(e){i.close()}}else this.Hee=window.setInterval(function(){n.ps(r).then(function(e){t.xee(e)})},4e3)}},e.prototype.wh=function(e){var t=this,r="comm-version="+this.h_.mj();r+="&plugin-name="+this.h_.ej(),r+="&plugin-version="+this.h_.rj(),r+="&player-tech="+this.h_.Ej(),r+="&player-version="+this.h_.getPlayerVersion(),this.h_.Kj()&&(r+="&telemetry-id="+this.h_.Kj());var s=n.gs(c.cO.YD,c.cO.oA,c.cO.uO,e.id,r);return n.ps(s).fail(function(e){return t.te().debug(t.id()+"error sending player Info to Hive Client",e),i.reject(e)})},e.prototype.xee=function(e){try{var t=JSON.parse(e);for(var r in t)t.hasOwnProperty(r)&&(t[r].human=function(e){return e>1e6?(e/1e6).toFixed(2)+"MB":e>1e3?(e/1e3).toFixed(2)+"KB":e+"B"});d.HiveConfig.Stats.render(t)}catch(e){console.trace(e)}},e.prototype.te=function(){return this.h_.te()},e}();T.c_="HiveJsProxy",t.HiveJsProxy=T},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20);!function(e){!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(n.gn.ou.au);e.Dee=t}(e.ou||(e.ou={}))}(t.gn||(t.gn={}))},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(2),s=r(7),o=r(20),a=r(199),h=r(26),c=r(39),u=r(19),l=r(18),p=r(42),f=r(4),d=a.gn.ou,g=o.gn.ou.hu,v=h.gn.HiveTechError,y=h.gn.cE,m=r(51);t.qee=navigator;var E=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(s.Bn),T=function(){function e(e,t){this.Nee=0,this.h_=e,this.options_=new d.Vee,this.Fee(t),s.ys(window.location.href,new g,this.options_)}return e.prototype.Fn=function(){return e.c_},e.prototype.getVersion=function(){return this.version},e.prototype.u_=function(){return!1},e.prototype.l_=function(){var e=this;if(null==this.Lee||Date.now()-this.Nee>1e4){var t=new m;t.Bh(navigator.userAgent);var r=t.NO();if("IE"===r.name&&r.version&&parseInt(r.version)<10)return n.reject(new v(y.nE,"Internet Explorer < v.10 not supported"));this.jee=Date.now(),this.Gee=0;var i="//"+c.tu.oA+":"+this.h_.options().monitorPort+"/version.json";this.te().debug(this.id()+"verifying Hive Client version"),this.Lee=s.ps(i).then(function(t){var r=JSON.parse(t);return e.state=r.state,e.version=r.version,"ready"===e.state?"developer"===e.version||e.version>=e.options_.minVersion?(e.Gee=Date.now(),e.te().debug(e.id()+"Hive Client ready - version "+e.version+" ["+(e.Gee-e.jee)+"]"),"ready"):(f.ErrorMonitor.gi().di("Client version requirement not satisfied",e.id(),{version:e.version,minVersion:e.options_.minVersion}),e.h_.Yj(new l.kc.Pc(null,l.kc.oh.rh)),n.reject(new v(y.aE,"version "+e.version))):(f.ErrorMonitor.gi().di("Cannot check version: client state not ready",e.id(),{state:e.state}),e.h_.Yj(new l.kc.Pc(null,l.kc.oh.th)),n.reject(new v(y.nE,"state "+e.state)))},function(t){var r="Client not reachable";return void 0!=t&&void 0!=t.status&&-1!=t.status&&(r="Client check returned error"),f.ErrorMonitor.gi().di(r,e.id(),void 0!=t&&void 0!=t.status&&-1!=t.status?{status:t.status}:void 0),e.h_.Yj(new l.kc.Pc(null,l.kc.oh.eh)),n.reject(new v(y.nE,r))}).catch(function(t){if(t instanceof v)return n.reject(t);var r="Error fetching Hive Client version";return f.ErrorMonitor.gi().di(r,e.id(),t),n.reject(new v(y.nE,r))}),this.Nee=Date.now()}return this.Lee},e.prototype.initSession=function(e,t){var r=this;return this.options_.minVersion!=c.tu.uA?this.l_().then(function(){return r.Qee(e).catch(function(e){return n.reject(e)})}):this.Qee(e).catch(function(e){return n.reject(e)})},e.prototype.f_=function(){return this.options_.initTimeout},e.prototype.ci=function(e,t){return e.indexOf(t.Kee)>-1},e.prototype.Nn=function(e,r){var i=this;this.te().debug(this.id()+"Stopping session "+e.id+" [complete close:"+r+"]");var n="//"+c.tu.oA+":"+this.h_.options().playerPort+"/session?action=stop";n+="&currentSession="+e.id,r&&(n+="&completeStop=true"),r&&t.qee.sendBeacon?(t.qee.sendBeacon(n),this.te().debug(this.id()+"session stopped ["+e.id+"][beacon]")):s.ps(n,null,!r).then(function(){i.te().debug(i.id()+"session stopped ["+e.id+"]"+(r?"[sync]":""))},function(t){i.te().warn(i.id()+"session close error ["+e.id+"]"+(r?"[sync]":""),t)})},e.prototype.On=function(e,t){this.Yee=t?u._c.IDLE:u._c.Oc,this.te().notice("[HiveComm] client state: "+u._c[this.Yee])},e.prototype.g_=function(e,t){if(this.Yee==u._c.IDLE)return n.resolve(!0);var r="playing-point="+t.Rs;r+="&buffer-length="+t.bs,r+="&total-buffering="+t.Ps,r+="&width="+t.width,r+="&height="+t.height,r+="&fullscreen="+t.tG;var i=e.Kee+"stats?"+r;return this.te().trace(i),s.ps(i)},e.prototype.E_=function(e,t,r){var i=this;if(!(t!==l.kc.$a.Za&&t!==l.kc.$a.HIDDEN||this.version&&("developer"===this.version||this.version>="2017")))return n.resolve(!0);var o=e.Kee+"player-event?type="+l.kc.$a[t];if(void 0!=r)for(var a in r)o+="&"+a+"="+r[a];return this.te().debug(this.id()+"event "+l.kc.$a[t],void 0!=r?r:""),s.ps(o).fail(function(e){return i.te().warn(i.id()+"error sending feedback event to Hive Client",e),n.reject(e)})},e.prototype.Nh=function(e,t){return n.resolve(!0)},e.prototype.wh=function(e){var t=this;if(this.zee())return this.te().warn("Player info not supported in this Java client version"),n.resolve(!0);var r="comm-version="+this.h_.mj();r+="&plugin-name="+this.h_.ej(),r+="&plugin-version="+this.h_.rj(),r+="&player-tech="+this.h_.Ej(),r+="&player-version="+this.h_.getPlayerVersion(),this.h_.Kj()&&(r+="&telemetry-id="+this.h_.Kj());var i=e.Kee+"player-info?"+r;return s.ps(i).fail(function(e){return t.te().debug(t.id()+"error sending player Info to Hive Client",e),n.reject(e)})},e.prototype.onError=function(e){var t=!0;if(void 0!=this.options_.onError)try{t=this.options_.onError(e)}catch(e){f.ErrorMonitor.gi().di("Exception in user-defined onError callback",this.id(),e)}return t},e.prototype.A_=function(e,t,r){var i={isReadyIn:this.jee,isReadyOut:this.Gee,leaseIn:this.Jee,leaseOut:this.Wee,resolveIn:this.Xee,resolveOut:this.Zee};void 0!==t&&null!=t&&(i.sessionId=t.id),void 0!==r&&(i.total=r);var n=JSON.parse(JSON.stringify(i));f.ErrorMonitor.gi().di(e.message,this.id(),n),this.h_.Yj(new l.kc.Pc(null,l.kc.oh.sh,i)),this.$ee()},e.prototype.onActiveSession=function(e){if(this.wh(e),s.Es.setItem("hiveActiveSessionId",e.id),void 0!=this.options_.onActiveSession)try{this.options_.onActiveSession(e.Dn())}catch(e){f.ErrorMonitor.gi().di("Exception in user-defined onActiveSession callback",this.id(),e)}},e.prototype.k_=function(e){this.h_=e},e.prototype.id=function(){return"["+e.c_+"] "},e.prototype.Fee=function(t){void 0!=t[e.c_]&&s.vs(t[e.c_],this.options_)},e.prototype.Qee=function(e){var t=this,r=(new Date).getTime();return this.ete(e).then(function(i){return i?t.tte(e,i,r):t.XV(e).then(function(i){return t.tte(e,i,r)})})},e.prototype.ete=function(t){var r=this;if(this.Jee=Date.now(),this.h_.options().useSessionCheck){var i="//"+c.tu.oA+":"+this.h_.options().playerPort+"/session?&action=check";i+="&hivePluginId="+this.h_.tj(),i+="&callback="+encodeURIComponent(t);var o=s.Es.getItem("hiveActiveSessionId");return s.Es.removeItem("hiveActiveSessionId"),o&&(i+="&currentSession="+o),this.rte(),s.ps(i).then(function(e){return r.Wee=Date.now(),e?r.ite(e,i,t,r.Jee):(r.te().debug(r.id()+"session allowed ["+(r.Wee-r.Jee)+"]"),!1)},function(t){if(400==t.status)return r.nte("bad request","error resolving ticket",t);if(401==t.status)return r.nte("unauthorized","error verifying the ticket",t);if(403==t.status){var i=e.ste(t,void 0,"session"),s=i?{ote:i}:void 0;return f.ErrorMonitor.gi().di("reports another active session",r.id(),s),r.h_.Yj(new l.kc.Pc(null,l.kc.oh.ih,s)),n.reject(new v(y.oE,"another active session"+(s?" ["+s.ote+"]":"")))}return 404==t.status?(r.te().debug(r.id()+"installed version does not support active session check"),r.Wee=Date.now(),!1):-1==t.status?(clearTimeout(r.ate),r.hte()):(f.ErrorMonitor.gi().di("unhandled error from Java",r.id(),{error:t.status}),r.h_.Yj(new l.kc.Pc(null,l.kc.oh.nh)),n.reject(new v(y.sE,t)))}).catch(function(e){return e instanceof v?n.reject(e):(f.ErrorMonitor.gi().di("unhandled error on requestLeaseDirect",r.id(),{error:e}),r.h_.Yj(new l.kc.Pc(null,l.kc.oh.nh)),n.reject(new v(y.sE,e)))}).finally(function(){clearTimeout(r.ate)})}return this.te().debug(this.id()+"Hive session check disabled - will directly resolve ticket (other active sessions may fail)"),n.resolve(!1)},e.prototype.nte=function(t,r,i){var s=e.ste(i,t);return f.ErrorMonitor.gi().di(r,this.id()),this.Zee=Date.now(),n.reject(new v(y.Xm,s))},e.ste=function(e,t,r){void 0===r&&(r="status");var i=t;if(e.body)try{i=JSON.parse(e.body)[r]}catch(e){}return i},e.prototype.XV=function(e){var t=this;this.Xee=Date.now(),this.te().debug(this.id()+"resolving ticket: "+e);var r=this.Bee(e);return s.ps(r,"application/json").then(function(i){return t.ite(i,r,e,t.Xee)},function(r){return r&&-1==r.status?t.hte():(f.ErrorMonitor.gi().di("error resolving ticket",t.id(),{ticket:e}),n.reject(new v(y.Xm,r)))}).catch(function(e){return f.ErrorMonitor.gi().di("error parsing ticket response",t.id(),e),n.reject(new v(y.sE,e))})},e.prototype.ite=function(e,t,r,i){var n=JSON.parse(e),o=s.cn(t,n.location);return n.version&&!this.version&&(this.version=n.version),this.Zee=Date.now(),this.te().debug(this.id()+"resolved ticket "+r+" -> "+o+" ["+(this.Zee-i)+"]"),o},e.prototype.tte=function(e,t,r){var i=this.p_(e,t);if(null!=i){var n=(new Date).getTime(),o=n-r;return o>=this.options_.warnSlowRespTimeout&&this.A_(new v(y.hE,this.id()+" The tech initialization took more than "+this.options_.warnSlowRespTimeout+" milliseconds"),i,o),s.HiveRequestFactory.bn(i.id,this.Fn()),i}throw new v(y.Xm,"error generating session")},e.prototype.p_=function(e,t){var r=new p.VA;r.AA(e);var i=new E(e,r,t,null);i.O_=!0;var n=c.tu.cA,s=n.exec(i.manifest);return null!=s?(i.Kee=s[1],i.id=s[5],i):null},e.prototype.Bee=function(e){var t=-1==e.indexOf("?")?"?":"&";return this.zee()?s.gs(c.tu.hA,c.tu.oA,this.h_.options().playerPort,e):s.gs(c.tu.aA,c.tu.oA,this.h_.options().playerPort,e,t,this.h_.tj())},e.prototype.rte=function(){var e=this;this.ate&&clearTimeout(this.ate),this.ate=setTimeout(function(){f.ErrorMonitor.gi().di("The Lease Request is taking more than "+e.options_.warnSlowRespTimeout+" secs",e.id())},this.options_.warnSlowRespTimeout)},e.prototype.$ee=function(){this.Jee=0,this.Wee=0,this.Xee=0,this.Zee=0},e.prototype.te=function(){return this.h_.te()},e.prototype.C_=function(){this.$ee()},e.prototype.hte=function(){var e=this,t="//"+c.tu.oA+":"+this.h_.options().monitorPort+"/version.json";return this.te().debug(this.id()+"checking if the monitor port is reachable"),s.ps(t).then(function(t){var r=JSON.parse(t);throw e.state=r.state,f.ErrorMonitor.gi().di("Verify client state",e.id(),{state:e.state}),e.h_.Yj(new l.kc.Pc(null,l.kc.oh.th)),new v(y.nE,"state "+e.state)}).fail(function(t){if(t instanceof v)return n.reject(t);if(t&&-1==t.status){var r="client not reachable";return e.h_.Yj(new l.kc.Pc(null,l.kc.oh.eh)),e.te().warn(e.id()+r),n.reject(new v(y.nE,r))}var r="VerifyClientState error";return f.ErrorMonitor.gi().di(r,e.id(),{error:t}),e.h_.Yj(new l.kc.Pc(null,l.kc.oh.th)),n.reject(new v(y.sE,r))})},e.prototype.zee=function(){return this.options_.supportLegacyClient&&(!this.version||this.version.substr(0,4)<"2016")},e}();T.c_="HiveJava",t.HiveJava=T},function(e,t,r){"use strict";var i=this&&this.Ns||function(e,t){function r(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},n=r(20),s=r(39);!function(e){!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.minVersion=s.tu.uA,t.initTimeout=6e4,t.warnSlowRespTimeout=5e3,t.supportLegacyClient=!1,t}return i(t,e),t}(n.gn.ou.au);e.Vee=t}(e.ou||(e.ou={}))}(t.gn||(t.gn={}))}]);
//# sourceMappingURL=bitmovin.hive.min.js.map


/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,